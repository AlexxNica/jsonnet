// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  asmConsts: [],
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) return 0; }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;








//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the a given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;


var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}



// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);

HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===

Runtime.asmConsts = [];





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 58128;
  /* global initializers */ __ATINIT__.push({ func: function() { __GLOBAL__sub_I_parser_cpp() } }, { func: function() { __GLOBAL__sub_I_iostream_cpp() } });
  

/* memory initializer */ allocate([67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,0,0,0,0,0,49,49,83,116,97,116,105,99,69,114,114,111,114,0,0,0,48,172,0,0,32,0,0,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,44,32,106,117,110,107,32,97,102,116,101,114,32,100,101,99,105,109,97,108,32,112,111,105,110,116,58,32,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,44,32,106,117,110,107,32,97,102,116,101,114,32,39,69,39,58,32,0,0,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,44,32,106,117,110,107,32,97,102,116,101,114,32,101,120,112,111,110,101,110,116,32,115,105,103,110,58,32,0,85,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103,0,0,0,0,0,84,114,117,110,99,97,116,101,100,32,117,110,105,99,111,100,101,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,46,0,0,0,0,77,97,108,102,111,114,109,101,100,32,117,110,105,99,111,100,101,32,101,115,99,97,112,101,32,99,104,97,114,97,99,116,101,114,44,32,0,0,0,0,115,104,111,117,108,100,32,98,101,32,104,101,120,58,32,39,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,67,111,100,101,112,111,105,110,116,32,111,117,116,32,111,102,32,97,115,99,105,105,32,114,97,110,103,101,46,0,0,0,84,114,117,110,99,97,116,101,100,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,46,0,0,0,0,85,110,107,110,111,119,110,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,58,32,39,0,0,0,0,77,117,108,116,105,45,108,105,110,101,32,99,111,109,109,101,110,116,32,104,97,115,32,110,111,32,116,101,114,109,105,110,97,116,105,110,103,32,42,47,46,0,0,0,0,0,0,0,84,101,120,116,32,98,108,111,99,107,39,115,32,102,105,114,115,116,32,108,105,110,101,32,109,117,115,116,32,115,116,97,114,116,32,119,105,116,104,32,119,104,105,116,101,115,112,97,99,101,46,0,0,0,0,0,119,115,95,99,104,97,114,115,32,62,32,48,0,0,0,0,108,101,120,101,114,46,99,112,112,0,0,0,0,0,0,0,106,115,111,110,110,101,116,95,108,101,120,0,0,0,0,0,85,110,101,120,112,101,99,116,101,100,32,69,79,70,0,0,84,101,120,116,32,98,108,111,99,107,32,110,111,116,32,116,101,114,109,105,110,97,116,101,100,32,119,105,116,104,32,124,124,124,0,0,0,0,0,0,67,111,117,108,100,32,110,111,116,32,108,101,120,32,116,104,101,32,99,104,97,114,97,99,116,101,114,32,0,0,0,0,99,111,100,101,32,0,0,0,64,0,0,0,0,0,0,0,16,4,0,0,1,0,0,0,2,0,0,0,56,0,0,0,248,255,255,255,16,4,0,0,3,0,0,0,4,0,0,0,192,255,255,255,192,255,255,255,16,4,0,0,5,0,0,0,6,0,0,0,0,0,0,0,220,2,0,0,68,3,0,0,132,3,0,0,152,3,0,0,172,3,0,0,192,3,0,0,108,3,0,0,88,3,0,0,4,3,0,0,240,2,0,0,64,0,0,0,0,0,0,0,64,189,0,0,7,0,0,0,8,0,0,0,56,0,0,0,248,255,255,255,64,189,0,0,9,0,0,0,10,0,0,0,192,255,255,255,192,255,255,255,64,189,0,0,11,0,0,0,12,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,32,188,0,0,13,0,0,0,14,0,0,0,192,255,255,255,192,255,255,255,32,188,0,0,15,0,0,0,16,0,0,0,56,0,0,0,0,0,0,0,176,188,0,0,17,0,0,0,18,0,0,0,200,255,255,255,200,255,255,255,176,188,0,0,19,0,0,0,20,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,88,172,0,0,200,3,0,0,64,189,0,0,0,0,0,0,0,0,0,0,168,4,0,0,21,0,0,0,22,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,88,172,0,0,96,4,0,0,168,187,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,97,107,101,65,114,114,97,121,0,0,0,0,0,0,0,115,122,0,0,0,0,0,0,102,117,110,99,0,0,0,0,112,111,119,0,0,0,0,0,120,0,0,0,0,0,0,0,110,0,0,0,0,0,0,0,102,108,111,111,114,0,0,0,99,101,105,108,0,0,0,0,115,113,114,116,0,0,0,0,115,105,110,0,0,0,0,0,99,111,115,0,0,0,0,0,116,97,110,0,0,0,0,0,97,115,105,110,0,0,0,0,97,99,111,115,0,0,0,0,97,116,97,110,0,0,0,0,116,121,112,101,0,0,0,0,102,105,108,116,101,114,0,0,97,114,114,0,0,0,0,0,111,98,106,101,99,116,72,97,115,69,120,0,0,0,0,0,111,98,106,0,0,0,0,0,102,0,0,0,0,0,0,0,105,110,99,95,104,105,100,100,101,110,0,0,0,0,0,0,108,101,110,103,116,104,0,0,111,98,106,101,99,116,70,105,101,108,100,115,69,120,0,0,99,111,100,101,112,111,105,110,116,0,0,0,0,0,0,0,115,116,114,0,0,0,0,0,99,104,97,114,0,0,0,0,108,111,103,0,0,0,0,0,101,120,112,0,0,0,0,0,109,97,110,116,105,115,115,97,0,0,0,0,0,0,0,0,101,120,112,111,110,101,110,116,0,0,0,0,0,0,0,0,109,111,100,117,108,111,0,0,97,0,0,0,0,0,0,0,98,0,0,0,0,0,0,0,101,120,116,86,97,114,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,122,101,100,32,98,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,58,32,0,115,116,100,46,106,115,111,110,110,101,116,0,0,0,0,0,47,42,10,67,111,112,121,114,105,103,104,116,32,50,48,49,53,32,71,111,111,103,108,101,32,73,110,99,46,32,65,108,108,32,114,105,103,104,116,115,32,114,101,115,101,114,118,101,100,46,10,10,76,105,99,101,110,115,101,100,32,117,110,100,101,114,32,116,104,101,32,65,112,97,99,104,101,32,76,105,99,101,110,115,101,44,32,86,101,114,115,105,111,110,32,50,46,48,32,40,116,104,101,32,34,76,105,99,101,110,115,101,34,41,59,10,121,111,117,32,109,97,121,32,110,111,116,32,117,115,101,32,116,104,105,115,32,102,105,108,101,32,101,120,99,101,112,116,32,105,110,32,99,111,109,112,108,105,97,110,99,101,32,119,105,116,104,32,116,104,101,32,76,105,99,101,110,115,101,46,10,89,111,117,32,109,97,121,32,111,98,116,97,105,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,76,105,99,101,110,115,101,32,97,116,10,10,32,32,32,32,104,116,116,112,58,47,47,119,119,119,46,97,112,97,99,104,101,46,111,114,103,47,108,105,99,101,110,115,101,115,47,76,73,67,69,78,83,69,45,50,46,48,10,10,85,110,108,101,115,115,32,114,101,113,117,105,114,101,100,32,98,121,32,97,112,112,108,105,99,97,98,108,101,32,108,97,119,32,111,114,32,97,103,114,101,101,100,32,116,111,32,105,110,32,119,114,105,116,105,110,103,44,32,115,111,102,116,119,97,114,101,10,100,105,115,116,114,105,98,117,116,101,100,32,117,110,100,101,114,32,116,104,101,32,76,105,99,101,110,115,101,32,105,115,32,100,105,115,116,114,105,98,117,116,101,100,32,111,110,32,97,110,32,34,65,83,32,73,83,34,32,66,65,83,73,83,44,10,87,73,84,72,79,85,84,32,87,65,82,82,65,78,84,73,69,83,32,79,82,32,67,79,78,68,73,84,73,79,78,83,32,79,70,32,65,78,89,32,75,73,78,68,44,32,101,105,116,104,101,114,32,101,120,112,114,101,115,115,32,111,114,32,105,109,112,108,105,101,100,46,10,83,101,101,32,116,104,101,32,76,105,99,101,110,115,101,32,102,111,114,32,116,104,101,32,115,112,101,99,105,102,105,99,32,108,97,110,103,117,97,103,101,32,103,111,118,101,114,110,105,110,103,32,112,101,114,109,105,115,115,105,111,110,115,32,97,110,100,10,108,105,109,105,116,97,116,105,111,110,115,32,117,110,100,101,114,32,116,104,101,32,76,105,99,101,110,115,101,46,10,42,47,10,10,47,42,32,84,104,105,115,32,105,115,32,116,104,101,32,74,115,111,110,110,101,116,32,115,116,97,110,100,97,114,100,32,108,105,98,114,97,114,121,44,32,97,116,32,108,101,97,115,116,32,116,104,101,32,112,97,114,116,115,32,111,102,32,105,116,32,116,104,97,116,32,97,114,101,32,119,114,105,116,116,101,110,32,105,110,32,74,115,111,110,110,101,116,46,10,32,42,10,32,42,32,84,104,101,114,101,32,97,114,101,32,115,111,109,101,32,110,97,116,105,118,101,32,109,101,116,104,111,100,115,32,97,115,32,119,101,108,108,44,32,119,104,105,99,104,32,97,114,101,32,100,101,102,105,110,101,100,32,105,110,32,116,104,101,32,105,110,116,101,114,112,114,101,116,101,114,32,97,110,100,32,97,100,100,101,100,32,116,111,32,116,104,105,115,10,32,42,32,102,105,108,101,46,32,32,73,116,32,105,115,32,110,101,118,101,114,32,110,101,99,101,115,115,97,114,121,32,116,111,32,105,109,112,111,114,116,32,115,116,100,46,106,115,111,110,110,101,116,44,32,105,116,32,105,115,32,101,109,98,101,100,100,101,100,32,105,110,116,111,32,116,104,101,32,105,110,116,101,114,112,114,101,116,101,114,32,97,116,10,32,42,32,99,111,109,112,105,108,101,45,116,105,109,101,32,97,110,100,32,97,117,116,111,109,97,116,105,99,97,108,108,121,32,105,109,112,111,114,116,101,100,32,105,110,116,111,32,97,108,108,32,111,116,104,101,114,32,74,115,111,110,110,101,116,32,112,114,111,103,114,97,109,115,46,10,32,42,47,10,123,10,10,32,32,32,32,108,111,99,97,108,32,115,116,100,32,61,32,115,101,108,102,44,10,10,32,32,32,32,116,111,83,116,114,105,110,103,40,97,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,32,97,32,101,108,115,101,32,34,34,32,43,32,97,44,10,10,32,32,32,32,115,117,98,115,116,114,40,115,116,114,44,32,102,114,111,109,44,32,108,101,110,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,115,116,114,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,102,105,114,115,116,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,115,116,114,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,102,114,111,109,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,102,114,111,109,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,108,101,110,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,116,104,105,114,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,108,101,110,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,108,101,110,32,60,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,116,104,105,114,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,103,114,101,97,116,101,114,32,116,104,97,110,32,122,101,114,111,44,32,103,111,116,32,34,32,43,32,108,101,110,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,34,44,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,108,101,110,44,32,102,117,110,99,116,105,111,110,40,105,41,32,115,116,114,91,105,32,43,32,102,114,111,109,93,41,41,44,10,10,32,32,32,32,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,44,32,102,117,110,99,116,105,111,110,40,105,41,32,115,116,114,91,105,93,41,44,10,10,32,32,32,32,115,112,108,105,116,40,115,116,114,44,32,99,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,115,116,114,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,115,112,108,105,116,32,102,105,114,115,116,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,115,116,114,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,99,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,115,112,108,105,116,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,99,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,99,41,32,33,61,32,49,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,115,112,108,105,116,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,104,97,118,101,32,108,101,110,103,116,104,32,49,44,32,103,111,116,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,99,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,115,116,114,44,32,100,101,108,105,109,44,32,105,44,32,97,114,114,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,105,50,32,61,32,105,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,32,43,32,91,118,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,100,101,108,105,109,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,100,101,108,105,109,44,32,105,50,44,32,97,114,114,32,43,32,91,118,93,44,32,34,34,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,100,101,108,105,109,44,32,105,50,44,32,97,114,114,44,32,118,32,43,32,99,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,99,44,32,48,44,32,91,93,44,32,34,34,41,44,10,10,32,32,32,32,114,97,110,103,101,40,102,114,111,109,44,32,116,111,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,116,111,32,45,32,102,114,111,109,32,43,32,49,44,32,102,117,110,99,116,105,111,110,40,105,41,32,105,32,43,32,102,114,111,109,41,44,10,10,32,32,32,32,109,111,100,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,61,61,32,34,110,117,109,98,101,114,34,32,38,38,32,115,116,100,46,116,121,112,101,40,98,41,32,61,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,111,100,117,108,111,40,97,44,32,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,102,111,114,109,97,116,40,97,44,32,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,79,112,101,114,97,116,111,114,32,37,32,99,97,110,110,111,116,32,98,101,32,117,115,101,100,32,111,110,32,116,121,112,101,115,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,41,32,43,32,34,32,97,110,100,32,34,32,43,32,115,116,100,46,116,121,112,101,40,98,41,32,43,32,34,46,34,44,10,10,32,32,32,32,109,97,112,40,102,117,110,99,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,102,117,110,99,41,32,33,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,109,97,112,32,102,105,114,115,116,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,102,117,110,99,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,97,114,114,97,121,34,32,38,38,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,109,97,112,32,115,101,99,111,110,100,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,97,114,114,97,121,32,47,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,44,32,102,117,110,99,116,105,111,110,40,105,41,32,102,117,110,99,40,97,114,114,91,105,93,41,41,44,10,10,32,32,32,32,106,111,105,110,40,115,101,112,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,97,114,114,44,32,105,44,32,102,105,114,115,116,44,32,114,117,110,110,105,110,103,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,97,114,114,91,105,93,32,61,61,32,110,117,108,108,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,49,44,32,102,105,114,115,116,44,32,114,117,110,110,105,110,103,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,102,105,114,115,116,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,49,44,32,102,97,108,115,101,44,32,114,117,110,110,105,110,103,32,43,32,97,114,114,91,105,93,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,49,44,32,102,97,108,115,101,44,32,114,117,110,110,105,110,103,32,43,32,115,101,112,32,43,32,97,114,114,91,105,93,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,106,111,105,110,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,114,114,97,121,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,115,101,112,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,48,44,32,116,114,117,101,44,32,34,34,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,115,101,112,41,32,61,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,48,44,32,116,114,117,101,44,32,91,93,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,106,111,105,110,32,102,105,114,115,116,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,115,116,114,105,110,103,32,111,114,32,97,114,114,97,121,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,115,101,112,41,44,10,10,32,32,32,32,108,105,110,101,115,40,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,92,110,34,44,32,97,114,114,32,43,32,91,34,34,93,41,44,10,10,32,32,32,32,102,111,114,109,97,116,40,115,116,114,44,32,118,97,108,115,41,58,58,10,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,32,32,32,32,32,32,32,32,47,47,32,80,97,114,115,101,32,116,104,101,32,109,105,110,105,45,108,97,110,103,117,97,103,101,32,47,47,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,109,97,112,112,105,110,103,95,107,101,121,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,40,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,106,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,33,61,32,34,41,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,106,32,43,32,49,44,32,118,58,32,118,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,105,32,43,32,49,44,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,44,32,118,58,32,110,117,108,108,32,125,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,99,102,108,97,103,115,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,106,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,35,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,97,108,116,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,122,101,114,111,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,45,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,108,101,102,116,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,32,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,98,108,97,110,107,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,43,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,115,105,103,110,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,106,44,32,118,58,32,118,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,105,44,32,123,32,97,108,116,58,32,102,97,108,115,101,44,32,122,101,114,111,58,32,102,97,108,115,101,44,32,108,101,102,116,58,32,102,97,108,115,101,44,32,98,108,97,110,107,58,32,102,97,108,115,101,44,32,115,105,103,110,58,32,102,97,108,115,101,125,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,102,105,101,108,100,95,119,105,100,116,104,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,60,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,38,38,32,115,116,114,91,105,93,32,61,61,32,34,42,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,43,49,44,32,118,58,32,34,42,34,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,106,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,48,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,49,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,50,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,50,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,51,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,51,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,52,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,52,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,53,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,53,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,54,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,54,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,55,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,55,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,56,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,56,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,57,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,57,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,106,44,32,118,58,32,118,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,105,44,32,48,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,112,114,101,99,105,115,105,111,110,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,46,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,95,112,97,114,115,101,95,102,105,101,108,100,95,119,105,100,116,104,40,115,116,114,44,32,105,32,43,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,44,32,118,58,32,110,117,108,108,32,125,59,10,10,32,32,32,32,32,32,32,32,47,47,32,73,103,110,111,114,101,100,44,32,105,102,32,105,116,32,101,120,105,115,116,115,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,108,101,110,103,116,104,95,109,111,100,105,102,105,101,114,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,104,34,32,124,124,32,99,32,61,61,32,34,108,34,32,124,124,32,99,32,61,61,32,34,76,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,32,43,32,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,114,115,101,95,99,111,110,118,95,116,121,112,101,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,100,34,32,124,124,32,99,32,61,61,32,34,105,34,32,124,124,32,99,32,61,61,32,34,117,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,100,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,111,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,111,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,120,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,120,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,88,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,120,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,101,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,101,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,69,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,101,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,102,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,102,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,70,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,102,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,103,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,71,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,103,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,99,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,99,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,115,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,115,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,37,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,85,110,114,101,99,111,103,110,105,115,101,100,32,99,111,110,118,101,114,115,105,111,110,32,116,121,112,101,58,32,34,32,43,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,10,32,32,32,32,32,32,32,32,47,47,32,80,97,114,115,101,100,32,105,110,105,116,105,97,108,32,37,44,32,110,111,119,32,116,104,101,32,114,101,115,116,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,114,115,101,95,99,111,100,101,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,109,107,101,121,32,61,32,116,114,121,95,112,97,114,115,101,95,109,97,112,112,105,110,103,95,107,101,121,40,115,116,114,44,32,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,102,108,97,103,115,32,61,32,116,114,121,95,112,97,114,115,101,95,99,102,108,97,103,115,40,115,116,114,44,32,109,107,101,121,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,119,32,61,32,116,114,121,95,112,97,114,115,101,95,102,105,101,108,100,95,119,105,100,116,104,40,115,116,114,44,32,99,102,108,97,103,115,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,114,101,99,32,61,32,116,114,121,95,112,97,114,115,101,95,112,114,101,99,105,115,105,111,110,40,115,116,114,44,32,102,119,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,108,101,110,95,109,111,100,32,61,32,116,114,121,95,112,97,114,115,101,95,108,101,110,103,116,104,95,109,111,100,105,102,105,101,114,40,115,116,114,44,32,112,114,101,99,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,116,121,112,101,32,61,32,112,97,114,115,101,95,99,111,110,118,95,116,121,112,101,40,115,116,114,44,32,108,101,110,95,109,111,100,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,58,32,99,116,121,112,101,46,105,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,107,101,121,58,32,109,107,101,121,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,58,32,99,102,108,97,103,115,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,119,58,32,102,119,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,101,99,58,32,112,114,101,99,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,116,121,112,101,58,32,99,116,121,112,101,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,112,115,58,32,99,116,121,112,101,46,99,97,112,115,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,10,32,32,32,32,32,32,32,32,47,47,32,80,97,114,115,101,32,97,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,40,99,111,110,116,97,105,110,105,110,103,32,110,111,110,101,32,111,114,32,109,111,114,101,32,37,32,102,111,114,109,97,116,32,116,97,103,115,41,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,105,44,32,111,117,116,41,32,61,32,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,117,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,32,61,32,112,97,114,115,101,95,99,111,100,101,40,115,116,114,44,32,105,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,114,46,105,44,32,111,117,116,43,91,114,46,99,111,100,101,93,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,108,97,115,116,32,61,32,111,117,116,91,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,45,49,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,112,112,101,110,100,32,61,32,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,32,62,32,48,32,38,38,32,115,116,100,46,116,121,112,101,40,108,97,115,116,41,32,61,61,32,34,115,116,114,105,110,103,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,105,32,43,32,49,44,32,105,102,32,97,112,112,101,110,100,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,40,105,41,32,105,102,32,105,32,60,32,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,45,49,32,116,104,101,110,32,111,117,116,91,105,93,32,101,108,115,101,32,108,97,115,116,32,43,32,99,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,32,43,32,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,40,105,41,32,105,102,32,105,32,60,32,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,32,116,104,101,110,32,111,117,116,91,105,93,32,101,108,115,101,32,99,41,41,32,116,97,105,108,115,116,114,105,99,116,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,100,101,115,32,61,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,48,44,32,91,93,41,59,10,10,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,32,32,32,32,32,32,32,32,47,47,32,70,111,114,109,97,116,32,116,104,101,32,118,97,108,117,101,115,32,47,47,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,10,32,32,32,32,32,32,32,32,47,47,32,85,115,101,102,117,108,32,117,116,105,108,105,116,105,101,115,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,100,100,105,110,103,40,119,44,32,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,119,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,119,32,60,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,119,32,45,32,49,44,32,118,32,43,32,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,119,44,32,34,34,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,65,100,100,32,115,32,116,111,32,116,104,101,32,108,101,102,116,32,111,102,32,115,116,114,32,115,111,32,116,104,97,116,32,105,116,115,32,108,101,110,103,116,104,32,105,115,32,97,116,32,108,101,97,115,116,32,119,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,100,95,108,101,102,116,40,115,116,114,44,32,119,44,32,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,100,105,110,103,40,119,32,45,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,44,32,115,41,32,43,32,115,116,114,59,10,10,32,32,32,32,32,32,32,32,47,47,32,65,100,100,32,115,32,116,111,32,116,104,101,32,114,105,103,104,116,32,111,102,32,115,116,114,32,115,111,32,116,104,97,116,32,105,116,115,32,108,101,110,103,116,104,32,105,115,32,97,116,32,108,101,97,115,116,32,119,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,100,95,114,105,103,104,116,40,115,116,114,44,32,119,44,32,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,32,43,32,112,97,100,100,105,110,103,40,119,32,45,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,44,32,115,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,110,32,105,110,116,101,103,101,114,32,40,101,46,103,46,44,32,100,101,99,105,109,97,108,32,111,114,32,111,99,116,97,108,41,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,105,110,116,40,110,95,95,44,32,109,105,110,95,99,104,97,114,115,44,32,109,105,110,95,100,105,103,105,116,115,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,114,97,100,105,120,44,32,122,101,114,111,95,112,114,101,102,105,120,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,95,32,61,32,115,116,100,46,97,98,115,40,110,95,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,110,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,110,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,122,101,114,111,95,112,114,101,102,105,120,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,32,47,32,114,97,100,105,120,41,41,32,43,32,40,110,32,37,32,114,97,100,105,120,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,101,99,32,61,32,105,102,32,115,116,100,46,102,108,111,111,114,40,110,95,41,32,61,61,32,48,32,116,104,101,110,32,34,48,34,32,101,108,115,101,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,95,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,101,103,32,61,32,110,95,95,32,60,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,109,105,110,95,99,104,97,114,115,32,45,32,40,105,102,32,110,101,103,32,124,124,32,98,108,97,110,107,32,124,124,32,115,105,103,110,32,116,104,101,110,32,49,32,101,108,115,101,32,48,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,50,32,61,32,115,116,100,46,109,97,120,40,122,112,44,32,109,105,110,95,100,105,103,105,116,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,101,99,50,32,61,32,112,97,100,95,108,101,102,116,40,100,101,99,44,32,122,112,50,44,32,34,48,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,40,105,102,32,110,101,103,32,116,104,101,110,32,34,45,34,32,101,108,115,101,32,105,102,32,115,105,103,110,32,116,104,101,110,32,34,43,34,32,101,108,115,101,32,105,102,32,98,108,97,110,107,32,116,104,101,110,32,34,32,34,32,101,108,115,101,32,34,34,41,32,43,32,100,101,99,50,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,110,32,105,110,116,101,103,101,114,32,105,110,32,104,101,120,97,100,101,99,105,109,97,108,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,104,101,120,40,110,95,95,44,32,109,105,110,95,99,104,97,114,115,44,32,109,105,110,95,100,105,103,105,116,115,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,97,100,100,95,122,101,114,111,120,44,32,99,97,112,105,116,97,108,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,117,109,101,114,97,108,115,32,61,32,91,48,44,32,49,44,32,50,44,32,51,44,32,52,44,32,53,44,32,54,44,32,55,44,32,56,44,32,57,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,102,32,99,97,112,105,116,97,108,115,32,116,104,101,110,32,91,34,65,34,44,32,34,66,34,44,32,34,67,34,44,32,34,68,34,44,32,34,69,34,44,32,34,70,34,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,91,34,97,34,44,32,34,98,34,44,32,34,99,34,44,32,34,100,34,44,32,34,101,34,44,32,34,102,34,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,95,32,61,32,115,116,100,46,97,98,115,40,110,95,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,110,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,110,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,32,47,32,49,54,41,41,32,43,32,110,117,109,101,114,97,108,115,91,110,32,37,32,49,54,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,104,101,120,32,61,32,105,102,32,115,116,100,46,102,108,111,111,114,40,110,95,41,32,61,61,32,48,32,116,104,101,110,32,34,48,34,32,101,108,115,101,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,95,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,101,103,32,61,32,110,95,95,32,60,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,109,105,110,95,99,104,97,114,115,32,45,32,40,105,102,32,110,101,103,32,124,124,32,98,108,97,110,107,32,124,124,32,115,105,103,110,32,116,104,101,110,32,49,32,101,108,115,101,32,48,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,45,32,40,105,102,32,97,100,100,95,122,101,114,111,120,32,116,104,101,110,32,50,32,101,108,115,101,32,48,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,50,32,61,32,115,116,100,46,109,97,120,40,122,112,44,32,109,105,110,95,100,105,103,105,116,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,104,101,120,50,32,61,32,40,105,102,32,97,100,100,95,122,101,114,111,120,32,116,104,101,110,32,40,105,102,32,99,97,112,105,116,97,108,115,32,116,104,101,110,32,34,48,88,34,32,101,108,115,101,32,34,48,120,34,41,32,101,108,115,101,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,112,97,100,95,108,101,102,116,40,104,101,120,44,32,122,112,50,44,32,34,48,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,40,105,102,32,110,101,103,32,116,104,101,110,32,34,45,34,32,101,108,115,101,32,105,102,32,115,105,103,110,32,116,104,101,110,32,34,43,34,32,101,108,115,101,32,105,102,32,98,108,97,110,107,32,116,104,101,110,32,34,32,34,32,101,108,115,101,32,34,34,41,32,43,32,104,101,120,50,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,105,112,95,116,114,97,105,108,105,110,103,95,122,101,114,111,40,115,116,114,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,60,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,114,91,105,93,32,61,61,32,34,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,105,32,45,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,115,117,98,115,116,114,40,115,116,114,44,32,48,44,32,105,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,45,32,49,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,105,110,32,100,101,99,105,109,97,108,32,102,111,114,109,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,110,95,95,44,32,122,101,114,111,95,112,97,100,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,101,110,115,117,114,101,95,112,116,44,32,116,114,97,105,108,105,110,103,44,32,112,114,101,99,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,95,32,61,32,115,116,100,46,97,98,115,40,110,95,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,119,104,111,108,101,32,61,32,115,116,100,46,102,108,111,111,114,40,110,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,111,116,95,115,105,122,101,32,61,32,105,102,32,112,114,101,99,32,61,61,32,48,32,38,38,32,33,101,110,115,117,114,101,95,112,116,32,116,104,101,110,32,48,32,101,108,115,101,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,122,101,114,111,95,112,97,100,32,45,32,112,114,101,99,32,45,32,100,111,116,95,115,105,122,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,114,101,110,100,101,114,95,105,110,116,40,110,95,95,32,47,32,110,95,32,42,32,119,104,111,108,101,44,32,122,112,44,32,48,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,49,48,44,32,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,112,114,101,99,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,32,43,32,105,102,32,101,110,115,117,114,101,95,112,116,32,116,104,101,110,32,34,46,34,32,101,108,115,101,32,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,114,97,99,32,61,32,115,116,100,46,102,108,111,111,114,40,40,110,95,32,45,32,119,104,111,108,101,41,32,42,32,115,116,100,46,112,111,119,40,49,48,44,32,112,114,101,99,41,32,43,32,48,46,53,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,116,114,97,105,108,105,110,103,32,124,124,32,102,114,97,99,32,62,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,114,97,99,95,115,116,114,32,61,32,114,101,110,100,101,114,95,105,110,116,40,102,114,97,99,44,32,112,114,101,99,44,32,48,44,32,102,97,108,115,101,44,32,102,97,108,115,101,44,32,49,48,44,32,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,32,43,32,34,46,34,32,43,32,105,102,32,33,116,114,97,105,108,105,110,103,32,116,104,101,110,32,115,116,114,105,112,95,116,114,97,105,108,105,110,103,95,122,101,114,111,40,102,114,97,99,95,115,116,114,41,32,101,108,115,101,32,102,114,97,99,95,115,116,114,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,105,110,32,115,99,105,101,110,116,105,102,105,99,32,102,111,114,109,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,102,108,111,97,116,95,115,99,105,40,110,95,95,44,32,122,101,114,111,95,112,97,100,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,101,110,115,117,114,101,95,112,116,44,32,116,114,97,105,108,105,110,103,44,32,99,97,112,115,44,32,112,114,101,99,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,101,120,112,111,110,101,110,116,32,61,32,115,116,100,46,102,108,111,111,114,40,115,116,100,46,108,111,103,40,115,116,100,46,97,98,115,40,110,95,95,41,41,32,47,32,115,116,100,46,108,111,103,40,49,48,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,117,102,102,32,61,32,40,105,102,32,99,97,112,115,32,116,104,101,110,32,34,69,34,32,101,108,115,101,32,34,101,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,114,101,110,100,101,114,95,105,110,116,40,101,120,112,111,110,101,110,116,44,32,51,44,32,48,44,32,102,97,108,115,101,44,32,116,114,117,101,44,32,49,48,44,32,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,109,97,110,116,105,115,115,97,32,61,32,110,95,95,32,47,32,115,116,100,46,112,111,119,40,49,48,44,32,101,120,112,111,110,101,110,116,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,50,32,61,32,122,101,114,111,95,112,97,100,32,45,32,115,116,100,46,108,101,110,103,116,104,40,115,117,102,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,109,97,110,116,105,115,115,97,44,32,122,112,50,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,101,110,115,117,114,101,95,112,116,44,32,116,114,97,105,108,105,110,103,44,32,112,114,101,99,41,32,43,32,115,117,102,102,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,32,118,97,108,117,101,32,119,105,116,104,32,97,110,32,97,114,98,105,116,114,97,114,121,32,102,111,114,109,97,116,32,99,111,100,101,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,111,114,109,97,116,95,99,111,100,101,40,118,97,108,44,32,99,111,100,101,44,32,102,119,44,32,112,114,101,99,95,111,114,95,110,117,108,108,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,102,108,97,103,115,32,61,32,99,111,100,101,46,99,102,108,97,103,115,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,112,112,114,101,99,32,61,32,105,102,32,112,114,101,99,95,111,114,95,110,117,108,108,32,33,61,32,110,117,108,108,32,116,104,101,110,32,112,114,101,99,95,111,114,95,110,117,108,108,32,101,108,115,101,32,54,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,105,112,114,101,99,32,61,32,105,102,32,112,114,101,99,95,111,114,95,110,117,108,108,32,33,61,32,110,117,108,108,32,116,104,101,110,32,112,114,101,99,95,111,114,95,110,117,108,108,32,101,108,115,101,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,105,102,32,99,102,108,97,103,115,46,122,101,114,111,32,38,38,32,33,99,102,108,97,103,115,46,108,101,102,116,32,116,104,101,110,32,102,119,32,101,108,115,101,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,115,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,116,111,83,116,114,105,110,103,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,100,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,105,110,116,40,118,97,108,44,32,122,112,44,32,105,112,114,101,99,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,49,48,44,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,111,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,101,114,111,95,112,114,101,102,105,120,32,61,32,105,102,32,99,102,108,97,103,115,46,97,108,116,32,116,104,101,110,32,34,48,34,32,101,108,115,101,32,34,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,105,110,116,40,118,97,108,44,32,122,112,44,32,105,112,114,101,99,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,56,44,32,122,101,114,111,95,112,114,101,102,105,120,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,120,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,104,101,120,40,118,97,108,44,32,122,112,44,32,105,112,114,101,99,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,99,97,112,115,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,102,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,32,116,114,117,101,44,32,102,112,112,114,101,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,101,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,115,99,105,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,32,116,114,117,101,44,32,99,111,100,101,46,99,97,112,115,44,32,102,112,112,114,101,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,101,120,112,111,110,101,110,116,32,61,32,115,116,100,46,102,108,111,111,114,40,115,116,100,46,108,111,103,40,115,116,100,46,97,98,115,40,118,97,108,41,41,47,115,116,100,46,108,111,103,40,49,48,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,101,120,112,111,110,101,110,116,32,60,32,45,52,32,124,124,32,101,120,112,111,110,101,110,116,32,62,61,32,102,112,112,114,101,99,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,115,99,105,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,97,108,116,44,32,99,111,100,101,46,99,97,112,115,44,32,102,112,112,114,101,99,32,45,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,105,103,105,116,115,95,98,101,102,111,114,101,95,112,116,32,61,32,115,116,100,46,109,97,120,40,49,44,32,101,120,112,111,110,101,110,116,43,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
/* memory initializer */ allocate([110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,97,108,116,44,32,102,112,112,114,101,99,32,45,32,100,105,103,105,116,115,95,98,101,102,111,114,101,95,112,116,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,99,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,61,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,99,104,97,114,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,118,97,108,41,32,61,61,32,49,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,108,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,37,99,32,101,120,112,101,99,116,101,100,32,49,45,115,105,122,101,100,32,115,116,114,105,110,103,32,103,111,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,37,99,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,32,47,32,115,116,114,105,110,103,44,32,103,111,116,58,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,85,110,107,110,111,119,110,32,99,111,100,101,58,32,34,32,43,32,99,111,100,101,46,99,116,121,112,101,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,32,112,97,114,115,101,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,119,105,116,104,32,97,110,32,97,114,114,97,121,32,111,102,32,118,97,108,117,101,115,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,97,114,114,44,32,105,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,99,111,100,101,115,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,60,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,84,111,111,32,109,97,110,121,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,43,32,34,44,32,101,120,112,101,99,116,101,100,32,34,32,43,32,106,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,100,101,32,61,32,99,111,100,101,115,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,99,111,100,101,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,97,114,114,44,32,105,32,43,32,49,44,32,106,44,32,118,32,43,32,99,111,100,101,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,109,112,32,61,32,105,102,32,99,111,100,101,46,102,119,32,61,61,32,34,42,34,32,116,104,101,110,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,106,32,43,32,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,119,58,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,101,110,111,117,103,104,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,91,106,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,106,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,119,58,32,99,111,100,101,46,102,119,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,109,112,50,32,61,32,105,102,32,99,111,100,101,46,112,114,101,99,32,61,61,32,34,42,34,32,116,104,101,110,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,116,109,112,46,106,32,43,32,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,101,99,58,32,105,102,32,116,109,112,46,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,101,110,111,117,103,104,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,91,116,109,112,46,106,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,116,109,112,46,106,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,101,99,58,32,99,111,100,101,46,112,114,101,99,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,106,50,32,61,32,116,109,112,50,46,106,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,97,108,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,50,32,60,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,91,106,50,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,101,110,111,117,103,104,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,44,32,103,111,116,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,37,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,40,118,97,108,44,32,99,111,100,101,44,32,116,109,112,46,102,119,44,32,116,109,112,50,46,112,114,101,99,44,32,106,50,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,95,112,97,100,100,101,100,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,102,108,97,103,115,46,108,101,102,116,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,114,105,103,104,116,40,115,44,32,116,109,112,46,102,119,44,32,34,32,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,108,101,102,116,40,115,44,32,116,109,112,46,102,119,44,32,34,32,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,97,114,114,44,32,105,32,43,32,49,44,32,106,50,32,43,32,49,44,32,118,32,43,32,115,95,112,97,100,100,101,100,41,32,116,97,105,108,115,116,114,105,99,116,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,32,112,97,114,115,101,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,119,105,116,104,32,97,110,32,111,98,106,101,99,116,32,111,102,32,118,97,108,117,101,115,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,111,98,106,44,32,105,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,99,111,100,101,115,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,100,101,32,61,32,99,111,100,101,115,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,99,111,100,101,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,111,98,106,44,32,105,32,43,32,49,44,32,118,32,43,32,99,111,100,101,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,109,107,101,121,32,61,61,32,110,117,108,108,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,77,97,112,112,105,110,103,32,107,101,121,115,32,114,101,113,117,105,114,101,100,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,109,107,101,121,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,119,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,102,119,32,61,61,32,34,42,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,67,97,110,110,111,116,32,117,115,101,32,42,32,102,105,101,108,100,32,119,105,100,116,104,32,119,105,116,104,32,111,98,106,101,99,116,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,102,119,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,114,101,99,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,112,114,101,99,32,61,61,32,34,42,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,67,97,110,110,111,116,32,117,115,101,32,42,32,112,114,101,99,105,115,105,111,110,32,119,105,116,104,32,111,98,106,101,99,116,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,112,114,101,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,97,108,32,61,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,111,98,106,101,99,116,72,97,115,40,111,98,106,44,32,102,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,98,106,91,102,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,32,115,117,99,104,32,102,105,101,108,100,58,32,34,32,43,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,37,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,40,118,97,108,44,32,99,111,100,101,44,32,102,119,44,32,112,114,101,99,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,95,112,97,100,100,101,100,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,102,108,97,103,115,46,108,101,102,116,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,114,105,103,104,116,40,115,44,32,102,119,44,32,34,32,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,108,101,102,116,40,115,44,32,102,119,44,32,34,32,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,111,98,106,44,32,105,32,43,32,49,44,32,118,32,43,32,115,95,112,97,100,100,101,100,41,32,116,97,105,108,115,116,114,105,99,116,59,10,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,115,41,32,61,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,118,97,108,115,44,32,48,44,32,48,44,32,34,34,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,115,41,32,61,61,32,34,111,98,106,101,99,116,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,118,97,108,115,44,32,48,44,32,34,34,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,91,118,97,108,115,93,44,32,48,44,32,48,44,32,34,34,41,44,10,10,32,32,32,32,102,111,108,100,114,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,114,117,110,110,105,110,103,44,32,105,100,120,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,100,120,32,60,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,102,117,110,99,40,97,114,114,91,105,100,120,93,44,32,114,117,110,110,105,110,103,41,44,32,105,100,120,32,45,32,49,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,44,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,45,32,49,41,44,10,10,32,32,32,32,102,111,108,100,108,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,114,117,110,110,105,110,103,44,32,105,100,120,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,100,120,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,102,117,110,99,40,114,117,110,110,105,110,103,44,32,97,114,114,91,105,100,120,93,41,44,32,105,100,120,32,43,32,49,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,44,32,48,41,44,10,10,10,32,32,32,32,102,105,108,116,101,114,77,97,112,40,102,105,108,116,101,114,95,102,117,110,99,44,32,109,97,112,95,102,117,110,99,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,102,105,108,116,101,114,95,102,117,110,99,41,32,33,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,102,105,108,116,101,114,77,97,112,32,102,105,114,115,116,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,102,105,108,116,101,114,95,102,117,110,99,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,109,97,112,95,102,117,110,99,41,32,33,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,102,105,108,116,101,114,77,97,112,32,115,101,99,111,110,100,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,109,97,112,95,102,117,110,99,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,102,105,108,116,101,114,77,97,112,32,116,104,105,114,100,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,97,114,114,97,121,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,112,40,109,97,112,95,102,117,110,99,44,32,115,116,100,46,102,105,108,116,101,114,40,102,105,108,116,101,114,95,102,117,110,99,44,32,97,114,114,41,41,44,10,10,32,32,32,32,97,115,115,101,114,116,69,113,117,97,108,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,97,32,61,61,32,98,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,116,114,117,101,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,46,32,34,32,43,32,97,32,43,32,34,32,33,61,32,34,32,43,32,98,44,10,10,32,32,32,32,97,98,115,40,110,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,110,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,97,98,115,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,110,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,110,32,62,32,48,32,116,104,101,110,32,110,32,101,108,115,101,32,45,110,44,10,10,32,32,32,32,109,97,120,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,102,105,114,115,116,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,98,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,115,101,99,111,110,100,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,97,32,62,32,98,32,116,104,101,110,32,97,32,101,108,115,101,32,98,44,10,10,32,32,32,32,109,105,110,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,102,105,114,115,116,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,98,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,115,101,99,111,110,100,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,97,32,60,32,98,32,116,104,101,110,32,97,32,101,108,115,101,32,98,44,10,10,32,32,32,32,102,108,97,116,116,101,110,65,114,114,97,121,115,40,97,114,114,115,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,98,41,32,97,32,43,32,98,44,32,97,114,114,115,44,32,91,93,41,44,10,10,32,32,32,32,109,97,110,105,102,101,115,116,73,110,105,40,105,110,105,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,98,111,100,121,95,108,105,110,101,115,40,98,111,100,121,41,32,61,32,91,32,34,37,115,32,61,32,37,115,34,32,37,32,91,107,44,32,98,111,100,121,91,107,93,93,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,98,111,100,121,41,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,101,99,116,105,111,110,95,108,105,110,101,115,40,115,110,97,109,101,44,32,115,98,111,100,121,41,32,61,32,91,32,34,91,37,115,93,34,32,37,32,91,115,110,97,109,101,93,32,93,32,43,32,98,111,100,121,95,108,105,110,101,115,40,115,98,111,100,121,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,97,105,110,95,98,111,100,121,32,61,32,105,102,32,115,116,100,46,111,98,106,101,99,116,72,97,115,40,105,110,105,44,32,34,109,97,105,110,34,41,32,116,104,101,110,32,98,111,100,121,95,108,105,110,101,115,40,105,110,105,46,109,97,105,110,41,32,101,108,115,101,32,91,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,108,108,95,115,101,99,116,105,111,110,115,32,61,32,91,115,101,99,116,105,111,110,95,108,105,110,101,115,40,107,44,32,105,110,105,46,115,101,99,116,105,111,110,115,91,107,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,105,110,105,46,115,101,99,116,105,111,110,115,41,93,59,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,92,110,34,44,32,109,97,105,110,95,98,111,100,121,32,43,32,115,116,100,46,102,108,97,116,116,101,110,65,114,114,97,121,115,40,97,108,108,95,115,101,99,116,105,111,110,115,41,32,43,32,91,34,34,93,41,44,10,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,74,115,111,110,40,115,116,114,95,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,115,116,100,46,116,111,83,116,114,105,110,103,40,115,116,114,95,41,59,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,97,110,115,40,99,104,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,104,32,61,61,32,34,92,34,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,92,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,92,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,92,92,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,98,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,98,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,102,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,102,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,110,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,114,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,116,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,116,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,117,48,48,48,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,117,48,48,48,48,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,112,32,61,32,115,116,100,46,99,111,100,101,112,111,105,110,116,40,99,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,112,32,60,32,51,50,32,124,124,32,99,112,32,62,32,49,50,54,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,117,37,48,52,120,34,32,37,32,91,99,112,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,59,10,32,32,32,32,32,32,32,32,34,92,34,37,115,92,34,34,32,37,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,97,32,43,32,116,114,97,110,115,40,98,41,44,32,115,116,100,46,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,44,32,34,34,41,44,10,32,32,32,32,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,80,121,116,104,111,110,40,115,116,114,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,101,115,99,97,112,101,83,116,114,105,110,103,74,115,111,110,40,115,116,114,41,44,10,32,32,32,32,32,32,32,32,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,66,97,115,104,40,115,116,114,95,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,115,116,100,46,116,111,83,116,114,105,110,103,40,115,116,114,95,41,59,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,97,110,115,40,99,104,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,104,32,61,61,32,34,39,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,39,92,34,39,92,34,39,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,59,10,32,32,32,32,32,32,32,32,34,39,37,115,39,34,32,37,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,97,32,43,32,116,114,97,110,115,40,98,41,44,32,115,116,100,46,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,44,32,34,34,41,44,10,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,68,111,108,108,97,114,115,40,115,116,114,95,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,115,116,100,46,116,111,83,116,114,105,110,103,40,115,116,114,95,41,59,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,97,110,115,40,99,104,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,104,32,61,61,32,34,36,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,36,36,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,59,10,32,32,32,32,32,32,32,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,97,32,43,32,116,114,97,110,115,40,98,41,44,32,115,116,100,46,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,44,32,34,34,41,44,10,10,32,32,32,32,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,111,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,111,98,106,101,99,116,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,105,101,108,100,115,32,61,32,91,34,37,115,58,32,37,115,34,32,37,32,91,115,116,100,46,101,115,99,97,112,101,83,116,114,105,110,103,80,121,116,104,111,110,40,107,41,44,32,115,116,100,46,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,111,91,107,93,41,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,111,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,34,123,37,115,125,34,32,37,32,91,115,116,100,46,106,111,105,110,40,34,44,32,34,44,32,102,105,101,108,100,115,41,93,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,91,37,115,93,34,32,37,32,91,115,116,100,46,106,111,105,110,40,34,44,32,34,44,32,91,115,116,100,46,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,111,50,41,32,102,111,114,32,111,50,32,105,110,32,111,93,41,93,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,37,115,34,32,37,32,91,115,116,100,46,101,115,99,97,112,101,83,116,114,105,110,103,80,121,116,104,111,110,40,111,41,93,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,99,97,110,110,111,116,32,109,97,110,105,102,101,115,116,32,102,117,110,99,116,105,111,110,34,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,116,111,83,116,114,105,110,103,40,111,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,111,32,61,61,32,116,114,117,101,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,84,114,117,101,34,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,111,32,61,61,32,102,97,108,115,101,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,97,108,115,101,34,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,111,32,61,61,32,110,117,108,108,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,78,111,110,101,34,44,10,10,32,32,32,32,109,97,110,105,102,101,115,116,80,121,116,104,111,110,86,97,114,115,40,99,111,110,102,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,97,114,115,32,61,32,91,34,37,115,32,61,32,37,115,34,32,37,32,91,107,44,32,115,116,100,46,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,99,111,110,102,91,107,93,41,93,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,99,111,110,102,41,93,59,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,92,110,34,44,32,118,97,114,115,32,43,32,91,34,34,93,41,44,10,10,10,32,32,32,32,108,111,99,97,108,32,98,97,115,101,54,52,95,116,97,98,108,101,32,61,32,34,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47,34,44,10,32,32,32,32,108,111,99,97,108,32,98,97,115,101,54,52,95,105,110,118,32,61,32,123,91,98,97,115,101,54,52,95,116,97,98,108,101,91,105,93,93,58,32,105,32,102,111,114,32,105,32,105,110,32,115,116,100,46,114,97,110,103,101,40,48,44,32,54,51,41,125,44,10,10,32,32,32,32,98,97,115,101,54,52,40,105,110,112,117,116,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,98,121,116,101,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,105,110,112,117,116,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,112,40,102,117,110,99,116,105,111,110,40,99,41,32,115,116,100,46,99,111,100,101,112,111,105,110,116,40,99,41,44,32,105,110,112,117,116,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,112,117,116,59], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+20480);
/* memory initializer */ allocate([10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,97,114,114,44,32,105,44,32,114,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,105,32,43,32,49,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,77,83,66,32,111,102,32,105,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,50,53,50,41,32,62,62,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,51,41,32,60,60,32,52,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,61,61,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,51,44,32,114,32,43,32,115,116,114,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,105,32,43,32,50,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,77,83,66,32,111,102,32,105,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,50,53,50,41,32,62,62,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,44,32,52,32,77,83,66,32,111,102,32,105,43,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,51,41,32,60,60,32,52,32,124,32,40,97,114,114,91,105,43,49,93,32,38,32,50,52,48,41,32,62,62,32,52,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,52,32,76,83,66,32,111,102,32,105,43,49,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,43,49,93,32,38,32,49,53,41,32,60,60,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,61,34,59,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,51,44,32,114,32,43,32,115,116,114,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,77,83,66,32,111,102,32,105,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,50,53,50,41,32,62,62,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,44,32,52,32,77,83,66,32,111,102,32,105,43,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,51,41,32,60,60,32,52,32,124,32,40,97,114,114,91,105,43,49,93,32,38,32,50,52,48,41,32,62,62,32,52,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,52,32,76,83,66,32,111,102,32,105,43,49,44,32,50,32,77,83,66,32,111,102,32,105,43,50,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,43,49,93,32,38,32,49,53,41,32,60,60,32,50,32,124,32,40,97,114,114,91,105,43,50,93,32,38,32,49,57,50,41,32,62,62,32,54,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,76,83,66,32,111,102,32,105,43,50,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,43,50,93,32,38,32,54,51,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,51,44,32,114,32,43,32,115,116,114,41,32,116,97,105,108,115,116,114,105,99,116,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,97,110,105,116,121,32,61,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,114,44,32,97,41,32,114,32,38,38,32,40,97,32,60,32,50,53,54,41,44,32,98,121,116,101,115,44,32,116,114,117,101,41,59,10,32,32,32,32,32,32,32,32,105,102,32,33,115,97,110,105,116,121,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,67,97,110,32,111,110,108,121,32,98,97,115,101,54,52,32,101,110,99,111,100,101,32,115,116,114,105,110,103,115,32,47,32,97,114,114,97,121,115,32,111,102,32,115,105,110,103,108,101,32,98,121,116,101,115,46,34,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,98,121,116,101,115,44,32,48,44,32,34,34,41,44,10,10,32,32,32,32,10,32,32,32,32,98,97,115,101,54,52,68,101,99,111,100,101,66,121,116,101,115,40,115,116,114,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,37,32,52,32,33,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,97,32,98,97,115,101,54,52,32,101,110,99,111,100,101,100,32,115,116,114,105,110,103,32,92,34,37,115,92,34,34,32,37,32,115,116,114,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,115,116,114,44,32,105,44,32,114,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,97,108,108,32,54,32,98,105,116,115,32,111,102,32,105,44,32,50,32,77,83,66,32,111,102,32,105,43,49,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,49,32,61,32,91,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,93,93,32,60,60,32,50,32,124,32,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,49,93,93,32,62,62,32,52,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,52,32,76,83,66,32,111,102,32,105,43,49,44,32,52,77,83,66,32,111,102,32,105,43,50,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,50,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,114,91,105,43,50,93,32,61,61,32,34,61,34,32,116,104,101,110,32,91,93,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,91,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,49,93,93,32,38,32,49,53,41,32,60,60,32,52,32,124,32,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,50,93,93,32,62,62,32,50,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,43,50,44,32,97,108,108,32,54,32,98,105,116,115,32,111,102,32,105,43,51,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,51,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,114,91,105,43,51,93,32,61,61,32,34,61,34,32,116,104,101,110,32,91,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,91,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,50,93,93,32,38,32,51,41,32,60,60,32,54,32,124,32,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,51,93,93,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,105,43,52,44,32,114,32,43,32,110,49,32,43,32,110,50,32,43,32,110,51,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,48,44,32,91,93,41,44,10,10,32,32,32,32,98,97,115,101,54,52,68,101,99,111,100,101,40,115,116,114,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,98,121,116,101,115,32,61,32,115,116,100,46,98,97,115,101,54,52,68,101,99,111,100,101,66,121,116,101,115,40,115,116,114,41,59,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,34,44,32,115,116,100,46,109,97,112,40,102,117,110,99,116,105,111,110,40,98,41,32,115,116,100,46,99,104,97,114,40,98,41,44,32,98,121,116,101,115,41,41,44,10,10,32,32,32,32,47,47,32,81,117,105,99,107,115,111,114,116,10,32,32,32,32,115,111,114,116,40,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,108,32,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,59,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,91,93,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,105,118,111,116,32,61,32,97,114,114,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,115,116,32,61,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,108,32,45,32,49,44,32,102,117,110,99,116,105,111,110,40,105,41,32,97,114,114,91,105,32,43,32,49,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,108,101,102,116,32,61,32,115,116,100,46,102,105,108,116,101,114,40,102,117,110,99,116,105,111,110,40,120,41,32,120,32,60,61,32,112,105,118,111,116,44,32,114,101,115,116,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,105,103,104,116,32,61,32,115,116,100,46,102,105,108,116,101,114,40,102,117,110,99,116,105,111,110,40,120,41,32,120,32,62,32,112,105,118,111,116,44,32,114,101,115,116,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,115,111,114,116,40,108,101,102,116,41,32,43,32,91,112,105,118,111,116,93,32,43,32,115,116,100,46,115,111,114,116,40,114,105,103,104,116,41,44,10,10,32,32,32,32,117,110,105,113,40,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,40,97,44,32,98,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,97,41,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,98,93,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,97,91,115,116,100,46,108,101,110,103,116,104,40,97,41,32,45,32,49,93,32,61,61,32,98,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,32,43,32,91,98,93,59,10,32,32,32,32,32,32,32,32,115,116,100,46,102,111,108,100,108,40,102,32,44,32,97,114,114,44,32,91,93,41,44,10,10,32,32,32,32,115,101,116,40,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,117,110,105,113,40,115,116,100,46,115,111,114,116,40,97,114,114,41,41,44,10,10,32,32,32,32,115,101,116,77,101,109,98,101,114,40,120,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,47,47,32,84,79,68,79,40,100,99,117,110,110,105,110,41,58,32,66,105,110,97,114,121,32,99,104,111,112,32,102,111,114,32,79,40,108,111,103,32,110,41,32,99,111,109,112,108,101,120,105,116,121,10,32,32,32,32,32,32,32,32,115,116,100,46,108,101,110,103,116,104,40,115,116,100,46,115,101,116,73,110,116,101,114,40,91,120,93,44,32,97,114,114,41,41,32,62,32,48,44,10,10,32,32,32,32,115,101,116,85,110,105,111,110,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,115,101,116,40,97,32,43,32,98,41,44,10,10,32,32,32,32,115,101,116,73,110,116,101,114,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,97,44,32,98,44,32,105,44,32,106,44,32,97,99,99,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,41,32,124,124,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,98,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,99,99,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,97,91,105,93,32,61,61,32,98,91,106,93,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,32,43,32,49,44,32,106,32,43,32,49,44,32,97,99,99,32,43,32,91,97,91,105,93,93,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,97,91,105,93,32,60,32,98,91,106,93,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,32,43,32,49,44,32,106,44,32,97,99,99,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,44,32,106,32,43,32,49,44,32,97,99,99,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,48,44,32,48,44,32,91,93,41,32,116,97,105,108,115,116,114,105,99,116,44,10,10,32,32,32,32,115,101,116,68,105,102,102,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,97,44,32,98,44,32,105,44,32,106,44,32,97,99,99,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,99,99,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,98,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,32,43,32,49,44,32,106,44,32,97,99,99,32,43,32,91,97,91,105,93,93,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,97,91,105,93,32,61,61,32,98,91,106,93,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,32,43,32,49,44,32,106,32,43,32,49,44,32,97,99,99,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,97,91,105,93,32,60,32,98,91,106,93,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,32,43,32,49,44,32,106,44,32,97,99,99,32,43,32,91,97,91,105,93,93,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,44,32,106,32,43,32,49,44,32,97,99,99,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,48,44,32,48,44,32,91,93,41,32,116,97,105,108,115,116,114,105,99,116,44,10,10,32,32,32,32,111,98,106,101,99,116,70,105,101,108,100,115,40,111,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,69,120,40,111,44,32,102,97,108,115,101,41,44,10,10,32,32,32,32,111,98,106,101,99,116,70,105,101,108,100,115,65,108,108,40,111,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,69,120,40,111,44,32,116,114,117,101,41,44,10,10,32,32,32,32,111,98,106,101,99,116,72,97,115,40,111,44,32,102,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,111,98,106,101,99,116,72,97,115,69,120,40,111,44,32,102,44,32,102,97,108,115,101,41,44,10,10,32,32,32,32,111,98,106,101,99,116,72,97,115,65,108,108,40,111,44,32,102,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,111,98,106,101,99,116,72,97,115,69,120,40,111,44,32,102,44,32,116,114,117,101,41,44,10,125,10,0,0,0,116,104,105,115,70,105,108,101,0,0,0,0,0,0,0,0,115,116,100,0,0,0,0,0,92,34,0,0,0,0,0,0,92,92,0,0,0,0,0,0,92,98,0,0,0,0,0,0,92,102,0,0,0,0,0,0,92,110,0,0,0,0,0,0,92,114,0,0,0,0,0,0,92,116,0,0,0,0,0,0,92,117,48,48,48,48,0,0,92,117,0,0,0,0,0,0,51,65,83,84,0,0,0,0,48,172,0,0,184,139,0,0,53,76,111,99,97,108,0,0,88,172,0,0,200,139,0,0,192,139,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,112,97,114,115,105,110,103,32,97,110,32,65,83,84,32,116,104,97,116,32,119,97,115,110,39,116,32,119,114,97,112,112,101,100,32,105,110,32,97,32,115,116,100,32,108,111,99,97,108,46,0,0,0,0,0,0,0,0,72,140,0,0,23,0,0,0,24,0,0,0,49,51,76,105,116,101,114,97,108,83,116,114,105,110,103,0,88,172,0,0,56,140,0,0,192,139,0,0,0,0,0,0,0,0,0,0,192,139,0,0,25,0,0,0,26,0,0,0,0,0,0,0,144,140,0,0,27,0,0,0,28,0,0,0,49,53,66,117,105,108,116,105,110,70,117,110,99,116,105,111,110,0,0,0,0,0,0,0,88,172,0,0,120,140,0,0,192,139,0,0,0,0,0,0,0,0,0,0,208,139,0,0,29,0,0,0,30,0,0,0,53,65,112,112,108,121,0,0,88,172,0,0,176,140,0,0,192,139,0,0,0,0,0,0,40,41,0,0,0,0,0,0,53,65,114,114,97,121,0,0,88,172,0,0,208,140,0,0,192,139,0,0,0,0,0,0,54,66,105,110,97,114,121,0,88,172,0,0,232,140,0,0,192,139,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,112,97,114,115,105,110,103,32,98,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,46,0,0,0,0,0,49,49,67,111,110,100,105,116,105,111,110,97,108,0,0,0,88,172,0,0,48,141,0,0,192,139,0,0,0,0,0,0,105,102,32,0,0,0,0,0,32,116,104,101,110,32,0,0,32,101,108,115,101,32,0,0,53,69,114,114,111,114,0,0,88,172,0,0,104,141,0,0,192,139,0,0,0,0,0,0,101,114,114,111,114,32,0,0,56,70,117,110,99,116,105,111,110,0,0,0,0,0,0,0,88,172,0,0,136,141,0,0,192,139,0,0,0,0,0,0,102,117,110,99,116,105,111,110,32,0,0,0,0,0,0,0,41,32,0,0,0,0,0,0,54,73,109,112,111,114,116,0,88,172,0,0,192,141,0,0,192,139,0,0,0,0,0,0,105,109,112,111,114,116,32,0,57,73,109,112,111,114,116,115,116,114,0,0,0,0,0,0,88,172,0,0,224,141,0,0,192,139,0,0,0,0,0,0,105,109,112,111,114,116,115,116,114,32,0,0,0,0,0,0,53,73,110,100,101,120,0,0,88,172,0,0,16,142,0,0,192,139,0,0,0,0,0,0,108,111,99,97,108,32,0,0,32,61,32,0,0,0,0,0,59,32,0,0,0,0,0,0,49,52,76,105,116,101,114,97,108,66,111,111,108,101,97,110,0,0,0,0,0,0,0,0,88,172,0,0,64,142,0,0,192,139,0,0,0,0,0,0,49,51,76,105,116,101,114,97,108,78,117,109,98,101,114,0,88,172,0,0,104,142,0,0,192,139,0,0,0,0,0,0,49,49,76,105,116,101,114,97,108,78,117,108,108,0,0,0,88,172,0,0,136,142,0,0,192,139,0,0,0,0,0,0,54,79,98,106,101,99,116,0,88,172,0,0,168,142,0,0,192,139,0,0,0,0,0,0,58,58,0,0,0,0,0,0,58,58,58,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,70,105,101,108,100,72,105,100,101,58,32,0,0,0,0,0,49,55,79,98,106,101,99,116,67,111,109,112,111,115,105,116,105,111,110,0,0,0,0,0,88,172,0,0,248,142,0,0,192,139,0,0,0,0,0,0,123,91,0,0,0,0,0,0,93,58,32,0,0,0,0,0,32,102,111,114,32,0,0,0,32,105,110,32,0,0,0,0,52,83,101,108,102,0,0,0,88,172,0,0,64,143,0,0,192,139,0,0,0,0,0,0,115,101,108,102,0,0,0,0,53,83,117,112,101,114,0,0,88,172,0,0,96,143,0,0,192,139,0,0,0,0,0,0,115,117,112,101,114,0,0,0,53,85,110,97,114,121,0,0,88,172,0,0,128,143,0,0,192,139,0,0,0,0,0,0,51,86,97,114,0,0,0,0,88,172,0,0,152,143,0,0,192,139,0,0,0,0,0,0,68,105,100,32,110,111,116,32,101,120,112,101,99,116,58,32,0,0,0,0,0,0,0,0,44,32,34,0,0,0,0,0,34,41,0,0,0,0,0,0,34,123,34,0,0,0,0,0,34,125,34,0,0,0,0,0,34,91,34,0,0,0,0,0,34,93,34,0,0,0,0,0,34,58,34,0,0,0,0,0,34,44,34,0,0,0,0,0,34,36,34,0,0,0,0,0,34,46,34,0,0,0,0,0,34,40,34,0,0,0,0,0,34,41,34,0,0,0,0,0,34,59,34,0,0,0,0,0,73,68,69,78,84,73,70,73,69,82,0,0,0,0,0,0,78,85,77,66,69,82,0,0,79,80,69,82,65,84,79,82,0,0,0,0,0,0,0,0,83,84,82,73,78,71,0,0,101,108,115,101,0,0,0,0,101,114,114,111,114,0,0,0,102,111,114,0,0,0,0,0,105,102,0,0,0,0,0,0,105,109,112,111,114,116,0,0,105,109,112,111,114,116,115,116,114,0,0,0,0,0,0,0,105,110,0,0,0,0,0,0,108,111,99,97,108,0,0,0,116,97,105,108,115,116,114,105,99,116,0,0,0,0,0,0,116,104,101,110,0,0,0,0,101,110,100,32,111,102,32,102,105,108,101,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,116,111,107,101,110,32,107,105,110,100,58,32,0,0,0,0,102,117,110,99,116,105,111,110,32,112,97,114,97,109,101,116,101,114,0,0,0,0,0,0,78,111,116,32,97,110,32,105,100,101,110,116,105,102,105,101,114,58,32,0,0,0,0,0,69,120,112,101,99,116,101,100,32,40,32,98,117,116,32,103,111,116,32,0,0,0,0,0,69,120,112,101,99,116,101,100,32,44,32,111,114,32,59,32,98,117,116,32,103,111,116,32,0,0,0,0,0,0,0,0,78,111,116,32,97,32,117,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,0,37,0,0,0,0,0,0,0,78,111,116,32,97,32,98,105,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,102,117,110,99,116,105,111,110,32,97,114,103,117,109,101,110,116,0,0,0,0,0,0,0,109,111,100,0,0,0,0,0,0,0,0,0,136,143,0,0,25,0,0,0,31,0,0,0,0,0,0,0,240,140,0,0,25,0,0,0,32,0,0,0,0,0,0,0,184,140,0,0,33,0,0,0,34,0,0,0,0,0,0,0,24,142,0,0,25,0,0,0,35,0,0,0,0,0,0,0,160,143,0,0,25,0,0,0,36,0,0,0,36,0,0,0,0,0,0,0,79,98,106,101,99,116,32,99,111,109,112,111,115,105,116,105,111,110,32,99,97,110,32,111,110,108,121,32,104,97,118,101,32,111,110,101,32,102,105,101,108,100,47,118,97,108,117,101,32,112,97,105,114,46,0,0,76,111,99,97,108,115,32,109,117,115,116,32,97,112,112,101,97,114,32,102,105,114,115,116,32,105,110,32,97,110,32,111,98,106,101,99,116,32,99,111,109,112,114,101,104,101,110,115,105,111,110,46,0,0,0,0,79,98,106,101,99,116,32,99,111,109,112,114,101,104,101,110,115,105,111,110,115,32,99,97,110,110,111,116,32,104,97,118,101,32,104,105,100,100,101,110,32,102,105,101,108,100,115,46,0,0,0,0,0,0,0,0,85,110,101,120,112,101,99,116,101,100,32,99,111,109,109,97,32,98,101,102,111,114,101,32,102,111,114,46,0,0,0,0,69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,32,98,101,102,111,114,101,32,110,101,120,116,32,102,105,101,108,100,46,0,0,0,0,0,109,101,116,104,111,100,32,112,97,114,97,109,101,116,101,114,0,0,0,0,0,0,0,0,67,97,110,110,111,116,32,117,115,101,32,43,58,32,115,121,110,116,97,120,32,115,117,103,97,114,32,105,110,32,97,32,109,101,116,104,111,100,58,32,0,0,0,0,0,0,0,0,68,117,112,108,105,99,97,116,101,32,102,105,101,108,100,58,32,0,0,0,0,0,0,0,112,97,114,115,105,110,103,32,102,105,101,108,100,32,100,101,102,105,110,105,116,105,111,110,0,0,0,0,0,0,0,0,85,110,101,120,112,101,99,116,101,100,58,32,0,0,0,0,32,119,104,105,108,101,32,0,0,0,0,0,104,143,0,0,25,0,0,0,37,0,0,0,0,0,0,0,152,141,0,0,38,0,0,0,39,0,0,0,0,0,0,0,16,143,0,0,25,0,0,0,40,0,0,0,0,0,0,0,176,142,0,0,41,0,0,0,42,0,0,0,0,0,0,0,72,143,0,0,25,0,0,0,43,0,0,0,112,97,114,115,105,110,103,32,116,101,114,109,105,110,97,108,0,0,0,0,0,0,0,0,85,110,101,120,112,101,99,116,101,100,32,101,110,100,32,111,102,32,102,105,108,101,46,0,109,97,112,0,0,0,0,0,102,105,108,116,101,114,77,97,112,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,105,102,32,111,114,32,93,32,97,102,116,101,114,32,102,111,114,32,99,108,97,117,115,101,44,32,103,111,116,58,32,0,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,32,98,101,102,111,114,101,32,110,101,120,116,32,97,114,114,97,121,32,101,108,101,109,101,110,116,46,0,0,0,0,0,78,111,32,116,111,112,45,108,101,118,101,108,32,111,98,106,101,99,116,32,102,111,117,110,100,46,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,116,111,107,32,107,105,110,100,58,32,0,0,0,0,0,0,0,0,0,0,240,141,0,0,44,0,0,0,45,0,0,0,0,0,0,0,200,141,0,0,46,0,0,0,47,0,0,0,0,0,0,0,88,142,0,0,25,0,0,0,48,0,0,0,0,0,0,0,120,142,0,0,25,0,0,0,49,0,0,0,0,0,0,0,216,140,0,0,50,0,0,0,51,0,0,0,68,117,112,108,105,99,97,116,101,32,108,111,99,97,108,32,118,97,114,58,32,0,0,0,61,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,32,98,101,102,111,114,101,32,110,101,120,116,32,0,0,0,0,0,0,0,64,141,0,0,25,0,0,0,52,0,0,0,0,0,0,0,152,142,0,0,25,0,0,0,53,0,0,0,69,120,112,101,99,116,101,100,32,116,111,107,101,110,32,0,32,98,117,116,32,103,111,116,32,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,111,112,101,114,97,116,111,114,32,0,0,0,0,0,0,0,0,0,0,112,141,0,0,25,0,0,0,54,0,0,0,68,117,112,108,105,99,97,116,101,32,102,117,110,99,116,105,111,110,32,112,97,114,97,109,101,116,101,114,58,32,0,0,67,97,110,39,116,32,117,115,101,32,115,101,108,102,32,111,117,116,115,105,100,101,32,111,102,32,97,110,32,111,98,106,101,99,116,46,0,0,0,0,67,97,110,39,116,32,117,115,101,32,115,117,112,101,114,32,111,117,116,115,105,100,101,32,111,102,32,97,110,32,111,98,106,101,99,116,46,0,0,0,85,110,107,110,111,119,110,32,118,97,114,105,97,98,108,101,58,32,0,0,0,0,0,0,68,117,114,105,110,103,32,109,97,110,105,102,101,115,116,97,116,105,111,110,0,0,0,0,77,117,108,116,105,32,109,111,100,101,58,32,84,111,112,45,108,101,118,101,108,32,111,98,106,101,99,116,32,119,97,115,32,97,32,0,0,0,0,0,44,32,0,0,0,0,0,0,115,104,111,117,108,100,32,98,101,32,97,110,32,111,98,106,101,99,116,32,119,104,111,115,101,32,107,101,121,115,32,97,114,101,32,102,105,108,101,110,97,109,101,115,32,97,110,100,32,118,97,108,117,101,115,32,104,111,108,100,32,0,0,0,116,104,101,32,74,83,79,78,32,102,111,114,32,116,104,97,116,32,102,105,108,101,46,0,49,50,82,117,110,116,105,109,101,69,114,114,111,114,0,0,48,172,0,0,248,150,0,0,70,105,101,108,100,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,58,32,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,52,72,101,97,112,76,101,97,102,79,98,106,101,99,116,69,0,0,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,48,72,101,97,112,79,98,106,101,99,116,69,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,48,72,101,97,112,69,110,116,105,116,121,69,0,0,0,0,48,172,0,0,112,151,0,0,88,172,0,0,80,151,0,0,144,151,0,0,0,0,0,0,88,172,0,0,40,151,0,0,152,151,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,54,72,101,97,112,83,105,109,112,108,101,79,98,106,101,99,116,69,0,0,0,0,0,0,88,172,0,0,184,151,0,0,168,151,0,0,0,0,0,0,77,97,120,32,115,116,97,99,107,32,102,114,97,109,101,115,32,101,120,99,101,101,100,101,100,46,0,0,0,0,0,0,98,105,110,100,46,115,101,99,111,110,100,32,33,61,32,110,117,108,108,112,116,114,0,0,118,109,46,99,112,112,0,0,110,101,119,67,97,108,108,0,97,110,111,110,121,109,111,117,115,0,0,0,0,0,0,0,111,98,106,101,99,116,32,60,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,57,72,101,97,112,84,104,117,110,107,69,0,0,0,0,0,0,88,172,0,0,96,152,0,0,144,151,0,0,0,0,0,0,116,104,117,110,107,32,60,0,98,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,32,60,0,0,0,0,0,0,102,117,110,99,116,105,111,110,32,60,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,56,72,101,97,112,69,120,116,101,110,100,101,100,79,98,106,101,99,116,69,0,0,0,0,88,172,0,0,192,152,0,0,152,151,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,53,72,101,97,112,83,117,112,101,114,79,98,106,101,99,116,69,0,0,0,0,0,0,0,88,172,0,0,248,152,0,0,152,151,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,50,51,72,101,97,112,67,111,109,112,114,101,104,101,110,115,105,111,110,79,98,106,101,99,116,69,0,0,0,0,0,0,0,88,172,0,0,48,153,0,0,168,151,0,0,0,0,0,0,110,117,108,108,0,0,0,0,98,111,111,108,101,97,110,0,100,111,117,98,108,101,0,0,97,114,114,97,121,0,0,0,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,0,111,98,106,101,99,116,0,0,115,116,114,105,110,103,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,116,121,112,101,58,32,0,0,0,0,0,0,248,153,0,0,55,0,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,53,83,116,97,99,107,69,0,0,48,172,0,0,224,153,0,0,115,116,97,99,107,91,0,0,93,32,61,32,0,0,0,0,32,40,0,0,0,0,0,0,91,32,93,0,0,0,0,0,91,10,0,0,0,0,0,0,91,0,0,0,0,0,0,0,32,32,32,0,0,0,0,0,44,10,0,0,0,0,0,0,93,0,0,0,0,0,0,0,67,111,117,108,100,110,39,116,32,109,97,110,105,102,101,115,116,32,102,117,110,99,116,105,111,110,32,105,110,32,74,83,79,78,32,111,117,116,112,117,116,46,0,0,0,0,0,0,123,32,125,0,0,0,0,0,123,10,0,0,0,0,0,0,123,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,34,58,32,0,0,0,0,0,125,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,115,116,114,105,110,103,32,114,101,115,117,108,116,44,32,103,111,116,58,32,0,0,0,65,116,116,101,109,112,116,32,116,111,32,117,115,101,32,115,117,112,101,114,32,119,104,101,110,32,116,104,101,114,101,32,105,115,32,110,111,32,115,117,112,101,114,32,99,108,97,115,115,46,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,67,111,117,108,100,32,110,111,116,32,98,105,110,100,32,118,97,114,105,97,98,108,101,58,32,0,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,65,83,84,58,32,0,0,0,79,110,108,121,32,102,117,110,99,116,105,111,110,115,32,99,97,110,32,98,101,32,99,97,108,108,101,100,44,32,103,111,116,32,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,0,0,0,0,0,0,0,32,97,114,103,117,109,101,110,116,115,44,32,103,111,116,32,0,0,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,73,110,101,113,117,97,108,105,116,105,101,115,32,110,111,116,32,100,101,115,117,103,97,114,101,100,0,0,0,0,0,0,66,105,110,97,114,121,32,111,112,101,114,97,116,111,114,32,0,0,0,0,0,0,0,0,32,114,101,113,117,105,114,101,115,32,109,97,116,99,104,105,110,103,32,116,121,112,101,115,44,32,103,111,116,32,0,0,32,97,110,100,32,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,97,114,114,97,121,115,46,0,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,98,111,111,108,101,97,110,115,46,0,0,68,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111,46,0,0,0,0,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,110,117,109,98,101,114,115,46,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,102,117,110,99,116,105,111,110,115,46,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,110,117,108,108,46,0,0,0,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,111,98,106,101,99,116,115,46,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,115,116,114,105,110,103,115,46,0,0,0,102,105,108,116,101,114,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,114,101,116,117,114,110,32,98,111,111,108,101,97,110,44,32,103,111,116,58,32,0,0,0,0,0,0,109,97,107,101,65,114,114,97,121,32,114,101,113,117,105,114,101,115,32,115,105,122,101,32,62,61,32,48,44,32,103,111,116,32,0,0,0,0,0,0,109,97,107,101,65,114,114,97,121,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,116,97,107,101,32,49,32,112,97,114,97,109,44,32,103,111,116,58,32,0,0,0,0,0,110,117,109,98,101,114,0,0,102,105,108,116,101,114,32,102,117,110,99,116,105,111,110,32,116,97,107,101,115,32,49,32,112,97,114,97,109,101,116,101,114,46,0,0,0,0,0,0,108,101,110,103,116,104,32,116,97,107,101,115,32,49,32,112,97,114,97,109,101,116,101,114,46,0,0,0,0,0,0,0,108,101,110,103,116,104,32,111,112,101,114,97,116,101,115,32,111,110,32,115,116,114,105,110,103,115,44,32,111,98,106,101,99,116,115,44,32,97,110,100,32,97,114,114,97,121,115,44,32,103,111,116,32,0,0,0,99,111,100,101,112,111,105,110,116,32,116,97,107,101,115,32,97,32,115,116,114,105,110,103,32,111,102,32,108,101,110,103,116,104,32,49,44,32,103,111,116,32,108,101,110,103,116,104,32,0,0,0,0,0,0,0,67,111,100,101,112,111,105,110,116,115,32,109,117,115,116,32,98,101,32,62,61,32,48,44,32,103,111,116,32,0,0,0,83,111,114,114,121,44,32,111,110,108,121,32,65,83,67,73,73,32,115,117,112,112,111,114,116,101,100,32,114,105,103,104,116,32,110,111,119,46,32,32,0,0,0,0,0,0,0,0,67,111,100,101,112,111,105,110,116,115,32,109,117,115,116,32,98,101,32,60,32,49,50,56,44,32,103,111,116,32,0,0,85,110,100,101,102,105,110,101,100,32,101,120,116,101,114,110,97,108,32,118,97,114,105,97,98,108,101,58,32,0,0,0,60,101,120,116,118,97,114,58,0,0,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,122,101,100,32,98,117,105,108,116,105,110,58,32,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,49,72,101,97,112,67,108,111,115,117,114,101,69,0,0,0,88,172,0,0,24,159,0,0,144,151,0,0,0,0,0,0,69,114,114,111,114,32,109,101,115,115,97,103,101,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,44,32,103,111,116,32,0,0,0,0,0,0,73,102,32,99,111,110,100,105,116,105,111,110,32,109,117,115,116,32,98,101,32,98,111,111,108,101,97,110,44,32,103,111,116,32,0,0,0,0,0,0,65,114,114,97,121,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,110,117,109,98,101,114,44,32,103,111,116,32,0,0,0,0,0,0,0,0,65,114,114,97,121,32,98,111,117,110,100,115,32,101,114,114,111,114,58,32,0,0,0,0,32,110,111,116,32,119,105,116,104,105,110,32,91,48,44,32,0,0,0,0,0,0,0,0,111,98,106,32,33,61,32,110,117,108,108,112,116,114,0,0,101,118,97,108,117,97,116,101], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+30720);
/* memory initializer */ allocate([0,0,0,0,0,0,0,0,79,98,106,101,99,116,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,44,32,103,111,116,32,0,0,0,0,0,0,0,83,116,114,105,110,103,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,97,32,110,117,109,98,101,114,44,32,103,111,116,32,0,0,0,0,0,83,116,114,105,110,103,32,98,111,117,110,100,115,32,101,114,114,111,114,58,32,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,78,111,116,32,111,98,106,101,99,116,32,47,32,97,114,114,97,121,32,47,32,115,116,114,105,110,103,46,0,0,0,0,67,97,110,32,111,110,108,121,32,105,110,100,101,120,32,111,98,106,101,99,116,115,44,32,115,116,114,105,110,103,115,44,32,97,110,100,32,97,114,114,97,121,115,44,32,103,111,116,32,0,0,0,0,0,0,0,70,105,101,108,100,32,110,97,109,101,32,119,97,115,32,110,111,116,32,97,32,115,116,114,105,110,103,46,0,0,0,0,68,117,112,108,105,99,97,116,101,32,102,105,101,108,100,32,110,97,109,101,58,32,34,0,79,98,106,101,99,116,32,99,111,109,112,114,101,104,101,110,115,105,111,110,32,110,101,101,100,115,32,97,114,114,97,121,44,32,103,111,116,32,0,0,102,105,101,108,100,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,44,32,103,111,116,58,32,0,0,0,0,0,85,110,97,114,121,32,111,112,101,114,97,116,111,114,32,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,116,121,112,101,32,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,70,114,97,109,101,75,105,110,100,58,32,32,0,0,0,0,43,0,0,0,0,0,0,0,126,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,115,101,100,32,117,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,0,0,102,114,111,109,32,33,61,32,110,117,108,108,112,116,114,0,46,47,115,116,97,116,101,46,104,0,0,0,0,0,0,0,109,97,114,107,70,114,111,109,0,0,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,57,72,101,97,112,65,114,114,97,121,69,0,0,0,0,0,0,88,172,0,0,48,162,0,0,144,151,0,0,0,0,0,0,0,0,0,0,96,153,0,0,56,0,0,0,57,0,0,0,0,0,0,0,128,152,0,0,58,0,0,0,59,0,0,0,66,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,32,0,0,0,0,0,0,0,32,101,120,112,101,99,116,101,100,32,40,0,0,0,0,0,41,32,98,117,116,32,103,111,116,32,40,0,0,0,0,0,0,0,0,0,232,152,0,0,60,0,0,0,61,0,0,0,42,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,60,60,0,0,0,0,0,0,62,62,0,0,0,0,0,0,62,61,0,0,0,0,0,0,60,0,0,0,0,0,0,0,60,61,0,0,0,0,0,0,61,61,0,0,0,0,0,0,33,61,0,0,0,0,0,0,38,0,0,0,0,0,0,0,94,0,0,0,0,0,0,0,124,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,124,124,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,115,101,100,32,98,105,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,0,0,0,0,0,32,153,0,0,60,0,0,0,62,0,0,0,0,0,0,0,224,151,0,0,63,0,0,0,64,0,0,0,78,111,116,32,97,32,110,117,109,98,101,114,0,0,0,0,79,118,101,114,102,108,111,119,0,0,0,0,0,0,0,0,0,0,0,0,216,163,0,0,65,0,0,0,66,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,48,72,101,97,112,83,116,114,105,110,103,69,0,0,0,0,88,172,0,0,184,163,0,0,144,151,0,0,0,0,0,0,67,111,117,108,100,110,39,116,32,111,112,101,110,32,105,109,112,111,114,116,32,34,0,0,0,0,0,0,56,159,0,0,67,0,0,0,68,0,0,0,0,0,0,0,80,162,0,0,69,0,0,0,70,0,0,0,97,114,114,97,121,95,101,108,101,109,101,110,116,0,0,0,83,111,109,101,116,104,105,110,103,32,119,101,110,116,32,119,114,111,110,103,32,100,117,114,105,110,103,32,106,115,111,110,110,101,116,95,109,97,107,101,44,32,112,108,101,97,115,101,32,114,101,112,111,114,116,32,116,104,105,115,58,32,0,0,83,111,109,101,116,104,105,110,103,32,119,101,110,116,32,119,114,111,110,103,32,100,117,114,105,110,103,32,106,115,111,110,110,101,116,95,101,118,97,108,117,97,116,101,95,115,110,105,112,112,101,116,44,32,112,108,101,97,115,101,32,114,101,112,111,114,116,32,116,104,105,115,58,32,0,0,0,0,0,0,10,0,0,0,0,0,0,0,82,85,78,84,73,77,69,32,69,82,82,79,82,58,32,0,9,46,46,46,0,0,0,0,9,0,0,0,0,0,0,0,83,84,65,84,73,67,32,69,82,82,79,82,58,32,0,0,58,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,41,45,40,0,0,0,0,0,41,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,184,165,0,0,71,0,0,0,72,0,0,0,148,255,255,255,148,255,255,255,184,165,0,0,73,0,0,0,74,0,0,0,52,165,0,0,108,165,0,0,128,165,0,0,72,165,0,0,108,0,0,0,0,0,0,0,32,188,0,0,13,0,0,0,14,0,0,0,148,255,255,255,148,255,255,255,32,188,0,0,15,0,0,0,16,0,0,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,102,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,88,172,0,0,136,165,0,0,32,188,0,0,0,0,0,0,0,0,0,0,56,166,0,0,75,0,0,0,76,0,0,0,2,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,5,0,0,0,2,0,0,0,2,0,0,0,6,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,102,105,108,101,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,88,172,0,0,8,166,0,0,168,187,0,0,0,0,0,0,114,0,0,0,0,0,0,0,70,65,84,65,76,32,69,82,82,79,82,58,32,65,32,109,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,101,114,114,111,114,32,111,99,99,117,114,114,101,100,46,10,0,0,0,0,0,0,0,84,104,101,32,101,109,112,116,121,32,115,116,114,105,110,103,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,102,105,108,101,110,97,109,101,0,0,0,0,0,0,0,0,65,116,116,101,109,112,116,101,100,32,116,111,32,105,109,112,111,114,116,32,97,32,100,105,114,101,99,116,111,114,121,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,200,167,0,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,0,96,169,0,0,77,0,0,0,78,0,0,0,7,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,88,172,0,0,80,169,0,0,232,169,0,0,0,0,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,48,172,0,0,216,169,0,0,0,0,0,0,48,170,0,0,79,0,0,0,80,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,216,170,0,0,81,0,0,0,82,0,0,0,9,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,88,172,0,0,32,170,0,0,232,169,0,0,0,0,0,0,0,0,0,0,112,170,0,0,79,0,0,0,83,0,0,0,8,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,88,172,0,0,88,170,0,0,48,170,0,0,0,0,0,0,0,0,0,0,176,170,0,0,79,0,0,0,84,0,0,0,8,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,88,172,0,0,152,170,0,0,48,170,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,88,172,0,0,192,170,0,0,232,169,0,0,0,0,0,0,0,0,0,0,56,171,0,0,85,0,0,0,86,0,0,0,10,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,48,172,0,0,16,171,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,88,172,0,0,40,171,0,0,232,169,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,88,172,0,0,72,171,0,0,32,171,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,88,172,0,0,128,171,0,0,112,171,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,88,172,0,0,224,171,0,0,112,171,0,0,0,0,0,0,88,172,0,0,184,171,0,0,8,172,0,0,0,0,0,0,0,0,0,0,168,171,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,5,0,0,0,3,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,160,172,0,0,87,0,0,0,91,0,0,0,89,0,0,0,90,0,0,0,5,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,88,172,0,0,120,172,0,0,168,171,0,0,0,0,0,0,0,0,0,0,0,173,0,0,87,0,0,0,92,0,0,0,89,0,0,0,90,0,0,0,5,0,0,0,5,0,0,0,3,0,0,0,5,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,88,172,0,0,216,172,0,0,168,171,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+40960);
/* memory initializer */ allocate([120,183,0,0,93,0,0,0,94,0,0,0,3,0,0,0,7,0,0,0,6,0,0,0,6,0,0,0,11,0,0,0,12,0,0,0,8,0,0,0,13,0,0,0,14,0,0,0,5,0,0,0,9,0,0,0,6,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,88,172,0,0,88,183,0,0,232,187,0,0,0,0,0,0,0,0,0,0,224,183,0,0,93,0,0,0,95,0,0,0,4,0,0,0,7,0,0,0,6,0,0,0,6,0,0,0,15,0,0,0,12,0,0,0,8,0,0,0,16,0,0,0,17,0,0,0,7,0,0,0,10,0,0,0,8,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,88,172,0,0,200,183,0,0,232,187,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,0,0,0,0,120,184,0,0,96,0,0,0,97,0,0,0,5,0,0,0,1,0,0,0,7,0,0,0,7,0,0,0,18,0,0,0,2,0,0,0,2,0,0,0,19,0,0,0,4,0,0,0,9,0,0,0,11,0,0,0,10,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,88,172,0,0,88,184,0,0,168,187,0,0,0,0,0,0,0,0,0,0,224,184,0,0,96,0,0,0,98,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,20,0,0,0,21,0,0,0,11,0,0,0,3,0,0,0,12,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,88,172,0,0,200,184,0,0,168,187,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,0,0,0,0,168,187,0,0,96,0,0,0,99,0,0,0,1,0,0,0,1,0,0,0,7,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,19,0,0,0,4,0,0,0,9,0,0,0,3,0,0,0,12,0,0,0,0,0,0,0,232,187,0,0,93,0,0,0,100,0,0,0,7,0,0,0,7,0,0,0,6,0,0,0,6,0,0,0,15,0,0,0,12,0,0,0,8,0,0,0,13,0,0,0,14,0,0,0,5,0,0,0,10,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,32,188,0,0,13,0,0,0,14,0,0,0,248,255,255,255,248,255,255,255,32,188,0,0,15,0,0,0,16,0,0,0,8,0,0,0,0,0,0,0,104,188,0,0,101,0,0,0,102,0,0,0,248,255,255,255,248,255,255,255,104,188,0,0,103,0,0,0,104,0,0,0,4,0,0,0,0,0,0,0,176,188,0,0,17,0,0,0,18,0,0,0,252,255,255,255,252,255,255,255,176,188,0,0,19,0,0,0,20,0,0,0,4,0,0,0,0,0,0,0,248,188,0,0,105,0,0,0,106,0,0,0,252,255,255,255,252,255,255,255,248,188,0,0,107,0,0,0,108,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,186,0,0,109,0,0,0,110,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,232,186,0,0,111,0,0,0,112,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,88,172,0,0,160,186,0,0,104,226,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,48,172,0,0,208,186,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,88,172,0,0,240,186,0,0,232,186,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,88,172,0,0,48,187,0,0,232,186,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,48,172,0,0,112,187,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,48,172,0,0,176,187,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,184,172,0,0,240,187,0,0,0,0,0,0,1,0,0,0,32,187,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,184,172,0,0,56,188,0,0,0,0,0,0,1,0,0,0,96,187,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,184,172,0,0,128,188,0,0,0,0,0,0,1,0,0,0,32,187,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,184,172,0,0,200,188,0,0,0,0,0,0,1,0,0,0,96,187,0,0,3,244,255,255,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,184,172,0,0,16,189,0,0,3,0,0,0,2,0,0,0,32,188,0,0,2,0,0,0,176,188,0,0,2,8,0,0,0,0,0,0,168,189,0,0,113,0,0,0,114,0,0,0,22,0,0,0,1,0,0,0,12,0,0,0,13,0,0,0,2,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,88,172,0,0,136,189,0,0,184,226,0,0,0,0,0,0,0,0,0,0,240,203,0,0,115,0,0,0,116,0,0,0,117,0,0,0,1,0,0,0,8,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,204,0,0,118,0,0,0,119,0,0,0,117,0,0,0,2,0,0,0,9,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,205,0,0,120,0,0,0,121,0,0,0,117,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,128,206,0,0,122,0,0,0,123,0,0,0,117,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,207,0,0,124,0,0,0,125,0,0,0,117,0,0,0,8,0,0,0,9,0,0,0,23,0,0,0,10,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,216,207,0,0,126,0,0,0,127,0,0,0,117,0,0,0,12,0,0,0,13,0,0,0,25,0,0,0,14,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,144,208,0,0,128,0,0,0,129,0,0,0,117,0,0,0,23,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,144,208,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,48,209,0,0,130,0,0,0,131,0,0,0,117,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,48,209,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,192,209,0,0,132,0,0,0,133,0,0,0,117,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,210,0,0,134,0,0,0,135,0,0,0,117,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,204,0,0,136,0,0,0,137,0,0,0,117,0,0,0,39,0,0,0,40,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,41,0,0,0,12,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,204,0,0,138,0,0,0,139,0,0,0,117,0,0,0,42,0,0,0,43,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,44,0,0,0,18,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,204,0,0,140,0,0,0,141,0,0,0,117,0,0,0,45,0,0,0,46,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,47,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,205,0,0,142,0,0,0,143,0,0,0,117,0,0,0,48,0,0,0,49,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,50,0,0,0,30,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,210,0,0,144,0,0,0,145,0,0,0,117,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,0,0,0,0,72,211,0,0,146,0,0,0,147,0,0,0,117,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,0,0,0,0,216,211,0,0,148,0,0,0,149,0,0,0,117,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,0,0,0,0,104,212,0,0,150,0,0,0,151,0,0,0,117,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,212,0,0,152,0,0,0,153,0,0,0,117,0,0,0,16,0,0,0,16,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,212,0,0,154,0,0,0,155,0,0,0,117,0,0,0,17,0,0,0,17,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,118,101,99,116,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,200,203,0,0,156,0,0,0,157,0,0,0,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,200,0,0,158,0,0,0,159,0,0,0,117,0,0,0,13,0,0,0,18,0,0,0,14,0,0,0,19,0,0,0,15,0,0,0,1,0,0,0,20,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,201,0,0,160,0,0,0,161,0,0,0,117,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,51,0,0,0,52,0,0,0,5,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,203,0,0,162,0,0,0,163,0,0,0,117,0,0,0,54,0,0,0,55,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,0,0,0,0,160,203,0,0,164,0,0,0,165,0,0,0,117,0,0,0,56,0,0,0,57,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,0,216,199,0,0,166,0,0,0,167,0,0,0,117,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,88,172,0,0,192,199,0,0,40,226,0,0,0,0,0,0,0,0,0,0,104,200,0,0,166,0,0,0,168,0,0,0,117,0,0,0,21,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,16,0,0,0,22,0,0,0,17,0,0,0,23,0,0,0,18,0,0,0,5,0,0,0,24,0,0,0,6,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,48,172,0,0,72,200,0,0,184,172,0,0,48,200,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,96,200,0,0,2,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,184,172,0,0,136,200,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,96,200,0,0,2,0,0,0,0,0,0,0,56,201,0,0,166,0,0,0,169,0,0,0,117,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,58,0,0,0,59,0,0,0,8,0,0,0,60,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,48,172,0,0,24,201,0,0,184,172,0,0,240,200,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,48,201,0,0,2,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,184,172,0,0,88,201,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,48,201,0,0,2,0,0,0,0,0,0,0,248,201,0,0,166,0,0,0,170,0,0,0,117,0,0,0,5,0,0,0,6,0,0,0,9,0,0,0,61,0,0,0,62,0,0,0,10,0,0,0,63,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,184,172,0,0,208,201,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,48,201,0,0,2,0,0,0,0,0,0,0,112,202,0,0,166,0,0,0,171,0,0,0,117,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,64,0,0,0,65,0,0,0,12,0,0,0,66,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,184,172,0,0,72,202,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,48,201,0,0,2,0,0,0,0,0,0,0,232,202,0,0,166,0,0,0,172,0,0,0,117,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,64,0,0,0,65,0,0,0,12,0,0,0,66,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,88,172,0,0,192,202,0,0,112,202,0,0,0,0,0,0,0,0,0,0,80,203,0,0,166,0,0,0,173,0,0,0,117,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,64,0,0,0,65,0,0,0,12,0,0,0,66,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,88,172,0,0,40,203,0,0,112,202,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,88,172,0,0,96,203,0,0,216,199,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,88,172,0,0,136,203,0,0,216,199,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,88,172,0,0,176,203,0,0,216,199,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,88,172,0,0,216,203,0,0,216,199,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,88,172,0,0,0,204,0,0,216,199,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,48,172,0,0,72,204,0,0,184,172,0,0,40,204,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,96,204,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,184,172,0,0,136,204,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,96,204,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,184,172,0,0,200,204,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,96,204,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,184,172,0,0,8,205,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,96,204,0,0,2,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,48,172,0,0,168,205,0,0,184,172,0,0,144,205,0,0,0,0,0,0,1,0,0,0,200,205,0,0,0,0,0,0,184,172,0,0,72,205,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,208,205,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,184,172,0,0,80,206,0,0,0,0,0,0,1,0,0,0,200,205,0,0,0,0,0,0,184,172,0,0,8,206,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,104,206,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,48,172,0,0,0,207,0,0,184,172,0,0,232,206,0,0,0,0,0,0,1,0,0,0,32,207,0,0,0,0,0,0,184,172,0,0,160,206,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,40,207,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,184,172,0,0,168,207,0,0,0,0,0,0,1,0,0,0,32,207,0,0,0,0,0,0,184,172,0,0,96,207,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,192,207,0,0,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,48,172,0,0,64,208,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,48,172,0,0,96,208,0,0,184,172,0,0,248,207,0,0,0,0,0,0,3,0,0,0,216,199,0,0,2,0,0,0,88,208,0,0,2,0,0,0,136,208,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,48,172,0,0,0,209,0,0,184,172,0,0,184,208,0,0,0,0,0,0,3,0,0,0,216,199,0,0,2,0,0,0,88,208,0,0,2,0,0,0,40,209,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,48,172,0,0,160,209,0,0,184,172,0,0,88,209,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,184,209,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,184,172,0,0,224,209,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,184,209,0,0,0,8,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,48,172,0,0,144,210,0,0,184,172,0,0,72,210,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,176,210,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,48,172,0,0,32,211,0,0,184,172,0,0,216,210,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,64,211,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,48,172,0,0,176,211,0,0,184,172,0,0,104,211,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,208,211,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,48,172,0,0,64,212,0,0,184,172,0,0,248,211,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,96,212,0,0,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,48,172,0,0,160,212,0,0,184,172,0,0,136,212,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,184,212,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,184,172,0,0,224,212,0,0,0,0,0,0,2,0,0,0,216,199,0,0,2,0,0,0,184,212,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+46868);
/* memory initializer */ allocate([83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,48,172,0,0,8,226,0,0,58,32,0,0,0,0,0,0,0,0,0,0,104,226,0,0,174,0,0,0,175,0,0,0,9,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,88,172,0,0,80,226,0,0,216,170,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,48,172,0,0,120,226,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,88,172,0,0,160,226,0,0,152,226,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+57184);




var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }function ___cxa_atexit() {
  return _atexit.apply(null, arguments)
  }

   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var fd = process.stdin.fd;
              // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
              var usingDevice = false;
              try {
                fd = fs.openSync('/dev/stdin', 'r');
                usingDevice = true;
              } catch (e) {}
  
              bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function(e) {
            callback(this.error);
            e.preventDefault();
          };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
  
      /*
      // Disabled, see https://github.com/kripken/emscripten/issues/2770
      stream = FS.getStreamFromPtr(stream);
      if (stream.stream_ops.flush) {
        stream.stream_ops.flush(stream);
      }
      */
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(lookup.node.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperty(node, "usedBytes", {
            get: function() { return this.contents.length; }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      var fd = _fileno(stream);
      _fsync(fd);
      return _close(fd);
    }

  var _emscripten_resume=true;

  var _emscripten_landingpad=true;

  
  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }


  
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var fd = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
    }

  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        // If Module['websocket'] has already been defined (e.g. for configuring
        // the subprotocol/url) use that, if not initialise it to a new object.
        Module['websocket'] = (Module['websocket'] && 
                               ('object' === typeof Module['websocket'])) ? Module['websocket'] : {};
  
        // Add the Event registration mechanism to the exported websocket configuration
        // object so we can register network callbacks from native JavaScript too.
        // For more documentation see system/include/emscripten/emscripten.h
        Module['websocket']._callbacks = {};
        Module['websocket']['on'] = function(event, callback) {
  	    if ('function' === typeof callback) {
  		  this._callbacks[event] = callback;
          }
  	    return this;
        };
  
        Module['websocket'].emit = function(event, param) {
  	    if ('function' === typeof this._callbacks[event]) {
  		  this._callbacks[event].call(this, param);
          }
        };
  
        // If debug is enabled register simple default logging callbacks for each Event.
  
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          error: null, // Used in getsockopt for SOL_SOCKET/SO_ERROR test
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              // runtimeConfig gets set to true if WebSocket runtime configuration is available.
              var runtimeConfig = (Module['websocket'] && ('object' === typeof Module['websocket']));
  
              // The default value is 'ws://' the replace is needed because the compiler replaces '//' comments with '#'
              // comments without checking context, so we'd end up with ws:#, the replace swaps the '#' for '//' again.
              var url = 'ws:#'.replace('#', '//');
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['url']) {
                  url = Module['websocket']['url']; // Fetch runtime WebSocket URL config.
                }
              }
  
              if (url === 'ws://' || url === 'wss://') { // Is the supplied URL config just a prefix, if so complete it.
                var parts = addr.split('/');
                url = url + parts[0] + ":" + port + "/" + parts.slice(1).join('/');
              }
  
              // Make the WebSocket subprotocol (Sec-WebSocket-Protocol) default to binary if no configuration is set.
              var subProtocols = 'binary'; // The default value is 'binary'
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['subprotocol']) {
                  subProtocols = Module['websocket']['subprotocol']; // Fetch runtime WebSocket subprotocol config.
                }
              }
  
              // The regex trims the string (removes spaces at the beginning and end, then splits the string by
              // <any space>,<any space> into an Array. Whitespace removal is important for Websockify and ws.
              subProtocols = subProtocols.replace(/^ +| +$/g,"").split(/ *, */);
  
              // The node ws library API for specifying optional subprotocol is slightly different than the browser's.
              var opts = ENVIRONMENT_IS_NODE ? {'protocol': subProtocols.toString()} : subProtocols;
  
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
  
            Module['websocket'].emit('open', sock.stream.fd);
  
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
            Module['websocket'].emit('message', sock.stream.fd);
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('close', function() {
              Module['websocket'].emit('close', sock.stream.fd);
            });
            peer.socket.on('error', function(error) {
              // Although the ws library may pass errors that may be more descriptive than
              // ECONNREFUSED they are not necessarily the expected error code e.g. 
              // ENOTFOUND on getaddrinfo seems to be node.js specific, so using ECONNREFUSED
              // is still probably the most useful thing to do.
              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onclose = function() {
              Module['websocket'].emit('close', sock.stream.fd);
            };
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
            peer.socket.onerror = function(error) {
              // The WebSocket spec only allows a 'simple event' to be thrown on error,
              // so we only really know as much as ECONNREFUSED.
              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          Module['websocket'].emit('listen', sock.stream.fd); // Send Event with listen fd.
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
              Module['websocket'].emit('connection', newsock.stream.fd);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
              Module['websocket'].emit('connection', sock.stream.fd);
            }
          });
          sock.server.on('closed', function() {
            Module['websocket'].emit('close', sock.stream.fd);
            sock.server = null;
          });
          sock.server.on('error', function(error) {
            // Although the ws library may pass errors that may be more descriptive than
            // ECONNREFUSED they are not necessarily the expected error code e.g. 
            // ENOTFOUND on getaddrinfo seems to be node.js specific, so using EHOSTUNREACH
            // is still probably the most useful thing to do. This error shouldn't
            // occur in a well written app as errors should get trapped in the compiled
            // app's own getaddrinfo call.
            sock.error = ERRNO_CODES.EHOSTUNREACH; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
            Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'EHOSTUNREACH: Host is unreachable']);
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  var _log=Math_log;

  var _emscripten_postinvoke=true;

  function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }

  function ___gxx_personality_v0() {
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)>>0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return (bytesRead / size)|0;
    }

  var _BDtoILow=true;

  var _BDtoIHigh=true;

  function _pthread_cond_broadcast() {
      return 0;
    }

  var _ceil=Math_ceil;

  
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 7) === 0);
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function _pthread_mutex_unlock() {}

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _pthread_mutex_lock() {}

  var _llvm_pow_f64=Math_pow;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function ___cxa_guard_abort() {}

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};
  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

   
  Module["_memmove"] = _memmove;

  var _emscripten_preinvoke=true;

  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = EXCEPTIONS.caught.pop();
      EXCEPTIONS.last = ptr;
      throw ptr;
    }

  function ___cxa_guard_release() {}

  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  function ___errno_location() {
      return ___errno_state;
    }

   
  Module["_memset"] = _memset;

  
  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (FS.isChrdev(stream.node.mode)) {
        ___setErrNo(ERRNO_CODES.ESPIPE);
        return -1;
      } else {
        return stream.position;
      }
    }function _ftello() {
  return _ftell.apply(null, arguments)
  }

  var _BItoD=true;

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }


  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }

  var _tan=Math_tan;


  var _asin=Math_asin;

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  var _fabs=Math_abs;

  var _floor=Math_floor;

  
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)>>0)];
      }
    }function _getc() {
  return _fgetc.apply(null, arguments)
  }

  var _sqrt=Math_sqrt;

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, value); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(function() {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        });
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (!noSetTiming) {
        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
        Browser.mainLoop.scheduler();
      }
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true /* do not set timing and call scheduler, we will do it on the next lines */);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas, vrDevice) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        Browser.vrDevice = vrDevice;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        if (typeof Browser.vrDevice === 'undefined') Browser.vrDevice = null;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
  
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
  
        if (vrDevice) {
          canvasContainer.requestFullScreen({ vrDisplay: vrDevice });
        } else {
          canvasContainer.requestFullScreen();
        }
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function () {
        Browser.allowAsyncCallbacks = false;
      },resumeAsyncCallbacks:function () { // marks future callbacks as ok to execute, and synchronously runs any remaining ones right now
        Browser.allowAsyncCallbacks = true;
        if (Browser.queuedAsyncCallbacks.length > 0) {
          var callbacks = Browser.queuedAsyncCallbacks;
          Browser.queuedAsyncCallbacks = [];
          callbacks.forEach(function(func) {
            func();
          });
        }
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } // drop it on the floor otherwise, next interval will kick in
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              Browser.lastTouches[touch.identifier] = Browser.touches[touch.identifier];
              Browser.touches[touch.identifier] = { x: adjustedX, y: adjustedY };
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _freelocale(locale) {
      _free(locale);
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _sin=Math_sin;

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  var _atan=Math_atan;

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  function _llvm_eh_typeid_for(type) {
      return type;
    }


  var _cos=Math_cos;

  
  
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var fd = _fileno(stream);
      var ret = _lseek(fd, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStreamFromPtr(stream);
      stream.eof = false;
      return 0;
    }function _fseeko() {
  return _fseek.apply(null, arguments)
  }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

   
  Module["_strcpy"] = _strcpy;

  var _exp=Math_exp;

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _acos=Math_acos;

  var ___dso_handle=allocate(1, "i32*", ALLOC_STATIC);



FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); }
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) { Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vid(index,a1,a2) {
  try {
    Module["dynCall_vid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  try {
    Module["dynCall_viiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiddiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiddiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iid(index,a1,a2) {
  try {
    return Module["dynCall_iid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiid(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiid"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_vid": invoke_vid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii, "invoke_viiiiid": invoke_viiiiid, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_viiiiiddiii": invoke_viiiiiddiii, "invoke_iid": invoke_iid, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_diii": invoke_diii, "invoke_i": invoke_i, "invoke_iiiii": invoke_iiiii, "invoke_viiid": invoke_viiid, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "_exp": _exp, "_pthread_key_create": _pthread_key_create, "_fread": _fread, "___cxa_guard_acquire": ___cxa_guard_acquire, "___assert_fail": ___assert_fail, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___ctype_toupper_loc": ___ctype_toupper_loc, "__addDays": __addDays, "_fsync": _fsync, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "_sbrk": _sbrk, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_sysconf": _sysconf, "_close": _close, "_cos": _cos, "_write": _write, "__isLeapYear": __isLeapYear, "_ftell": _ftell, "___cxa_atexit": ___cxa_atexit, "___cxa_rethrow": ___cxa_rethrow, "_catclose": _catclose, "_send": _send, "___cxa_free_exception": ___cxa_free_exception, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_guard_release": ___cxa_guard_release, "_strerror_r": _strerror_r, "___setErrNo": ___setErrNo, "___ctype_tolower_loc": ___ctype_tolower_loc, "_newlocale": _newlocale, "___resumeException": ___resumeException, "_freelocale": _freelocale, "_pthread_once": _pthread_once, "_read": _read, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_catopen": _catopen, "___cxa_guard_abort": ___cxa_guard_abort, "_llvm_pow_f64": _llvm_pow_f64, "___ctype_b_loc": ___ctype_b_loc, "_lseek": _lseek, "_vfprintf": _vfprintf, "___cxa_allocate_exception": ___cxa_allocate_exception, "_asin": _asin, "_floor": _floor, "_pwrite": _pwrite, "_open": _open, "_uselocale": _uselocale, "___cxa_end_catch": ___cxa_end_catch, "_pthread_getspecific": _pthread_getspecific, "_fseek": _fseek, "_fclose": _fclose, "_log": _log, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_recv": _recv, "_tan": _tan, "_fgetc": _fgetc, "_abort": _abort, "_ceil": _ceil, "_fopen": _fopen, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "_sin": _sin, "_acos": _acos, "___gxx_personality_v0": ___gxx_personality_v0, "_ungetc": _ungetc, "_calloc": _calloc, "_fflush": _fflush, "_strftime_l": _strftime_l, "_fprintf": _fprintf, "__reallyNegative": __reallyNegative, "_llvm_eh_typeid_for": _llvm_eh_typeid_for, "_catgets": _catgets, "_fileno": _fileno, "__arraySum": __arraySum, "_fseeko": _fseeko, "_atan": _atan, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pread": _pread, "_mkport": _mkport, "_getc": _getc, "_emscripten_set_main_loop": _emscripten_set_main_loop, "___errno_location": ___errno_location, "_pthread_setspecific": _pthread_setspecific, "_ftello": _ftello, "_fputc": _fputc, "___cxa_throw": ___cxa_throw, "_strerror": _strerror, "__formatString": __formatString, "_atexit": _atexit, "_sqrt": _sqrt, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "___dso_handle": ___dso_handle, "_stderr": _stderr, "_stdin": _stdin, "_stdout": _stdout };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ___dso_handle=env.___dso_handle|0;
  var _stderr=env._stderr|0;
  var _stdin=env._stdin|0;
  var _stdout=env._stdout|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vid=env.invoke_vid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_iiiiiiiiiiii=env.invoke_iiiiiiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiiiiiiiiiii=env.invoke_viiiiiiiiiiiiiii;
  var invoke_viiiiid=env.invoke_viiiiid;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiiiddiii=env.invoke_viiiiiddiii;
  var invoke_iid=env.invoke_iid;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiid=env.invoke_viiiiiid;
  var invoke_viiiiiiiii=env.invoke_viiiiiiiii;
  var invoke_viiiiiiiiii=env.invoke_viiiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_diii=env.invoke_diii;
  var invoke_i=env.invoke_i;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiid=env.invoke_viiid;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var _exp=env._exp;
  var _pthread_key_create=env._pthread_key_create;
  var _fread=env._fread;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var ___assert_fail=env.___assert_fail;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var __addDays=env.__addDays;
  var _fsync=env._fsync;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _sbrk=env._sbrk;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _sysconf=env._sysconf;
  var _close=env._close;
  var _cos=env._cos;
  var _write=env._write;
  var __isLeapYear=env.__isLeapYear;
  var _ftell=env._ftell;
  var ___cxa_atexit=env.___cxa_atexit;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var _catclose=env._catclose;
  var _send=env._send;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var _strerror_r=env._strerror_r;
  var ___setErrNo=env.___setErrNo;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _newlocale=env._newlocale;
  var ___resumeException=env.___resumeException;
  var _freelocale=env._freelocale;
  var _pthread_once=env._pthread_once;
  var _read=env._read;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var _catopen=env._catopen;
  var ___cxa_guard_abort=env.___cxa_guard_abort;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var _lseek=env._lseek;
  var _vfprintf=env._vfprintf;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _asin=env._asin;
  var _floor=env._floor;
  var _pwrite=env._pwrite;
  var _open=env._open;
  var _uselocale=env._uselocale;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var _pthread_getspecific=env._pthread_getspecific;
  var _fseek=env._fseek;
  var _fclose=env._fclose;
  var _log=env._log;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _recv=env._recv;
  var _tan=env._tan;
  var _fgetc=env._fgetc;
  var _abort=env._abort;
  var _ceil=env._ceil;
  var _fopen=env._fopen;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _sin=env._sin;
  var _acos=env._acos;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var _ungetc=env._ungetc;
  var _calloc=env._calloc;
  var _fflush=env._fflush;
  var _strftime_l=env._strftime_l;
  var _fprintf=env._fprintf;
  var __reallyNegative=env.__reallyNegative;
  var _llvm_eh_typeid_for=env._llvm_eh_typeid_for;
  var _catgets=env._catgets;
  var _fileno=env._fileno;
  var __arraySum=env.__arraySum;
  var _fseeko=env._fseeko;
  var _atan=env._atan;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pread=env._pread;
  var _mkport=env._mkport;
  var _getc=env._getc;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var ___errno_location=env.___errno_location;
  var _pthread_setspecific=env._pthread_setspecific;
  var _ftello=env._ftello;
  var _fputc=env._fputc;
  var ___cxa_throw=env.___cxa_throw;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _atexit=env._atexit;
  var _sqrt=env._sqrt;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function __ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST($this, $ast_) {
 $this = $this | 0;
 $ast_ = $ast_ | 0;
 var $$$i$i$i$i = 0, $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i1117 = 0, $$0$i$i$i$i$i$i$i$i$i1117$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i1702 = 0, $$0$i$i$i$i$i$i$i$i$i1702$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i2341 = 0, $$0$i$i$i$i$i$i$i$i$i2341$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i2382 = 0, $$0$i$i$i$i$i$i$i$i$i2382$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i2501 = 0, $$0$i$i$i$i$i$i$i$i$i2501$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i2542 = 0, $$0$i$i$i$i$i$i$i$i$i2542$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i794 = 0, $$0$i$i$i$i$i$i$i$i$i794$lcssa = 0, $$0$i$i$i$i$i$i$i$i1119 = 0, $$0$i$i$i$i$i$i$i$i1704 = 0, $$0$i$i$i$i$i$i$i$i2343 = 0, $$0$i$i$i$i$i$i$i$i2384 = 0, $$0$i$i$i$i$i$i$i$i2503 = 0, $$0$i$i$i$i$i$i$i$i2544 = 0, $$0$i$i$i$i$i$i$i$i796 = 0, $$0$i$i$i$i$i$i1140 = 0, $$0$i$i$i$i$i$i1140$lcssa = 0, $$0$i$i$i$i$i$i1313 = 0, $$0$i$i$i$i$i$i1313$lcssa = 0, $$0$i$i$i$i$i$i1725 = 0, $$0$i$i$i$i$i$i1725$lcssa = 0, $$0$i$i$i$i$i$i2364 = 0, $$0$i$i$i$i$i$i2364$lcssa = 0, $$0$i$i$i$i$i$i2407 = 0, $$0$i$i$i$i$i$i2407$lcssa = 0, $$0$i$i$i$i$i$i2524 = 0, $$0$i$i$i$i$i$i2524$lcssa = 0, $$0$i$i$i$i$i$i2565 = 0, $$0$i$i$i$i$i$i2565$lcssa = 0, $$0$i$i$i$i$i$i817 = 0, $$0$i$i$i$i$i$i817$lcssa = 0, $$0$i$i$i$i$i1142 = 0, $$0$i$i$i$i$i1315 = 0, $$0$i$i$i$i$i1727 = 0, $$0$i$i$i$i$i2366 = 0, $$0$i$i$i$i$i2409 = 0, $$0$i$i$i$i$i2526 = 0, $$0$i$i$i$i$i2567 = 0, $$0$i$i$i$i$i819 = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i$i119$i$i1133 = 0, $$0$i$i$i$i119$i$i1133$ph = 0, $$0$i$i$i$i119$i$i1718 = 0, $$0$i$i$i$i119$i$i1718$ph = 0, $$0$i$i$i$i119$i$i2357 = 0, $$0$i$i$i$i119$i$i2357$ph = 0, $$0$i$i$i$i119$i$i2400 = 0, $$0$i$i$i$i119$i$i2400$ph = 0, $$0$i$i$i$i119$i$i2517 = 0, $$0$i$i$i$i119$i$i2517$ph = 0, $$0$i$i$i$i119$i$i2558 = 0, $$0$i$i$i$i119$i$i2558$ph = 0, $$0$i$i$i$i119$i$i810 = 0, $$0$i$i$i$i119$i$i810$ph = 0, $$0$i$i$i$i1311 = 0, $$0$i$i$i$i544 = 0, $$0$i$i$i$i544$lcssa = 0, $$0$i$i$i10$i$i$i = 0, $$0$i$i$i10$i$i$i$lcssa = 0, $$0$i$i$i1778 = 0, $$0$i$i$i1778$lcssa = 0, $$0$i$i$i1818 = 0, $$0$i$i$i1818$lcssa = 0, $$0$i$i$i1902 = 0, $$0$i$i$i1902$lcssa = 0, $$0$i$i$i546 = 0, $$0$i$i12$i$i$i = 0, $$0$i$i1779 = 0, $$0$i$i1820 = 0, $$0$i$i1904 = 0, $$0$i$i26$i$i$i = 0, $$0$i$i7$i$i$i = 0, $$0$i$i8$i$i$i = 0, $$0$i$i8$i$i$i$be = 0, $$0$i$i8$i$i$i$lcssa = 0, $$0$i1$i$i$i$i = 0, $$0$i1$i$i$i$i$be = 0, $$0$i1$i$i$i$i$lcssa = 0, $$0$i1194 = 0, $$0$i12$i$i = 0, $$0$i12$i$i873 = 0, $$0$i1213 = 0, $$0$i1938 = 0, $$0$i1979 = 0, $$0$i1998 = 0, $$0$i2228 = 0, $$0$i2262 = 0, $$0$i2442 = 0, $$0$i2598 = 0, $$0$i5$i$i = 0, $$0$i681 = 0, $$0$i7$i = 0, $$0$i7$i$i = 0, $$0$i7$i$i$i$i = 0, $$0$i7$i$i$i$i$i = 0, $$0$i7$i$i$i$i$i1035 = 0, $$0$i7$i$i$i$i$i432 = 0, $$0$i7$i$i$i$i$i627 = 0, $$0$i7$i$i$i$i1251 = 0, $$0$i7$i$i$i$i1332 = 0, $$0$i7$i$i$i$i1842 = 0, $$0$i7$i$i$i$i494 = 0, $$0$i7$i$i$i$i712 = 0, $$0$i7$i$i1102 = 0, $$0$i7$i$i1172 = 0, $$0$i7$i$i1302 = 0, $$0$i7$i$i1893 = 0, $$0$i7$i$i758 = 0, $$0$i7$i$i943 = 0, $$0$i7$i$i969 = 0, $$0$i7$i1157 = 0, $$0$i7$i1380 = 0, $$0$i7$i1744 = 0, $$0$i7$i2315 = 0, $$0$i7$i2327 = 0, $$0$i7$i2432 = 0, $$0$i7$i2487 = 0, $$0$i7$i2584 = 0, $$0$i7$i537 = 0, $$0$i7$i836 = 0, $$0$i8$i$i = 0, $$0$i8$i$i$i$i = 0, $$0$i8$i$i$i$i$i = 0, $$0$i8$i$i$i$i$i1036 = 0, $$0$i8$i$i$i$i$i433 = 0, $$0$i8$i$i$i$i$i628 = 0, $$0$i8$i$i$i$i1252 = 0, $$0$i8$i$i$i$i1333 = 0, $$0$i8$i$i$i$i1843 = 0, $$0$i8$i$i$i$i495 = 0, $$0$i8$i$i$i$i713 = 0, $$0$i8$i$i1103 = 0, $$0$i8$i$i1173 = 0, $$0$i8$i$i1303 = 0, $$0$i8$i$i1894 = 0, $$0$i8$i$i759 = 0, $$0$i8$i$i944 = 0, $$0$i8$i$i970 = 0, $$0$i812$i$i = 0, $$0$i813$i$i = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph$lcssa$i$i$i$i$lcssa = 0, $$0$ph$lcssa$i$i$i2462 = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$i = 0, $$0$ph6$i$i$i$i$lcssa6238 = 0, $$0$ph6$i$i$i$lcssa6336 = 0, $$0$ph6$i$i$i2455 = 0, $$0$ph6$i$i$i2455$lcssa6328 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i$i$i$i1122 = 0, $$01$i$i$i$i$i$i$i$i1707 = 0, $$01$i$i$i$i$i$i$i$i2346 = 0, $$01$i$i$i$i$i$i$i$i2387 = 0, $$01$i$i$i$i$i$i$i$i2506 = 0, $$01$i$i$i$i$i$i$i$i2547 = 0, $$01$i$i$i$i$i$i$i$i799 = 0, $$01$i$i$i$i$i1145 = 0, $$01$i$i$i$i$i1318 = 0, $$01$i$i$i$i$i1730 = 0, $$01$i$i$i$i$i2369 = 0, $$01$i$i$i$i$i2412 = 0, $$01$i$i$i$i$i2529 = 0, $$01$i$i$i$i$i2570 = 0, $$01$i$i$i$i$i822 = 0, $$01$i$i$i549 = 0, $$01$i$i$i780 = 0, $$01$i$i$i875 = 0, $$01$i$i15$i$i$i = 0, $$01$i$i1781 = 0, $$01$i$i1823 = 0, $$01$i$i1907 = 0, $$01$i1193 = 0, $$01$i1212 = 0, $$01$i1937 = 0, $$01$i1978 = 0, $$01$i1997 = 0, $$01$i2227 = 0, $$01$i2261 = 0, $$01$i2441 = 0, $$01$i2597 = 0, $$01$i6$i$i = 0, $$01$i6$i$i853 = 0, $$01$ph5$i$i$i = 0, $$01$ph5$i$i$i$i = 0, $$01$ph5$i$i$i2456 = 0, $$010 = 0, $$010$be = 0, $$010$lcssa6877 = 0, $$010$ph = 0, $$013$i$i$i = 0, $$013$i$i$i$i = 0, $$013$i$i$i$i$lcssa = 0, $$013$i$i$i$i$lcssa$lcssa = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i$lcssa$lcssa = 0, $$013$i$i$i2458 = 0, $$013$i$i$i2458$lcssa = 0, $$013$i$i$i2458$lcssa$lcssa = 0, $$0136 = 0, $$0139 = 0, $$0142 = 0, $$0144 = 0, $$0146 = 0, $$0149 = 0, $$0151 = 0, $$0154 = 0, $$0164 = 0, $$0167 = 0, $$0171 = 0, $$0173 = 0, $$0177 = 0, $$0181 = 0, $$0183 = 0, $$0185 = 0, $$0189 = 0, $$0193 = 0, $$0197 = 0, $$02 = 0, $$0201 = 0, $$0205 = 0, $$0209 = 0, $$0213 = 0, $$0216 = 0, $$0218 = 0, $$0220 = 0, $$0222 = 0, $$0226 = 0, $$0228 = 0, $$0230 = 0, $$0234 = 0, $$0237 = 0, $$0241 = 0, $$0243 = 0, $$0245 = 0, $$0247 = 0, $$0249 = 0, $$06 = 0, $$1 = 0, $$10 = 0, $$1011292948 = 0, $$1012949 = 0, $$102 = 0, $$102130 = 0, $$103 = 0, $$103131 = 0, $$1038 = 0, $$104 = 0, $$104132 = 0, $$1061342952 = 0, $$1062953 = 0, $$107 = 0, $$107135 = 0, $$11 = 0, $$111$ph$be = 0, $$111$ph4280 = 0, $$1137 = 0, $$1139 = 0, $$1155 = 0, $$1168 = 0, $$1174 = 0, $$1178 = 0, $$1186 = 0, $$1190 = 0, $$1194 = 0, $$1198 = 0, $$12 = 0, $$1202 = 0, $$1206 = 0, $$1210 = 0, $$1223 = 0, $$1231 = 0, $$1238 = 0, $$1240 = 0, $$13 = 0, $$1322 = 0, $$1341 = 0, $$14 = 0, $$1442 = 0, $$162822 = 0, $$16442821 = 0, $$17 = 0, $$1723 = 0, $$1745 = 0, $$192826 = 0, $$19472825 = 0, $$2 = 0, $$20 = 0, $$2048 = 0, $$212 = 0, $$2138 = 0, $$2138$ph = 0, $$2156 = 0, $$2182812 = 0, $$222830 = 0, $$22502829 = 0, $$2302811 = 0, $$232834 = 0, $$23512833 = 0, $$2424 = 0, $$2452 = 0, $$262837 = 0, $$26542836 = 0, $$27 = 0, $$2755 = 0, $$292841 = 0, $$29572840 = 0, $$3 = 0, $$30 = 0, $$3058 = 0, $$313 = 0, $$3157 = 0, $$322845 = 0, $$32602844 = 0, $$33 = 0, $$3361 = 0, $$35262849 = 0, $$35632848 = 0, $$36 = 0, $$3664 = 0, $$382853 = 0, $$38662852 = 0, $$402857 = 0, $$40682856 = 0, $$412861 = 0, $$414 = 0, $$414$ph = 0, $$4158 = 0, $$41692860 = 0, $$42 = 0, $$4202815 = 0, $$4270 = 0, $$4322814 = 0, $$432864 = 0, $$43712863 = 0, $$44 = 0, $$4472 = 0, $$45 = 0, $$4573 = 0, $$462867 = 0, $$46742866 = 0, $$472872 = 0, $$47752871 = 0, $$492875 = 0, $$49772874 = 0, $$50 = 0, $$5078 = 0, $$512879 = 0, $$515 = 0, $$5159 = 0, $$51792878 = 0, $$52 = 0, $$5212819 = 0, $$5280 = 0, $$532882 = 0, $$5332818 = 0, $$53812881 = 0, $$54 = 0, $$5482 = 0, $$552885 = 0, $$55832884 = 0, $$56 = 0, $$5684 = 0, $$572888 = 0, $$57852887 = 0, $$582892 = 0, $$58862891 = 0, $$59 = 0, $$5987 = 0, $$6 = 0, $$60 = 0, $$6088 = 0, $$6160 = 0, $$622897 = 0, $$62902896 = 0, $$63 = 0, $$634 = 0, $$6391 = 0, $$652901 = 0, $$65932900 = 0, $$66 = 0, $$6694 = 0, $$682905 = 0, $$68962904 = 0, $$692909 = 0, $$69972908 = 0, $$7 = 0, $$70 = 0, $$7098 = 0, $$71 = 0, $$7161 = 0, $$7199 = 0, $$731012911 = 0, $$732912 = 0, $$735 = 0, $$74 = 0, $$74102 = 0, $$761042915 = 0, $$762916 = 0, $$771052919 = 0, $$772920 = 0, $$78 = 0, $$78106 = 0, $$79 = 0, $$79107 = 0, $$8 = 0, $$811092922 = 0, $$812923 = 0, $$821102926 = 0, $$822927 = 0, $$836 = 0, $$841122929 = 0, $$842930 = 0, $$85 = 0, $$85113 = 0, $$86 = 0, $$86114 = 0, $$881162933 = 0, $$882934 = 0, $$891172937 = 0, $$892938 = 0, $$9 = 0, $$90 = 0, $$90118 = 0, $$921202940 = 0, $$922941 = 0, $$93 = 0, $$93121 = 0, $$937 = 0, $$94 = 0, $$94122 = 0, $$95 = 0, $$95123 = 0, $$96 = 0, $$96124 = 0, $$981262944 = 0, $$982945 = 0, $$99 = 0, $$99127 = 0, $$cast$i$i$i$i$i$i$i$i1120$lcssa = 0, $$cast$i$i$i$i$i$i$i$i1705$lcssa = 0, $$cast$i$i$i$i$i$i$i$i2344$lcssa = 0, $$cast$i$i$i$i$i$i$i$i2385$lcssa = 0, $$cast$i$i$i$i$i$i$i$i2504$lcssa = 0, $$cast$i$i$i$i$i$i$i$i2545$lcssa = 0, $$cast$i$i$i$i$i$i$i$i797$lcssa = 0, $$cast$i$i$i$i$i1143$lcssa = 0, $$cast$i$i$i$i$i1316$lcssa = 0, $$cast$i$i$i$i$i1728$lcssa = 0, $$cast$i$i$i$i$i2367$lcssa = 0, $$cast$i$i$i$i$i2410$lcssa = 0, $$cast$i$i$i$i$i2527$lcssa = 0, $$cast$i$i$i$i$i2568$lcssa = 0, $$cast$i$i$i$i$i820$lcssa = 0, $$cast$i$i$i$lcssa = 0, $$cast$i$i$i547$lcssa = 0, $$cast$i$i$lcssa = 0, $$cast$i$i13$i$i$i$lcssa = 0, $$cast$i$i1821$lcssa = 0, $$cast$i$i1905$lcssa = 0, $$idx$i = 0, $$idx$val = 0, $$idx$val$i$i$i$i778 = 0, $$idx$val$i$i$i$i871 = 0, $$idx$val$i$i$i770 = 0, $$idx$val$i$i$i846 = 0, $$idx$val$i$i1110 = 0, $$idx$val$i$i1695 = 0, $$idx$val$i$i2334 = 0, $$idx$val$i$i2375 = 0, $$idx$val$i$i2494 = 0, $$idx$val$i$i2535 = 0, $$idx$val$i$i787 = 0, $$idx$val$i400 = 0, $$idx$val$i411 = 0, $$idx$val$i471 = 0, $$idx$val$i473 = 0, $$idx$val$i593 = 0, $$idx$val$i603 = 0, $$idx$val$i661 = 0, $$idx$val$i66742484278 = 0, $$idx$val$i6915178 = 0, $$idx$val$i6915178$lcssa6256 = 0, $$idx$val$i6915179 = 0, $$idx$val$i769 = 0, $$idx$val$i844 = 0, $$idx$val$i910 = 0, $$idx$val$i910$lcssa6275 = 0, $$idx$val$i910$lcssa6276 = 0, $$idx$val$i910$lcssa6276$lcssa = 0, $$idx$val$i910$lcssa6277 = 0, $$idx$val$i910$lcssa6278 = 0, $$idx$val$i910$lcssa6279 = 0, $$idx$val$i910$lcssa6279$lcssa6459 = 0, $$idx$val$i910$lcssa6280 = 0, $$idx$val$i910$lcssa6281 = 0, $$idx$val$i910$lcssa6282 = 0, $$idx$val$i910$lcssa6283 = 0, $$idx$val$i910$lcssa6283$lcssa6433 = 0, $$idx$val$i910$lcssa6284 = 0, $$idx$val$i910$lcssa6286 = 0, $$idx$val$i910$lcssa6287 = 0, $$idx$val$i910$lcssa6287$lcssa6414 = 0, $$idx$val$i910$lcssa62876416 = 0, $$idx$val$i910$lcssa6288 = 0, $$idx$val$i910$lcssa6288$lcssa6385 = 0, $$idx$val$i910$lcssa6289 = 0, $$idx$val$i910$lcssa6290 = 0, $$idx$val$i910$lcssa6291 = 0, $$idx$val$lcssa = 0, $$idx1$i = 0, $$idx1$i$i$i = 0, $$idx1$i$i$i847 = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i = 0, $$idx1$val$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i1030 = 0, $$idx1$val$i$i$i$i$i$i$i427 = 0, $$idx1$val$i$i$i$i$i$i$i622 = 0, $$idx1$val$i$i$i$i$i$i1246 = 0, $$idx1$val$i$i$i$i$i$i1327 = 0, $$idx1$val$i$i$i$i$i$i1837 = 0, $$idx1$val$i$i$i$i$i$i489 = 0, $$idx1$val$i$i$i$i$i$i707 = 0, $$idx1$val$i$i$i$i1097 = 0, $$idx1$val$i$i$i$i1169 = 0, $$idx1$val$i$i$i$i1227 = 0, $$idx1$val$i$i$i$i1297 = 0, $$idx1$val$i$i$i$i1888 = 0, $$idx1$val$i$i$i$i753 = 0, $$idx1$val$i$i$i$i777 = 0, $$idx1$val$i$i$i$i870 = 0, $$idx1$val$i$i$i$i938 = 0, $$idx1$val$i$i$i$i964 = 0, $$idx1$val$i$i$i1042 = 0, $$idx1$val$i$i$i439 = 0, $$idx1$val$i$i$i634 = 0, $$idx1$val$i$i$i771 = 0, $$idx1$val$i$i$i848 = 0, $$idx1$val$i$i1258 = 0, $$idx1$val$i$i1339 = 0, $$idx1$val$i$i17$i$i = 0, $$idx1$val$i$i17$i$i865 = 0, $$idx1$val$i$i1849 = 0, $$idx1$val$i$i501 = 0, $$idx1$val$i$i719 = 0, $$idx1$val$i66942494279 = 0, $$idx1$val$i66942494281 = 0, $$idx1$val$i693 = 0, $$idx2$val$i22$i$i$i$i$i$i1129 = 0, $$idx2$val$i22$i$i$i$i$i$i1714 = 0, $$idx2$val$i22$i$i$i$i$i$i2353 = 0, $$idx2$val$i22$i$i$i$i$i$i2396 = 0, $$idx2$val$i22$i$i$i$i$i$i2513 = 0, $$idx2$val$i22$i$i$i$i$i$i2554 = 0, $$idx2$val$i22$i$i$i$i$i$i806 = 0, $$idx2$val$i698 = 0, $$idx253 = 0, $$idx253$lcssa = 0, $$idx255$val = 0, $$idx259$val = 0, $$idx259$val$lcssa = 0, $$idx260 = 0, $$idx260$lcssa = 0, $$idx260$val = 0, $$idx260$val$lcssa = 0, $$idx263 = 0, $$idx265$val = 0, $$idx266 = 0, $$idx266$val = 0, $$idx267$pre$phiZZ2D = 0, $$idx267$val = 0, $$idx267$val$lcssa = 0, $$idx270$val = 0, $$idx271$val = 0, $$idx273$val = 0, $$idx274$val = 0, $$idx310 = 0, $$idx394 = 0, $$idx4$val$i$i = 0, $$idx4$val$i$i$i = 0, $$idx4$val$i$i$i1056 = 0, $$idx4$val$i$i$i453 = 0, $$idx4$val$i$i$i648 = 0, $$idx4$val$i$i1272 = 0, $$idx4$val$i$i1353 = 0, $$idx4$val$i$i1863 = 0, $$idx4$val$i$i515 = 0, $$idx4$val$i$i733 = 0, $$idx5$val$i$i = 0, $$idx5$val$i$i$i = 0, $$idx5$val$i$i$i1055 = 0, $$idx5$val$i$i$i452 = 0, $$idx5$val$i$i$i647 = 0, $$idx5$val$i$i1271 = 0, $$idx5$val$i$i1352 = 0, $$idx5$val$i$i1862 = 0, $$idx5$val$i$i514 = 0, $$idx5$val$i$i732 = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$i$i$i = 0, $$idx6$val$i$i$i1062 = 0, $$idx6$val$i$i$i459 = 0, $$idx6$val$i$i$i654 = 0, $$idx6$val$i$i1278 = 0, $$idx6$val$i$i1359 = 0, $$idx6$val$i$i1869 = 0, $$idx6$val$i$i521 = 0, $$idx6$val$i$i739 = 0, $$idx6$val$pre$i$i = 0, $$idx6$val$pre$i$i$i = 0, $$idx6$val$pre$i$i$i1059 = 0, $$idx6$val$pre$i$i$i456 = 0, $$idx6$val$pre$i$i$i651 = 0, $$idx6$val$pre$i$i1275 = 0, $$idx6$val$pre$i$i1356 = 0, $$idx6$val$pre$i$i1866 = 0, $$idx6$val$pre$i$i518 = 0, $$idx6$val$pre$i$i736 = 0, $$idx6$val11$i$i = 0, $$idx6$val11$i$i$i = 0, $$idx6$val11$i$i$i1046 = 0, $$idx6$val11$i$i$i443 = 0, $$idx6$val11$i$i$i638 = 0, $$idx6$val11$i$i1262 = 0, $$idx6$val11$i$i1343 = 0, $$idx6$val11$i$i1853 = 0, $$idx6$val11$i$i505 = 0, $$idx6$val11$i$i723 = 0, $$idx6$val14$i$i = 0, $$idx6$val14$i$i$i = 0, $$idx6$val14$i$i$i1050 = 0, $$idx6$val14$i$i$i447 = 0, $$idx6$val14$i$i$i642 = 0, $$idx6$val14$i$i1266 = 0, $$idx6$val14$i$i1347 = 0, $$idx6$val14$i$i1857 = 0, $$idx6$val14$i$i509 = 0, $$idx6$val14$i$i727 = 0, $$idx7$val$i$i = 0, $$idx7$val$i$i$i = 0, $$idx7$val$i$i$i1061 = 0, $$idx7$val$i$i$i458 = 0, $$idx7$val$i$i$i653 = 0, $$idx7$val$i$i1277 = 0, $$idx7$val$i$i1358 = 0, $$idx7$val$i$i1868 = 0, $$idx7$val$i$i520 = 0, $$idx7$val$i$i738 = 0, $$idx7$val12$i$i = 0, $$idx7$val12$i$i$i = 0, $$idx7$val12$i$i$i1047 = 0, $$idx7$val12$i$i$i444 = 0, $$idx7$val12$i$i$i639 = 0, $$idx7$val12$i$i1263 = 0, $$idx7$val12$i$i1344 = 0, $$idx7$val12$i$i1854 = 0, $$idx7$val12$i$i506 = 0, $$idx7$val12$i$i724 = 0, $$idx7$val18$i$i = 0, $$idx7$val18$i$i$i = 0, $$idx7$val18$i$i$i1049 = 0, $$idx7$val18$i$i$i446 = 0, $$idx7$val18$i$i$i641 = 0, $$idx7$val18$i$i1265 = 0, $$idx7$val18$i$i1346 = 0, $$idx7$val18$i$i1856 = 0, $$idx7$val18$i$i508 = 0, $$idx7$val18$i$i726 = 0, $$lcssa = 0, $$lcssa$i$i = 0, $$lcssa$i$i$i = 0, $$lcssa$i$i$i1066 = 0, $$lcssa$i$i$i463 = 0, $$lcssa$i$i$i658 = 0, $$lcssa$i$i1282 = 0, $$lcssa$i$i1363 = 0, $$lcssa$i$i1873 = 0, $$lcssa$i$i525 = 0, $$lcssa$i$i743 = 0, $$lcssa6242 = 0, $$lcssa6245 = 0, $$lcssa6246 = 0, $$lcssa6249 = 0, $$lcssa6250 = 0, $$lcssa6252 = 0, $$lcssa6253 = 0, $$lcssa6255 = 0, $$lcssa6294 = 0, $$lcssa6296 = 0, $$lcssa6296$lcssa = 0, $$lcssa6298 = 0, $$lcssa6304 = 0, $$lcssa6307 = 0, $$lcssa6307$lcssa6412 = 0, $$lcssa6314 = 0, $$lcssa6314$lcssa = 0, $$lcssa6314$lcssa6817 = 0, $$lcssa6314$lcssa6818 = 0, $$lcssa6314$lcssa6819 = 0, $$lcssa6314$lcssa6822 = 0, $$lcssa6314$lcssa6823 = 0, $$lcssa6314$lcssa6824 = 0, $$lcssa6314$lcssa6825 = 0, $$lcssa6314$lcssa6826 = 0, $$lcssa6317 = 0, $$lcssa6317$lcssa = 0, $$lcssa6320 = 0, $$lcssa6323 = 0, $$lcssa6325 = 0, $$lcssa6325$lcssa = 0, $$lcssa6325$lcssa6791 = 0, $$lcssa6325$lcssa6792 = 0, $$lcssa6325$lcssa6793 = 0, $$lcssa6325$lcssa6796 = 0, $$lcssa6325$lcssa6797 = 0, $$lcssa6325$lcssa6799 = 0, $$lcssa6325$lcssa6800 = 0, $$lcssa6331 = 0, $$lcssa6332 = 0, $$lcssa6339 = 0, $$lcssa6340 = 0, $$lcssa6343 = 0, $$lcssa6344 = 0, $$lcssa6347 = 0, $$lcssa6351 = 0, $$lcssa6352 = 0, $$lcssa6353 = 0, $$lcssa6354 = 0, $$lcssa6356 = 0, $$lcssa6357 = 0, $$lcssa6359 = 0, $$lcssa6360 = 0, $$lcssa6362 = 0, $$lcssa6363 = 0, $$lcssa6364 = 0, $$lcssa6367 = 0, $$lcssa6368 = 0, $$lcssa6369 = 0, $$lcssa6371 = 0, $$lcssa6375 = 0, $$lcssa6376 = 0, $$lcssa6377 = 0, $$lcssa6379 = 0, $$lcssa6380 = 0, $$lcssa6381 = 0, $$lcssa6382 = 0, $$lcssa6383 = 0, $$lcssa6389 = 0, $$lcssa6390 = 0, $$lcssa6391 = 0, $$lcssa6395 = 0, $$lcssa6400 = 0, $$lcssa6405 = 0, $$lcssa6417 = 0, $$lcssa6418 = 0, $$lcssa6421 = 0, $$lcssa6422 = 0, $$lcssa6427 = 0, $$lcssa6428 = 0, $$lcssa6429 = 0, $$lcssa6442 = 0, $$lcssa6442$lcssa7191 = 0, $$lcssa6444 = 0, $$lcssa6445 = 0, $$lcssa6447 = 0, $$lcssa6448 = 0, $$lcssa6449 = 0, $$lcssa6450 = 0, $$lcssa6452 = 0, $$lcssa6454 = 0, $$lcssa6456 = 0, $$lcssa6458 = 0, $$lcssa6460 = 0, $$lcssa6462 = 0, $$lcssa6467 = 0, $$lcssa6469 = 0, $$lcssa6470 = 0, $$lcssa6550 = 0, $$lcssa6555 = 0, $$lcssa6556 = 0, $$lcssa6563 = 0, $$lcssa6574 = 0, $$lcssa6575 = 0, $$lcssa6579 = 0, $$lcssa6586 = 0, $$lcssa6587 = 0, $$lcssa6592 = 0, $$lcssa6625 = 0, $$lcssa6626 = 0, $$lcssa6631 = 0, $$lcssa6709 = 0, $$lcssa6715 = 0, $$lcssa6716 = 0, $$lcssa6720 = 0, $$lcssa6721 = 0, $$lcssa6725 = 0, $$lcssa6729 = 0, $$lcssa6731 = 0, $$lcssa6732 = 0, $$lcssa6733 = 0, $$lcssa6734 = 0, $$lcssa6735 = 0, $$lcssa6739 = 0, $$lcssa6740 = 0, $$lcssa6742 = 0, $$lcssa6744 = 0, $$lcssa6745 = 0, $$lcssa6746 = 0, $$lcssa6751 = 0, $$lcssa6752 = 0, $$lcssa6757 = 0, $$lcssa6758 = 0, $$lcssa6759 = 0, $$lcssa6760 = 0, $$lcssa6761 = 0, $$lcssa6762 = 0, $$lcssa6763 = 0, $$lcssa6764 = 0, $$lcssa6765 = 0, $$lcssa6766 = 0, $$lcssa6767 = 0, $$lcssa6773 = 0, $$lcssa6778 = 0, $$lcssa6782 = 0, $$lcssa6786 = 0, $$lcssa6787 = 0, $$lcssa6789 = 0, $$lcssa6790 = 0, $$lcssa6830 = 0, $$lcssa6831 = 0, $$lcssa6832 = 0, $$lcssa6838 = 0, $$lcssa6844 = 0, $$lcssa6850 = 0, $$lcssa6856 = 0, $$lcssa6864 = 0, $$lcssa6865 = 0, $$lcssa6868 = 0, $$lcssa6869 = 0, $$lcssa6873 = 0, $$lcssa6874 = 0, $$lcssa7030 = 0, $$lcssa7186 = 0, $$lcssa7187 = 0, $$lcssa7188 = 0, $$lcssa7189 = 0, $$lcssa7190 = 0, $$lcssa7192 = 0, $$pre = 0, $$pre$i$i$i$i$i$i1115 = 0, $$pre$i$i$i$i$i$i1700 = 0, $$pre$i$i$i$i$i$i2339 = 0, $$pre$i$i$i$i$i$i2380 = 0, $$pre$i$i$i$i$i$i2499 = 0, $$pre$i$i$i$i$i$i2540 = 0, $$pre$i$i$i$i$i$i792 = 0, $$pre$i$i1131 = 0, $$pre$i$i1716 = 0, $$pre$i$i2355 = 0, $$pre$i$i2398 = 0, $$pre$i$i2515 = 0, $$pre$i$i2556 = 0, $$pre$i$i808 = 0, $$pre$i1164 = 0, $$pre$phi5209Z2D = 0, $$pre$phi5211Z2D = 0, $$pre5172 = 0, $$pre5175 = 0, $$pre5186 = 0, $$pre5187 = 0, $$pre5188 = 0, $$pre5189 = 0, $$pre5205$pre$phiZZ2D = 0, $$sroa$22798 = 0, $$sroa$3 = 0, $$sroa$32656 = 0, $$sroa$32696 = 0, $$sroa$32729 = 0, $$sroa$32733 = 0, $$sroa$32737 = 0, $$sroa$32741 = 0, $$sroa$32749 = 0, $$sroa$32753 = 0, $$sroa$32757 = 0, $$sroa$32761 = 0, $$sroa$32780 = 0, $$sroa$32784 = 0, $$sroa$32788 = 0, $$sroa$32792 = 0, $$sroa$32802 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1001 = 0, $1008 = 0, $101 = 0, $1016 = 0, $102 = 0, $1022 = 0, $1023 = 0, $1027 = 0, $103 = 0, $1030 = 0, $1033 = 0, $1035 = 0, $1036 = 0, $104 = 0, $1048 = 0, $105 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1064 = 0, $1065 = 0, $1068 = 0, $107 = 0, $1070 = 0, $1072 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1083 = 0, $1084 = 0, $1089 = 0, $109 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1098 = 0, $11 = 0, $110 = 0, $1100 = 0, $1102 = 0, $1104 = 0, $1105 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1114 = 0, $1115 = 0, $112 = 0, $1122 = 0, $113 = 0, $1136 = 0, $1139 = 0, $114 = 0, $1143 = 0, $115 = 0, $1152 = 0, $1157 = 0, $1159 = 0, $116 = 0, $1163 = 0, $1167 = 0, $1168 = 0, $117 = 0, $1174 = 0, $1175 = 0, $118 = 0, $1187 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $12 = 0, $120 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1215 = 0, $1216 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1223 = 0, $123 = 0, $1234 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1245 = 0, $1246 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1252 = 0, $1253 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1263 = 0, $1265 = 0, $1267 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $128 = 0, $1281 = 0, $1283 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1298 = 0, $13 = 0, $130 = 0, $1302 = 0, $1304 = 0, $1306 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1312 = 0, $1314 = 0, $1315 = 0, $132 = 0, $1323 = 0, $1324 = 0, $1326 = 0, $1327 = 0, $133 = 0, $1335 = 0, $1336 = 0, $1338 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1344 = 0, $1346 = 0, $1348 = 0, $135 = 0, $1350 = 0, $1352 = 0, $1353 = 0, $1355 = 0, $1356 = 0, $136 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1377 = 0, $1379 = 0, $138 = 0, $1381 = 0, $1382 = 0, $1385 = 0, $1386 = 0, $139 = 0, $1391 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $14 = 0, $140 = 0, $1400 = 0, $1402 = 0, $1404 = 0, $1406 = 0, $1407 = 0, $141 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1416 = 0, $1417 = 0, $142 = 0, $1424 = 0, $143 = 0, $1438 = 0, $144 = 0, $1441 = 0, $1445 = 0, $145 = 0, $1454 = 0, $1459 = 0, $146 = 0, $1461 = 0, $1465 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1473 = 0, $1474 = 0, $1479 = 0, $148 = 0, $1484 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1493 = 0, $1495 = 0, $1497 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $151 = 0, $1510 = 0, $1512 = 0, $1514 = 0, $152 = 0, $1522 = 0, $1523 = 0, $1526 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1532 = 0, $1533 = 0, $1535 = 0, $1539 = 0, $154 = 0, $1541 = 0, $1544 = 0, $155 = 0, $1550 = 0, $1554 = 0, $1556 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1562 = 0, $1563 = 0, $1565 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1573 = 0, $1575 = 0, $1578 = 0, $158 = 0, $1581 = 0, $1582 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1597 = 0, $16 = 0, $160 = 0, $1600 = 0, $1603 = 0, $1605 = 0, $1607 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1613 = 0, $1616 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1623 = 0, $1625 = 0, $1626 = 0, $1629 = 0, $163 = 0, $1631 = 0, $1633 = 0, $1636 = 0, $1637 = 0, $164 = 0, $1641 = 0, $1643 = 0, $1645 = 0, $1648 = 0, $165 = 0, $1655 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1661 = 0, $1662 = 0, $1666 = 0, $1668 = 0, $167 = 0, $1671 = 0, $1674 = 0, $1677 = 0, $1678 = 0, $168 = 0, $1680 = 0, $1683 = 0, $1688 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1694 = 0, $1696 = 0, $1697 = 0, $17 = 0, $170 = 0, $1700 = 0, $1702 = 0, $1705 = 0, $1706 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1716 = 0, $1718 = 0, $172 = 0, $1721 = 0, $173 = 0, $1735 = 0, $1737 = 0, $174 = 0, $1743 = 0, $1748 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1754 = 0, $1755 = 0, $1757 = 0, $176 = 0, $1762 = 0, $1763 = 0, $1765 = 0, $1767 = 0, $177 = 0, $1770 = 0, $1773 = 0, $1774 = 0, $178 = 0, $1781 = 0, $1782 = 0, $1789 = 0, $179 = 0, $1792 = 0, $1795 = 0, $1797 = 0, $1799 = 0, $18 = 0, $180 = 0, $1802 = 0, $1803 = 0, $1805 = 0, $1808 = 0, $181 = 0, $1812 = 0, $1816 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1825 = 0, $1828 = 0, $183 = 0, $1835 = 0, $1839 = 0, $184 = 0, $1844 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1855 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1864 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1875 = 0, $1876 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1882 = 0, $1883 = 0, $1885 = 0, $1887 = 0, $1888 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1893 = 0, $1895 = 0, $19 = 0, $190 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1913 = 0, $1915 = 0, $192 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1933 = 0, $1935 = 0, $1937 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0, $1943 = 0, $1945 = 0, $1947 = 0, $1949 = 0, $195 = 0, $1951 = 0, $1953 = 0, $1955 = 0, $1956 = 0, $1959 = 0, $1960 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1966 = 0, $1969 = 0, $1974 = 0, $1976 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1985 = 0, $1987 = 0, $1989 = 0, $199 = 0, $1991 = 0, $1992 = 0, $1995 = 0, $1996 = 0, $1998 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $2004 = 0, $2006 = 0, $201 = 0, $2014 = 0, $2017 = 0, $202 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $203 = 0, $2031 = 0, $2036 = 0, $2038 = 0, $204 = 0, $2041 = 0, $2042 = 0, $2043 = 0, $2047 = 0, $2049 = 0, $205 = 0, $2051 = 0, $2053 = 0, $2054 = 0, $2057 = 0, $2058 = 0, $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2066 = 0, $207 = 0, $2070 = 0, $2072 = 0, $2075 = 0, $208 = 0, $2081 = 0, $2082 = 0, $2084 = 0, $2086 = 0, $2087 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2092 = 0, $2094 = 0, $2096 = 0, $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2102 = 0, $2103 = 0, $211 = 0, $2110 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2121 = 0, $2123 = 0, $2124 = 0, $2126 = 0, $2127 = 0, $2129 = 0, $213 = 0, $2131 = 0, $2133 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2139 = 0, $214 = 0, $2140 = 0, $215 = 0, $2156 = 0.0, $2158 = 0, $2159 = 0, $216 = 0, $2162 = 0, $2164 = 0, $2166 = 0, $2168 = 0, $2169 = 0, $217 = 0, $218 = 0, $2180 = 0.0, $2187 = 0.0, $219 = 0, $2194 = 0.0, $22 = 0, $220 = 0, $2201 = 0.0, $2208 = 0.0, $221 = 0, $2213 = 0, $2218 = 0, $222 = 0, $2223 = 0, $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2232 = 0, $2234 = 0, $2235 = 0, $2237 = 0, $2238 = 0, $224 = 0, $2240 = 0, $2242 = 0, $2244 = 0, $2246 = 0, $2247 = 0, $2248 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2255 = 0, $2257 = 0, $2258 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2263 = 0, $2265 = 0, $2267 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2278 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2283 = 0, $2284 = 0, $2286 = 0, $2288 = 0, $229 = 0, $2290 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2296 = 0, $2297 = 0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0, $2302 = 0, $2304 = 0, $2305 = 0, $2307 = 0, $2308 = 0, $231 = 0, $2310 = 0, $2312 = 0, $2314 = 0, $2316 = 0, $2317 = 0, $2318 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2328 = 0, $2329 = 0, $233 = 0, $2332 = 0, $2333 = 0, $2338 = 0, $234 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2347 = 0, $2349 = 0, $235 = 0, $2351 = 0, $2353 = 0, $2354 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2360 = 0, $2363 = 0, $2364 = 0, $237 = 0, $2371 = 0, $238 = 0, $2385 = 0, $2388 = 0, $239 = 0, $2392 = 0, $24 = 0, $240 = 0, $2401 = 0, $2406 = 0, $2408 = 0, $241 = 0, $2412 = 0, $2415 = 0, $2416 = 0, $2417 = 0, $2418 = 0, $2419 = 0, $242 = 0, $2421 = 0, $2426 = 0, $243 = 0, $2437 = 0, $2438 = 0, $2439 = 0, $244 = 0, $2440 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2451 = 0, $2453 = 0, $2455 = 0, $2456 = 0, $2457 = 0, $2459 = 0, $246 = 0, $2464 = 0, $2466 = 0, $247 = 0, $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2486 = 0, $2488 = 0, $249 = 0, $2490 = 0, $2495 = 0, $2497 = 0, $25 = 0, $250 = 0, $2508 = 0, $2509 = 0, $251 = 0, $2510 = 0, $2512 = 0, $2513 = 0, $2514 = 0, $2517 = 0, $2519 = 0, $252 = 0, $2521 = 0, $2526 = 0, $2528 = 0, $253 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2543 = 0, $2544 = 0, $2545 = 0, $2548 = 0, $255 = 0, $2550 = 0, $2552 = 0, $2557 = 0, $2559 = 0, $256 = 0, $257 = 0, $2570 = 0, $2571 = 0, $2572 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2579 = 0, $258 = 0, $2581 = 0, $2582 = 0, $2584 = 0, $2586 = 0, $2587 = 0, $2589 = 0, $259 = 0, $2590 = 0, $2592 = 0, $2594 = 0, $2596 = 0, $2598 = 0, $2599 = 0, $26 = 0, $260 = 0, $2600 = 0, $2602 = 0, $2603 = 0, $2605 = 0, $2607 = 0, $2609 = 0, $261 = 0, $2612 = 0, $2613 = 0, $2614 = 0, $2616 = 0, $2617 = 0, $2619 = 0, $262 = 0, $2621 = 0, $2623 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $263 = 0, $2631 = 0, $2632 = 0, $2634 = 0, $2635 = 0, $2636 = 0, $2637 = 0, $264 = 0, $2642 = 0, $2647 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0, $2656 = 0, $2658 = 0, $266 = 0, $2660 = 0, $2662 = 0, $2663 = 0, $2667 = 0, $2668 = 0, $2669 = 0, $267 = 0, $2673 = 0, $2676 = 0, $268 = 0, $2684 = 0, $2685 = 0, $2689 = 0, $269 = 0, $2690 = 0, $2693 = 0, $2695 = 0, $2697 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2705 = 0, $2707 = 0, $2709 = 0, $271 = 0, $2712 = 0, $2719 = 0, $272 = 0, $2722 = 0, $2723 = 0, $2725 = 0, $2726 = 0, $273 = 0, $2730 = 0, $2732 = 0, $2735 = 0, $2738 = 0, $274 = 0, $2741 = 0, $2742 = 0, $2744 = 0, $2747 = 0, $275 = 0, $2751 = 0, $2758 = 0, $276 = 0, $2760 = 0, $2763 = 0, $2764 = 0, $2767 = 0, $2768 = 0, $277 = 0, $2774 = 0, $2776 = 0, $2779 = 0, $278 = 0, $2788 = 0, $279 = 0, $2791 = 0, $2793 = 0, $2794 = 0, $2797 = 0, $2798 = 0, $2799 = 0, $28 = 0, $280 = 0, $2800 = 0, $2801 = 0, $2809 = 0, $281 = 0, $2811 = 0, $2814 = 0, $2815 = 0, $2817 = 0, $282 = 0, $2820 = 0, $2825 = 0, $2827 = 0, $283 = 0, $2830 = 0, $2831 = 0, $2832 = 0, $2836 = 0, $2838 = 0, $284 = 0, $2840 = 0, $2842 = 0, $2843 = 0, $2846 = 0, $2847 = 0, $2849 = 0, $285 = 0, $2850 = 0, $2851 = 0, $2855 = 0, $2857 = 0, $2859 = 0, $286 = 0, $2861 = 0, $2863 = 0, $2865 = 0, $2866 = 0, $287 = 0, $2871 = 0, $2873 = 0, $2877 = 0, $2879 = 0, $288 = 0, $2880 = 0, $2881 = 0, $2884 = 0, $2888 = 0, $289 = 0, $2890 = 0, $2892 = 0, $2894 = 0, $2895 = 0, $2896 = 0, $2898 = 0, $29 = 0, $290 = 0, $2900 = 0, $2901 = 0, $2903 = 0, $2905 = 0, $2906 = 0, $2908 = 0, $291 = 0, $2910 = 0, $2912 = 0, $2913 = 0, $2914 = 0, $2916 = 0, $2918 = 0, $2919 = 0, $292 = 0, $2921 = 0, $2922 = 0, $2924 = 0, $293 = 0, $2930 = 0, $2931 = 0, $2932 = 0, $2935 = 0, $2939 = 0, $294 = 0, $2941 = 0, $2943 = 0, $2945 = 0, $2946 = 0, $2947 = 0, $2949 = 0, $295 = 0, $2951 = 0, $2952 = 0, $296 = 0, $2960 = 0, $2962 = 0, $2963 = 0, $2965 = 0, $2967 = 0, $2969 = 0, $297 = 0, $2971 = 0, $2973 = 0, $2975 = 0, $2977 = 0, $2979 = 0, $298 = 0, $2980 = 0, $2983 = 0, $2986 = 0, $2987 = 0, $299 = 0, $2993 = 0, $2995 = 0, $2998 = 0, $3 = 0, $30 = 0, $300 = 0, $3001 = 0, $3002 = 0, $3005 = 0, $3006 = 0, $3007 = 0, $3009 = 0, $301 = 0, $3010 = 0, $3014 = 0, $3018 = 0, $302 = 0, $3020 = 0, $3023 = 0, $3024 = 0, $3025 = 0, $3026 = 0, $3027 = 0, $3028 = 0, $3029 = 0, $303 = 0, $3030 = 0, $3032 = 0, $3033 = 0, $3034 = 0, $3035 = 0, $3038 = 0, $3039 = 0, $304 = 0, $3040 = 0, $3044 = 0, $3045 = 0, $3048 = 0, $3049 = 0, $305 = 0, $3054 = 0, $3056 = 0, $3059 = 0, $306 = 0, $3060 = 0, $3061 = 0, $3065 = 0, $3067 = 0, $3069 = 0, $307 = 0, $3071 = 0, $3072 = 0, $3075 = 0, $3076 = 0, $3078 = 0, $3079 = 0, $308 = 0, $3080 = 0, $3083 = 0, $3084 = 0, $309 = 0, $3091 = 0, $31 = 0, $310 = 0, $3100 = 0, $3102 = 0, $3108 = 0, $311 = 0, $3111 = 0, $3114 = 0, $3118 = 0, $312 = 0, $3127 = 0, $313 = 0, $3132 = 0, $3134 = 0, $3138 = 0, $314 = 0, $3140 = 0, $3145 = 0, $315 = 0, $3150 = 0, $3152 = 0, $3155 = 0, $3156 = 0, $3157 = 0, $316 = 0, $3161 = 0, $3163 = 0, $3165 = 0, $3167 = 0, $3168 = 0, $317 = 0, $3171 = 0, $3172 = 0, $3174 = 0, $3175 = 0, $3176 = 0, $318 = 0, $3180 = 0, $3185 = 0, $3189 = 0, $319 = 0, $3194 = 0, $3198 = 0, $32 = 0, $320 = 0, $3202 = 0, $3203 = 0, $3205 = 0, $3208 = 0, $321 = 0, $3210 = 0, $3213 = 0, $3217 = 0, $322 = 0, $3220 = 0, $3222 = 0, $3225 = 0, $3227 = 0, $3228 = 0, $323 = 0, $3231 = 0, $3233 = 0, $3236 = 0, $324 = 0, $3240 = 0, $3242 = 0, $3245 = 0, $325 = 0, $3250 = 0, $3251 = 0, $3254 = 0, $3255 = 0, $3258 = 0, $326 = 0, $3260 = 0, $3261 = 0, $3263 = 0, $3264 = 0, $3267 = 0, $327 = 0, $3272 = 0, $3273 = 0, $3279 = 0, $328 = 0, $3281 = 0, $3284 = 0, $3288 = 0, $329 = 0, $3290 = 0, $3293 = 0, $3297 = 0, $3298 = 0, $3299 = 0, $33 = 0, $330 = 0, $3301 = 0, $3302 = 0, $3304 = 0, $3305 = 0, $3306 = 0, $3307 = 0, $331 = 0, $3310 = 0, $3311 = 0, $3314 = 0, $3315 = 0, $332 = 0, $3320 = 0, $3322 = 0, $3325 = 0, $3326 = 0, $3327 = 0, $333 = 0, $3331 = 0, $3333 = 0, $3335 = 0, $3337 = 0, $3338 = 0, $334 = 0, $3341 = 0, $3342 = 0, $3344 = 0, $3345 = 0, $3346 = 0, $3349 = 0, $335 = 0, $3350 = 0, $3357 = 0, $336 = 0, $3366 = 0, $3368 = 0, $337 = 0, $3374 = 0, $3377 = 0, $338 = 0, $3380 = 0, $3384 = 0, $339 = 0, $3393 = 0, $3398 = 0, $34 = 0, $340 = 0, $3400 = 0, $3404 = 0, $341 = 0, $3411 = 0, $3414 = 0, $3416 = 0, $3419 = 0, $342 = 0, $3420 = 0, $3423 = 0, $3424 = 0, $343 = 0, $3430 = 0, $3432 = 0, $3435 = 0, $344 = 0, $3442 = 0, $3444 = 0, $3446 = 0, $3447 = 0, $345 = 0, $3453 = 0, $3455 = 0, $3456 = 0, $346 = 0, $3462 = 0, $3463 = 0, $3468 = 0, $347 = 0, $3470 = 0, $3476 = 0.0, $3477 = 0, $3479 = 0, $348 = 0, $3480 = 0, $3481 = 0, $3482 = 0, $3486 = 0, $3488 = 0, $349 = 0, $3492 = 0.0, $3493 = 0, $3495 = 0, $3496 = 0, $3497 = 0, $3498 = 0, $35 = 0, $350 = 0, $3502 = 0, $3504 = 0, $3508 = 0.0, $3509 = 0, $351 = 0, $3511 = 0, $3512 = 0, $3513 = 0, $3514 = 0, $3518 = 0, $352 = 0, $3520 = 0, $3524 = 0.0, $3525 = 0, $3527 = 0, $3528 = 0, $3529 = 0, $353 = 0, $3530 = 0, $3534 = 0, $3536 = 0, $354 = 0, $3540 = 0.0, $3541 = 0, $3543 = 0, $3544 = 0, $3545 = 0, $3546 = 0, $355 = 0, $3550 = 0, $3552 = 0, $3556 = 0.0, $3557 = 0, $3559 = 0, $3560 = 0, $3561 = 0, $3562 = 0, $3566 = 0, $3568 = 0, $3572 = 0.0, $3573 = 0, $3575 = 0, $3576 = 0, $3577 = 0, $3578 = 0, $3582 = 0, $3584 = 0, $3588 = 0.0, $3589 = 0, $3591 = 0, $3592 = 0, $3593 = 0, $3594 = 0, $3598 = 0, $36 = 0, $3600 = 0, $3604 = 0.0, $3605 = 0, $3607 = 0, $3608 = 0, $3609 = 0, $3610 = 0, $3614 = 0, $3616 = 0, $3620 = 0.0, $3621 = 0, $3623 = 0, $3624 = 0, $3626 = 0, $3628 = 0, $3630 = 0, $3631 = 0, $3632 = 0, $3634 = 0, $3636 = 0, $3637 = 0, $3638 = 0, $3640 = 0, $3642 = 0, $3643 = 0, $3644 = 0, $3646 = 0, $3648 = 0, $3649 = 0, $3650 = 0, $3652 = 0, $3654 = 0, $3655 = 0, $3656 = 0, $3658 = 0, $3660 = 0, $3661 = 0, $3662 = 0, $3664 = 0, $3666 = 0, $3667 = 0, $3668 = 0, $3669 = 0, $3674 = 0, $3676 = 0, $3679 = 0, $3682 = 0, $3688 = 0, $3689 = 0, $369 = 0, $3691 = 0, $3693 = 0, $3695 = 0, $3696 = 0, $3697 = 0, $3699 = 0, $37 = 0, $3700 = 0, $3702 = 0, $3704 = 0, $3708 = 0, $3709 = 0, $371 = 0, $3710 = 0, $3711 = 0, $3717 = 0, $3718 = 0, $3721 = 0, $3722 = 0, $3725 = 0, $3727 = 0, $3729 = 0, $373 = 0, $3732 = 0, $3733 = 0, $3737 = 0, $3739 = 0, $374 = 0, $3741 = 0, $3744 = 0, $3751 = 0, $3754 = 0, $3755 = 0, $3757 = 0, $3758 = 0, $3762 = 0, $3764 = 0, $3767 = 0, $3770 = 0, $3773 = 0, $3774 = 0, $3776 = 0, $3779 = 0, $3783 = 0, $3784 = 0, $3789 = 0, $379 = 0, $3791 = 0, $3794 = 0, $3795 = 0, $3798 = 0, $3799 = 0, $38 = 0, $380 = 0, $3805 = 0, $3807 = 0, $381 = 0, $3810 = 0, $3818 = 0, $382 = 0, $3821 = 0, $3823 = 0, $3824 = 0, $3826 = 0, $3827 = 0, $3833 = 0, $3835 = 0, $3840 = 0, $3844 = 0, $3846 = 0, $3848 = 0, $3849 = 0, $385 = 0, $3851 = 0, $3853 = 0, $3854 = 0, $3855 = 0, $3856 = 0, $3857 = 0, $3858 = 0, $386 = 0, $3860 = 0, $3861 = 0, $3862 = 0, $3864 = 0, $387 = 0, $3870 = 0, $3872 = 0, $3885 = 0, $3886 = 0, $389 = 0, $3890 = 0, $3892 = 0, $3895 = 0, $39 = 0, $3904 = 0, $3905 = 0, $3907 = 0, $3909 = 0, $391 = 0, $3911 = 0, $3913 = 0, $3914 = 0, $3916 = 0, $3917 = 0, $3918 = 0, $3921 = 0.0, $3928 = 0.0, $393 = 0, $3930 = 0, $3938 = 0, $3939 = 0, $394 = 0, $3947 = 0.0, $3948 = 0, $3949 = 0, $3951 = 0, $3952 = 0, $3954 = 0, $3956 = 0, $3958 = 0, $3960 = 0, $3961 = 0, $3962 = 0, $3963 = 0, $3964 = 0, $3965 = 0, $397 = 0, $3970 = 0, $3972 = 0, $3975 = 0, $3977 = 0, $3979 = 0, $398 = 0, $3981 = 0, $3984 = 0, $3986 = 0, $3987 = 0, $3992 = 0, $3993 = 0, $3996 = 0, $3998 = 0, $4 = 0, $40 = 0, $4001 = 0, $4003 = 0, $4006 = 0, $4010 = 0, $4012 = 0, $4013 = 0, $4014 = 0, $4015 = 0, $4016 = 0, $4017 = 0, $4019 = 0, $4020 = 0, $4022 = 0, $4023 = 0, $4024 = 0, $4025 = 0, $4028 = 0, $4029 = 0, $403 = 0, $4032 = 0, $4033 = 0, $4038 = 0, $4040 = 0, $4043 = 0, $4044 = 0, $4045 = 0, $4049 = 0, $4051 = 0, $4053 = 0, $4055 = 0, $4056 = 0, $4059 = 0, $406 = 0, $4060 = 0, $4062 = 0, $4063 = 0, $4064 = 0, $4067 = 0, $4068 = 0, $407 = 0, $4075 = 0, $408 = 0, $4084 = 0, $4086 = 0, $4092 = 0, $4095 = 0, $4098 = 0, $41 = 0, $4102 = 0, $4111 = 0, $4116 = 0, $4118 = 0, $412 = 0, $4122 = 0, $4124 = 0, $4129 = 0, $4134 = 0, $4136 = 0, $4139 = 0, $414 = 0, $4140 = 0, $4141 = 0, $4145 = 0, $4147 = 0, $4149 = 0, $4151 = 0, $4152 = 0, $4155 = 0, $4156 = 0, $4158 = 0, $4159 = 0, $416 = 0, $4160 = 0, $4164 = 0, $4166 = 0, $4168 = 0, $4171 = 0, $4173 = 0, $4176 = 0, $418 = 0, $4184 = 0, $4185 = 0, $4189 = 0, $419 = 0, $4191 = 0, $4194 = 0, $4195 = 0, $4196 = 0, $4198 = 0, $42 = 0, $4203 = 0, $4205 = 0, $4206 = 0, $4207 = 0, $4210 = 0, $4214 = 0, $4216 = 0, $4218 = 0, $4220 = 0, $4221 = 0, $4222 = 0, $4224 = 0, $4226 = 0, $4227 = 0, $4229 = 0, $423 = 0, $4236 = 0, $4237 = 0, $4239 = 0, $424 = 0, $4240 = 0, $4242 = 0, $4244 = 0, $4246 = 0, $4247 = 0, $4248 = 0, $425 = 0, $4250 = 0, $4252 = 0, $4253 = 0, $4258 = 0, $4259 = 0.0, $4260 = 0, $4261 = 0, $4265 = 0, $4267 = 0, $4271 = 0, $4273 = 0, $4274 = 0, $4275 = 0, $4278 = 0, $428 = 0, $4282 = 0, $4284 = 0, $4286 = 0, $4288 = 0, $4289 = 0, $429 = 0, $4290 = 0, $4292 = 0, $4294 = 0, $4295 = 0, $4297 = 0, $4299 = 0, $43 = 0, $4300 = 0, $4302 = 0, $4304 = 0, $4306 = 0, $4307 = 0, $4308 = 0, $4310 = 0, $4312 = 0, $4313 = 0, $4315 = 0, $4316 = 0, $4317 = 0, $4320 = 0, $4324 = 0, $4326 = 0, $4328 = 0, $4330 = 0, $4331 = 0, $4332 = 0, $4334 = 0, $4336 = 0, $4338 = 0, $4339 = 0, $4341 = 0, $4343 = 0, $4344 = 0, $4346 = 0, $4348 = 0, $4350 = 0, $4352 = 0, $4354 = 0, $4355 = 0, $4357 = 0, $4359 = 0, $436 = 0, $4361 = 0, $4362 = 0, $4363 = 0, $4364 = 0, $4368 = 0, $4370 = 0, $4374 = 0.0, $4375 = 0, $4377 = 0, $4378 = 0, $4379 = 0, $4380 = 0, $4384 = 0, $4386 = 0, $4390 = 0.0, $4391 = 0, $4393 = 0, $4394 = 0, $4395 = 0, $4396 = 0, $44 = 0, $4400 = 0, $4402 = 0, $4406 = 0.0, $4407 = 0, $4409 = 0, $4410 = 0, $4411 = 0, $4412 = 0, $4416 = 0, $4418 = 0, $4424 = 0, $4426 = 0, $4427 = 0, $4428 = 0, $4429 = 0, $4434 = 0, $4436 = 0, $4439 = 0.0, $4441 = 0, $4442 = 0, $4444 = 0, $4446 = 0, $4448 = 0, $4449 = 0, $4450 = 0, $4452 = 0, $4453 = 0, $4456 = 0.0, $4457 = 0, $4459 = 0, $4460 = 0, $4464 = 0, $4466 = 0, $4469 = 0, $4470 = 0, $4472 = 0, $4474 = 0, $4475 = 0, $4477 = 0, $4482 = 0, $4484 = 0, $4495 = 0, $4497 = 0, $4499 = 0, $45 = 0, $450 = 0, $4500 = 0, $4501 = 0, $4505 = 0, $4506 = 0, $4510 = 0, $4515 = 0, $4516 = 0, $4524 = 0, $4525 = 0, $4526 = 0, $4528 = 0, $4529 = 0, $453 = 0, $4531 = 0, $4533 = 0, $4534 = 0, $4535 = 0, $4536 = 0, $4537 = 0, $4538 = 0, $4539 = 0, $4540 = 0, $4545 = 0, $4553 = 0, $4554 = 0, $4562 = 0, $4563 = 0, $4565 = 0, $4566 = 0, $4567 = 0, $4568 = 0, $457 = 0, $4577 = 0, $4578 = 0, $4579 = 0, $4581 = 0, $4583 = 0, $4584 = 0, $4585 = 0, $4586 = 0, $4587 = 0, $4589 = 0, $4590 = 0, $4592 = 0, $4593 = 0, $4599 = 0, $46 = 0, $4601 = 0, $4602 = 0, $4607 = 0, $4608 = 0, $4610 = 0, $4611 = 0, $4612 = 0, $4614 = 0, $4616 = 0, $4618 = 0, $4620 = 0, $4621 = 0, $4627 = 0, $4630 = 0, $4638 = 0, $4651 = 0, $4653 = 0, $4655 = 0, $4658 = 0, $4659 = 0, $466 = 0, $4662 = 0, $4664 = 0, $4665 = 0, $4667 = 0, $4669 = 0, $4673 = 0, $4699 = 0, $47 = 0, $4701 = 0, $4703 = 0, $4704 = 0, $4705 = 0, $4706 = 0, $4708 = 0, $4709 = 0, $471 = 0, $4711 = 0, $4712 = 0, $4714 = 0, $4716 = 0, $4718 = 0, $4720 = 0, $4721 = 0, $4722 = 0, $4724 = 0, $4725 = 0, $4728 = 0, $473 = 0, $4730 = 0, $4731 = 0, $4733 = 0, $4736 = 0, $4737 = 0, $4738 = 0, $4740 = 0, $4741 = 0, $4743 = 0, $4744 = 0, $4746 = 0, $4748 = 0, $4750 = 0, $4752 = 0, $4753 = 0, $4754 = 0, $4756 = 0, $4757 = 0, $4762 = 0, $4764 = 0, $4766 = 0, $4769 = 0, $477 = 0, $4770 = 0, $4771 = 0, $4773 = 0, $4774 = 0, $4776 = 0, $4777 = 0, $4779 = 0, $4781 = 0, $4783 = 0, $4785 = 0, $4786 = 0, $4787 = 0, $4789 = 0, $4790 = 0, $4792 = 0, $4794 = 0, $4798 = 0, $48 = 0, $4801 = 0, $4802 = 0, $4803 = 0, $4806 = 0, $481 = 0, $4810 = 0, $4812 = 0, $4814 = 0, $4816 = 0, $4817 = 0, $4818 = 0, $482 = 0, $4820 = 0, $4822 = 0, $4823 = 0, $4825 = 0, $4826 = 0, $4828 = 0, $4829 = 0, $4831 = 0, $4832 = 0, $4834 = 0, $4836 = 0, $4837 = 0, $4840 = 0, $4842 = 0, $4844 = 0, $4846 = 0, $4848 = 0, $4849 = 0, $485 = 0, $4851 = 0, $4855 = 0, $486 = 0, $4865 = 0, $4869 = 0, $4870 = 0, $4871 = 0, $4873 = 0, $4874 = 0, $4876 = 0, $4877 = 0, $4879 = 0, $4881 = 0, $4883 = 0, $4885 = 0, $4886 = 0, $4887 = 0, $4889 = 0, $4890 = 0, $4894 = 0, $4898 = 0, $49 = 0, $4902 = 0, $4903 = 0, $4904 = 0, $4906 = 0, $4907 = 0, $4909 = 0, $491 = 0, $4910 = 0, $4912 = 0, $4914 = 0, $4916 = 0, $4918 = 0, $4919 = 0, $4920 = 0, $4922 = 0, $4923 = 0, $4924 = 0, $4925 = 0, $4927 = 0, $4933 = 0, $4936 = 0, $4937 = 0, $4938 = 0, $4939 = 0, $4942 = 0, $4946 = 0, $4948 = 0, $4950 = 0, $4952 = 0, $4953 = 0, $4954 = 0, $4956 = 0, $4958 = 0, $4959 = 0, $496 = 0, $4961 = 0, $4962 = 0, $4964 = 0, $4965 = 0, $4967 = 0, $4968 = 0, $4970 = 0, $4972 = 0, $4973 = 0, $4976 = 0, $4978 = 0, $4980 = 0, $4982 = 0, $4984 = 0, $4985 = 0, $499 = 0, $4990 = 0, $4993 = 0, $4995 = 0, $4996 = 0, $4997 = 0, $5 = 0, $50 = 0, $500 = 0, $5002 = 0, $5003 = 0, $5008 = 0, $5009 = 0, $501 = 0, $5011 = 0, $5012 = 0, $5014 = 0, $5015 = 0, $5016 = 0, $5017 = 0, $5018 = 0, $5020 = 0, $5021 = 0, $5023 = 0, $5024 = 0, $5026 = 0, $5028 = 0, $5030 = 0, $5032 = 0, $5033 = 0, $5034 = 0, $5036 = 0, $5037 = 0, $5039 = 0, $5040 = 0, $5042 = 0, $5043 = 0, $5044 = 0, $5045 = 0, $5048 = 0, $505 = 0, $5050 = 0, $5052 = 0, $5054 = 0, $5055 = 0, $5056 = 0, $5057 = 0, $5059 = 0, $5060 = 0, $5061 = 0, $5062 = 0, $5063 = 0, $5064 = 0, $507 = 0, $5076 = 0, $5077 = 0, $5078 = 0, $5086 = 0, $5087 = 0, $509 = 0, $5095 = 0, $5096 = 0, $5098 = 0, $5099 = 0, $51 = 0, $5101 = 0, $5103 = 0, $5105 = 0, $5106 = 0, $5107 = 0, $5108 = 0, $5109 = 0, $511 = 0, $5110 = 0, $5111 = 0, $5114 = 0, $5116 = 0, $5118 = 0, $512 = 0, $5121 = 0, $5122 = 0, $5125 = 0, $5128 = 0, $5134 = 0, $5136 = 0, $5140 = 0, $5141 = 0, $5145 = 0, $5147 = 0, $5149 = 0, $5150 = 0, $5153 = 0, $5155 = 0, $5158 = 0, $5159 = 0, $516 = 0, $5162 = 0, $5165 = 0, $517 = 0, $5171 = 0, $5173 = 0, $5177 = 0, $5178 = 0, $518 = 0, $5184 = 0, $5190 = 0, $5191 = 0, $5194 = 0, $5196 = 0, $5198 = 0, $52 = 0, $5201 = 0, $5202 = 0, $5206 = 0, $5208 = 0, $5210 = 0, $5213 = 0, $522 = 0, $5220 = 0, $5223 = 0, $5224 = 0, $5226 = 0, $5227 = 0, $5231 = 0, $5233 = 0, $5236 = 0, $5239 = 0, $5242 = 0, $5243 = 0, $5245 = 0, $5248 = 0, $5252 = 0, $5254 = 0, $5255 = 0, $5257 = 0, $5258 = 0, $5259 = 0, $5261 = 0, $5263 = 0, $5266 = 0, $5273 = 0, $5276 = 0, $5277 = 0, $5279 = 0, $5280 = 0, $5284 = 0, $5286 = 0, $5289 = 0, $5292 = 0, $5295 = 0, $5296 = 0, $5298 = 0, $53 = 0, $5301 = 0, $5305 = 0, $531 = 0, $5310 = 0, $5311 = 0, $5313 = 0, $5314 = 0, $5316 = 0, $5317 = 0, $532 = 0, $5322 = 0, $5325 = 0, $5326 = 0, $5327 = 0, $5329 = 0, $533 = 0, $5330 = 0, $5332 = 0, $5334 = 0, $5336 = 0, $5338 = 0, $5339 = 0, $5340 = 0, $5341 = 0, $5342 = 0, $5345 = 0, $5347 = 0, $5348 = 0, $5352 = 0, $5353 = 0, $5356 = 0, $5357 = 0, $5358 = 0, $536 = 0, $5360 = 0, $5361 = 0, $5364 = 0, $5366 = 0, $5369 = 0, $5370 = 0, $5373 = 0, $5378 = 0, $538 = 0, $5380 = 0, $5384 = 0, $5385 = 0, $539 = 0, $5393 = 0, $5395 = 0, $5398 = 0, $5399 = 0, $54 = 0, $5400 = 0, $5403 = 0, $5407 = 0, $5409 = 0, $5411 = 0, $5413 = 0, $5414 = 0, $5415 = 0, $5417 = 0, $5419 = 0, $542 = 0, $5420 = 0, $5422 = 0, $5424 = 0, $543 = 0, $5434 = 0, $5435 = 0, $5436 = 0, $5438 = 0, $5439 = 0, $5442 = 0, $5444 = 0, $5446 = 0, $5448 = 0, $5449 = 0, $5450 = 0, $5452 = 0, $5453 = 0, $5454 = 0, $5455 = 0, $5457 = 0, $5458 = 0, $5459 = 0, $5460 = 0, $5461 = 0, $5470 = 0, $5471 = 0, $5472 = 0, $548 = 0, $5480 = 0, $5481 = 0, $5489 = 0, $5490 = 0, $5492 = 0, $5493 = 0, $5495 = 0, $5497 = 0, $5499 = 0, $55 = 0, $550 = 0, $5500 = 0, $5501 = 0, $5502 = 0, $5503 = 0, $5504 = 0, $5505 = 0, $5508 = 0, $5510 = 0, $5512 = 0, $5515 = 0, $5516 = 0, $5519 = 0, $5524 = 0, $5526 = 0, $553 = 0, $5530 = 0, $5531 = 0, $5536 = 0, $554 = 0, $5543 = 0, $5544 = 0, $5547 = 0, $5549 = 0, $555 = 0, $5551 = 0, $5554 = 0, $5555 = 0, $5559 = 0, $5561 = 0, $5563 = 0, $5566 = 0, $5573 = 0, $5576 = 0, $5577 = 0, $5579 = 0, $5580 = 0, $5584 = 0, $5586 = 0, $5589 = 0, $559 = 0, $5592 = 0, $5595 = 0, $5596 = 0, $5598 = 0, $56 = 0, $5601 = 0, $5606 = 0, $5608 = 0, $561 = 0, $5610 = 0, $5611 = 0, $5614 = 0, $5616 = 0, $5618 = 0, $5621 = 0, $5622 = 0, $5626 = 0, $5628 = 0, $563 = 0, $5630 = 0, $5633 = 0, $5640 = 0, $5643 = 0, $5644 = 0, $5646 = 0, $5647 = 0, $565 = 0, $5651 = 0, $5653 = 0, $5656 = 0, $5659 = 0, $566 = 0, $5662 = 0, $5663 = 0, $5665 = 0, $5668 = 0, $5672 = 0, $5677 = 0, $5678 = 0, $5680 = 0, $5681 = 0, $5683 = 0, $5684 = 0, $5689 = 0, $569 = 0, $5690 = 0, $5692 = 0, $5693 = 0, $5696 = 0, $5698 = 0, $57 = 0, $570 = 0, $5701 = 0, $5702 = 0, $5705 = 0, $5710 = 0, $5712 = 0, $5716 = 0, $5717 = 0, $572 = 0, $5724 = 0, $5725 = 0, $5726 = 0, $5727 = 0, $5729 = 0, $573 = 0, $5731 = 0, $5733 = 0, $5734 = 0, $5735 = 0, $5737 = 0, $574 = 0, $5742 = 0, $5743 = 0, $5744 = 0, $5754 = 0, $5755 = 0, $5756 = 0, $5758 = 0, $5761 = 0, $5762 = 0, $5765 = 0, $5767 = 0, $5768 = 0, $5769 = 0, $577 = 0, $5776 = 0, $5777 = 0, $5778 = 0, $578 = 0, $5780 = 0, $5781 = 0, $5785 = 0, $5786 = 0, $5787 = 0, $5797 = 0, $5798 = 0, $5799 = 0, $58 = 0, $580 = 0, $5802 = 0, $5803 = 0, $5806 = 0, $5808 = 0, $5809 = 0, $581 = 0, $5810 = 0, $5817 = 0, $5818 = 0, $5819 = 0, $5821 = 0, $5822 = 0, $5823 = 0, $5825 = 0, $5827 = 0, $5828 = 0, $5830 = 0, $5831 = 0, $5832 = 0, $5836 = 0, $5837 = 0, $5838 = 0, $5840 = 0, $5842 = 0, $5843 = 0, $5845 = 0, $5846 = 0, $5848 = 0, $5850 = 0, $5852 = 0, $5854 = 0, $5855 = 0, $5856 = 0, $5858 = 0, $5859 = 0, $5860 = 0, $5861 = 0, $5863 = 0.0, $5867 = 0.0, $5868 = 0, $5869 = 0, $587 = 0, $5871 = 0, $5873 = 0, $5874 = 0, $5876 = 0, $5877 = 0, $5879 = 0, $5881 = 0, $5883 = 0, $5885 = 0, $5886 = 0, $5887 = 0, $5889 = 0, $5890 = 0, $5891 = 0, $5892 = 0, $5895 = 0, $5897 = 0, $5898 = 0, $59 = 0, $5900 = 0, $5901 = 0, $5903 = 0, $5905 = 0, $5915 = 0, $5916 = 0, $5917 = 0, $5918 = 0, $5920 = 0, $5922 = 0, $5924 = 0, $5926 = 0, $5927 = 0, $5928 = 0, $5930 = 0, $5932 = 0, $5934 = 0, $5935 = 0, $5938 = 0, $5943 = 0, $5944 = 0, $5949 = 0, $5950 = 0, $5952 = 0, $5953 = 0, $5958 = 0, $5959 = 0, $596 = 0, $5960 = 0, $5961 = 0, $5962 = 0, $5963 = 0, $5964 = 0, $5965 = 0, $5966 = 0, $5967 = 0, $5968 = 0, $5969 = 0, $5970 = 0, $5971 = 0, $5972 = 0, $5973 = 0, $5974 = 0, $5975 = 0, $5976 = 0, $5977 = 0, $5978 = 0, $5979 = 0, $598 = 0, $5980 = 0, $5981 = 0, $5982 = 0, $5983 = 0, $5984 = 0, $5985 = 0, $5986 = 0, $5987 = 0, $5988 = 0, $5989 = 0, $5990 = 0, $5991 = 0, $5992 = 0, $5993 = 0, $5994 = 0, $5995 = 0, $5996 = 0, $5997 = 0, $5998 = 0, $5999 = 0, $6 = 0, $60 = 0, $6000 = 0, $6001 = 0, $6002 = 0, $6003 = 0, $6004 = 0, $6005 = 0, $6006 = 0, $604 = 0, $607 = 0, $61 = 0, $610 = 0, $614 = 0, $62 = 0, $623 = 0, $628 = 0, $63 = 0, $630 = 0, $634 = 0, $636 = 0, $638 = 0, $64 = 0, $65 = 0, $655 = 0, $656 = 0, $657 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $664 = 0, $665 = 0, $668 = 0, $669 = 0, $67 = 0, $674 = 0, $676 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $685 = 0, $687 = 0, $689 = 0, $69 = 0, $691 = 0, $692 = 0, $695 = 0, $696 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $703 = 0, $704 = 0, $706 = 0, $707 = 0, $71 = 0, $713 = 0, $72 = 0, $722 = 0, $724 = 0, $73 = 0, $730 = 0, $733 = 0, $736 = 0, $74 = 0, $740 = 0, $749 = 0, $75 = 0, $754 = 0, $756 = 0, $76 = 0, $760 = 0, $763 = 0, $766 = 0, $768 = 0, $77 = 0, $770 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $782 = 0, $783 = 0, $79 = 0, $8 = 0, $80 = 0, $801 = 0, $802 = 0, $803 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $812 = 0, $813 = 0, $814 = 0, $818 = 0, $82 = 0, $821 = 0, $823 = 0, $825 = 0, $826 = 0, $829 = 0, $83 = 0, $830 = 0, $835 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $844 = 0, $846 = 0, $848 = 0, $85 = 0, $850 = 0, $851 = 0, $855 = 0, $856 = 0, $857 = 0, $86 = 0, $860 = 0, $861 = 0, $868 = 0, $87 = 0, $88 = 0, $882 = 0, $885 = 0, $889 = 0, $89 = 0, $898 = 0, $9 = 0, $90 = 0, $903 = 0, $905 = 0, $909 = 0, $91 = 0, $911 = 0, $914 = 0, $916 = 0, $919 = 0, $92 = 0, $920 = 0, $923 = 0, $928 = 0, $93 = 0, $930 = 0, $933 = 0, $938 = 0, $94 = 0, $940 = 0, $943 = 0, $947 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $954 = 0, $955 = 0, $958 = 0, $96 = 0, $960 = 0, $963 = 0, $964 = 0, $967 = 0, $97 = 0, $972 = 0, $974 = 0, $977 = 0, $98 = 0, $981 = 0, $982 = 0, $984 = 0, $985 = 0, $989 = 0, $99 = 0, $991 = 0, $994 = 0, $996 = 0, $998 = 0, $__cache$017$i$i$i = 0, $__cache$017$i$i$i$lcssa = 0, $__cache$2$lcssa$i$i$i = 0, $__first$0316$i$i$i = 0, $__first$04$ph$i$i$i = 0, $__first$0414$i$i$i = 0, $__k$val$i = 0, $__k$val$i1149 = 0, $__k$val$i11495213 = 0, $__k$val$i11495215 = 0, $__k$val$i1372 = 0, $__k$val$i1736 = 0, $__k$val$i17365217 = 0, $__k$val$i17365219 = 0, $__k$val$i2424 = 0, $__k$val$i2576 = 0, $__k$val$i529 = 0, $__k$val$i828 = 0, $__lhs_sz$03$i = 0, $__lp$04$i = 0, $__nd$0$be$in$i$i = 0, $__nd$0$be$in$i$i$i$i$i = 0, $__nd$0$be$in$i$i1152 = 0, $__nd$0$be$in$i$i1375 = 0, $__nd$0$be$in$i$i1739 = 0, $__nd$0$be$in$i$i23$i$i$i = 0, $__nd$0$be$in$i$i2311 = 0, $__nd$0$be$in$i$i2322 = 0, $__nd$0$be$in$i$i2427 = 0, $__nd$0$be$in$i$i2482 = 0, $__nd$0$be$in$i$i2579 = 0, $__nd$0$be$in$i$i532 = 0, $__nd$0$be$in$i$i831 = 0, $__nd$0$i$i = 0, $__nd$0$i$i$i$i$i = 0, $__nd$0$i$i$i$i$i$lcssa = 0, $__nd$0$i$i$i$i$i$lcssa6361 = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa6243 = 0, $__nd$0$i$i$lcssa6244 = 0, $__nd$0$i$i1150 = 0, $__nd$0$i$i1150$lcssa = 0, $__nd$0$i$i1150$lcssa6871 = 0, $__nd$0$i$i1150$lcssa6872 = 0, $__nd$0$i$i1373 = 0, $__nd$0$i$i1373$lcssa = 0, $__nd$0$i$i1373$lcssa6365 = 0, $__nd$0$i$i1373$lcssa6366 = 0, $__nd$0$i$i1737 = 0, $__nd$0$i$i1737$lcssa = 0, $__nd$0$i$i1737$lcssa6349 = 0, $__nd$0$i$i1737$lcssa6350 = 0, $__nd$0$i$i20$i$i$i = 0, $__nd$0$i$i20$i$i$i$lcssa = 0, $__nd$0$i$i20$i$i$i$lcssa6355 = 0, $__nd$0$i$i2309 = 0, $__nd$0$i$i2309$lcssa = 0, $__nd$0$i$i2309$lcssa6337 = 0, $__nd$0$i$i2309$lcssa6338 = 0, $__nd$0$i$i2320 = 0, $__nd$0$i$i2320$lcssa = 0, $__nd$0$i$i2320$lcssa6341 = 0, $__nd$0$i$i2320$lcssa6342 = 0, $__nd$0$i$i2425 = 0, $__nd$0$i$i2425$lcssa = 0, $__nd$0$i$i2425$lcssa6866 = 0, $__nd$0$i$i2425$lcssa6867 = 0, $__nd$0$i$i2480 = 0, $__nd$0$i$i2480$lcssa = 0, $__nd$0$i$i2480$lcssa6329 = 0, $__nd$0$i$i2480$lcssa6330 = 0, $__nd$0$i$i2577 = 0, $__nd$0$i$i2577$lcssa = 0, $__nd$0$i$i2577$lcssa6862 = 0, $__nd$0$i$i2577$lcssa6863 = 0, $__nd$0$i$i530 = 0, $__nd$0$i$i530$lcssa = 0, $__nd$0$i$i530$lcssa6247 = 0, $__nd$0$i$i530$lcssa6248 = 0, $__nd$0$i$i829 = 0, $__nd$0$i$i829$lcssa = 0, $__nd$0$i$i829$lcssa6373 = 0, $__nd$0$i$i829$lcssa6374 = 0, $__nd$0$i20$i$i$i$i$in$i$i1127 = 0, $__nd$0$i20$i$i$i$i$in$i$i1127$be = 0, $__nd$0$i20$i$i$i$i$in$i$i1127$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i1127$lcssa6870 = 0, $__nd$0$i20$i$i$i$i$in$i$i1712 = 0, $__nd$0$i20$i$i$i$i$in$i$i1712$be = 0, $__nd$0$i20$i$i$i$i$in$i$i1712$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i1712$lcssa6348 = 0, $__nd$0$i20$i$i$i$i$in$i$i2351 = 0, $__nd$0$i20$i$i$i$i$in$i$i2351$be = 0, $__nd$0$i20$i$i$i$i$in$i$i2351$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i2351$lcssa6345 = 0, $__nd$0$i20$i$i$i$i$in$i$i2394 = 0, $__nd$0$i20$i$i$i$i$in$i$i2394$be = 0, $__nd$0$i20$i$i$i$i$in$i$i2394$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i2394$lcssa6346 = 0, $__nd$0$i20$i$i$i$i$in$i$i2511 = 0, $__nd$0$i20$i$i$i$i$in$i$i2511$be = 0, $__nd$0$i20$i$i$i$i$in$i$i2511$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i2511$lcssa6333 = 0, $__nd$0$i20$i$i$i$i$in$i$i2552 = 0, $__nd$0$i20$i$i$i$i$in$i$i2552$be = 0, $__nd$0$i20$i$i$i$i$in$i$i2552$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i2552$lcssa6334 = 0, $__nd$0$i20$i$i$i$i$in$i$i804 = 0, $__nd$0$i20$i$i$i$i$in$i$i804$be = 0, $__nd$0$i20$i$i$i$i$in$i$i804$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i804$lcssa6372 = 0, $__parent$i1148 = 0, $__parent$i1371 = 0, $__parent$i1735 = 0, $__parent$i827 = 0, $__r$0$i = 0, $__r$0$i1161 = 0, $__r$0$i1384 = 0, $__r$0$i1748 = 0, $__r$0$i2317 = 0, $__r$0$i2331 = 0, $__r$0$i2436 = 0, $__r$0$i2491 = 0, $__r$0$i2588 = 0, $__r$0$i541 = 0, $__r$0$i840 = 0, $__rp$05$i = 0, $__t$idx$val$i$i = 0, $__v$idx$val$i$i$i$i$i = 0, $__v$idx$val$i$i18$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i2391 = 0, $__x$idx$i = 0, $__x$idx1$i$pre$phiZZZ2D = 0, $args = 0, $args68 = 0, $args68$idx$val = 0, $args68$idx358$val = 0, $args68$idx360$val = 0, $args68$idx370$val = 0, $args68$idx374$val = 0, $args68$idx377$val = 0, $args68$idx382$val = 0, $args68$idx391$val = 0, $bindings = 0, $bindings65 = 0, $bindings83 = 0, $c105 = 0, $ch = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i1191$index99Z2D = 0, $eh$lpad$body$i1191$indexZ2D = 0, $eh$lpad$body$i1210$index104Z2D = 0, $eh$lpad$body$i1210$indexZ2D = 0, $eh$lpad$body$i1935$index123Z2D = 0, $eh$lpad$body$i1935$indexZ2D = 0, $eh$lpad$body$i1976$index128Z2D = 0, $eh$lpad$body$i1976$indexZ2D = 0, $eh$lpad$body$i1995$index133Z2D = 0, $eh$lpad$body$i1995$indexZ2D = 0, $eh$lpad$body$i2225$index138Z2D = 0, $eh$lpad$body$i2225$indexZ2D = 0, $eh$lpad$body$i2259$index143Z2D = 0, $eh$lpad$body$i2259$indexZ2D = 0, $eh$lpad$body$i2439$index148Z2D = 0, $eh$lpad$body$i2439$indexZ2D = 0, $eh$lpad$body$i2595$index153Z2D = 0, $eh$lpad$body$i2595$indexZ2D = 0, $eh$lpad$body$i679$index12Z2D = 0, $eh$lpad$body$i679$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body1186$index64Z2D = 0, $eh$lpad$body1186$indexZ2D = 0, $eh$lpad$body1215$index111Z2D = 0, $eh$lpad$body1215$indexZ2D = 0, $eh$lpad$body2622$index159Z2D = 0, $eh$lpad$body2622$indexZ2D = 0, $eh$lpad$body825$index17Z2D = 0, $eh$lpad$body825$indexZ2D = 0, $elements45 = 0, $elements75 = 0, $env = 0, $env131 = 0, $env139 = 0, $env26 = 0, $env27 = 0, $exp = 0, $exp106 = 0, $fields = 0, $fields87 = 0, $fields90 = 0, $filename = 0, $found$0$off0 = 0, $found$0$off0$ph = 0, $i$0$i = 0, $i$0$i$lcssa6254 = 0, $i$0$i415 = 0, $i$0$i415$lcssa6251 = 0, $i$0$i477 = 0, $i$0$i477$lcssa6241 = 0, $i$0$i597 = 0, $i$0$i597$lcssa6240 = 0, $i$0$i607 = 0, $i$0$i607$lcssa6239 = 0, $i$0$i695 = 0, $i$0$i695$lcssa6370 = 0, $i$0$in$i = 0, $i$0$in$i414 = 0, $i$0$in$i476 = 0, $i$0$in$i596 = 0, $i$0$in$i606 = 0, $i$0$in$i664 = 0, $i$0$in$i694 = 0, $i$013$i$i = 0, $i$013$i$i$i = 0, $i$013$i$i$i1051 = 0, $i$013$i$i$i448 = 0, $i$013$i$i$i643 = 0, $i$013$i$i1267 = 0, $i$013$i$i1348 = 0, $i$013$i$i1858 = 0, $i$013$i$i510 = 0, $i$013$i$i728 = 0, $i$04273 = 0, $i$1$i$i = 0, $i$1$i$i$i = 0, $i$1$i$i$i1063 = 0, $i$1$i$i$i460 = 0, $i$1$i$i$i655 = 0, $i$1$i$i1279 = 0, $i$1$i$i1360 = 0, $i$1$i$i1870 = 0, $i$1$i$i522 = 0, $i$1$i$i740 = 0, $i41$04276 = 0, $i77$04265 = 0, $lpad$phi2989$index = 0, $lpad$phi2989$index22 = 0, $lpad$phi2995$index = 0, $lpad$phi2995$index28 = 0, $lpad$phi3006$index = 0, $lpad$phi3006$index118 = 0, $scevgep4$i$i$i$i$i = 0, $scevgep4$i$i$i$i$i$i = 0, $scevgep4$i$i$i$i$i$i1060 = 0, $scevgep4$i$i$i$i$i$i457 = 0, $scevgep4$i$i$i$i$i$i652 = 0, $scevgep4$i$i$i$i$i1276 = 0, $scevgep4$i$i$i$i$i1357 = 0, $scevgep4$i$i$i$i$i1867 = 0, $scevgep4$i$i$i$i$i519 = 0, $scevgep4$i$i$i$i$i737 = 0, $ss = 0, $ss102 = 0, $ss103 = 0, $ss104 = 0, $ss121 = 0, $ss127 = 0, $ss136 = 0, $ss143 = 0, $ss73 = 0, $ss76 = 0, $this$idx$val$i$i = 0, $this$idx2$val$i$i = 0, $this$idx2$val$i$i$i$i = 0, $this$idx2$val$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i$i1027 = 0, $this$idx2$val$i$i$i$i$i424 = 0, $this$idx2$val$i$i$i$i$i619 = 0, $this$idx2$val$i$i$i$i1243 = 0, $this$idx2$val$i$i$i$i1324 = 0, $this$idx2$val$i$i$i$i1834 = 0, $this$idx2$val$i$i$i$i486 = 0, $this$idx2$val$i$i$i$i704 = 0, $this$idx2$val$i$i1094 = 0, $this$idx2$val$i$i1166 = 0, $this$idx2$val$i$i1294 = 0, $this$idx2$val$i$i1885 = 0, $this$idx2$val$i$i750 = 0, $this$idx2$val$i$i935 = 0, $this$idx2$val$i$i961 = 0, $this$idx3$i$i = 0, $this$idx3$i$i849 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4336 | 0;
 $0 = sp + 4196 | 0;
 $1 = sp + 4184 | 0;
 $2 = sp + 4172 | 0;
 $3 = sp + 4160 | 0;
 $4 = sp + 4148 | 0;
 $5 = sp + 4136 | 0;
 $6 = sp + 4128 | 0;
 $__parent$i1735 = sp + 4124 | 0;
 $__parent$i1371 = sp + 4120 | 0;
 $7 = sp + 4108 | 0;
 $8 = sp + 4096 | 0;
 $__parent$i1148 = sp + 4092 | 0;
 $__parent$i827 = sp + 4088 | 0;
 $9 = sp + 704 | 0;
 $10 = sp + 4076 | 0;
 $11 = sp + 4064 | 0;
 $env = sp + 4052 | 0;
 $12 = sp + 4040 | 0;
 $13 = sp + 688 | 0;
 $14 = sp + 4028 | 0;
 $$sroa$32802 = sp + 4317 | 0;
 $15 = sp + 672 | 0;
 $16 = sp + 656 | 0;
 $$sroa$22798 = sp + 4016 | 0;
 $env26 = sp + 4004 | 0;
 $fields = sp + 3992 | 0;
 $17 = sp + 640 | 0;
 $18 = sp + 3980 | 0;
 $19 = sp + 3968 | 0;
 $env27 = sp + 3956 | 0;
 $20 = sp + 3944 | 0;
 $21 = sp + 3932 | 0;
 $22 = sp + 3920 | 0;
 $ss = sp + 3776 | 0;
 $23 = sp + 3764 | 0;
 $24 = sp + 3752 | 0;
 $args = sp + 3740 | 0;
 $bindings = sp + 3728 | 0;
 $$sroa$32792 = sp + 4310 | 0;
 $$sroa$32788 = sp + 4303 | 0;
 $25 = sp + 3716 | 0;
 $26 = sp + 3704 | 0;
 $27 = sp + 3692 | 0;
 $28 = sp + 3680 | 0;
 $29 = sp + 3668 | 0;
 $30 = sp + 3656 | 0;
 $31 = sp + 3644 | 0;
 $32 = sp + 3632 | 0;
 $33 = sp + 3620 | 0;
 $elements45 = sp + 3608 | 0;
 $34 = sp + 624 | 0;
 $35 = sp + 3596 | 0;
 $36 = sp + 3584 | 0;
 $37 = sp + 3572 | 0;
 $$sroa$32784 = sp + 4296 | 0;
 $$sroa$32780 = sp + 4289 | 0;
 $38 = sp + 3560 | 0;
 $39 = sp + 3548 | 0;
 $40 = sp + 3536 | 0;
 $41 = sp + 608 | 0;
 $42 = sp + 592 | 0;
 $43 = sp + 576 | 0;
 $44 = sp + 3524 | 0;
 $45 = sp + 560 | 0;
 $$sroa$32761 = sp + 4282 | 0;
 $$sroa$32757 = sp + 4275 | 0;
 $$sroa$32753 = sp + 4268 | 0;
 $$sroa$32749 = sp + 4261 | 0;
 $46 = sp + 3512 | 0;
 $47 = sp + 3500 | 0;
 $48 = sp + 3488 | 0;
 $49 = sp + 3476 | 0;
 $50 = sp + 3464 | 0;
 $51 = sp + 3452 | 0;
 $52 = sp + 3440 | 0;
 $53 = sp + 3428 | 0;
 $54 = sp + 3416 | 0;
 $55 = sp + 3404 | 0;
 $56 = sp + 3392 | 0;
 $57 = sp + 3380 | 0;
 $58 = sp + 544 | 0;
 $59 = sp + 3368 | 0;
 $$sroa$32741 = sp + 4254 | 0;
 $$sroa$32737 = sp + 4247 | 0;
 $$sroa$32733 = sp + 4240 | 0;
 $$sroa$32729 = sp + 4233 | 0;
 $60 = sp + 3356 | 0;
 $61 = sp + 3344 | 0;
 $62 = sp + 3332 | 0;
 $63 = sp + 3320 | 0;
 $64 = sp + 3308 | 0;
 $65 = sp + 528 | 0;
 $bindings65 = sp + 3296 | 0;
 $args68 = sp + 3284 | 0;
 $66 = sp + 3272 | 0;
 $ss73 = sp + 3128 | 0;
 $67 = sp + 3116 | 0;
 $elements75 = sp + 3104 | 0;
 $ss76 = sp + 2960 | 0;
 $68 = sp + 2944 | 0;
 $69 = sp + 512 | 0;
 $70 = sp + 2932 | 0;
 $71 = sp + 496 | 0;
 $72 = sp + 2920 | 0;
 $73 = sp + 480 | 0;
 $74 = sp + 2908 | 0;
 $75 = sp + 464 | 0;
 $76 = sp + 2896 | 0;
 $77 = sp + 448 | 0;
 $78 = sp + 2884 | 0;
 $79 = sp + 432 | 0;
 $80 = sp + 2872 | 0;
 $81 = sp + 416 | 0;
 $82 = sp + 2860 | 0;
 $83 = sp + 400 | 0;
 $84 = sp + 2848 | 0;
 $85 = sp + 384 | 0;
 $86 = sp + 2836 | 0;
 $87 = sp + 368 | 0;
 $88 = sp + 2824 | 0;
 $89 = sp + 352 | 0;
 $90 = sp + 336 | 0;
 $91 = sp + 2812 | 0;
 $92 = sp + 320 | 0;
 $93 = sp + 2800 | 0;
 $94 = sp + 304 | 0;
 $95 = sp + 2788 | 0;
 $96 = sp + 288 | 0;
 $97 = sp + 2776 | 0;
 $98 = sp + 272 | 0;
 $99 = sp + 2764 | 0;
 $100 = sp + 256 | 0;
 $101 = sp + 2752 | 0;
 $102 = sp + 240 | 0;
 $103 = sp + 2740 | 0;
 $104 = sp + 2728 | 0;
 $105 = sp + 2716 | 0;
 $106 = sp + 224 | 0;
 $107 = sp + 2704 | 0;
 $bindings83 = sp + 2692 | 0;
 $108 = sp + 2680 | 0;
 $109 = sp + 2668 | 0;
 $$sroa$32696 = sp + 4226 | 0;
 $110 = sp + 2656 | 0;
 $fields87 = sp + 2644 | 0;
 $111 = sp + 2632 | 0;
 $112 = sp + 2620 | 0;
 $113 = sp + 2608 | 0;
 $fields90 = sp + 2596 | 0;
 $114 = sp + 2584 | 0;
 $115 = sp + 208 | 0;
 $116 = sp + 2572 | 0;
 $117 = sp + 192 | 0;
 $118 = sp + 2560 | 0;
 $ss102 = sp + 2416 | 0;
 $119 = sp + 2404 | 0;
 $120 = sp + 2392 | 0;
 $ss103 = sp + 2248 | 0;
 $121 = sp + 2232 | 0;
 $ss104 = sp + 2088 | 0;
 $122 = sp + 2072 | 0;
 $c105 = sp + 4225 | 0;
 $123 = sp + 176 | 0;
 $124 = sp + 2060 | 0;
 $125 = sp + 2048 | 0;
 $126 = sp + 160 | 0;
 $127 = sp + 2036 | 0;
 $128 = sp + 144 | 0;
 $129 = sp + 2024 | 0;
 $exp = sp + 2020 | 0;
 $130 = sp + 128 | 0;
 $131 = sp + 2008 | 0;
 $exp106 = sp + 2004 | 0;
 $132 = sp + 112 | 0;
 $133 = sp + 1992 | 0;
 $134 = sp + 1980 | 0;
 $135 = sp + 96 | 0;
 $136 = sp + 1968 | 0;
 $137 = sp + 1956 | 0;
 $filename = sp + 1944 | 0;
 $138 = sp + 1932 | 0;
 $139 = sp + 80 | 0;
 $$sroa$32656 = sp + 4218 | 0;
 $140 = sp + 1920 | 0;
 $141 = sp + 1908 | 0;
 $142 = sp + 1896 | 0;
 $143 = sp + 1884 | 0;
 $144 = sp + 1872 | 0;
 $145 = sp + 1860 | 0;
 $146 = sp + 1848 | 0;
 $147 = sp + 1836 | 0;
 $148 = sp + 1824 | 0;
 $ss121 = sp + 1680 | 0;
 $149 = sp + 1664 | 0;
 $150 = sp + 1652 | 0;
 $151 = sp + 1640 | 0;
 $152 = sp + 1628 | 0;
 $153 = sp + 1616 | 0;
 $154 = sp + 1604 | 0;
 $155 = sp + 1592 | 0;
 $ss127 = sp + 1448 | 0;
 $156 = sp + 1432 | 0;
 $ch = sp + 4216 | 0;
 $157 = sp + 64 | 0;
 $158 = sp + 1420 | 0;
 $159 = sp + 1408 | 0;
 $160 = sp + 1396 | 0;
 $161 = sp + 1384 | 0;
 $162 = sp + 1372 | 0;
 $163 = sp + 1360 | 0;
 $164 = sp + 1348 | 0;
 $env131 = sp + 1336 | 0;
 $165 = sp + 48 | 0;
 $166 = sp + 1324 | 0;
 $167 = sp + 1312 | 0;
 $168 = sp + 1300 | 0;
 $169 = sp + 1288 | 0;
 $170 = sp + 32 | 0;
 $171 = sp + 1276 | 0;
 $172 = sp + 1264 | 0;
 $ss136 = sp + 1120 | 0;
 $173 = sp + 1104 | 0;
 $174 = sp + 1092 | 0;
 $175 = sp + 1080 | 0;
 $176 = sp + 1068 | 0;
 $env139 = sp + 1056 | 0;
 $177 = sp + 16 | 0;
 $178 = sp + 1044 | 0;
 $179 = sp + 1032 | 0;
 $ss143 = sp + 888 | 0;
 $180 = sp + 876 | 0;
 $181 = sp + 864 | 0;
 $182 = sp;
 $183 = sp + 852 | 0;
 $$sroa$3 = sp + 4208 | 0;
 $184 = sp + 840 | 0;
 $185 = sp + 828 | 0;
 $186 = sp + 816 | 0;
 $187 = sp + 804 | 0;
 $188 = sp + 792 | 0;
 $189 = sp + 780 | 0;
 $190 = sp + 768 | 0;
 $191 = sp + 756 | 0;
 $192 = sp + 744 | 0;
 $193 = sp + 732 | 0;
 $194 = sp + 720 | 0;
 $195 = $this + 56 | 0;
 $$idx$i = $this + 68 | 0;
 $$idx1$i = $this + 72 | 0;
 $198 = (HEAP32[$$idx1$i >> 2] | 0) - (HEAP32[$$idx$i >> 2] | 0) | 0;
 $199 = $10 + 4 | 0;
 $200 = $10 + 8 | 0;
 $201 = $this + 40 | 0;
 $202 = $this + 48 | 0;
 $203 = $this + 84 | 0;
 $204 = $this + 20 | 0;
 $205 = $this + 24 | 0;
 $206 = $this + 28 | 0;
 $207 = $this + 16 | 0;
 $208 = $this + 36 | 0;
 $209 = $this + 8 | 0;
 $210 = $this + 32 | 0;
 $211 = $this + 40 | 0;
 $$idx6$i$i = $this + 20 | 0;
 $212 = $11 + 4 | 0;
 $213 = $11 + 8 | 0;
 $214 = $11 + 4 | 0;
 $215 = $0 + 4 | 0;
 $216 = $0 + 8 | 0;
 $217 = $0 + 4 | 0;
 $218 = $env + 4 | 0;
 $219 = $this + 80 | 0;
 $220 = $12 + 4 | 0;
 $221 = $12 + 8 | 0;
 $222 = $12 + 4 | 0;
 $223 = $14 + 4 | 0;
 $224 = $14 + 8 | 0;
 $225 = $14 + 4 | 0;
 $226 = $this + 49 | 0;
 $227 = $this + 44 | 0;
 $228 = $env26 + 4 | 0;
 $229 = $env26 + 8 | 0;
 $230 = $env26 + 4 | 0;
 $231 = $fields + 4 | 0;
 $232 = $fields + 8 | 0;
 $233 = $fields + 4 | 0;
 $234 = $18 + 4 | 0;
 $235 = $18 + 8 | 0;
 $236 = $18 + 4 | 0;
 $237 = $19 + 4 | 0;
 $238 = $19 + 8 | 0;
 $239 = $19 + 4 | 0;
 $240 = $env27 + 4 | 0;
 $241 = $args + 4 | 0;
 $242 = $args + 8 | 0;
 $243 = $bindings + 4 | 0;
 $244 = $bindings + 8 | 0;
 $245 = $bindings + 4 | 0;
 $246 = $24 + 4 | 0;
 $247 = $24 + 8 | 0;
 $248 = $24 + 4 | 0;
 $249 = $elements45 + 4 | 0;
 $250 = $elements45 + 8 | 0;
 $251 = $this + 48 | 0;
 $252 = $args68 + 4 | 0;
 $253 = $args68 + 8 | 0;
 $254 = $66 + 4 | 0;
 $255 = $66 + 8 | 0;
 $256 = $elements75 + 4 | 0;
 $257 = $elements75 + 8 | 0;
 $258 = $70 + 4 | 0;
 $259 = $70 + 8 | 0;
 $260 = $72 + 4 | 0;
 $261 = $72 + 8 | 0;
 $262 = $74 + 4 | 0;
 $263 = $74 + 8 | 0;
 $264 = $76 + 4 | 0;
 $265 = $76 + 8 | 0;
 $266 = $78 + 4 | 0;
 $267 = $78 + 8 | 0;
 $268 = $80 + 4 | 0;
 $269 = $80 + 8 | 0;
 $270 = $82 + 4 | 0;
 $271 = $82 + 8 | 0;
 $272 = $84 + 4 | 0;
 $273 = $84 + 8 | 0;
 $274 = $86 + 4 | 0;
 $275 = $86 + 8 | 0;
 $276 = $88 + 4 | 0;
 $277 = $88 + 8 | 0;
 $278 = $104 + 4 | 0;
 $279 = $104 + 8 | 0;
 $280 = $107 + 4 | 0;
 $281 = $107 + 8 | 0;
 $282 = $bindings83 + 4 | 0;
 $283 = $bindings83 + 8 | 0;
 $284 = $bindings83 + 4 | 0;
 $285 = $108 + 4 | 0;
 $286 = $108 + 8 | 0;
 $287 = $109 + 4 | 0;
 $288 = $fields87 + 8 | 0;
 $289 = $fields87 + 4 | 0;
 $290 = $113 + 4 | 0;
 $291 = $113 + 8 | 0;
 $292 = $fields90 + 4 | 0;
 $293 = $fields90 + 8 | 0;
 $294 = $fields90 + 4 | 0;
 $295 = $114 + 4 | 0;
 $296 = $116 + 4 | 0;
 $297 = $116 + 8 | 0;
 $298 = $118 + 4 | 0;
 $299 = $118 + 8 | 0;
 $300 = $120 + 4 | 0;
 $301 = $120 + 8 | 0;
 $302 = $125 + 4 | 0;
 $303 = $125 + 8 | 0;
 $304 = $127 + 4 | 0;
 $305 = $127 + 8 | 0;
 $306 = $129 + 4 | 0;
 $307 = $129 + 8 | 0;
 $308 = $131 + 4 | 0;
 $309 = $131 + 8 | 0;
 $310 = $133 + 4 | 0;
 $311 = $133 + 8 | 0;
 $312 = $136 + 4 | 0;
 $313 = $136 + 8 | 0;
 $314 = $this + 100 | 0;
 $315 = $this + 104 | 0;
 $316 = $ch + 1 | 0;
 $317 = $166 + 4 | 0;
 $318 = $166 + 8 | 0;
 $319 = $166 + 4 | 0;
 $320 = $env131 + 4 | 0;
 $321 = $167 + 4 | 0;
 $322 = $167 + 8 | 0;
 $323 = $167 + 4 | 0;
 $324 = $171 + 4 | 0;
 $325 = $171 + 8 | 0;
 $326 = $171 + 4 | 0;
 $327 = $172 + 4 | 0;
 $328 = $172 + 8 | 0;
 $329 = $172 + 4 | 0;
 $330 = $178 + 4 | 0;
 $331 = $178 + 8 | 0;
 $332 = $178 + 4 | 0;
 $333 = $env139 + 4 | 0;
 $334 = $179 + 4 | 0;
 $335 = $179 + 8 | 0;
 $336 = $179 + 4 | 0;
 $337 = $ss143 + 64 | 0;
 $338 = $ss143 + 8 | 0;
 $339 = $ss143 + 12 | 0;
 $340 = $ss143 + 4 | 0;
 $341 = $ss143 + 64 | 0;
 $342 = $ss143 + 136 | 0;
 $343 = $ss143 + 140 | 0;
 $344 = $ss143 + 44 | 0;
 $345 = $ss143 + 60 | 0;
 $346 = $181 + 1 | 0;
 $347 = $181 + 8 | 0;
 $348 = $181 + 4 | 0;
 $349 = $180 + 1 | 0;
 $350 = $180 + 8 | 0;
 $351 = $180 + 4 | 0;
 $352 = $bindings65 + 4 | 0;
 $353 = $bindings65 + 8 | 0;
 $354 = $bindings65 + 4 | 0;
 $$010 = $ast_;
 L1 : while (1) {
  $355 = $$010 + 32 | 0;
  L3 : do switch (HEAP32[$355 >> 2] | 0) {
  case 19:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($195, 17, $$010);
    $$010$be = HEAP32[$$010 + 52 >> 2] | 0;
    break;
   }
  case 20:
   {
    $1167 = $$010 + 48 | 0;
    $1168 = HEAP32[$1167 >> 2] | 0;
    $$idx$val$i661 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i664 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i661 | 0) / 144 | 0;
    while (1) {
     $i$0$in$i664 = $i$0$in$i664 + -1 | 0;
     if (($i$0$in$i664 | 0) <= -1) {
      $$lcssa7186 = $1167;
      label = 327;
      break L1;
     }
     $1174 = $$idx$val$i661 + ($i$0$in$i664 * 144 | 0) + 132 | 0;
     $1175 = HEAP32[$1174 >> 2] | 0;
     if ($1175) {
      $$0$ph6$i$i$i$i = $1174;
      $$01$ph5$i$i$i$i = $1175;
      L11 : while (1) {
       $$013$i$i$i$i = $$01$ph5$i$i$i$i;
       while (1) {
        if ((HEAP32[$$013$i$i$i$i + 16 >> 2] | 0) >>> 0 >= $1168 >>> 0) {
         $$013$i$i$i$i$lcssa = $$013$i$i$i$i;
         break;
        }
        $$013$i$i$i$i = HEAP32[$$013$i$i$i$i + 4 >> 2] | 0;
        if (!$$013$i$i$i$i) {
         $$0$ph6$i$i$i$i$lcssa6238 = $$0$ph6$i$i$i$i;
         label = 321;
         break L11;
        }
       }
       $$01$ph5$i$i$i$i = HEAP32[$$013$i$i$i$i$lcssa >> 2] | 0;
       if (!$$01$ph5$i$i$i$i) {
        $$013$i$i$i$i$lcssa$lcssa = $$013$i$i$i$i$lcssa;
        label = 322;
        break;
       } else $$0$ph6$i$i$i$i = $$013$i$i$i$i$lcssa;
      }
      if ((label | 0) == 321) {
       label = 0;
       $$0$ph$lcssa$i$i$i$i = $$0$ph6$i$i$i$i$lcssa6238;
      } else if ((label | 0) == 322) {
       label = 0;
       $$0$ph$lcssa$i$i$i$i = $$013$i$i$i$i$lcssa$lcssa;
      }
      if (($$0$ph$lcssa$i$i$i$i | 0) != ($1174 | 0)) if ((HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) >>> 0 <= $1168 >>> 0) {
       $$0$ph$lcssa$i$i$i$i$lcssa = $$0$ph$lcssa$i$i$i$i;
       break;
      }
     }
     if ((HEAP32[$$idx$val$i661 + ($i$0$in$i664 * 144 | 0) >> 2] | 0) == 6) {
      $$lcssa7186 = $1167;
      label = 327;
      break L1;
     }
    }
    $1187 = HEAP32[$$0$ph$lcssa$i$i$i$i$lcssa + 20 >> 2] | 0;
    if (!$1187) {
     $$lcssa7187 = $1167;
     label = 328;
     break L1;
    }
    if (!(HEAP8[$1187 + 5 >> 0] | 0)) {
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($195, $$010 + 4 | 0, $1187, HEAP32[$1187 + 40 >> 2] | 0, HEAP32[$1187 + 44 >> 2] | 0, $1187 + 28 | 0);
     $$010$be = HEAP32[$1187 + 48 >> 2] | 0;
     break L3;
    } else {
     $1223 = $1187 + 8 | 0;
     HEAP32[$201 + 0 >> 2] = HEAP32[$1223 + 0 >> 2];
     HEAP32[$201 + 4 >> 2] = HEAP32[$1223 + 4 >> 2];
     HEAP32[$201 + 8 >> 2] = HEAP32[$1223 + 8 >> 2];
     HEAP32[$201 + 12 >> 2] = HEAP32[$1223 + 12 >> 2];
     label = 15;
     break L3;
    }
    break;
   }
  case 7:
   {
    $766 = $$010 + 4 | 0;
    $768 = __ZN12_GLOBAL__N_111Interpreter12importStringERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($this, $766, $$010 + 48 | 0) | 0;
    $770 = $768 + 12 | 0;
    if (!(HEAP8[$770 >> 0] & 1)) $777 = $770 + 1 | 0; else $777 = HEAP32[$768 + 20 >> 2] | 0;
    $778 = __Z13jsonnet_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc(HEAP32[$219 >> 2] | 0, $768, $777) | 0;
    __Z23jsonnet_static_analysisP3AST($778);
    HEAP32[$220 >> 2] = 0;
    HEAP32[$221 >> 2] = 0;
    HEAP32[$12 >> 2] = $222;
    __THREW__ = 0;
    invoke_viiiiii(19, $195 | 0, $766 | 0, 0, 0, 0, $12 | 0);
    $779 = __THREW__;
    __THREW__ = 0;
    if ($779 & 1) {
     label = 159;
     break L1;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($12, HEAP32[$222 >> 2] | 0);
    $$010$be = $778;
    break;
   }
  case 9:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($195, 10, $$010);
    $$010$be = HEAP32[$$010 + 48 >> 2] | 0;
    break;
   }
  case 8:
   {
    __ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($13, $this, (__ZN12_GLOBAL__N_111Interpreter12importStringERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($this, $$010 + 4 | 0, $$010 + 48 | 0) | 0) + 12 | 0);
    HEAP32[$201 + 0 >> 2] = HEAP32[$13 + 0 >> 2];
    HEAP32[$201 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
    HEAP32[$201 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
    HEAP32[$201 + 12 >> 2] = HEAP32[$13 + 12 >> 2];
    label = 15;
    break;
   }
  case 10:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($195, 12, $$010);
    $$idx$val$i471 = HEAP32[$$idx1$i >> 2] | 0;
    $$idx$val$i473 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i476 = ($$idx$val$i471 - $$idx$val$i473 | 0) / 144 | 0;
    while (1) {
     $i$0$i477 = $i$0$in$i476 + -1 | 0;
     if (($i$0$i477 | 0) <= -1) {
      label = 166;
      break;
     }
     if ((HEAP32[$$idx$val$i473 + ($i$0$i477 * 144 | 0) >> 2] | 0) == 6) {
      $i$0$i477$lcssa6241 = $i$0$i477;
      label = 165;
      break;
     } else $i$0$in$i476 = $i$0$i477;
    }
    if ((label | 0) == 165) {
     label = 0;
     $821 = HEAP32[$$idx$val$i473 + ($i$0$i477$lcssa6241 * 144 | 0) + 120 >> 2] | 0;
     $823 = HEAP32[$$idx$val$i473 + ($i$0$i477$lcssa6241 * 144 | 0) + 124 >> 2] | 0;
    } else if ((label | 0) == 166) {
     label = 0;
     $821 = 0;
     $823 = 0;
    }
    $801 = $$010 + 48 | 0;
    $802 = HEAP32[$801 >> 2] | 0;
    $803 = $$010 + 52 | 0;
    if (($802 | 0) == ($803 | 0)) $947 = $802; else {
     $805 = $$idx$val$i471 + -16 | 0;
     $806 = $$idx$val$i471 + -12 | 0;
     $807 = $$idx$val$i471 + -12 | 0;
     $808 = $$idx$val$i471 + -8 | 0;
     $810 = $802;
     while (1) {
      $809 = $810 + 16 | 0;
      $812 = __Znwj(56) | 0;
      $813 = HEAP32[$809 >> 2] | 0;
      $814 = HEAP32[$810 + 20 >> 2] | 0;
      HEAP32[$812 >> 2] = 41592;
      HEAP8[$812 + 5 >> 0] = 0;
      HEAP32[$812 + 24 >> 2] = $813;
      $818 = $812 + 32 | 0;
      HEAP32[$818 >> 2] = 0;
      HEAP32[$812 + 36 >> 2] = 0;
      HEAP32[$812 + 28 >> 2] = $818;
      HEAP32[$812 + 40 >> 2] = $821;
      HEAP32[$812 + 44 >> 2] = $823;
      HEAP32[$812 + 48 >> 2] = $814;
      $825 = HEAP32[$205 >> 2] | 0;
      $826 = HEAP32[$206 >> 2] | 0;
      if ($825 >>> 0 < $826 >>> 0) {
       if (!$825) $830 = 0; else {
        HEAP32[$825 >> 2] = $812;
        $830 = HEAP32[$205 >> 2] | 0;
       }
       $829 = $830 + 4 | 0;
       HEAP32[$205 >> 2] = $829;
       $$idx1$val$i$i501 = $829;
      } else {
       $this$idx2$val$i$i$i$i486 = HEAP32[$204 >> 2] | 0;
       $835 = ($825 - $this$idx2$val$i$i$i$i486 >> 2) + 1 | 0;
       if ($835 >>> 0 > 1073741823) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($204);
        $$idx1$val$i$i$i$i$i$i489 = HEAP32[$206 >> 2] | 0;
        $838 = HEAP32[$204 >> 2] | 0;
       } else {
        $$idx1$val$i$i$i$i$i$i489 = $826;
        $838 = $this$idx2$val$i$i$i$i486;
       }
       $839 = $838;
       $840 = $$idx1$val$i$i$i$i$i$i489 - $839 | 0;
       if ($840 >> 2 >>> 0 < 536870911) {
        $846 = $840 >> 1;
        $848 = $846 >>> 0 < $835 >>> 0 ? $835 : $846;
        $850 = (HEAP32[$205 >> 2] | 0) - $839 | 0;
        $851 = $850 >> 2;
        if (!$848) {
         $$0$i8$i$i$i$i495 = 0;
         $856 = 0;
         $857 = $851;
         $861 = $850;
        } else {
         $$0$i7$i$i$i$i494 = $848;
         $5966 = $851;
         $5967 = $850;
         label = 178;
        }
       } else {
        $844 = (HEAP32[$205 >> 2] | 0) - $839 | 0;
        $$0$i7$i$i$i$i494 = 1073741823;
        $5966 = $844 >> 2;
        $5967 = $844;
        label = 178;
       }
       if ((label | 0) == 178) {
        label = 0;
        $$0$i8$i$i$i$i495 = $$0$i7$i$i$i$i494;
        $856 = __Znwj($$0$i7$i$i$i$i494 << 2) | 0;
        $857 = $5966;
        $861 = $5967;
       }
       $855 = $856 + ($857 << 2) | 0;
       if ($855) HEAP32[$855 >> 2] = $812;
       $860 = $856 + ($857 + 1 << 2) | 0;
       _memcpy($856 | 0, $838 | 0, $861 | 0) | 0;
       HEAP32[$204 >> 2] = $856;
       HEAP32[$205 >> 2] = $860;
       HEAP32[$206 >> 2] = $856 + ($$0$i8$i$i$i$i495 << 2);
       if (!$838) $$idx1$val$i$i501 = $860; else {
        __ZdlPv($838);
        $$idx1$val$i$i501 = HEAP32[$205 >> 2] | 0;
       }
      }
      HEAP8[$812 + 4 >> 0] = HEAP8[$207 >> 0] | 0;
      $868 = $$idx1$val$i$i501 - (HEAP32[$204 >> 2] | 0) >> 2;
      HEAP32[$208 >> 2] = $868;
      if ($868 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($868 >>> 0) > +HEAPF64[$209 >> 3] * +((HEAP32[$210 >> 2] | 0) >>> 0)) {
       __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $812);
       __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($195, $this);
       if (HEAP32[$211 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$202 >> 2] | 0);
       $882 = (HEAP8[$207 >> 0] | 0) + 1 << 24 >> 24;
       HEAP8[$207 >> 0] = $882;
       $$idx6$val11$i$i505 = HEAP32[$$idx6$i$i >> 2] | 0;
       $$idx7$val12$i$i506 = HEAP32[$205 >> 2] | 0;
       if (($$idx7$val12$i$i506 | 0) == ($$idx6$val11$i$i505 | 0)) $$lcssa$i$i525 = 0; else {
        $$idx6$val14$i$i509 = $$idx6$val11$i$i505;
        $$idx7$val18$i$i508 = $$idx7$val12$i$i506;
        $889 = $882;
        $i$013$i$i510 = 0;
        while (1) {
         $885 = HEAP32[$$idx6$val14$i$i509 + ($i$013$i$i510 << 2) >> 2] | 0;
         if ((HEAP8[$885 + 4 >> 0] | 0) == $889 << 24 >> 24) {
          $$idx6$val$i$i521 = $$idx6$val14$i$i509;
          $$idx7$val$i$i520 = $$idx7$val18$i$i508;
          $i$1$i$i522 = $i$013$i$i510;
         } else {
          if (!$885) {
           $$idx4$val$i$i515 = $$idx6$val14$i$i509;
           $$idx5$val$i$i514 = $$idx7$val18$i$i508;
          } else {
           FUNCTION_TABLE_vi[HEAP32[(HEAP32[$885 >> 2] | 0) + 4 >> 2] & 255]($885);
           $$idx4$val$i$i515 = HEAP32[$$idx6$i$i >> 2] | 0;
           $$idx5$val$i$i514 = HEAP32[$205 >> 2] | 0;
          }
          $898 = ($$idx5$val$i$i514 - $$idx4$val$i$i515 >> 2) + -1 | 0;
          if (($i$013$i$i510 | 0) == ($898 | 0)) {
           $$idx6$val$pre$i$i518 = $$idx4$val$i$i515;
           $903 = $$idx5$val$i$i514;
          } else {
           HEAP32[$$idx4$val$i$i515 + ($i$013$i$i510 << 2) >> 2] = HEAP32[$$idx4$val$i$i515 + ($898 << 2) >> 2];
           $$idx6$val$pre$i$i518 = HEAP32[$$idx6$i$i >> 2] | 0;
           $903 = HEAP32[$205 >> 2] | 0;
          }
          $scevgep4$i$i$i$i$i519 = $903 + -4 | 0;
          HEAP32[$205 >> 2] = $scevgep4$i$i$i$i$i519;
          $$idx6$val$i$i521 = $$idx6$val$pre$i$i518;
          $$idx7$val$i$i520 = $scevgep4$i$i$i$i$i519;
          $i$1$i$i522 = $i$013$i$i510 + -1 | 0;
         }
         $905 = $i$1$i$i522 + 1 | 0;
         $909 = $$idx7$val$i$i520 - $$idx6$val$i$i521 >> 2;
         if ($905 >>> 0 >= $909 >>> 0) {
          $$lcssa6242 = $909;
          break;
         }
         $$idx6$val14$i$i509 = $$idx6$val$i$i521;
         $$idx7$val18$i$i508 = $$idx7$val$i$i520;
         $889 = HEAP8[$207 >> 0] | 0;
         $i$013$i$i510 = $905;
        }
        $$lcssa$i$i525 = $$lcssa6242;
       }
       HEAP32[$208 >> 2] = $$lcssa$i$i525;
       HEAP32[$210 >> 2] = $$lcssa$i$i525;
      }
      $__k$val$i = HEAP32[$809 >> 2] | 0;
      $911 = HEAP32[$806 >> 2] | 0;
      do if (!$911) {
       HEAP32[$0 >> 2] = $806;
       $$0$i7$i = $806;
       $928 = $806;
       label = 210;
      } else {
       $__nd$0$i$i = $911;
       while (1) {
        $914 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
        if ($914 >>> 0 > $__k$val$i >>> 0) {
         $916 = HEAP32[$__nd$0$i$i >> 2] | 0;
         if (!$916) {
          $$lcssa6246 = $__nd$0$i$i;
          $__nd$0$i$i$lcssa6244 = $__nd$0$i$i;
          label = 203;
          break;
         } else $__nd$0$be$in$i$i = $916;
        } else {
         if ($914 >>> 0 >= $__k$val$i >>> 0) {
          $__nd$0$i$i$lcssa = $__nd$0$i$i;
          label = 209;
          break;
         }
         $919 = $__nd$0$i$i + 4 | 0;
         $920 = HEAP32[$919 >> 2] | 0;
         if (!$920) {
          $$lcssa6245 = $919;
          $__nd$0$i$i$lcssa6243 = $__nd$0$i$i;
          label = 207;
          break;
         } else $__nd$0$be$in$i$i = $920;
        }
        $__nd$0$i$i = $__nd$0$be$in$i$i;
       }
       if ((label | 0) == 203) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i$lcssa6244;
        $$0$i7$i = $$lcssa6246;
        $928 = $__nd$0$i$i$lcssa6244;
        label = 210;
        break;
       } else if ((label | 0) == 207) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i$lcssa6243;
        $$0$i7$i = $$lcssa6245;
        $928 = $__nd$0$i$i$lcssa6243;
        label = 210;
        break;
       } else if ((label | 0) == 209) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i$lcssa;
        if (!$__nd$0$i$i$lcssa) {
         $$0$i7$i = $0;
         $928 = 0;
         label = 210;
         break;
        } else {
         $__r$0$i = $__nd$0$i$i$lcssa;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 210) {
       label = 0;
       $923 = __Znwj(24) | 0;
       HEAP32[$923 + 16 >> 2] = $__k$val$i;
       HEAP32[$923 + 20 >> 2] = 0;
       HEAP32[$923 >> 2] = 0;
       HEAP32[$923 + 4 >> 2] = 0;
       HEAP32[$923 + 8 >> 2] = $928;
       HEAP32[$$0$i7$i >> 2] = $923;
       $930 = HEAP32[HEAP32[$805 >> 2] >> 2] | 0;
       if (!$930) $933 = $923; else {
        HEAP32[$805 >> 2] = $930;
        $933 = HEAP32[$$0$i7$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$807 >> 2] | 0, $933);
       HEAP32[$808 >> 2] = (HEAP32[$808 >> 2] | 0) + 1;
       $__r$0$i = $923;
      }
      HEAP32[$__r$0$i + 20 >> 2] = $812;
      $938 = HEAP32[$810 + 4 >> 2] | 0;
      if (!$938) {
       $$0$i$i$i = $810;
       while (1) {
        $943 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$943 >> 2] | 0) == ($$0$i$i$i | 0)) {
         $$cast$i$i$i$lcssa = $943;
         break;
        } else $$0$i$i$i = $943;
       }
       $$01$i$i$i = $$cast$i$i$i$lcssa;
      } else {
       $$0$i$i$i$i = $938;
       while (1) {
        $940 = HEAP32[$$0$i$i$i$i >> 2] | 0;
        if (!$940) {
         $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
         break;
        } else $$0$i$i$i$i = $940;
       }
       $$01$i$i$i = $$0$i$i$i$i$lcssa;
      }
      if (($$01$i$i$i | 0) == ($803 | 0)) break; else $810 = $$01$i$i$i;
     }
     $947 = HEAP32[$801 >> 2] | 0;
    }
    if (($947 | 0) != ($803 | 0)) {
     $949 = $$idx$val$i471 + -16 | 0;
     $950 = $$idx$val$i471 + -12 | 0;
     $951 = $$idx$val$i471 + -12 | 0;
     $952 = $$idx$val$i471 + -8 | 0;
     $954 = $947;
     while (1) {
      $__k$val$i529 = HEAP32[$954 + 16 >> 2] | 0;
      $955 = HEAP32[$950 >> 2] | 0;
      do if (!$955) {
       HEAP32[$0 >> 2] = $950;
       $$0$i7$i537 = $950;
       $972 = $950;
       label = 235;
      } else {
       $__nd$0$i$i530 = $955;
       while (1) {
        $958 = HEAP32[$__nd$0$i$i530 + 16 >> 2] | 0;
        if ($958 >>> 0 > $__k$val$i529 >>> 0) {
         $960 = HEAP32[$__nd$0$i$i530 >> 2] | 0;
         if (!$960) {
          $$lcssa6250 = $__nd$0$i$i530;
          $__nd$0$i$i530$lcssa6248 = $__nd$0$i$i530;
          label = 228;
          break;
         } else $__nd$0$be$in$i$i532 = $960;
        } else {
         if ($958 >>> 0 >= $__k$val$i529 >>> 0) {
          $__nd$0$i$i530$lcssa = $__nd$0$i$i530;
          label = 234;
          break;
         }
         $963 = $__nd$0$i$i530 + 4 | 0;
         $964 = HEAP32[$963 >> 2] | 0;
         if (!$964) {
          $$lcssa6249 = $963;
          $__nd$0$i$i530$lcssa6247 = $__nd$0$i$i530;
          label = 232;
          break;
         } else $__nd$0$be$in$i$i532 = $964;
        }
        $__nd$0$i$i530 = $__nd$0$be$in$i$i532;
       }
       if ((label | 0) == 228) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i530$lcssa6248;
        $$0$i7$i537 = $$lcssa6250;
        $972 = $__nd$0$i$i530$lcssa6248;
        label = 235;
        break;
       } else if ((label | 0) == 232) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i530$lcssa6247;
        $$0$i7$i537 = $$lcssa6249;
        $972 = $__nd$0$i$i530$lcssa6247;
        label = 235;
        break;
       } else if ((label | 0) == 234) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i530$lcssa;
        if (!$__nd$0$i$i530$lcssa) {
         $$0$i7$i537 = $0;
         $972 = 0;
         label = 235;
         break;
        } else {
         $__r$0$i541 = $__nd$0$i$i530$lcssa;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 235) {
       label = 0;
       $967 = __Znwj(24) | 0;
       HEAP32[$967 + 16 >> 2] = $__k$val$i529;
       HEAP32[$967 + 20 >> 2] = 0;
       HEAP32[$967 >> 2] = 0;
       HEAP32[$967 + 4 >> 2] = 0;
       HEAP32[$967 + 8 >> 2] = $972;
       HEAP32[$$0$i7$i537 >> 2] = $967;
       $974 = HEAP32[HEAP32[$949 >> 2] >> 2] | 0;
       if (!$974) $977 = $967; else {
        HEAP32[$949 >> 2] = $974;
        $977 = HEAP32[$$0$i7$i537 >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$951 >> 2] | 0, $977);
       HEAP32[$952 >> 2] = (HEAP32[$952 >> 2] | 0) + 1;
       $__r$0$i541 = $967;
      }
      $981 = HEAP32[$__r$0$i541 + 20 >> 2] | 0;
      $982 = $981 + 28 | 0;
      $984 = HEAP32[$954 + 20 >> 2] | 0;
      __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($14, $this, HEAP32[$984 + 36 >> 2] | 0, HEAP32[$984 + 40 >> 2] | 0);
      $985 = $981 + 32 | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($982, HEAP32[$985 >> 2] | 0);
      HEAP32[$982 >> 2] = HEAP32[$14 >> 2];
      $989 = HEAP32[$223 >> 2] | 0;
      HEAP32[$981 + 32 >> 2] = $989;
      $991 = HEAP32[$224 >> 2] | 0;
      HEAP32[$981 + 36 >> 2] = $991;
      if (!$991) {
       HEAP32[$982 >> 2] = $985;
       $994 = HEAP32[$225 >> 2] | 0;
      } else {
       HEAP32[$989 + 8 >> 2] = $985;
       HEAP32[$14 >> 2] = $225;
       HEAP32[$225 >> 2] = 0;
       HEAP32[$224 >> 2] = 0;
       $994 = 0;
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($14, $994);
      $996 = HEAP32[$954 + 4 >> 2] | 0;
      if (!$996) {
       $$0$i$i$i546 = $954;
       while (1) {
        $1001 = HEAP32[$$0$i$i$i546 + 8 >> 2] | 0;
        if ((HEAP32[$1001 >> 2] | 0) == ($$0$i$i$i546 | 0)) {
         $$cast$i$i$i547$lcssa = $1001;
         break;
        } else $$0$i$i$i546 = $1001;
       }
       $$01$i$i$i549 = $$cast$i$i$i547$lcssa;
      } else {
       $$0$i$i$i$i544 = $996;
       while (1) {
        $998 = HEAP32[$$0$i$i$i$i544 >> 2] | 0;
        if (!$998) {
         $$0$i$i$i$i544$lcssa = $$0$i$i$i$i544;
         break;
        } else $$0$i$i$i$i544 = $998;
       }
       $$01$i$i$i549 = $$0$i$i$i$i544$lcssa;
      }
      if (($$01$i$i$i549 | 0) == ($803 | 0)) break; else $954 = $$01$i$i$i549;
     }
    }
    $$010$be = HEAP32[$$010 + 60 >> 2] | 0;
    break;
   }
  case 2:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($195, 1, $$010);
    $$010$be = HEAP32[$$010 + 48 >> 2] | 0;
    break;
   }
  case 5:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($195, 7, $$010);
    $$010$be = HEAP32[$$010 + 48 >> 2] | 0;
    break;
   }
  case 3:
   {
    $531 = HEAP32[$$010 + 48 >> 2] | 0;
    HEAP32[$215 >> 2] = 0;
    HEAP32[$216 >> 2] = 0;
    HEAP32[$0 >> 2] = $217;
    __THREW__ = 0;
    $532 = invoke_ii(67, 48) | 0;
    $533 = __THREW__;
    __THREW__ = 0;
    if ($533 & 1) {
     label = 104;
     break L1;
    }
    __THREW__ = 0;
    invoke_viiiiiii(40, $532 | 0, $0 | 0, 0, 0, $$010 + 52 | 0, 0, $531 | 0);
    $536 = __THREW__;
    __THREW__ = 0;
    if ($536 & 1) {
     $$lcssa7189 = $532;
     label = 85;
     break L1;
    }
    $538 = HEAP32[$205 >> 2] | 0;
    $539 = HEAP32[$206 >> 2] | 0;
    if ($538 >>> 0 < $539 >>> 0) {
     if (!$538) $543 = 0; else {
      HEAP32[$538 >> 2] = $532;
      $543 = HEAP32[$205 >> 2] | 0;
     }
     $542 = $543 + 4 | 0;
     HEAP32[$205 >> 2] = $542;
     $$idx1$val$i$i$i = $542;
    } else {
     $this$idx2$val$i$i$i$i$i = HEAP32[$204 >> 2] | 0;
     $548 = ($538 - $this$idx2$val$i$i$i$i$i >> 2) + 1 | 0;
     if ($548 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(182, $204 | 0);
      $550 = __THREW__;
      __THREW__ = 0;
      if ($550 & 1) {
       label = 104;
       break L1;
      }
      $$idx1$val$i$i$i$i$i$i$i = HEAP32[$206 >> 2] | 0;
      $553 = HEAP32[$204 >> 2] | 0;
     } else {
      $$idx1$val$i$i$i$i$i$i$i = $539;
      $553 = $this$idx2$val$i$i$i$i$i;
     }
     $554 = $553;
     $555 = $$idx1$val$i$i$i$i$i$i$i - $554 | 0;
     if ($555 >> 2 >>> 0 < 536870911) {
      $561 = $555 >> 1;
      $563 = $561 >>> 0 < $548 >>> 0 ? $548 : $561;
      $565 = (HEAP32[$205 >> 2] | 0) - $554 | 0;
      $566 = $565 >> 2;
      if (!$563) {
       $$0$i8$i$i$i$i$i = 0;
       $573 = 0;
       $574 = $566;
       $578 = $565;
      } else {
       $$0$i7$i$i$i$i$i = $563;
       $5962 = $566;
       $5963 = $565;
       label = 79;
      }
     } else {
      $559 = (HEAP32[$205 >> 2] | 0) - $554 | 0;
      $$0$i7$i$i$i$i$i = 1073741823;
      $5962 = $559 >> 2;
      $5963 = $559;
      label = 79;
     }
     if ((label | 0) == 79) {
      label = 0;
      __THREW__ = 0;
      $569 = invoke_ii(67, $$0$i7$i$i$i$i$i << 2 | 0) | 0;
      $570 = __THREW__;
      __THREW__ = 0;
      if ($570 & 1) {
       label = 104;
       break L1;
      }
      $$0$i8$i$i$i$i$i = $$0$i7$i$i$i$i$i;
      $573 = $569;
      $574 = $5962;
      $578 = $5963;
     }
     $572 = $573 + ($574 << 2) | 0;
     if ($572) HEAP32[$572 >> 2] = $532;
     $577 = $573 + ($574 + 1 << 2) | 0;
     _memcpy($573 | 0, $553 | 0, $578 | 0) | 0;
     HEAP32[$204 >> 2] = $573;
     HEAP32[$205 >> 2] = $577;
     HEAP32[$206 >> 2] = $573 + ($$0$i8$i$i$i$i$i << 2);
     if (!$553) $$idx1$val$i$i$i = $577; else {
      __ZdlPv($553);
      $$idx1$val$i$i$i = HEAP32[$205 >> 2] | 0;
     }
    }
    HEAP8[$532 + 4 >> 0] = HEAP8[$207 >> 0] | 0;
    $587 = $$idx1$val$i$i$i - (HEAP32[$204 >> 2] | 0) >> 2;
    HEAP32[$208 >> 2] = $587;
    if ($587 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($587 >>> 0) > +HEAPF64[$209 >> 3] * +((HEAP32[$210 >> 2] | 0) >>> 0)) {
     __THREW__ = 0;
     invoke_vii(62, $this | 0, $532 | 0);
     $596 = __THREW__;
     __THREW__ = 0;
     if ($596 & 1) {
      label = 104;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(63, $195 | 0, $this | 0);
     $598 = __THREW__;
     __THREW__ = 0;
     if ($598 & 1) {
      label = 104;
      break L1;
     }
     if (HEAP32[$211 >> 2] & 16) {
      __THREW__ = 0;
      invoke_vii(62, $this | 0, HEAP32[$202 >> 2] | 0);
      $604 = __THREW__;
      __THREW__ = 0;
      if ($604 & 1) {
       label = 104;
       break L1;
      }
     }
     $607 = (HEAP8[$207 >> 0] | 0) + 1 << 24 >> 24;
     HEAP8[$207 >> 0] = $607;
     $$idx6$val11$i$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $$idx7$val12$i$i$i = HEAP32[$205 >> 2] | 0;
     if (($$idx7$val12$i$i$i | 0) == ($$idx6$val11$i$i$i | 0)) $$lcssa$i$i$i = 0; else {
      $$idx6$val14$i$i$i = $$idx6$val11$i$i$i;
      $$idx7$val18$i$i$i = $$idx7$val12$i$i$i;
      $614 = $607;
      $i$013$i$i$i = 0;
      while (1) {
       $610 = HEAP32[$$idx6$val14$i$i$i + ($i$013$i$i$i << 2) >> 2] | 0;
       if ((HEAP8[$610 + 4 >> 0] | 0) == $614 << 24 >> 24) {
        $$idx6$val$i$i$i = $$idx6$val14$i$i$i;
        $$idx7$val$i$i$i = $$idx7$val18$i$i$i;
        $i$1$i$i$i = $i$013$i$i$i;
       } else {
        if (!$610) {
         $$idx4$val$i$i$i = $$idx6$val14$i$i$i;
         $$idx5$val$i$i$i = $$idx7$val18$i$i$i;
        } else {
         FUNCTION_TABLE_vi[HEAP32[(HEAP32[$610 >> 2] | 0) + 4 >> 2] & 255]($610);
         $$idx4$val$i$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
         $$idx5$val$i$i$i = HEAP32[$205 >> 2] | 0;
        }
        $623 = ($$idx5$val$i$i$i - $$idx4$val$i$i$i >> 2) + -1 | 0;
        if (($i$013$i$i$i | 0) == ($623 | 0)) {
         $$idx6$val$pre$i$i$i = $$idx4$val$i$i$i;
         $628 = $$idx5$val$i$i$i;
        } else {
         HEAP32[$$idx4$val$i$i$i + ($i$013$i$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i$i + ($623 << 2) >> 2];
         $$idx6$val$pre$i$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
         $628 = HEAP32[$205 >> 2] | 0;
        }
        $scevgep4$i$i$i$i$i$i = $628 + -4 | 0;
        HEAP32[$205 >> 2] = $scevgep4$i$i$i$i$i$i;
        $$idx6$val$i$i$i = $$idx6$val$pre$i$i$i;
        $$idx7$val$i$i$i = $scevgep4$i$i$i$i$i$i;
        $i$1$i$i$i = $i$013$i$i$i + -1 | 0;
       }
       $630 = $i$1$i$i$i + 1 | 0;
       $634 = $$idx7$val$i$i$i - $$idx6$val$i$i$i >> 2;
       if ($630 >>> 0 >= $634 >>> 0) {
        $$lcssa6253 = $634;
        break;
       }
       $$idx6$val14$i$i$i = $$idx6$val$i$i$i;
       $$idx7$val18$i$i$i = $$idx7$val$i$i$i;
       $614 = HEAP8[$207 >> 0] | 0;
       $i$013$i$i$i = $630;
      }
      $$lcssa$i$i$i = $$lcssa6253;
     }
     HEAP32[$208 >> 2] = $$lcssa$i$i$i;
     HEAP32[$210 >> 2] = $$lcssa$i$i$i;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$217 >> 2] | 0);
    HEAP32[$211 >> 2] = 17;
    HEAP32[$202 >> 2] = $532;
    label = 15;
    break;
   }
  case 18:
   {
    $$idx$val$i603 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i606 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i603 | 0) / 144 | 0;
    while (1) {
     $i$0$i607 = $i$0$in$i606 + -1 | 0;
     if (($i$0$i607 | 0) <= -1) {
      label = 273;
      break;
     }
     if ((HEAP32[$$idx$val$i603 + ($i$0$i607 * 144 | 0) >> 2] | 0) == 6) {
      $i$0$i607$lcssa6239 = $i$0$i607;
      label = 272;
      break;
     } else $i$0$in$i606 = $i$0$i607;
    }
    if ((label | 0) == 272) {
     label = 0;
     $1060 = HEAP32[$$idx$val$i603 + ($i$0$i607$lcssa6239 * 144 | 0) + 124 >> 2] | 0;
     $1061 = HEAP32[$$idx$val$i603 + ($i$0$i607$lcssa6239 * 144 | 0) + 120 >> 2] | 0;
    } else if ((label | 0) == 273) {
     label = 0;
     $1060 = 0;
     $1061 = 0;
    }
    $1059 = $1060 + 1 | 0;
    if ($1059 >>> 0 >= (__ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE($1061) | 0) >>> 0) {
     $$010$lcssa6877 = $$010;
     label = 275;
     break L1;
    }
    $1076 = __Znwj(16) | 0;
    HEAP32[$1076 >> 2] = 41840;
    HEAP32[$1076 + 8 >> 2] = $1061;
    HEAP32[$1076 + 12 >> 2] = $1059;
    $1079 = HEAP32[$205 >> 2] | 0;
    $1080 = HEAP32[$206 >> 2] | 0;
    if ($1079 >>> 0 < $1080 >>> 0) {
     if (!$1079) $1084 = 0; else {
      HEAP32[$1079 >> 2] = $1076;
      $1084 = HEAP32[$205 >> 2] | 0;
     }
     $1083 = $1084 + 4 | 0;
     HEAP32[$205 >> 2] = $1083;
     $$idx1$val$i$i$i634 = $1083;
    } else {
     $this$idx2$val$i$i$i$i$i619 = HEAP32[$204 >> 2] | 0;
     $1089 = ($1079 - $this$idx2$val$i$i$i$i$i619 >> 2) + 1 | 0;
     if ($1089 >>> 0 > 1073741823) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($204);
      $$idx1$val$i$i$i$i$i$i$i622 = HEAP32[$206 >> 2] | 0;
      $1092 = HEAP32[$204 >> 2] | 0;
     } else {
      $$idx1$val$i$i$i$i$i$i$i622 = $1080;
      $1092 = $this$idx2$val$i$i$i$i$i619;
     }
     $1093 = $1092;
     $1094 = $$idx1$val$i$i$i$i$i$i$i622 - $1093 | 0;
     if ($1094 >> 2 >>> 0 < 536870911) {
      $1100 = $1094 >> 1;
      $1102 = $1100 >>> 0 < $1089 >>> 0 ? $1089 : $1100;
      $1104 = (HEAP32[$205 >> 2] | 0) - $1093 | 0;
      $1105 = $1104 >> 2;
      if (!$1102) {
       $$0$i8$i$i$i$i$i628 = 0;
       $1110 = 0;
       $1111 = $1105;
       $1115 = $1104;
      } else {
       $$0$i7$i$i$i$i$i627 = $1102;
       $5968 = $1105;
       $5969 = $1104;
       label = 290;
      }
     } else {
      $1098 = (HEAP32[$205 >> 2] | 0) - $1093 | 0;
      $$0$i7$i$i$i$i$i627 = 1073741823;
      $5968 = $1098 >> 2;
      $5969 = $1098;
      label = 290;
     }
     if ((label | 0) == 290) {
      label = 0;
      $$0$i8$i$i$i$i$i628 = $$0$i7$i$i$i$i$i627;
      $1110 = __Znwj($$0$i7$i$i$i$i$i627 << 2) | 0;
      $1111 = $5968;
      $1115 = $5969;
     }
     $1109 = $1110 + ($1111 << 2) | 0;
     if ($1109) HEAP32[$1109 >> 2] = $1076;
     $1114 = $1110 + ($1111 + 1 << 2) | 0;
     _memcpy($1110 | 0, $1092 | 0, $1115 | 0) | 0;
     HEAP32[$204 >> 2] = $1110;
     HEAP32[$205 >> 2] = $1114;
     HEAP32[$206 >> 2] = $1110 + ($$0$i8$i$i$i$i$i628 << 2);
     if (!$1092) $$idx1$val$i$i$i634 = $1114; else {
      __ZdlPv($1092);
      $$idx1$val$i$i$i634 = HEAP32[$205 >> 2] | 0;
     }
    }
    HEAP8[$1076 + 4 >> 0] = HEAP8[$207 >> 0] | 0;
    $1122 = $$idx1$val$i$i$i634 - (HEAP32[$204 >> 2] | 0) >> 2;
    HEAP32[$208 >> 2] = $1122;
    if ($1122 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($1122 >>> 0) > +HEAPF64[$209 >> 3] * +((HEAP32[$210 >> 2] | 0) >>> 0)) {
     __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $1076);
     __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($195, $this);
     if (HEAP32[$211 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$202 >> 2] | 0);
     $1136 = (HEAP8[$207 >> 0] | 0) + 1 << 24 >> 24;
     HEAP8[$207 >> 0] = $1136;
     $$idx6$val11$i$i$i638 = HEAP32[$$idx6$i$i >> 2] | 0;
     $$idx7$val12$i$i$i639 = HEAP32[$205 >> 2] | 0;
     if (($$idx7$val12$i$i$i639 | 0) == ($$idx6$val11$i$i$i638 | 0)) $$lcssa$i$i$i658 = 0; else {
      $$idx6$val14$i$i$i642 = $$idx6$val11$i$i$i638;
      $$idx7$val18$i$i$i641 = $$idx7$val12$i$i$i639;
      $1143 = $1136;
      $i$013$i$i$i643 = 0;
      while (1) {
       $1139 = HEAP32[$$idx6$val14$i$i$i642 + ($i$013$i$i$i643 << 2) >> 2] | 0;
       if ((HEAP8[$1139 + 4 >> 0] | 0) == $1143 << 24 >> 24) {
        $$idx6$val$i$i$i654 = $$idx6$val14$i$i$i642;
        $$idx7$val$i$i$i653 = $$idx7$val18$i$i$i641;
        $i$1$i$i$i655 = $i$013$i$i$i643;
       } else {
        if (!$1139) {
         $$idx4$val$i$i$i648 = $$idx6$val14$i$i$i642;
         $$idx5$val$i$i$i647 = $$idx7$val18$i$i$i641;
        } else {
         FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1139 >> 2] | 0) + 4 >> 2] & 255]($1139);
         $$idx4$val$i$i$i648 = HEAP32[$$idx6$i$i >> 2] | 0;
         $$idx5$val$i$i$i647 = HEAP32[$205 >> 2] | 0;
        }
        $1152 = ($$idx5$val$i$i$i647 - $$idx4$val$i$i$i648 >> 2) + -1 | 0;
        if (($i$013$i$i$i643 | 0) == ($1152 | 0)) {
         $$idx6$val$pre$i$i$i651 = $$idx4$val$i$i$i648;
         $1157 = $$idx5$val$i$i$i647;
        } else {
         HEAP32[$$idx4$val$i$i$i648 + ($i$013$i$i$i643 << 2) >> 2] = HEAP32[$$idx4$val$i$i$i648 + ($1152 << 2) >> 2];
         $$idx6$val$pre$i$i$i651 = HEAP32[$$idx6$i$i >> 2] | 0;
         $1157 = HEAP32[$205 >> 2] | 0;
        }
        $scevgep4$i$i$i$i$i$i652 = $1157 + -4 | 0;
        HEAP32[$205 >> 2] = $scevgep4$i$i$i$i$i$i652;
        $$idx6$val$i$i$i654 = $$idx6$val$pre$i$i$i651;
        $$idx7$val$i$i$i653 = $scevgep4$i$i$i$i$i$i652;
        $i$1$i$i$i655 = $i$013$i$i$i643 + -1 | 0;
       }
       $1159 = $i$1$i$i$i655 + 1 | 0;
       $1163 = $$idx7$val$i$i$i653 - $$idx6$val$i$i$i654 >> 2;
       if ($1159 >>> 0 >= $1163 >>> 0) {
        $$lcssa = $1163;
        break;
       }
       $$idx6$val14$i$i$i642 = $$idx6$val$i$i$i654;
       $$idx7$val18$i$i$i641 = $$idx7$val$i$i$i653;
       $1143 = HEAP8[$207 >> 0] | 0;
       $i$013$i$i$i643 = $1159;
      }
      $$lcssa$i$i$i658 = $$lcssa;
     }
     HEAP32[$208 >> 2] = $$lcssa$i$i$i658;
     HEAP32[$210 >> 2] = $$lcssa$i$i$i658;
    }
    HEAP32[$211 >> 2] = 18;
    HEAP32[$202 >> 2] = $1076;
    label = 15;
    break;
   }
  case 16:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($195, 14, $$010);
    $$010$be = HEAP32[$$010 + 60 >> 2] | 0;
    break;
   }
  case 17:
   {
    HEAP32[$211 >> 2] = 18;
    $$idx$val$i593 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i596 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i593 | 0) / 144 | 0;
    while (1) {
     $i$0$i597 = $i$0$in$i596 + -1 | 0;
     if (($i$0$i597 | 0) <= -1) {
      label = 267;
      break;
     }
     if ((HEAP32[$$idx$val$i593 + ($i$0$i597 * 144 | 0) >> 2] | 0) == 6) {
      $i$0$i597$lcssa6240 = $i$0$i597;
      label = 266;
      break;
     } else $i$0$in$i596 = $i$0$i597;
    }
    if ((label | 0) == 266) {
     label = 0;
     $1048 = HEAP32[$$idx$val$i593 + ($i$0$i597$lcssa6240 * 144 | 0) + 120 >> 2] | 0;
    } else if ((label | 0) == 267) {
     label = 0;
     $1048 = 0;
    }
    HEAP32[$202 >> 2] = $1048;
    label = 15;
    break;
   }
  case 14:
   {
    __ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($16, $this, $$010 + 48 | 0);
    HEAP32[$201 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
    HEAP32[$201 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
    HEAP32[$201 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
    HEAP32[$201 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
    label = 15;
    break;
   }
  case 12:
   {
    HEAP32[$211 >> 2] = 0;
    HEAP32[$227 + 0 >> 2] = HEAP32[$$sroa$22798 + 0 >> 2];
    HEAP32[$227 + 4 >> 2] = HEAP32[$$sroa$22798 + 4 >> 2];
    HEAP32[$227 + 8 >> 2] = HEAP32[$$sroa$22798 + 8 >> 2];
    label = 15;
    break;
   }
  case 15:
   {
    if (!(HEAP32[$$010 + 56 >> 2] | 0)) {
     HEAP32[$228 >> 2] = 0;
     HEAP32[$229 >> 2] = 0;
     HEAP32[$env26 >> 2] = $230;
     HEAP32[$231 >> 2] = 0;
     HEAP32[$232 >> 2] = 0;
     HEAP32[$fields >> 2] = $233;
     HEAP32[$234 >> 2] = 0;
     HEAP32[$235 >> 2] = 0;
     HEAP32[$18 >> 2] = $236;
     HEAP32[$237 >> 2] = 0;
     HEAP32[$238 >> 2] = 0;
     HEAP32[$19 >> 2] = $239;
     __THREW__ = 0;
     invoke_viiii(19, $17 | 0, $this | 0, $18 | 0, $19 | 0);
     $1016 = __THREW__;
     __THREW__ = 0;
     if ($1016 & 1) {
      label = 258;
      break L1;
     };
     HEAP32[$201 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
     HEAP32[$201 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
     HEAP32[$201 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
     HEAP32[$201 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($19, HEAP32[$239 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($18, HEAP32[$236 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($fields, HEAP32[$233 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env26, HEAP32[$230 >> 2] | 0);
     label = 15;
     break L3;
    } else {
     __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($env27, $this, HEAP32[$$010 + 36 >> 2] | 0, HEAP32[$$010 + 40 >> 2] | 0);
     __THREW__ = 0;
     invoke_viii(13, $195 | 0, 13, $$010 | 0);
     $1027 = __THREW__;
     __THREW__ = 0;
     if ($1027 & 1) {
      label = 261;
      break L1;
     }
     $1030 = HEAP32[$$010 + 52 >> 2] | 0;
     HEAP32[(HEAP32[$$idx1$i >> 2] | 0) + -72 >> 2] = $1030;
     $1033 = HEAP32[$1030 + 8 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env27, HEAP32[$240 >> 2] | 0);
     $$010$be = $1033;
     break L3;
    }
    break;
   }
  case 11:
   {
    $1008 = HEAP8[$$010 + 48 >> 0] | 0;
    HEAP32[$211 >> 2] = 1;
    HEAP8[$202 >> 0] = $1008;
    HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32802 + 0 >> 0] | 0;
    HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32802 + 1 >> 0] | 0;
    HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32802 + 2 >> 0] | 0;
    HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32802 + 3 >> 0] | 0;
    HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32802 + 4 >> 0] | 0;
    HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32802 + 5 >> 0] | 0;
    HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32802 + 6 >> 0] | 0;
    label = 15;
    break;
   }
  case 13:
   {
    __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($15, $this, $$010 + 4 | 0, +HEAPF64[$$010 + 48 >> 3]);
    HEAP32[$201 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
    HEAP32[$201 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
    HEAP32[$201 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
    HEAP32[$201 + 12 >> 2] = HEAP32[$15 + 12 >> 2];
    label = 15;
    break;
   }
  case 4:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($195, 9, $$010);
    $$010$be = HEAP32[$$010 + 48 >> 2] | 0;
    break;
   }
  case 6:
   {
    __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($env, $this, HEAP32[$$010 + 36 >> 2] | 0, HEAP32[$$010 + 40 >> 2] | 0);
    $$idx$val$i411 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i414 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i411 | 0) / 144 | 0;
    while (1) {
     $i$0$i415 = $i$0$in$i414 + -1 | 0;
     if (($i$0$i415 | 0) <= -1) {
      label = 113;
      break;
     }
     if ((HEAP32[$$idx$val$i411 + ($i$0$i415 * 144 | 0) >> 2] | 0) == 6) {
      $i$0$i415$lcssa6251 = $i$0$i415;
      label = 112;
      break;
     } else $i$0$in$i414 = $i$0$i415;
    }
    if ((label | 0) == 112) {
     label = 0;
     $660 = HEAP32[$$idx$val$i411 + ($i$0$i415$lcssa6251 * 144 | 0) + 120 >> 2] | 0;
     $661 = HEAP32[$$idx$val$i411 + ($i$0$i415$lcssa6251 * 144 | 0) + 124 >> 2] | 0;
    } else if ((label | 0) == 113) {
     label = 0;
     $660 = 0;
     $661 = 0;
    }
    $655 = HEAP32[$$010 + 60 >> 2] | 0;
    __THREW__ = 0;
    $656 = invoke_ii(67, 48) | 0;
    $657 = __THREW__;
    __THREW__ = 0;
    if ($657 & 1) {
     label = 152;
     break L1;
    }
    __THREW__ = 0;
    invoke_viiiiiii(40, $656 | 0, $env | 0, $660 | 0, $661 | 0, $$010 + 48 | 0, $655 | 0, 0);
    $662 = __THREW__;
    __THREW__ = 0;
    if ($662 & 1) {
     $$lcssa7188 = $656;
     label = 132;
     break L1;
    }
    $664 = HEAP32[$205 >> 2] | 0;
    $665 = HEAP32[$206 >> 2] | 0;
    if ($664 >>> 0 < $665 >>> 0) {
     if (!$664) $669 = 0; else {
      HEAP32[$664 >> 2] = $656;
      $669 = HEAP32[$205 >> 2] | 0;
     }
     $668 = $669 + 4 | 0;
     HEAP32[$205 >> 2] = $668;
     $$idx1$val$i$i$i439 = $668;
    } else {
     $this$idx2$val$i$i$i$i$i424 = HEAP32[$204 >> 2] | 0;
     $674 = ($664 - $this$idx2$val$i$i$i$i$i424 >> 2) + 1 | 0;
     if ($674 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(182, $204 | 0);
      $676 = __THREW__;
      __THREW__ = 0;
      if ($676 & 1) {
       label = 152;
       break L1;
      }
      $$idx1$val$i$i$i$i$i$i$i427 = HEAP32[$206 >> 2] | 0;
      $679 = HEAP32[$204 >> 2] | 0;
     } else {
      $$idx1$val$i$i$i$i$i$i$i427 = $665;
      $679 = $this$idx2$val$i$i$i$i$i424;
     }
     $680 = $679;
     $681 = $$idx1$val$i$i$i$i$i$i$i427 - $680 | 0;
     if ($681 >> 2 >>> 0 < 536870911) {
      $687 = $681 >> 1;
      $689 = $687 >>> 0 < $674 >>> 0 ? $674 : $687;
      $691 = (HEAP32[$205 >> 2] | 0) - $680 | 0;
      $692 = $691 >> 2;
      if (!$689) {
       $$0$i8$i$i$i$i$i433 = 0;
       $699 = 0;
       $700 = $692;
       $704 = $691;
      } else {
       $$0$i7$i$i$i$i$i432 = $689;
       $5964 = $692;
       $5965 = $691;
       label = 126;
      }
     } else {
      $685 = (HEAP32[$205 >> 2] | 0) - $680 | 0;
      $$0$i7$i$i$i$i$i432 = 1073741823;
      $5964 = $685 >> 2;
      $5965 = $685;
      label = 126;
     }
     if ((label | 0) == 126) {
      label = 0;
      __THREW__ = 0;
      $695 = invoke_ii(67, $$0$i7$i$i$i$i$i432 << 2 | 0) | 0;
      $696 = __THREW__;
      __THREW__ = 0;
      if ($696 & 1) {
       label = 152;
       break L1;
      }
      $$0$i8$i$i$i$i$i433 = $$0$i7$i$i$i$i$i432;
      $699 = $695;
      $700 = $5964;
      $704 = $5965;
     }
     $698 = $699 + ($700 << 2) | 0;
     if ($698) HEAP32[$698 >> 2] = $656;
     $703 = $699 + ($700 + 1 << 2) | 0;
     _memcpy($699 | 0, $679 | 0, $704 | 0) | 0;
     HEAP32[$204 >> 2] = $699;
     HEAP32[$205 >> 2] = $703;
     HEAP32[$206 >> 2] = $699 + ($$0$i8$i$i$i$i$i433 << 2);
     if (!$679) $$idx1$val$i$i$i439 = $703; else {
      __ZdlPv($679);
      $$idx1$val$i$i$i439 = HEAP32[$205 >> 2] | 0;
     }
    }
    HEAP8[$656 + 4 >> 0] = HEAP8[$207 >> 0] | 0;
    $713 = $$idx1$val$i$i$i439 - (HEAP32[$204 >> 2] | 0) >> 2;
    HEAP32[$208 >> 2] = $713;
    if ($713 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($713 >>> 0) > +HEAPF64[$209 >> 3] * +((HEAP32[$210 >> 2] | 0) >>> 0)) {
     __THREW__ = 0;
     invoke_vii(62, $this | 0, $656 | 0);
     $722 = __THREW__;
     __THREW__ = 0;
     if ($722 & 1) {
      label = 152;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(63, $195 | 0, $this | 0);
     $724 = __THREW__;
     __THREW__ = 0;
     if ($724 & 1) {
      label = 152;
      break L1;
     }
     if (HEAP32[$211 >> 2] & 16) {
      __THREW__ = 0;
      invoke_vii(62, $this | 0, HEAP32[$202 >> 2] | 0);
      $730 = __THREW__;
      __THREW__ = 0;
      if ($730 & 1) {
       label = 152;
       break L1;
      }
     }
     $733 = (HEAP8[$207 >> 0] | 0) + 1 << 24 >> 24;
     HEAP8[$207 >> 0] = $733;
     $$idx6$val11$i$i$i443 = HEAP32[$$idx6$i$i >> 2] | 0;
     $$idx7$val12$i$i$i444 = HEAP32[$205 >> 2] | 0;
     if (($$idx7$val12$i$i$i444 | 0) == ($$idx6$val11$i$i$i443 | 0)) $$lcssa$i$i$i463 = 0; else {
      $$idx6$val14$i$i$i447 = $$idx6$val11$i$i$i443;
      $$idx7$val18$i$i$i446 = $$idx7$val12$i$i$i444;
      $740 = $733;
      $i$013$i$i$i448 = 0;
      while (1) {
       $736 = HEAP32[$$idx6$val14$i$i$i447 + ($i$013$i$i$i448 << 2) >> 2] | 0;
       if ((HEAP8[$736 + 4 >> 0] | 0) == $740 << 24 >> 24) {
        $$idx6$val$i$i$i459 = $$idx6$val14$i$i$i447;
        $$idx7$val$i$i$i458 = $$idx7$val18$i$i$i446;
        $i$1$i$i$i460 = $i$013$i$i$i448;
       } else {
        if (!$736) {
         $$idx4$val$i$i$i453 = $$idx6$val14$i$i$i447;
         $$idx5$val$i$i$i452 = $$idx7$val18$i$i$i446;
        } else {
         FUNCTION_TABLE_vi[HEAP32[(HEAP32[$736 >> 2] | 0) + 4 >> 2] & 255]($736);
         $$idx4$val$i$i$i453 = HEAP32[$$idx6$i$i >> 2] | 0;
         $$idx5$val$i$i$i452 = HEAP32[$205 >> 2] | 0;
        }
        $749 = ($$idx5$val$i$i$i452 - $$idx4$val$i$i$i453 >> 2) + -1 | 0;
        if (($i$013$i$i$i448 | 0) == ($749 | 0)) {
         $$idx6$val$pre$i$i$i456 = $$idx4$val$i$i$i453;
         $754 = $$idx5$val$i$i$i452;
        } else {
         HEAP32[$$idx4$val$i$i$i453 + ($i$013$i$i$i448 << 2) >> 2] = HEAP32[$$idx4$val$i$i$i453 + ($749 << 2) >> 2];
         $$idx6$val$pre$i$i$i456 = HEAP32[$$idx6$i$i >> 2] | 0;
         $754 = HEAP32[$205 >> 2] | 0;
        }
        $scevgep4$i$i$i$i$i$i457 = $754 + -4 | 0;
        HEAP32[$205 >> 2] = $scevgep4$i$i$i$i$i$i457;
        $$idx6$val$i$i$i459 = $$idx6$val$pre$i$i$i456;
        $$idx7$val$i$i$i458 = $scevgep4$i$i$i$i$i$i457;
        $i$1$i$i$i460 = $i$013$i$i$i448 + -1 | 0;
       }
       $756 = $i$1$i$i$i460 + 1 | 0;
       $760 = $$idx7$val$i$i$i458 - $$idx6$val$i$i$i459 >> 2;
       if ($756 >>> 0 >= $760 >>> 0) {
        $$lcssa6252 = $760;
        break;
       }
       $$idx6$val14$i$i$i447 = $$idx6$val$i$i$i459;
       $$idx7$val18$i$i$i446 = $$idx7$val$i$i$i458;
       $740 = HEAP8[$207 >> 0] | 0;
       $i$013$i$i$i448 = $756;
      }
      $$lcssa$i$i$i463 = $$lcssa6252;
     }
     HEAP32[$208 >> 2] = $$lcssa$i$i$i463;
     HEAP32[$210 >> 2] = $$lcssa$i$i$i463;
    }
    HEAP32[$211 >> 2] = 17;
    HEAP32[$202 >> 2] = $656;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env, HEAP32[$218 >> 2] | 0);
    label = 15;
    break;
   }
  case 1:
   {
    $$idx$val$i400 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i400 | 0) / 144 | 0;
    while (1) {
     $i$0$i = $i$0$in$i + -1 | 0;
     if (($i$0$i | 0) <= -1) {
      label = 10;
      break;
     }
     if ((HEAP32[$$idx$val$i400 + ($i$0$i * 144 | 0) >> 2] | 0) == 6) {
      $i$0$i$lcssa6254 = $i$0$i;
      label = 9;
      break;
     } else $i$0$in$i = $i$0$i;
    }
    if ((label | 0) == 9) {
     label = 0;
     $389 = HEAP32[$$idx$val$i400 + ($i$0$i$lcssa6254 * 144 | 0) + 120 >> 2] | 0;
     $391 = HEAP32[$$idx$val$i400 + ($i$0$i$lcssa6254 * 144 | 0) + 124 >> 2] | 0;
    } else if ((label | 0) == 10) {
     label = 0;
     $389 = 0;
     $391 = 0;
    }
    HEAP32[$10 >> 2] = 0;
    HEAP32[$199 >> 2] = 0;
    HEAP32[$200 >> 2] = 0;
    __THREW__ = 0;
    invoke_viii(12, $9 | 0, $this | 0, $10 | 0);
    $369 = __THREW__;
    __THREW__ = 0;
    if ($369 & 1) {
     label = 65;
     break L1;
    };
    HEAP32[$201 + 0 >> 2] = HEAP32[$9 + 0 >> 2];
    HEAP32[$201 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$201 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    HEAP32[$201 + 12 >> 2] = HEAP32[$9 + 12 >> 2];
    $$pre = HEAP32[$202 >> 2] | 0;
    $$pre5172 = HEAP32[$$010 + 48 >> 2] | 0;
    $$pre5175 = HEAP32[$$010 + 52 >> 2] | 0;
    $371 = $$pre + 8 | 0;
    if (($$pre5172 | 0) == ($$pre5175 | 0)) label = 15; else {
     $373 = $$pre + 12 | 0;
     $374 = $$pre + 16 | 0;
     $380 = $$pre5172;
     do {
      $379 = HEAP32[$380 >> 2] | 0;
      $381 = __Znwj(56) | 0;
      $382 = HEAP32[$203 >> 2] | 0;
      HEAP32[$381 >> 2] = 41592;
      HEAP8[$381 + 5 >> 0] = 0;
      HEAP32[$381 + 24 >> 2] = $382;
      $385 = $381 + 28 | 0;
      $386 = $381 + 32 | 0;
      HEAP32[$386 >> 2] = 0;
      $387 = $381 + 36 | 0;
      HEAP32[$387 >> 2] = 0;
      HEAP32[$385 >> 2] = $386;
      HEAP32[$381 + 40 >> 2] = $389;
      HEAP32[$381 + 44 >> 2] = $391;
      HEAP32[$381 + 48 >> 2] = $379;
      $393 = HEAP32[$205 >> 2] | 0;
      $394 = HEAP32[$206 >> 2] | 0;
      if ($393 >>> 0 < $394 >>> 0) {
       if (!$393) $398 = 0; else {
        HEAP32[$393 >> 2] = $381;
        $398 = HEAP32[$205 >> 2] | 0;
       }
       $397 = $398 + 4 | 0;
       HEAP32[$205 >> 2] = $397;
       $$idx1$val$i$i = $397;
      } else {
       $this$idx2$val$i$i$i$i = HEAP32[$204 >> 2] | 0;
       $403 = ($393 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
       if ($403 >>> 0 > 1073741823) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($204);
        $$idx1$val$i$i$i$i$i$i = HEAP32[$206 >> 2] | 0;
        $406 = HEAP32[$204 >> 2] | 0;
       } else {
        $$idx1$val$i$i$i$i$i$i = $394;
        $406 = $this$idx2$val$i$i$i$i;
       }
       $407 = $406;
       $408 = $$idx1$val$i$i$i$i$i$i - $407 | 0;
       if ($408 >> 2 >>> 0 < 536870911) {
        $414 = $408 >> 1;
        $416 = $414 >>> 0 < $403 >>> 0 ? $403 : $414;
        $418 = (HEAP32[$205 >> 2] | 0) - $407 | 0;
        $419 = $418 >> 2;
        if (!$416) {
         $$0$i8$i$i$i$i = 0;
         $424 = 0;
         $425 = $419;
         $429 = $418;
        } else {
         $$0$i7$i$i$i$i = $416;
         $5958 = $419;
         $5959 = $418;
         label = 26;
        }
       } else {
        $412 = (HEAP32[$205 >> 2] | 0) - $407 | 0;
        $$0$i7$i$i$i$i = 1073741823;
        $5958 = $412 >> 2;
        $5959 = $412;
        label = 26;
       }
       if ((label | 0) == 26) {
        label = 0;
        $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
        $424 = __Znwj($$0$i7$i$i$i$i << 2) | 0;
        $425 = $5958;
        $429 = $5959;
       }
       $423 = $424 + ($425 << 2) | 0;
       if ($423) HEAP32[$423 >> 2] = $381;
       $428 = $424 + ($425 + 1 << 2) | 0;
       _memcpy($424 | 0, $406 | 0, $429 | 0) | 0;
       HEAP32[$204 >> 2] = $424;
       HEAP32[$205 >> 2] = $428;
       HEAP32[$206 >> 2] = $424 + ($$0$i8$i$i$i$i << 2);
       if (!$406) $$idx1$val$i$i = $428; else {
        __ZdlPv($406);
        $$idx1$val$i$i = HEAP32[$205 >> 2] | 0;
       }
      }
      HEAP8[$381 + 4 >> 0] = HEAP8[$207 >> 0] | 0;
      $436 = $$idx1$val$i$i - (HEAP32[$204 >> 2] | 0) >> 2;
      HEAP32[$208 >> 2] = $436;
      if ($436 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($436 >>> 0) > +HEAPF64[$209 >> 3] * +((HEAP32[$210 >> 2] | 0) >>> 0)) {
       __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $381);
       __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($195, $this);
       if (HEAP32[$211 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$202 >> 2] | 0);
       $450 = (HEAP8[$207 >> 0] | 0) + 1 << 24 >> 24;
       HEAP8[$207 >> 0] = $450;
       $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $$idx7$val12$i$i = HEAP32[$205 >> 2] | 0;
       if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
        $$idx6$val14$i$i = $$idx6$val11$i$i;
        $$idx7$val18$i$i = $$idx7$val12$i$i;
        $457 = $450;
        $i$013$i$i = 0;
        while (1) {
         $453 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
         if ((HEAP8[$453 + 4 >> 0] | 0) == $457 << 24 >> 24) {
          $$idx6$val$i$i = $$idx6$val14$i$i;
          $$idx7$val$i$i = $$idx7$val18$i$i;
          $i$1$i$i = $i$013$i$i;
         } else {
          if (!$453) {
           $$idx4$val$i$i = $$idx6$val14$i$i;
           $$idx5$val$i$i = $$idx7$val18$i$i;
          } else {
           FUNCTION_TABLE_vi[HEAP32[(HEAP32[$453 >> 2] | 0) + 4 >> 2] & 255]($453);
           $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $$idx5$val$i$i = HEAP32[$205 >> 2] | 0;
          }
          $466 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
          if (($i$013$i$i | 0) == ($466 | 0)) {
           $$idx6$val$pre$i$i = $$idx4$val$i$i;
           $471 = $$idx5$val$i$i;
          } else {
           HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($466 << 2) >> 2];
           $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $471 = HEAP32[$205 >> 2] | 0;
          }
          $scevgep4$i$i$i$i$i = $471 + -4 | 0;
          HEAP32[$205 >> 2] = $scevgep4$i$i$i$i$i;
          $$idx6$val$i$i = $$idx6$val$pre$i$i;
          $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
          $i$1$i$i = $i$013$i$i + -1 | 0;
         }
         $473 = $i$1$i$i + 1 | 0;
         $477 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
         if ($473 >>> 0 >= $477 >>> 0) {
          $$lcssa6255 = $477;
          break;
         }
         $$idx6$val14$i$i = $$idx6$val$i$i;
         $$idx7$val18$i$i = $$idx7$val$i$i;
         $457 = HEAP8[$207 >> 0] | 0;
         $i$013$i$i = $473;
        }
        $$lcssa$i$i = $$lcssa6255;
       }
       HEAP32[$208 >> 2] = $$lcssa$i$i;
       HEAP32[$210 >> 2] = $$lcssa$i$i;
      }
      __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($11, $this, HEAP32[$379 + 36 >> 2] | 0, HEAP32[$379 + 40 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($385, HEAP32[$386 >> 2] | 0);
      HEAP32[$385 >> 2] = HEAP32[$11 >> 2];
      $481 = HEAP32[$212 >> 2] | 0;
      HEAP32[$386 >> 2] = $481;
      $482 = HEAP32[$213 >> 2] | 0;
      HEAP32[$387 >> 2] = $482;
      if (!$482) {
       HEAP32[$385 >> 2] = $386;
       $485 = $481;
      } else {
       HEAP32[$481 + 8 >> 2] = $386;
       HEAP32[$11 >> 2] = $214;
       HEAP32[$214 >> 2] = 0;
       HEAP32[$213 >> 2] = 0;
       $485 = 0;
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($11, $485);
      $486 = HEAP32[$373 >> 2] | 0;
      if (($486 | 0) == (HEAP32[$374 >> 2] | 0)) {
       $this$idx2$val$i$i = HEAP32[$371 >> 2] | 0;
       $496 = ($486 - $this$idx2$val$i$i >> 2) + 1 | 0;
       if ($496 >>> 0 > 1073741823) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($371);
        $$idx1$val$i$i$i$i = HEAP32[$374 >> 2] | 0;
        $499 = HEAP32[$371 >> 2] | 0;
       } else {
        $$idx1$val$i$i$i$i = $486;
        $499 = $this$idx2$val$i$i;
       }
       $500 = $499;
       $501 = $$idx1$val$i$i$i$i - $500 | 0;
       if ($501 >> 2 >>> 0 < 536870911) {
        $507 = $501 >> 1;
        $509 = $507 >>> 0 < $496 >>> 0 ? $496 : $507;
        $511 = (HEAP32[$373 >> 2] | 0) - $500 | 0;
        $512 = $511 >> 2;
        if (!$509) {
         $$0$i8$i$i = 0;
         $517 = 0;
         $518 = $512;
         $522 = $511;
        } else {
         $$0$i7$i$i = $509;
         $5960 = $512;
         $5961 = $511;
         label = 59;
        }
       } else {
        $505 = (HEAP32[$373 >> 2] | 0) - $500 | 0;
        $$0$i7$i$i = 1073741823;
        $5960 = $505 >> 2;
        $5961 = $505;
        label = 59;
       }
       if ((label | 0) == 59) {
        label = 0;
        $$0$i8$i$i = $$0$i7$i$i;
        $517 = __Znwj($$0$i7$i$i << 2) | 0;
        $518 = $5960;
        $522 = $5961;
       }
       $516 = $517 + ($518 << 2) | 0;
       if ($516) HEAP32[$516 >> 2] = $381;
       _memcpy($517 | 0, $499 | 0, $522 | 0) | 0;
       HEAP32[$371 >> 2] = $517;
       HEAP32[$373 >> 2] = $517 + ($518 + 1 << 2);
       HEAP32[$374 >> 2] = $517 + ($$0$i8$i$i << 2);
       if ($499) __ZdlPv($499);
      } else {
       if (!$486) $491 = 0; else {
        HEAP32[$486 >> 2] = $381;
        $491 = HEAP32[$373 >> 2] | 0;
       }
       HEAP32[$373 >> 2] = $491 + 4;
      }
      $380 = $380 + 4 | 0;
     } while (($380 | 0) != ($$pre5175 | 0));
     label = 15;
    }
    break;
   }
  case 0:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($195, 0, $$010);
    $$010$be = HEAP32[$$010 + 48 >> 2] | 0;
    break;
   }
  default:
   {
    $$lcssa7030 = $355;
    label = 339;
    break L1;
   }
  } while (0);
  L425 : do if ((label | 0) == 15) {
   label = 0;
   $$idx$val$i66742484278 = HEAP32[$$idx$i >> 2] | 0;
   $$idx1$val$i66942494279 = HEAP32[$$idx1$i >> 2] | 0;
   if (($$idx1$val$i66942494279 - $$idx$val$i66742484278 | 0) >>> 0 <= $198 >>> 0) {
    label = 2349;
    break L1;
   }
   $$111$ph4280 = $$010;
   $$idx$val$i6915179 = $$idx$val$i66742484278;
   $$idx1$val$i66942494281 = $$idx1$val$i66942494279;
   L428 : while (1) {
    $$idx$val$i6915178 = $$idx$val$i6915179;
    $$idx$val$i910 = $$idx1$val$i66942494281;
    L430 : while (1) {
     $1250 = $$idx$val$i910 + -144 | 0;
     switch (HEAP32[$1250 >> 2] | 0) {
     case 2:
      break;
     case 1:
      {
       $$idx$val$i910$lcssa6276 = $$idx$val$i910;
       $$lcssa6296 = $1250;
       label = 577;
       break L430;
       break;
      }
     case 0:
      {
       $$idx$val$i6915178$lcssa6256 = $$idx$val$i6915178;
       $$idx$val$i910$lcssa6275 = $$idx$val$i910;
       label = 344;
       break L430;
       break;
      }
     case 4:
      {
       $$idx$val$i910$lcssa6277 = $$idx$val$i910;
       label = 903;
       break L430;
       break;
      }
     case 5:
      {
       $$idx$val$i910$lcssa6278 = $$idx$val$i910;
       $$lcssa6298 = $1250;
       label = 986;
       break L430;
       break;
      }
     case 6:
      {
       $$idx$val$i910$lcssa6279 = $$idx$val$i910;
       label = 1759;
       break L430;
       break;
      }
     case 8:
      {
       $$idx$val$i910$lcssa6280 = $$idx$val$i910;
       label = 1770;
       break L430;
       break;
      }
     case 7:
      {
       $$idx$val$i910$lcssa6281 = $$idx$val$i910;
       label = 1771;
       break L1;
       break;
      }
     case 9:
      {
       $$idx$val$i910$lcssa6282 = $$idx$val$i910;
       label = 1786;
       break L428;
       break;
      }
     case 11:
      {
       $$idx$val$i910$lcssa6283 = $$idx$val$i910;
       label = 1799;
       break L430;
       break;
      }
     case 10:
      {
       $$idx$val$i910$lcssa6284 = $$idx$val$i910;
       $$lcssa6304 = $1250;
       label = 1901;
       break L428;
       break;
      }
     case 13:
      {
       $$idx$val$i910$lcssa6286 = $$idx$val$i910;
       label = 1914;
       break L430;
       break;
      }
     case 14:
      {
       $$idx$val$i910$lcssa6287 = $$idx$val$i910;
       $$lcssa6307 = $1250;
       label = 2060;
       break L430;
       break;
      }
     case 15:
      {
       $$idx$val$i910$lcssa6288 = $$idx$val$i910;
       label = 2088;
       break L430;
       break;
      }
     case 16:
      {
       $$idx$val$i910$lcssa6289 = $$idx$val$i910;
       label = 2248;
       break L430;
       break;
      }
     case 17:
      {
       $$idx$val$i910$lcssa6290 = $$idx$val$i910;
       label = 2291;
       break L430;
       break;
      }
     case 12:
      {
       label = 2343;
       break L430;
       break;
      }
     default:
      {
       $$lcssa6294 = $1250;
       label = 2339;
       break L1;
      }
     }
     $1848 = HEAP32[$$idx$val$i910 + -140 >> 2] | 0;
     $1849 = $$idx$val$i910 + -104 | 0;
     $1850 = HEAP32[$1849 >> 2] | 0;
     if (($1850 | 0) == 19) label = 587; else if ((HEAP32[$201 >> 2] | 0) == 19) label = 587; else {
      $5975 = HEAP32[$1848 + 52 >> 2] | 0;
      label = 589;
     }
     if ((label | 0) == 587) {
      label = 0;
      $1855 = HEAP32[$1848 + 52 >> 2] | 0;
      if (($1855 | 0) == 2) {
       HEAP32[$1250 >> 2] = 16;
       $1857 = $$idx$val$i910 + -88 | 0;
       HEAP32[$1857 + 0 >> 2] = HEAP32[$201 + 0 >> 2];
       HEAP32[$1857 + 4 >> 2] = HEAP32[$201 + 4 >> 2];
       HEAP32[$1857 + 8 >> 2] = HEAP32[$201 + 8 >> 2];
       HEAP32[$1857 + 12 >> 2] = HEAP32[$201 + 12 >> 2];
      } else {
       $5975 = $1855;
       label = 589;
      }
     }
     if ((label | 0) == 589) {
      label = 0;
      $1858 = $1848 + 52 | 0;
      if (($5975 | 0) == 11) {
       label = 592;
       break L1;
      } else if (($5975 | 0) != 10) {
       $$idx$val$i910$lcssa6291 = $$idx$val$i910;
       $$lcssa6314 = $1848;
       $$lcssa6317 = $1849;
       $$lcssa6320 = $1850;
       $$lcssa6323 = $5975;
       $$lcssa6325 = $1858;
       label = 596;
       break;
      }
      HEAP32[$1250 >> 2] = 8;
      $1859 = $$idx$val$i910 + -88 | 0;
      HEAP32[$1859 + 0 >> 2] = HEAP32[$201 + 0 >> 2];
      HEAP32[$1859 + 4 >> 2] = HEAP32[$201 + 4 >> 2];
      HEAP32[$1859 + 8 >> 2] = HEAP32[$201 + 8 >> 2];
      HEAP32[$1859 + 12 >> 2] = HEAP32[$201 + 12 >> 2];
     }
     $$idx$val$i6915178 = HEAP32[$$idx$i >> 2] | 0;
     $$idx$val$i910 = HEAP32[$$idx1$i >> 2] | 0;
     if (($$idx$val$i910 - $$idx$val$i6915178 | 0) >>> 0 <= $198 >>> 0) {
      label = 2347;
      break L1;
     }
    }
    L443 : switch (label | 0) {
    case 344:
     {
      label = 0;
      $1252 = $$idx$val$i910$lcssa6275 + -140 | 0;
      $1253 = HEAP32[$1252 >> 2] | 0;
      if ((HEAP32[$201 >> 2] | 0) != 17) {
       $$lcssa6831 = $1253;
       label = 345;
       break L1;
      }
      $1273 = HEAP32[$202 >> 2] | 0;
      $1274 = $1253 + 56 | 0;
      $1275 = HEAP32[$1274 >> 2] | 0;
      $1276 = $1253 + 52 | 0;
      $1277 = HEAP32[$1276 >> 2] | 0;
      $1281 = $1273 + 32 | 0;
      $1283 = $1273 + 28 | 0;
      if (($1275 - $1277 | 0) != ((HEAP32[$1281 >> 2] | 0) - (HEAP32[$1283 >> 2] | 0) | 0)) {
       $$lcssa6832 = $1253;
       $$lcssa6838 = $1274;
       $$lcssa6844 = $1276;
       $$lcssa6850 = $1281;
       $$lcssa6856 = $1283;
       label = 357;
       break L1;
      }
      if (($1275 | 0) == ($1277 | 0)) $__x$idx1$i$pre$phiZZZ2D = $$idx$val$i910$lcssa6275 + -36 | 0; else {
       $1290 = $$idx$val$i910$lcssa6275 + -40 | 0;
       $1291 = $$idx$val$i910$lcssa6275 + -36 | 0;
       $1292 = $$idx$val$i910$lcssa6275 + -32 | 0;
       $$idx1$val$i693 = $$idx$val$i910$lcssa6275;
       $$idx2$val$i698 = $$idx$val$i6915178$lcssa6256;
       $1355 = $1277;
       $i$04273 = 0;
       while (1) {
        $1356 = HEAP32[$1355 + ($i$04273 << 2) >> 2] | 0;
        $i$0$in$i694 = ($$idx1$val$i693 - $$idx2$val$i698 | 0) / 144 | 0;
        while (1) {
         $i$0$i695 = $i$0$in$i694 + -1 | 0;
         if (($i$0$i695 | 0) <= -1) {
          label = 382;
          break;
         }
         if ((HEAP32[$$idx2$val$i698 + ($i$0$i695 * 144 | 0) >> 2] | 0) == 6) {
          $i$0$i695$lcssa6370 = $i$0$i695;
          label = 381;
          break;
         } else $i$0$in$i694 = $i$0$i695;
        }
        if ((label | 0) == 381) {
         label = 0;
         $1377 = HEAP32[$$idx2$val$i698 + ($i$0$i695$lcssa6370 * 144 | 0) + 120 >> 2] | 0;
         $1379 = HEAP32[$$idx2$val$i698 + ($i$0$i695$lcssa6370 * 144 | 0) + 124 >> 2] | 0;
        } else if ((label | 0) == 382) {
         label = 0;
         $1377 = 0;
         $1379 = 0;
        }
        $1368 = (HEAP32[$1283 >> 2] | 0) + ($i$04273 << 2) | 0;
        $1369 = __Znwj(56) | 0;
        $1370 = HEAP32[$1368 >> 2] | 0;
        HEAP32[$1369 >> 2] = 41592;
        HEAP8[$1369 + 5 >> 0] = 0;
        HEAP32[$1369 + 24 >> 2] = $1370;
        $1373 = $1369 + 28 | 0;
        $1374 = $1369 + 32 | 0;
        HEAP32[$1374 >> 2] = 0;
        $1375 = $1369 + 36 | 0;
        HEAP32[$1375 >> 2] = 0;
        HEAP32[$1373 >> 2] = $1374;
        HEAP32[$1369 + 40 >> 2] = $1377;
        HEAP32[$1369 + 44 >> 2] = $1379;
        HEAP32[$1369 + 48 >> 2] = $1356;
        $1381 = HEAP32[$205 >> 2] | 0;
        $1382 = HEAP32[$206 >> 2] | 0;
        if ($1381 >>> 0 < $1382 >>> 0) {
         if (!$1381) $1386 = 0; else {
          HEAP32[$1381 >> 2] = $1369;
          $1386 = HEAP32[$205 >> 2] | 0;
         }
         $1385 = $1386 + 4 | 0;
         HEAP32[$205 >> 2] = $1385;
         $$idx1$val$i$i719 = $1385;
        } else {
         $this$idx2$val$i$i$i$i704 = HEAP32[$204 >> 2] | 0;
         $1391 = ($1381 - $this$idx2$val$i$i$i$i704 >> 2) + 1 | 0;
         if ($1391 >>> 0 > 1073741823) {
          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($204);
          $$idx1$val$i$i$i$i$i$i707 = HEAP32[$206 >> 2] | 0;
          $1394 = HEAP32[$204 >> 2] | 0;
         } else {
          $$idx1$val$i$i$i$i$i$i707 = $1382;
          $1394 = $this$idx2$val$i$i$i$i704;
         }
         $1395 = $1394;
         $1396 = $$idx1$val$i$i$i$i$i$i707 - $1395 | 0;
         if ($1396 >> 2 >>> 0 < 536870911) {
          $1402 = $1396 >> 1;
          $1404 = $1402 >>> 0 < $1391 >>> 0 ? $1391 : $1402;
          $1406 = (HEAP32[$205 >> 2] | 0) - $1395 | 0;
          $1407 = $1406 >> 2;
          if (!$1404) {
           $$0$i8$i$i$i$i713 = 0;
           $1412 = 0;
           $1413 = $1407;
           $1417 = $1406;
          } else {
           $$0$i7$i$i$i$i712 = $1404;
           $5970 = $1407;
           $5971 = $1406;
           label = 392;
          }
         } else {
          $1400 = (HEAP32[$205 >> 2] | 0) - $1395 | 0;
          $$0$i7$i$i$i$i712 = 1073741823;
          $5970 = $1400 >> 2;
          $5971 = $1400;
          label = 392;
         }
         if ((label | 0) == 392) {
          label = 0;
          $$0$i8$i$i$i$i713 = $$0$i7$i$i$i$i712;
          $1412 = __Znwj($$0$i7$i$i$i$i712 << 2) | 0;
          $1413 = $5970;
          $1417 = $5971;
         }
         $1411 = $1412 + ($1413 << 2) | 0;
         if ($1411) HEAP32[$1411 >> 2] = $1369;
         $1416 = $1412 + ($1413 + 1 << 2) | 0;
         _memcpy($1412 | 0, $1394 | 0, $1417 | 0) | 0;
         HEAP32[$204 >> 2] = $1412;
         HEAP32[$205 >> 2] = $1416;
         HEAP32[$206 >> 2] = $1412 + ($$0$i8$i$i$i$i713 << 2);
         if (!$1394) $$idx1$val$i$i719 = $1416; else {
          __ZdlPv($1394);
          $$idx1$val$i$i719 = HEAP32[$205 >> 2] | 0;
         }
        }
        HEAP8[$1369 + 4 >> 0] = HEAP8[$207 >> 0] | 0;
        $1424 = $$idx1$val$i$i719 - (HEAP32[$204 >> 2] | 0) >> 2;
        HEAP32[$208 >> 2] = $1424;
        if ($1424 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($1424 >>> 0) > +HEAPF64[$209 >> 3] * +((HEAP32[$210 >> 2] | 0) >>> 0)) {
         __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $1369);
         __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($195, $this);
         if (HEAP32[$211 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$202 >> 2] | 0);
         $1438 = (HEAP8[$207 >> 0] | 0) + 1 << 24 >> 24;
         HEAP8[$207 >> 0] = $1438;
         $$idx6$val11$i$i723 = HEAP32[$$idx6$i$i >> 2] | 0;
         $$idx7$val12$i$i724 = HEAP32[$205 >> 2] | 0;
         if (($$idx7$val12$i$i724 | 0) == ($$idx6$val11$i$i723 | 0)) $$lcssa$i$i743 = 0; else {
          $$idx6$val14$i$i727 = $$idx6$val11$i$i723;
          $$idx7$val18$i$i726 = $$idx7$val12$i$i724;
          $1445 = $1438;
          $i$013$i$i728 = 0;
          while (1) {
           $1441 = HEAP32[$$idx6$val14$i$i727 + ($i$013$i$i728 << 2) >> 2] | 0;
           if ((HEAP8[$1441 + 4 >> 0] | 0) == $1445 << 24 >> 24) {
            $$idx6$val$i$i739 = $$idx6$val14$i$i727;
            $$idx7$val$i$i738 = $$idx7$val18$i$i726;
            $i$1$i$i740 = $i$013$i$i728;
           } else {
            if (!$1441) {
             $$idx4$val$i$i733 = $$idx6$val14$i$i727;
             $$idx5$val$i$i732 = $$idx7$val18$i$i726;
            } else {
             FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1441 >> 2] | 0) + 4 >> 2] & 255]($1441);
             $$idx4$val$i$i733 = HEAP32[$$idx6$i$i >> 2] | 0;
             $$idx5$val$i$i732 = HEAP32[$205 >> 2] | 0;
            }
            $1454 = ($$idx5$val$i$i732 - $$idx4$val$i$i733 >> 2) + -1 | 0;
            if (($i$013$i$i728 | 0) == ($1454 | 0)) {
             $$idx6$val$pre$i$i736 = $$idx4$val$i$i733;
             $1459 = $$idx5$val$i$i732;
            } else {
             HEAP32[$$idx4$val$i$i733 + ($i$013$i$i728 << 2) >> 2] = HEAP32[$$idx4$val$i$i733 + ($1454 << 2) >> 2];
             $$idx6$val$pre$i$i736 = HEAP32[$$idx6$i$i >> 2] | 0;
             $1459 = HEAP32[$205 >> 2] | 0;
            }
            $scevgep4$i$i$i$i$i737 = $1459 + -4 | 0;
            HEAP32[$205 >> 2] = $scevgep4$i$i$i$i$i737;
            $$idx6$val$i$i739 = $$idx6$val$pre$i$i736;
            $$idx7$val$i$i738 = $scevgep4$i$i$i$i$i737;
            $i$1$i$i740 = $i$013$i$i728 + -1 | 0;
           }
           $1461 = $i$1$i$i740 + 1 | 0;
           $1465 = $$idx7$val$i$i738 - $$idx6$val$i$i739 >> 2;
           if ($1461 >>> 0 >= $1465 >>> 0) {
            $$lcssa6371 = $1465;
            break;
           }
           $$idx6$val14$i$i727 = $$idx6$val$i$i739;
           $$idx7$val18$i$i726 = $$idx7$val$i$i738;
           $1445 = HEAP8[$207 >> 0] | 0;
           $i$013$i$i728 = $1461;
          }
          $$lcssa$i$i743 = $$lcssa6371;
         }
         HEAP32[$208 >> 2] = $$lcssa$i$i743;
         HEAP32[$210 >> 2] = $$lcssa$i$i743;
        }
        __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($24, $this, HEAP32[$1356 + 36 >> 2] | 0, HEAP32[$1356 + 40 >> 2] | 0);
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1373, HEAP32[$1374 >> 2] | 0);
        HEAP32[$1373 >> 2] = HEAP32[$24 >> 2];
        $1469 = HEAP32[$246 >> 2] | 0;
        HEAP32[$1374 >> 2] = $1469;
        $1470 = HEAP32[$247 >> 2] | 0;
        HEAP32[$1375 >> 2] = $1470;
        if (!$1470) {
         HEAP32[$1373 >> 2] = $1374;
         $1473 = $1469;
        } else {
         HEAP32[$1469 + 8 >> 2] = $1374;
         HEAP32[$24 >> 2] = $248;
         HEAP32[$248 >> 2] = 0;
         HEAP32[$247 >> 2] = 0;
         $1473 = 0;
        }
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($24, $1473);
        $1474 = HEAP32[$1291 >> 2] | 0;
        if (($1474 | 0) == (HEAP32[$1292 >> 2] | 0)) {
         $this$idx2$val$i$i750 = HEAP32[$1290 >> 2] | 0;
         $1484 = ($1474 - $this$idx2$val$i$i750 >> 2) + 1 | 0;
         if ($1484 >>> 0 > 1073741823) {
          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1290);
          $$idx1$val$i$i$i$i753 = HEAP32[$1292 >> 2] | 0;
          $1487 = HEAP32[$1290 >> 2] | 0;
         } else {
          $$idx1$val$i$i$i$i753 = $1474;
          $1487 = $this$idx2$val$i$i750;
         }
         $1488 = $1487;
         $1489 = $$idx1$val$i$i$i$i753 - $1488 | 0;
         if ($1489 >> 2 >>> 0 < 536870911) {
          $1495 = $1489 >> 1;
          $1497 = $1495 >>> 0 < $1484 >>> 0 ? $1484 : $1495;
          $1499 = (HEAP32[$1291 >> 2] | 0) - $1488 | 0;
          $1500 = $1499 >> 2;
          if (!$1497) {
           $$0$i8$i$i759 = 0;
           $1505 = 0;
           $1506 = $1500;
           $1510 = $1499;
          } else {
           $$0$i7$i$i758 = $1497;
           $5972 = $1500;
           $5973 = $1499;
           label = 425;
          }
         } else {
          $1493 = (HEAP32[$1291 >> 2] | 0) - $1488 | 0;
          $$0$i7$i$i758 = 1073741823;
          $5972 = $1493 >> 2;
          $5973 = $1493;
          label = 425;
         }
         if ((label | 0) == 425) {
          label = 0;
          $$0$i8$i$i759 = $$0$i7$i$i758;
          $1505 = __Znwj($$0$i7$i$i758 << 2) | 0;
          $1506 = $5972;
          $1510 = $5973;
         }
         $1504 = $1505 + ($1506 << 2) | 0;
         if ($1504) HEAP32[$1504 >> 2] = $1369;
         _memcpy($1505 | 0, $1487 | 0, $1510 | 0) | 0;
         HEAP32[$1290 >> 2] = $1505;
         HEAP32[$1291 >> 2] = $1505 + ($1506 + 1 << 2);
         HEAP32[$1292 >> 2] = $1505 + ($$0$i8$i$i759 << 2);
         if ($1487) __ZdlPv($1487);
        } else {
         if (!$1474) $1479 = 0; else {
          HEAP32[$1474 >> 2] = $1369;
          $1479 = HEAP32[$1291 >> 2] | 0;
         }
         HEAP32[$1291 >> 2] = $1479 + 4;
        }
        $1512 = $i$04273 + 1 | 0;
        $1514 = HEAP32[$1276 >> 2] | 0;
        if ($1512 >>> 0 >= (HEAP32[$1274 >> 2] | 0) - $1514 >> 2 >>> 0) break;
        $$idx1$val$i693 = HEAP32[$$idx1$i >> 2] | 0;
        $$idx2$val$i698 = HEAP32[$$idx$i >> 2] | 0;
        $1355 = $1514;
        $i$04273 = $1512;
       }
       $__x$idx1$i$pre$phiZZZ2D = $1291;
      }
      HEAP32[$args >> 2] = 0;
      HEAP32[$241 >> 2] = 0;
      HEAP32[$242 >> 2] = 0;
      $__x$idx$i = $$idx$val$i910$lcssa6275 + -40 | 0;
      $1522 = (HEAP32[$__x$idx1$i$pre$phiZZZ2D >> 2] | 0) - (HEAP32[$__x$idx$i >> 2] | 0) | 0;
      $1523 = $1522 >> 2;
      if ($1523) {
       if ($1523 >>> 0 > 1073741823) {
        __THREW__ = 0;
        invoke_vi(182, $args | 0);
        $1526 = __THREW__;
        __THREW__ = 0;
        if ($1526 & 1) {
         label = 440;
         break L1;
        }
       }
       __THREW__ = 0;
       $1528 = invoke_ii(67, $1522 | 0) | 0;
       $1529 = __THREW__;
       __THREW__ = 0;
       if ($1529 & 1) {
        label = 440;
        break L1;
       }
       HEAP32[$241 >> 2] = $1528;
       HEAP32[$args >> 2] = $1528;
       HEAP32[$242 >> 2] = $1528 + ($1523 << 2);
       $1532 = HEAP32[$__x$idx$i >> 2] | 0;
       $1533 = HEAP32[$__x$idx1$i$pre$phiZZZ2D >> 2] | 0;
       if (($1532 | 0) != ($1533 | 0)) {
        $$01$i$i = $1532;
        $1535 = $1528;
        do {
         HEAP32[$1535 >> 2] = HEAP32[$$01$i$i >> 2];
         $1535 = (HEAP32[$241 >> 2] | 0) + 4 | 0;
         HEAP32[$241 >> 2] = $1535;
         $$01$i$i = $$01$i$i + 4 | 0;
        } while (($$01$i$i | 0) != ($1533 | 0));
       }
      }
      __ZN12_GLOBAL__N_15Stack3popEv($195);
      $1550 = $1273 + 40 | 0;
      if (!(HEAP32[$1550 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_viii(13, $195 | 0, 5, HEAP32[$1252 >> 2] | 0);
       $1554 = __THREW__;
       __THREW__ = 0;
       if ($1554 & 1) {
        label = 475;
        break L1;
       }
       $$idx$val$i769 = HEAP32[$$idx1$i >> 2] | 0;
       $1556 = $$idx$val$i769 + -40 | 0;
       do if (($1556 | 0) != ($args | 0)) {
        $1558 = HEAP32[$args >> 2] | 0;
        $1559 = HEAP32[$241 >> 2] | 0;
        $1562 = $1559 - $1558 | 0;
        $1563 = $1562 >> 2;
        $$idx$val$i$i$i770 = HEAP32[$1556 >> 2] | 0;
        $$idx1$i$i$i = $$idx$val$i769 + -32 | 0;
        $$idx1$val$i$i$i771 = HEAP32[$$idx1$i$i$i >> 2] | 0;
        $1565 = $$idx$val$i$i$i770;
        if ($1563 >>> 0 <= $$idx1$val$i$i$i771 - $1565 >> 2 >>> 0) {
         $this$idx3$i$i = $$idx$val$i769 + -36 | 0;
         $1570 = (HEAP32[$this$idx3$i$i >> 2] | 0) - $1565 | 0;
         $1571 = $1570 >> 2;
         if ($1563 >>> 0 <= $1571 >>> 0) {
          _memmove($$idx$val$i$i$i770 | 0, $1558 | 0, $1562 | 0) | 0;
          $1581 = $$idx$val$i$i$i770 + ($1563 << 2) | 0;
          $1582 = HEAP32[$this$idx3$i$i >> 2] | 0;
          if (($1582 | 0) == ($1581 | 0)) break;
          HEAP32[$this$idx3$i$i >> 2] = $1582 + (~(($1582 + -4 - $1581 | 0) >>> 2) << 2);
          break;
         }
         $1573 = $1558 + ($1571 << 2) | 0;
         _memmove($$idx$val$i$i$i770 | 0, $1558 | 0, $1570 | 0) | 0;
         if (($1573 | 0) == ($1559 | 0)) break;
         $$01$i6$i$i = $1573;
         $1575 = HEAP32[$this$idx3$i$i >> 2] | 0;
         do {
          if (!$1575) $1578 = 0; else {
           HEAP32[$1575 >> 2] = HEAP32[$$01$i6$i$i >> 2];
           $1578 = HEAP32[$this$idx3$i$i >> 2] | 0;
          }
          $1575 = $1578 + 4 | 0;
          HEAP32[$this$idx3$i$i >> 2] = $1575;
          $$01$i6$i$i = $$01$i6$i$i + 4 | 0;
         } while (($$01$i6$i$i | 0) != ($1559 | 0));
         break;
        }
        if (!$$idx$val$i$i$i770) $$idx1$val$i$i17$i$i = $$idx1$val$i$i$i771; else {
         $1589 = $$idx$val$i769 + -36 | 0;
         $1590 = HEAP32[$1589 >> 2] | 0;
         if (($1590 | 0) != ($$idx$val$i$i$i770 | 0)) HEAP32[$1589 >> 2] = $1590 + (~(($1590 + -4 - $1565 | 0) >>> 2) << 2);
         __ZdlPv($$idx$val$i$i$i770);
         HEAP32[$$idx1$i$i$i >> 2] = 0;
         HEAP32[$1589 >> 2] = 0;
         HEAP32[$1556 >> 2] = 0;
         $$idx1$val$i$i17$i$i = 0;
        }
        if ($1563 >>> 0 > 1073741823) {
         __THREW__ = 0;
         invoke_vi(182, $1556 | 0);
         $1597 = __THREW__;
         __THREW__ = 0;
         if ($1597 & 1) {
          label = 475;
          break L1;
         }
         $$idx$val$i$i$i$i778 = HEAP32[$1556 >> 2] | 0;
         $$idx1$val$i$i$i$i777 = HEAP32[$$idx1$i$i$i >> 2] | 0;
        } else {
         $$idx$val$i$i$i$i778 = 0;
         $$idx1$val$i$i$i$i777 = $$idx1$val$i$i17$i$i;
        }
        $1600 = $$idx1$val$i$i$i$i777 - $$idx$val$i$i$i$i778 | 0;
        if ($1600 >> 2 >>> 0 < 536870911) {
         $1603 = $1600 >> 1;
         $1605 = $1603 >>> 0 < $1563 >>> 0 ? $1563 : $1603;
         if ($1605 >>> 0 > 1073741823) {
          __THREW__ = 0;
          invoke_vi(182, $1556 | 0);
          $1607 = __THREW__;
          __THREW__ = 0;
          if ($1607 & 1) {
           label = 475;
           break L1;
          } else $$0$i12$i$i = $1605;
         } else $$0$i12$i$i = $1605;
        } else $$0$i12$i$i = 1073741823;
        __THREW__ = 0;
        $1610 = invoke_ii(67, $$0$i12$i$i << 2 | 0) | 0;
        $1611 = __THREW__;
        __THREW__ = 0;
        if ($1611 & 1) {
         label = 475;
         break L1;
        }
        $1613 = $$idx$val$i769 + -36 | 0;
        HEAP32[$1613 >> 2] = $1610;
        HEAP32[$1556 >> 2] = $1610;
        HEAP32[$$idx1$i$i$i >> 2] = $1610 + ($$0$i12$i$i << 2);
        if (($1558 | 0) != ($1559 | 0)) {
         $$01$i$i$i780 = $1558;
         $1616 = $1610;
         do {
          HEAP32[$1616 >> 2] = HEAP32[$$01$i$i$i780 >> 2];
          $1616 = (HEAP32[$1613 >> 2] | 0) + 4 | 0;
          HEAP32[$1613 >> 2] = $1616;
          $$01$i$i$i780 = $$01$i$i$i780 + 4 | 0;
         } while (($$01$i$i$i780 | 0) != ($1559 | 0));
        }
       } while (0);
       $1620 = (HEAP32[$$idx1$i >> 2] | 0) + -104 | 0;
       HEAP32[$1620 + 0 >> 2] = HEAP32[$201 + 0 >> 2];
       HEAP32[$1620 + 4 >> 2] = HEAP32[$201 + 4 >> 2];
       HEAP32[$1620 + 8 >> 2] = HEAP32[$201 + 8 >> 2];
       HEAP32[$1620 + 12 >> 2] = HEAP32[$201 + 12 >> 2];
       $$1137 = 16;
       $$313 = $$111$ph4280;
      } else {
       HEAP32[$243 >> 2] = 0;
       HEAP32[$244 >> 2] = 0;
       HEAP32[$bindings >> 2] = $245;
       $$idx$val$i$i787 = HEAP32[$1273 + 8 >> 2] | 0;
       $1623 = $1273 + 12 | 0;
       if (($$idx$val$i$i787 | 0) != ($1623 | 0)) {
        $1629 = $$idx$val$i$i787;
        $5974 = $$idx$val$i$i787;
        while (1) {
         __THREW__ = 0;
         $1625 = invoke_ii(67, 24) | 0;
         $1626 = __THREW__;
         __THREW__ = 0;
         if ($1626 & 1) {
          label = 516;
          break L1;
         }
         $1631 = $1629 + 16 | 0;
         $1633 = HEAP32[$1631 >> 2] | 0;
         $1636 = HEAP32[$1631 + 4 >> 2] | 0;
         $1637 = $1625 + 16 | 0;
         HEAP32[$1637 >> 2] = $1633;
         HEAP32[$1637 + 4 >> 2] = $1636;
         $1641 = $1633;
         $$pre$i$i$i$i$i$i792 = HEAP32[$245 >> 2] | 0;
         do if ((HEAP32[$bindings >> 2] | 0) == ($245 | 0)) {
          $1662 = $245;
          label = 489;
         } else {
          $1643 = ($$pre$i$i$i$i$i$i792 | 0) == 0;
          if ($1643) {
           $$0$i$i$i$i$i$i$i$i796 = $245;
           while (1) {
            $1648 = HEAP32[$$0$i$i$i$i$i$i$i$i796 + 8 >> 2] | 0;
            if ((HEAP32[$1648 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i796 | 0)) $$0$i$i$i$i$i$i$i$i796 = $1648; else {
             $$cast$i$i$i$i$i$i$i$i797$lcssa = $1648;
             break;
            }
           }
           $$01$i$i$i$i$i$i$i$i799 = $$cast$i$i$i$i$i$i$i$i797$lcssa;
          } else {
           $$0$i$i$i$i$i$i$i$i$i794 = $$pre$i$i$i$i$i$i792;
           while (1) {
            $1645 = HEAP32[$$0$i$i$i$i$i$i$i$i$i794 + 4 >> 2] | 0;
            if (!$1645) {
             $$0$i$i$i$i$i$i$i$i$i794$lcssa = $$0$i$i$i$i$i$i$i$i$i794;
             break;
            } else $$0$i$i$i$i$i$i$i$i$i794 = $1645;
           }
           $$01$i$i$i$i$i$i$i$i799 = $$0$i$i$i$i$i$i$i$i$i794$lcssa;
          }
          if ((HEAP32[$$01$i$i$i$i$i$i$i$i799 + 16 >> 2] | 0) >>> 0 < $1641 >>> 0) {
           $1662 = $$01$i$i$i$i$i$i$i$i799;
           label = 489;
          } else if ($1643) {
           $$0$i$i$i$i119$i$i810 = $245;
           $1666 = $245;
           label = 499;
          } else {
           $__nd$0$i20$i$i$i$i$in$i$i804 = $$pre$i$i$i$i$i$i792;
           while (1) {
            $$idx2$val$i22$i$i$i$i$i$i806 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i804 + 16 >> 2] | 0;
            if ($$idx2$val$i22$i$i$i$i$i$i806 >>> 0 > $1641 >>> 0) {
             $1655 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i804 >> 2] | 0;
             if (!$1655) {
              $$0$i$i$i$i119$i$i810$ph = $__nd$0$i20$i$i$i$i$in$i$i804;
              $__nd$0$i20$i$i$i$i$in$i$i804$lcssa6372 = $__nd$0$i20$i$i$i$i$in$i$i804;
              label = 498;
              break;
             } else $__nd$0$i20$i$i$i$i$in$i$i804$be = $1655;
            } else {
             if ($$idx2$val$i22$i$i$i$i$i$i806 >>> 0 >= $1641 >>> 0) {
              $__nd$0$i20$i$i$i$i$in$i$i804$lcssa = $__nd$0$i20$i$i$i$i$in$i$i804;
              label = 502;
              break;
             }
             $1658 = $__nd$0$i20$i$i$i$i$in$i$i804 + 4 | 0;
             $1659 = HEAP32[$1658 >> 2] | 0;
             if (!$1659) {
              $$0$i$i$i$i119$i$i810$ph = $1658;
              $__nd$0$i20$i$i$i$i$in$i$i804$lcssa6372 = $__nd$0$i20$i$i$i$i$in$i$i804;
              label = 498;
              break;
             } else $__nd$0$i20$i$i$i$i$in$i$i804$be = $1659;
            }
            $__nd$0$i20$i$i$i$i$in$i$i804 = $__nd$0$i20$i$i$i$i$in$i$i804$be;
           }
           if ((label | 0) == 498) {
            label = 0;
            $$0$i$i$i$i119$i$i810 = $$0$i$i$i$i119$i$i810$ph;
            $1666 = $__nd$0$i20$i$i$i$i$in$i$i804$lcssa6372;
            label = 499;
            break;
           } else if ((label | 0) == 502) {
            label = 0;
            $1674 = $__nd$0$i20$i$i$i$i$in$i$i804$lcssa;
            label = 503;
            break;
           }
          }
         } while (0);
         if ((label | 0) == 489) {
          label = 0;
          if (!$$pre$i$i$i$i$i$i792) {
           $$0$i$i$i$i119$i$i810 = $245;
           $1666 = $245;
           label = 499;
          } else {
           $1661 = $1662 + 4 | 0;
           $$pre$i$i808 = HEAP32[$1661 >> 2] | 0;
           if (!$$pre$i$i808) {
            $$0$i$i$i$i119$i$i810 = $1661;
            $1666 = $1662;
            label = 499;
           } else {
            $1674 = $$pre$i$i808;
            label = 503;
           }
          }
         }
         if ((label | 0) == 499) {
          label = 0;
          HEAP32[$1625 >> 2] = 0;
          HEAP32[$1625 + 4 >> 2] = 0;
          HEAP32[$1625 + 8 >> 2] = $1666;
          HEAP32[$$0$i$i$i$i119$i$i810 >> 2] = $1625;
          $1668 = HEAP32[HEAP32[$bindings >> 2] >> 2] | 0;
          if (!$1668) $1671 = $1625; else {
           HEAP32[$bindings >> 2] = $1668;
           $1671 = HEAP32[$$0$i$i$i$i119$i$i810 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$243 >> 2] | 0, $1671);
          HEAP32[$244 >> 2] = (HEAP32[$244 >> 2] | 0) + 1;
          $1677 = $1629;
         } else if ((label | 0) == 503) {
          label = 0;
          if (($1674 | 0) == ($1625 | 0)) $1677 = $5974; else {
           __ZdlPv($1625);
           $1677 = $5974;
          }
         }
         $1678 = HEAP32[$1677 + 4 >> 2] | 0;
         if (!$1678) {
          $$0$i$i$i$i$i819 = $1677;
          while (1) {
           $1683 = HEAP32[$$0$i$i$i$i$i819 + 8 >> 2] | 0;
           if ((HEAP32[$1683 >> 2] | 0) == ($$0$i$i$i$i$i819 | 0)) {
            $$cast$i$i$i$i$i820$lcssa = $1683;
            break;
           } else $$0$i$i$i$i$i819 = $1683;
          }
          $$01$i$i$i$i$i822 = $$cast$i$i$i$i$i820$lcssa;
         } else {
          $$0$i$i$i$i$i$i817 = $1678;
          while (1) {
           $1680 = HEAP32[$$0$i$i$i$i$i$i817 >> 2] | 0;
           if (!$1680) {
            $$0$i$i$i$i$i$i817$lcssa = $$0$i$i$i$i$i$i817;
            break;
           } else $$0$i$i$i$i$i$i817 = $1680;
          }
          $$01$i$i$i$i$i822 = $$0$i$i$i$i$i$i817$lcssa;
         }
         if (($$01$i$i$i$i$i822 | 0) == ($1623 | 0)) break; else {
          $1629 = $$01$i$i$i$i$i822;
          $5974 = $$01$i$i$i$i$i822;
         }
        }
       }
       $1688 = HEAP32[$1283 >> 2] | 0;
       if ((HEAP32[$1281 >> 2] | 0) != ($1688 | 0)) {
        $1696 = $1688;
        $i41$04276 = 0;
        do {
         $1694 = HEAP32[(HEAP32[$args >> 2] | 0) + ($i41$04276 << 2) >> 2] | 0;
         $__k$val$i828 = HEAP32[$1696 + ($i41$04276 << 2) >> 2] | 0;
         $1697 = HEAP32[$245 >> 2] | 0;
         do if (!$1697) {
          HEAP32[$__parent$i827 >> 2] = $245;
          $$0$i7$i836 = $245;
          $1716 = $245;
          label = 528;
         } else {
          $__nd$0$i$i829 = $1697;
          while (1) {
           $1700 = HEAP32[$__nd$0$i$i829 + 16 >> 2] | 0;
           if ($1700 >>> 0 > $__k$val$i828 >>> 0) {
            $1702 = HEAP32[$__nd$0$i$i829 >> 2] | 0;
            if (!$1702) {
             $$lcssa6376 = $__nd$0$i$i829;
             $__nd$0$i$i829$lcssa6374 = $__nd$0$i$i829;
             label = 521;
             break;
            } else $__nd$0$be$in$i$i831 = $1702;
           } else {
            if ($1700 >>> 0 >= $__k$val$i828 >>> 0) {
             $__nd$0$i$i829$lcssa = $__nd$0$i$i829;
             label = 527;
             break;
            }
            $1705 = $__nd$0$i$i829 + 4 | 0;
            $1706 = HEAP32[$1705 >> 2] | 0;
            if (!$1706) {
             $$lcssa6375 = $1705;
             $__nd$0$i$i829$lcssa6373 = $__nd$0$i$i829;
             label = 525;
             break;
            } else $__nd$0$be$in$i$i831 = $1706;
           }
           $__nd$0$i$i829 = $__nd$0$be$in$i$i831;
          }
          if ((label | 0) == 521) {
           label = 0;
           HEAP32[$__parent$i827 >> 2] = $__nd$0$i$i829$lcssa6374;
           $$0$i7$i836 = $$lcssa6376;
           $1716 = $__nd$0$i$i829$lcssa6374;
           label = 528;
           break;
          } else if ((label | 0) == 525) {
           label = 0;
           HEAP32[$__parent$i827 >> 2] = $__nd$0$i$i829$lcssa6373;
           $$0$i7$i836 = $$lcssa6375;
           $1716 = $__nd$0$i$i829$lcssa6373;
           label = 528;
           break;
          } else if ((label | 0) == 527) {
           label = 0;
           HEAP32[$__parent$i827 >> 2] = $__nd$0$i$i829$lcssa;
           if (!$__nd$0$i$i829$lcssa) {
            $$0$i7$i836 = $__parent$i827;
            $1716 = 0;
            label = 528;
            break;
           } else {
            $__r$0$i840 = $__nd$0$i$i829$lcssa;
            break;
           }
          }
         } while (0);
         if ((label | 0) == 528) {
          label = 0;
          __THREW__ = 0;
          $1709 = invoke_ii(67, 24) | 0;
          $1710 = __THREW__;
          __THREW__ = 0;
          if ($1710 & 1) {
           $$lcssa6377 = $1697;
           label = 533;
           break L1;
          }
          HEAP32[$1709 + 16 >> 2] = $__k$val$i828;
          HEAP32[$1709 + 20 >> 2] = 0;
          HEAP32[$1709 >> 2] = 0;
          HEAP32[$1709 + 4 >> 2] = 0;
          HEAP32[$1709 + 8 >> 2] = $1716;
          HEAP32[$$0$i7$i836 >> 2] = $1709;
          $1718 = HEAP32[HEAP32[$bindings >> 2] >> 2] | 0;
          if (!$1718) $1721 = $1709; else {
           HEAP32[$bindings >> 2] = $1718;
           $1721 = HEAP32[$$0$i7$i836 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$243 >> 2] | 0, $1721);
          HEAP32[$244 >> 2] = (HEAP32[$244 >> 2] | 0) + 1;
          $__r$0$i840 = $1709;
         }
         HEAP32[$__r$0$i840 + 20 >> 2] = $1694;
         $i41$04276 = $i41$04276 + 1 | 0;
         $1696 = HEAP32[$1283 >> 2] | 0;
        } while ($i41$04276 >>> 0 < (HEAP32[$1281 >> 2] | 0) - $1696 >> 2 >>> 0);
       }
       __THREW__ = 0;
       invoke_viiiiii(19, $195 | 0, $1253 + 4 | 0, $1273 | 0, HEAP32[$1273 + 20 >> 2] | 0, HEAP32[$1273 + 24 >> 2] | 0, $bindings | 0);
       $1743 = __THREW__;
       __THREW__ = 0;
       if ($1743 & 1) {
        label = 534;
        break L1;
       }
       if (!(HEAP8[$1253 + 64 >> 0] | 0)) {
        $$0136 = 2;
        $$212 = HEAP32[$1550 >> 2] | 0;
       } else {
        $$idx$val$i844 = HEAP32[$$idx1$i >> 2] | 0;
        $1748 = $$idx$val$i844 + -40 | 0;
        do if (($1748 | 0) != ($args | 0)) {
         $1750 = HEAP32[$args >> 2] | 0;
         $1751 = HEAP32[$241 >> 2] | 0;
         $1754 = $1751 - $1750 | 0;
         $1755 = $1754 >> 2;
         $$idx$val$i$i$i846 = HEAP32[$1748 >> 2] | 0;
         $$idx1$i$i$i847 = $$idx$val$i844 + -32 | 0;
         $$idx1$val$i$i$i848 = HEAP32[$$idx1$i$i$i847 >> 2] | 0;
         $1757 = $$idx$val$i$i$i846;
         if ($1755 >>> 0 <= $$idx1$val$i$i$i848 - $1757 >> 2 >>> 0) {
          $this$idx3$i$i849 = $$idx$val$i844 + -36 | 0;
          $1762 = (HEAP32[$this$idx3$i$i849 >> 2] | 0) - $1757 | 0;
          $1763 = $1762 >> 2;
          if ($1755 >>> 0 <= $1763 >>> 0) {
           _memmove($$idx$val$i$i$i846 | 0, $1750 | 0, $1754 | 0) | 0;
           $1773 = $$idx$val$i$i$i846 + ($1755 << 2) | 0;
           $1774 = HEAP32[$this$idx3$i$i849 >> 2] | 0;
           if (($1774 | 0) == ($1773 | 0)) break;
           HEAP32[$this$idx3$i$i849 >> 2] = $1774 + (~(($1774 + -4 - $1773 | 0) >>> 2) << 2);
           break;
          }
          $1765 = $1750 + ($1763 << 2) | 0;
          _memmove($$idx$val$i$i$i846 | 0, $1750 | 0, $1762 | 0) | 0;
          if (($1765 | 0) == ($1751 | 0)) break;
          $$01$i6$i$i853 = $1765;
          $1767 = HEAP32[$this$idx3$i$i849 >> 2] | 0;
          do {
           if (!$1767) $1770 = 0; else {
            HEAP32[$1767 >> 2] = HEAP32[$$01$i6$i$i853 >> 2];
            $1770 = HEAP32[$this$idx3$i$i849 >> 2] | 0;
           }
           $1767 = $1770 + 4 | 0;
           HEAP32[$this$idx3$i$i849 >> 2] = $1767;
           $$01$i6$i$i853 = $$01$i6$i$i853 + 4 | 0;
          } while (($$01$i6$i$i853 | 0) != ($1751 | 0));
          break;
         }
         if (!$$idx$val$i$i$i846) $$idx1$val$i$i17$i$i865 = $$idx1$val$i$i$i848; else {
          $1781 = $$idx$val$i844 + -36 | 0;
          $1782 = HEAP32[$1781 >> 2] | 0;
          if (($1782 | 0) != ($$idx$val$i$i$i846 | 0)) HEAP32[$1781 >> 2] = $1782 + (~(($1782 + -4 - $1757 | 0) >>> 2) << 2);
          __ZdlPv($$idx$val$i$i$i846);
          HEAP32[$$idx1$i$i$i847 >> 2] = 0;
          HEAP32[$1781 >> 2] = 0;
          HEAP32[$1748 >> 2] = 0;
          $$idx1$val$i$i17$i$i865 = 0;
         }
         if ($1755 >>> 0 > 1073741823) {
          __THREW__ = 0;
          invoke_vi(182, $1748 | 0);
          $1789 = __THREW__;
          __THREW__ = 0;
          if ($1789 & 1) {
           label = 534;
           break L1;
          }
          $$idx$val$i$i$i$i871 = HEAP32[$1748 >> 2] | 0;
          $$idx1$val$i$i$i$i870 = HEAP32[$$idx1$i$i$i847 >> 2] | 0;
         } else {
          $$idx$val$i$i$i$i871 = 0;
          $$idx1$val$i$i$i$i870 = $$idx1$val$i$i17$i$i865;
         }
         $1792 = $$idx1$val$i$i$i$i870 - $$idx$val$i$i$i$i871 | 0;
         do if ($1792 >> 2 >>> 0 < 536870911) {
          $1795 = $1792 >> 1;
          $1797 = $1795 >>> 0 < $1755 >>> 0 ? $1755 : $1795;
          if ($1797 >>> 0 <= 1073741823) {
           $$0$i12$i$i873 = $1797;
           break;
          }
          __THREW__ = 0;
          invoke_vi(182, $1748 | 0);
          $1799 = __THREW__;
          __THREW__ = 0;
          if ($1799 & 1) {
           label = 534;
           break L1;
          } else $$0$i12$i$i873 = $1797;
         } else $$0$i12$i$i873 = 1073741823; while (0);
         __THREW__ = 0;
         $1802 = invoke_ii(67, $$0$i12$i$i873 << 2 | 0) | 0;
         $1803 = __THREW__;
         __THREW__ = 0;
         if ($1803 & 1) {
          label = 534;
          break L1;
         }
         $1805 = $$idx$val$i844 + -36 | 0;
         HEAP32[$1805 >> 2] = $1802;
         HEAP32[$1748 >> 2] = $1802;
         HEAP32[$$idx1$i$i$i847 >> 2] = $1802 + ($$0$i12$i$i873 << 2);
         if (($1750 | 0) == ($1751 | 0)) break;
         $$01$i$i$i875 = $1750;
         $1808 = $1802;
         do {
          HEAP32[$1808 >> 2] = HEAP32[$$01$i$i$i875 >> 2];
          $1808 = (HEAP32[$1805 >> 2] | 0) + 4 | 0;
          HEAP32[$1805 >> 2] = $1808;
          $$01$i$i$i875 = $$01$i$i$i875 + 4 | 0;
         } while (($$01$i$i$i875 | 0) != ($1751 | 0));
        } while (0);
        $1812 = (HEAP32[$$idx1$i >> 2] | 0) + -104 | 0;
        HEAP32[$1812 + 0 >> 2] = HEAP32[$201 + 0 >> 2];
        HEAP32[$1812 + 4 >> 2] = HEAP32[$201 + 4 >> 2];
        HEAP32[$1812 + 8 >> 2] = HEAP32[$201 + 8 >> 2];
        HEAP32[$1812 + 12 >> 2] = HEAP32[$201 + 12 >> 2];
        HEAP8[(HEAP32[$$idx1$i >> 2] | 0) + -108 >> 0] = 1;
        $$0136 = 16;
        $$212 = $$111$ph4280;
       }
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings, HEAP32[$245 >> 2] | 0);
       $$1137 = $$0136;
       $$313 = $$212;
      }
      $1816 = HEAP32[$args >> 2] | 0;
      $1818 = $1816;
      if ($1816) {
       $1819 = HEAP32[$241 >> 2] | 0;
       if (($1819 | 0) != ($1816 | 0)) HEAP32[$241 >> 2] = $1819 + (~(($1819 + -4 - $1818 | 0) >>> 2) << 2);
       __ZdlPv($1816);
      }
      if (($$1137 | 0) == 16) $$111$ph$be = $$313; else {
       $$010$ph = $$313;
       label = 2;
       break L428;
      }
      break;
     }
    case 577:
     {
      label = 0;
      $1835 = HEAP32[$$idx$val$i910$lcssa6276 + -140 >> 2] | 0;
      if ((HEAP32[$201 >> 2] | 0) != 1) {
       $$idx$val$i910$lcssa6276$lcssa = $$idx$val$i910$lcssa6276;
       $$lcssa6296$lcssa = $$lcssa6296;
       $$lcssa6830 = $1835;
       label = 583;
       break L428;
      }
      $1839 = HEAP32[$1835 + 52 >> 2] | 0;
      if (($1839 | 0) == 15) {
       if (HEAP8[$202 >> 0] | 0) {
        $$idx$val$i910$lcssa6276$lcssa = $$idx$val$i910$lcssa6276;
        $$lcssa6296$lcssa = $$lcssa6296;
        $$lcssa6830 = $1835;
        label = 583;
        break L428;
       }
       HEAP32[$211 >> 2] = 1;
       HEAP8[$202 >> 0] = 0;
       HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32792 + 0 >> 0] | 0;
       HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32792 + 1 >> 0] | 0;
       HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32792 + 2 >> 0] | 0;
       HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32792 + 3 >> 0] | 0;
       HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32792 + 4 >> 0] | 0;
       HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32792 + 5 >> 0] | 0;
       HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32792 + 6 >> 0] | 0;
       $$515 = $$111$ph4280;
       label = 2344;
       break;
      } else if (($1839 | 0) == 16) {
       if (!(HEAP8[$202 >> 0] | 0)) {
        $$idx$val$i910$lcssa6276$lcssa = $$idx$val$i910$lcssa6276;
        $$lcssa6296$lcssa = $$lcssa6296;
        $$lcssa6830 = $1835;
        label = 583;
        break L428;
       }
       HEAP32[$211 >> 2] = 1;
       HEAP8[$202 >> 0] = 1;
       HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32788 + 0 >> 0] | 0;
       HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32788 + 1 >> 0] | 0;
       HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32788 + 2 >> 0] | 0;
       HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32788 + 3 >> 0] | 0;
       HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32788 + 4 >> 0] | 0;
       HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32788 + 5 >> 0] | 0;
       HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32788 + 6 >> 0] | 0;
       $$515 = $$111$ph4280;
       label = 2344;
       break;
      } else {
       $$idx$val$i910$lcssa6276$lcssa = $$idx$val$i910$lcssa6276;
       $$lcssa6296$lcssa = $$lcssa6296;
       $$lcssa6830 = $1835;
       label = 583;
       break L428;
      }
      break;
     }
    case 596:
     {
      label = 0;
      if (($$lcssa6320 | 0) != (HEAP32[$201 >> 2] | 0)) {
       $$lcssa6314$lcssa = $$lcssa6314;
       $$lcssa6317$lcssa = $$lcssa6317;
       $$lcssa6325$lcssa = $$lcssa6325;
       label = 597;
       break L1;
      }
      switch ($$lcssa6320 | 0) {
      case 16:
       {
        if (($$lcssa6323 | 0) != 2) {
         $$lcssa6314$lcssa6826 = $$lcssa6314;
         $$lcssa6325$lcssa6800 = $$lcssa6325;
         label = 687;
         break L1;
        }
        $1959 = HEAP32[$$idx$val$i910$lcssa6291 + -96 >> 2] | 0;
        $1960 = HEAP32[$202 >> 2] | 0;
        HEAP32[$elements45 >> 2] = 0;
        HEAP32[$249 >> 2] = 0;
        HEAP32[$250 >> 2] = 0;
        $$idx271$val = HEAP32[$1959 + 8 >> 2] | 0;
        $$idx274$val = HEAP32[$1959 + 12 >> 2] | 0;
        if (($$idx271$val | 0) != ($$idx274$val | 0)) {
         $1963 = $$idx271$val;
         $1964 = 0;
         $1966 = 0;
         while (1) {
          $1962 = HEAP32[$1963 >> 2] | 0;
          if (($1964 | 0) == ($1966 | 0)) {
           $this$idx2$val$i$i935 = HEAP32[$elements45 >> 2] | 0;
           $1974 = ($1966 - $this$idx2$val$i$i935 >> 2) + 1 | 0;
           if ($1974 >>> 0 > 1073741823) {
            __THREW__ = 0;
            invoke_vi(182, $elements45 | 0);
            $1976 = __THREW__;
            __THREW__ = 0;
            if ($1976 & 1) {
             label = 655;
             break L1;
            }
            $$idx1$val$i$i$i$i938 = HEAP32[$250 >> 2] | 0;
            $1979 = HEAP32[$elements45 >> 2] | 0;
           } else {
            $$idx1$val$i$i$i$i938 = $1966;
            $1979 = $this$idx2$val$i$i935;
           }
           $1980 = $1979;
           $1981 = $$idx1$val$i$i$i$i938 - $1980 | 0;
           if ($1981 >> 2 >>> 0 < 536870911) {
            $1987 = $1981 >> 1;
            $1989 = $1987 >>> 0 < $1974 >>> 0 ? $1974 : $1987;
            $1991 = (HEAP32[$249 >> 2] | 0) - $1980 | 0;
            $1992 = $1991 >> 2;
            if (!$1989) {
             $$0$i8$i$i944 = 0;
             $1999 = 0;
             $2000 = $1992;
             $2004 = $1991;
            } else {
             $$0$i7$i$i943 = $1989;
             $5976 = $1992;
             $5977 = $1991;
             label = 646;
            }
           } else {
            $1985 = (HEAP32[$249 >> 2] | 0) - $1980 | 0;
            $$0$i7$i$i943 = 1073741823;
            $5976 = $1985 >> 2;
            $5977 = $1985;
            label = 646;
           }
           if ((label | 0) == 646) {
            label = 0;
            __THREW__ = 0;
            $1995 = invoke_ii(67, $$0$i7$i$i943 << 2 | 0) | 0;
            $1996 = __THREW__;
            __THREW__ = 0;
            if ($1996 & 1) {
             label = 655;
             break L1;
            }
            $$0$i8$i$i944 = $$0$i7$i$i943;
            $1999 = $1995;
            $2000 = $5976;
            $2004 = $5977;
           }
           $1998 = $1999 + ($2000 << 2) | 0;
           if ($1998) HEAP32[$1998 >> 2] = $1962;
           _memcpy($1999 | 0, $1979 | 0, $2004 | 0) | 0;
           HEAP32[$elements45 >> 2] = $1999;
           HEAP32[$249 >> 2] = $1999 + ($2000 + 1 << 2);
           HEAP32[$250 >> 2] = $1999 + ($$0$i8$i$i944 << 2);
           if ($1979) __ZdlPv($1979);
          } else {
           if (!$1964) $1969 = 0; else {
            HEAP32[$1964 >> 2] = $1962;
            $1969 = HEAP32[$249 >> 2] | 0;
           }
           HEAP32[$249 >> 2] = $1969 + 4;
          }
          $2006 = $1963 + 4 | 0;
          if (($2006 | 0) == ($$idx274$val | 0)) break;
          $1963 = $2006;
          $1964 = HEAP32[$249 >> 2] | 0;
          $1966 = HEAP32[$250 >> 2] | 0;
         }
        }
        $$idx270$val = HEAP32[$1960 + 8 >> 2] | 0;
        $$idx273$val = HEAP32[$1960 + 12 >> 2] | 0;
        if (($$idx270$val | 0) != ($$idx273$val | 0)) {
         $2025 = $$idx270$val;
         do {
          $2024 = HEAP32[$2025 >> 2] | 0;
          $2026 = HEAP32[$249 >> 2] | 0;
          if (($2026 | 0) == (HEAP32[$250 >> 2] | 0)) {
           $this$idx2$val$i$i961 = HEAP32[$elements45 >> 2] | 0;
           $2036 = ($2026 - $this$idx2$val$i$i961 >> 2) + 1 | 0;
           if ($2036 >>> 0 > 1073741823) {
            __THREW__ = 0;
            invoke_vi(182, $elements45 | 0);
            $2038 = __THREW__;
            __THREW__ = 0;
            if ($2038 & 1) {
             label = 654;
             break L1;
            }
            $$idx1$val$i$i$i$i964 = HEAP32[$250 >> 2] | 0;
            $2041 = HEAP32[$elements45 >> 2] | 0;
           } else {
            $$idx1$val$i$i$i$i964 = $2026;
            $2041 = $this$idx2$val$i$i961;
           }
           $2042 = $2041;
           $2043 = $$idx1$val$i$i$i$i964 - $2042 | 0;
           if ($2043 >> 2 >>> 0 < 536870911) {
            $2049 = $2043 >> 1;
            $2051 = $2049 >>> 0 < $2036 >>> 0 ? $2036 : $2049;
            $2053 = (HEAP32[$249 >> 2] | 0) - $2042 | 0;
            $2054 = $2053 >> 2;
            if (!$2051) {
             $$0$i8$i$i970 = 0;
             $2061 = 0;
             $2062 = $2054;
             $2066 = $2053;
            } else {
             $$0$i7$i$i969 = $2051;
             $5978 = $2054;
             $5979 = $2053;
             label = 674;
            }
           } else {
            $2047 = (HEAP32[$249 >> 2] | 0) - $2042 | 0;
            $$0$i7$i$i969 = 1073741823;
            $5978 = $2047 >> 2;
            $5979 = $2047;
            label = 674;
           }
           if ((label | 0) == 674) {
            label = 0;
            __THREW__ = 0;
            $2057 = invoke_ii(67, $$0$i7$i$i969 << 2 | 0) | 0;
            $2058 = __THREW__;
            __THREW__ = 0;
            if ($2058 & 1) {
             label = 654;
             break L1;
            }
            $$0$i8$i$i970 = $$0$i7$i$i969;
            $2061 = $2057;
            $2062 = $5978;
            $2066 = $5979;
           }
           $2060 = $2061 + ($2062 << 2) | 0;
           if ($2060) HEAP32[$2060 >> 2] = $2024;
           _memcpy($2061 | 0, $2041 | 0, $2066 | 0) | 0;
           HEAP32[$elements45 >> 2] = $2061;
           HEAP32[$249 >> 2] = $2061 + ($2062 + 1 << 2);
           HEAP32[$250 >> 2] = $2061 + ($$0$i8$i$i970 << 2);
           if ($2041) __ZdlPv($2041);
          } else {
           if (!$2026) $2031 = 0; else {
            HEAP32[$2026 >> 2] = $2024;
            $2031 = HEAP32[$249 >> 2] | 0;
           }
           HEAP32[$249 >> 2] = $2031 + 4;
          }
          $2025 = $2025 + 4 | 0;
         } while (($2025 | 0) != ($$idx273$val | 0));
        }
        __THREW__ = 0;
        invoke_viii(12, $34 | 0, $this | 0, $elements45 | 0);
        $2070 = __THREW__;
        __THREW__ = 0;
        if ($2070 & 1) {
         label = 656;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$34 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$34 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$34 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$34 + 12 >> 2];
        $2072 = HEAP32[$elements45 >> 2] | 0;
        if (!$2072) {
         $$515 = $$111$ph4280;
         label = 2344;
         break L443;
        }
        $2075 = HEAP32[$249 >> 2] | 0;
        if (($2075 | 0) != ($2072 | 0)) HEAP32[$249 >> 2] = $2075 + (~(($2075 + -4 - $2072 | 0) >>> 2) << 2);
        __ZdlPv($2072);
        $$515 = $$111$ph4280;
        label = 2344;
        break L443;
        break;
       }
      case 1:
       {
        if (($$lcssa6323 | 0) == 15) {
         if (!(HEAP8[$$idx$val$i910$lcssa6291 + -96 >> 0] | 0)) $2110 = 0; else $2110 = (HEAP8[$202 >> 0] | 0) != 0;
         HEAP32[$211 >> 2] = 1;
         HEAP8[$202 >> 0] = $2110 & 1;
         HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32784 + 0 >> 0] | 0;
         HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32784 + 1 >> 0] | 0;
         HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32784 + 2 >> 0] | 0;
         HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32784 + 3 >> 0] | 0;
         HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32784 + 4 >> 0] | 0;
         HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32784 + 5 >> 0] | 0;
         HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32784 + 6 >> 0] | 0;
         $$515 = $$111$ph4280;
         label = 2344;
         break L443;
        } else if (($$lcssa6323 | 0) == 16) {
         if (!(HEAP8[$$idx$val$i910$lcssa6291 + -96 >> 0] | 0)) $2117 = (HEAP8[$202 >> 0] | 0) != 0; else $2117 = 1;
         HEAP32[$211 >> 2] = 1;
         HEAP8[$202 >> 0] = $2117 & 1;
         HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32780 + 0 >> 0] | 0;
         HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32780 + 1 >> 0] | 0;
         HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32780 + 2 >> 0] | 0;
         HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32780 + 3 >> 0] | 0;
         HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32780 + 4 >> 0] | 0;
         HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32780 + 5 >> 0] | 0;
         HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32780 + 6 >> 0] | 0;
         $$515 = $$111$ph4280;
         label = 2344;
         break L443;
        } else {
         $$lcssa6314$lcssa6825 = $$lcssa6314;
         $$lcssa6325$lcssa6799 = $$lcssa6325;
         label = 705;
         break L1;
        }
        break;
       }
      case 2:
       {
        do switch ($$lcssa6323 | 0) {
        case 2:
         {
          __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($41, $this, $$lcssa6314 + 4 | 0, +HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] + +HEAPF64[$251 >> 3]);
          HEAP32[$201 + 0 >> 2] = HEAP32[$41 + 0 >> 2];
          HEAP32[$201 + 4 >> 2] = HEAP32[$41 + 4 >> 2];
          HEAP32[$201 + 8 >> 2] = HEAP32[$41 + 8 >> 2];
          HEAP32[$201 + 12 >> 2] = HEAP32[$41 + 12 >> 2];
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 3:
         {
          __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($42, $this, $$lcssa6314 + 4 | 0, +HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] - +HEAPF64[$251 >> 3]);
          HEAP32[$201 + 0 >> 2] = HEAP32[$42 + 0 >> 2];
          HEAP32[$201 + 4 >> 2] = HEAP32[$42 + 4 >> 2];
          HEAP32[$201 + 8 >> 2] = HEAP32[$42 + 8 >> 2];
          HEAP32[$201 + 12 >> 2] = HEAP32[$42 + 12 >> 2];
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 1:
         {
          $2156 = +HEAPF64[$251 >> 3];
          if ($2156 == 0.0) {
           $$lcssa6314$lcssa6824 = $$lcssa6314;
           label = 721;
           break L1;
          }
          __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($45, $this, $$lcssa6314 + 4 | 0, +HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] / $2156);
          HEAP32[$201 + 0 >> 2] = HEAP32[$45 + 0 >> 2];
          HEAP32[$201 + 4 >> 2] = HEAP32[$45 + 4 >> 2];
          HEAP32[$201 + 8 >> 2] = HEAP32[$45 + 8 >> 2];
          HEAP32[$201 + 12 >> 2] = HEAP32[$45 + 12 >> 2];
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 0:
         {
          __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($43, $this, $$lcssa6314 + 4 | 0, +HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] * +HEAPF64[$251 >> 3]);
          HEAP32[$201 + 0 >> 2] = HEAP32[$43 + 0 >> 2];
          HEAP32[$201 + 4 >> 2] = HEAP32[$43 + 4 >> 2];
          HEAP32[$201 + 8 >> 2] = HEAP32[$43 + 8 >> 2];
          HEAP32[$201 + 12 >> 2] = HEAP32[$43 + 12 >> 2];
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 4:
         {
          $2180 = +(~~+HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] << ~~+HEAPF64[$251 >> 3] | 0);
          HEAP32[$211 >> 2] = 2;
          HEAPF64[$251 >> 3] = $2180;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 5:
         {
          $2187 = +(~~+HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] >> ~~+HEAPF64[$251 >> 3] | 0);
          HEAP32[$211 >> 2] = 2;
          HEAPF64[$251 >> 3] = $2187;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 12:
         {
          $2194 = +(~~+HEAPF64[$251 >> 3] & ~~+HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] | 0);
          HEAP32[$211 >> 2] = 2;
          HEAPF64[$251 >> 3] = $2194;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 13:
         {
          $2201 = +(~~+HEAPF64[$251 >> 3] ^ ~~+HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] | 0);
          HEAP32[$211 >> 2] = 2;
          HEAPF64[$251 >> 3] = $2201;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 14:
         {
          $2208 = +(~~+HEAPF64[$251 >> 3] | ~~+HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] | 0);
          HEAP32[$211 >> 2] = 2;
          HEAPF64[$251 >> 3] = $2208;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 9:
         {
          $2213 = +HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] <= +HEAPF64[$251 >> 3] & 1;
          HEAP32[$211 >> 2] = 1;
          HEAP8[$202 >> 0] = $2213;
          HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32761 + 0 >> 0] | 0;
          HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32761 + 1 >> 0] | 0;
          HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32761 + 2 >> 0] | 0;
          HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32761 + 3 >> 0] | 0;
          HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32761 + 4 >> 0] | 0;
          HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32761 + 5 >> 0] | 0;
          HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32761 + 6 >> 0] | 0;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 7:
         {
          $2218 = +HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] >= +HEAPF64[$251 >> 3] & 1;
          HEAP32[$211 >> 2] = 1;
          HEAP8[$202 >> 0] = $2218;
          HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32757 + 0 >> 0] | 0;
          HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32757 + 1 >> 0] | 0;
          HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32757 + 2 >> 0] | 0;
          HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32757 + 3 >> 0] | 0;
          HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32757 + 4 >> 0] | 0;
          HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32757 + 5 >> 0] | 0;
          HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32757 + 6 >> 0] | 0;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 8:
         {
          $2223 = +HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] < +HEAPF64[$251 >> 3] & 1;
          HEAP32[$211 >> 2] = 1;
          HEAP8[$202 >> 0] = $2223;
          HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32753 + 0 >> 0] | 0;
          HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32753 + 1 >> 0] | 0;
          HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32753 + 2 >> 0] | 0;
          HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32753 + 3 >> 0] | 0;
          HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32753 + 4 >> 0] | 0;
          HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32753 + 5 >> 0] | 0;
          HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32753 + 6 >> 0] | 0;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 6:
         {
          $2228 = +HEAPF64[$$idx$val$i910$lcssa6291 + -96 >> 3] > +HEAPF64[$251 >> 3] & 1;
          HEAP32[$211 >> 2] = 1;
          HEAP8[$202 >> 0] = $2228;
          HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32749 + 0 >> 0] | 0;
          HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32749 + 1 >> 0] | 0;
          HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32749 + 2 >> 0] | 0;
          HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32749 + 3 >> 0] | 0;
          HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32749 + 4 >> 0] | 0;
          HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32749 + 5 >> 0] | 0;
          HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32749 + 6 >> 0] | 0;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        default:
         {
          $$lcssa6314$lcssa6823 = $$lcssa6314;
          $$lcssa6325$lcssa6797 = $$lcssa6325;
          label = 737;
          break L1;
         }
        } while (0);
        break;
       }
      case 17:
       {
        $$lcssa6314$lcssa6817 = $$lcssa6314;
        $$lcssa6325$lcssa6791 = $$lcssa6325;
        label = 748;
        break L1;
        break;
       }
      case 0:
       {
        $$lcssa6314$lcssa6818 = $$lcssa6314;
        $$lcssa6325$lcssa6792 = $$lcssa6325;
        label = 759;
        break L1;
        break;
       }
      case 18:
       {
        if (($$lcssa6323 | 0) != 2) {
         $$lcssa6314$lcssa6822 = $$lcssa6314;
         $$lcssa6325$lcssa6796 = $$lcssa6325;
         label = 771;
         break L1;
        }
        $2323 = HEAP32[$$idx$val$i910$lcssa6291 + -96 >> 2] | 0;
        $2324 = HEAP32[$202 >> 2] | 0;
        $2325 = __Znwj(16) | 0;
        HEAP32[$2325 >> 2] = 41664;
        HEAP32[$2325 + 8 >> 2] = $2323;
        HEAP32[$2325 + 12 >> 2] = $2324;
        $2328 = HEAP32[$205 >> 2] | 0;
        $2329 = HEAP32[$206 >> 2] | 0;
        if ($2328 >>> 0 < $2329 >>> 0) {
         if (!$2328) $2333 = 0; else {
          HEAP32[$2328 >> 2] = $2325;
          $2333 = HEAP32[$205 >> 2] | 0;
         }
         $2332 = $2333 + 4 | 0;
         HEAP32[$205 >> 2] = $2332;
         $$idx1$val$i$i$i1042 = $2332;
        } else {
         $this$idx2$val$i$i$i$i$i1027 = HEAP32[$204 >> 2] | 0;
         $2338 = ($2328 - $this$idx2$val$i$i$i$i$i1027 >> 2) + 1 | 0;
         if ($2338 >>> 0 > 1073741823) {
          __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($204);
          $$idx1$val$i$i$i$i$i$i$i1030 = HEAP32[$206 >> 2] | 0;
          $2341 = HEAP32[$204 >> 2] | 0;
         } else {
          $$idx1$val$i$i$i$i$i$i$i1030 = $2329;
          $2341 = $this$idx2$val$i$i$i$i$i1027;
         }
         $2342 = $2341;
         $2343 = $$idx1$val$i$i$i$i$i$i$i1030 - $2342 | 0;
         if ($2343 >> 2 >>> 0 < 536870911) {
          $2349 = $2343 >> 1;
          $2351 = $2349 >>> 0 < $2338 >>> 0 ? $2338 : $2349;
          $2353 = (HEAP32[$205 >> 2] | 0) - $2342 | 0;
          $2354 = $2353 >> 2;
          if (!$2351) {
           $$0$i8$i$i$i$i$i1036 = 0;
           $2359 = 0;
           $2360 = $2354;
           $2364 = $2353;
          } else {
           $$0$i7$i$i$i$i$i1035 = $2351;
           $5980 = $2354;
           $5981 = $2353;
           label = 791;
          }
         } else {
          $2347 = (HEAP32[$205 >> 2] | 0) - $2342 | 0;
          $$0$i7$i$i$i$i$i1035 = 1073741823;
          $5980 = $2347 >> 2;
          $5981 = $2347;
          label = 791;
         }
         if ((label | 0) == 791) {
          label = 0;
          $$0$i8$i$i$i$i$i1036 = $$0$i7$i$i$i$i$i1035;
          $2359 = __Znwj($$0$i7$i$i$i$i$i1035 << 2) | 0;
          $2360 = $5980;
          $2364 = $5981;
         }
         $2358 = $2359 + ($2360 << 2) | 0;
         if ($2358) HEAP32[$2358 >> 2] = $2325;
         $2363 = $2359 + ($2360 + 1 << 2) | 0;
         _memcpy($2359 | 0, $2341 | 0, $2364 | 0) | 0;
         HEAP32[$204 >> 2] = $2359;
         HEAP32[$205 >> 2] = $2363;
         HEAP32[$206 >> 2] = $2359 + ($$0$i8$i$i$i$i$i1036 << 2);
         if (!$2341) $$idx1$val$i$i$i1042 = $2363; else {
          __ZdlPv($2341);
          $$idx1$val$i$i$i1042 = HEAP32[$205 >> 2] | 0;
         }
        }
        HEAP8[$2325 + 4 >> 0] = HEAP8[$207 >> 0] | 0;
        $2371 = $$idx1$val$i$i$i1042 - (HEAP32[$204 >> 2] | 0) >> 2;
        HEAP32[$208 >> 2] = $2371;
        if ($2371 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($2371 >>> 0) > +HEAPF64[$209 >> 3] * +((HEAP32[$210 >> 2] | 0) >>> 0)) {
         __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $2325);
         __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($195, $this);
         if (HEAP32[$211 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$202 >> 2] | 0);
         $2385 = (HEAP8[$207 >> 0] | 0) + 1 << 24 >> 24;
         HEAP8[$207 >> 0] = $2385;
         $$idx6$val11$i$i$i1046 = HEAP32[$$idx6$i$i >> 2] | 0;
         $$idx7$val12$i$i$i1047 = HEAP32[$205 >> 2] | 0;
         if (($$idx7$val12$i$i$i1047 | 0) == ($$idx6$val11$i$i$i1046 | 0)) $$lcssa$i$i$i1066 = 0; else {
          $$idx6$val14$i$i$i1050 = $$idx6$val11$i$i$i1046;
          $$idx7$val18$i$i$i1049 = $$idx7$val12$i$i$i1047;
          $2392 = $2385;
          $i$013$i$i$i1051 = 0;
          while (1) {
           $2388 = HEAP32[$$idx6$val14$i$i$i1050 + ($i$013$i$i$i1051 << 2) >> 2] | 0;
           if ((HEAP8[$2388 + 4 >> 0] | 0) == $2392 << 24 >> 24) {
            $$idx6$val$i$i$i1062 = $$idx6$val14$i$i$i1050;
            $$idx7$val$i$i$i1061 = $$idx7$val18$i$i$i1049;
            $i$1$i$i$i1063 = $i$013$i$i$i1051;
           } else {
            if (!$2388) {
             $$idx4$val$i$i$i1056 = $$idx6$val14$i$i$i1050;
             $$idx5$val$i$i$i1055 = $$idx7$val18$i$i$i1049;
            } else {
             FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2388 >> 2] | 0) + 4 >> 2] & 255]($2388);
             $$idx4$val$i$i$i1056 = HEAP32[$$idx6$i$i >> 2] | 0;
             $$idx5$val$i$i$i1055 = HEAP32[$205 >> 2] | 0;
            }
            $2401 = ($$idx5$val$i$i$i1055 - $$idx4$val$i$i$i1056 >> 2) + -1 | 0;
            if (($i$013$i$i$i1051 | 0) == ($2401 | 0)) {
             $$idx6$val$pre$i$i$i1059 = $$idx4$val$i$i$i1056;
             $2406 = $$idx5$val$i$i$i1055;
            } else {
             HEAP32[$$idx4$val$i$i$i1056 + ($i$013$i$i$i1051 << 2) >> 2] = HEAP32[$$idx4$val$i$i$i1056 + ($2401 << 2) >> 2];
             $$idx6$val$pre$i$i$i1059 = HEAP32[$$idx6$i$i >> 2] | 0;
             $2406 = HEAP32[$205 >> 2] | 0;
            }
            $scevgep4$i$i$i$i$i$i1060 = $2406 + -4 | 0;
            HEAP32[$205 >> 2] = $scevgep4$i$i$i$i$i$i1060;
            $$idx6$val$i$i$i1062 = $$idx6$val$pre$i$i$i1059;
            $$idx7$val$i$i$i1061 = $scevgep4$i$i$i$i$i$i1060;
            $i$1$i$i$i1063 = $i$013$i$i$i1051 + -1 | 0;
           }
           $2408 = $i$1$i$i$i1063 + 1 | 0;
           $2412 = $$idx7$val$i$i$i1061 - $$idx6$val$i$i$i1062 >> 2;
           if ($2408 >>> 0 >= $2412 >>> 0) {
            $$lcssa6369 = $2412;
            break;
           }
           $$idx6$val14$i$i$i1050 = $$idx6$val$i$i$i1062;
           $$idx7$val18$i$i$i1049 = $$idx7$val$i$i$i1061;
           $2392 = HEAP8[$207 >> 0] | 0;
           $i$013$i$i$i1051 = $2408;
          }
          $$lcssa$i$i$i1066 = $$lcssa6369;
         }
         HEAP32[$208 >> 2] = $$lcssa$i$i$i1066;
         HEAP32[$210 >> 2] = $$lcssa$i$i$i1066;
        }
        HEAP32[$211 >> 2] = 18;
        HEAP32[$202 >> 2] = $2325;
        $$515 = $$111$ph4280;
        label = 2344;
        break L443;
        break;
       }
      case 19:
       {
        $2415 = HEAP32[$$idx$val$i910$lcssa6291 + -96 >> 2] | 0;
        $2416 = $2415 + 8 | 0;
        $2417 = HEAP32[$202 >> 2] | 0;
        $2418 = $2417 + 8 | 0;
        switch ($$lcssa6323 | 0) {
        case 2:
         {
          HEAP32[$59 + 0 >> 2] = 0;
          HEAP32[$59 + 4 >> 2] = 0;
          HEAP32[$59 + 8 >> 2] = 0;
          $2419 = HEAP8[$2416 >> 0] | 0;
          $2421 = ($2419 & 1) == 0;
          if ($2421) $2437 = ($2419 & 255) >>> 1; else $2437 = HEAP32[$2415 + 12 >> 2] | 0;
          $2426 = HEAP8[$2418 >> 0] | 0;
          if (!($2426 & 1)) $2438 = ($2426 & 255) >>> 1; else $2438 = HEAP32[$2417 + 12 >> 2] | 0;
          if ($2421) $2439 = $2416 + 1 | 0; else $2439 = HEAP32[$2415 + 16 >> 2] | 0;
          __THREW__ = 0;
          invoke_viiii(14, $59 | 0, $2439 | 0, $2437 | 0, $2438 + $2437 | 0);
          $2440 = __THREW__;
          __THREW__ = 0;
          if ($2440 & 1) {
           label = 828;
           break L1;
          }
          if (!(HEAP8[$2418 >> 0] & 1)) $2448 = $2418 + 1 | 0; else $2448 = HEAP32[$2417 + 16 >> 2] | 0;
          __THREW__ = 0;
          invoke_iiii(33, $59 | 0, $2448 | 0, $2438 | 0) | 0;
          $2449 = __THREW__;
          __THREW__ = 0;
          if ($2449 & 1) {
           label = 828;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(14, $58 | 0, $this | 0, $59 | 0);
          $2453 = __THREW__;
          __THREW__ = 0;
          if ($2453 & 1) {
           label = 831;
           break L1;
          };
          HEAP32[$201 + 0 >> 2] = HEAP32[$58 + 0 >> 2];
          HEAP32[$201 + 4 >> 2] = HEAP32[$58 + 4 >> 2];
          HEAP32[$201 + 8 >> 2] = HEAP32[$58 + 8 >> 2];
          HEAP32[$201 + 12 >> 2] = HEAP32[$58 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 9:
         {
          $2457 = HEAP8[$2418 >> 0] | 0;
          $2459 = ($2457 & 1) == 0;
          if ($2459) $2479 = ($2457 & 255) >>> 1; else $2479 = HEAP32[$2417 + 12 >> 2] | 0;
          $2464 = HEAP8[$2416 >> 0] | 0;
          $2466 = ($2464 & 1) == 0;
          if ($2466) $2477 = ($2464 & 255) >>> 1; else $2477 = HEAP32[$2415 + 12 >> 2] | 0;
          if ($2459) $2481 = $2418 + 1 | 0; else $2481 = HEAP32[$2417 + 16 >> 2] | 0;
          if ($2466) $2482 = $2416 + 1 | 0; else $2482 = HEAP32[$2415 + 16 >> 2] | 0;
          $2478 = $2477 >>> 0 < $2479 >>> 0;
          $2483 = _memcmp($2481, $2482, $2478 ? $2477 : $2479) | 0;
          if (!$2483) $2486 = $2479 >>> 0 < $2477 >>> 0 ? -1 : $2478 & 1; else $2486 = $2483;
          HEAP32[$211 >> 2] = 1;
          HEAP8[$202 >> 0] = $2486 >>> 31 & 255 ^ 1;
          HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32741 + 0 >> 0] | 0;
          HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32741 + 1 >> 0] | 0;
          HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32741 + 2 >> 0] | 0;
          HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32741 + 3 >> 0] | 0;
          HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32741 + 4 >> 0] | 0;
          HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32741 + 5 >> 0] | 0;
          HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32741 + 6 >> 0] | 0;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 7:
         {
          $2488 = HEAP8[$2416 >> 0] | 0;
          $2490 = ($2488 & 1) == 0;
          if ($2490) $2510 = ($2488 & 255) >>> 1; else $2510 = HEAP32[$2415 + 12 >> 2] | 0;
          $2495 = HEAP8[$2418 >> 0] | 0;
          $2497 = ($2495 & 1) == 0;
          if ($2497) $2508 = ($2495 & 255) >>> 1; else $2508 = HEAP32[$2417 + 12 >> 2] | 0;
          if ($2490) $2512 = $2416 + 1 | 0; else $2512 = HEAP32[$2415 + 16 >> 2] | 0;
          if ($2497) $2513 = $2418 + 1 | 0; else $2513 = HEAP32[$2417 + 16 >> 2] | 0;
          $2509 = $2508 >>> 0 < $2510 >>> 0;
          $2514 = _memcmp($2512, $2513, $2509 ? $2508 : $2510) | 0;
          if (!$2514) $2517 = $2510 >>> 0 < $2508 >>> 0 ? -1 : $2509 & 1; else $2517 = $2514;
          HEAP32[$211 >> 2] = 1;
          HEAP8[$202 >> 0] = $2517 >>> 31 & 255 ^ 1;
          HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32737 + 0 >> 0] | 0;
          HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32737 + 1 >> 0] | 0;
          HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32737 + 2 >> 0] | 0;
          HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32737 + 3 >> 0] | 0;
          HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32737 + 4 >> 0] | 0;
          HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32737 + 5 >> 0] | 0;
          HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32737 + 6 >> 0] | 0;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 8:
         {
          $2519 = HEAP8[$2416 >> 0] | 0;
          $2521 = ($2519 & 1) == 0;
          if ($2521) $2541 = ($2519 & 255) >>> 1; else $2541 = HEAP32[$2415 + 12 >> 2] | 0;
          $2526 = HEAP8[$2418 >> 0] | 0;
          $2528 = ($2526 & 1) == 0;
          if ($2528) $2539 = ($2526 & 255) >>> 1; else $2539 = HEAP32[$2417 + 12 >> 2] | 0;
          if ($2521) $2543 = $2416 + 1 | 0; else $2543 = HEAP32[$2415 + 16 >> 2] | 0;
          if ($2528) $2544 = $2418 + 1 | 0; else $2544 = HEAP32[$2417 + 16 >> 2] | 0;
          $2540 = $2539 >>> 0 < $2541 >>> 0;
          $2545 = _memcmp($2543, $2544, $2540 ? $2539 : $2541) | 0;
          if (!$2545) $2548 = $2541 >>> 0 < $2539 >>> 0 ? -1 : $2540 & 1; else $2548 = $2545;
          HEAP32[$211 >> 2] = 1;
          HEAP8[$202 >> 0] = $2548 >>> 31;
          HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32733 + 0 >> 0] | 0;
          HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32733 + 1 >> 0] | 0;
          HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32733 + 2 >> 0] | 0;
          HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32733 + 3 >> 0] | 0;
          HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32733 + 4 >> 0] | 0;
          HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32733 + 5 >> 0] | 0;
          HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32733 + 6 >> 0] | 0;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        case 6:
         {
          $2550 = HEAP8[$2418 >> 0] | 0;
          $2552 = ($2550 & 1) == 0;
          if ($2552) $2572 = ($2550 & 255) >>> 1; else $2572 = HEAP32[$2417 + 12 >> 2] | 0;
          $2557 = HEAP8[$2416 >> 0] | 0;
          $2559 = ($2557 & 1) == 0;
          if ($2559) $2570 = ($2557 & 255) >>> 1; else $2570 = HEAP32[$2415 + 12 >> 2] | 0;
          if ($2552) $2574 = $2418 + 1 | 0; else $2574 = HEAP32[$2417 + 16 >> 2] | 0;
          if ($2559) $2575 = $2416 + 1 | 0; else $2575 = HEAP32[$2415 + 16 >> 2] | 0;
          $2571 = $2570 >>> 0 < $2572 >>> 0;
          $2576 = _memcmp($2574, $2575, $2571 ? $2570 : $2572) | 0;
          if (!$2576) $2579 = $2572 >>> 0 < $2570 >>> 0 ? -1 : $2571 & 1; else $2579 = $2576;
          HEAP32[$211 >> 2] = 1;
          HEAP8[$202 >> 0] = $2579 >>> 31;
          HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32729 + 0 >> 0] | 0;
          HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32729 + 1 >> 0] | 0;
          HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32729 + 2 >> 0] | 0;
          HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32729 + 3 >> 0] | 0;
          HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32729 + 4 >> 0] | 0;
          HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32729 + 5 >> 0] | 0;
          HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32729 + 6 >> 0] | 0;
          $$515 = $$111$ph4280;
          label = 2344;
          break L443;
          break;
         }
        default:
         {
          $$lcssa6314$lcssa6819 = $$lcssa6314;
          $$lcssa6325$lcssa6793 = $$lcssa6325;
          label = 892;
          break L1;
         }
        }
        break;
       }
      default:
       {
        $$515 = $$111$ph4280;
        label = 2344;
        break L443;
       }
      }
      break;
     }
    case 903:
     {
      label = 0;
      $2605 = HEAP32[$$idx$val$i910$lcssa6277 + -140 >> 2] | 0;
      $2607 = HEAP32[$$idx$val$i910$lcssa6277 + -96 >> 2] | 0;
      $2609 = HEAP32[$$idx$val$i910$lcssa6277 + -80 >> 2] | 0;
      if ((HEAP32[$201 >> 2] | 0) != 1) {
       $$lcssa6786 = $2605;
       label = 904;
       break L1;
      }
      do if (!(HEAP8[$202 >> 0] | 0)) {
       $$idx267$pre$phiZZ2D = $2609 + 8 | 0;
       $$pre$phi5209Z2D = $$idx$val$i910$lcssa6277 + -56 | 0;
      } else {
       $2631 = $$idx$val$i910$lcssa6277 + -40 | 0;
       $2632 = $$idx$val$i910$lcssa6277 + -56 | 0;
       $$idx310 = $2609 + 8 | 0;
       $2634 = (HEAP32[$$idx310 >> 2] | 0) + (HEAP32[$2632 >> 2] << 2) | 0;
       $2635 = $$idx$val$i910$lcssa6277 + -36 | 0;
       $2636 = HEAP32[$2635 >> 2] | 0;
       $2637 = $$idx$val$i910$lcssa6277 + -32 | 0;
       if (($2636 | 0) != (HEAP32[$2637 >> 2] | 0)) {
        if (!$2636) $2642 = 0; else {
         HEAP32[$2636 >> 2] = HEAP32[$2634 >> 2];
         $2642 = HEAP32[$2635 >> 2] | 0;
        }
        HEAP32[$2635 >> 2] = $2642 + 4;
        $$idx267$pre$phiZZ2D = $$idx310;
        $$pre$phi5209Z2D = $2632;
        break;
       }
       $this$idx2$val$i$i1094 = HEAP32[$2631 >> 2] | 0;
       $2647 = ($2636 - $this$idx2$val$i$i1094 >> 2) + 1 | 0;
       if ($2647 >>> 0 > 1073741823) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2631);
        $$idx1$val$i$i$i$i1097 = HEAP32[$2637 >> 2] | 0;
        $2650 = HEAP32[$2631 >> 2] | 0;
       } else {
        $$idx1$val$i$i$i$i1097 = $2636;
        $2650 = $this$idx2$val$i$i1094;
       }
       $2651 = $2650;
       $2652 = $$idx1$val$i$i$i$i1097 - $2651 | 0;
       if ($2652 >> 2 >>> 0 < 536870911) {
        $2658 = $2652 >> 1;
        $2660 = $2658 >>> 0 < $2647 >>> 0 ? $2647 : $2658;
        $2662 = (HEAP32[$2635 >> 2] | 0) - $2651 | 0;
        $2663 = $2662 >> 2;
        if (!$2660) {
         $$0$i8$i$i1103 = 0;
         $2668 = 0;
         $2669 = $2663;
         $2673 = $2662;
        } else {
         $$0$i7$i$i1102 = $2660;
         $5982 = $2663;
         $5983 = $2662;
         label = 923;
        }
       } else {
        $2656 = (HEAP32[$2635 >> 2] | 0) - $2651 | 0;
        $$0$i7$i$i1102 = 1073741823;
        $5982 = $2656 >> 2;
        $5983 = $2656;
        label = 923;
       }
       if ((label | 0) == 923) {
        label = 0;
        $$0$i8$i$i1103 = $$0$i7$i$i1102;
        $2668 = __Znwj($$0$i7$i$i1102 << 2) | 0;
        $2669 = $5982;
        $2673 = $5983;
       }
       $2667 = $2668 + ($2669 << 2) | 0;
       if ($2667) HEAP32[$2667 >> 2] = HEAP32[$2634 >> 2];
       _memcpy($2668 | 0, $2650 | 0, $2673 | 0) | 0;
       HEAP32[$2631 >> 2] = $2668;
       HEAP32[$2635 >> 2] = $2668 + ($2669 + 1 << 2);
       HEAP32[$2637 >> 2] = $2668 + ($$0$i8$i$i1103 << 2);
       if (!$2650) {
        $$idx267$pre$phiZZ2D = $$idx310;
        $$pre$phi5209Z2D = $2632;
       } else {
        __ZdlPv($2650);
        $$idx267$pre$phiZZ2D = $$idx310;
        $$pre$phi5209Z2D = $2632;
       }
      } while (0);
      $2676 = (HEAP32[$$pre$phi5209Z2D >> 2] | 0) + 1 | 0;
      HEAP32[$$pre$phi5209Z2D >> 2] = $2676;
      $$idx267$val = HEAP32[$$idx267$pre$phiZZ2D >> 2] | 0;
      if (($2676 | 0) != ((HEAP32[$2609 + 12 >> 2] | 0) - $$idx267$val >> 2 | 0)) {
       $$idx267$val$lcssa = $$idx267$val;
       $$lcssa6787 = $2605;
       $$lcssa6789 = $2607;
       $$lcssa6790 = $2676;
       label = 930;
       break L428;
      }
      __ZN12_GLOBAL__N_111Interpreter9makeArrayERKNSt3__16vectorIPNS_9HeapThunkENS1_9allocatorIS4_EEEE($65, $this, $$idx$val$i910$lcssa6277 + -40 | 0);
      HEAP32[$201 + 0 >> 2] = HEAP32[$65 + 0 >> 2];
      HEAP32[$201 + 4 >> 2] = HEAP32[$65 + 4 >> 2];
      HEAP32[$201 + 8 >> 2] = HEAP32[$65 + 8 >> 2];
      HEAP32[$201 + 12 >> 2] = HEAP32[$65 + 12 >> 2];
      $$515 = $$111$ph4280;
      label = 2344;
      break;
     }
    case 986:
     {
      label = 0;
      $2797 = HEAP32[$$idx$val$i910$lcssa6278 + -140 >> 2] | 0;
      $2798 = $$idx$val$i910$lcssa6278 + -104 | 0;
      $2799 = $$idx$val$i910$lcssa6278 + -56 | 0;
      $2800 = HEAP32[$2799 >> 2] | 0;
      $2801 = $$idx$val$i910$lcssa6278 + -40 | 0;
      $$idx265$val = HEAP32[$2801 >> 2] | 0;
      $$idx266 = $$idx$val$i910$lcssa6278 + -36 | 0;
      $$idx266$val = HEAP32[$$idx266 >> 2] | 0;
      if (($2800 | 0) != ($$idx266$val - $$idx265$val >> 2 | 0)) {
       HEAP32[$2799 >> 2] = $2800 + 1;
       $4638 = HEAP32[$$idx265$val + ($2800 << 2) >> 2] | 0;
       if (!(HEAP8[$4638 + 5 >> 0] | 0)) {
        $$lcssa6470 = $2797;
        $$lcssa6550 = $4638;
        label = 1758;
        break L428;
       } else {
        $$515 = $$111$ph4280;
        label = 2344;
        break;
       }
      }
      $2809 = $2797 + 4 | 0;
      $2811 = HEAP32[(HEAP32[$$idx$val$i910$lcssa6278 + -96 >> 2] | 0) + 44 >> 2] | 0;
      HEAP32[$args68 >> 2] = 0;
      HEAP32[$252 >> 2] = 0;
      HEAP32[$253 >> 2] = 0;
      if (($$idx265$val | 0) != ($$idx266$val | 0)) {
       $$pre$i1164 = 0;
       $2814 = $$idx265$val;
       $2817 = 0;
       while (1) {
        $2815 = (HEAP32[$2814 >> 2] | 0) + 8 | 0;
        if (($$pre$i1164 | 0) == ($2817 | 0)) {
         $this$idx2$val$i$i1166 = HEAP32[$args68 >> 2] | 0;
         $2825 = ($2817 - $this$idx2$val$i$i1166 >> 4) + 1 | 0;
         if ($2825 >>> 0 > 268435455) {
          __THREW__ = 0;
          invoke_vi(182, $args68 | 0);
          $2827 = __THREW__;
          __THREW__ = 0;
          if ($2827 & 1) {
           label = 1007;
           break L1;
          }
          $$idx1$val$i$i$i$i1169 = HEAP32[$253 >> 2] | 0;
          $2830 = HEAP32[$args68 >> 2] | 0;
         } else {
          $$idx1$val$i$i$i$i1169 = $2817;
          $2830 = $this$idx2$val$i$i1166;
         }
         $2831 = $2830;
         $2832 = $$idx1$val$i$i$i$i1169 - $2831 | 0;
         if ($2832 >> 4 >>> 0 < 134217727) {
          $2838 = $2832 >> 3;
          $2840 = $2838 >>> 0 < $2825 >>> 0 ? $2825 : $2838;
          $2842 = (HEAP32[$252 >> 2] | 0) - $2831 | 0;
          $2843 = $2842 >> 4;
          if (!$2840) {
           $$0$i8$i$i1173 = 0;
           $2850 = 0;
           $2851 = $2843;
           $2855 = $2842;
          } else {
           $$0$i7$i$i1172 = $2840;
           $5985 = $2843;
           $5986 = $2842;
           label = 999;
          }
         } else {
          $2836 = (HEAP32[$252 >> 2] | 0) - $2831 | 0;
          $$0$i7$i$i1172 = 268435455;
          $5985 = $2836 >> 4;
          $5986 = $2836;
          label = 999;
         }
         if ((label | 0) == 999) {
          label = 0;
          __THREW__ = 0;
          $2846 = invoke_ii(67, $$0$i7$i$i1172 << 4 | 0) | 0;
          $2847 = __THREW__;
          __THREW__ = 0;
          if ($2847 & 1) {
           label = 1007;
           break L1;
          }
          $$0$i8$i$i1173 = $$0$i7$i$i1172;
          $2850 = $2846;
          $2851 = $5985;
          $2855 = $5986;
         }
         $2849 = $2850 + ($2851 << 4) | 0;
         if ($2849) {
          HEAP32[$2849 + 0 >> 2] = HEAP32[$2815 + 0 >> 2];
          HEAP32[$2849 + 4 >> 2] = HEAP32[$2815 + 4 >> 2];
          HEAP32[$2849 + 8 >> 2] = HEAP32[$2815 + 8 >> 2];
          HEAP32[$2849 + 12 >> 2] = HEAP32[$2815 + 12 >> 2];
         }
         _memcpy($2850 | 0, $2830 | 0, $2855 | 0) | 0;
         HEAP32[$args68 >> 2] = $2850;
         HEAP32[$252 >> 2] = $2850 + ($2851 + 1 << 4);
         HEAP32[$253 >> 2] = $2850 + ($$0$i8$i$i1173 << 4);
         if ($2830) __ZdlPv($2830);
        } else {
         if (!$$pre$i1164) $2820 = 0; else {
          HEAP32[$$pre$i1164 + 0 >> 2] = HEAP32[$2815 + 0 >> 2];
          HEAP32[$$pre$i1164 + 4 >> 2] = HEAP32[$2815 + 4 >> 2];
          HEAP32[$$pre$i1164 + 8 >> 2] = HEAP32[$2815 + 8 >> 2];
          HEAP32[$$pre$i1164 + 12 >> 2] = HEAP32[$2815 + 12 >> 2];
          $2820 = $$pre$i1164;
         }
         HEAP32[$252 >> 2] = $2820 + 16;
        }
        $2857 = $2814 + 4 | 0;
        if (($2857 | 0) == ($$idx266$val | 0)) break;
        $$pre$i1164 = HEAP32[$252 >> 2] | 0;
        $2814 = $2857;
        $2817 = HEAP32[$253 >> 2] | 0;
       }
      }
      L1013 : do switch ($2811 | 0) {
      case 0:
       {
        HEAP32[$66 >> 2] = 0;
        HEAP32[$254 >> 2] = 0;
        HEAP32[$255 >> 2] = 0;
        __THREW__ = 0;
        $2865 = invoke_ii(67, 8) | 0;
        $2866 = __THREW__;
        __THREW__ = 0;
        if ($2866 & 1) {
         label = 1015;
         break L1;
        }
        HEAP32[$66 >> 2] = $2865;
        HEAP32[$255 >> 2] = $2865 + 8;
        HEAP32[$2865 >> 2] = 2;
        HEAP32[$2865 + 4 >> 2] = 17;
        HEAP32[$254 >> 2] = $2865 + 8;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 0, $args68 | 0, $66 | 0);
        $2871 = __THREW__;
        __THREW__ = 0;
        if ($2871 & 1) {
         $$lcssa6767 = $2865;
         label = 1030;
         break L1;
        }
        HEAP32[$254 >> 2] = $2865;
        __ZdlPv($2865);
        $args68$idx358$val = HEAP32[$args68 >> 2] | 0;
        $2877 = ~~+HEAPF64[$args68$idx358$val + 8 >> 3];
        if (($2877 | 0) < 0) {
         $$lcssa6625 = $2809;
         $$lcssa6773 = $2877;
         label = 1017;
         break L1;
        }
        $2921 = HEAP32[$args68$idx358$val + 24 >> 2] | 0;
        HEAP32[$elements75 >> 2] = 0;
        HEAP32[$256 >> 2] = 0;
        HEAP32[$257 >> 2] = 0;
        $2922 = $2921 + 32 | 0;
        $2924 = $2921 + 28 | 0;
        if (((HEAP32[$2922 >> 2] | 0) - (HEAP32[$2924 >> 2] | 0) | 0) != 4) {
         $$lcssa6626 = $2809;
         $$lcssa6778 = $2922;
         $$lcssa6782 = $2924;
         label = 1037;
         break L1;
        }
        if ($2877) {
         if ($2877 >>> 0 > 1073741823) {
          __THREW__ = 0;
          invoke_vi(182, $elements75 | 0);
          $2983 = __THREW__;
          __THREW__ = 0;
          if ($2983 & 1) {
           label = 1052;
           break L1;
          }
          $$idx1$val$i$i$i$i1227 = HEAP32[$257 >> 2] | 0;
          $this$idx$val$i$i = HEAP32[$elements75 >> 2] | 0;
         } else {
          $$idx1$val$i$i$i$i1227 = 0;
          $this$idx$val$i$i = 0;
         }
         $2986 = $this$idx$val$i$i;
         $2987 = $$idx1$val$i$i$i$i1227 - $2986 | 0;
         if ($2987 >> 2 >>> 0 < 536870911) {
          $2993 = $2987 >> 1;
          $2995 = $2993 >>> 0 < $2877 >>> 0 ? $2877 : $2993;
          $2998 = (HEAP32[$256 >> 2] | 0) - $2986 >> 2;
          if (!$2995) {
           $$0$i813$i$i = 0;
           $3005 = 0;
           $3006 = $2998;
          } else {
           $$0$i812$i$i = $2995;
           $5987 = $2998;
           label = 1066;
          }
         } else {
          $$0$i812$i$i = 1073741823;
          $5987 = (HEAP32[$256 >> 2] | 0) - $2986 >> 2;
          label = 1066;
         }
         if ((label | 0) == 1066) {
          label = 0;
          __THREW__ = 0;
          $3001 = invoke_ii(67, $$0$i812$i$i << 2 | 0) | 0;
          $3002 = __THREW__;
          __THREW__ = 0;
          if ($3002 & 1) {
           label = 1052;
           break L1;
          }
          $$0$i813$i$i = $$0$i812$i$i;
          $3005 = $3001;
          $3006 = $5987;
         }
         $$0$i5$i$i = $2877;
         $3007 = $3005 + ($3006 << 2) | 0;
         while (1) {
          if (!$3007) $3010 = 0; else {
           HEAP32[$3007 >> 2] = 0;
           $3010 = $3007;
          }
          $3009 = $3010 + 4 | 0;
          $$0$i5$i$i = $$0$i5$i$i + -1 | 0;
          if (!$$0$i5$i$i) {
           $$lcssa6353 = $3009;
           break;
          } else $3007 = $3009;
         }
         $3014 = HEAP32[$elements75 >> 2] | 0;
         $3018 = (HEAP32[$256 >> 2] | 0) - $3014 | 0;
         $3020 = $3005 + ($3006 - ($3018 >> 2) << 2) | 0;
         _memcpy($3020 | 0, $3014 | 0, $3018 | 0) | 0;
         HEAP32[$elements75 >> 2] = $3020;
         HEAP32[$256 >> 2] = $$lcssa6353;
         HEAP32[$257 >> 2] = $3005 + ($$0$i813$i$i << 2);
         if ($3014) __ZdlPv($3014);
         if (($2877 | 0) > 0) {
          $3023 = $2921 + 40 | 0;
          $3024 = $2921 + 24 | 0;
          $3025 = $2921 + 20 | 0;
          $3026 = $$idx$val$i910$lcssa6278 + -32 | 0;
          $3027 = $2921 + 8 | 0;
          $3028 = $2921 + 12 | 0;
          $i77$04265 = 0;
          do {
           __THREW__ = 0;
           $3029 = invoke_ii(67, 56) | 0;
           $3030 = __THREW__;
           __THREW__ = 0;
           if ($3030 & 1) {
            label = 1051;
            break L1;
           }
           $3032 = HEAP32[$203 >> 2] | 0;
           $3033 = HEAP32[$3025 >> 2] | 0;
           $3034 = HEAP32[$3024 >> 2] | 0;
           $3035 = HEAP32[$3023 >> 2] | 0;
           HEAP32[$3029 >> 2] = 41592;
           HEAP8[$3029 + 5 >> 0] = 0;
           HEAP32[$3029 + 24 >> 2] = $3032;
           $3038 = $3029 + 28 | 0;
           $3039 = $3029 + 32 | 0;
           HEAP32[$3039 >> 2] = 0;
           $3040 = $3029 + 36 | 0;
           HEAP32[$3040 >> 2] = 0;
           HEAP32[$3038 >> 2] = $3039;
           HEAP32[$3029 + 40 >> 2] = $3033;
           HEAP32[$3029 + 44 >> 2] = $3034;
           HEAP32[$3029 + 48 >> 2] = $3035;
           $3044 = HEAP32[$205 >> 2] | 0;
           $3045 = HEAP32[$206 >> 2] | 0;
           do if ($3044 >>> 0 < $3045 >>> 0) {
            if (!$3044) $3049 = 0; else {
             HEAP32[$3044 >> 2] = $3029;
             $3049 = HEAP32[$205 >> 2] | 0;
            }
            $3048 = $3049 + 4 | 0;
            HEAP32[$205 >> 2] = $3048;
            $$idx1$val$i$i1258 = $3048;
           } else {
            $this$idx2$val$i$i$i$i1243 = HEAP32[$204 >> 2] | 0;
            $3054 = ($3044 - $this$idx2$val$i$i$i$i1243 >> 2) + 1 | 0;
            if ($3054 >>> 0 > 1073741823) {
             __THREW__ = 0;
             invoke_vi(182, $204 | 0);
             $3056 = __THREW__;
             __THREW__ = 0;
             if ($3056 & 1) {
              label = 1051;
              break L1;
             }
             $$idx1$val$i$i$i$i$i$i1246 = HEAP32[$206 >> 2] | 0;
             $3059 = HEAP32[$204 >> 2] | 0;
            } else {
             $$idx1$val$i$i$i$i$i$i1246 = $3045;
             $3059 = $this$idx2$val$i$i$i$i1243;
            }
            $3060 = $3059;
            $3061 = $$idx1$val$i$i$i$i$i$i1246 - $3060 | 0;
            if ($3061 >> 2 >>> 0 < 536870911) {
             $3067 = $3061 >> 1;
             $3069 = $3067 >>> 0 < $3054 >>> 0 ? $3054 : $3067;
             $3071 = (HEAP32[$205 >> 2] | 0) - $3060 | 0;
             $3072 = $3071 >> 2;
             if (!$3069) {
              $$0$i8$i$i$i$i1252 = 0;
              $3079 = 0;
              $3080 = $3072;
              $3084 = $3071;
             } else {
              $$0$i7$i$i$i$i1251 = $3069;
              $5988 = $3072;
              $5989 = $3071;
              label = 1087;
             }
            } else {
             $3065 = (HEAP32[$205 >> 2] | 0) - $3060 | 0;
             $$0$i7$i$i$i$i1251 = 1073741823;
             $5988 = $3065 >> 2;
             $5989 = $3065;
             label = 1087;
            }
            if ((label | 0) == 1087) {
             label = 0;
             __THREW__ = 0;
             $3075 = invoke_ii(67, $$0$i7$i$i$i$i1251 << 2 | 0) | 0;
             $3076 = __THREW__;
             __THREW__ = 0;
             if ($3076 & 1) {
              label = 1051;
              break L1;
             }
             $$0$i8$i$i$i$i1252 = $$0$i7$i$i$i$i1251;
             $3079 = $3075;
             $3080 = $5988;
             $3084 = $5989;
            }
            $3078 = $3079 + ($3080 << 2) | 0;
            if ($3078) HEAP32[$3078 >> 2] = $3029;
            $3083 = $3079 + ($3080 + 1 << 2) | 0;
            _memcpy($3079 | 0, $3059 | 0, $3084 | 0) | 0;
            HEAP32[$204 >> 2] = $3079;
            HEAP32[$205 >> 2] = $3083;
            HEAP32[$206 >> 2] = $3079 + ($$0$i8$i$i$i$i1252 << 2);
            if (!$3059) {
             $$idx1$val$i$i1258 = $3083;
             break;
            }
            __ZdlPv($3059);
            $$idx1$val$i$i1258 = HEAP32[$205 >> 2] | 0;
           } while (0);
           HEAP8[$3029 + 4 >> 0] = HEAP8[$207 >> 0] | 0;
           $3091 = $$idx1$val$i$i1258 - (HEAP32[$204 >> 2] | 0) >> 2;
           HEAP32[$208 >> 2] = $3091;
           do if ($3091 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) {
            if (!(+($3091 >>> 0) > +HEAPF64[$209 >> 3] * +((HEAP32[$210 >> 2] | 0) >>> 0))) break;
            __THREW__ = 0;
            invoke_vii(62, $this | 0, $3029 | 0);
            $3100 = __THREW__;
            __THREW__ = 0;
            if ($3100 & 1) {
             label = 1051;
             break L1;
            }
            __THREW__ = 0;
            invoke_vii(63, $195 | 0, $this | 0);
            $3102 = __THREW__;
            __THREW__ = 0;
            if ($3102 & 1) {
             label = 1051;
             break L1;
            }
            if (HEAP32[$211 >> 2] & 16) {
             __THREW__ = 0;
             invoke_vii(62, $this | 0, HEAP32[$202 >> 2] | 0);
             $3108 = __THREW__;
             __THREW__ = 0;
             if ($3108 & 1) {
              label = 1051;
              break L1;
             }
            }
            $3111 = (HEAP8[$207 >> 0] | 0) + 1 << 24 >> 24;
            HEAP8[$207 >> 0] = $3111;
            $$idx6$val11$i$i1262 = HEAP32[$$idx6$i$i >> 2] | 0;
            $$idx7$val12$i$i1263 = HEAP32[$205 >> 2] | 0;
            if (($$idx7$val12$i$i1263 | 0) == ($$idx6$val11$i$i1262 | 0)) $$lcssa$i$i1282 = 0; else {
             $$idx6$val14$i$i1266 = $$idx6$val11$i$i1262;
             $$idx7$val18$i$i1265 = $$idx7$val12$i$i1263;
             $3118 = $3111;
             $i$013$i$i1267 = 0;
             while (1) {
              $3114 = HEAP32[$$idx6$val14$i$i1266 + ($i$013$i$i1267 << 2) >> 2] | 0;
              if ((HEAP8[$3114 + 4 >> 0] | 0) == $3118 << 24 >> 24) {
               $$idx6$val$i$i1278 = $$idx6$val14$i$i1266;
               $$idx7$val$i$i1277 = $$idx7$val18$i$i1265;
               $i$1$i$i1279 = $i$013$i$i1267;
              } else {
               if (!$3114) {
                $$idx4$val$i$i1272 = $$idx6$val14$i$i1266;
                $$idx5$val$i$i1271 = $$idx7$val18$i$i1265;
               } else {
                FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3114 >> 2] | 0) + 4 >> 2] & 255]($3114);
                $$idx4$val$i$i1272 = HEAP32[$$idx6$i$i >> 2] | 0;
                $$idx5$val$i$i1271 = HEAP32[$205 >> 2] | 0;
               }
               $3127 = ($$idx5$val$i$i1271 - $$idx4$val$i$i1272 >> 2) + -1 | 0;
               if (($i$013$i$i1267 | 0) == ($3127 | 0)) {
                $$idx6$val$pre$i$i1275 = $$idx4$val$i$i1272;
                $3132 = $$idx5$val$i$i1271;
               } else {
                HEAP32[$$idx4$val$i$i1272 + ($i$013$i$i1267 << 2) >> 2] = HEAP32[$$idx4$val$i$i1272 + ($3127 << 2) >> 2];
                $$idx6$val$pre$i$i1275 = HEAP32[$$idx6$i$i >> 2] | 0;
                $3132 = HEAP32[$205 >> 2] | 0;
               }
               $scevgep4$i$i$i$i$i1276 = $3132 + -4 | 0;
               HEAP32[$205 >> 2] = $scevgep4$i$i$i$i$i1276;
               $$idx6$val$i$i1278 = $$idx6$val$pre$i$i1275;
               $$idx7$val$i$i1277 = $scevgep4$i$i$i$i$i1276;
               $i$1$i$i1279 = $i$013$i$i1267 + -1 | 0;
              }
              $3134 = $i$1$i$i1279 + 1 | 0;
              $3138 = $$idx7$val$i$i1277 - $$idx6$val$i$i1278 >> 2;
              if ($3134 >>> 0 >= $3138 >>> 0) {
               $$lcssa6354 = $3138;
               break;
              }
              $$idx6$val14$i$i1266 = $$idx6$val$i$i1278;
              $$idx7$val18$i$i1265 = $$idx7$val$i$i1277;
              $3118 = HEAP8[$207 >> 0] | 0;
              $i$013$i$i1267 = $3134;
             }
             $$lcssa$i$i1282 = $$lcssa6354;
            }
            HEAP32[$208 >> 2] = $$lcssa$i$i1282;
            HEAP32[$210 >> 2] = $$lcssa$i$i1282;
           } while (0);
           $3140 = HEAP32[$$idx266 >> 2] | 0;
           do if (($3140 | 0) == (HEAP32[$3026 >> 2] | 0)) {
            $this$idx2$val$i$i1294 = HEAP32[$2801 >> 2] | 0;
            $3150 = ($3140 - $this$idx2$val$i$i1294 >> 2) + 1 | 0;
            if ($3150 >>> 0 > 1073741823) {
             __THREW__ = 0;
             invoke_vi(182, $2801 | 0);
             $3152 = __THREW__;
             __THREW__ = 0;
             if ($3152 & 1) {
              label = 1051;
              break L1;
             }
             $$idx1$val$i$i$i$i1297 = HEAP32[$3026 >> 2] | 0;
             $3155 = HEAP32[$2801 >> 2] | 0;
            } else {
             $$idx1$val$i$i$i$i1297 = $3140;
             $3155 = $this$idx2$val$i$i1294;
            }
            $3156 = $3155;
            $3157 = $$idx1$val$i$i$i$i1297 - $3156 | 0;
            if ($3157 >> 2 >>> 0 < 536870911) {
             $3163 = $3157 >> 1;
             $3165 = $3163 >>> 0 < $3150 >>> 0 ? $3150 : $3163;
             $3167 = (HEAP32[$$idx266 >> 2] | 0) - $3156 | 0;
             $3168 = $3167 >> 2;
             if (!$3165) {
              $$0$i8$i$i1303 = 0;
              $3175 = 0;
              $3176 = $3168;
              $3180 = $3167;
             } else {
              $$0$i7$i$i1302 = $3165;
              $5990 = $3168;
              $5991 = $3167;
              label = 1121;
             }
            } else {
             $3161 = (HEAP32[$$idx266 >> 2] | 0) - $3156 | 0;
             $$0$i7$i$i1302 = 1073741823;
             $5990 = $3161 >> 2;
             $5991 = $3161;
             label = 1121;
            }
            if ((label | 0) == 1121) {
             label = 0;
             __THREW__ = 0;
             $3171 = invoke_ii(67, $$0$i7$i$i1302 << 2 | 0) | 0;
             $3172 = __THREW__;
             __THREW__ = 0;
             if ($3172 & 1) {
              label = 1051;
              break L1;
             }
             $$0$i8$i$i1303 = $$0$i7$i$i1302;
             $3175 = $3171;
             $3176 = $5990;
             $3180 = $5991;
            }
            $3174 = $3175 + ($3176 << 2) | 0;
            if ($3174) HEAP32[$3174 >> 2] = $3029;
            _memcpy($3175 | 0, $3155 | 0, $3180 | 0) | 0;
            HEAP32[$2801 >> 2] = $3175;
            HEAP32[$$idx266 >> 2] = $3175 + ($3176 + 1 << 2);
            HEAP32[$3026 >> 2] = $3175 + ($$0$i8$i$i1303 << 2);
            if (!$3155) break;
            __ZdlPv($3155);
           } else {
            if (!$3140) $3145 = 0; else {
             HEAP32[$3140 >> 2] = $3029;
             $3145 = HEAP32[$$idx266 >> 2] | 0;
            }
            HEAP32[$$idx266 >> 2] = $3145 + 4;
           } while (0);
           L1114 : do if (($3038 | 0) != ($3027 | 0)) {
            $__t$idx$val$i$i = HEAP32[$3027 >> 2] | 0;
            do if (!(HEAP32[$3040 >> 2] | 0)) $__first$04$ph$i$i$i = $__t$idx$val$i$i; else {
             $3185 = HEAP32[$3038 >> 2] | 0;
             HEAP32[$3038 >> 2] = $3039;
             HEAP32[(HEAP32[$3039 >> 2] | 0) + 8 >> 2] = 0;
             HEAP32[$3039 >> 2] = 0;
             HEAP32[$3040 >> 2] = 0;
             $3189 = HEAP32[$3185 + 4 >> 2] | 0;
             $$$i$i$i$i = ($3189 | 0) == 0 ? $3185 : $3189;
             if (!$$$i$i$i$i) {
              $__first$04$ph$i$i$i = $__t$idx$val$i$i;
              break;
             }
             $__cache$017$i$i$i = $$$i$i$i$i;
             $__first$0316$i$i$i = $__t$idx$val$i$i;
             while (1) {
              if (($__first$0316$i$i$i | 0) == ($3028 | 0)) {
               $__cache$017$i$i$i$lcssa = $__cache$017$i$i$i;
               break;
              }
              $3198 = $__cache$017$i$i$i + 16 | 0;
              HEAP32[$3198 >> 2] = HEAP32[$__first$0316$i$i$i + 16 >> 2];
              HEAP32[$__cache$017$i$i$i + 20 >> 2] = HEAP32[$__first$0316$i$i$i + 20 >> 2];
              $3202 = $__cache$017$i$i$i + 8 | 0;
              $3203 = HEAP32[$3202 >> 2] | 0;
              do if (!$3203) $$0$i$i$i$i1311 = 0; else {
               $3205 = HEAP32[$3203 >> 2] | 0;
               if (($3205 | 0) == ($__cache$017$i$i$i | 0)) {
                HEAP32[$3203 >> 2] = 0;
                $3208 = HEAP32[$3203 + 4 >> 2] | 0;
                if (!$3208) {
                 $$0$i$i$i$i1311 = $3203;
                 break;
                }
                $$0$i1$i$i$i$i = $3208;
                while (1) {
                 $3210 = HEAP32[$$0$i1$i$i$i$i >> 2] | 0;
                 if (!$3210) {
                  $3213 = HEAP32[$$0$i1$i$i$i$i + 4 >> 2] | 0;
                  if (!$3213) {
                   $$0$i1$i$i$i$i$lcssa = $$0$i1$i$i$i$i;
                   break;
                  } else $$0$i1$i$i$i$i$be = $3213;
                 } else $$0$i1$i$i$i$i$be = $3210;
                 $$0$i1$i$i$i$i = $$0$i1$i$i$i$i$be;
                }
                $$0$i$i$i$i1311 = $$0$i1$i$i$i$i$lcssa;
                break;
               } else {
                HEAP32[$3203 + 4 >> 2] = 0;
                if (!$3205) {
                 $$0$i$i$i$i1311 = $3203;
                 break;
                }
                $$0$i$i8$i$i$i = $3205;
                while (1) {
                 $3217 = HEAP32[$$0$i$i8$i$i$i >> 2] | 0;
                 if (!$3217) {
                  $3220 = HEAP32[$$0$i$i8$i$i$i + 4 >> 2] | 0;
                  if (!$3220) {
                   $$0$i$i8$i$i$i$lcssa = $$0$i$i8$i$i$i;
                   break;
                  } else $$0$i$i8$i$i$i$be = $3220;
                 } else $$0$i$i8$i$i$i$be = $3217;
                 $$0$i$i8$i$i$i = $$0$i$i8$i$i$i$be;
                }
                $$0$i$i$i$i1311 = $$0$i$i8$i$i$i$lcssa;
                break;
               }
              } while (0);
              $3222 = HEAP32[$3039 >> 2] | 0;
              do if (!$3222) {
               $$0$i$i26$i$i$i = $3039;
               $3231 = $3039;
              } else {
               $__v$idx$val$i$i18$i$i$i = HEAP32[$3198 >> 2] | 0;
               $__nd$0$i$i20$i$i$i = $3222;
               while (1) {
                if ($__v$idx$val$i$i18$i$i$i >>> 0 < (HEAP32[$__nd$0$i$i20$i$i$i + 16 >> 2] | 0) >>> 0) {
                 $3225 = HEAP32[$__nd$0$i$i20$i$i$i >> 2] | 0;
                 if (!$3225) {
                  $$lcssa6357 = $__nd$0$i$i20$i$i$i;
                  $__nd$0$i$i20$i$i$i$lcssa6355 = $__nd$0$i$i20$i$i$i;
                  label = 1152;
                  break;
                 } else $__nd$0$be$in$i$i23$i$i$i = $3225;
                } else {
                 $3227 = $__nd$0$i$i20$i$i$i + 4 | 0;
                 $3228 = HEAP32[$3227 >> 2] | 0;
                 if (!$3228) {
                  $$lcssa6356 = $3227;
                  $__nd$0$i$i20$i$i$i$lcssa = $__nd$0$i$i20$i$i$i;
                  label = 1155;
                  break;
                 } else $__nd$0$be$in$i$i23$i$i$i = $3228;
                }
                $__nd$0$i$i20$i$i$i = $__nd$0$be$in$i$i23$i$i$i;
               }
               if ((label | 0) == 1152) {
                label = 0;
                $$0$i$i26$i$i$i = $$lcssa6357;
                $3231 = $__nd$0$i$i20$i$i$i$lcssa6355;
                break;
               } else if ((label | 0) == 1155) {
                label = 0;
                $$0$i$i26$i$i$i = $$lcssa6356;
                $3231 = $__nd$0$i$i20$i$i$i$lcssa;
                break;
               }
              } while (0);
              HEAP32[$__cache$017$i$i$i >> 2] = 0;
              HEAP32[$__cache$017$i$i$i + 4 >> 2] = 0;
              HEAP32[$3202 >> 2] = $3231;
              HEAP32[$$0$i$i26$i$i$i >> 2] = $__cache$017$i$i$i;
              $3233 = HEAP32[HEAP32[$3038 >> 2] >> 2] | 0;
              if (!$3233) $3236 = $__cache$017$i$i$i; else {
               HEAP32[$3038 >> 2] = $3233;
               $3236 = HEAP32[$$0$i$i26$i$i$i >> 2] | 0;
              }
              __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$3039 >> 2] | 0, $3236);
              HEAP32[$3040 >> 2] = (HEAP32[$3040 >> 2] | 0) + 1;
              $3240 = HEAP32[$__first$0316$i$i$i + 4 >> 2] | 0;
              if (!$3240) {
               $$0$i$i12$i$i$i = $__first$0316$i$i$i;
               while (1) {
                $3245 = HEAP32[$$0$i$i12$i$i$i + 8 >> 2] | 0;
                if ((HEAP32[$3245 >> 2] | 0) == ($$0$i$i12$i$i$i | 0)) {
                 $$cast$i$i13$i$i$i$lcssa = $3245;
                 break;
                } else $$0$i$i12$i$i$i = $3245;
               }
               $$01$i$i15$i$i$i = $$cast$i$i13$i$i$i$lcssa;
              } else {
               $$0$i$i$i10$i$i$i = $3240;
               while (1) {
                $3242 = HEAP32[$$0$i$i$i10$i$i$i >> 2] | 0;
                if (!$3242) {
                 $$0$i$i$i10$i$i$i$lcssa = $$0$i$i$i10$i$i$i;
                 break;
                } else $$0$i$i$i10$i$i$i = $3242;
               }
               $$01$i$i15$i$i$i = $$0$i$i$i10$i$i$i$lcssa;
              }
              if (!$$0$i$i$i$i1311) {
               $$lcssa6359 = $$01$i$i15$i$i$i;
               label = 1169;
               break;
              } else {
               $__cache$017$i$i$i = $$0$i$i$i$i1311;
               $__first$0316$i$i$i = $$01$i$i15$i$i$i;
              }
             }
             if ((label | 0) == 1169) {
              label = 0;
              $__first$04$ph$i$i$i = $$lcssa6359;
              break;
             }
             $3194 = HEAP32[$__cache$017$i$i$i$lcssa + 8 >> 2] | 0;
             if (!$3194) $__cache$2$lcssa$i$i$i = $__cache$017$i$i$i$lcssa; else {
              $3250 = $3194;
              while (1) {
               $3251 = HEAP32[$3250 + 8 >> 2] | 0;
               if (!$3251) {
                $$lcssa6360 = $3250;
                break;
               } else $3250 = $3251;
              }
              $__cache$2$lcssa$i$i$i = $$lcssa6360;
             }
             __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3038, $__cache$2$lcssa$i$i$i);
             break L1114;
            } while (0);
            if (($__first$04$ph$i$i$i | 0) == ($3028 | 0)) break;
            $__first$0414$i$i$i = $__first$04$ph$i$i$i;
            while (1) {
             $3254 = $__first$0414$i$i$i + 16 | 0;
             $3255 = HEAP32[$3039 >> 2] | 0;
             do if (!$3255) {
              $$0$i$i7$i$i$i = $3039;
              $3279 = $3039;
             } else {
              $__v$idx$val$i$i$i$i$i = HEAP32[$3254 >> 2] | 0;
              $__nd$0$i$i$i$i$i = $3255;
              while (1) {
               if ($__v$idx$val$i$i$i$i$i >>> 0 < (HEAP32[$__nd$0$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
                $3258 = HEAP32[$__nd$0$i$i$i$i$i >> 2] | 0;
                if (!$3258) {
                 $$lcssa6363 = $__nd$0$i$i$i$i$i;
                 $__nd$0$i$i$i$i$i$lcssa6361 = $__nd$0$i$i$i$i$i;
                 label = 1176;
                 break;
                } else $__nd$0$be$in$i$i$i$i$i = $3258;
               } else {
                $3260 = $__nd$0$i$i$i$i$i + 4 | 0;
                $3261 = HEAP32[$3260 >> 2] | 0;
                if (!$3261) {
                 $$lcssa6362 = $3260;
                 $__nd$0$i$i$i$i$i$lcssa = $__nd$0$i$i$i$i$i;
                 label = 1179;
                 break;
                } else $__nd$0$be$in$i$i$i$i$i = $3261;
               }
               $__nd$0$i$i$i$i$i = $__nd$0$be$in$i$i$i$i$i;
              }
              if ((label | 0) == 1176) {
               label = 0;
               $$0$i$i7$i$i$i = $$lcssa6363;
               $3279 = $__nd$0$i$i$i$i$i$lcssa6361;
               break;
              } else if ((label | 0) == 1179) {
               label = 0;
               $$0$i$i7$i$i$i = $$lcssa6362;
               $3279 = $__nd$0$i$i$i$i$i$lcssa;
               break;
              }
             } while (0);
             __THREW__ = 0;
             $3263 = invoke_ii(67, 24) | 0;
             $3264 = __THREW__;
             __THREW__ = 0;
             if ($3264 & 1) {
              label = 1050;
              break L1;
             }
             $3267 = $3254;
             $3272 = HEAP32[$3267 + 4 >> 2] | 0;
             $3273 = $3263 + 16 | 0;
             HEAP32[$3273 >> 2] = HEAP32[$3267 >> 2];
             HEAP32[$3273 + 4 >> 2] = $3272;
             HEAP32[$3263 >> 2] = 0;
             HEAP32[$3263 + 4 >> 2] = 0;
             HEAP32[$3263 + 8 >> 2] = $3279;
             HEAP32[$$0$i$i7$i$i$i >> 2] = $3263;
             $3281 = HEAP32[HEAP32[$3038 >> 2] >> 2] | 0;
             if (!$3281) $3284 = $3263; else {
              HEAP32[$3038 >> 2] = $3281;
              $3284 = HEAP32[$$0$i$i7$i$i$i >> 2] | 0;
             }
             __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$3039 >> 2] | 0, $3284);
             HEAP32[$3040 >> 2] = (HEAP32[$3040 >> 2] | 0) + 1;
             $3288 = HEAP32[$__first$0414$i$i$i + 4 >> 2] | 0;
             if (!$3288) {
              $$0$i$i$i$i$i1315 = $__first$0414$i$i$i;
              while (1) {
               $3293 = HEAP32[$$0$i$i$i$i$i1315 + 8 >> 2] | 0;
               if ((HEAP32[$3293 >> 2] | 0) == ($$0$i$i$i$i$i1315 | 0)) {
                $$cast$i$i$i$i$i1316$lcssa = $3293;
                break;
               } else $$0$i$i$i$i$i1315 = $3293;
              }
              $$01$i$i$i$i$i1318 = $$cast$i$i$i$i$i1316$lcssa;
             } else {
              $$0$i$i$i$i$i$i1313 = $3288;
              while (1) {
               $3290 = HEAP32[$$0$i$i$i$i$i$i1313 >> 2] | 0;
               if (!$3290) {
                $$0$i$i$i$i$i$i1313$lcssa = $$0$i$i$i$i$i$i1313;
                break;
               } else $$0$i$i$i$i$i$i1313 = $3290;
              }
              $$01$i$i$i$i$i1318 = $$0$i$i$i$i$i$i1313$lcssa;
             }
             if (($$01$i$i$i$i$i1318 | 0) == ($3028 | 0)) break; else $__first$0414$i$i$i = $$01$i$i$i$i$i1318;
            }
           } while (0);
           $3297 = HEAP32[$2924 >> 2] | 0;
           __THREW__ = 0;
           $3298 = invoke_ii(67, 56) | 0;
           $3299 = __THREW__;
           __THREW__ = 0;
           if ($3299 & 1) {
            label = 1051;
            break L1;
           }
           $3301 = HEAP32[$3297 >> 2] | 0;
           HEAP32[$3298 >> 2] = 41592;
           $3302 = $3298 + 5 | 0;
           HEAP8[$3302 >> 0] = 0;
           HEAP32[$3298 + 24 >> 2] = $3301;
           $3304 = $3298 + 28 | 0;
           $3305 = $3298 + 32 | 0;
           HEAP32[$3305 >> 2] = 0;
           $3306 = $3298 + 36 | 0;
           HEAP32[$3306 >> 2] = 0;
           HEAP32[$3304 >> 2] = $3305;
           $3307 = $3298 + 40 | 0;
           HEAP32[$3307 >> 2] = 0;
           HEAP32[$3298 + 44 >> 2] = 0;
           HEAP32[$3298 + 48 >> 2] = 0;
           $3310 = HEAP32[$205 >> 2] | 0;
           $3311 = HEAP32[$206 >> 2] | 0;
           do if ($3310 >>> 0 < $3311 >>> 0) {
            if (!$3310) $3315 = 0; else {
             HEAP32[$3310 >> 2] = $3298;
             $3315 = HEAP32[$205 >> 2] | 0;
            }
            $3314 = $3315 + 4 | 0;
            HEAP32[$205 >> 2] = $3314;
            $$idx1$val$i$i1339 = $3314;
           } else {
            $this$idx2$val$i$i$i$i1324 = HEAP32[$204 >> 2] | 0;
            $3320 = ($3310 - $this$idx2$val$i$i$i$i1324 >> 2) + 1 | 0;
            if ($3320 >>> 0 > 1073741823) {
             __THREW__ = 0;
             invoke_vi(182, $204 | 0);
             $3322 = __THREW__;
             __THREW__ = 0;
             if ($3322 & 1) {
              label = 1051;
              break L1;
             }
             $$idx1$val$i$i$i$i$i$i1327 = HEAP32[$206 >> 2] | 0;
             $3325 = HEAP32[$204 >> 2] | 0;
            } else {
             $$idx1$val$i$i$i$i$i$i1327 = $3311;
             $3325 = $this$idx2$val$i$i$i$i1324;
            }
            $3326 = $3325;
            $3327 = $$idx1$val$i$i$i$i$i$i1327 - $3326 | 0;
            if ($3327 >> 2 >>> 0 < 536870911) {
             $3333 = $3327 >> 1;
             $3335 = $3333 >>> 0 < $3320 >>> 0 ? $3320 : $3333;
             $3337 = (HEAP32[$205 >> 2] | 0) - $3326 | 0;
             $3338 = $3337 >> 2;
             if (!$3335) {
              $$0$i8$i$i$i$i1333 = 0;
              $3345 = 0;
              $3346 = $3338;
              $3350 = $3337;
             } else {
              $$0$i7$i$i$i$i1332 = $3335;
              $5992 = $3338;
              $5993 = $3337;
              label = 1203;
             }
            } else {
             $3331 = (HEAP32[$205 >> 2] | 0) - $3326 | 0;
             $$0$i7$i$i$i$i1332 = 1073741823;
             $5992 = $3331 >> 2;
             $5993 = $3331;
             label = 1203;
            }
            if ((label | 0) == 1203) {
             label = 0;
             __THREW__ = 0;
             $3341 = invoke_ii(67, $$0$i7$i$i$i$i1332 << 2 | 0) | 0;
             $3342 = __THREW__;
             __THREW__ = 0;
             if ($3342 & 1) {
              label = 1051;
              break L1;
             }
             $$0$i8$i$i$i$i1333 = $$0$i7$i$i$i$i1332;
             $3345 = $3341;
             $3346 = $5992;
             $3350 = $5993;
            }
            $3344 = $3345 + ($3346 << 2) | 0;
            if ($3344) HEAP32[$3344 >> 2] = $3298;
            $3349 = $3345 + ($3346 + 1 << 2) | 0;
            _memcpy($3345 | 0, $3325 | 0, $3350 | 0) | 0;
            HEAP32[$204 >> 2] = $3345;
            HEAP32[$205 >> 2] = $3349;
            HEAP32[$206 >> 2] = $3345 + ($$0$i8$i$i$i$i1333 << 2);
            if (!$3325) {
             $$idx1$val$i$i1339 = $3349;
             break;
            }
            __ZdlPv($3325);
            $$idx1$val$i$i1339 = HEAP32[$205 >> 2] | 0;
           } while (0);
           HEAP8[$3298 + 4 >> 0] = HEAP8[$207 >> 0] | 0;
           $3357 = $$idx1$val$i$i1339 - (HEAP32[$204 >> 2] | 0) >> 2;
           HEAP32[$208 >> 2] = $3357;
           do if ($3357 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) {
            if (!(+($3357 >>> 0) > +HEAPF64[$209 >> 3] * +((HEAP32[$210 >> 2] | 0) >>> 0))) break;
            __THREW__ = 0;
            invoke_vii(62, $this | 0, $3298 | 0);
            $3366 = __THREW__;
            __THREW__ = 0;
            if ($3366 & 1) {
             label = 1051;
             break L1;
            }
            __THREW__ = 0;
            invoke_vii(63, $195 | 0, $this | 0);
            $3368 = __THREW__;
            __THREW__ = 0;
            if ($3368 & 1) {
             label = 1051;
             break L1;
            }
            if (HEAP32[$211 >> 2] & 16) {
             __THREW__ = 0;
             invoke_vii(62, $this | 0, HEAP32[$202 >> 2] | 0);
             $3374 = __THREW__;
             __THREW__ = 0;
             if ($3374 & 1) {
              label = 1051;
              break L1;
             }
            }
            $3377 = (HEAP8[$207 >> 0] | 0) + 1 << 24 >> 24;
            HEAP8[$207 >> 0] = $3377;
            $$idx6$val11$i$i1343 = HEAP32[$$idx6$i$i >> 2] | 0;
            $$idx7$val12$i$i1344 = HEAP32[$205 >> 2] | 0;
            if (($$idx7$val12$i$i1344 | 0) == ($$idx6$val11$i$i1343 | 0)) $$lcssa$i$i1363 = 0; else {
             $$idx6$val14$i$i1347 = $$idx6$val11$i$i1343;
             $$idx7$val18$i$i1346 = $$idx7$val12$i$i1344;
             $3384 = $3377;
             $i$013$i$i1348 = 0;
             while (1) {
              $3380 = HEAP32[$$idx6$val14$i$i1347 + ($i$013$i$i1348 << 2) >> 2] | 0;
              if ((HEAP8[$3380 + 4 >> 0] | 0) == $3384 << 24 >> 24) {
               $$idx6$val$i$i1359 = $$idx6$val14$i$i1347;
               $$idx7$val$i$i1358 = $$idx7$val18$i$i1346;
               $i$1$i$i1360 = $i$013$i$i1348;
              } else {
               if (!$3380) {
                $$idx4$val$i$i1353 = $$idx6$val14$i$i1347;
                $$idx5$val$i$i1352 = $$idx7$val18$i$i1346;
               } else {
                FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3380 >> 2] | 0) + 4 >> 2] & 255]($3380);
                $$idx4$val$i$i1353 = HEAP32[$$idx6$i$i >> 2] | 0;
                $$idx5$val$i$i1352 = HEAP32[$205 >> 2] | 0;
               }
               $3393 = ($$idx5$val$i$i1352 - $$idx4$val$i$i1353 >> 2) + -1 | 0;
               if (($i$013$i$i1348 | 0) == ($3393 | 0)) {
                $$idx6$val$pre$i$i1356 = $$idx4$val$i$i1353;
                $3398 = $$idx5$val$i$i1352;
               } else {
                HEAP32[$$idx4$val$i$i1353 + ($i$013$i$i1348 << 2) >> 2] = HEAP32[$$idx4$val$i$i1353 + ($3393 << 2) >> 2];
                $$idx6$val$pre$i$i1356 = HEAP32[$$idx6$i$i >> 2] | 0;
                $3398 = HEAP32[$205 >> 2] | 0;
               }
               $scevgep4$i$i$i$i$i1357 = $3398 + -4 | 0;
               HEAP32[$205 >> 2] = $scevgep4$i$i$i$i$i1357;
               $$idx6$val$i$i1359 = $$idx6$val$pre$i$i1356;
               $$idx7$val$i$i1358 = $scevgep4$i$i$i$i$i1357;
               $i$1$i$i1360 = $i$013$i$i1348 + -1 | 0;
              }
              $3400 = $i$1$i$i1360 + 1 | 0;
              $3404 = $$idx7$val$i$i1358 - $$idx6$val$i$i1359 >> 2;
              if ($3400 >>> 0 >= $3404 >>> 0) {
               $$lcssa6364 = $3404;
               break;
              }
              $$idx6$val14$i$i1347 = $$idx6$val$i$i1359;
              $$idx7$val18$i$i1346 = $$idx7$val$i$i1358;
              $3384 = HEAP8[$207 >> 0] | 0;
              $i$013$i$i1348 = $3400;
             }
             $$lcssa$i$i1363 = $$lcssa6364;
            }
            HEAP32[$208 >> 2] = $$lcssa$i$i1363;
            HEAP32[$210 >> 2] = $$lcssa$i$i1363;
           } while (0);
           HEAP32[$3298 + 8 >> 2] = 2;
           HEAPF64[$3298 + 16 >> 3] = +($i77$04265 | 0);
           HEAP8[$3302 >> 0] = 1;
           HEAP32[$3307 >> 2] = 0;
           __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3304, HEAP32[$3305 >> 2] | 0);
           HEAP32[$3306 >> 2] = 0;
           HEAP32[$3304 >> 2] = $3305;
           HEAP32[$3305 >> 2] = 0;
           $__k$val$i1372 = HEAP32[HEAP32[$2924 >> 2] >> 2] | 0;
           $3411 = HEAP32[$3039 >> 2] | 0;
           do if (!$3411) {
            HEAP32[$__parent$i1371 >> 2] = $3039;
            $$0$i7$i1380 = $3039;
            $3430 = $3039;
            label = 1238;
           } else {
            $__nd$0$i$i1373 = $3411;
            while (1) {
             $3414 = HEAP32[$__nd$0$i$i1373 + 16 >> 2] | 0;
             if ($3414 >>> 0 > $__k$val$i1372 >>> 0) {
              $3416 = HEAP32[$__nd$0$i$i1373 >> 2] | 0;
              if (!$3416) {
               $$lcssa6368 = $__nd$0$i$i1373;
               $__nd$0$i$i1373$lcssa6366 = $__nd$0$i$i1373;
               label = 1231;
               break;
              } else $__nd$0$be$in$i$i1375 = $3416;
             } else {
              if ($3414 >>> 0 >= $__k$val$i1372 >>> 0) {
               $__nd$0$i$i1373$lcssa = $__nd$0$i$i1373;
               label = 1237;
               break;
              }
              $3419 = $__nd$0$i$i1373 + 4 | 0;
              $3420 = HEAP32[$3419 >> 2] | 0;
              if (!$3420) {
               $$lcssa6367 = $3419;
               $__nd$0$i$i1373$lcssa6365 = $__nd$0$i$i1373;
               label = 1235;
               break;
              } else $__nd$0$be$in$i$i1375 = $3420;
             }
             $__nd$0$i$i1373 = $__nd$0$be$in$i$i1375;
            }
            if ((label | 0) == 1231) {
             label = 0;
             HEAP32[$__parent$i1371 >> 2] = $__nd$0$i$i1373$lcssa6366;
             $$0$i7$i1380 = $$lcssa6368;
             $3430 = $__nd$0$i$i1373$lcssa6366;
             label = 1238;
             break;
            } else if ((label | 0) == 1235) {
             label = 0;
             HEAP32[$__parent$i1371 >> 2] = $__nd$0$i$i1373$lcssa6365;
             $$0$i7$i1380 = $$lcssa6367;
             $3430 = $__nd$0$i$i1373$lcssa6365;
             label = 1238;
             break;
            } else if ((label | 0) == 1237) {
             label = 0;
             HEAP32[$__parent$i1371 >> 2] = $__nd$0$i$i1373$lcssa;
             if (!$__nd$0$i$i1373$lcssa) {
              $$0$i7$i1380 = $__parent$i1371;
              $3430 = 0;
              label = 1238;
              break;
             } else {
              $__r$0$i1384 = $__nd$0$i$i1373$lcssa;
              break;
             }
            }
           } while (0);
           if ((label | 0) == 1238) {
            label = 0;
            __THREW__ = 0;
            $3423 = invoke_ii(67, 24) | 0;
            $3424 = __THREW__;
            __THREW__ = 0;
            if ($3424 & 1) {
             label = 1051;
             break L1;
            }
            HEAP32[$3423 + 16 >> 2] = $__k$val$i1372;
            HEAP32[$3423 + 20 >> 2] = 0;
            HEAP32[$3423 >> 2] = 0;
            HEAP32[$3423 + 4 >> 2] = 0;
            HEAP32[$3423 + 8 >> 2] = $3430;
            HEAP32[$$0$i7$i1380 >> 2] = $3423;
            $3432 = HEAP32[HEAP32[$3038 >> 2] >> 2] | 0;
            if (!$3432) $3435 = $3423; else {
             HEAP32[$3038 >> 2] = $3432;
             $3435 = HEAP32[$$0$i7$i1380 >> 2] | 0;
            }
            __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$3039 >> 2] | 0, $3435);
            HEAP32[$3040 >> 2] = (HEAP32[$3040 >> 2] | 0) + 1;
            $__r$0$i1384 = $3423;
           }
           HEAP32[$__r$0$i1384 + 20 >> 2] = $3298;
           HEAP32[(HEAP32[$elements75 >> 2] | 0) + ($i77$04265 << 2) >> 2] = $3029;
           $i77$04265 = $i77$04265 + 1 | 0;
          } while (($i77$04265 | 0) < ($2877 | 0));
         }
        }
        __THREW__ = 0;
        invoke_viii(12, $69 | 0, $this | 0, $elements75 | 0);
        $3442 = __THREW__;
        __THREW__ = 0;
        if ($3442 & 1) {
         label = 1052;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$69 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$69 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$69 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$69 + 12 >> 2];
        $3444 = HEAP32[$elements75 >> 2] | 0;
        $3446 = $3444;
        if (!$3444) {
         $$2138$ph = 0;
         $$414$ph = $$111$ph4280;
         label = 1747;
        } else {
         $3447 = HEAP32[$256 >> 2] | 0;
         if (($3447 | 0) != ($3444 | 0)) HEAP32[$256 >> 2] = $3447 + (~(($3447 + -4 - $3446 | 0) >>> 2) << 2);
         __ZdlPv($3444);
         $$2138$ph = 0;
         $$414$ph = $$111$ph4280;
         label = 1747;
        }
        break;
       }
      case 1:
       {
        HEAP32[$70 >> 2] = 0;
        HEAP32[$258 >> 2] = 0;
        HEAP32[$259 >> 2] = 0;
        __THREW__ = 0;
        $3462 = invoke_ii(67, 8) | 0;
        $3463 = __THREW__;
        __THREW__ = 0;
        if ($3463 & 1) {
         label = 1255;
         break L1;
        }
        HEAP32[$70 >> 2] = $3462;
        HEAP32[$259 >> 2] = $3462 + 8;
        HEAP32[$3462 >> 2] = 2;
        HEAP32[$3462 + 4 >> 2] = 2;
        HEAP32[$258 >> 2] = $3462 + 8;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 1, $args68 | 0, $70 | 0);
        $3468 = __THREW__;
        __THREW__ = 0;
        if ($3468 & 1) {
         $$lcssa6766 = $3462;
         label = 1258;
         break L1;
        }
        HEAP32[$258 >> 2] = $3462;
        __ZdlPv($3462);
        $args68$idx360$val = HEAP32[$args68 >> 2] | 0;
        $3476 = +Math_pow(+(+HEAPF64[$args68$idx360$val + 8 >> 3]), +(+HEAPF64[$args68$idx360$val + 24 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $71 | 0, $this | 0, $2809 | 0, +$3476);
        $3477 = __THREW__;
        __THREW__ = 0;
        if ($3477 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$71 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$71 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$71 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$71 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 2:
       {
        HEAP32[$72 >> 2] = 0;
        HEAP32[$260 >> 2] = 0;
        HEAP32[$261 >> 2] = 0;
        __THREW__ = 0;
        $3481 = invoke_ii(67, 4) | 0;
        $3482 = __THREW__;
        __THREW__ = 0;
        if ($3482 & 1) {
         label = 1261;
         break L1;
        }
        HEAP32[$72 >> 2] = $3481;
        HEAP32[$261 >> 2] = $3481 + 4;
        HEAP32[$3481 >> 2] = 2;
        HEAP32[$260 >> 2] = $3481 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 2, $args68 | 0, $72 | 0);
        $3486 = __THREW__;
        __THREW__ = 0;
        if ($3486 & 1) {
         $$lcssa6765 = $3481;
         label = 1264;
         break L1;
        }
        HEAP32[$260 >> 2] = $3481;
        __ZdlPv($3481);
        $3492 = +Math_floor(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $73 | 0, $this | 0, $2809 | 0, +$3492);
        $3493 = __THREW__;
        __THREW__ = 0;
        if ($3493 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$73 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$73 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$73 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$73 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 4:
       {
        HEAP32[$76 >> 2] = 0;
        HEAP32[$264 >> 2] = 0;
        HEAP32[$265 >> 2] = 0;
        __THREW__ = 0;
        $3513 = invoke_ii(67, 4) | 0;
        $3514 = __THREW__;
        __THREW__ = 0;
        if ($3514 & 1) {
         label = 1273;
         break L1;
        }
        HEAP32[$76 >> 2] = $3513;
        HEAP32[$265 >> 2] = $3513 + 4;
        HEAP32[$3513 >> 2] = 2;
        HEAP32[$264 >> 2] = $3513 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 4, $args68 | 0, $76 | 0);
        $3518 = __THREW__;
        __THREW__ = 0;
        if ($3518 & 1) {
         $$lcssa6763 = $3513;
         label = 1276;
         break L1;
        }
        HEAP32[$264 >> 2] = $3513;
        __ZdlPv($3513);
        $3524 = +Math_sqrt(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $77 | 0, $this | 0, $2809 | 0, +$3524);
        $3525 = __THREW__;
        __THREW__ = 0;
        if ($3525 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$77 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$77 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$77 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$77 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 3:
       {
        HEAP32[$74 >> 2] = 0;
        HEAP32[$262 >> 2] = 0;
        HEAP32[$263 >> 2] = 0;
        __THREW__ = 0;
        $3497 = invoke_ii(67, 4) | 0;
        $3498 = __THREW__;
        __THREW__ = 0;
        if ($3498 & 1) {
         label = 1267;
         break L1;
        }
        HEAP32[$74 >> 2] = $3497;
        HEAP32[$263 >> 2] = $3497 + 4;
        HEAP32[$3497 >> 2] = 2;
        HEAP32[$262 >> 2] = $3497 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 3, $args68 | 0, $74 | 0);
        $3502 = __THREW__;
        __THREW__ = 0;
        if ($3502 & 1) {
         $$lcssa6764 = $3497;
         label = 1270;
         break L1;
        }
        HEAP32[$262 >> 2] = $3497;
        __ZdlPv($3497);
        $3508 = +Math_ceil(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $75 | 0, $this | 0, $2809 | 0, +$3508);
        $3509 = __THREW__;
        __THREW__ = 0;
        if ($3509 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$75 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$75 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$75 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$75 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 5:
       {
        HEAP32[$78 >> 2] = 0;
        HEAP32[$266 >> 2] = 0;
        HEAP32[$267 >> 2] = 0;
        __THREW__ = 0;
        $3529 = invoke_ii(67, 4) | 0;
        $3530 = __THREW__;
        __THREW__ = 0;
        if ($3530 & 1) {
         label = 1279;
         break L1;
        }
        HEAP32[$78 >> 2] = $3529;
        HEAP32[$267 >> 2] = $3529 + 4;
        HEAP32[$3529 >> 2] = 2;
        HEAP32[$266 >> 2] = $3529 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 5, $args68 | 0, $78 | 0);
        $3534 = __THREW__;
        __THREW__ = 0;
        if ($3534 & 1) {
         $$lcssa6762 = $3529;
         label = 1282;
         break L1;
        }
        HEAP32[$266 >> 2] = $3529;
        __ZdlPv($3529);
        $3540 = +Math_sin(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $79 | 0, $this | 0, $2809 | 0, +$3540);
        $3541 = __THREW__;
        __THREW__ = 0;
        if ($3541 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$79 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$79 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$79 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$79 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 7:
       {
        HEAP32[$82 >> 2] = 0;
        HEAP32[$270 >> 2] = 0;
        HEAP32[$271 >> 2] = 0;
        __THREW__ = 0;
        $3561 = invoke_ii(67, 4) | 0;
        $3562 = __THREW__;
        __THREW__ = 0;
        if ($3562 & 1) {
         label = 1291;
         break L1;
        }
        HEAP32[$82 >> 2] = $3561;
        HEAP32[$271 >> 2] = $3561 + 4;
        HEAP32[$3561 >> 2] = 2;
        HEAP32[$270 >> 2] = $3561 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 7, $args68 | 0, $82 | 0);
        $3566 = __THREW__;
        __THREW__ = 0;
        if ($3566 & 1) {
         $$lcssa6760 = $3561;
         label = 1294;
         break L1;
        }
        HEAP32[$270 >> 2] = $3561;
        __ZdlPv($3561);
        $3572 = +Math_tan(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $83 | 0, $this | 0, $2809 | 0, +$3572);
        $3573 = __THREW__;
        __THREW__ = 0;
        if ($3573 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$83 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$83 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$83 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$83 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 6:
       {
        HEAP32[$80 >> 2] = 0;
        HEAP32[$268 >> 2] = 0;
        HEAP32[$269 >> 2] = 0;
        __THREW__ = 0;
        $3545 = invoke_ii(67, 4) | 0;
        $3546 = __THREW__;
        __THREW__ = 0;
        if ($3546 & 1) {
         label = 1285;
         break L1;
        }
        HEAP32[$80 >> 2] = $3545;
        HEAP32[$269 >> 2] = $3545 + 4;
        HEAP32[$3545 >> 2] = 2;
        HEAP32[$268 >> 2] = $3545 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 6, $args68 | 0, $80 | 0);
        $3550 = __THREW__;
        __THREW__ = 0;
        if ($3550 & 1) {
         $$lcssa6761 = $3545;
         label = 1288;
         break L1;
        }
        HEAP32[$268 >> 2] = $3545;
        __ZdlPv($3545);
        $3556 = +Math_cos(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $81 | 0, $this | 0, $2809 | 0, +$3556);
        $3557 = __THREW__;
        __THREW__ = 0;
        if ($3557 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$81 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$81 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$81 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$81 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 8:
       {
        HEAP32[$84 >> 2] = 0;
        HEAP32[$272 >> 2] = 0;
        HEAP32[$273 >> 2] = 0;
        __THREW__ = 0;
        $3577 = invoke_ii(67, 4) | 0;
        $3578 = __THREW__;
        __THREW__ = 0;
        if ($3578 & 1) {
         label = 1297;
         break L1;
        }
        HEAP32[$84 >> 2] = $3577;
        HEAP32[$273 >> 2] = $3577 + 4;
        HEAP32[$3577 >> 2] = 2;
        HEAP32[$272 >> 2] = $3577 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 8, $args68 | 0, $84 | 0);
        $3582 = __THREW__;
        __THREW__ = 0;
        if ($3582 & 1) {
         $$lcssa6759 = $3577;
         label = 1300;
         break L1;
        }
        HEAP32[$272 >> 2] = $3577;
        __ZdlPv($3577);
        $3588 = +Math_asin(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $85 | 0, $this | 0, $2809 | 0, +$3588);
        $3589 = __THREW__;
        __THREW__ = 0;
        if ($3589 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$85 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$85 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$85 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$85 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 10:
       {
        HEAP32[$88 >> 2] = 0;
        HEAP32[$276 >> 2] = 0;
        HEAP32[$277 >> 2] = 0;
        __THREW__ = 0;
        $3609 = invoke_ii(67, 4) | 0;
        $3610 = __THREW__;
        __THREW__ = 0;
        if ($3610 & 1) {
         label = 1309;
         break L1;
        }
        HEAP32[$88 >> 2] = $3609;
        HEAP32[$277 >> 2] = $3609 + 4;
        HEAP32[$3609 >> 2] = 2;
        HEAP32[$276 >> 2] = $3609 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 10, $args68 | 0, $88 | 0);
        $3614 = __THREW__;
        __THREW__ = 0;
        if ($3614 & 1) {
         $$lcssa6757 = $3609;
         label = 1312;
         break L1;
        }
        HEAP32[$276 >> 2] = $3609;
        __ZdlPv($3609);
        $3620 = +Math_atan(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $89 | 0, $this | 0, $2809 | 0, +$3620);
        $3621 = __THREW__;
        __THREW__ = 0;
        if ($3621 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$89 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$89 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$89 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$89 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 9:
       {
        HEAP32[$86 >> 2] = 0;
        HEAP32[$274 >> 2] = 0;
        HEAP32[$275 >> 2] = 0;
        __THREW__ = 0;
        $3593 = invoke_ii(67, 4) | 0;
        $3594 = __THREW__;
        __THREW__ = 0;
        if ($3594 & 1) {
         label = 1303;
         break L1;
        }
        HEAP32[$86 >> 2] = $3593;
        HEAP32[$275 >> 2] = $3593 + 4;
        HEAP32[$3593 >> 2] = 2;
        HEAP32[$274 >> 2] = $3593 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 9, $args68 | 0, $86 | 0);
        $3598 = __THREW__;
        __THREW__ = 0;
        if ($3598 & 1) {
         $$lcssa6758 = $3593;
         label = 1306;
         break L1;
        }
        HEAP32[$274 >> 2] = $3593;
        __ZdlPv($3593);
        $3604 = +Math_acos(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $87 | 0, $this | 0, $2809 | 0, +$3604);
        $3605 = __THREW__;
        __THREW__ = 0;
        if ($3605 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$87 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$87 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$87 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$87 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 11:
       {
        $args68$idx370$val = HEAP32[$args68 >> 2] | 0;
        switch (HEAP32[$args68$idx370$val >> 2] | 0) {
        case 0:
         {
          __THREW__ = 0;
          invoke_viii(3, $91 | 0, 39280, 4);
          $3626 = __THREW__;
          __THREW__ = 0;
          if ($3626 & 1) {
           label = 1008;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(14, $90 | 0, $this | 0, $91 | 0);
          $3628 = __THREW__;
          __THREW__ = 0;
          if ($3628 & 1) {
           label = 1317;
           break L1;
          };
          HEAP32[$201 + 0 >> 2] = HEAP32[$90 + 0 >> 2];
          HEAP32[$201 + 4 >> 2] = HEAP32[$90 + 4 >> 2];
          HEAP32[$201 + 8 >> 2] = HEAP32[$90 + 8 >> 2];
          HEAP32[$201 + 12 >> 2] = HEAP32[$90 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($91);
          $$2138$ph = 0;
          $$414$ph = $$111$ph4280;
          label = 1747;
          break L1013;
          break;
         }
        case 1:
         {
          __THREW__ = 0;
          invoke_viii(3, $93 | 0, 39288, 7);
          $3632 = __THREW__;
          __THREW__ = 0;
          if ($3632 & 1) {
           label = 1008;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(14, $92 | 0, $this | 0, $93 | 0);
          $3634 = __THREW__;
          __THREW__ = 0;
          if ($3634 & 1) {
           label = 1321;
           break L1;
          };
          HEAP32[$201 + 0 >> 2] = HEAP32[$92 + 0 >> 2];
          HEAP32[$201 + 4 >> 2] = HEAP32[$92 + 4 >> 2];
          HEAP32[$201 + 8 >> 2] = HEAP32[$92 + 8 >> 2];
          HEAP32[$201 + 12 >> 2] = HEAP32[$92 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($93);
          $$2138$ph = 0;
          $$414$ph = $$111$ph4280;
          label = 1747;
          break L1013;
          break;
         }
        case 16:
         {
          __THREW__ = 0;
          invoke_viii(3, $97 | 0, 39304, 5);
          $3644 = __THREW__;
          __THREW__ = 0;
          if ($3644 & 1) {
           label = 1008;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(14, $96 | 0, $this | 0, $97 | 0);
          $3646 = __THREW__;
          __THREW__ = 0;
          if ($3646 & 1) {
           label = 1329;
           break L1;
          };
          HEAP32[$201 + 0 >> 2] = HEAP32[$96 + 0 >> 2];
          HEAP32[$201 + 4 >> 2] = HEAP32[$96 + 4 >> 2];
          HEAP32[$201 + 8 >> 2] = HEAP32[$96 + 8 >> 2];
          HEAP32[$201 + 12 >> 2] = HEAP32[$96 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($97);
          $$2138$ph = 0;
          $$414$ph = $$111$ph4280;
          label = 1747;
          break L1013;
          break;
         }
        case 17:
         {
          __THREW__ = 0;
          invoke_viii(3, $99 | 0, 39312, 8);
          $3650 = __THREW__;
          __THREW__ = 0;
          if ($3650 & 1) {
           label = 1008;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(14, $98 | 0, $this | 0, $99 | 0);
          $3652 = __THREW__;
          __THREW__ = 0;
          if ($3652 & 1) {
           label = 1333;
           break L1;
          };
          HEAP32[$201 + 0 >> 2] = HEAP32[$98 + 0 >> 2];
          HEAP32[$201 + 4 >> 2] = HEAP32[$98 + 4 >> 2];
          HEAP32[$201 + 8 >> 2] = HEAP32[$98 + 8 >> 2];
          HEAP32[$201 + 12 >> 2] = HEAP32[$98 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($99);
          $$2138$ph = 0;
          $$414$ph = $$111$ph4280;
          label = 1747;
          break L1013;
          break;
         }
        case 2:
         {
          __THREW__ = 0;
          invoke_viii(3, $95 | 0, 40336, 6);
          $3638 = __THREW__;
          __THREW__ = 0;
          if ($3638 & 1) {
           label = 1008;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(14, $94 | 0, $this | 0, $95 | 0);
          $3640 = __THREW__;
          __THREW__ = 0;
          if ($3640 & 1) {
           label = 1325;
           break L1;
          };
          HEAP32[$201 + 0 >> 2] = HEAP32[$94 + 0 >> 2];
          HEAP32[$201 + 4 >> 2] = HEAP32[$94 + 4 >> 2];
          HEAP32[$201 + 8 >> 2] = HEAP32[$94 + 8 >> 2];
          HEAP32[$201 + 12 >> 2] = HEAP32[$94 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($95);
          $$2138$ph = 0;
          $$414$ph = $$111$ph4280;
          label = 1747;
          break L1013;
          break;
         }
        case 19:
         {
          __THREW__ = 0;
          invoke_viii(3, $103 | 0, 39336, 6);
          $3662 = __THREW__;
          __THREW__ = 0;
          if ($3662 & 1) {
           label = 1008;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(14, $102 | 0, $this | 0, $103 | 0);
          $3664 = __THREW__;
          __THREW__ = 0;
          if ($3664 & 1) {
           label = 1341;
           break L1;
          };
          HEAP32[$201 + 0 >> 2] = HEAP32[$102 + 0 >> 2];
          HEAP32[$201 + 4 >> 2] = HEAP32[$102 + 4 >> 2];
          HEAP32[$201 + 8 >> 2] = HEAP32[$102 + 8 >> 2];
          HEAP32[$201 + 12 >> 2] = HEAP32[$102 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($103);
          $$2138$ph = 0;
          $$414$ph = $$111$ph4280;
          label = 1747;
          break L1013;
          break;
         }
        case 18:
         {
          __THREW__ = 0;
          invoke_viii(3, $101 | 0, 39328, 6);
          $3656 = __THREW__;
          __THREW__ = 0;
          if ($3656 & 1) {
           label = 1008;
           break L1;
          }
          __THREW__ = 0;
          invoke_viii(14, $100 | 0, $this | 0, $101 | 0);
          $3658 = __THREW__;
          __THREW__ = 0;
          if ($3658 & 1) {
           label = 1337;
           break L1;
          };
          HEAP32[$201 + 0 >> 2] = HEAP32[$100 + 0 >> 2];
          HEAP32[$201 + 4 >> 2] = HEAP32[$100 + 4 >> 2];
          HEAP32[$201 + 8 >> 2] = HEAP32[$100 + 8 >> 2];
          HEAP32[$201 + 12 >> 2] = HEAP32[$100 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($101);
          $$2138$ph = 0;
          $$414$ph = $$111$ph4280;
          label = 1747;
          break L1013;
          break;
         }
        default:
         {
          $$2138 = 0;
          $$414 = $$111$ph4280;
          $4618 = $args68$idx370$val;
          break L1013;
         }
        }
        break;
       }
      case 12:
       {
        HEAP32[$104 >> 2] = 0;
        HEAP32[$278 >> 2] = 0;
        HEAP32[$279 >> 2] = 0;
        __THREW__ = 0;
        $3668 = invoke_ii(67, 8) | 0;
        $3669 = __THREW__;
        __THREW__ = 0;
        if ($3669 & 1) {
         label = 1344;
         break L1;
        }
        HEAP32[$104 >> 2] = $3668;
        HEAP32[$279 >> 2] = $3668 + 8;
        HEAP32[$3668 >> 2] = 17;
        HEAP32[$3668 + 4 >> 2] = 16;
        HEAP32[$278 >> 2] = $3668 + 8;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 12, $args68 | 0, $104 | 0);
        $3674 = __THREW__;
        __THREW__ = 0;
        if ($3674 & 1) {
         $$lcssa6752 = $3668;
         label = 1349;
         break L1;
        }
        HEAP32[$278 >> 2] = $3668;
        __ZdlPv($3668);
        $args68$idx374$val = HEAP32[$args68 >> 2] | 0;
        $3679 = HEAP32[$args68$idx374$val + 8 >> 2] | 0;
        $3682 = $3679 + 28 | 0;
        if (((HEAP32[$3679 + 32 >> 2] | 0) - (HEAP32[$3682 >> 2] | 0) | 0) != 4) {
         $$lcssa6592 = $2809;
         label = 1346;
         break L1;
        }
        $3702 = HEAP32[$args68$idx374$val + 24 >> 2] | 0;
        $$idx263 = $3702 + 8 | 0;
        if ((HEAP32[$3702 + 12 >> 2] | 0) == (HEAP32[$$idx263 >> 2] | 0)) {
         HEAP32[$107 >> 2] = 0;
         HEAP32[$280 >> 2] = 0;
         HEAP32[$281 >> 2] = 0;
         __THREW__ = 0;
         invoke_viii(12, $106 | 0, $this | 0, $107 | 0);
         $3704 = __THREW__;
         __THREW__ = 0;
         if ($3704 & 1) {
          label = 1356;
          break L1;
         };
         HEAP32[$201 + 0 >> 2] = HEAP32[$106 + 0 >> 2];
         HEAP32[$201 + 4 >> 2] = HEAP32[$106 + 4 >> 2];
         HEAP32[$201 + 8 >> 2] = HEAP32[$106 + 8 >> 2];
         HEAP32[$201 + 12 >> 2] = HEAP32[$106 + 12 >> 2];
         $$2138$ph = 0;
         $$414$ph = $$111$ph4280;
         label = 1747;
         break L1013;
        }
        HEAP32[$$lcssa6298 >> 2] = 4;
        HEAP32[$2798 + 0 >> 2] = HEAP32[$args68$idx374$val + 0 >> 2];
        HEAP32[$2798 + 4 >> 2] = HEAP32[$args68$idx374$val + 4 >> 2];
        HEAP32[$2798 + 8 >> 2] = HEAP32[$args68$idx374$val + 8 >> 2];
        HEAP32[$2798 + 12 >> 2] = HEAP32[$args68$idx374$val + 12 >> 2];
        $3708 = $$idx$val$i910$lcssa6278 + -88 | 0;
        $3709 = $args68$idx374$val + 16 | 0;
        HEAP32[$3708 + 0 >> 2] = HEAP32[$3709 + 0 >> 2];
        HEAP32[$3708 + 4 >> 2] = HEAP32[$3709 + 4 >> 2];
        HEAP32[$3708 + 8 >> 2] = HEAP32[$3709 + 8 >> 2];
        HEAP32[$3708 + 12 >> 2] = HEAP32[$3709 + 12 >> 2];
        $3710 = HEAP32[$2801 >> 2] | 0;
        $3711 = HEAP32[$$idx266 >> 2] | 0;
        if (($3711 | 0) != ($3710 | 0)) HEAP32[$$idx266 >> 2] = $3711 + (~(($3711 + -4 - $3710 | 0) >>> 2) << 2);
        HEAP32[$2799 >> 2] = 0;
        $3717 = HEAP32[HEAP32[$$idx263 >> 2] >> 2] | 0;
        HEAP32[$282 >> 2] = 0;
        HEAP32[$283 >> 2] = 0;
        HEAP32[$bindings83 >> 2] = $284;
        $$idx$val$i$i1695 = HEAP32[$3679 + 8 >> 2] | 0;
        $3718 = $3679 + 12 | 0;
        do if (($$idx$val$i$i1695 | 0) == ($3718 | 0)) {
         $__k$val$i17365219 = HEAP32[HEAP32[$3682 >> 2] >> 2] | 0;
         label = 1406;
        } else {
         $3725 = $$idx$val$i$i1695;
         $5994 = $$idx$val$i$i1695;
         while (1) {
          __THREW__ = 0;
          $3721 = invoke_ii(67, 24) | 0;
          $3722 = __THREW__;
          __THREW__ = 0;
          if ($3722 & 1) {
           label = 1396;
           break L1;
          }
          $3727 = $3725 + 16 | 0;
          $3729 = HEAP32[$3727 >> 2] | 0;
          $3732 = HEAP32[$3727 + 4 >> 2] | 0;
          $3733 = $3721 + 16 | 0;
          HEAP32[$3733 >> 2] = $3729;
          HEAP32[$3733 + 4 >> 2] = $3732;
          $3737 = $3729;
          $$pre$i$i$i$i$i$i1700 = HEAP32[$284 >> 2] | 0;
          do if ((HEAP32[$bindings83 >> 2] | 0) == ($284 | 0)) {
           $3758 = $284;
           label = 1372;
          } else {
           $3739 = ($$pre$i$i$i$i$i$i1700 | 0) == 0;
           if ($3739) {
            $$0$i$i$i$i$i$i$i$i1704 = $284;
            while (1) {
             $3744 = HEAP32[$$0$i$i$i$i$i$i$i$i1704 + 8 >> 2] | 0;
             if ((HEAP32[$3744 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i1704 | 0)) $$0$i$i$i$i$i$i$i$i1704 = $3744; else {
              $$cast$i$i$i$i$i$i$i$i1705$lcssa = $3744;
              break;
             }
            }
            $$01$i$i$i$i$i$i$i$i1707 = $$cast$i$i$i$i$i$i$i$i1705$lcssa;
           } else {
            $$0$i$i$i$i$i$i$i$i$i1702 = $$pre$i$i$i$i$i$i1700;
            while (1) {
             $3741 = HEAP32[$$0$i$i$i$i$i$i$i$i$i1702 + 4 >> 2] | 0;
             if (!$3741) {
              $$0$i$i$i$i$i$i$i$i$i1702$lcssa = $$0$i$i$i$i$i$i$i$i$i1702;
              break;
             } else $$0$i$i$i$i$i$i$i$i$i1702 = $3741;
            }
            $$01$i$i$i$i$i$i$i$i1707 = $$0$i$i$i$i$i$i$i$i$i1702$lcssa;
           }
           if ((HEAP32[$$01$i$i$i$i$i$i$i$i1707 + 16 >> 2] | 0) >>> 0 < $3737 >>> 0) {
            $3758 = $$01$i$i$i$i$i$i$i$i1707;
            label = 1372;
            break;
           }
           if ($3739) {
            $$0$i$i$i$i119$i$i1718 = $284;
            $3762 = $284;
            label = 1382;
            break;
           }
           $__nd$0$i20$i$i$i$i$in$i$i1712 = $$pre$i$i$i$i$i$i1700;
           while (1) {
            $$idx2$val$i22$i$i$i$i$i$i1714 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i1712 + 16 >> 2] | 0;
            if ($$idx2$val$i22$i$i$i$i$i$i1714 >>> 0 > $3737 >>> 0) {
             $3751 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i1712 >> 2] | 0;
             if (!$3751) {
              $$0$i$i$i$i119$i$i1718$ph = $__nd$0$i20$i$i$i$i$in$i$i1712;
              $__nd$0$i20$i$i$i$i$in$i$i1712$lcssa6348 = $__nd$0$i20$i$i$i$i$in$i$i1712;
              label = 1381;
              break;
             } else $__nd$0$i20$i$i$i$i$in$i$i1712$be = $3751;
            } else {
             if ($$idx2$val$i22$i$i$i$i$i$i1714 >>> 0 >= $3737 >>> 0) {
              $__nd$0$i20$i$i$i$i$in$i$i1712$lcssa = $__nd$0$i20$i$i$i$i$in$i$i1712;
              label = 1385;
              break;
             }
             $3754 = $__nd$0$i20$i$i$i$i$in$i$i1712 + 4 | 0;
             $3755 = HEAP32[$3754 >> 2] | 0;
             if (!$3755) {
              $$0$i$i$i$i119$i$i1718$ph = $3754;
              $__nd$0$i20$i$i$i$i$in$i$i1712$lcssa6348 = $__nd$0$i20$i$i$i$i$in$i$i1712;
              label = 1381;
              break;
             } else $__nd$0$i20$i$i$i$i$in$i$i1712$be = $3755;
            }
            $__nd$0$i20$i$i$i$i$in$i$i1712 = $__nd$0$i20$i$i$i$i$in$i$i1712$be;
           }
           if ((label | 0) == 1381) {
            label = 0;
            $$0$i$i$i$i119$i$i1718 = $$0$i$i$i$i119$i$i1718$ph;
            $3762 = $__nd$0$i20$i$i$i$i$in$i$i1712$lcssa6348;
            label = 1382;
            break;
           } else if ((label | 0) == 1385) {
            label = 0;
            $3770 = $__nd$0$i20$i$i$i$i$in$i$i1712$lcssa;
            label = 1386;
            break;
           }
          } while (0);
          if ((label | 0) == 1372) {
           label = 0;
           if (!$$pre$i$i$i$i$i$i1700) {
            $$0$i$i$i$i119$i$i1718 = $284;
            $3762 = $284;
            label = 1382;
           } else {
            $3757 = $3758 + 4 | 0;
            $$pre$i$i1716 = HEAP32[$3757 >> 2] | 0;
            if (!$$pre$i$i1716) {
             $$0$i$i$i$i119$i$i1718 = $3757;
             $3762 = $3758;
             label = 1382;
            } else {
             $3770 = $$pre$i$i1716;
             label = 1386;
            }
           }
          }
          if ((label | 0) == 1382) {
           label = 0;
           HEAP32[$3721 >> 2] = 0;
           HEAP32[$3721 + 4 >> 2] = 0;
           HEAP32[$3721 + 8 >> 2] = $3762;
           HEAP32[$$0$i$i$i$i119$i$i1718 >> 2] = $3721;
           $3764 = HEAP32[HEAP32[$bindings83 >> 2] >> 2] | 0;
           if (!$3764) $3767 = $3721; else {
            HEAP32[$bindings83 >> 2] = $3764;
            $3767 = HEAP32[$$0$i$i$i$i119$i$i1718 >> 2] | 0;
           }
           __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$282 >> 2] | 0, $3767);
           HEAP32[$283 >> 2] = (HEAP32[$283 >> 2] | 0) + 1;
           $3773 = $3725;
          } else if ((label | 0) == 1386) {
           label = 0;
           if (($3770 | 0) == ($3721 | 0)) $3773 = $5994; else {
            __ZdlPv($3721);
            $3773 = $5994;
           }
          }
          $3774 = HEAP32[$3773 + 4 >> 2] | 0;
          if (!$3774) {
           $$0$i$i$i$i$i1727 = $3773;
           while (1) {
            $3779 = HEAP32[$$0$i$i$i$i$i1727 + 8 >> 2] | 0;
            if ((HEAP32[$3779 >> 2] | 0) == ($$0$i$i$i$i$i1727 | 0)) {
             $$cast$i$i$i$i$i1728$lcssa = $3779;
             break;
            } else $$0$i$i$i$i$i1727 = $3779;
           }
           $$01$i$i$i$i$i1730 = $$cast$i$i$i$i$i1728$lcssa;
          } else {
           $$0$i$i$i$i$i$i1725 = $3774;
           while (1) {
            $3776 = HEAP32[$$0$i$i$i$i$i$i1725 >> 2] | 0;
            if (!$3776) {
             $$0$i$i$i$i$i$i1725$lcssa = $$0$i$i$i$i$i$i1725;
             break;
            } else $$0$i$i$i$i$i$i1725 = $3776;
           }
           $$01$i$i$i$i$i1730 = $$0$i$i$i$i$i$i1725$lcssa;
          }
          if (($$01$i$i$i$i$i1730 | 0) == ($3718 | 0)) break; else {
           $3725 = $$01$i$i$i$i$i1730;
           $5994 = $$01$i$i$i$i$i1730;
          }
         }
         $$pre5187 = HEAP32[$284 >> 2] | 0;
         $__k$val$i1736 = HEAP32[HEAP32[$3682 >> 2] >> 2] | 0;
         if (!$$pre5187) {
          $__k$val$i17365219 = $__k$val$i1736;
          label = 1406;
         } else {
          $__nd$0$i$i1737 = $$pre5187;
          while (1) {
           $3789 = HEAP32[$__nd$0$i$i1737 + 16 >> 2] | 0;
           if ($3789 >>> 0 > $__k$val$i1736 >>> 0) {
            $3791 = HEAP32[$__nd$0$i$i1737 >> 2] | 0;
            if (!$3791) {
             $$lcssa6352 = $__nd$0$i$i1737;
             $__nd$0$i$i1737$lcssa6350 = $__nd$0$i$i1737;
             label = 1401;
             break;
            } else $__nd$0$be$in$i$i1739 = $3791;
           } else {
            if ($3789 >>> 0 >= $__k$val$i1736 >>> 0) {
             $__nd$0$i$i1737$lcssa = $__nd$0$i$i1737;
             label = 1407;
             break;
            }
            $3794 = $__nd$0$i$i1737 + 4 | 0;
            $3795 = HEAP32[$3794 >> 2] | 0;
            if (!$3795) {
             $$lcssa6351 = $3794;
             $__nd$0$i$i1737$lcssa6349 = $__nd$0$i$i1737;
             label = 1405;
             break;
            } else $__nd$0$be$in$i$i1739 = $3795;
           }
           $__nd$0$i$i1737 = $__nd$0$be$in$i$i1739;
          }
          if ((label | 0) == 1401) {
           label = 0;
           HEAP32[$__parent$i1735 >> 2] = $__nd$0$i$i1737$lcssa6350;
           $$0$i7$i1744 = $$lcssa6352;
           $3805 = $__nd$0$i$i1737$lcssa6350;
           $__k$val$i17365217 = $__k$val$i1736;
           label = 1408;
           break;
          } else if ((label | 0) == 1405) {
           label = 0;
           HEAP32[$__parent$i1735 >> 2] = $__nd$0$i$i1737$lcssa6349;
           $$0$i7$i1744 = $$lcssa6351;
           $3805 = $__nd$0$i$i1737$lcssa6349;
           $__k$val$i17365217 = $__k$val$i1736;
           label = 1408;
           break;
          } else if ((label | 0) == 1407) {
           label = 0;
           HEAP32[$__parent$i1735 >> 2] = $__nd$0$i$i1737$lcssa;
           if (!$__nd$0$i$i1737$lcssa) {
            $$0$i7$i1744 = $__parent$i1735;
            $3805 = 0;
            $__k$val$i17365217 = $__k$val$i1736;
            label = 1408;
            break;
           } else {
            $__r$0$i1748 = $__nd$0$i$i1737$lcssa;
            break;
           }
          }
         }
        } while (0);
        if ((label | 0) == 1406) {
         label = 0;
         HEAP32[$__parent$i1735 >> 2] = $284;
         $$0$i7$i1744 = $284;
         $3805 = $284;
         $__k$val$i17365217 = $__k$val$i17365219;
         label = 1408;
        }
        if ((label | 0) == 1408) {
         label = 0;
         __THREW__ = 0;
         $3798 = invoke_ii(67, 24) | 0;
         $3799 = __THREW__;
         __THREW__ = 0;
         if ($3799 & 1) {
          label = 1414;
          break L1;
         }
         HEAP32[$3798 + 16 >> 2] = $__k$val$i17365217;
         HEAP32[$3798 + 20 >> 2] = 0;
         HEAP32[$3798 >> 2] = 0;
         HEAP32[$3798 + 4 >> 2] = 0;
         HEAP32[$3798 + 8 >> 2] = $3805;
         HEAP32[$$0$i7$i1744 >> 2] = $3798;
         $3807 = HEAP32[HEAP32[$bindings83 >> 2] >> 2] | 0;
         if (!$3807) $3810 = $3798; else {
          HEAP32[$bindings83 >> 2] = $3807;
          $3810 = HEAP32[$$0$i7$i1744 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$282 >> 2] | 0, $3810);
         HEAP32[$283 >> 2] = (HEAP32[$283 >> 2] | 0) + 1;
         $__r$0$i1748 = $3798;
        }
        HEAP32[$__r$0$i1748 + 20 >> 2] = $3717;
        __THREW__ = 0;
        invoke_viiiiii(19, $195 | 0, $2809 | 0, $3679 | 0, HEAP32[$3679 + 20 >> 2] | 0, HEAP32[$3679 + 24 >> 2] | 0, $bindings83 | 0);
        $3818 = __THREW__;
        __THREW__ = 0;
        if ($3818 & 1) {
         label = 1414;
         break L1;
        }
        $3821 = HEAP32[$3679 + 40 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings83, HEAP32[$284 >> 2] | 0);
        $$2138$ph = 1;
        $$414$ph = $3821;
        label = 1747;
        break;
       }
      case 13:
       {
        HEAP32[$108 >> 2] = 0;
        HEAP32[$285 >> 2] = 0;
        HEAP32[$286 >> 2] = 0;
        __THREW__ = 0;
        $3826 = invoke_ii(67, 12) | 0;
        $3827 = __THREW__;
        __THREW__ = 0;
        if ($3827 & 1) {
         label = 1417;
         break L1;
        }
        HEAP32[$108 >> 2] = $3826;
        HEAP32[$286 >> 2] = $3826 + 12;
        HEAP32[$3826 >> 2] = 18;
        HEAP32[$3826 + 4 >> 2] = 19;
        HEAP32[$3826 + 8 >> 2] = 1;
        HEAP32[$285 >> 2] = $3826 + 12;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 13, $args68 | 0, $108 | 0);
        $3833 = __THREW__;
        __THREW__ = 0;
        if ($3833 & 1) {
         $$lcssa6751 = $3826;
         label = 1421;
         break L1;
        }
        HEAP32[$285 >> 2] = $3826;
        __ZdlPv($3826);
        $args68$idx377$val = HEAP32[$args68 >> 2] | 0;
        $3840 = HEAP32[$args68$idx377$val + 24 >> 2] | 0;
        __THREW__ = 0;
        invoke_viii(11, $109 | 0, HEAP32[$args68$idx377$val + 8 >> 2] | 0, (HEAP8[$args68$idx377$val + 40 >> 0] | 0) == 0 | 0);
        $3844 = __THREW__;
        __THREW__ = 0;
        if ($3844 & 1) {
         label = 1008;
         break L1;
        }
        $3846 = HEAP32[$109 >> 2] | 0;
        do if (($3846 | 0) == ($287 | 0)) $found$0$off0 = 0; else {
         $3848 = $3840 + 8 | 0;
         $3849 = HEAP8[$3848 >> 0] | 0;
         $3851 = ($3849 & 1) == 0;
         $3853 = ($3849 & 255) >>> 1;
         $3854 = $3848 + 1 | 0;
         $3855 = $3840 + 16 | 0;
         $3856 = $3840 + 12 | 0;
         $3860 = $3846;
         L1438 : while (1) {
          $3861 = HEAP32[$3860 + 16 >> 2] | 0;
          $3862 = HEAP8[$3861 >> 0] | 0;
          $3864 = ($3862 & 1) == 0;
          if ($3864) $3870 = ($3862 & 255) >>> 1; else $3870 = HEAP32[$3861 + 4 >> 2] | 0;
          if ($3851) $3872 = $3853; else $3872 = HEAP32[$3856 >> 2] | 0;
          do if (($3870 | 0) == ($3872 | 0)) {
           if ($3864) $3885 = $3861 + 1 | 0; else $3885 = HEAP32[$3861 + 8 >> 2] | 0;
           if ($3851) $3886 = $3854; else $3886 = HEAP32[$3855 >> 2] | 0;
           if (!$3864) if (!(_memcmp($3885, $3886, $3870) | 0)) {
            $found$0$off0$ph = 1;
            label = 1449;
            break L1438;
           } else break;
           if (!$3870) {
            $found$0$off0$ph = 1;
            label = 1449;
            break L1438;
           }
           $__lhs_sz$03$i = $3870;
           $__lp$04$i = $3885;
           $__rp$05$i = $3886;
           while (1) {
            if ((HEAP8[$__lp$04$i >> 0] | 0) != (HEAP8[$__rp$05$i >> 0] | 0)) break;
            $__lhs_sz$03$i = $__lhs_sz$03$i + -1 | 0;
            if (!$__lhs_sz$03$i) {
             label = 1448;
             break L1438;
            } else {
             $__lp$04$i = $__lp$04$i + 1 | 0;
             $__rp$05$i = $__rp$05$i + 1 | 0;
            }
           }
          } while (0);
          $3890 = HEAP32[$3860 + 4 >> 2] | 0;
          if (!$3890) {
           $$0$i$i1779 = $3860;
           while (1) {
            $3895 = HEAP32[$$0$i$i1779 + 8 >> 2] | 0;
            if ((HEAP32[$3895 >> 2] | 0) == ($$0$i$i1779 | 0)) {
             $$cast$i$i$lcssa = $3895;
             break;
            } else $$0$i$i1779 = $3895;
           }
           $$01$i$i1781 = $$cast$i$i$lcssa;
          } else {
           $$0$i$i$i1778 = $3890;
           while (1) {
            $3892 = HEAP32[$$0$i$i$i1778 >> 2] | 0;
            if (!$3892) {
             $$0$i$i$i1778$lcssa = $$0$i$i$i1778;
             break;
            } else $$0$i$i$i1778 = $3892;
           }
           $$01$i$i1781 = $$0$i$i$i1778$lcssa;
          }
          if (($$01$i$i1781 | 0) == ($287 | 0)) {
           $found$0$off0$ph = 0;
           label = 1449;
           break;
          } else $3860 = $$01$i$i1781;
         }
         if ((label | 0) == 1448) {
          label = 0;
          $found$0$off0 = 1;
          break;
         } else if ((label | 0) == 1449) {
          label = 0;
          $found$0$off0 = $found$0$off0$ph;
          break;
         }
        } while (0);
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($109, HEAP32[$287 >> 2] | 0);
        HEAP32[$211 >> 2] = 1;
        HEAP8[$202 >> 0] = $found$0$off0;
        HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32696 + 0 >> 0] | 0;
        HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32696 + 1 >> 0] | 0;
        HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32696 + 2 >> 0] | 0;
        HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32696 + 3 >> 0] | 0;
        HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32696 + 4 >> 0] | 0;
        HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32696 + 5 >> 0] | 0;
        HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32696 + 6 >> 0] | 0;
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 14:
       {
        $args68$idx$val = HEAP32[$args68 >> 2] | 0;
        if (((HEAP32[$252 >> 2] | 0) - $args68$idx$val | 0) != 16) {
         $$lcssa6586 = $2809;
         label = 1452;
         break L1;
        }
        $3916 = HEAP32[$args68$idx$val + 8 >> 2] | 0;
        $3917 = HEAP32[$args68$idx$val >> 2] | 0;
        if (($3917 | 0) == 18) {
         __THREW__ = 0;
         invoke_viii(11, $fields87 | 0, $3916 | 0, 1);
         $3918 = __THREW__;
         __THREW__ = 0;
         if ($3918 & 1) {
          label = 1008;
          break L1;
         }
         $3921 = +((HEAP32[$288 >> 2] | 0) >>> 0);
         HEAP32[$211 >> 2] = 2;
         HEAPF64[$251 >> 3] = $3921;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields87, HEAP32[$289 >> 2] | 0);
         $$2138$ph = 0;
         $$414$ph = $$111$ph4280;
         label = 1747;
         break L1013;
        } else if (($3917 | 0) == 17) {
         $3939 = $3916 + 28 | 0;
         $3947 = +((HEAP32[$3939 + 4 >> 2] | 0) - (HEAP32[$3939 >> 2] | 0) >> 2 >>> 0);
         HEAP32[$211 >> 2] = 2;
         HEAPF64[$251 >> 3] = $3947;
         $$2138$ph = 0;
         $$414$ph = $$111$ph4280;
         label = 1747;
         break L1013;
        } else if (($3917 | 0) == 16) {
         $3928 = +((HEAP32[$3916 + 12 >> 2] | 0) - (HEAP32[$3916 + 8 >> 2] | 0) >> 2 >>> 0);
         HEAP32[$211 >> 2] = 2;
         HEAPF64[$251 >> 3] = $3928;
         $$2138$ph = 0;
         $$414$ph = $$111$ph4280;
         label = 1747;
         break L1013;
        } else if (($3917 | 0) == 19) {
         $3930 = HEAP8[$3916 + 8 >> 0] | 0;
         if (!($3930 & 1)) $3938 = ($3930 & 255) >>> 1; else $3938 = HEAP32[$3916 + 12 >> 2] | 0;
         HEAP32[$211 >> 2] = 2;
         HEAPF64[$251 >> 3] = +($3938 >>> 0);
         $$2138$ph = 0;
         $$414$ph = $$111$ph4280;
         label = 1747;
         break L1013;
        } else {
         $$lcssa6587 = $2809;
         label = 1467;
         break L1;
        }
        break;
       }
      case 15:
       {
        HEAP32[$113 >> 2] = 0;
        HEAP32[$290 >> 2] = 0;
        HEAP32[$291 >> 2] = 0;
        __THREW__ = 0;
        $3964 = invoke_ii(67, 8) | 0;
        $3965 = __THREW__;
        __THREW__ = 0;
        if ($3965 & 1) {
         label = 1477;
         break L1;
        }
        HEAP32[$113 >> 2] = $3964;
        HEAP32[$291 >> 2] = $3964 + 8;
        HEAP32[$3964 >> 2] = 18;
        HEAP32[$3964 + 4 >> 2] = 1;
        HEAP32[$290 >> 2] = $3964 + 8;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 15, $args68 | 0, $113 | 0);
        $3970 = __THREW__;
        __THREW__ = 0;
        if ($3970 & 1) {
         $$lcssa6746 = $3964;
         label = 1483;
         break L1;
        }
        HEAP32[$290 >> 2] = $3964;
        __ZdlPv($3964);
        $args68$idx382$val = HEAP32[$args68 >> 2] | 0;
        $3975 = HEAP32[$args68$idx382$val + 8 >> 2] | 0;
        $3977 = HEAP8[$args68$idx382$val + 24 >> 0] | 0;
        HEAP32[$292 >> 2] = 0;
        HEAP32[$293 >> 2] = 0;
        HEAP32[$fields90 >> 2] = $294;
        __THREW__ = 0;
        invoke_viii(11, $114 | 0, $3975 | 0, $3977 << 24 >> 24 == 0 | 0);
        $3979 = __THREW__;
        __THREW__ = 0;
        if ($3979 & 1) {
         label = 1485;
         break L1;
        }
        $3981 = HEAP32[$114 >> 2] | 0;
        if (($3981 | 0) != ($295 | 0)) {
         $3996 = $3981;
         while (1) {
          __THREW__ = 0;
          invoke_viii(9, $6 | 0, $fields90 | 0, HEAP32[$3996 + 16 >> 2] | 0);
          $3998 = __THREW__;
          __THREW__ = 0;
          if ($3998 & 1) {
           label = 1487;
           break L1;
          }
          $4001 = HEAP32[$3996 + 4 >> 2] | 0;
          if (!$4001) {
           $$0$i$i1820 = $3996;
           while (1) {
            $4006 = HEAP32[$$0$i$i1820 + 8 >> 2] | 0;
            if ((HEAP32[$4006 >> 2] | 0) == ($$0$i$i1820 | 0)) {
             $$cast$i$i1821$lcssa = $4006;
             break;
            } else $$0$i$i1820 = $4006;
           }
           $$01$i$i1823 = $$cast$i$i1821$lcssa;
          } else {
           $$0$i$i$i1818 = $4001;
           while (1) {
            $4003 = HEAP32[$$0$i$i$i1818 >> 2] | 0;
            if (!$4003) {
             $$0$i$i$i1818$lcssa = $$0$i$i$i1818;
             break;
            } else $$0$i$i$i1818 = $4003;
           }
           $$01$i$i1823 = $$0$i$i$i1818$lcssa;
          }
          if (($$01$i$i1823 | 0) == ($295 | 0)) break; else $3996 = $$01$i$i1823;
         }
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($114, HEAP32[$295 >> 2] | 0);
        HEAP32[$116 >> 2] = 0;
        HEAP32[$296 >> 2] = 0;
        HEAP32[$297 >> 2] = 0;
        __THREW__ = 0;
        invoke_viii(12, $115 | 0, $this | 0, $116 | 0);
        $3984 = __THREW__;
        __THREW__ = 0;
        if ($3984 & 1) {
         label = 1559;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$115 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$115 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$115 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$115 + 12 >> 2];
        $$pre5188 = HEAP32[$202 >> 2] | 0;
        $$pre5189 = HEAP32[$fields90 >> 2] | 0;
        $4010 = $$pre5188 + 8 | 0;
        if (($$pre5189 | 0) != ($294 | 0)) {
         $4012 = $$pre5188 + 12 | 0;
         $4013 = $$pre5188 + 16 | 0;
         $4015 = $$pre5189;
         while (1) {
          $4014 = $4015 + 16 | 0;
          __THREW__ = 0;
          $4016 = invoke_ii(67, 56) | 0;
          $4017 = __THREW__;
          __THREW__ = 0;
          if ($4017 & 1) {
           label = 1484;
           break L1;
          }
          $4019 = HEAP32[$203 >> 2] | 0;
          HEAP32[$4016 >> 2] = 41592;
          $4020 = $4016 + 5 | 0;
          HEAP8[$4020 >> 0] = 0;
          HEAP32[$4016 + 24 >> 2] = $4019;
          $4022 = $4016 + 28 | 0;
          $4023 = $4016 + 32 | 0;
          HEAP32[$4023 >> 2] = 0;
          $4024 = $4016 + 36 | 0;
          HEAP32[$4024 >> 2] = 0;
          HEAP32[$4022 >> 2] = $4023;
          $4025 = $4016 + 40 | 0;
          HEAP32[$4025 >> 2] = 0;
          HEAP32[$4016 + 44 >> 2] = 0;
          HEAP32[$4016 + 48 >> 2] = 0;
          $4028 = HEAP32[$205 >> 2] | 0;
          $4029 = HEAP32[$206 >> 2] | 0;
          do if ($4028 >>> 0 < $4029 >>> 0) {
           if (!$4028) $4033 = 0; else {
            HEAP32[$4028 >> 2] = $4016;
            $4033 = HEAP32[$205 >> 2] | 0;
           }
           $4032 = $4033 + 4 | 0;
           HEAP32[$205 >> 2] = $4032;
           $$idx1$val$i$i1849 = $4032;
          } else {
           $this$idx2$val$i$i$i$i1834 = HEAP32[$204 >> 2] | 0;
           $4038 = ($4028 - $this$idx2$val$i$i$i$i1834 >> 2) + 1 | 0;
           if ($4038 >>> 0 > 1073741823) {
            __THREW__ = 0;
            invoke_vi(182, $204 | 0);
            $4040 = __THREW__;
            __THREW__ = 0;
            if ($4040 & 1) {
             label = 1484;
             break L1;
            }
            $$idx1$val$i$i$i$i$i$i1837 = HEAP32[$206 >> 2] | 0;
            $4043 = HEAP32[$204 >> 2] | 0;
           } else {
            $$idx1$val$i$i$i$i$i$i1837 = $4029;
            $4043 = $this$idx2$val$i$i$i$i1834;
           }
           $4044 = $4043;
           $4045 = $$idx1$val$i$i$i$i$i$i1837 - $4044 | 0;
           if ($4045 >> 2 >>> 0 < 536870911) {
            $4051 = $4045 >> 1;
            $4053 = $4051 >>> 0 < $4038 >>> 0 ? $4038 : $4051;
            $4055 = (HEAP32[$205 >> 2] | 0) - $4044 | 0;
            $4056 = $4055 >> 2;
            if (!$4053) {
             $$0$i8$i$i$i$i1843 = 0;
             $4063 = 0;
             $4064 = $4056;
             $4068 = $4055;
            } else {
             $$0$i7$i$i$i$i1842 = $4053;
             $5995 = $4056;
             $5996 = $4055;
             label = 1510;
            }
           } else {
            $4049 = (HEAP32[$205 >> 2] | 0) - $4044 | 0;
            $$0$i7$i$i$i$i1842 = 1073741823;
            $5995 = $4049 >> 2;
            $5996 = $4049;
            label = 1510;
           }
           if ((label | 0) == 1510) {
            label = 0;
            __THREW__ = 0;
            $4059 = invoke_ii(67, $$0$i7$i$i$i$i1842 << 2 | 0) | 0;
            $4060 = __THREW__;
            __THREW__ = 0;
            if ($4060 & 1) {
             label = 1484;
             break L1;
            }
            $$0$i8$i$i$i$i1843 = $$0$i7$i$i$i$i1842;
            $4063 = $4059;
            $4064 = $5995;
            $4068 = $5996;
           }
           $4062 = $4063 + ($4064 << 2) | 0;
           if ($4062) HEAP32[$4062 >> 2] = $4016;
           $4067 = $4063 + ($4064 + 1 << 2) | 0;
           _memcpy($4063 | 0, $4043 | 0, $4068 | 0) | 0;
           HEAP32[$204 >> 2] = $4063;
           HEAP32[$205 >> 2] = $4067;
           HEAP32[$206 >> 2] = $4063 + ($$0$i8$i$i$i$i1843 << 2);
           if (!$4043) {
            $$idx1$val$i$i1849 = $4067;
            break;
           }
           __ZdlPv($4043);
           $$idx1$val$i$i1849 = HEAP32[$205 >> 2] | 0;
          } while (0);
          HEAP8[$4016 + 4 >> 0] = HEAP8[$207 >> 0] | 0;
          $4075 = $$idx1$val$i$i1849 - (HEAP32[$204 >> 2] | 0) >> 2;
          HEAP32[$208 >> 2] = $4075;
          do if ($4075 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) {
           if (!(+($4075 >>> 0) > +HEAPF64[$209 >> 3] * +((HEAP32[$210 >> 2] | 0) >>> 0))) break;
           __THREW__ = 0;
           invoke_vii(62, $this | 0, $4016 | 0);
           $4084 = __THREW__;
           __THREW__ = 0;
           if ($4084 & 1) {
            label = 1484;
            break L1;
           }
           __THREW__ = 0;
           invoke_vii(63, $195 | 0, $this | 0);
           $4086 = __THREW__;
           __THREW__ = 0;
           if ($4086 & 1) {
            label = 1484;
            break L1;
           }
           if (HEAP32[$211 >> 2] & 16) {
            __THREW__ = 0;
            invoke_vii(62, $this | 0, HEAP32[$202 >> 2] | 0);
            $4092 = __THREW__;
            __THREW__ = 0;
            if ($4092 & 1) {
             label = 1484;
             break L1;
            }
           }
           $4095 = (HEAP8[$207 >> 0] | 0) + 1 << 24 >> 24;
           HEAP8[$207 >> 0] = $4095;
           $$idx6$val11$i$i1853 = HEAP32[$$idx6$i$i >> 2] | 0;
           $$idx7$val12$i$i1854 = HEAP32[$205 >> 2] | 0;
           if (($$idx7$val12$i$i1854 | 0) == ($$idx6$val11$i$i1853 | 0)) $$lcssa$i$i1873 = 0; else {
            $$idx6$val14$i$i1857 = $$idx6$val11$i$i1853;
            $$idx7$val18$i$i1856 = $$idx7$val12$i$i1854;
            $4102 = $4095;
            $i$013$i$i1858 = 0;
            while (1) {
             $4098 = HEAP32[$$idx6$val14$i$i1857 + ($i$013$i$i1858 << 2) >> 2] | 0;
             if ((HEAP8[$4098 + 4 >> 0] | 0) == $4102 << 24 >> 24) {
              $$idx6$val$i$i1869 = $$idx6$val14$i$i1857;
              $$idx7$val$i$i1868 = $$idx7$val18$i$i1856;
              $i$1$i$i1870 = $i$013$i$i1858;
             } else {
              if (!$4098) {
               $$idx4$val$i$i1863 = $$idx6$val14$i$i1857;
               $$idx5$val$i$i1862 = $$idx7$val18$i$i1856;
              } else {
               FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4098 >> 2] | 0) + 4 >> 2] & 255]($4098);
               $$idx4$val$i$i1863 = HEAP32[$$idx6$i$i >> 2] | 0;
               $$idx5$val$i$i1862 = HEAP32[$205 >> 2] | 0;
              }
              $4111 = ($$idx5$val$i$i1862 - $$idx4$val$i$i1863 >> 2) + -1 | 0;
              if (($i$013$i$i1858 | 0) == ($4111 | 0)) {
               $$idx6$val$pre$i$i1866 = $$idx4$val$i$i1863;
               $4116 = $$idx5$val$i$i1862;
              } else {
               HEAP32[$$idx4$val$i$i1863 + ($i$013$i$i1858 << 2) >> 2] = HEAP32[$$idx4$val$i$i1863 + ($4111 << 2) >> 2];
               $$idx6$val$pre$i$i1866 = HEAP32[$$idx6$i$i >> 2] | 0;
               $4116 = HEAP32[$205 >> 2] | 0;
              }
              $scevgep4$i$i$i$i$i1867 = $4116 + -4 | 0;
              HEAP32[$205 >> 2] = $scevgep4$i$i$i$i$i1867;
              $$idx6$val$i$i1869 = $$idx6$val$pre$i$i1866;
              $$idx7$val$i$i1868 = $scevgep4$i$i$i$i$i1867;
              $i$1$i$i1870 = $i$013$i$i1858 + -1 | 0;
             }
             $4118 = $i$1$i$i1870 + 1 | 0;
             $4122 = $$idx7$val$i$i1868 - $$idx6$val$i$i1869 >> 2;
             if ($4118 >>> 0 >= $4122 >>> 0) {
              $$lcssa6347 = $4122;
              break;
             }
             $$idx6$val14$i$i1857 = $$idx6$val$i$i1869;
             $$idx7$val18$i$i1856 = $$idx7$val$i$i1868;
             $4102 = HEAP8[$207 >> 0] | 0;
             $i$013$i$i1858 = $4118;
            }
            $$lcssa$i$i1873 = $$lcssa6347;
           }
           HEAP32[$208 >> 2] = $$lcssa$i$i1873;
           HEAP32[$210 >> 2] = $$lcssa$i$i1873;
          } while (0);
          $4124 = HEAP32[$4012 >> 2] | 0;
          do if (($4124 | 0) == (HEAP32[$4013 >> 2] | 0)) {
           $this$idx2$val$i$i1885 = HEAP32[$4010 >> 2] | 0;
           $4134 = ($4124 - $this$idx2$val$i$i1885 >> 2) + 1 | 0;
           if ($4134 >>> 0 > 1073741823) {
            __THREW__ = 0;
            invoke_vi(182, $4010 | 0);
            $4136 = __THREW__;
            __THREW__ = 0;
            if ($4136 & 1) {
             label = 1484;
             break L1;
            }
            $$idx1$val$i$i$i$i1888 = HEAP32[$4013 >> 2] | 0;
            $4139 = HEAP32[$4010 >> 2] | 0;
           } else {
            $$idx1$val$i$i$i$i1888 = $4124;
            $4139 = $this$idx2$val$i$i1885;
           }
           $4140 = $4139;
           $4141 = $$idx1$val$i$i$i$i1888 - $4140 | 0;
           if ($4141 >> 2 >>> 0 < 536870911) {
            $4147 = $4141 >> 1;
            $4149 = $4147 >>> 0 < $4134 >>> 0 ? $4134 : $4147;
            $4151 = (HEAP32[$4012 >> 2] | 0) - $4140 | 0;
            $4152 = $4151 >> 2;
            if (!$4149) {
             $$0$i8$i$i1894 = 0;
             $4159 = 0;
             $4160 = $4152;
             $4164 = $4151;
            } else {
             $$0$i7$i$i1893 = $4149;
             $5997 = $4152;
             $5998 = $4151;
             label = 1544;
            }
           } else {
            $4145 = (HEAP32[$4012 >> 2] | 0) - $4140 | 0;
            $$0$i7$i$i1893 = 1073741823;
            $5997 = $4145 >> 2;
            $5998 = $4145;
            label = 1544;
           }
           if ((label | 0) == 1544) {
            label = 0;
            __THREW__ = 0;
            $4155 = invoke_ii(67, $$0$i7$i$i1893 << 2 | 0) | 0;
            $4156 = __THREW__;
            __THREW__ = 0;
            if ($4156 & 1) {
             label = 1484;
             break L1;
            }
            $$0$i8$i$i1894 = $$0$i7$i$i1893;
            $4159 = $4155;
            $4160 = $5997;
            $4164 = $5998;
           }
           $4158 = $4159 + ($4160 << 2) | 0;
           if ($4158) HEAP32[$4158 >> 2] = $4016;
           _memcpy($4159 | 0, $4139 | 0, $4164 | 0) | 0;
           HEAP32[$4010 >> 2] = $4159;
           HEAP32[$4012 >> 2] = $4159 + ($4160 + 1 << 2);
           HEAP32[$4013 >> 2] = $4159 + ($$0$i8$i$i1894 << 2);
           if (!$4139) break;
           __ZdlPv($4139);
          } else {
           if (!$4124) $4129 = 0; else {
            HEAP32[$4124 >> 2] = $4016;
            $4129 = HEAP32[$4012 >> 2] | 0;
           }
           HEAP32[$4012 >> 2] = $4129 + 4;
          } while (0);
          __THREW__ = 0;
          invoke_viii(14, $117 | 0, $this | 0, $4014 | 0);
          $4166 = __THREW__;
          __THREW__ = 0;
          if ($4166 & 1) {
           label = 1484;
           break L1;
          }
          $4168 = $4016 + 8 | 0;
          HEAP32[$4168 + 0 >> 2] = HEAP32[$117 + 0 >> 2];
          HEAP32[$4168 + 4 >> 2] = HEAP32[$117 + 4 >> 2];
          HEAP32[$4168 + 8 >> 2] = HEAP32[$117 + 8 >> 2];
          HEAP32[$4168 + 12 >> 2] = HEAP32[$117 + 12 >> 2];
          HEAP8[$4020 >> 0] = 1;
          HEAP32[$4025 >> 2] = 0;
          __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4022, HEAP32[$4023 >> 2] | 0);
          HEAP32[$4024 >> 2] = 0;
          HEAP32[$4022 >> 2] = $4023;
          HEAP32[$4023 >> 2] = 0;
          $4171 = HEAP32[$4015 + 4 >> 2] | 0;
          if (!$4171) {
           $$0$i$i1904 = $4015;
           while (1) {
            $4176 = HEAP32[$$0$i$i1904 + 8 >> 2] | 0;
            if ((HEAP32[$4176 >> 2] | 0) == ($$0$i$i1904 | 0)) {
             $$cast$i$i1905$lcssa = $4176;
             break;
            } else $$0$i$i1904 = $4176;
           }
           $$01$i$i1907 = $$cast$i$i1905$lcssa;
          } else {
           $$0$i$i$i1902 = $4171;
           while (1) {
            $4173 = HEAP32[$$0$i$i$i1902 >> 2] | 0;
            if (!$4173) {
             $$0$i$i$i1902$lcssa = $$0$i$i$i1902;
             break;
            } else $$0$i$i$i1902 = $4173;
           }
           $$01$i$i1907 = $$0$i$i$i1902$lcssa;
          }
          if (($$01$i$i1907 | 0) == ($294 | 0)) break; else $4015 = $$01$i$i1907;
         }
        }
        __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($fields90, HEAP32[$294 >> 2] | 0);
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 16:
       {
        HEAP32[$118 >> 2] = 0;
        HEAP32[$298 >> 2] = 0;
        HEAP32[$299 >> 2] = 0;
        __THREW__ = 0;
        $4184 = invoke_ii(67, 4) | 0;
        $4185 = __THREW__;
        __THREW__ = 0;
        if ($4185 & 1) {
         label = 1565;
         break L1;
        }
        HEAP32[$118 >> 2] = $4184;
        HEAP32[$299 >> 2] = $4184 + 4;
        HEAP32[$4184 >> 2] = 19;
        HEAP32[$298 >> 2] = $4184 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 16, $args68 | 0, $118 | 0);
        $4189 = __THREW__;
        __THREW__ = 0;
        if ($4189 & 1) {
         $$lcssa6742 = $4184;
         label = 1586;
         break L1;
        }
        HEAP32[$298 >> 2] = $4184;
        __ZdlPv($4184);
        $4194 = HEAP32[(HEAP32[$args68 >> 2] | 0) + 8 >> 2] | 0;
        $4195 = $4194 + 8 | 0;
        $4196 = HEAP8[$4195 >> 0] | 0;
        $4198 = ($4196 & 1) == 0;
        if ($4198) $4203 = ($4196 & 255) >>> 1; else $4203 = HEAP32[$4194 + 12 >> 2] | 0;
        if (($4203 | 0) != 1) {
         $$lcssa6579 = $2809;
         $$lcssa6744 = $4194;
         $$lcssa6745 = $4195;
         label = 1570;
         break L1;
        }
        if ($4198) $4258 = $4195 + 1 | 0; else $4258 = HEAP32[$4194 + 16 >> 2] | 0;
        $4259 = +(HEAPU8[$4258 >> 0] | 0);
        HEAP32[$211 >> 2] = 2;
        HEAPF64[$251 >> 3] = $4259;
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 17:
       {
        HEAP32[$120 >> 2] = 0;
        HEAP32[$300 >> 2] = 0;
        HEAP32[$301 >> 2] = 0;
        __THREW__ = 0;
        $4260 = invoke_ii(67, 4) | 0;
        $4261 = __THREW__;
        __THREW__ = 0;
        if ($4261 & 1) {
         label = 1598;
         break L1;
        }
        HEAP32[$120 >> 2] = $4260;
        HEAP32[$301 >> 2] = $4260 + 4;
        HEAP32[$4260 >> 2] = 2;
        HEAP32[$300 >> 2] = $4260 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 17, $args68 | 0, $120 | 0);
        $4265 = __THREW__;
        __THREW__ = 0;
        if ($4265 & 1) {
         $$lcssa6735 = $4260;
         label = 1613;
         break L1;
        }
        HEAP32[$300 >> 2] = $4260;
        __ZdlPv($4260);
        $4271 = ~~+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3] >>> 0;
        if (($4271 | 0) < 0) {
         $$lcssa6574 = $2809;
         $$lcssa6739 = $4271;
         label = 1600;
         break L1;
        }
        if (($4271 | 0) > 127) {
         $$lcssa6575 = $2809;
         $$lcssa6740 = $4271;
         label = 1620;
         break L1;
        }
        HEAP8[$c105 >> 0] = $4271;
        __THREW__ = 0;
        invoke_viii(3, $124 | 0, $c105 | 0, 1);
        $4357 = __THREW__;
        __THREW__ = 0;
        if ($4357 & 1) {
         label = 1008;
         break L1;
        }
        __THREW__ = 0;
        invoke_viii(14, $123 | 0, $this | 0, $124 | 0);
        $4359 = __THREW__;
        __THREW__ = 0;
        if ($4359 & 1) {
         label = 1642;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$123 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$123 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$123 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$123 + 12 >> 2];
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($124);
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 18:
       {
        HEAP32[$125 >> 2] = 0;
        HEAP32[$302 >> 2] = 0;
        HEAP32[$303 >> 2] = 0;
        __THREW__ = 0;
        $4363 = invoke_ii(67, 4) | 0;
        $4364 = __THREW__;
        __THREW__ = 0;
        if ($4364 & 1) {
         label = 1645;
         break L1;
        }
        HEAP32[$125 >> 2] = $4363;
        HEAP32[$303 >> 2] = $4363 + 4;
        HEAP32[$4363 >> 2] = 2;
        HEAP32[$302 >> 2] = $4363 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 18, $args68 | 0, $125 | 0);
        $4368 = __THREW__;
        __THREW__ = 0;
        if ($4368 & 1) {
         $$lcssa6734 = $4363;
         label = 1648;
         break L1;
        }
        HEAP32[$302 >> 2] = $4363;
        __ZdlPv($4363);
        $4374 = +Math_log(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $126 | 0, $this | 0, $2809 | 0, +$4374);
        $4375 = __THREW__;
        __THREW__ = 0;
        if ($4375 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$126 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$126 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$126 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$126 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 19:
       {
        HEAP32[$127 >> 2] = 0;
        HEAP32[$304 >> 2] = 0;
        HEAP32[$305 >> 2] = 0;
        __THREW__ = 0;
        $4379 = invoke_ii(67, 4) | 0;
        $4380 = __THREW__;
        __THREW__ = 0;
        if ($4380 & 1) {
         label = 1651;
         break L1;
        }
        HEAP32[$127 >> 2] = $4379;
        HEAP32[$305 >> 2] = $4379 + 4;
        HEAP32[$4379 >> 2] = 2;
        HEAP32[$304 >> 2] = $4379 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 19, $args68 | 0, $127 | 0);
        $4384 = __THREW__;
        __THREW__ = 0;
        if ($4384 & 1) {
         $$lcssa6733 = $4379;
         label = 1654;
         break L1;
        }
        HEAP32[$304 >> 2] = $4379;
        __ZdlPv($4379);
        $4390 = +Math_exp(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
        __THREW__ = 0;
        invoke_viiid(1, $128 | 0, $this | 0, $2809 | 0, +$4390);
        $4391 = __THREW__;
        __THREW__ = 0;
        if ($4391 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$128 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$128 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$128 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$128 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 20:
       {
        HEAP32[$129 >> 2] = 0;
        HEAP32[$306 >> 2] = 0;
        HEAP32[$307 >> 2] = 0;
        __THREW__ = 0;
        $4395 = invoke_ii(67, 4) | 0;
        $4396 = __THREW__;
        __THREW__ = 0;
        if ($4396 & 1) {
         label = 1657;
         break L1;
        }
        HEAP32[$129 >> 2] = $4395;
        HEAP32[$307 >> 2] = $4395 + 4;
        HEAP32[$4395 >> 2] = 2;
        HEAP32[$306 >> 2] = $4395 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 20, $args68 | 0, $129 | 0);
        $4400 = __THREW__;
        __THREW__ = 0;
        if ($4400 & 1) {
         $$lcssa6732 = $4395;
         label = 1660;
         break L1;
        }
        HEAP32[$306 >> 2] = $4395;
        __ZdlPv($4395);
        $4406 = +_frexp(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3], $exp);
        __THREW__ = 0;
        invoke_viiid(1, $130 | 0, $this | 0, $2809 | 0, +$4406);
        $4407 = __THREW__;
        __THREW__ = 0;
        if ($4407 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$130 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$130 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$130 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$130 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 22:
       {
        HEAP32[$133 >> 2] = 0;
        HEAP32[$310 >> 2] = 0;
        HEAP32[$311 >> 2] = 0;
        __THREW__ = 0;
        $4428 = invoke_ii(67, 8) | 0;
        $4429 = __THREW__;
        __THREW__ = 0;
        if ($4429 & 1) {
         label = 1669;
         break L1;
        }
        HEAP32[$133 >> 2] = $4428;
        HEAP32[$311 >> 2] = $4428 + 8;
        HEAP32[$4428 >> 2] = 2;
        HEAP32[$4428 + 4 >> 2] = 2;
        HEAP32[$310 >> 2] = $4428 + 8;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 22, $args68 | 0, $133 | 0);
        $4434 = __THREW__;
        __THREW__ = 0;
        if ($4434 & 1) {
         $$lcssa6729 = $4428;
         label = 1674;
         break L1;
        }
        HEAP32[$310 >> 2] = $4428;
        __ZdlPv($4428);
        $args68$idx391$val = HEAP32[$args68 >> 2] | 0;
        $4439 = +HEAPF64[$args68$idx391$val + 24 >> 3];
        if ($4439 == 0.0) {
         $$lcssa6563 = $2809;
         label = 1671;
         break L1;
        }
        $4456 = +_fmod(+HEAPF64[$args68$idx391$val + 8 >> 3], $4439);
        __THREW__ = 0;
        invoke_viiid(1, $135 | 0, $this | 0, $2809 | 0, +$4456);
        $4457 = __THREW__;
        __THREW__ = 0;
        if ($4457 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$135 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$135 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$135 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$135 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 21:
       {
        HEAP32[$131 >> 2] = 0;
        HEAP32[$308 >> 2] = 0;
        HEAP32[$309 >> 2] = 0;
        __THREW__ = 0;
        $4411 = invoke_ii(67, 4) | 0;
        $4412 = __THREW__;
        __THREW__ = 0;
        if ($4412 & 1) {
         label = 1663;
         break L1;
        }
        HEAP32[$131 >> 2] = $4411;
        HEAP32[$309 >> 2] = $4411 + 4;
        HEAP32[$4411 >> 2] = 2;
        HEAP32[$308 >> 2] = $4411 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 21, $args68 | 0, $131 | 0);
        $4416 = __THREW__;
        __THREW__ = 0;
        if ($4416 & 1) {
         $$lcssa6731 = $4411;
         label = 1666;
         break L1;
        }
        HEAP32[$308 >> 2] = $4411;
        __ZdlPv($4411);
        +_frexp(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3], $exp106);
        __THREW__ = 0;
        invoke_viiid(1, $132 | 0, $this | 0, $2809 | 0, +(+(HEAP32[$exp106 >> 2] | 0)));
        $4424 = __THREW__;
        __THREW__ = 0;
        if ($4424 & 1) {
         label = 1008;
         break L1;
        };
        HEAP32[$201 + 0 >> 2] = HEAP32[$132 + 0 >> 2];
        HEAP32[$201 + 4 >> 2] = HEAP32[$132 + 4 >> 2];
        HEAP32[$201 + 8 >> 2] = HEAP32[$132 + 8 >> 2];
        HEAP32[$201 + 12 >> 2] = HEAP32[$132 + 12 >> 2];
        $$2138$ph = 0;
        $$414$ph = $$111$ph4280;
        label = 1747;
        break;
       }
      case 23:
       {
        HEAP32[$136 >> 2] = 0;
        HEAP32[$312 >> 2] = 0;
        HEAP32[$313 >> 2] = 0;
        __THREW__ = 0;
        $4459 = invoke_ii(67, 4) | 0;
        $4460 = __THREW__;
        __THREW__ = 0;
        if ($4460 & 1) {
         label = 1682;
         break L1;
        }
        HEAP32[$136 >> 2] = $4459;
        HEAP32[$313 >> 2] = $4459 + 4;
        HEAP32[$4459 >> 2] = 19;
        HEAP32[$312 >> 2] = $4459 + 4;
        __THREW__ = 0;
        invoke_viiiii(7, $this | 0, $2809 | 0, 23, $args68 | 0, $136 | 0);
        $4464 = __THREW__;
        __THREW__ = 0;
        if ($4464 & 1) {
         $$lcssa6709 = $4459;
         label = 1711;
         break L1;
        }
        HEAP32[$312 >> 2] = $4459;
        __ZdlPv($4459);
        $4469 = HEAP32[(HEAP32[$args68 >> 2] | 0) + 8 >> 2] | 0;
        $4470 = $4469 + 8 | 0;
        __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_SL_SL_($0, $314, $4470, HEAP32[$315 >> 2] | 0, $315);
        $4472 = HEAP32[$0 >> 2] | 0;
        if (($4472 | 0) == ($315 | 0)) {
         $$lcssa6555 = $2809;
         $$lcssa6715 = $4469;
         $$lcssa6720 = $4470;
         label = 1684;
         break L1;
        }
        $4474 = $4472 + 16 | 0;
        $4475 = HEAP8[$4470 >> 0] | 0;
        $4477 = ($4475 & 1) == 0;
        if ($4477) $4497 = ($4475 & 255) >>> 1; else $4497 = HEAP32[$4469 + 12 >> 2] | 0;
        $4482 = HEAP8[$4474 >> 0] | 0;
        $4484 = ($4482 & 1) == 0;
        if ($4484) $4495 = ($4482 & 255) >>> 1; else $4495 = HEAP32[$4472 + 20 >> 2] | 0;
        if ($4477) $4499 = $4470 + 1 | 0; else $4499 = HEAP32[$4469 + 16 >> 2] | 0;
        if ($4484) $4500 = $4474 + 1 | 0; else $4500 = HEAP32[$4472 + 24 >> 2] | 0;
        $4501 = _memcmp($4499, $4500, $4495 >>> 0 < $4497 >>> 0 ? $4495 : $4497) | 0;
        if (!$4501) {
         if ($4497 >>> 0 < $4495 >>> 0) {
          $$lcssa6556 = $2809;
          $$lcssa6716 = $4469;
          $$lcssa6721 = $4470;
          $$lcssa6725 = $4470;
          label = 1700;
          break L1;
         }
        } else if (($4501 | 0) < 0) {
         $$lcssa6556 = $2809;
         $$lcssa6716 = $4469;
         $$lcssa6721 = $4470;
         $$lcssa6725 = $4470;
         label = 1700;
         break L1;
        }
        __THREW__ = 0;
        $4539 = invoke_iii(32, $314 | 0, $4470 | 0) | 0;
        $4540 = __THREW__;
        __THREW__ = 0;
        if ($4540 & 1) {
         label = 1008;
         break L1;
        }
        if (!(HEAP8[$4539 + 12 >> 0] | 0)) {
         __THREW__ = 0;
         invoke_viii(14, $139 | 0, $this | 0, $4539 | 0);
         $4587 = __THREW__;
         __THREW__ = 0;
         if ($4587 & 1) {
          label = 1008;
          break L1;
         };
         HEAP32[$201 + 0 >> 2] = HEAP32[$139 + 0 >> 2];
         HEAP32[$201 + 4 >> 2] = HEAP32[$139 + 4 >> 2];
         HEAP32[$201 + 8 >> 2] = HEAP32[$139 + 8 >> 2];
         HEAP32[$201 + 12 >> 2] = HEAP32[$139 + 12 >> 2];
         $$2138$ph = 0;
         $$414$ph = $$111$ph4280;
         label = 1747;
         break L1013;
        };
        HEAP32[$138 + 0 >> 2] = 0;
        HEAP32[$138 + 4 >> 2] = 0;
        HEAP32[$138 + 8 >> 2] = 0;
        $4545 = HEAP8[$4470 >> 0] | 0;
        if (!($4545 & 1)) $4553 = ($4545 & 255) >>> 1; else $4553 = HEAP32[$4469 + 12 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(14, $138 | 0, 40672, 8, $4553 + 8 | 0);
        $4554 = __THREW__;
        __THREW__ = 0;
        if ($4554 & 1) {
         label = 1725;
         break L1;
        }
        if (!(HEAP8[$4470 >> 0] & 1)) $4562 = $4470 + 1 | 0; else $4562 = HEAP32[$4469 + 16 >> 2] | 0;
        __THREW__ = 0;
        invoke_iiii(33, $138 | 0, $4562 | 0, $4553 | 0) | 0;
        $4563 = __THREW__;
        __THREW__ = 0;
        if ($4563 & 1) {
         label = 1725;
         break L1;
        }
        __THREW__ = 0;
        $4567 = invoke_iii(27, $138 | 0, 39e3) | 0;
        $4568 = __THREW__;
        __THREW__ = 0;
        if ($4568 & 1) {
         label = 1733;
         break L1;
        };
        HEAP32[$filename + 0 >> 2] = HEAP32[$4567 + 0 >> 2];
        HEAP32[$filename + 4 >> 2] = HEAP32[$4567 + 4 >> 2];
        HEAP32[$filename + 8 >> 2] = HEAP32[$4567 + 8 >> 2];
        HEAP32[$4567 + 0 >> 2] = 0;
        HEAP32[$4567 + 4 >> 2] = 0;
        HEAP32[$4567 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($138);
        if (!(HEAP8[$4539 >> 0] & 1)) $4577 = $4539 + 1 | 0; else $4577 = HEAP32[$4539 + 8 >> 2] | 0;
        __THREW__ = 0;
        $4578 = invoke_iiii(36, HEAP32[$219 >> 2] | 0, $filename | 0, $4577 | 0) | 0;
        $4579 = __THREW__;
        __THREW__ = 0;
        if ($4579 & 1) {
         label = 1734;
         break L1;
        }
        __THREW__ = 0;
        invoke_vi(184, $4578 | 0);
        $4581 = __THREW__;
        __THREW__ = 0;
        if ($4581 & 1) {
         label = 1734;
         break L1;
        }
        __ZN12_GLOBAL__N_15Stack3popEv($195);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($filename);
        $$2138$ph = 1;
        $$414$ph = $4578;
        label = 1747;
        break;
       }
      default:
       {
        $$lcssa6631 = $2811;
        label = 1737;
        break L1;
       }
      } while (0);
      if ((label | 0) == 1747) {
       label = 0;
       $$2138 = $$2138$ph;
       $$414 = $$414$ph;
       $4618 = HEAP32[$args68 >> 2] | 0;
      }
      $4620 = $4618;
      if ($4618) {
       $4621 = HEAP32[$252 >> 2] | 0;
       if (($4621 | 0) != ($4618 | 0)) HEAP32[$252 >> 2] = $4621 + (~(($4621 + -16 - $4620 | 0) >>> 4) << 4);
       __ZdlPv($4618);
      }
      if ($$2138) {
       $$010$ph = $$414;
       label = 2;
       break L428;
      } else {
       $$515 = $$414;
       label = 2344;
      }
      break;
     }
    case 1759:
     {
      label = 0;
      $4651 = HEAP32[$$idx$val$i910$lcssa6279 + -28 >> 2] | 0;
      if (!$4651) {
       $$515 = $$111$ph4280;
       label = 2344;
      } else {
       $4653 = ___dynamic_cast($4651, 38800, 39040, 0) | 0;
       if ($4653) {
        $4655 = $4653 + 8 | 0;
        HEAP32[$4655 + 0 >> 2] = HEAP32[$201 + 0 >> 2];
        HEAP32[$4655 + 4 >> 2] = HEAP32[$201 + 4 >> 2];
        HEAP32[$4655 + 8 >> 2] = HEAP32[$201 + 8 >> 2];
        HEAP32[$4655 + 12 >> 2] = HEAP32[$201 + 12 >> 2];
        HEAP8[$4653 + 5 >> 0] = 1;
        HEAP32[$4653 + 40 >> 2] = 0;
        $4658 = $4653 + 28 | 0;
        $4659 = $4653 + 32 | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4658, HEAP32[$4659 >> 2] | 0);
        HEAP32[$4653 + 36 >> 2] = 0;
        HEAP32[$4658 >> 2] = $4659;
        HEAP32[$4659 >> 2] = 0;
        $$515 = $$111$ph4280;
        label = 2344;
        break;
       }
       $4662 = ___dynamic_cast($4651, 38800, 40760, 0) | 0;
       if (!$4662) {
        $$515 = $$111$ph4280;
        label = 2344;
       } else {
        $4664 = $$idx$val$i910$lcssa6279 + -56 | 0;
        $4665 = HEAP32[$4664 >> 2] | 0;
        $$idx259$val = HEAP32[$$idx$val$i910$lcssa6279 + -40 >> 2] | 0;
        $$idx260 = $$idx$val$i910$lcssa6279 + -36 | 0;
        $$idx260$val = HEAP32[$$idx260 >> 2] | 0;
        $4667 = $$idx259$val;
        $4669 = $$idx260$val - $4667 >> 2;
        if ($4665 >>> 0 < $4669 >>> 0) {
         HEAP32[$4664 >> 2] = $4665 + 1;
         $4673 = HEAP32[$$idx259$val + ($4665 << 2) >> 2] | 0;
         if (!(HEAP8[$4673 + 5 >> 0] | 0)) {
          $$idx$val$i910$lcssa6279$lcssa6459 = $$idx$val$i910$lcssa6279;
          $$lcssa6469 = $4673;
          label = 1765;
          break L428;
         } else {
          $$515 = $$111$ph4280;
          label = 2344;
          break;
         }
        } else if (!$4669) {
         $$515 = $$111$ph4280;
         label = 2344;
         break;
        } else {
         $$idx259$val$lcssa = $$idx259$val;
         $$idx260$lcssa = $$idx260;
         $$idx260$val$lcssa = $$idx260$val;
         $$lcssa6460 = $4662;
         $$lcssa6462 = $4664;
         $$lcssa6467 = $4667;
         label = 1767;
         break L428;
        }
       }
      }
      break;
     }
    case 1770:
     {
      label = 0;
      $4699 = (__ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_($this, (HEAP32[$$idx$val$i910$lcssa6280 + -140 >> 2] | 0) + 4 | 0, $$idx$val$i910$lcssa6280 + -104 | 0, $$idx$val$i910$lcssa6280 + -88 | 0) | 0) & 1;
      HEAP32[$211 >> 2] = 1;
      HEAP8[$202 >> 0] = $4699;
      HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$32656 + 0 >> 0] | 0;
      HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$32656 + 1 >> 0] | 0;
      HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$32656 + 2 >> 0] | 0;
      HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$32656 + 3 >> 0] | 0;
      HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$32656 + 4 >> 0] | 0;
      HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$32656 + 5 >> 0] | 0;
      HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$32656 + 6 >> 0] | 0;
      $$515 = $$111$ph4280;
      label = 2344;
      break;
     }
    case 1799:
     {
      label = 0;
      $4764 = HEAP32[$$idx$val$i910$lcssa6283 + -140 >> 2] | 0;
      $4766 = HEAP32[$$idx$val$i910$lcssa6283 + -104 >> 2] | 0;
      if (($4766 | 0) == 16) {
       if ((HEAP32[$201 >> 2] | 0) != 2) {
        $$lcssa6447 = $4764;
        label = 1801;
        break L1;
       }
       $4792 = HEAP32[$$idx$val$i910$lcssa6283 + -96 >> 2] | 0;
       $4794 = ~~+HEAPF64[$251 >> 3];
       $$idx255$val = HEAP32[$4792 + 8 >> 2] | 0;
       $4798 = (HEAP32[$4792 + 12 >> 2] | 0) - $$idx255$val >> 2;
       if (!(($4794 | 0) > -1 & ($4794 | 0) < ($4798 | 0))) {
        $$lcssa6448 = $4764;
        $$lcssa6454 = $4794;
        $$lcssa6456 = $4798;
        label = 1813;
        break L1;
       }
       $4851 = HEAP32[$$idx255$val + ($4794 << 2) >> 2] | 0;
       if (!(HEAP8[$4851 + 5 >> 0] | 0)) {
        $$lcssa6449 = $4764;
        $$lcssa6458 = $4851;
        label = 1836;
        break L428;
       }
       $4855 = $4851 + 8 | 0;
       HEAP32[$201 + 0 >> 2] = HEAP32[$4855 + 0 >> 2];
       HEAP32[$201 + 4 >> 2] = HEAP32[$4855 + 4 >> 2];
       HEAP32[$201 + 8 >> 2] = HEAP32[$4855 + 8 >> 2];
       HEAP32[$201 + 12 >> 2] = HEAP32[$4855 + 12 >> 2];
       $$515 = $$111$ph4280;
       label = 2344;
       break;
      } else if (($4766 | 0) == 18) {
       $$idx$val$i910$lcssa6283$lcssa6433 = $$idx$val$i910$lcssa6283;
       $$lcssa6442 = $4764;
       label = 1837;
       break L428;
      } else if (($4766 | 0) != 19) {
       label = 1897;
       break L1;
      }
      $4898 = HEAP32[$$idx$val$i910$lcssa6283 + -96 >> 2] | 0;
      if (!$4898) {
       label = 1853;
       break L1;
      }
      if ((HEAP32[$201 >> 2] | 0) != 2) {
       $$lcssa6444 = $4764;
       label = 1855;
       break L1;
      }
      $4924 = $4898 + 8 | 0;
      $4925 = HEAP8[$4924 >> 0] | 0;
      $4927 = ($4925 & 1) == 0;
      if ($4927) $4936 = ($4925 & 255) >>> 1; else $4936 = HEAP32[$4898 + 12 >> 2] | 0;
      $4933 = ~~+HEAPF64[$251 >> 3];
      if (!(($4933 | 0) > -1 & ($4933 | 0) < ($4936 | 0))) {
       $$lcssa6445 = $4764;
       $$lcssa6450 = $4936;
       $$lcssa6452 = $4933;
       label = 1870;
       break L1;
      }
      if ($4927) $4990 = $4924 + 1 | 0; else $4990 = HEAP32[$4898 + 16 >> 2] | 0;
      HEAP8[$ch >> 0] = HEAP8[$4990 + $4933 >> 0] | 0;
      HEAP8[$316 >> 0] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($158, $ch, _strlen($ch | 0) | 0);
      __THREW__ = 0;
      invoke_viii(14, $157 | 0, $this | 0, $158 | 0);
      $4993 = __THREW__;
      __THREW__ = 0;
      if ($4993 & 1) {
       label = 1896;
       break L1;
      };
      HEAP32[$201 + 0 >> 2] = HEAP32[$157 + 0 >> 2];
      HEAP32[$201 + 4 >> 2] = HEAP32[$157 + 4 >> 2];
      HEAP32[$201 + 8 >> 2] = HEAP32[$157 + 8 >> 2];
      HEAP32[$201 + 12 >> 2] = HEAP32[$157 + 12 >> 2];
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($158);
      $$515 = $$111$ph4280;
      label = 2344;
      break;
     }
    case 1914:
     {
      label = 0;
      $5042 = HEAP32[$$idx$val$i910$lcssa6286 + -140 >> 2] | 0;
      $5043 = HEAP32[$201 >> 2] | 0;
      if (!$5043) $$pre$phi5211Z2D = $$idx$val$i910$lcssa6286 + -72 | 0; else if (($5043 | 0) == 19) {
       $5056 = HEAP32[$202 >> 2] | 0;
       $5057 = $5056 + 8 | 0;
       $5059 = __ZN9Allocator14makeIdentifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(HEAP32[$219 >> 2] | 0, $5057) | 0;
       $5060 = $$idx$val$i910$lcssa6286 + -68 | 0;
       $5061 = $$idx$val$i910$lcssa6286 + -64 | 0;
       $5062 = HEAP32[$5061 >> 2] | 0;
       $5063 = ($5062 | 0) == 0;
       do if ($5063) {
        $5064 = $$idx$val$i910$lcssa6286 + -72 | 0;
        $5999 = HEAP32[(HEAP32[$5064 >> 2] | 0) + 12 >> 2] | 0;
        $6000 = $5064;
        label = 1957;
       } else {
        $$0$ph6$i$i$i = $5061;
        $$01$ph5$i$i$i = $5062;
        L1730 : while (1) {
         $$013$i$i$i = $$01$ph5$i$i$i;
         while (1) {
          if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $5059 >>> 0) {
           $$013$i$i$i$lcssa = $$013$i$i$i;
           break;
          }
          $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
          if (!$$013$i$i$i) {
           $$0$ph6$i$i$i$lcssa6336 = $$0$ph6$i$i$i;
           label = 1929;
           break L1730;
          }
         }
         $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
         if (!$$01$ph5$i$i$i) {
          $$013$i$i$i$lcssa$lcssa = $$013$i$i$i$lcssa;
          label = 1930;
          break;
         } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
        }
        if ((label | 0) == 1929) {
         label = 0;
         $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i$lcssa6336;
        } else if ((label | 0) == 1930) {
         label = 0;
         $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa$lcssa;
        }
        if (($$0$ph$lcssa$i$i$i | 0) != ($5061 | 0)) if ((HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0 <= $5059 >>> 0) {
         $$lcssa6422 = $5042;
         $$lcssa6427 = $5056;
         $$lcssa6428 = $5057;
         label = 1933;
         break L1;
        }
        $5111 = $$idx$val$i910$lcssa6286 + -72 | 0;
        $5114 = HEAP32[(HEAP32[$5111 >> 2] | 0) + 12 >> 2] | 0;
        if ($5063) {
         $5999 = $5114;
         $6000 = $5111;
         label = 1957;
        } else {
         $__nd$0$i$i2309 = $5062;
         while (1) {
          $5116 = HEAP32[$__nd$0$i$i2309 + 16 >> 2] | 0;
          if ($5116 >>> 0 > $5059 >>> 0) {
           $5118 = HEAP32[$__nd$0$i$i2309 >> 2] | 0;
           if (!$5118) {
            $$lcssa6340 = $__nd$0$i$i2309;
            $__nd$0$i$i2309$lcssa6338 = $__nd$0$i$i2309;
            label = 1952;
            break;
           } else $__nd$0$be$in$i$i2311 = $5118;
          } else {
           if ($5116 >>> 0 >= $5059 >>> 0) {
            $__nd$0$i$i2309$lcssa = $__nd$0$i$i2309;
            label = 1958;
            break;
           }
           $5121 = $__nd$0$i$i2309 + 4 | 0;
           $5122 = HEAP32[$5121 >> 2] | 0;
           if (!$5122) {
            $$lcssa6339 = $5121;
            $__nd$0$i$i2309$lcssa6337 = $__nd$0$i$i2309;
            label = 1956;
            break;
           } else $__nd$0$be$in$i$i2311 = $5122;
          }
          $__nd$0$i$i2309 = $__nd$0$be$in$i$i2311;
         }
         if ((label | 0) == 1952) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$i$i2309$lcssa6338;
          $$0$i7$i2315 = $$lcssa6340;
          $5134 = $__nd$0$i$i2309$lcssa6338;
          $6001 = $5114;
          $6002 = $5111;
          label = 1959;
          break;
         } else if ((label | 0) == 1956) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$i$i2309$lcssa6337;
          $$0$i7$i2315 = $$lcssa6339;
          $5134 = $__nd$0$i$i2309$lcssa6337;
          $6001 = $5114;
          $6002 = $5111;
          label = 1959;
          break;
         } else if ((label | 0) == 1958) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$i$i2309$lcssa;
          if (!$__nd$0$i$i2309$lcssa) {
           $$0$i7$i2315 = $0;
           $5134 = 0;
           $6001 = $5114;
           $6002 = $5111;
           label = 1959;
           break;
          } else {
           $5145 = $5114;
           $5147 = $5111;
           $__r$0$i2317 = $__nd$0$i$i2309$lcssa;
           break;
          }
         }
        }
       } while (0);
       if ((label | 0) == 1957) {
        label = 0;
        HEAP32[$0 >> 2] = $5061;
        $$0$i7$i2315 = $5061;
        $5134 = $5061;
        $6001 = $5999;
        $6002 = $6000;
        label = 1959;
       }
       if ((label | 0) == 1959) {
        label = 0;
        $5125 = __Znwj(28) | 0;
        HEAP32[$5125 + 16 >> 2] = $5059;
        $5128 = $5125 + 20 | 0;
        HEAP32[$5128 >> 2] = 0;
        HEAP32[$5128 + 4 >> 2] = 0;
        HEAP32[$5125 >> 2] = 0;
        HEAP32[$5125 + 4 >> 2] = 0;
        HEAP32[$5125 + 8 >> 2] = $5134;
        HEAP32[$$0$i7$i2315 >> 2] = $5125;
        $5136 = HEAP32[HEAP32[$5060 >> 2] >> 2] | 0;
        if (!$5136) $5140 = $5125; else {
         HEAP32[$5060 >> 2] = $5136;
         $5140 = HEAP32[$$0$i7$i2315 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i910$lcssa6286 + -64 >> 2] | 0, $5140);
        $5141 = $$idx$val$i910$lcssa6286 + -60 | 0;
        HEAP32[$5141 >> 2] = (HEAP32[$5141 >> 2] | 0) + 1;
        $5145 = $6001;
        $5147 = $6002;
        $__r$0$i2317 = $5125;
       }
       HEAP32[$__r$0$i2317 + 20 >> 2] = $5145;
       $5149 = HEAP32[(HEAP32[$5147 >> 2] | 0) + 16 >> 2] | 0;
       $5150 = HEAP32[$5061 >> 2] | 0;
       do if (!$5150) {
        HEAP32[$0 >> 2] = $5061;
        $$0$i7$i2327 = $5061;
        $5171 = $5061;
        label = 1973;
       } else {
        $__nd$0$i$i2320 = $5150;
        while (1) {
         $5153 = HEAP32[$__nd$0$i$i2320 + 16 >> 2] | 0;
         if ($5153 >>> 0 > $5059 >>> 0) {
          $5155 = HEAP32[$__nd$0$i$i2320 >> 2] | 0;
          if (!$5155) {
           $$lcssa6344 = $__nd$0$i$i2320;
           $__nd$0$i$i2320$lcssa6342 = $__nd$0$i$i2320;
           label = 1966;
           break;
          } else $__nd$0$be$in$i$i2322 = $5155;
         } else {
          if ($5153 >>> 0 >= $5059 >>> 0) {
           $__nd$0$i$i2320$lcssa = $__nd$0$i$i2320;
           label = 1972;
           break;
          }
          $5158 = $__nd$0$i$i2320 + 4 | 0;
          $5159 = HEAP32[$5158 >> 2] | 0;
          if (!$5159) {
           $$lcssa6343 = $5158;
           $__nd$0$i$i2320$lcssa6341 = $__nd$0$i$i2320;
           label = 1970;
           break;
          } else $__nd$0$be$in$i$i2322 = $5159;
         }
         $__nd$0$i$i2320 = $__nd$0$be$in$i$i2322;
        }
        if ((label | 0) == 1966) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$i$i2320$lcssa6342;
         $$0$i7$i2327 = $$lcssa6344;
         $5171 = $__nd$0$i$i2320$lcssa6342;
         label = 1973;
         break;
        } else if ((label | 0) == 1970) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$i$i2320$lcssa6341;
         $$0$i7$i2327 = $$lcssa6343;
         $5171 = $__nd$0$i$i2320$lcssa6341;
         label = 1973;
         break;
        } else if ((label | 0) == 1972) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$i$i2320$lcssa;
         if (!$__nd$0$i$i2320$lcssa) {
          $$0$i7$i2327 = $0;
          $5171 = 0;
          label = 1973;
          break;
         } else {
          $__r$0$i2331 = $__nd$0$i$i2320$lcssa;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 1973) {
        label = 0;
        $5162 = __Znwj(28) | 0;
        HEAP32[$5162 + 16 >> 2] = $5059;
        $5165 = $5162 + 20 | 0;
        HEAP32[$5165 >> 2] = 0;
        HEAP32[$5165 + 4 >> 2] = 0;
        HEAP32[$5162 >> 2] = 0;
        HEAP32[$5162 + 4 >> 2] = 0;
        HEAP32[$5162 + 8 >> 2] = $5171;
        HEAP32[$$0$i7$i2327 >> 2] = $5162;
        $5173 = HEAP32[HEAP32[$5060 >> 2] >> 2] | 0;
        if (!$5173) $5177 = $5162; else {
         HEAP32[$5060 >> 2] = $5173;
         $5177 = HEAP32[$$0$i7$i2327 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i910$lcssa6286 + -64 >> 2] | 0, $5177);
        $5178 = $$idx$val$i910$lcssa6286 + -60 | 0;
        HEAP32[$5178 >> 2] = (HEAP32[$5178 >> 2] | 0) + 1;
        $__r$0$i2331 = $5162;
       }
       HEAP32[$__r$0$i2331 + 24 >> 2] = $5149;
       $$pre$phi5211Z2D = $5147;
      } else {
       $$lcssa6421 = $5042;
       label = 1916;
       break L1;
      }
      $5184 = HEAP32[(HEAP32[$$pre$phi5211Z2D >> 2] | 0) + 4 >> 2] | 0;
      HEAP32[$$pre$phi5211Z2D >> 2] = $5184;
      if (($5184 | 0) != ($5042 + 48 | 0)) {
       $$lcssa6429 = $5184;
       label = 1978;
       break L428;
      }
      __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($env131, $this, HEAP32[$5042 + 36 >> 2] | 0, HEAP32[$5042 + 40 >> 2] | 0);
      HEAP32[$317 >> 2] = 0;
      HEAP32[$318 >> 2] = 0;
      HEAP32[$166 >> 2] = $319;
      $$idx$val$i$i2334 = HEAP32[$env131 >> 2] | 0;
      if (($$idx$val$i$i2334 | 0) != ($320 | 0)) {
       $5194 = $$idx$val$i$i2334;
       $6003 = $$idx$val$i$i2334;
       while (1) {
        __THREW__ = 0;
        $5190 = invoke_ii(67, 24) | 0;
        $5191 = __THREW__;
        __THREW__ = 0;
        if ($5191 & 1) {
         label = 2055;
         break L1;
        }
        $5196 = $5194 + 16 | 0;
        $5198 = HEAP32[$5196 >> 2] | 0;
        $5201 = HEAP32[$5196 + 4 >> 2] | 0;
        $5202 = $5190 + 16 | 0;
        HEAP32[$5202 >> 2] = $5198;
        HEAP32[$5202 + 4 >> 2] = $5201;
        $5206 = $5198;
        $$pre$i$i$i$i$i$i2339 = HEAP32[$319 >> 2] | 0;
        do if ((HEAP32[$166 >> 2] | 0) == ($319 | 0)) {
         $5227 = $319;
         label = 1991;
        } else {
         $5208 = ($$pre$i$i$i$i$i$i2339 | 0) == 0;
         if ($5208) {
          $$0$i$i$i$i$i$i$i$i2343 = $319;
          while (1) {
           $5213 = HEAP32[$$0$i$i$i$i$i$i$i$i2343 + 8 >> 2] | 0;
           if ((HEAP32[$5213 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2343 | 0)) $$0$i$i$i$i$i$i$i$i2343 = $5213; else {
            $$cast$i$i$i$i$i$i$i$i2344$lcssa = $5213;
            break;
           }
          }
          $$01$i$i$i$i$i$i$i$i2346 = $$cast$i$i$i$i$i$i$i$i2344$lcssa;
         } else {
          $$0$i$i$i$i$i$i$i$i$i2341 = $$pre$i$i$i$i$i$i2339;
          while (1) {
           $5210 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2341 + 4 >> 2] | 0;
           if (!$5210) {
            $$0$i$i$i$i$i$i$i$i$i2341$lcssa = $$0$i$i$i$i$i$i$i$i$i2341;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i2341 = $5210;
          }
          $$01$i$i$i$i$i$i$i$i2346 = $$0$i$i$i$i$i$i$i$i$i2341$lcssa;
         }
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i2346 + 16 >> 2] | 0) >>> 0 < $5206 >>> 0) {
          $5227 = $$01$i$i$i$i$i$i$i$i2346;
          label = 1991;
         } else if ($5208) {
          $$0$i$i$i$i119$i$i2357 = $319;
          $5231 = $319;
          label = 2001;
         } else {
          $__nd$0$i20$i$i$i$i$in$i$i2351 = $$pre$i$i$i$i$i$i2339;
          while (1) {
           $$idx2$val$i22$i$i$i$i$i$i2353 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2351 + 16 >> 2] | 0;
           if ($$idx2$val$i22$i$i$i$i$i$i2353 >>> 0 > $5206 >>> 0) {
            $5220 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2351 >> 2] | 0;
            if (!$5220) {
             $$0$i$i$i$i119$i$i2357$ph = $__nd$0$i20$i$i$i$i$in$i$i2351;
             $__nd$0$i20$i$i$i$i$in$i$i2351$lcssa6345 = $__nd$0$i20$i$i$i$i$in$i$i2351;
             label = 2e3;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2351$be = $5220;
           } else {
            if ($$idx2$val$i22$i$i$i$i$i$i2353 >>> 0 >= $5206 >>> 0) {
             $__nd$0$i20$i$i$i$i$in$i$i2351$lcssa = $__nd$0$i20$i$i$i$i$in$i$i2351;
             label = 2004;
             break;
            }
            $5223 = $__nd$0$i20$i$i$i$i$in$i$i2351 + 4 | 0;
            $5224 = HEAP32[$5223 >> 2] | 0;
            if (!$5224) {
             $$0$i$i$i$i119$i$i2357$ph = $5223;
             $__nd$0$i20$i$i$i$i$in$i$i2351$lcssa6345 = $__nd$0$i20$i$i$i$i$in$i$i2351;
             label = 2e3;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2351$be = $5224;
           }
           $__nd$0$i20$i$i$i$i$in$i$i2351 = $__nd$0$i20$i$i$i$i$in$i$i2351$be;
          }
          if ((label | 0) == 2e3) {
           label = 0;
           $$0$i$i$i$i119$i$i2357 = $$0$i$i$i$i119$i$i2357$ph;
           $5231 = $__nd$0$i20$i$i$i$i$in$i$i2351$lcssa6345;
           label = 2001;
           break;
          } else if ((label | 0) == 2004) {
           label = 0;
           $5239 = $__nd$0$i20$i$i$i$i$in$i$i2351$lcssa;
           label = 2005;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 1991) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i2339) {
          $$0$i$i$i$i119$i$i2357 = $319;
          $5231 = $319;
          label = 2001;
         } else {
          $5226 = $5227 + 4 | 0;
          $$pre$i$i2355 = HEAP32[$5226 >> 2] | 0;
          if (!$$pre$i$i2355) {
           $$0$i$i$i$i119$i$i2357 = $5226;
           $5231 = $5227;
           label = 2001;
          } else {
           $5239 = $$pre$i$i2355;
           label = 2005;
          }
         }
        }
        if ((label | 0) == 2001) {
         label = 0;
         HEAP32[$5190 >> 2] = 0;
         HEAP32[$5190 + 4 >> 2] = 0;
         HEAP32[$5190 + 8 >> 2] = $5231;
         HEAP32[$$0$i$i$i$i119$i$i2357 >> 2] = $5190;
         $5233 = HEAP32[HEAP32[$166 >> 2] >> 2] | 0;
         if (!$5233) $5236 = $5190; else {
          HEAP32[$166 >> 2] = $5233;
          $5236 = HEAP32[$$0$i$i$i$i119$i$i2357 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$317 >> 2] | 0, $5236);
         HEAP32[$318 >> 2] = (HEAP32[$318 >> 2] | 0) + 1;
         $5242 = $5194;
        } else if ((label | 0) == 2005) {
         label = 0;
         if (($5239 | 0) == ($5190 | 0)) $5242 = $6003; else {
          __ZdlPv($5190);
          $5242 = $6003;
         }
        }
        $5243 = HEAP32[$5242 + 4 >> 2] | 0;
        if (!$5243) {
         $$0$i$i$i$i$i2366 = $5242;
         while (1) {
          $5248 = HEAP32[$$0$i$i$i$i$i2366 + 8 >> 2] | 0;
          if ((HEAP32[$5248 >> 2] | 0) == ($$0$i$i$i$i$i2366 | 0)) {
           $$cast$i$i$i$i$i2367$lcssa = $5248;
           break;
          } else $$0$i$i$i$i$i2366 = $5248;
         }
         $$01$i$i$i$i$i2369 = $$cast$i$i$i$i$i2367$lcssa;
        } else {
         $$0$i$i$i$i$i$i2364 = $5243;
         while (1) {
          $5245 = HEAP32[$$0$i$i$i$i$i$i2364 >> 2] | 0;
          if (!$5245) {
           $$0$i$i$i$i$i$i2364$lcssa = $$0$i$i$i$i$i$i2364;
           break;
          } else $$0$i$i$i$i$i$i2364 = $5245;
         }
         $$01$i$i$i$i$i2369 = $$0$i$i$i$i$i$i2364$lcssa;
        }
        if (($$01$i$i$i$i$i2369 | 0) == ($320 | 0)) break; else {
         $5194 = $$01$i$i$i$i$i2369;
         $6003 = $$01$i$i$i$i$i2369;
        }
       }
      }
      HEAP32[$321 >> 2] = 0;
      HEAP32[$322 >> 2] = 0;
      HEAP32[$167 >> 2] = $323;
      $$idx$val$i$i2375 = HEAP32[$$idx$val$i910$lcssa6286 + -68 >> 2] | 0;
      $5252 = $$idx$val$i910$lcssa6286 + -64 | 0;
      if (($$idx$val$i$i2375 | 0) != ($5252 | 0)) {
       $5258 = $$idx$val$i$i2375;
       $6004 = $$idx$val$i$i2375;
       while (1) {
        __THREW__ = 0;
        $5254 = invoke_ii(67, 28) | 0;
        $5255 = __THREW__;
        __THREW__ = 0;
        if ($5255 & 1) {
         label = 2056;
         break L1;
        }
        $5257 = $5258 + 16 | 0;
        $5259 = $5254 + 16 | 0;
        HEAP32[$5259 + 0 >> 2] = HEAP32[$5257 + 0 >> 2];
        HEAP32[$5259 + 4 >> 2] = HEAP32[$5257 + 4 >> 2];
        HEAP32[$5259 + 8 >> 2] = HEAP32[$5257 + 8 >> 2];
        $$pre$i$i$i$i$i$i2380 = HEAP32[$323 >> 2] | 0;
        do if ((HEAP32[$167 >> 2] | 0) == ($323 | 0)) {
         $5280 = $323;
         label = 2028;
        } else {
         $5261 = ($$pre$i$i$i$i$i$i2380 | 0) == 0;
         if ($5261) {
          $$0$i$i$i$i$i$i$i$i2384 = $323;
          while (1) {
           $5266 = HEAP32[$$0$i$i$i$i$i$i$i$i2384 + 8 >> 2] | 0;
           if ((HEAP32[$5266 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2384 | 0)) $$0$i$i$i$i$i$i$i$i2384 = $5266; else {
            $$cast$i$i$i$i$i$i$i$i2385$lcssa = $5266;
            break;
           }
          }
          $$01$i$i$i$i$i$i$i$i2387 = $$cast$i$i$i$i$i$i$i$i2385$lcssa;
         } else {
          $$0$i$i$i$i$i$i$i$i$i2382 = $$pre$i$i$i$i$i$i2380;
          while (1) {
           $5263 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2382 + 4 >> 2] | 0;
           if (!$5263) {
            $$0$i$i$i$i$i$i$i$i$i2382$lcssa = $$0$i$i$i$i$i$i$i$i$i2382;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i2382 = $5263;
          }
          $$01$i$i$i$i$i$i$i$i2387 = $$0$i$i$i$i$i$i$i$i$i2382$lcssa;
         }
         $__v$idx14$val$i$i$i$i$i$i2391 = HEAP32[$5259 >> 2] | 0;
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i2387 + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i2391 >>> 0) {
          $5280 = $$01$i$i$i$i$i$i$i$i2387;
          label = 2028;
         } else if ($5261) {
          $$0$i$i$i$i119$i$i2400 = $323;
          $5284 = $323;
          label = 2038;
         } else {
          $__nd$0$i20$i$i$i$i$in$i$i2394 = $$pre$i$i$i$i$i$i2380;
          while (1) {
           $$idx2$val$i22$i$i$i$i$i$i2396 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2394 + 16 >> 2] | 0;
           if ($$idx2$val$i22$i$i$i$i$i$i2396 >>> 0 > $__v$idx14$val$i$i$i$i$i$i2391 >>> 0) {
            $5273 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2394 >> 2] | 0;
            if (!$5273) {
             $$0$i$i$i$i119$i$i2400$ph = $__nd$0$i20$i$i$i$i$in$i$i2394;
             $__nd$0$i20$i$i$i$i$in$i$i2394$lcssa6346 = $__nd$0$i20$i$i$i$i$in$i$i2394;
             label = 2037;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2394$be = $5273;
           } else {
            if ($$idx2$val$i22$i$i$i$i$i$i2396 >>> 0 >= $__v$idx14$val$i$i$i$i$i$i2391 >>> 0) {
             $__nd$0$i20$i$i$i$i$in$i$i2394$lcssa = $__nd$0$i20$i$i$i$i$in$i$i2394;
             label = 2041;
             break;
            }
            $5276 = $__nd$0$i20$i$i$i$i$in$i$i2394 + 4 | 0;
            $5277 = HEAP32[$5276 >> 2] | 0;
            if (!$5277) {
             $$0$i$i$i$i119$i$i2400$ph = $5276;
             $__nd$0$i20$i$i$i$i$in$i$i2394$lcssa6346 = $__nd$0$i20$i$i$i$i$in$i$i2394;
             label = 2037;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2394$be = $5277;
           }
           $__nd$0$i20$i$i$i$i$in$i$i2394 = $__nd$0$i20$i$i$i$i$in$i$i2394$be;
          }
          if ((label | 0) == 2037) {
           label = 0;
           $$0$i$i$i$i119$i$i2400 = $$0$i$i$i$i119$i$i2400$ph;
           $5284 = $__nd$0$i20$i$i$i$i$in$i$i2394$lcssa6346;
           label = 2038;
           break;
          } else if ((label | 0) == 2041) {
           label = 0;
           $5292 = $__nd$0$i20$i$i$i$i$in$i$i2394$lcssa;
           label = 2042;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 2028) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i2380) {
          $$0$i$i$i$i119$i$i2400 = $323;
          $5284 = $323;
          label = 2038;
         } else {
          $5279 = $5280 + 4 | 0;
          $$pre$i$i2398 = HEAP32[$5279 >> 2] | 0;
          if (!$$pre$i$i2398) {
           $$0$i$i$i$i119$i$i2400 = $5279;
           $5284 = $5280;
           label = 2038;
          } else {
           $5292 = $$pre$i$i2398;
           label = 2042;
          }
         }
        }
        if ((label | 0) == 2038) {
         label = 0;
         HEAP32[$5254 >> 2] = 0;
         HEAP32[$5254 + 4 >> 2] = 0;
         HEAP32[$5254 + 8 >> 2] = $5284;
         HEAP32[$$0$i$i$i$i119$i$i2400 >> 2] = $5254;
         $5286 = HEAP32[HEAP32[$167 >> 2] >> 2] | 0;
         if (!$5286) $5289 = $5254; else {
          HEAP32[$167 >> 2] = $5286;
          $5289 = HEAP32[$$0$i$i$i$i119$i$i2400 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$321 >> 2] | 0, $5289);
         HEAP32[$322 >> 2] = (HEAP32[$322 >> 2] | 0) + 1;
         $5295 = $5258;
        } else if ((label | 0) == 2042) {
         label = 0;
         if (($5292 | 0) == ($5254 | 0)) $5295 = $6004; else {
          __ZdlPv($5254);
          $5295 = $6004;
         }
        }
        $5296 = HEAP32[$5295 + 4 >> 2] | 0;
        if (!$5296) {
         $$0$i$i$i$i$i2409 = $5295;
         while (1) {
          $5301 = HEAP32[$$0$i$i$i$i$i2409 + 8 >> 2] | 0;
          if ((HEAP32[$5301 >> 2] | 0) == ($$0$i$i$i$i$i2409 | 0)) {
           $$cast$i$i$i$i$i2410$lcssa = $5301;
           break;
          } else $$0$i$i$i$i$i2409 = $5301;
         }
         $$01$i$i$i$i$i2412 = $$cast$i$i$i$i$i2410$lcssa;
        } else {
         $$0$i$i$i$i$i$i2407 = $5296;
         while (1) {
          $5298 = HEAP32[$$0$i$i$i$i$i$i2407 >> 2] | 0;
          if (!$5298) {
           $$0$i$i$i$i$i$i2407$lcssa = $$0$i$i$i$i$i$i2407;
           break;
          } else $$0$i$i$i$i$i$i2407 = $5298;
         }
         $$01$i$i$i$i$i2412 = $$0$i$i$i$i$i$i2407$lcssa;
        }
        if (($$01$i$i$i$i$i2412 | 0) == ($5252 | 0)) break; else {
         $5258 = $$01$i$i$i$i$i2412;
         $6004 = $$01$i$i$i$i$i2412;
        }
       }
      }
      __THREW__ = 0;
      invoke_viiii(19, $165 | 0, $this | 0, $166 | 0, $167 | 0);
      $5305 = __THREW__;
      __THREW__ = 0;
      if ($5305 & 1) {
       label = 2057;
       break L1;
      };
      HEAP32[$201 + 0 >> 2] = HEAP32[$165 + 0 >> 2];
      HEAP32[$201 + 4 >> 2] = HEAP32[$165 + 4 >> 2];
      HEAP32[$201 + 8 >> 2] = HEAP32[$165 + 8 >> 2];
      HEAP32[$201 + 12 >> 2] = HEAP32[$165 + 12 >> 2];
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($167, HEAP32[$323 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($166, HEAP32[$319 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env131, HEAP32[$320 >> 2] | 0);
      $$515 = $$111$ph4280;
      label = 2344;
      break;
     }
    case 2060:
     {
      label = 0;
      $5322 = HEAP32[$$idx$val$i910$lcssa6287 + -140 >> 2] | 0;
      if ((HEAP32[$201 >> 2] | 0) != 16) {
       $$lcssa6417 = $5322;
       label = 2061;
       break L1;
      }
      $5342 = HEAP32[$202 >> 2] | 0;
      $$idx253 = $5342 + 8 | 0;
      if ((HEAP32[$5342 + 12 >> 2] | 0) != (HEAP32[$$idx253 >> 2] | 0)) {
       $$idx$val$i910$lcssa6287$lcssa6414 = $$idx$val$i910$lcssa6287;
       $$idx253$lcssa = $$idx253;
       $$lcssa6307$lcssa6412 = $$lcssa6307;
       $$lcssa6418 = $5322;
       label = 2073;
       break L428;
      }
      HEAP32[$324 >> 2] = 0;
      HEAP32[$325 >> 2] = 0;
      HEAP32[$171 >> 2] = $326;
      $5345 = HEAP32[$5322 + 52 >> 2] | 0;
      $5347 = HEAP32[$5322 + 56 >> 2] | 0;
      HEAP32[$327 >> 2] = 0;
      HEAP32[$328 >> 2] = 0;
      HEAP32[$172 >> 2] = $329;
      __THREW__ = 0;
      invoke_viiiiii(20, $170 | 0, $this | 0, $171 | 0, $5345 | 0, $5347 | 0, $172 | 0);
      $5348 = __THREW__;
      __THREW__ = 0;
      if ($5348 & 1) {
       label = 2072;
       break L1;
      };
      HEAP32[$201 + 0 >> 2] = HEAP32[$170 + 0 >> 2];
      HEAP32[$201 + 4 >> 2] = HEAP32[$170 + 4 >> 2];
      HEAP32[$201 + 8 >> 2] = HEAP32[$170 + 8 >> 2];
      HEAP32[$201 + 12 >> 2] = HEAP32[$170 + 12 >> 2];
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($172, HEAP32[$329 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($171, HEAP32[$326 >> 2] | 0);
      $$515 = $$111$ph4280;
      label = 2344;
      break;
     }
    case 2088:
     {
      label = 0;
      $5393 = HEAP32[$$idx$val$i910$lcssa6288 + -140 >> 2] | 0;
      $5395 = HEAP32[$$idx$val$i910$lcssa6288 + -96 >> 2] | 0;
      if ((HEAP32[$201 >> 2] | 0) != 19) {
       $$lcssa6389 = $5393;
       label = 2089;
       break L1;
      }
      $5454 = HEAP32[$202 >> 2] | 0;
      $5455 = $5454 + 8 | 0;
      $5457 = __ZN9Allocator14makeIdentifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(HEAP32[$219 >> 2] | 0, $5455) | 0;
      $5458 = $$idx$val$i910$lcssa6288 + -52 | 0;
      $5459 = $$idx$val$i910$lcssa6288 + -48 | 0;
      $5460 = HEAP32[$5459 >> 2] | 0;
      $5461 = ($5460 | 0) == 0;
      if (!$5461) {
       $$0$ph6$i$i$i2455 = $5459;
       $$01$ph5$i$i$i2456 = $5460;
       L1899 : while (1) {
        $$013$i$i$i2458 = $$01$ph5$i$i$i2456;
        while (1) {
         if ((HEAP32[$$013$i$i$i2458 + 16 >> 2] | 0) >>> 0 >= $5457 >>> 0) {
          $$013$i$i$i2458$lcssa = $$013$i$i$i2458;
          break;
         }
         $$013$i$i$i2458 = HEAP32[$$013$i$i$i2458 + 4 >> 2] | 0;
         if (!$$013$i$i$i2458) {
          $$0$ph6$i$i$i2455$lcssa6328 = $$0$ph6$i$i$i2455;
          label = 2118;
          break L1899;
         }
        }
        $$01$ph5$i$i$i2456 = HEAP32[$$013$i$i$i2458$lcssa >> 2] | 0;
        if (!$$01$ph5$i$i$i2456) {
         $$013$i$i$i2458$lcssa$lcssa = $$013$i$i$i2458$lcssa;
         label = 2119;
         break;
        } else $$0$ph6$i$i$i2455 = $$013$i$i$i2458$lcssa;
       }
       if ((label | 0) == 2118) {
        label = 0;
        $$0$ph$lcssa$i$i$i2462 = $$0$ph6$i$i$i2455$lcssa6328;
       } else if ((label | 0) == 2119) {
        label = 0;
        $$0$ph$lcssa$i$i$i2462 = $$013$i$i$i2458$lcssa$lcssa;
       }
       if (($$0$ph$lcssa$i$i$i2462 | 0) != ($5459 | 0)) if ((HEAP32[$$0$ph$lcssa$i$i$i2462 + 16 >> 2] | 0) >>> 0 <= $5457 >>> 0) {
        $$lcssa6390 = $5393;
        $$lcssa6395 = $5454;
        $$lcssa6400 = $5455;
        label = 2122;
        break L1;
       }
      }
      $5505 = $$idx$val$i910$lcssa6288 + -56 | 0;
      $$idx394 = $5395 + 8 | 0;
      $5508 = HEAP32[(HEAP32[$$idx394 >> 2] | 0) + (HEAP32[$5505 >> 2] << 2) >> 2] | 0;
      do if ($5461) {
       HEAP32[$0 >> 2] = $5459;
       $$0$i7$i2487 = $5459;
       $5524 = $5459;
       label = 2148;
      } else {
       $__nd$0$i$i2480 = $5460;
       while (1) {
        $5510 = HEAP32[$__nd$0$i$i2480 + 16 >> 2] | 0;
        if ($5510 >>> 0 > $5457 >>> 0) {
         $5512 = HEAP32[$__nd$0$i$i2480 >> 2] | 0;
         if (!$5512) {
          $$lcssa6332 = $__nd$0$i$i2480;
          $__nd$0$i$i2480$lcssa6330 = $__nd$0$i$i2480;
          label = 2141;
          break;
         } else $__nd$0$be$in$i$i2482 = $5512;
        } else {
         if ($5510 >>> 0 >= $5457 >>> 0) {
          $__nd$0$i$i2480$lcssa = $__nd$0$i$i2480;
          label = 2147;
          break;
         }
         $5515 = $__nd$0$i$i2480 + 4 | 0;
         $5516 = HEAP32[$5515 >> 2] | 0;
         if (!$5516) {
          $$lcssa6331 = $5515;
          $__nd$0$i$i2480$lcssa6329 = $__nd$0$i$i2480;
          label = 2145;
          break;
         } else $__nd$0$be$in$i$i2482 = $5516;
        }
        $__nd$0$i$i2480 = $__nd$0$be$in$i$i2482;
       }
       if ((label | 0) == 2141) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i2480$lcssa6330;
        $$0$i7$i2487 = $$lcssa6332;
        $5524 = $__nd$0$i$i2480$lcssa6330;
        label = 2148;
        break;
       } else if ((label | 0) == 2145) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i2480$lcssa6329;
        $$0$i7$i2487 = $$lcssa6331;
        $5524 = $__nd$0$i$i2480$lcssa6329;
        label = 2148;
        break;
       } else if ((label | 0) == 2147) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i2480$lcssa;
        if (!$__nd$0$i$i2480$lcssa) {
         $$0$i7$i2487 = $0;
         $5524 = 0;
         label = 2148;
         break;
        } else {
         $__r$0$i2491 = $__nd$0$i$i2480$lcssa;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 2148) {
       label = 0;
       $5519 = __Znwj(24) | 0;
       HEAP32[$5519 + 16 >> 2] = $5457;
       HEAP32[$5519 + 20 >> 2] = 0;
       HEAP32[$5519 >> 2] = 0;
       HEAP32[$5519 + 4 >> 2] = 0;
       HEAP32[$5519 + 8 >> 2] = $5524;
       HEAP32[$$0$i7$i2487 >> 2] = $5519;
       $5526 = HEAP32[HEAP32[$5458 >> 2] >> 2] | 0;
       if (!$5526) $5530 = $5519; else {
        HEAP32[$5458 >> 2] = $5526;
        $5530 = HEAP32[$$0$i7$i2487 >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i910$lcssa6288 + -48 >> 2] | 0, $5530);
       $5531 = $$idx$val$i910$lcssa6288 + -44 | 0;
       HEAP32[$5531 >> 2] = (HEAP32[$5531 >> 2] | 0) + 1;
       $__r$0$i2491 = $5519;
      }
      HEAP32[$__r$0$i2491 + 20 >> 2] = $5508;
      $5536 = (HEAP32[$5505 >> 2] | 0) + 1 | 0;
      HEAP32[$5505 >> 2] = $5536;
      $$idx$val = HEAP32[$$idx394 >> 2] | 0;
      if (($5536 | 0) != ((HEAP32[$5395 + 12 >> 2] | 0) - $$idx$val >> 2 | 0)) {
       $$idx$val$i910$lcssa6288$lcssa6385 = $$idx$val$i910$lcssa6288;
       $$idx$val$lcssa = $$idx$val;
       $$lcssa6391 = $5393;
       $$lcssa6405 = $5536;
       label = 2233;
       break L428;
      }
      __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($env139, $this, HEAP32[$5393 + 36 >> 2] | 0, HEAP32[$5393 + 40 >> 2] | 0);
      HEAP32[$330 >> 2] = 0;
      HEAP32[$331 >> 2] = 0;
      HEAP32[$178 >> 2] = $332;
      $$idx$val$i$i2494 = HEAP32[$env139 >> 2] | 0;
      if (($$idx$val$i$i2494 | 0) != ($333 | 0)) {
       $5547 = $$idx$val$i$i2494;
       $6005 = $$idx$val$i$i2494;
       while (1) {
        __THREW__ = 0;
        $5543 = invoke_ii(67, 24) | 0;
        $5544 = __THREW__;
        __THREW__ = 0;
        if ($5544 & 1) {
         label = 2228;
         break L1;
        }
        $5549 = $5547 + 16 | 0;
        $5551 = HEAP32[$5549 >> 2] | 0;
        $5554 = HEAP32[$5549 + 4 >> 2] | 0;
        $5555 = $5543 + 16 | 0;
        HEAP32[$5555 >> 2] = $5551;
        HEAP32[$5555 + 4 >> 2] = $5554;
        $5559 = $5551;
        $$pre$i$i$i$i$i$i2499 = HEAP32[$332 >> 2] | 0;
        do if ((HEAP32[$178 >> 2] | 0) == ($332 | 0)) {
         $5580 = $332;
         label = 2164;
        } else {
         $5561 = ($$pre$i$i$i$i$i$i2499 | 0) == 0;
         if ($5561) {
          $$0$i$i$i$i$i$i$i$i2503 = $332;
          while (1) {
           $5566 = HEAP32[$$0$i$i$i$i$i$i$i$i2503 + 8 >> 2] | 0;
           if ((HEAP32[$5566 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2503 | 0)) $$0$i$i$i$i$i$i$i$i2503 = $5566; else {
            $$cast$i$i$i$i$i$i$i$i2504$lcssa = $5566;
            break;
           }
          }
          $$01$i$i$i$i$i$i$i$i2506 = $$cast$i$i$i$i$i$i$i$i2504$lcssa;
         } else {
          $$0$i$i$i$i$i$i$i$i$i2501 = $$pre$i$i$i$i$i$i2499;
          while (1) {
           $5563 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2501 + 4 >> 2] | 0;
           if (!$5563) {
            $$0$i$i$i$i$i$i$i$i$i2501$lcssa = $$0$i$i$i$i$i$i$i$i$i2501;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i2501 = $5563;
          }
          $$01$i$i$i$i$i$i$i$i2506 = $$0$i$i$i$i$i$i$i$i$i2501$lcssa;
         }
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i2506 + 16 >> 2] | 0) >>> 0 < $5559 >>> 0) {
          $5580 = $$01$i$i$i$i$i$i$i$i2506;
          label = 2164;
         } else if ($5561) {
          $$0$i$i$i$i119$i$i2517 = $332;
          $5584 = $332;
          label = 2174;
         } else {
          $__nd$0$i20$i$i$i$i$in$i$i2511 = $$pre$i$i$i$i$i$i2499;
          while (1) {
           $$idx2$val$i22$i$i$i$i$i$i2513 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2511 + 16 >> 2] | 0;
           if ($$idx2$val$i22$i$i$i$i$i$i2513 >>> 0 > $5559 >>> 0) {
            $5573 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2511 >> 2] | 0;
            if (!$5573) {
             $$0$i$i$i$i119$i$i2517$ph = $__nd$0$i20$i$i$i$i$in$i$i2511;
             $__nd$0$i20$i$i$i$i$in$i$i2511$lcssa6333 = $__nd$0$i20$i$i$i$i$in$i$i2511;
             label = 2173;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2511$be = $5573;
           } else {
            if ($$idx2$val$i22$i$i$i$i$i$i2513 >>> 0 >= $5559 >>> 0) {
             $__nd$0$i20$i$i$i$i$in$i$i2511$lcssa = $__nd$0$i20$i$i$i$i$in$i$i2511;
             label = 2177;
             break;
            }
            $5576 = $__nd$0$i20$i$i$i$i$in$i$i2511 + 4 | 0;
            $5577 = HEAP32[$5576 >> 2] | 0;
            if (!$5577) {
             $$0$i$i$i$i119$i$i2517$ph = $5576;
             $__nd$0$i20$i$i$i$i$in$i$i2511$lcssa6333 = $__nd$0$i20$i$i$i$i$in$i$i2511;
             label = 2173;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2511$be = $5577;
           }
           $__nd$0$i20$i$i$i$i$in$i$i2511 = $__nd$0$i20$i$i$i$i$in$i$i2511$be;
          }
          if ((label | 0) == 2173) {
           label = 0;
           $$0$i$i$i$i119$i$i2517 = $$0$i$i$i$i119$i$i2517$ph;
           $5584 = $__nd$0$i20$i$i$i$i$in$i$i2511$lcssa6333;
           label = 2174;
           break;
          } else if ((label | 0) == 2177) {
           label = 0;
           $5592 = $__nd$0$i20$i$i$i$i$in$i$i2511$lcssa;
           label = 2178;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 2164) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i2499) {
          $$0$i$i$i$i119$i$i2517 = $332;
          $5584 = $332;
          label = 2174;
         } else {
          $5579 = $5580 + 4 | 0;
          $$pre$i$i2515 = HEAP32[$5579 >> 2] | 0;
          if (!$$pre$i$i2515) {
           $$0$i$i$i$i119$i$i2517 = $5579;
           $5584 = $5580;
           label = 2174;
          } else {
           $5592 = $$pre$i$i2515;
           label = 2178;
          }
         }
        }
        if ((label | 0) == 2174) {
         label = 0;
         HEAP32[$5543 >> 2] = 0;
         HEAP32[$5543 + 4 >> 2] = 0;
         HEAP32[$5543 + 8 >> 2] = $5584;
         HEAP32[$$0$i$i$i$i119$i$i2517 >> 2] = $5543;
         $5586 = HEAP32[HEAP32[$178 >> 2] >> 2] | 0;
         if (!$5586) $5589 = $5543; else {
          HEAP32[$178 >> 2] = $5586;
          $5589 = HEAP32[$$0$i$i$i$i119$i$i2517 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$330 >> 2] | 0, $5589);
         HEAP32[$331 >> 2] = (HEAP32[$331 >> 2] | 0) + 1;
         $5595 = $5547;
        } else if ((label | 0) == 2178) {
         label = 0;
         if (($5592 | 0) == ($5543 | 0)) $5595 = $6005; else {
          __ZdlPv($5543);
          $5595 = $6005;
         }
        }
        $5596 = HEAP32[$5595 + 4 >> 2] | 0;
        if (!$5596) {
         $$0$i$i$i$i$i2526 = $5595;
         while (1) {
          $5601 = HEAP32[$$0$i$i$i$i$i2526 + 8 >> 2] | 0;
          if ((HEAP32[$5601 >> 2] | 0) == ($$0$i$i$i$i$i2526 | 0)) {
           $$cast$i$i$i$i$i2527$lcssa = $5601;
           break;
          } else $$0$i$i$i$i$i2526 = $5601;
         }
         $$01$i$i$i$i$i2529 = $$cast$i$i$i$i$i2527$lcssa;
        } else {
         $$0$i$i$i$i$i$i2524 = $5596;
         while (1) {
          $5598 = HEAP32[$$0$i$i$i$i$i$i2524 >> 2] | 0;
          if (!$5598) {
           $$0$i$i$i$i$i$i2524$lcssa = $$0$i$i$i$i$i$i2524;
           break;
          } else $$0$i$i$i$i$i$i2524 = $5598;
         }
         $$01$i$i$i$i$i2529 = $$0$i$i$i$i$i$i2524$lcssa;
        }
        if (($$01$i$i$i$i$i2529 | 0) == ($333 | 0)) break; else {
         $5547 = $$01$i$i$i$i$i2529;
         $6005 = $$01$i$i$i$i$i2529;
        }
       }
      }
      $5606 = HEAP32[$5393 + 52 >> 2] | 0;
      $5608 = HEAP32[$5393 + 56 >> 2] | 0;
      HEAP32[$334 >> 2] = 0;
      HEAP32[$335 >> 2] = 0;
      HEAP32[$179 >> 2] = $336;
      $$idx$val$i$i2535 = HEAP32[$5458 >> 2] | 0;
      if (($$idx$val$i$i2535 | 0) != ($5459 | 0)) {
       $5614 = $$idx$val$i$i2535;
       $6006 = $$idx$val$i$i2535;
       while (1) {
        __THREW__ = 0;
        $5610 = invoke_ii(67, 24) | 0;
        $5611 = __THREW__;
        __THREW__ = 0;
        if ($5611 & 1) {
         label = 2229;
         break L1;
        }
        $5616 = $5614 + 16 | 0;
        $5618 = HEAP32[$5616 >> 2] | 0;
        $5621 = HEAP32[$5616 + 4 >> 2] | 0;
        $5622 = $5610 + 16 | 0;
        HEAP32[$5622 >> 2] = $5618;
        HEAP32[$5622 + 4 >> 2] = $5621;
        $5626 = $5618;
        $$pre$i$i$i$i$i$i2540 = HEAP32[$336 >> 2] | 0;
        do if ((HEAP32[$179 >> 2] | 0) == ($336 | 0)) {
         $5647 = $336;
         label = 2201;
        } else {
         $5628 = ($$pre$i$i$i$i$i$i2540 | 0) == 0;
         if ($5628) {
          $$0$i$i$i$i$i$i$i$i2544 = $336;
          while (1) {
           $5633 = HEAP32[$$0$i$i$i$i$i$i$i$i2544 + 8 >> 2] | 0;
           if ((HEAP32[$5633 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2544 | 0)) $$0$i$i$i$i$i$i$i$i2544 = $5633; else {
            $$cast$i$i$i$i$i$i$i$i2545$lcssa = $5633;
            break;
           }
          }
          $$01$i$i$i$i$i$i$i$i2547 = $$cast$i$i$i$i$i$i$i$i2545$lcssa;
         } else {
          $$0$i$i$i$i$i$i$i$i$i2542 = $$pre$i$i$i$i$i$i2540;
          while (1) {
           $5630 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2542 + 4 >> 2] | 0;
           if (!$5630) {
            $$0$i$i$i$i$i$i$i$i$i2542$lcssa = $$0$i$i$i$i$i$i$i$i$i2542;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i2542 = $5630;
          }
          $$01$i$i$i$i$i$i$i$i2547 = $$0$i$i$i$i$i$i$i$i$i2542$lcssa;
         }
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i2547 + 16 >> 2] | 0) >>> 0 < $5626 >>> 0) {
          $5647 = $$01$i$i$i$i$i$i$i$i2547;
          label = 2201;
         } else if ($5628) {
          $$0$i$i$i$i119$i$i2558 = $336;
          $5651 = $336;
          label = 2211;
         } else {
          $__nd$0$i20$i$i$i$i$in$i$i2552 = $$pre$i$i$i$i$i$i2540;
          while (1) {
           $$idx2$val$i22$i$i$i$i$i$i2554 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2552 + 16 >> 2] | 0;
           if ($$idx2$val$i22$i$i$i$i$i$i2554 >>> 0 > $5626 >>> 0) {
            $5640 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2552 >> 2] | 0;
            if (!$5640) {
             $$0$i$i$i$i119$i$i2558$ph = $__nd$0$i20$i$i$i$i$in$i$i2552;
             $__nd$0$i20$i$i$i$i$in$i$i2552$lcssa6334 = $__nd$0$i20$i$i$i$i$in$i$i2552;
             label = 2210;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2552$be = $5640;
           } else {
            if ($$idx2$val$i22$i$i$i$i$i$i2554 >>> 0 >= $5626 >>> 0) {
             $__nd$0$i20$i$i$i$i$in$i$i2552$lcssa = $__nd$0$i20$i$i$i$i$in$i$i2552;
             label = 2214;
             break;
            }
            $5643 = $__nd$0$i20$i$i$i$i$in$i$i2552 + 4 | 0;
            $5644 = HEAP32[$5643 >> 2] | 0;
            if (!$5644) {
             $$0$i$i$i$i119$i$i2558$ph = $5643;
             $__nd$0$i20$i$i$i$i$in$i$i2552$lcssa6334 = $__nd$0$i20$i$i$i$i$in$i$i2552;
             label = 2210;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i2552$be = $5644;
           }
           $__nd$0$i20$i$i$i$i$in$i$i2552 = $__nd$0$i20$i$i$i$i$in$i$i2552$be;
          }
          if ((label | 0) == 2210) {
           label = 0;
           $$0$i$i$i$i119$i$i2558 = $$0$i$i$i$i119$i$i2558$ph;
           $5651 = $__nd$0$i20$i$i$i$i$in$i$i2552$lcssa6334;
           label = 2211;
           break;
          } else if ((label | 0) == 2214) {
           label = 0;
           $5659 = $__nd$0$i20$i$i$i$i$in$i$i2552$lcssa;
           label = 2215;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 2201) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i2540) {
          $$0$i$i$i$i119$i$i2558 = $336;
          $5651 = $336;
          label = 2211;
         } else {
          $5646 = $5647 + 4 | 0;
          $$pre$i$i2556 = HEAP32[$5646 >> 2] | 0;
          if (!$$pre$i$i2556) {
           $$0$i$i$i$i119$i$i2558 = $5646;
           $5651 = $5647;
           label = 2211;
          } else {
           $5659 = $$pre$i$i2556;
           label = 2215;
          }
         }
        }
        if ((label | 0) == 2211) {
         label = 0;
         HEAP32[$5610 >> 2] = 0;
         HEAP32[$5610 + 4 >> 2] = 0;
         HEAP32[$5610 + 8 >> 2] = $5651;
         HEAP32[$$0$i$i$i$i119$i$i2558 >> 2] = $5610;
         $5653 = HEAP32[HEAP32[$179 >> 2] >> 2] | 0;
         if (!$5653) $5656 = $5610; else {
          HEAP32[$179 >> 2] = $5653;
          $5656 = HEAP32[$$0$i$i$i$i119$i$i2558 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$334 >> 2] | 0, $5656);
         HEAP32[$335 >> 2] = (HEAP32[$335 >> 2] | 0) + 1;
         $5662 = $5614;
        } else if ((label | 0) == 2215) {
         label = 0;
         if (($5659 | 0) == ($5610 | 0)) $5662 = $6006; else {
          __ZdlPv($5610);
          $5662 = $6006;
         }
        }
        $5663 = HEAP32[$5662 + 4 >> 2] | 0;
        if (!$5663) {
         $$0$i$i$i$i$i2567 = $5662;
         while (1) {
          $5668 = HEAP32[$$0$i$i$i$i$i2567 + 8 >> 2] | 0;
          if ((HEAP32[$5668 >> 2] | 0) == ($$0$i$i$i$i$i2567 | 0)) {
           $$cast$i$i$i$i$i2568$lcssa = $5668;
           break;
          } else $$0$i$i$i$i$i2567 = $5668;
         }
         $$01$i$i$i$i$i2570 = $$cast$i$i$i$i$i2568$lcssa;
        } else {
         $$0$i$i$i$i$i$i2565 = $5663;
         while (1) {
          $5665 = HEAP32[$$0$i$i$i$i$i$i2565 >> 2] | 0;
          if (!$5665) {
           $$0$i$i$i$i$i$i2565$lcssa = $$0$i$i$i$i$i$i2565;
           break;
          } else $$0$i$i$i$i$i$i2565 = $5665;
         }
         $$01$i$i$i$i$i2570 = $$0$i$i$i$i$i$i2565$lcssa;
        }
        if (($$01$i$i$i$i$i2570 | 0) == ($5459 | 0)) break; else {
         $5614 = $$01$i$i$i$i$i2570;
         $6006 = $$01$i$i$i$i$i2570;
        }
       }
      }
      __THREW__ = 0;
      invoke_viiiiii(20, $177 | 0, $this | 0, $178 | 0, $5606 | 0, $5608 | 0, $179 | 0);
      $5672 = __THREW__;
      __THREW__ = 0;
      if ($5672 & 1) {
       label = 2230;
       break L1;
      };
      HEAP32[$201 + 0 >> 2] = HEAP32[$177 + 0 >> 2];
      HEAP32[$201 + 4 >> 2] = HEAP32[$177 + 4 >> 2];
      HEAP32[$201 + 8 >> 2] = HEAP32[$177 + 8 >> 2];
      HEAP32[$201 + 12 >> 2] = HEAP32[$177 + 12 >> 2];
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($179, HEAP32[$336 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($178, HEAP32[$332 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env139, HEAP32[$333 >> 2] | 0);
      $$515 = $$111$ph4280;
      label = 2344;
      break;
     }
    case 2248:
     {
      label = 0;
      $5724 = HEAP32[$$idx$val$i910$lcssa6289 + -140 >> 2] | 0;
      $5725 = $$idx$val$i910$lcssa6289 + -104 | 0;
      $5726 = $$idx$val$i910$lcssa6289 + -88 | 0;
      HEAP32[$338 >> 2] = 752;
      HEAP32[$ss143 >> 2] = 900;
      HEAP32[$337 >> 2] = 920;
      HEAP32[$340 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(41, $341 | 0, $339 | 0);
      $5727 = __THREW__;
      __THREW__ = 0;
      if ($5727 & 1) {
       label = 2252;
       break L1;
      }
      HEAP32[$342 >> 2] = 0;
      HEAP32[$343 >> 2] = -1;
      HEAP32[$ss143 >> 2] = 732;
      HEAP32[$337 >> 2] = 772;
      HEAP32[$338 >> 2] = 752;
      __THREW__ = 0;
      invoke_vi(177, $339 | 0);
      $5729 = __THREW__;
      __THREW__ = 0;
      if ($5729 & 1) {
       label = 2253;
       break L1;
      }
      HEAP32[$339 >> 2] = 1064;
      HEAP32[$344 + 0 >> 2] = 0;
      HEAP32[$344 + 4 >> 2] = 0;
      HEAP32[$344 + 8 >> 2] = 0;
      HEAP32[$344 + 12 >> 2] = 0;
      HEAP32[$345 >> 2] = 24;
      HEAP32[$0 + 0 >> 2] = 0;
      HEAP32[$0 + 4 >> 2] = 0;
      HEAP32[$0 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $339 | 0, $0 | 0);
      $5731 = __THREW__;
      __THREW__ = 0;
      if ($5731 & 1) {
       label = 2251;
       break L1;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      if ((HEAP32[$5725 >> 2] | 0) == 19) {
       $5742 = HEAP32[$$idx$val$i910$lcssa6289 + -96 >> 2] | 0;
       $5743 = $5742 + 8 | 0;
       $5744 = HEAP8[$5743 >> 0] | 0;
       if (!($5744 & 1)) {
        $5754 = $5743 + 1 | 0;
        $5755 = ($5744 & 255) >>> 1;
       } else {
        $5754 = HEAP32[$5742 + 16 >> 2] | 0;
        $5755 = HEAP32[$5742 + 12 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $338 | 0, $5754 | 0, $5755 | 0) | 0;
       $5756 = __THREW__;
       __THREW__ = 0;
       if ($5756 & 1) {
        label = 2261;
        break L1;
       }
      } else {
       HEAP32[$201 + 0 >> 2] = HEAP32[$5725 + 0 >> 2];
       HEAP32[$201 + 4 >> 2] = HEAP32[$5725 + 4 >> 2];
       HEAP32[$201 + 8 >> 2] = HEAP32[$5725 + 8 >> 2];
       HEAP32[$201 + 12 >> 2] = HEAP32[$5725 + 12 >> 2];
       $5761 = HEAP32[$5724 + 48 >> 2] | 0;
       __THREW__ = 0;
       invoke_viii(3, $1 | 0, 48920, 0);
       $5762 = __THREW__;
       __THREW__ = 0;
       if ($5762 & 1) {
        label = 2261;
        break L1;
       }
       __THREW__ = 0;
       invoke_viiiii(6, $180 | 0, $this | 0, $5761 + 4 | 0, 0, $1 | 0);
       $5765 = __THREW__;
       __THREW__ = 0;
       if ($5765 & 1) {
        label = 2265;
        break L1;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
       $5769 = HEAP8[$180 >> 0] | 0;
       if (!($5769 & 1)) {
        $5776 = $349;
        $5777 = ($5769 & 255) >>> 1;
       } else {
        $5776 = HEAP32[$350 >> 2] | 0;
        $5777 = HEAP32[$351 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $338 | 0, $5776 | 0, $5777 | 0) | 0;
       $5778 = __THREW__;
       __THREW__ = 0;
       if ($5778 & 1) {
        label = 2271;
        break L1;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($180);
      }
      if ((HEAP32[$5726 >> 2] | 0) == 19) {
       $5785 = HEAP32[$$idx$val$i910$lcssa6289 + -80 >> 2] | 0;
       $5786 = $5785 + 8 | 0;
       $5787 = HEAP8[$5786 >> 0] | 0;
       if (!($5787 & 1)) {
        $5797 = $5786 + 1 | 0;
        $5798 = ($5787 & 255) >>> 1;
       } else {
        $5797 = HEAP32[$5785 + 16 >> 2] | 0;
        $5798 = HEAP32[$5785 + 12 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $338 | 0, $5797 | 0, $5798 | 0) | 0;
       $5799 = __THREW__;
       __THREW__ = 0;
       if ($5799 & 1) {
        label = 2261;
        break L1;
       }
      } else {
       HEAP32[$201 + 0 >> 2] = HEAP32[$5726 + 0 >> 2];
       HEAP32[$201 + 4 >> 2] = HEAP32[$5726 + 4 >> 2];
       HEAP32[$201 + 8 >> 2] = HEAP32[$5726 + 8 >> 2];
       HEAP32[$201 + 12 >> 2] = HEAP32[$5726 + 12 >> 2];
       $5802 = HEAP32[$5724 + 56 >> 2] | 0;
       __THREW__ = 0;
       invoke_viii(3, $2 | 0, 48920, 0);
       $5803 = __THREW__;
       __THREW__ = 0;
       if ($5803 & 1) {
        label = 2261;
        break L1;
       }
       __THREW__ = 0;
       invoke_viiiii(6, $181 | 0, $this | 0, $5802 + 4 | 0, 0, $2 | 0);
       $5806 = __THREW__;
       __THREW__ = 0;
       if ($5806 & 1) {
        label = 2279;
        break L1;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
       $5810 = HEAP8[$181 >> 0] | 0;
       if (!($5810 & 1)) {
        $5817 = $346;
        $5818 = ($5810 & 255) >>> 1;
       } else {
        $5817 = HEAP32[$347 >> 2] | 0;
        $5818 = HEAP32[$348 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $338 | 0, $5817 | 0, $5818 | 0) | 0;
       $5819 = __THREW__;
       __THREW__ = 0;
       if ($5819 & 1) {
        label = 2285;
        break L1;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($181);
      }
      __THREW__ = 0;
      invoke_vii(43, $183 | 0, $339 | 0);
      $5823 = __THREW__;
      __THREW__ = 0;
      if ($5823 & 1) {
       label = 2261;
       break L1;
      }
      __THREW__ = 0;
      invoke_viii(14, $182 | 0, $this | 0, $183 | 0);
      $5825 = __THREW__;
      __THREW__ = 0;
      if ($5825 & 1) {
       label = 2289;
       break L1;
      };
      HEAP32[$201 + 0 >> 2] = HEAP32[$182 + 0 >> 2];
      HEAP32[$201 + 4 >> 2] = HEAP32[$182 + 4 >> 2];
      HEAP32[$201 + 8 >> 2] = HEAP32[$182 + 8 >> 2];
      HEAP32[$201 + 12 >> 2] = HEAP32[$182 + 12 >> 2];
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($183);
      HEAP32[$ss143 >> 2] = 732;
      HEAP32[$337 >> 2] = 772;
      HEAP32[$338 >> 2] = 752;
      HEAP32[$339 >> 2] = 1064;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($344);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($339);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($337);
      $$515 = $$111$ph4280;
      label = 2344;
      break;
     }
    case 2291:
     {
      label = 0;
      $5830 = HEAP32[$$idx$val$i910$lcssa6290 + -140 >> 2] | 0;
      $5831 = HEAP32[$201 >> 2] | 0;
      if (($5831 | 0) == 1) {
       $5832 = $5830 + 48 | 0;
       if (HEAP32[$5832 >> 2] | 0) {
        $$lcssa6381 = $5830;
        $$lcssa6383 = $5832;
        label = 2294;
        break L1;
       }
       $5836 = HEAP8[$202 >> 0] ^ 1;
       HEAP32[$211 >> 2] = 1;
       HEAP8[$202 >> 0] = $5836;
       HEAP8[$226 + 0 >> 0] = HEAP8[$$sroa$3 + 0 >> 0] | 0;
       HEAP8[$226 + 1 >> 0] = HEAP8[$$sroa$3 + 1 >> 0] | 0;
       HEAP8[$226 + 2 >> 0] = HEAP8[$$sroa$3 + 2 >> 0] | 0;
       HEAP8[$226 + 3 >> 0] = HEAP8[$$sroa$3 + 3 >> 0] | 0;
       HEAP8[$226 + 4 >> 0] = HEAP8[$$sroa$3 + 4 >> 0] | 0;
       HEAP8[$226 + 5 >> 0] = HEAP8[$$sroa$3 + 5 >> 0] | 0;
       HEAP8[$226 + 6 >> 0] = HEAP8[$$sroa$3 + 6 >> 0] | 0;
       $$515 = $$111$ph4280;
       label = 2344;
       break;
      } else if (($5831 | 0) != 2) {
       $$lcssa6379 = $5830;
       label = 2319;
       break L1;
      }
      $5860 = $5830 + 48 | 0;
      $5861 = HEAP32[$5860 >> 2] | 0;
      if (($5861 | 0) == 3) {
       $5863 = -+HEAPF64[$251 >> 3];
       HEAP32[$211 >> 2] = 2;
       HEAPF64[$251 >> 3] = $5863;
       $$515 = $$111$ph4280;
       label = 2344;
       break;
      } else if (($5861 | 0) == 1) {
       $5867 = +(~~+HEAPF64[$251 >> 3] ^ -1 | 0);
       HEAP32[$211 >> 2] = 2;
       HEAPF64[$251 >> 3] = $5867;
       $$515 = $$111$ph4280;
       label = 2344;
       break;
      } else if (($5861 | 0) == 2) {
       $$515 = $$111$ph4280;
       label = 2344;
       break;
      } else {
       $$lcssa6380 = $5830;
       $$lcssa6382 = $5860;
       label = 2308;
       break L1;
      }
      break;
     }
    case 2343:
     {
      label = 0;
      $$515 = $$111$ph4280;
      label = 2344;
      break;
     }
    }
    if ((label | 0) == 2344) {
     label = 0;
     __ZN12_GLOBAL__N_15Stack3popEv($195);
     $$111$ph$be = $$515;
    }
    $$idx$val$i6915179 = HEAP32[$$idx$i >> 2] | 0;
    $$idx1$val$i66942494281 = HEAP32[$$idx1$i >> 2] | 0;
    if (($$idx1$val$i66942494281 - $$idx$val$i6915179 | 0) >>> 0 <= $198 >>> 0) {
     label = 2348;
     break L1;
    } else $$111$ph4280 = $$111$ph$be;
   }
   switch (label | 0) {
   case 2:
    {
     label = 0;
     $$010$be = $$010$ph;
     break L425;
     break;
    }
   case 583:
    {
     label = 0;
     HEAP32[$$lcssa6296$lcssa >> 2] = 2;
     $1844 = $$idx$val$i910$lcssa6276$lcssa + -104 | 0;
     HEAP32[$1844 + 0 >> 2] = HEAP32[$201 + 0 >> 2];
     HEAP32[$1844 + 4 >> 2] = HEAP32[$201 + 4 >> 2];
     HEAP32[$1844 + 8 >> 2] = HEAP32[$201 + 8 >> 2];
     HEAP32[$1844 + 12 >> 2] = HEAP32[$201 + 12 >> 2];
     $$010$be = HEAP32[$$lcssa6830 + 56 >> 2] | 0;
     break L425;
     break;
    }
   case 930:
    {
     label = 0;
     $2684 = HEAP32[$$idx267$val$lcssa + ($$lcssa6790 << 2) >> 2] | 0;
     HEAP32[$352 >> 2] = 0;
     HEAP32[$353 >> 2] = 0;
     HEAP32[$bindings65 >> 2] = $354;
     $$idx$val$i$i1110 = HEAP32[$$lcssa6789 + 8 >> 2] | 0;
     $2685 = $$lcssa6789 + 12 | 0;
     do if (($$idx$val$i$i1110 | 0) == ($2685 | 0)) {
      $__k$val$i11495215 = HEAP32[HEAP32[$$lcssa6789 + 28 >> 2] >> 2] | 0;
      label = 977;
     } else {
      $2693 = $$idx$val$i$i1110;
      $5984 = $$idx$val$i$i1110;
      while (1) {
       __THREW__ = 0;
       $2689 = invoke_ii(67, 24) | 0;
       $2690 = __THREW__;
       __THREW__ = 0;
       if ($2690 & 1) {
        label = 967;
        break L1;
       }
       $2695 = $2693 + 16 | 0;
       $2697 = HEAP32[$2695 >> 2] | 0;
       $2700 = HEAP32[$2695 + 4 >> 2] | 0;
       $2701 = $2689 + 16 | 0;
       HEAP32[$2701 >> 2] = $2697;
       HEAP32[$2701 + 4 >> 2] = $2700;
       $2705 = $2697;
       $$pre$i$i$i$i$i$i1115 = HEAP32[$354 >> 2] | 0;
       do if ((HEAP32[$bindings65 >> 2] | 0) == ($354 | 0)) {
        $2726 = $354;
        label = 943;
       } else {
        $2707 = ($$pre$i$i$i$i$i$i1115 | 0) == 0;
        if ($2707) {
         $$0$i$i$i$i$i$i$i$i1119 = $354;
         while (1) {
          $2712 = HEAP32[$$0$i$i$i$i$i$i$i$i1119 + 8 >> 2] | 0;
          if ((HEAP32[$2712 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i1119 | 0)) $$0$i$i$i$i$i$i$i$i1119 = $2712; else {
           $$cast$i$i$i$i$i$i$i$i1120$lcssa = $2712;
           break;
          }
         }
         $$01$i$i$i$i$i$i$i$i1122 = $$cast$i$i$i$i$i$i$i$i1120$lcssa;
        } else {
         $$0$i$i$i$i$i$i$i$i$i1117 = $$pre$i$i$i$i$i$i1115;
         while (1) {
          $2709 = HEAP32[$$0$i$i$i$i$i$i$i$i$i1117 + 4 >> 2] | 0;
          if (!$2709) {
           $$0$i$i$i$i$i$i$i$i$i1117$lcssa = $$0$i$i$i$i$i$i$i$i$i1117;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i1117 = $2709;
         }
         $$01$i$i$i$i$i$i$i$i1122 = $$0$i$i$i$i$i$i$i$i$i1117$lcssa;
        }
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i1122 + 16 >> 2] | 0) >>> 0 < $2705 >>> 0) {
         $2726 = $$01$i$i$i$i$i$i$i$i1122;
         label = 943;
        } else if ($2707) {
         $$0$i$i$i$i119$i$i1133 = $354;
         $2730 = $354;
         label = 953;
        } else {
         $__nd$0$i20$i$i$i$i$in$i$i1127 = $$pre$i$i$i$i$i$i1115;
         while (1) {
          $$idx2$val$i22$i$i$i$i$i$i1129 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i1127 + 16 >> 2] | 0;
          if ($$idx2$val$i22$i$i$i$i$i$i1129 >>> 0 > $2705 >>> 0) {
           $2719 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i1127 >> 2] | 0;
           if (!$2719) {
            $$0$i$i$i$i119$i$i1133$ph = $__nd$0$i20$i$i$i$i$in$i$i1127;
            $__nd$0$i20$i$i$i$i$in$i$i1127$lcssa6870 = $__nd$0$i20$i$i$i$i$in$i$i1127;
            label = 952;
            break;
           } else $__nd$0$i20$i$i$i$i$in$i$i1127$be = $2719;
          } else {
           if ($$idx2$val$i22$i$i$i$i$i$i1129 >>> 0 >= $2705 >>> 0) {
            $__nd$0$i20$i$i$i$i$in$i$i1127$lcssa = $__nd$0$i20$i$i$i$i$in$i$i1127;
            label = 956;
            break;
           }
           $2722 = $__nd$0$i20$i$i$i$i$in$i$i1127 + 4 | 0;
           $2723 = HEAP32[$2722 >> 2] | 0;
           if (!$2723) {
            $$0$i$i$i$i119$i$i1133$ph = $2722;
            $__nd$0$i20$i$i$i$i$in$i$i1127$lcssa6870 = $__nd$0$i20$i$i$i$i$in$i$i1127;
            label = 952;
            break;
           } else $__nd$0$i20$i$i$i$i$in$i$i1127$be = $2723;
          }
          $__nd$0$i20$i$i$i$i$in$i$i1127 = $__nd$0$i20$i$i$i$i$in$i$i1127$be;
         }
         if ((label | 0) == 952) {
          label = 0;
          $$0$i$i$i$i119$i$i1133 = $$0$i$i$i$i119$i$i1133$ph;
          $2730 = $__nd$0$i20$i$i$i$i$in$i$i1127$lcssa6870;
          label = 953;
          break;
         } else if ((label | 0) == 956) {
          label = 0;
          $2738 = $__nd$0$i20$i$i$i$i$in$i$i1127$lcssa;
          label = 957;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 943) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i1115) {
         $$0$i$i$i$i119$i$i1133 = $354;
         $2730 = $354;
         label = 953;
        } else {
         $2725 = $2726 + 4 | 0;
         $$pre$i$i1131 = HEAP32[$2725 >> 2] | 0;
         if (!$$pre$i$i1131) {
          $$0$i$i$i$i119$i$i1133 = $2725;
          $2730 = $2726;
          label = 953;
         } else {
          $2738 = $$pre$i$i1131;
          label = 957;
         }
        }
       }
       if ((label | 0) == 953) {
        label = 0;
        HEAP32[$2689 >> 2] = 0;
        HEAP32[$2689 + 4 >> 2] = 0;
        HEAP32[$2689 + 8 >> 2] = $2730;
        HEAP32[$$0$i$i$i$i119$i$i1133 >> 2] = $2689;
        $2732 = HEAP32[HEAP32[$bindings65 >> 2] >> 2] | 0;
        if (!$2732) $2735 = $2689; else {
         HEAP32[$bindings65 >> 2] = $2732;
         $2735 = HEAP32[$$0$i$i$i$i119$i$i1133 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$352 >> 2] | 0, $2735);
        HEAP32[$353 >> 2] = (HEAP32[$353 >> 2] | 0) + 1;
        $2741 = $2693;
       } else if ((label | 0) == 957) {
        label = 0;
        if (($2738 | 0) == ($2689 | 0)) $2741 = $5984; else {
         __ZdlPv($2689);
         $2741 = $5984;
        }
       }
       $2742 = HEAP32[$2741 + 4 >> 2] | 0;
       if (!$2742) {
        $$0$i$i$i$i$i1142 = $2741;
        while (1) {
         $2747 = HEAP32[$$0$i$i$i$i$i1142 + 8 >> 2] | 0;
         if ((HEAP32[$2747 >> 2] | 0) == ($$0$i$i$i$i$i1142 | 0)) {
          $$cast$i$i$i$i$i1143$lcssa = $2747;
          break;
         } else $$0$i$i$i$i$i1142 = $2747;
        }
        $$01$i$i$i$i$i1145 = $$cast$i$i$i$i$i1143$lcssa;
       } else {
        $$0$i$i$i$i$i$i1140 = $2742;
        while (1) {
         $2744 = HEAP32[$$0$i$i$i$i$i$i1140 >> 2] | 0;
         if (!$2744) {
          $$0$i$i$i$i$i$i1140$lcssa = $$0$i$i$i$i$i$i1140;
          break;
         } else $$0$i$i$i$i$i$i1140 = $2744;
        }
        $$01$i$i$i$i$i1145 = $$0$i$i$i$i$i$i1140$lcssa;
       }
       if (($$01$i$i$i$i$i1145 | 0) == ($2685 | 0)) break; else {
        $2693 = $$01$i$i$i$i$i1145;
        $5984 = $$01$i$i$i$i$i1145;
       }
      }
      $$pre5186 = HEAP32[$354 >> 2] | 0;
      $__k$val$i1149 = HEAP32[HEAP32[$$lcssa6789 + 28 >> 2] >> 2] | 0;
      if (!$$pre5186) {
       $__k$val$i11495215 = $__k$val$i1149;
       label = 977;
      } else {
       $__nd$0$i$i1150 = $$pre5186;
       while (1) {
        $2758 = HEAP32[$__nd$0$i$i1150 + 16 >> 2] | 0;
        if ($2758 >>> 0 > $__k$val$i1149 >>> 0) {
         $2760 = HEAP32[$__nd$0$i$i1150 >> 2] | 0;
         if (!$2760) {
          $$lcssa6874 = $__nd$0$i$i1150;
          $__nd$0$i$i1150$lcssa6872 = $__nd$0$i$i1150;
          label = 972;
          break;
         } else $__nd$0$be$in$i$i1152 = $2760;
        } else {
         if ($2758 >>> 0 >= $__k$val$i1149 >>> 0) {
          $__nd$0$i$i1150$lcssa = $__nd$0$i$i1150;
          label = 978;
          break;
         }
         $2763 = $__nd$0$i$i1150 + 4 | 0;
         $2764 = HEAP32[$2763 >> 2] | 0;
         if (!$2764) {
          $$lcssa6873 = $2763;
          $__nd$0$i$i1150$lcssa6871 = $__nd$0$i$i1150;
          label = 976;
          break;
         } else $__nd$0$be$in$i$i1152 = $2764;
        }
        $__nd$0$i$i1150 = $__nd$0$be$in$i$i1152;
       }
       if ((label | 0) == 972) {
        label = 0;
        HEAP32[$__parent$i1148 >> 2] = $__nd$0$i$i1150$lcssa6872;
        $$0$i7$i1157 = $$lcssa6874;
        $2774 = $__nd$0$i$i1150$lcssa6872;
        $__k$val$i11495213 = $__k$val$i1149;
        label = 979;
        break;
       } else if ((label | 0) == 976) {
        label = 0;
        HEAP32[$__parent$i1148 >> 2] = $__nd$0$i$i1150$lcssa6871;
        $$0$i7$i1157 = $$lcssa6873;
        $2774 = $__nd$0$i$i1150$lcssa6871;
        $__k$val$i11495213 = $__k$val$i1149;
        label = 979;
        break;
       } else if ((label | 0) == 978) {
        label = 0;
        HEAP32[$__parent$i1148 >> 2] = $__nd$0$i$i1150$lcssa;
        if (!$__nd$0$i$i1150$lcssa) {
         $$0$i7$i1157 = $__parent$i1148;
         $2774 = 0;
         $__k$val$i11495213 = $__k$val$i1149;
         label = 979;
         break;
        } else {
         $__r$0$i1161 = $__nd$0$i$i1150$lcssa;
         break;
        }
       }
      }
     } while (0);
     if ((label | 0) == 977) {
      label = 0;
      HEAP32[$__parent$i1148 >> 2] = $354;
      $$0$i7$i1157 = $354;
      $2774 = $354;
      $__k$val$i11495213 = $__k$val$i11495215;
      label = 979;
     }
     if ((label | 0) == 979) {
      label = 0;
      __THREW__ = 0;
      $2767 = invoke_ii(67, 24) | 0;
      $2768 = __THREW__;
      __THREW__ = 0;
      if ($2768 & 1) {
       label = 985;
       break L1;
      }
      HEAP32[$2767 + 16 >> 2] = $__k$val$i11495213;
      HEAP32[$2767 + 20 >> 2] = 0;
      HEAP32[$2767 >> 2] = 0;
      HEAP32[$2767 + 4 >> 2] = 0;
      HEAP32[$2767 + 8 >> 2] = $2774;
      HEAP32[$$0$i7$i1157 >> 2] = $2767;
      $2776 = HEAP32[HEAP32[$bindings65 >> 2] >> 2] | 0;
      if (!$2776) $2779 = $2767; else {
       HEAP32[$bindings65 >> 2] = $2776;
       $2779 = HEAP32[$$0$i7$i1157 >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$352 >> 2] | 0, $2779);
      HEAP32[$353 >> 2] = (HEAP32[$353 >> 2] | 0) + 1;
      $__r$0$i1161 = $2767;
     }
     HEAP32[$__r$0$i1161 + 20 >> 2] = $2684;
     __THREW__ = 0;
     invoke_viiiiii(19, $195 | 0, $$lcssa6787 + 4 | 0, $$lcssa6789 | 0, HEAP32[$$lcssa6789 + 20 >> 2] | 0, HEAP32[$$lcssa6789 + 24 >> 2] | 0, $bindings65 | 0);
     $2788 = __THREW__;
     __THREW__ = 0;
     if ($2788 & 1) {
      label = 985;
      break L1;
     }
     $2791 = HEAP32[$$lcssa6789 + 40 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings65, HEAP32[$354 >> 2] | 0);
     $$010$be = $2791;
     break L425;
     break;
    }
   case 1758:
    {
     label = 0;
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($195, $$lcssa6470 + 4 | 0, $$lcssa6550, HEAP32[$$lcssa6550 + 40 >> 2] | 0, HEAP32[$$lcssa6550 + 44 >> 2] | 0, $$lcssa6550 + 28 | 0);
     $$010$be = HEAP32[$$lcssa6550 + 48 >> 2] | 0;
     break L425;
     break;
    }
   case 1765:
    {
     label = 0;
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($195, $$idx$val$i910$lcssa6279$lcssa6459 + -136 | 0, $$lcssa6469, HEAP32[$$lcssa6469 + 40 >> 2] | 0, HEAP32[$$lcssa6469 + 44 >> 2] | 0, $$lcssa6469 + 28 | 0);
     $$010$be = HEAP32[$$lcssa6469 + 48 >> 2] | 0;
     break L425;
     break;
    }
   case 1767:
    {
     label = 0;
     if (($$idx260$val$lcssa | 0) != ($$idx259$val$lcssa | 0)) HEAP32[$$idx260$lcssa >> 2] = $$idx260$val$lcssa + (~(($$idx260$val$lcssa + -4 - $$lcssa6467 | 0) >>> 2) << 2);
     HEAP32[$$lcssa6462 >> 2] = 0;
     $$010$be = HEAP32[$$lcssa6460 + 40 >> 2] | 0;
     break L425;
     break;
    }
   case 1786:
    {
     label = 0;
     $4733 = HEAP32[$$idx$val$i910$lcssa6282 + -140 >> 2] | 0;
     if ((HEAP32[$201 >> 2] | 0) != 1) {
      $$lcssa7192 = $4733;
      label = 1787;
      break L1;
     }
     $4762 = HEAP32[((HEAP8[$202 >> 0] | 0) == 0 ? $4733 + 56 | 0 : $4733 + 52 | 0) >> 2] | 0;
     __ZN12_GLOBAL__N_15Stack3popEv($195);
     $$010$be = $4762;
     break L425;
     break;
    }
   case 1836:
    {
     label = 0;
     __ZN12_GLOBAL__N_15Stack3popEv($195);
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($195, $$lcssa6449 + 4 | 0, $$lcssa6458, HEAP32[$$lcssa6458 + 40 >> 2] | 0, HEAP32[$$lcssa6458 + 44 >> 2] | 0, $$lcssa6458 + 28 | 0);
     $$010$be = HEAP32[$$lcssa6458 + 48 >> 2] | 0;
     break L425;
     break;
    }
   case 1837:
    {
     label = 0;
     $4865 = HEAP32[$$idx$val$i910$lcssa6283$lcssa6433 + -96 >> 2] | 0;
     if (!$4865) {
      label = 1838;
      break L1;
     }
     if ((HEAP32[$201 >> 2] | 0) != 19) {
      $$lcssa6442$lcssa7191 = $$lcssa6442;
      label = 1840;
      break L1;
     }
     $4894 = __ZN9Allocator14makeIdentifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(HEAP32[$219 >> 2] | 0, (HEAP32[$202 >> 2] | 0) + 8 | 0) | 0;
     __ZN12_GLOBAL__N_15Stack3popEv($195);
     $$010$be = __ZN12_GLOBAL__N_111Interpreter11objectIndexERK13LocationRangePNS_10HeapObjectEPK10Identifier($this, $$lcssa6442 + 4 | 0, $4865, $4894) | 0;
     break L425;
     break;
    }
   case 1901:
    {
     label = 0;
     $5014 = HEAP32[$$idx$val$i910$lcssa6284 + -140 >> 2] | 0;
     $5015 = HEAP32[$201 >> 2] | 0;
     if (!(($5015 | 0) == 19 | ($5015 | 0) == 18 | ($5015 | 0) == 16)) {
      $$lcssa7190 = $5014;
      label = 1902;
      break L1;
     }
     $5039 = HEAP32[$5014 + 52 >> 2] | 0;
     HEAP32[$$lcssa6304 >> 2] = 11;
     $5040 = $$idx$val$i910$lcssa6284 + -104 | 0;
     HEAP32[$5040 + 0 >> 2] = HEAP32[$201 + 0 >> 2];
     HEAP32[$5040 + 4 >> 2] = HEAP32[$201 + 4 >> 2];
     HEAP32[$5040 + 8 >> 2] = HEAP32[$201 + 8 >> 2];
     HEAP32[$5040 + 12 >> 2] = HEAP32[$201 + 12 >> 2];
     $$010$be = $5039;
     break L425;
     break;
    }
   case 1978:
    {
     label = 0;
     $$010$be = HEAP32[$$lcssa6429 + 8 >> 2] | 0;
     break L425;
     break;
    }
   case 2073:
    {
     label = 0;
     HEAP32[$$lcssa6307$lcssa6412 >> 2] = 15;
     $5356 = $$idx$val$i910$lcssa6287$lcssa6414 + -104 | 0;
     HEAP32[$5356 + 0 >> 2] = HEAP32[$201 + 0 >> 2];
     HEAP32[$5356 + 4 >> 2] = HEAP32[$201 + 4 >> 2];
     HEAP32[$5356 + 8 >> 2] = HEAP32[$201 + 8 >> 2];
     HEAP32[$5356 + 12 >> 2] = HEAP32[$201 + 12 >> 2];
     $5357 = HEAP32[HEAP32[$$idx253$lcssa >> 2] >> 2] | 0;
     $5358 = $$idx$val$i910$lcssa6287$lcssa6414 + -16 | 0;
     $__k$val$i2424 = HEAP32[$$lcssa6418 + 56 >> 2] | 0;
     $5360 = $$idx$val$i910$lcssa6287$lcssa6414 + -12 | 0;
     $5361 = HEAP32[$5360 >> 2] | 0;
     do if (!$5361) {
      HEAP32[$0 >> 2] = $5360;
      $$0$i7$i2432 = $5360;
      $5378 = $5360;
      label = 2084;
     } else {
      $__nd$0$i$i2425 = $5361;
      while (1) {
       $5364 = HEAP32[$__nd$0$i$i2425 + 16 >> 2] | 0;
       if ($5364 >>> 0 > $__k$val$i2424 >>> 0) {
        $5366 = HEAP32[$__nd$0$i$i2425 >> 2] | 0;
        if (!$5366) {
         $$lcssa6869 = $__nd$0$i$i2425;
         $__nd$0$i$i2425$lcssa6867 = $__nd$0$i$i2425;
         label = 2077;
         break;
        } else $__nd$0$be$in$i$i2427 = $5366;
       } else {
        if ($5364 >>> 0 >= $__k$val$i2424 >>> 0) {
         $__nd$0$i$i2425$lcssa = $__nd$0$i$i2425;
         label = 2083;
         break;
        }
        $5369 = $__nd$0$i$i2425 + 4 | 0;
        $5370 = HEAP32[$5369 >> 2] | 0;
        if (!$5370) {
         $$lcssa6868 = $5369;
         $__nd$0$i$i2425$lcssa6866 = $__nd$0$i$i2425;
         label = 2081;
         break;
        } else $__nd$0$be$in$i$i2427 = $5370;
       }
       $__nd$0$i$i2425 = $__nd$0$be$in$i$i2427;
      }
      if ((label | 0) == 2077) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2425$lcssa6867;
       $$0$i7$i2432 = $$lcssa6869;
       $5378 = $__nd$0$i$i2425$lcssa6867;
       label = 2084;
       break;
      } else if ((label | 0) == 2081) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2425$lcssa6866;
       $$0$i7$i2432 = $$lcssa6868;
       $5378 = $__nd$0$i$i2425$lcssa6866;
       label = 2084;
       break;
      } else if ((label | 0) == 2083) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2425$lcssa;
       if (!$__nd$0$i$i2425$lcssa) {
        $$0$i7$i2432 = $0;
        $5378 = 0;
        label = 2084;
        break;
       } else {
        $$idx$val$i910$lcssa62876416 = $$idx$val$i910$lcssa6287$lcssa6414;
        $__r$0$i2436 = $__nd$0$i$i2425$lcssa;
        break;
       }
      }
     } while (0);
     if ((label | 0) == 2084) {
      label = 0;
      $5373 = __Znwj(24) | 0;
      HEAP32[$5373 + 16 >> 2] = $__k$val$i2424;
      HEAP32[$5373 + 20 >> 2] = 0;
      HEAP32[$5373 >> 2] = 0;
      HEAP32[$5373 + 4 >> 2] = 0;
      HEAP32[$5373 + 8 >> 2] = $5378;
      HEAP32[$$0$i7$i2432 >> 2] = $5373;
      $5380 = HEAP32[HEAP32[$5358 >> 2] >> 2] | 0;
      if (!$5380) $5384 = $5373; else {
       HEAP32[$5358 >> 2] = $5380;
       $5384 = HEAP32[$$0$i7$i2432 >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i910$lcssa6287$lcssa6414 + -12 >> 2] | 0, $5384);
      $5385 = $$idx$val$i910$lcssa6287$lcssa6414 + -8 | 0;
      HEAP32[$5385 >> 2] = (HEAP32[$5385 >> 2] | 0) + 1;
      $$idx$val$i910$lcssa62876416 = $$idx$val$i910$lcssa6287$lcssa6414;
      $__r$0$i2436 = $5373;
     }
     HEAP32[$__r$0$i2436 + 20 >> 2] = $5357;
     HEAP32[$$idx$val$i910$lcssa62876416 + -56 >> 2] = 0;
     $$010$be = HEAP32[$$lcssa6418 + 48 >> 2] | 0;
     break L425;
     break;
    }
   case 2233:
    {
     label = 0;
     $5689 = HEAP32[$$idx$val$lcssa + ($$lcssa6405 << 2) >> 2] | 0;
     $5690 = $$idx$val$i910$lcssa6288$lcssa6385 + -16 | 0;
     $__k$val$i2576 = HEAP32[$$lcssa6391 + 56 >> 2] | 0;
     $5692 = $$idx$val$i910$lcssa6288$lcssa6385 + -12 | 0;
     $5693 = HEAP32[$5692 >> 2] | 0;
     do if (!$5693) {
      HEAP32[$0 >> 2] = $5692;
      $$0$i7$i2584 = $5692;
      $5710 = $5692;
      label = 2244;
     } else {
      $__nd$0$i$i2577 = $5693;
      while (1) {
       $5696 = HEAP32[$__nd$0$i$i2577 + 16 >> 2] | 0;
       if ($5696 >>> 0 > $__k$val$i2576 >>> 0) {
        $5698 = HEAP32[$__nd$0$i$i2577 >> 2] | 0;
        if (!$5698) {
         $$lcssa6865 = $__nd$0$i$i2577;
         $__nd$0$i$i2577$lcssa6863 = $__nd$0$i$i2577;
         label = 2237;
         break;
        } else $__nd$0$be$in$i$i2579 = $5698;
       } else {
        if ($5696 >>> 0 >= $__k$val$i2576 >>> 0) {
         $__nd$0$i$i2577$lcssa = $__nd$0$i$i2577;
         label = 2243;
         break;
        }
        $5701 = $__nd$0$i$i2577 + 4 | 0;
        $5702 = HEAP32[$5701 >> 2] | 0;
        if (!$5702) {
         $$lcssa6864 = $5701;
         $__nd$0$i$i2577$lcssa6862 = $__nd$0$i$i2577;
         label = 2241;
         break;
        } else $__nd$0$be$in$i$i2579 = $5702;
       }
       $__nd$0$i$i2577 = $__nd$0$be$in$i$i2579;
      }
      if ((label | 0) == 2237) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2577$lcssa6863;
       $$0$i7$i2584 = $$lcssa6865;
       $5710 = $__nd$0$i$i2577$lcssa6863;
       label = 2244;
       break;
      } else if ((label | 0) == 2241) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2577$lcssa6862;
       $$0$i7$i2584 = $$lcssa6864;
       $5710 = $__nd$0$i$i2577$lcssa6862;
       label = 2244;
       break;
      } else if ((label | 0) == 2243) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2577$lcssa;
       if (!$__nd$0$i$i2577$lcssa) {
        $$0$i7$i2584 = $0;
        $5710 = 0;
        label = 2244;
        break;
       } else {
        $__r$0$i2588 = $__nd$0$i$i2577$lcssa;
        break;
       }
      }
     } while (0);
     if ((label | 0) == 2244) {
      label = 0;
      $5705 = __Znwj(24) | 0;
      HEAP32[$5705 + 16 >> 2] = $__k$val$i2576;
      HEAP32[$5705 + 20 >> 2] = 0;
      HEAP32[$5705 >> 2] = 0;
      HEAP32[$5705 + 4 >> 2] = 0;
      HEAP32[$5705 + 8 >> 2] = $5710;
      HEAP32[$$0$i7$i2584 >> 2] = $5705;
      $5712 = HEAP32[HEAP32[$5690 >> 2] >> 2] | 0;
      if (!$5712) $5716 = $5705; else {
       HEAP32[$5690 >> 2] = $5712;
       $5716 = HEAP32[$$0$i7$i2584 >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i910$lcssa6288$lcssa6385 + -12 >> 2] | 0, $5716);
      $5717 = $$idx$val$i910$lcssa6288$lcssa6385 + -8 | 0;
      HEAP32[$5717 >> 2] = (HEAP32[$5717 >> 2] | 0) + 1;
      $__r$0$i2588 = $5705;
     }
     HEAP32[$__r$0$i2588 + 20 >> 2] = $5689;
     $$010$be = HEAP32[$$lcssa6391 + 48 >> 2] | 0;
     break L425;
     break;
    }
   }
  } while (0);
  $$010 = $$010$be;
 }
 L2221 : switch (label | 0) {
 case 65:
  {
   $$107 = ___cxa_find_matching_catch() | 0;
   $$107135 = tempRet0;
   ___resumeException($$107 | 0);
   break;
  }
 case 85:
  {
   $580 = ___cxa_find_matching_catch() | 0;
   $581 = tempRet0;
   __ZdlPv($$lcssa7189);
   $eh$lpad$body$i$index2Z2D = $581;
   $eh$lpad$body$i$indexZ2D = $580;
   $638 = HEAP32[$217 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $638);
   ___resumeException($eh$lpad$body$i$indexZ2D | 0);
   break;
  }
 case 104:
  {
   $636 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $636;
   $638 = HEAP32[$217 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $638);
   ___resumeException($eh$lpad$body$i$indexZ2D | 0);
   break;
  }
 case 132:
  {
   $706 = ___cxa_find_matching_catch() | 0;
   $707 = tempRet0;
   __ZdlPv($$lcssa7188);
   $eh$lpad$body$index7Z2D = $707;
   $eh$lpad$body$indexZ2D = $706;
   label = 153;
   break;
  }
 case 152:
  {
   $763 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index7Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $763;
   label = 153;
   break;
  }
 case 159:
  {
   $782 = ___cxa_find_matching_catch() | 0;
   $783 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($12, HEAP32[$222 >> 2] | 0);
   $$107 = $782;
   $$107135 = $783;
   ___resumeException($$107 | 0);
   break;
  }
 case 258:
  {
   $1022 = ___cxa_find_matching_catch() | 0;
   $1023 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($19, HEAP32[$239 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($18, HEAP32[$236 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($fields, HEAP32[$233 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env26, HEAP32[$230 >> 2] | 0);
   $$107 = $1022;
   $$107135 = $1023;
   ___resumeException($$107 | 0);
   break;
  }
 case 261:
  {
   $1035 = ___cxa_find_matching_catch() | 0;
   $1036 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env27, HEAP32[$240 >> 2] | 0);
   $$107 = $1035;
   $$107135 = $1036;
   ___resumeException($$107 | 0);
   break;
  }
 case 275:
  {
   $1064 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $20 | 0, 39624, 50);
   $1065 = __THREW__;
   __THREW__ = 0;
   if ($1065 & 1) {
    $1072 = ___cxa_find_matching_catch() | 0;
    $$2182812 = $1072;
    $$2302811 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $1064 | 0, $195 | 0, $$010$lcssa6877 + 4 | 0, $20 | 0);
    $1068 = __THREW__;
    __THREW__ = 0;
    if ($1068 & 1) $$0142 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $1064 | 0, 38664, 183);
     $1070 = __THREW__;
     __THREW__ = 0;
     if ($1070 & 1) $$0142 = 0; else {}
    }
    $1074 = ___cxa_find_matching_catch() | 0;
    $1075 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
    if ($$0142) {
     $$2182812 = $1074;
     $$2302811 = $1075;
    } else {
     $$107 = $1074;
     $$107135 = $1075;
     ___resumeException($$107 | 0);
    }
   }
   ___cxa_free_exception($1064 | 0);
   $$107 = $$2182812;
   $$107135 = $$2302811;
   ___resumeException($$107 | 0);
   break;
  }
 case 327:
  {
   $1191 = $$lcssa7186;
   label = 329;
   break;
  }
 case 328:
  {
   $1191 = $$lcssa7187;
   label = 329;
   break;
  }
 case 339:
  {
   $1234 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(45984, 39728, 29) | 0, HEAP32[$$lcssa7030 >> 2] | 0) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $1234 + (HEAP32[(HEAP32[$1234 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $1239 = invoke_iii(22, $0 | 0, 50208) | 0;
   $1240 = __THREW__;
   __THREW__ = 0;
   if ($1240 & 1) {
    $1248 = ___cxa_find_matching_catch() | 0;
    $1249 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1248 | 0);
   }
   __THREW__ = 0;
   $1245 = invoke_iii(HEAP32[(HEAP32[$1239 >> 2] | 0) + 28 >> 2] | 0, $1239 | 0, 10) | 0;
   $1246 = __THREW__;
   __THREW__ = 0;
   if ($1246 & 1) {
    $1248 = ___cxa_find_matching_catch() | 0;
    $1249 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1248 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($1234, $1245) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($1234) | 0;
    _abort();
   }
   break;
  }
 case 345:
  {
   $1256 = ___cxa_allocate_exception(24) | 0;
   $1257 = $$lcssa6831 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $22 | 0, HEAP32[$201 >> 2] | 0);
   $1258 = __THREW__;
   __THREW__ = 0;
   do if ($1258 & 1) {
    $1267 = ___cxa_find_matching_catch() | 0;
    $$4202815 = $1267;
    $$4322814 = tempRet0;
   } else {
    __THREW__ = 0;
    $1260 = invoke_iiii(30, $22 | 0, 0, 39760) | 0;
    $1261 = __THREW__;
    __THREW__ = 0;
    if ($1261 & 1) {
     $1269 = ___cxa_find_matching_catch() | 0;
     $1270 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
     $$4202815 = $1269;
     $$4322814 = $1270;
     break;
    };
    HEAP32[$21 + 0 >> 2] = HEAP32[$1260 + 0 >> 2];
    HEAP32[$21 + 4 >> 2] = HEAP32[$1260 + 4 >> 2];
    HEAP32[$21 + 8 >> 2] = HEAP32[$1260 + 8 >> 2];
    HEAP32[$1260 + 0 >> 2] = 0;
    HEAP32[$1260 + 4 >> 2] = 0;
    HEAP32[$1260 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(17, $1256 | 0, $195 | 0, $1257 | 0, $21 | 0);
    $1263 = __THREW__;
    __THREW__ = 0;
    if ($1263 & 1) $$0146 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $1256 | 0, 38664, 183);
     $1265 = __THREW__;
     __THREW__ = 0;
     if ($1265 & 1) $$0146 = 0; else {}
    }
    $1271 = ___cxa_find_matching_catch() | 0;
    $1272 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
    if ($$0146) {
     $$4202815 = $1271;
     $$4322814 = $1272;
    } else {
     $$107 = $1271;
     $$107135 = $1272;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($1256 | 0);
   $$107 = $$4202815;
   $$107135 = $$4322814;
   ___resumeException($$107 | 0);
   break;
  }
 case 357:
  {
   $1293 = $ss + 64 | 0;
   $1294 = $ss + 8 | 0;
   HEAP32[$1294 >> 2] = 752;
   $1295 = $ss + 12 | 0;
   HEAP32[$ss >> 2] = 900;
   HEAP32[$1293 >> 2] = 920;
   HEAP32[$ss + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss + 64 | 0, $1295 | 0);
   $1298 = __THREW__;
   __THREW__ = 0;
   if ($1298 & 1) {
    $1310 = ___cxa_find_matching_catch() | 0;
    $$0$i681 = tempRet0;
    $$01$i = $1310;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1293);
    ___resumeException($$01$i | 0);
   }
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 732;
   HEAP32[$1293 >> 2] = 772;
   HEAP32[$1294 >> 2] = 752;
   __THREW__ = 0;
   invoke_vi(177, $1295 | 0);
   $1302 = __THREW__;
   __THREW__ = 0;
   do if ($1302 & 1) {
    $1312 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i679$index12Z2D = tempRet0;
    $eh$lpad$body$i679$indexZ2D = $1312;
   } else {
    HEAP32[$1295 >> 2] = 1064;
    $1304 = $ss + 44 | 0;
    HEAP32[$1304 + 0 >> 2] = 0;
    HEAP32[$1304 + 4 >> 2] = 0;
    HEAP32[$1304 + 8 >> 2] = 0;
    HEAP32[$1304 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $1295 | 0, $0 | 0);
    $1306 = __THREW__;
    __THREW__ = 0;
    if ($1306 & 1) {
     $1308 = ___cxa_find_matching_catch() | 0;
     $1309 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1304);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1295);
     $eh$lpad$body$i679$index12Z2D = $1309;
     $eh$lpad$body$i679$indexZ2D = $1308;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $1314 = invoke_iiii(25, $1294 | 0, 39800, 9) | 0;
    $1315 = __THREW__;
    __THREW__ = 0;
    do if ($1315 & 1) label = 373; else {
     __THREW__ = 0;
     $1323 = invoke_iii(21, $1314 | 0, (HEAP32[$$lcssa6850 >> 2] | 0) - (HEAP32[$$lcssa6856 >> 2] | 0) >> 2 | 0) | 0;
     $1324 = __THREW__;
     __THREW__ = 0;
     if ($1324 & 1) label = 373; else {
      __THREW__ = 0;
      $1326 = invoke_iiii(25, $1323 | 0, 39816, 16) | 0;
      $1327 = __THREW__;
      __THREW__ = 0;
      if ($1327 & 1) label = 373; else {
       __THREW__ = 0;
       $1335 = invoke_iii(21, $1326 | 0, (HEAP32[$$lcssa6838 >> 2] | 0) - (HEAP32[$$lcssa6844 >> 2] | 0) >> 2 | 0) | 0;
       $1336 = __THREW__;
       __THREW__ = 0;
       if ($1336 & 1) label = 373; else {
        __THREW__ = 0;
        invoke_iiii(25, $1335 | 0, 45688, 1) | 0;
        $1338 = __THREW__;
        __THREW__ = 0;
        if ($1338 & 1) label = 373; else {
         $1340 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_vii(43, $23 | 0, $1295 | 0);
         $1341 = __THREW__;
         __THREW__ = 0;
         if ($1341 & 1) {
          $1350 = ___cxa_find_matching_catch() | 0;
          $$5212819 = $1350;
          $$5332818 = tempRet0;
         } else {
          __THREW__ = 0;
          invoke_viiii(17, $1340 | 0, $195 | 0, $$lcssa6832 + 4 | 0, $23 | 0);
          $1344 = __THREW__;
          __THREW__ = 0;
          if ($1344 & 1) $$0149 = 1; else {
           __THREW__ = 0;
           invoke_viii(4, $1340 | 0, 38664, 183);
           $1346 = __THREW__;
           __THREW__ = 0;
           if ($1346 & 1) $$0149 = 0; else {}
          }
          $1352 = ___cxa_find_matching_catch() | 0;
          $1353 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
          if ($$0149) {
           $$5212819 = $1352;
           $$5332818 = $1353;
          } else {
           $$6 = $1352;
           $$634 = $1353;
           break;
          }
         }
         ___cxa_free_exception($1340 | 0);
         $$6 = $$5212819;
         $$634 = $$5332818;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 373) {
     $1348 = ___cxa_find_matching_catch() | 0;
     $$6 = $1348;
     $$634 = tempRet0;
    }
    HEAP32[$ss >> 2] = 732;
    HEAP32[$1293 >> 2] = 772;
    HEAP32[$1294 >> 2] = 752;
    HEAP32[$1295 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1304);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1295);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1293);
    $$107 = $$6;
    $$107135 = $$634;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i681 = $eh$lpad$body$i679$index12Z2D;
   $$01$i = $eh$lpad$body$i679$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1293);
   ___resumeException($$01$i | 0);
   break;
  }
 case 440:
  {
   $1539 = ___cxa_find_matching_catch() | 0;
   $1541 = HEAP32[$args >> 2] | 0;
   if (!$1541) ___resumeException($1539 | 0);
   $1544 = HEAP32[$241 >> 2] | 0;
   if (($1544 | 0) != ($1541 | 0)) HEAP32[$241 >> 2] = $1544 + (~(($1544 + -4 - $1541 | 0) >>> 2) << 2);
   __ZdlPv($1541);
   ___resumeException($1539 | 0);
   break;
  }
 case 475:
  {
   $1621 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body825$index17Z2D = tempRet0;
   $eh$lpad$body825$indexZ2D = $1621;
   label = 476;
   break;
  }
 case 516:
  {
   $1690 = ___cxa_find_matching_catch() | 0;
   $1691 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings, HEAP32[$245 >> 2] | 0);
   $eh$lpad$body825$index17Z2D = $1691;
   $eh$lpad$body825$indexZ2D = $1690;
   label = 476;
   break;
  }
 case 533:
  {
   $1737 = $$lcssa6377;
   $lpad$phi2989$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2989$index22 = tempRet0;
   label = 535;
   break;
  }
 case 534:
  {
   $1735 = ___cxa_find_matching_catch() | 0;
   $1737 = HEAP32[$245 >> 2] | 0;
   $lpad$phi2989$index = $1735;
   $lpad$phi2989$index22 = tempRet0;
   label = 535;
   break;
  }
 case 592:
  {
   $1864 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(45984, 39840, 42) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $1864 + (HEAP32[(HEAP32[$1864 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $1869 = invoke_iii(22, $0 | 0, 50208) | 0;
   $1870 = __THREW__;
   __THREW__ = 0;
   if ($1870 & 1) {
    $1878 = ___cxa_find_matching_catch() | 0;
    $1879 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1878 | 0);
   }
   __THREW__ = 0;
   $1875 = invoke_iii(HEAP32[(HEAP32[$1869 >> 2] | 0) + 28 >> 2] | 0, $1869 | 0, 10) | 0;
   $1876 = __THREW__;
   __THREW__ = 0;
   if ($1876 & 1) {
    $1878 = ___cxa_find_matching_catch() | 0;
    $1879 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1878 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($1864, $1875) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($1864) | 0;
    _abort();
   }
   break;
  }
 case 597:
  {
   $1882 = ___cxa_allocate_exception(24) | 0;
   $1883 = $$lcssa6314$lcssa + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $31 | 0, HEAP32[$$lcssa6325$lcssa >> 2] | 0);
   $1885 = __THREW__;
   __THREW__ = 0;
   do if ($1885 & 1) {
    $1937 = ___cxa_find_matching_catch() | 0;
    $$162822 = $1937;
    $$16442821 = tempRet0;
   } else {
    __THREW__ = 0;
    $1887 = invoke_iiii(30, $31 | 0, 0, 39888) | 0;
    $1888 = __THREW__;
    __THREW__ = 0;
    if ($1888 & 1) {
     $1939 = ___cxa_find_matching_catch() | 0;
     $1940 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
     $$162822 = $1939;
     $$16442821 = $1940;
     break;
    };
    HEAP32[$30 + 0 >> 2] = HEAP32[$1887 + 0 >> 2];
    HEAP32[$30 + 4 >> 2] = HEAP32[$1887 + 4 >> 2];
    HEAP32[$30 + 8 >> 2] = HEAP32[$1887 + 8 >> 2];
    HEAP32[$1887 + 0 >> 2] = 0;
    HEAP32[$1887 + 4 >> 2] = 0;
    HEAP32[$1887 + 8 >> 2] = 0;
    __THREW__ = 0;
    $1890 = invoke_iii(27, $30 | 0, 39912) | 0;
    $1891 = __THREW__;
    __THREW__ = 0;
    if ($1891 & 1) {
     $1941 = ___cxa_find_matching_catch() | 0;
     $$14 = $1941;
     $$1442 = tempRet0;
     $$7161 = 1;
    } else {
     HEAP32[$29 + 0 >> 2] = HEAP32[$1890 + 0 >> 2];
     HEAP32[$29 + 4 >> 2] = HEAP32[$1890 + 4 >> 2];
     HEAP32[$29 + 8 >> 2] = HEAP32[$1890 + 8 >> 2];
     HEAP32[$1890 + 0 >> 2] = 0;
     HEAP32[$1890 + 4 >> 2] = 0;
     HEAP32[$1890 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(61, $32 | 0, HEAP32[$$lcssa6317$lcssa >> 2] | 0);
     $1893 = __THREW__;
     __THREW__ = 0;
     if ($1893 & 1) {
      $1943 = ___cxa_find_matching_catch() | 0;
      $$1322 = $1943;
      $$1341 = tempRet0;
      $$6160 = 1;
     } else {
      $1895 = HEAP8[$32 >> 0] | 0;
      if (!($1895 & 1)) {
       $1905 = $32 + 1 | 0;
       $1906 = ($1895 & 255) >>> 1;
      } else {
       $1905 = HEAP32[$32 + 8 >> 2] | 0;
       $1906 = HEAP32[$32 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $1907 = invoke_iiii(33, $29 | 0, $1905 | 0, $1906 | 0) | 0;
      $1908 = __THREW__;
      __THREW__ = 0;
      if ($1908 & 1) {
       $1945 = ___cxa_find_matching_catch() | 0;
       $$12 = $1945;
       $$1240 = tempRet0;
       $$5159 = 1;
      } else {
       HEAP32[$28 + 0 >> 2] = HEAP32[$1907 + 0 >> 2];
       HEAP32[$28 + 4 >> 2] = HEAP32[$1907 + 4 >> 2];
       HEAP32[$28 + 8 >> 2] = HEAP32[$1907 + 8 >> 2];
       HEAP32[$1907 + 0 >> 2] = 0;
       HEAP32[$1907 + 4 >> 2] = 0;
       HEAP32[$1907 + 8 >> 2] = 0;
       __THREW__ = 0;
       $1910 = invoke_iii(27, $28 | 0, 39944) | 0;
       $1911 = __THREW__;
       __THREW__ = 0;
       if ($1911 & 1) {
        $1947 = ___cxa_find_matching_catch() | 0;
        $$11 = $1947;
        $$1139 = tempRet0;
        $$4158 = 1;
       } else {
        HEAP32[$27 + 0 >> 2] = HEAP32[$1910 + 0 >> 2];
        HEAP32[$27 + 4 >> 2] = HEAP32[$1910 + 4 >> 2];
        HEAP32[$27 + 8 >> 2] = HEAP32[$1910 + 8 >> 2];
        HEAP32[$1910 + 0 >> 2] = 0;
        HEAP32[$1910 + 4 >> 2] = 0;
        HEAP32[$1910 + 8 >> 2] = 0;
        __THREW__ = 0;
        invoke_vii(61, $33 | 0, HEAP32[$201 >> 2] | 0);
        $1913 = __THREW__;
        __THREW__ = 0;
        if ($1913 & 1) {
         $1949 = ___cxa_find_matching_catch() | 0;
         $$10 = $1949;
         $$1038 = tempRet0;
         $$3157 = 1;
        } else {
         $1915 = HEAP8[$33 >> 0] | 0;
         if (!($1915 & 1)) {
          $1925 = $33 + 1 | 0;
          $1926 = ($1915 & 255) >>> 1;
         } else {
          $1925 = HEAP32[$33 + 8 >> 2] | 0;
          $1926 = HEAP32[$33 + 4 >> 2] | 0;
         }
         __THREW__ = 0;
         $1927 = invoke_iiii(33, $27 | 0, $1925 | 0, $1926 | 0) | 0;
         $1928 = __THREW__;
         __THREW__ = 0;
         if ($1928 & 1) {
          $1951 = ___cxa_find_matching_catch() | 0;
          $$2156 = 1;
          $$9 = $1951;
          $$937 = tempRet0;
         } else {
          HEAP32[$26 + 0 >> 2] = HEAP32[$1927 + 0 >> 2];
          HEAP32[$26 + 4 >> 2] = HEAP32[$1927 + 4 >> 2];
          HEAP32[$26 + 8 >> 2] = HEAP32[$1927 + 8 >> 2];
          HEAP32[$1927 + 0 >> 2] = 0;
          HEAP32[$1927 + 4 >> 2] = 0;
          HEAP32[$1927 + 8 >> 2] = 0;
          __THREW__ = 0;
          $1930 = invoke_iii(27, $26 | 0, 45688) | 0;
          $1931 = __THREW__;
          __THREW__ = 0;
          if ($1931 & 1) {
           $1953 = ___cxa_find_matching_catch() | 0;
           $$1155 = 1;
           $$8 = $1953;
           $$836 = tempRet0;
          } else {
           HEAP32[$25 + 0 >> 2] = HEAP32[$1930 + 0 >> 2];
           HEAP32[$25 + 4 >> 2] = HEAP32[$1930 + 4 >> 2];
           HEAP32[$25 + 8 >> 2] = HEAP32[$1930 + 8 >> 2];
           HEAP32[$1930 + 0 >> 2] = 0;
           HEAP32[$1930 + 4 >> 2] = 0;
           HEAP32[$1930 + 8 >> 2] = 0;
           __THREW__ = 0;
           invoke_viiii(17, $1882 | 0, $195 | 0, $1883 | 0, $25 | 0);
           $1933 = __THREW__;
           __THREW__ = 0;
           do if ($1933 & 1) $$0154 = 1; else {
            __THREW__ = 0;
            invoke_viii(4, $1882 | 0, 38664, 183);
            $1935 = __THREW__;
            __THREW__ = 0;
            if ($1935 & 1) {
             $$0154 = 0;
             break;
            }
           } while (0);
           $1955 = ___cxa_find_matching_catch() | 0;
           $1956 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
           $$1155 = $$0154;
           $$8 = $1955;
           $$836 = $1956;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
          $$2156 = $$1155;
          $$9 = $$8;
          $$937 = $$836;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
         $$10 = $$9;
         $$1038 = $$937;
         $$3157 = $$2156;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
        $$11 = $$10;
        $$1139 = $$1038;
        $$4158 = $$3157;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
       $$12 = $$11;
       $$1240 = $$1139;
       $$5159 = $$4158;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
      $$1322 = $$12;
      $$1341 = $$1240;
      $$6160 = $$5159;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
     $$14 = $$1322;
     $$1442 = $$1341;
     $$7161 = $$6160;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
    if ($$7161) {
     $$162822 = $$14;
     $$16442821 = $$1442;
    } else {
     $$107 = $$14;
     $$107135 = $$1442;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($1882 | 0);
   $$107 = $$162822;
   $$107135 = $$16442821;
   ___resumeException($$107 | 0);
   break;
  }
 case 654:
  {
   $lpad$phi2995$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2995$index28 = tempRet0;
   label = 657;
   break;
  }
 case 655:
  {
   $lpad$phi2995$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2995$index28 = tempRet0;
   label = 657;
   break;
  }
 case 656:
  {
   $lpad$phi2995$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2995$index28 = tempRet0;
   label = 657;
   break;
  }
 case 687:
  {
   $2081 = ___cxa_allocate_exception(24) | 0;
   $2082 = $$lcssa6314$lcssa6826 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $37 | 0, HEAP32[$$lcssa6325$lcssa6800 >> 2] | 0);
   $2084 = __THREW__;
   __THREW__ = 0;
   do if ($2084 & 1) {
    $2096 = ___cxa_find_matching_catch() | 0;
    $$192826 = $2096;
    $$19472825 = tempRet0;
   } else {
    __THREW__ = 0;
    $2086 = invoke_iiii(30, $37 | 0, 0, 39888) | 0;
    $2087 = __THREW__;
    __THREW__ = 0;
    if ($2087 & 1) {
     $2098 = ___cxa_find_matching_catch() | 0;
     $2099 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($37);
     $$192826 = $2098;
     $$19472825 = $2099;
     break;
    };
    HEAP32[$36 + 0 >> 2] = HEAP32[$2086 + 0 >> 2];
    HEAP32[$36 + 4 >> 2] = HEAP32[$2086 + 4 >> 2];
    HEAP32[$36 + 8 >> 2] = HEAP32[$2086 + 8 >> 2];
    HEAP32[$2086 + 0 >> 2] = 0;
    HEAP32[$2086 + 4 >> 2] = 0;
    HEAP32[$2086 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2089 = invoke_iii(27, $36 | 0, 39952) | 0;
    $2090 = __THREW__;
    __THREW__ = 0;
    if ($2090 & 1) {
     $2100 = ___cxa_find_matching_catch() | 0;
     $$1168 = 1;
     $$1723 = $2100;
     $$1745 = tempRet0;
    } else {
     HEAP32[$35 + 0 >> 2] = HEAP32[$2089 + 0 >> 2];
     HEAP32[$35 + 4 >> 2] = HEAP32[$2089 + 4 >> 2];
     HEAP32[$35 + 8 >> 2] = HEAP32[$2089 + 8 >> 2];
     HEAP32[$2089 + 0 >> 2] = 0;
     HEAP32[$2089 + 4 >> 2] = 0;
     HEAP32[$2089 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2081 | 0, $195 | 0, $2082 | 0, $35 | 0);
     $2092 = __THREW__;
     __THREW__ = 0;
     if ($2092 & 1) $$0167 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2081 | 0, 38664, 183);
      $2094 = __THREW__;
      __THREW__ = 0;
      if ($2094 & 1) $$0167 = 0; else {}
     }
     $2102 = ___cxa_find_matching_catch() | 0;
     $2103 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
     $$1168 = $$0167;
     $$1723 = $2102;
     $$1745 = $2103;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($37);
    if ($$1168) {
     $$192826 = $$1723;
     $$19472825 = $$1745;
    } else {
     $$107 = $$1723;
     $$107135 = $$1745;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2081 | 0);
   $$107 = $$192826;
   $$107135 = $$19472825;
   ___resumeException($$107 | 0);
   break;
  }
 case 705:
  {
   $2118 = ___cxa_allocate_exception(24) | 0;
   $2119 = $$lcssa6314$lcssa6825 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $40 | 0, HEAP32[$$lcssa6325$lcssa6799 >> 2] | 0);
   $2121 = __THREW__;
   __THREW__ = 0;
   do if ($2121 & 1) {
    $2133 = ___cxa_find_matching_catch() | 0;
    $$222830 = $2133;
    $$22502829 = tempRet0;
   } else {
    __THREW__ = 0;
    $2123 = invoke_iiii(30, $40 | 0, 0, 39888) | 0;
    $2124 = __THREW__;
    __THREW__ = 0;
    if ($2124 & 1) {
     $2135 = ___cxa_find_matching_catch() | 0;
     $2136 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
     $$222830 = $2135;
     $$22502829 = $2136;
     break;
    };
    HEAP32[$39 + 0 >> 2] = HEAP32[$2123 + 0 >> 2];
    HEAP32[$39 + 4 >> 2] = HEAP32[$2123 + 4 >> 2];
    HEAP32[$39 + 8 >> 2] = HEAP32[$2123 + 8 >> 2];
    HEAP32[$2123 + 0 >> 2] = 0;
    HEAP32[$2123 + 4 >> 2] = 0;
    HEAP32[$2123 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2126 = invoke_iii(27, $39 | 0, 39984) | 0;
    $2127 = __THREW__;
    __THREW__ = 0;
    if ($2127 & 1) {
     $2137 = ___cxa_find_matching_catch() | 0;
     $$1174 = 1;
     $$20 = $2137;
     $$2048 = tempRet0;
    } else {
     HEAP32[$38 + 0 >> 2] = HEAP32[$2126 + 0 >> 2];
     HEAP32[$38 + 4 >> 2] = HEAP32[$2126 + 4 >> 2];
     HEAP32[$38 + 8 >> 2] = HEAP32[$2126 + 8 >> 2];
     HEAP32[$2126 + 0 >> 2] = 0;
     HEAP32[$2126 + 4 >> 2] = 0;
     HEAP32[$2126 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2118 | 0, $195 | 0, $2119 | 0, $38 | 0);
     $2129 = __THREW__;
     __THREW__ = 0;
     if ($2129 & 1) $$0173 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2118 | 0, 38664, 183);
      $2131 = __THREW__;
      __THREW__ = 0;
      if ($2131 & 1) $$0173 = 0; else {}
     }
     $2139 = ___cxa_find_matching_catch() | 0;
     $2140 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($38);
     $$1174 = $$0173;
     $$20 = $2139;
     $$2048 = $2140;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
    if ($$1174) {
     $$222830 = $$20;
     $$22502829 = $$2048;
    } else {
     $$107 = $$20;
     $$107135 = $$2048;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2118 | 0);
   $$107 = $$222830;
   $$107135 = $$22502829;
   ___resumeException($$107 | 0);
   break;
  }
 case 721:
  {
   $2158 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $44 | 0, 40016, 17);
   $2159 = __THREW__;
   __THREW__ = 0;
   if ($2159 & 1) {
    $2166 = ___cxa_find_matching_catch() | 0;
    $$232834 = $2166;
    $$23512833 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $2158 | 0, $195 | 0, $$lcssa6314$lcssa6824 + 4 | 0, $44 | 0);
    $2162 = __THREW__;
    __THREW__ = 0;
    if ($2162 & 1) $$0181 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $2158 | 0, 38664, 183);
     $2164 = __THREW__;
     __THREW__ = 0;
     if ($2164 & 1) $$0181 = 0; else {}
    }
    $2168 = ___cxa_find_matching_catch() | 0;
    $2169 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
    if ($$0181) {
     $$232834 = $2168;
     $$23512833 = $2169;
    } else {
     $$107 = $2168;
     $$107135 = $2169;
     ___resumeException($$107 | 0);
    }
   }
   ___cxa_free_exception($2158 | 0);
   $$107 = $$232834;
   $$107135 = $$23512833;
   ___resumeException($$107 | 0);
   break;
  }
 case 737:
  {
   $2229 = ___cxa_allocate_exception(24) | 0;
   $2230 = $$lcssa6314$lcssa6823 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $48 | 0, HEAP32[$$lcssa6325$lcssa6797 >> 2] | 0);
   $2232 = __THREW__;
   __THREW__ = 0;
   do if ($2232 & 1) {
    $2244 = ___cxa_find_matching_catch() | 0;
    $$262837 = $2244;
    $$26542836 = tempRet0;
   } else {
    __THREW__ = 0;
    $2234 = invoke_iiii(30, $48 | 0, 0, 39888) | 0;
    $2235 = __THREW__;
    __THREW__ = 0;
    if ($2235 & 1) {
     $2246 = ___cxa_find_matching_catch() | 0;
     $2247 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
     $$262837 = $2246;
     $$26542836 = $2247;
     break;
    };
    HEAP32[$47 + 0 >> 2] = HEAP32[$2234 + 0 >> 2];
    HEAP32[$47 + 4 >> 2] = HEAP32[$2234 + 4 >> 2];
    HEAP32[$47 + 8 >> 2] = HEAP32[$2234 + 8 >> 2];
    HEAP32[$2234 + 0 >> 2] = 0;
    HEAP32[$2234 + 4 >> 2] = 0;
    HEAP32[$2234 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2237 = invoke_iii(27, $47 | 0, 40040) | 0;
    $2238 = __THREW__;
    __THREW__ = 0;
    if ($2238 & 1) {
     $2248 = ___cxa_find_matching_catch() | 0;
     $$1186 = 1;
     $$2424 = $2248;
     $$2452 = tempRet0;
    } else {
     HEAP32[$46 + 0 >> 2] = HEAP32[$2237 + 0 >> 2];
     HEAP32[$46 + 4 >> 2] = HEAP32[$2237 + 4 >> 2];
     HEAP32[$46 + 8 >> 2] = HEAP32[$2237 + 8 >> 2];
     HEAP32[$2237 + 0 >> 2] = 0;
     HEAP32[$2237 + 4 >> 2] = 0;
     HEAP32[$2237 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2229 | 0, $195 | 0, $2230 | 0, $46 | 0);
     $2240 = __THREW__;
     __THREW__ = 0;
     if ($2240 & 1) $$0185 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2229 | 0, 38664, 183);
      $2242 = __THREW__;
      __THREW__ = 0;
      if ($2242 & 1) $$0185 = 0; else {}
     }
     $2250 = ___cxa_find_matching_catch() | 0;
     $2251 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
     $$1186 = $$0185;
     $$2424 = $2250;
     $$2452 = $2251;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
    if ($$1186) {
     $$262837 = $$2424;
     $$26542836 = $$2452;
    } else {
     $$107 = $$2424;
     $$107135 = $$2452;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2229 | 0);
   $$107 = $$262837;
   $$107135 = $$26542836;
   ___resumeException($$107 | 0);
   break;
  }
 case 748:
  {
   $2252 = ___cxa_allocate_exception(24) | 0;
   $2253 = $$lcssa6314$lcssa6817 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $51 | 0, HEAP32[$$lcssa6325$lcssa6791 >> 2] | 0);
   $2255 = __THREW__;
   __THREW__ = 0;
   do if ($2255 & 1) {
    $2267 = ___cxa_find_matching_catch() | 0;
    $$292841 = $2267;
    $$29572840 = tempRet0;
   } else {
    __THREW__ = 0;
    $2257 = invoke_iiii(30, $51 | 0, 0, 39888) | 0;
    $2258 = __THREW__;
    __THREW__ = 0;
    if ($2258 & 1) {
     $2269 = ___cxa_find_matching_catch() | 0;
     $2270 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
     $$292841 = $2269;
     $$29572840 = $2270;
     break;
    };
    HEAP32[$50 + 0 >> 2] = HEAP32[$2257 + 0 >> 2];
    HEAP32[$50 + 4 >> 2] = HEAP32[$2257 + 4 >> 2];
    HEAP32[$50 + 8 >> 2] = HEAP32[$2257 + 8 >> 2];
    HEAP32[$2257 + 0 >> 2] = 0;
    HEAP32[$2257 + 4 >> 2] = 0;
    HEAP32[$2257 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2260 = invoke_iii(27, $50 | 0, 40072) | 0;
    $2261 = __THREW__;
    __THREW__ = 0;
    if ($2261 & 1) {
     $2271 = ___cxa_find_matching_catch() | 0;
     $$1190 = 1;
     $$27 = $2271;
     $$2755 = tempRet0;
    } else {
     HEAP32[$49 + 0 >> 2] = HEAP32[$2260 + 0 >> 2];
     HEAP32[$49 + 4 >> 2] = HEAP32[$2260 + 4 >> 2];
     HEAP32[$49 + 8 >> 2] = HEAP32[$2260 + 8 >> 2];
     HEAP32[$2260 + 0 >> 2] = 0;
     HEAP32[$2260 + 4 >> 2] = 0;
     HEAP32[$2260 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2252 | 0, $195 | 0, $2253 | 0, $49 | 0);
     $2263 = __THREW__;
     __THREW__ = 0;
     if ($2263 & 1) $$0189 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2252 | 0, 38664, 183);
      $2265 = __THREW__;
      __THREW__ = 0;
      if ($2265 & 1) $$0189 = 0; else {}
     }
     $2273 = ___cxa_find_matching_catch() | 0;
     $2274 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
     $$1190 = $$0189;
     $$27 = $2273;
     $$2755 = $2274;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
    if ($$1190) {
     $$292841 = $$27;
     $$29572840 = $$2755;
    } else {
     $$107 = $$27;
     $$107135 = $$2755;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2252 | 0);
   $$107 = $$292841;
   $$107135 = $$29572840;
   ___resumeException($$107 | 0);
   break;
  }
 case 759:
  {
   $2275 = ___cxa_allocate_exception(24) | 0;
   $2276 = $$lcssa6314$lcssa6818 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $54 | 0, HEAP32[$$lcssa6325$lcssa6792 >> 2] | 0);
   $2278 = __THREW__;
   __THREW__ = 0;
   do if ($2278 & 1) {
    $2290 = ___cxa_find_matching_catch() | 0;
    $$322845 = $2290;
    $$32602844 = tempRet0;
   } else {
    __THREW__ = 0;
    $2280 = invoke_iiii(30, $54 | 0, 0, 39888) | 0;
    $2281 = __THREW__;
    __THREW__ = 0;
    if ($2281 & 1) {
     $2292 = ___cxa_find_matching_catch() | 0;
     $2293 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
     $$322845 = $2292;
     $$32602844 = $2293;
     break;
    };
    HEAP32[$53 + 0 >> 2] = HEAP32[$2280 + 0 >> 2];
    HEAP32[$53 + 4 >> 2] = HEAP32[$2280 + 4 >> 2];
    HEAP32[$53 + 8 >> 2] = HEAP32[$2280 + 8 >> 2];
    HEAP32[$2280 + 0 >> 2] = 0;
    HEAP32[$2280 + 4 >> 2] = 0;
    HEAP32[$2280 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2283 = invoke_iii(27, $53 | 0, 40104) | 0;
    $2284 = __THREW__;
    __THREW__ = 0;
    if ($2284 & 1) {
     $2294 = ___cxa_find_matching_catch() | 0;
     $$1198 = 1;
     $$30 = $2294;
     $$3058 = tempRet0;
    } else {
     HEAP32[$52 + 0 >> 2] = HEAP32[$2283 + 0 >> 2];
     HEAP32[$52 + 4 >> 2] = HEAP32[$2283 + 4 >> 2];
     HEAP32[$52 + 8 >> 2] = HEAP32[$2283 + 8 >> 2];
     HEAP32[$2283 + 0 >> 2] = 0;
     HEAP32[$2283 + 4 >> 2] = 0;
     HEAP32[$2283 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2275 | 0, $195 | 0, $2276 | 0, $52 | 0);
     $2286 = __THREW__;
     __THREW__ = 0;
     if ($2286 & 1) $$0197 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2275 | 0, 38664, 183);
      $2288 = __THREW__;
      __THREW__ = 0;
      if ($2288 & 1) $$0197 = 0; else {}
     }
     $2296 = ___cxa_find_matching_catch() | 0;
     $2297 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
     $$1198 = $$0197;
     $$30 = $2296;
     $$3058 = $2297;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
    if ($$1198) {
     $$322845 = $$30;
     $$32602844 = $$3058;
    } else {
     $$107 = $$30;
     $$107135 = $$3058;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2275 | 0);
   $$107 = $$322845;
   $$107135 = $$32602844;
   ___resumeException($$107 | 0);
   break;
  }
 case 771:
  {
   $2299 = ___cxa_allocate_exception(24) | 0;
   $2300 = $$lcssa6314$lcssa6822 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $57 | 0, HEAP32[$$lcssa6325$lcssa6796 >> 2] | 0);
   $2302 = __THREW__;
   __THREW__ = 0;
   do if ($2302 & 1) {
    $2314 = ___cxa_find_matching_catch() | 0;
    $$35262849 = $2314;
    $$35632848 = tempRet0;
   } else {
    __THREW__ = 0;
    $2304 = invoke_iiii(30, $57 | 0, 0, 39888) | 0;
    $2305 = __THREW__;
    __THREW__ = 0;
    if ($2305 & 1) {
     $2316 = ___cxa_find_matching_catch() | 0;
     $2317 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
     $$35262849 = $2316;
     $$35632848 = $2317;
     break;
    };
    HEAP32[$56 + 0 >> 2] = HEAP32[$2304 + 0 >> 2];
    HEAP32[$56 + 4 >> 2] = HEAP32[$2304 + 4 >> 2];
    HEAP32[$56 + 8 >> 2] = HEAP32[$2304 + 8 >> 2];
    HEAP32[$2304 + 0 >> 2] = 0;
    HEAP32[$2304 + 4 >> 2] = 0;
    HEAP32[$2304 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2307 = invoke_iii(27, $56 | 0, 40136) | 0;
    $2308 = __THREW__;
    __THREW__ = 0;
    if ($2308 & 1) {
     $2318 = ___cxa_find_matching_catch() | 0;
     $$1202 = 1;
     $$33 = $2318;
     $$3361 = tempRet0;
    } else {
     HEAP32[$55 + 0 >> 2] = HEAP32[$2307 + 0 >> 2];
     HEAP32[$55 + 4 >> 2] = HEAP32[$2307 + 4 >> 2];
     HEAP32[$55 + 8 >> 2] = HEAP32[$2307 + 8 >> 2];
     HEAP32[$2307 + 0 >> 2] = 0;
     HEAP32[$2307 + 4 >> 2] = 0;
     HEAP32[$2307 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2299 | 0, $195 | 0, $2300 | 0, $55 | 0);
     $2310 = __THREW__;
     __THREW__ = 0;
     if ($2310 & 1) $$0201 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2299 | 0, 38664, 183);
      $2312 = __THREW__;
      __THREW__ = 0;
      if ($2312 & 1) $$0201 = 0; else {}
     }
     $2320 = ___cxa_find_matching_catch() | 0;
     $2321 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     $$1202 = $$0201;
     $$33 = $2320;
     $$3361 = $2321;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
    if ($$1202) {
     $$35262849 = $$33;
     $$35632848 = $$3361;
    } else {
     $$107 = $$33;
     $$107135 = $$3361;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2299 | 0);
   $$107 = $$35262849;
   $$107135 = $$35632848;
   ___resumeException($$107 | 0);
   break;
  }
 case 828:
  {
   $2451 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
   ___resumeException($2451 | 0);
   break;
  }
 case 831:
  {
   $2455 = ___cxa_find_matching_catch() | 0;
   $2456 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
   $$107 = $2455;
   $$107135 = $2456;
   ___resumeException($$107 | 0);
   break;
  }
 case 892:
  {
   $2581 = ___cxa_allocate_exception(24) | 0;
   $2582 = $$lcssa6314$lcssa6819 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $62 | 0, HEAP32[$$lcssa6325$lcssa6793 >> 2] | 0);
   $2584 = __THREW__;
   __THREW__ = 0;
   do if ($2584 & 1) {
    $2596 = ___cxa_find_matching_catch() | 0;
    $$382853 = $2596;
    $$38662852 = tempRet0;
   } else {
    __THREW__ = 0;
    $2586 = invoke_iiii(30, $62 | 0, 0, 39888) | 0;
    $2587 = __THREW__;
    __THREW__ = 0;
    if ($2587 & 1) {
     $2598 = ___cxa_find_matching_catch() | 0;
     $2599 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($62);
     $$382853 = $2598;
     $$38662852 = $2599;
     break;
    };
    HEAP32[$61 + 0 >> 2] = HEAP32[$2586 + 0 >> 2];
    HEAP32[$61 + 4 >> 2] = HEAP32[$2586 + 4 >> 2];
    HEAP32[$61 + 8 >> 2] = HEAP32[$2586 + 8 >> 2];
    HEAP32[$2586 + 0 >> 2] = 0;
    HEAP32[$2586 + 4 >> 2] = 0;
    HEAP32[$2586 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2589 = invoke_iii(27, $61 | 0, 40168) | 0;
    $2590 = __THREW__;
    __THREW__ = 0;
    if ($2590 & 1) {
     $2600 = ___cxa_find_matching_catch() | 0;
     $$1206 = 1;
     $$36 = $2600;
     $$3664 = tempRet0;
    } else {
     HEAP32[$60 + 0 >> 2] = HEAP32[$2589 + 0 >> 2];
     HEAP32[$60 + 4 >> 2] = HEAP32[$2589 + 4 >> 2];
     HEAP32[$60 + 8 >> 2] = HEAP32[$2589 + 8 >> 2];
     HEAP32[$2589 + 0 >> 2] = 0;
     HEAP32[$2589 + 4 >> 2] = 0;
     HEAP32[$2589 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2581 | 0, $195 | 0, $2582 | 0, $60 | 0);
     $2592 = __THREW__;
     __THREW__ = 0;
     if ($2592 & 1) $$0205 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2581 | 0, 38664, 183);
      $2594 = __THREW__;
      __THREW__ = 0;
      if ($2594 & 1) $$0205 = 0; else {}
     }
     $2602 = ___cxa_find_matching_catch() | 0;
     $2603 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
     $$1206 = $$0205;
     $$36 = $2602;
     $$3664 = $2603;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($62);
    if ($$1206) {
     $$382853 = $$36;
     $$38662852 = $$3664;
    } else {
     $$107 = $$36;
     $$107135 = $$3664;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2581 | 0);
   $$107 = $$382853;
   $$107135 = $$38662852;
   ___resumeException($$107 | 0);
   break;
  }
 case 904:
  {
   $2612 = ___cxa_allocate_exception(24) | 0;
   $2613 = $$lcssa6786 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $64 | 0, HEAP32[$201 >> 2] | 0);
   $2614 = __THREW__;
   __THREW__ = 0;
   do if ($2614 & 1) {
    $2623 = ___cxa_find_matching_catch() | 0;
    $$402857 = $2623;
    $$40682856 = tempRet0;
   } else {
    __THREW__ = 0;
    $2616 = invoke_iiii(30, $64 | 0, 0, 40200) | 0;
    $2617 = __THREW__;
    __THREW__ = 0;
    if ($2617 & 1) {
     $2625 = ___cxa_find_matching_catch() | 0;
     $2626 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
     $$402857 = $2625;
     $$40682856 = $2626;
     break;
    };
    HEAP32[$63 + 0 >> 2] = HEAP32[$2616 + 0 >> 2];
    HEAP32[$63 + 4 >> 2] = HEAP32[$2616 + 4 >> 2];
    HEAP32[$63 + 8 >> 2] = HEAP32[$2616 + 8 >> 2];
    HEAP32[$2616 + 0 >> 2] = 0;
    HEAP32[$2616 + 4 >> 2] = 0;
    HEAP32[$2616 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(17, $2612 | 0, $195 | 0, $2613 | 0, $63 | 0);
    $2619 = __THREW__;
    __THREW__ = 0;
    if ($2619 & 1) $$0213 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $2612 | 0, 38664, 183);
     $2621 = __THREW__;
     __THREW__ = 0;
     if ($2621 & 1) $$0213 = 0; else {}
    }
    $2627 = ___cxa_find_matching_catch() | 0;
    $2628 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
    if ($$0213) {
     $$402857 = $2627;
     $$40682856 = $2628;
    } else {
     $$107 = $2627;
     $$107135 = $2628;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2612 | 0);
   $$107 = $$402857;
   $$107135 = $$40682856;
   ___resumeException($$107 | 0);
   break;
  }
 case 967:
  {
   $2751 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings65, HEAP32[$354 >> 2] | 0);
   ___resumeException($2751 | 0);
   break;
  }
 case 985:
  {
   $2793 = ___cxa_find_matching_catch() | 0;
   $2794 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings65, HEAP32[$354 >> 2] | 0);
   $$107 = $2793;
   $$107135 = $2794;
   ___resumeException($$107 | 0);
   break;
  }
 case 1007:
  {
   $2859 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $2859;
   label = 1010;
   break;
  }
 case 1008:
  {
   $2861 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $2861;
   label = 1010;
   break;
  }
 case 1015:
  {
   $2873 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $2873;
   label = 1010;
   break;
  }
 case 1017:
  {
   $2879 = $ss73 + 64 | 0;
   $2880 = $ss73 + 8 | 0;
   HEAP32[$2880 >> 2] = 752;
   $2881 = $ss73 + 12 | 0;
   HEAP32[$ss73 >> 2] = 900;
   HEAP32[$2879 >> 2] = 920;
   HEAP32[$ss73 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss73 + 64 | 0, $2881 | 0);
   $2884 = __THREW__;
   __THREW__ = 0;
   if ($2884 & 1) {
    $2896 = ___cxa_find_matching_catch() | 0;
    $$0$i1194 = tempRet0;
    $$01$i1193 = $2896;
   } else {
    HEAP32[$ss73 + 136 >> 2] = 0;
    HEAP32[$ss73 + 140 >> 2] = -1;
    HEAP32[$ss73 >> 2] = 732;
    HEAP32[$2879 >> 2] = 772;
    HEAP32[$2880 >> 2] = 752;
    __THREW__ = 0;
    invoke_vi(177, $2881 | 0);
    $2888 = __THREW__;
    __THREW__ = 0;
    do if ($2888 & 1) {
     $2898 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1191$index99Z2D = tempRet0;
     $eh$lpad$body$i1191$indexZ2D = $2898;
    } else {
     HEAP32[$2881 >> 2] = 1064;
     $2890 = $ss73 + 44 | 0;
     HEAP32[$2890 + 0 >> 2] = 0;
     HEAP32[$2890 + 4 >> 2] = 0;
     HEAP32[$2890 + 8 >> 2] = 0;
     HEAP32[$2890 + 12 >> 2] = 0;
     HEAP32[$ss73 + 60 >> 2] = 24;
     HEAP32[$8 + 0 >> 2] = 0;
     HEAP32[$8 + 4 >> 2] = 0;
     HEAP32[$8 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $2881 | 0, $8 | 0);
     $2892 = __THREW__;
     __THREW__ = 0;
     if ($2892 & 1) {
      $2894 = ___cxa_find_matching_catch() | 0;
      $2895 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2890);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2881);
      $eh$lpad$body$i1191$index99Z2D = $2895;
      $eh$lpad$body$i1191$indexZ2D = $2894;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     __THREW__ = 0;
     $2900 = invoke_iiii(25, $2880 | 0, 40248, 34) | 0;
     $2901 = __THREW__;
     __THREW__ = 0;
     do if ($2901 & 1) label = 1031; else {
      __THREW__ = 0;
      invoke_iii(31, $2900 | 0, $$lcssa6773 | 0) | 0;
      $2903 = __THREW__;
      __THREW__ = 0;
      if ($2903 & 1) label = 1031; else {
       $2905 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $67 | 0, $2881 | 0);
       $2906 = __THREW__;
       __THREW__ = 0;
       if ($2906 & 1) {
        $2916 = ___cxa_find_matching_catch() | 0;
        $$412861 = $2916;
        $$41692860 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(17, $2905 | 0, $195 | 0, $$lcssa6625 | 0, $67 | 0);
        $2908 = __THREW__;
        __THREW__ = 0;
        if ($2908 & 1) $$0216 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $2905 | 0, 38664, 183);
         $2910 = __THREW__;
         __THREW__ = 0;
         if ($2910 & 1) $$0216 = 0; else {}
        }
        $2918 = ___cxa_find_matching_catch() | 0;
        $2919 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
        if ($$0216) {
         $$412861 = $2918;
         $$41692860 = $2919;
        } else {
         $$42 = $2918;
         $$4270 = $2919;
         break;
        }
       }
       ___cxa_free_exception($2905 | 0);
       $$42 = $$412861;
       $$4270 = $$41692860;
      }
     } while (0);
     if ((label | 0) == 1031) {
      $2914 = ___cxa_find_matching_catch() | 0;
      $$42 = $2914;
      $$4270 = tempRet0;
     }
     HEAP32[$ss73 >> 2] = 732;
     HEAP32[$2879 >> 2] = 772;
     HEAP32[$2880 >> 2] = 752;
     HEAP32[$2881 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2890);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2881);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2879);
     $$59 = $$42;
     $$5987 = $$4270;
     break L2221;
    } while (0);
    $$0$i1194 = $eh$lpad$body$i1191$index99Z2D;
    $$01$i1193 = $eh$lpad$body$i1191$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2879);
   $eh$lpad$body1186$index64Z2D = $$0$i1194;
   $eh$lpad$body1186$indexZ2D = $$01$i1193;
   label = 1010;
   break;
  }
 case 1030:
  {
   $2912 = ___cxa_find_matching_catch() | 0;
   $2913 = tempRet0;
   HEAP32[$254 >> 2] = $$lcssa6767;
   __ZdlPv($$lcssa6767);
   $$59 = $2912;
   $$5987 = $2913;
   break;
  }
 case 1037:
  {
   $2930 = $ss76 + 64 | 0;
   $2931 = $ss76 + 8 | 0;
   HEAP32[$2931 >> 2] = 752;
   $2932 = $ss76 + 12 | 0;
   HEAP32[$ss76 >> 2] = 900;
   HEAP32[$2930 >> 2] = 920;
   HEAP32[$ss76 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss76 + 64 | 0, $2932 | 0);
   $2935 = __THREW__;
   __THREW__ = 0;
   if ($2935 & 1) {
    $2947 = ___cxa_find_matching_catch() | 0;
    $$0$i1213 = tempRet0;
    $$01$i1212 = $2947;
   } else {
    HEAP32[$ss76 + 136 >> 2] = 0;
    HEAP32[$ss76 + 140 >> 2] = -1;
    HEAP32[$ss76 >> 2] = 732;
    HEAP32[$2930 >> 2] = 772;
    HEAP32[$2931 >> 2] = 752;
    __THREW__ = 0;
    invoke_vi(177, $2932 | 0);
    $2939 = __THREW__;
    __THREW__ = 0;
    do if ($2939 & 1) {
     $2949 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1210$index104Z2D = tempRet0;
     $eh$lpad$body$i1210$indexZ2D = $2949;
    } else {
     HEAP32[$2932 >> 2] = 1064;
     $2941 = $ss76 + 44 | 0;
     HEAP32[$2941 + 0 >> 2] = 0;
     HEAP32[$2941 + 4 >> 2] = 0;
     HEAP32[$2941 + 8 >> 2] = 0;
     HEAP32[$2941 + 12 >> 2] = 0;
     HEAP32[$ss76 + 60 >> 2] = 24;
     HEAP32[$7 + 0 >> 2] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
     HEAP32[$7 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $2932 | 0, $7 | 0);
     $2943 = __THREW__;
     __THREW__ = 0;
     if ($2943 & 1) {
      $2945 = ___cxa_find_matching_catch() | 0;
      $2946 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2941);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2932);
      $eh$lpad$body$i1210$index104Z2D = $2946;
      $eh$lpad$body$i1210$indexZ2D = $2945;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
     __THREW__ = 0;
     $2951 = invoke_iiii(25, $2931 | 0, 40288, 43) | 0;
     $2952 = __THREW__;
     __THREW__ = 0;
     do if ($2952 & 1) label = 1054; else {
      __THREW__ = 0;
      invoke_iii(21, $2951 | 0, (HEAP32[$$lcssa6778 >> 2] | 0) - (HEAP32[$$lcssa6782 >> 2] | 0) >> 2 | 0) | 0;
      $2960 = __THREW__;
      __THREW__ = 0;
      if ($2960 & 1) label = 1054; else {
       $2962 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $68 | 0, $2932 | 0);
       $2963 = __THREW__;
       __THREW__ = 0;
       if ($2963 & 1) {
        $2977 = ___cxa_find_matching_catch() | 0;
        $$432864 = $2977;
        $$43712863 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(17, $2962 | 0, $195 | 0, $$lcssa6626 | 0, $68 | 0);
        $2965 = __THREW__;
        __THREW__ = 0;
        if ($2965 & 1) $$0220 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $2962 | 0, 38664, 183);
         $2967 = __THREW__;
         __THREW__ = 0;
         if ($2967 & 1) $$0220 = 0; else {}
        }
        $2979 = ___cxa_find_matching_catch() | 0;
        $2980 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
        if ($$0220) {
         $$432864 = $2979;
         $$43712863 = $2980;
        } else {
         $$44 = $2979;
         $$4472 = $2980;
         break;
        }
       }
       ___cxa_free_exception($2962 | 0);
       $$44 = $$432864;
       $$4472 = $$43712863;
      }
     } while (0);
     if ((label | 0) == 1054) {
      $2975 = ___cxa_find_matching_catch() | 0;
      $$44 = $2975;
      $$4472 = tempRet0;
     }
     HEAP32[$ss76 >> 2] = 732;
     HEAP32[$2930 >> 2] = 772;
     HEAP32[$2931 >> 2] = 752;
     HEAP32[$2932 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2941);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2932);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2930);
     $$45 = $$44;
     $$4573 = $$4472;
     label = 1249;
     break L2221;
    } while (0);
    $$0$i1213 = $eh$lpad$body$i1210$index104Z2D;
    $$01$i1212 = $eh$lpad$body$i1210$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2930);
   $eh$lpad$body1215$index111Z2D = $$0$i1213;
   $eh$lpad$body1215$indexZ2D = $$01$i1212;
   label = 1053;
   break;
  }
 case 1050:
  {
   $2969 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1215$index111Z2D = tempRet0;
   $eh$lpad$body1215$indexZ2D = $2969;
   label = 1053;
   break;
  }
 case 1051:
  {
   $2971 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1215$index111Z2D = tempRet0;
   $eh$lpad$body1215$indexZ2D = $2971;
   label = 1053;
   break;
  }
 case 1052:
  {
   $2973 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1215$index111Z2D = tempRet0;
   $eh$lpad$body1215$indexZ2D = $2973;
   label = 1053;
   break;
  }
 case 1255:
  {
   $3470 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3470;
   label = 1010;
   break;
  }
 case 1258:
  {
   $3479 = ___cxa_find_matching_catch() | 0;
   $3480 = tempRet0;
   HEAP32[$258 >> 2] = $$lcssa6766;
   __ZdlPv($$lcssa6766);
   $$59 = $3479;
   $$5987 = $3480;
   break;
  }
 case 1261:
  {
   $3488 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3488;
   label = 1010;
   break;
  }
 case 1264:
  {
   $3495 = ___cxa_find_matching_catch() | 0;
   $3496 = tempRet0;
   HEAP32[$260 >> 2] = $$lcssa6765;
   __ZdlPv($$lcssa6765);
   $$59 = $3495;
   $$5987 = $3496;
   break;
  }
 case 1267:
  {
   $3504 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3504;
   label = 1010;
   break;
  }
 case 1270:
  {
   $3511 = ___cxa_find_matching_catch() | 0;
   $3512 = tempRet0;
   HEAP32[$262 >> 2] = $$lcssa6764;
   __ZdlPv($$lcssa6764);
   $$59 = $3511;
   $$5987 = $3512;
   break;
  }
 case 1273:
  {
   $3520 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3520;
   label = 1010;
   break;
  }
 case 1276:
  {
   $3527 = ___cxa_find_matching_catch() | 0;
   $3528 = tempRet0;
   HEAP32[$264 >> 2] = $$lcssa6763;
   __ZdlPv($$lcssa6763);
   $$59 = $3527;
   $$5987 = $3528;
   break;
  }
 case 1279:
  {
   $3536 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3536;
   label = 1010;
   break;
  }
 case 1282:
  {
   $3543 = ___cxa_find_matching_catch() | 0;
   $3544 = tempRet0;
   HEAP32[$266 >> 2] = $$lcssa6762;
   __ZdlPv($$lcssa6762);
   $$59 = $3543;
   $$5987 = $3544;
   break;
  }
 case 1285:
  {
   $3552 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3552;
   label = 1010;
   break;
  }
 case 1288:
  {
   $3559 = ___cxa_find_matching_catch() | 0;
   $3560 = tempRet0;
   HEAP32[$268 >> 2] = $$lcssa6761;
   __ZdlPv($$lcssa6761);
   $$59 = $3559;
   $$5987 = $3560;
   break;
  }
 case 1291:
  {
   $3568 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3568;
   label = 1010;
   break;
  }
 case 1294:
  {
   $3575 = ___cxa_find_matching_catch() | 0;
   $3576 = tempRet0;
   HEAP32[$270 >> 2] = $$lcssa6760;
   __ZdlPv($$lcssa6760);
   $$59 = $3575;
   $$5987 = $3576;
   break;
  }
 case 1297:
  {
   $3584 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3584;
   label = 1010;
   break;
  }
 case 1300:
  {
   $3591 = ___cxa_find_matching_catch() | 0;
   $3592 = tempRet0;
   HEAP32[$272 >> 2] = $$lcssa6759;
   __ZdlPv($$lcssa6759);
   $$59 = $3591;
   $$5987 = $3592;
   break;
  }
 case 1303:
  {
   $3600 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3600;
   label = 1010;
   break;
  }
 case 1306:
  {
   $3607 = ___cxa_find_matching_catch() | 0;
   $3608 = tempRet0;
   HEAP32[$274 >> 2] = $$lcssa6758;
   __ZdlPv($$lcssa6758);
   $$59 = $3607;
   $$5987 = $3608;
   break;
  }
 case 1309:
  {
   $3616 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3616;
   label = 1010;
   break;
  }
 case 1312:
  {
   $3623 = ___cxa_find_matching_catch() | 0;
   $3624 = tempRet0;
   HEAP32[$276 >> 2] = $$lcssa6757;
   __ZdlPv($$lcssa6757);
   $$59 = $3623;
   $$5987 = $3624;
   break;
  }
 case 1317:
  {
   $3630 = ___cxa_find_matching_catch() | 0;
   $3631 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($91);
   $$59 = $3630;
   $$5987 = $3631;
   break;
  }
 case 1321:
  {
   $3636 = ___cxa_find_matching_catch() | 0;
   $3637 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($93);
   $$59 = $3636;
   $$5987 = $3637;
   break;
  }
 case 1325:
  {
   $3642 = ___cxa_find_matching_catch() | 0;
   $3643 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($95);
   $$59 = $3642;
   $$5987 = $3643;
   break;
  }
 case 1329:
  {
   $3648 = ___cxa_find_matching_catch() | 0;
   $3649 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($97);
   $$59 = $3648;
   $$5987 = $3649;
   break;
  }
 case 1333:
  {
   $3654 = ___cxa_find_matching_catch() | 0;
   $3655 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($99);
   $$59 = $3654;
   $$5987 = $3655;
   break;
  }
 case 1337:
  {
   $3660 = ___cxa_find_matching_catch() | 0;
   $3661 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($101);
   $$59 = $3660;
   $$5987 = $3661;
   break;
  }
 case 1341:
  {
   $3666 = ___cxa_find_matching_catch() | 0;
   $3667 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($103);
   $$59 = $3666;
   $$5987 = $3667;
   break;
  }
 case 1344:
  {
   $3676 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3676;
   label = 1010;
   break;
  }
 case 1346:
  {
   $3688 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $105 | 0, 40344, 34);
   $3689 = __THREW__;
   __THREW__ = 0;
   if ($3689 & 1) {
    $3697 = ___cxa_find_matching_catch() | 0;
    $$462867 = $3697;
    $$46742866 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $3688 | 0, $195 | 0, $$lcssa6592 | 0, $105 | 0);
    $3691 = __THREW__;
    __THREW__ = 0;
    if ($3691 & 1) $$0226 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3688 | 0, 38664, 183);
     $3693 = __THREW__;
     __THREW__ = 0;
     if ($3693 & 1) $$0226 = 0; else {}
    }
    $3699 = ___cxa_find_matching_catch() | 0;
    $3700 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($105);
    if ($$0226) {
     $$462867 = $3699;
     $$46742866 = $3700;
    } else {
     $$59 = $3699;
     $$5987 = $3700;
     break;
    }
   }
   ___cxa_free_exception($3688 | 0);
   $$59 = $$462867;
   $$5987 = $$46742866;
   break;
  }
 case 1349:
  {
   $3695 = ___cxa_find_matching_catch() | 0;
   $3696 = tempRet0;
   HEAP32[$278 >> 2] = $$lcssa6752;
   __ZdlPv($$lcssa6752);
   $$59 = $3695;
   $$5987 = $3696;
   break;
  }
 case 1356:
  {
   $$59 = ___cxa_find_matching_catch() | 0;
   $$5987 = tempRet0;
   break;
  }
 case 1396:
  {
   $3783 = ___cxa_find_matching_catch() | 0;
   $3784 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings83, HEAP32[$284 >> 2] | 0);
   $eh$lpad$body1186$index64Z2D = $3784;
   $eh$lpad$body1186$indexZ2D = $3783;
   label = 1010;
   break;
  }
 case 1414:
  {
   $3823 = ___cxa_find_matching_catch() | 0;
   $3824 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings83, HEAP32[$284 >> 2] | 0);
   $$59 = $3823;
   $$5987 = $3824;
   break;
  }
 case 1417:
  {
   $3835 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3835;
   label = 1010;
   break;
  }
 case 1421:
  {
   $3857 = ___cxa_find_matching_catch() | 0;
   $3858 = tempRet0;
   HEAP32[$285 >> 2] = $$lcssa6751;
   __ZdlPv($$lcssa6751);
   $$59 = $3857;
   $$5987 = $3858;
   break;
  }
 case 1452:
  {
   $3904 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $110 | 0, 40384, 25);
   $3905 = __THREW__;
   __THREW__ = 0;
   if ($3905 & 1) {
    $3911 = ___cxa_find_matching_catch() | 0;
    $$472872 = $3911;
    $$47752871 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $3904 | 0, $195 | 0, $$lcssa6586 | 0, $110 | 0);
    $3907 = __THREW__;
    __THREW__ = 0;
    if ($3907 & 1) $$0228 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3904 | 0, 38664, 183);
     $3909 = __THREW__;
     __THREW__ = 0;
     if ($3909 & 1) $$0228 = 0; else {}
    }
    $3913 = ___cxa_find_matching_catch() | 0;
    $3914 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($110);
    if ($$0228) {
     $$472872 = $3913;
     $$47752871 = $3914;
    } else {
     $$59 = $3913;
     $$5987 = $3914;
     break;
    }
   }
   ___cxa_free_exception($3904 | 0);
   $$59 = $$472872;
   $$5987 = $$47752871;
   break;
  }
 case 1467:
  {
   $3948 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_vii(61, $112 | 0, HEAP32[HEAP32[$args68 >> 2] >> 2] | 0);
   $3949 = __THREW__;
   __THREW__ = 0;
   do if ($3949 & 1) {
    $3958 = ___cxa_find_matching_catch() | 0;
    $$492875 = $3958;
    $$49772874 = tempRet0;
   } else {
    __THREW__ = 0;
    $3951 = invoke_iiii(30, $112 | 0, 0, 40416) | 0;
    $3952 = __THREW__;
    __THREW__ = 0;
    if ($3952 & 1) {
     $3960 = ___cxa_find_matching_catch() | 0;
     $3961 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($112);
     $$492875 = $3960;
     $$49772874 = $3961;
     break;
    };
    HEAP32[$111 + 0 >> 2] = HEAP32[$3951 + 0 >> 2];
    HEAP32[$111 + 4 >> 2] = HEAP32[$3951 + 4 >> 2];
    HEAP32[$111 + 8 >> 2] = HEAP32[$3951 + 8 >> 2];
    HEAP32[$3951 + 0 >> 2] = 0;
    HEAP32[$3951 + 4 >> 2] = 0;
    HEAP32[$3951 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(17, $3948 | 0, $195 | 0, $$lcssa6587 | 0, $111 | 0);
    $3954 = __THREW__;
    __THREW__ = 0;
    if ($3954 & 1) $$0234 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3948 | 0, 38664, 183);
     $3956 = __THREW__;
     __THREW__ = 0;
     if ($3956 & 1) $$0234 = 0; else {}
    }
    $3962 = ___cxa_find_matching_catch() | 0;
    $3963 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($111);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($112);
    if ($$0234) {
     $$492875 = $3962;
     $$49772874 = $3963;
    } else {
     $$59 = $3962;
     $$5987 = $3963;
     break L2221;
    }
   } while (0);
   ___cxa_free_exception($3948 | 0);
   $$59 = $$492875;
   $$5987 = $$49772874;
   break;
  }
 case 1477:
  {
   $3972 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $3972;
   label = 1010;
   break;
  }
 case 1483:
  {
   $3986 = ___cxa_find_matching_catch() | 0;
   $3987 = tempRet0;
   HEAP32[$290 >> 2] = $$lcssa6746;
   __ZdlPv($$lcssa6746);
   $$59 = $3986;
   $$5987 = $3987;
   break;
  }
 case 1484:
  {
   $lpad$phi3006$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi3006$index118 = tempRet0;
   label = 1486;
   break;
  }
 case 1485:
  {
   $lpad$phi3006$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi3006$index118 = tempRet0;
   label = 1486;
   break;
  }
 case 1487:
  {
   $3992 = ___cxa_find_matching_catch() | 0;
   $3993 = tempRet0;
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($114, HEAP32[$295 >> 2] | 0);
   $$50 = $3992;
   $$5078 = $3993;
   label = 1562;
   break;
  }
 case 1559:
  {
   $$50 = ___cxa_find_matching_catch() | 0;
   $$5078 = tempRet0;
   label = 1562;
   break;
  }
 case 1565:
  {
   $4191 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $4191;
   label = 1010;
   break;
  }
 case 1570:
  {
   $4205 = $ss102 + 64 | 0;
   $4206 = $ss102 + 8 | 0;
   HEAP32[$4206 >> 2] = 752;
   $4207 = $ss102 + 12 | 0;
   HEAP32[$ss102 >> 2] = 900;
   HEAP32[$4205 >> 2] = 920;
   HEAP32[$ss102 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss102 + 64 | 0, $4207 | 0);
   $4210 = __THREW__;
   __THREW__ = 0;
   if ($4210 & 1) {
    $4222 = ___cxa_find_matching_catch() | 0;
    $$0$i1938 = tempRet0;
    $$01$i1937 = $4222;
   } else {
    HEAP32[$ss102 + 136 >> 2] = 0;
    HEAP32[$ss102 + 140 >> 2] = -1;
    HEAP32[$ss102 >> 2] = 732;
    HEAP32[$4205 >> 2] = 772;
    HEAP32[$4206 >> 2] = 752;
    __THREW__ = 0;
    invoke_vi(177, $4207 | 0);
    $4214 = __THREW__;
    __THREW__ = 0;
    do if ($4214 & 1) {
     $4224 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1935$index123Z2D = tempRet0;
     $eh$lpad$body$i1935$indexZ2D = $4224;
    } else {
     HEAP32[$4207 >> 2] = 1064;
     $4216 = $ss102 + 44 | 0;
     HEAP32[$4216 + 0 >> 2] = 0;
     HEAP32[$4216 + 4 >> 2] = 0;
     HEAP32[$4216 + 8 >> 2] = 0;
     HEAP32[$4216 + 12 >> 2] = 0;
     HEAP32[$ss102 + 60 >> 2] = 24;
     HEAP32[$5 + 0 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $4207 | 0, $5 | 0);
     $4218 = __THREW__;
     __THREW__ = 0;
     if ($4218 & 1) {
      $4220 = ___cxa_find_matching_catch() | 0;
      $4221 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4216);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4207);
      $eh$lpad$body$i1935$index123Z2D = $4221;
      $eh$lpad$body$i1935$indexZ2D = $4220;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     __THREW__ = 0;
     $4226 = invoke_iiii(25, $4206 | 0, 40472, 49) | 0;
     $4227 = __THREW__;
     __THREW__ = 0;
     do if ($4227 & 1) label = 1587; else {
      $4229 = HEAP8[$$lcssa6745 >> 0] | 0;
      if (!($4229 & 1)) $4236 = ($4229 & 255) >>> 1; else $4236 = HEAP32[$$lcssa6744 + 12 >> 2] | 0;
      __THREW__ = 0;
      invoke_iii(21, $4226 | 0, $4236 | 0) | 0;
      $4237 = __THREW__;
      __THREW__ = 0;
      if ($4237 & 1) label = 1587; else {
       $4239 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $119 | 0, $4207 | 0);
       $4240 = __THREW__;
       __THREW__ = 0;
       if ($4240 & 1) {
        $4250 = ___cxa_find_matching_catch() | 0;
        $$512879 = $4250;
        $$51792878 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(17, $4239 | 0, $195 | 0, $$lcssa6579 | 0, $119 | 0);
        $4242 = __THREW__;
        __THREW__ = 0;
        if ($4242 & 1) $$0241 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $4239 | 0, 38664, 183);
         $4244 = __THREW__;
         __THREW__ = 0;
         if ($4244 & 1) $$0241 = 0; else {}
        }
        $4252 = ___cxa_find_matching_catch() | 0;
        $4253 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($119);
        if ($$0241) {
         $$512879 = $4252;
         $$51792878 = $4253;
        } else {
         $$52 = $4252;
         $$5280 = $4253;
         break;
        }
       }
       ___cxa_free_exception($4239 | 0);
       $$52 = $$512879;
       $$5280 = $$51792878;
      }
     } while (0);
     if ((label | 0) == 1587) {
      $4248 = ___cxa_find_matching_catch() | 0;
      $$52 = $4248;
      $$5280 = tempRet0;
     }
     HEAP32[$ss102 >> 2] = 732;
     HEAP32[$4205 >> 2] = 772;
     HEAP32[$4206 >> 2] = 752;
     HEAP32[$4207 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4216);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4207);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4205);
     $$59 = $$52;
     $$5987 = $$5280;
     break L2221;
    } while (0);
    $$0$i1938 = $eh$lpad$body$i1935$index123Z2D;
    $$01$i1937 = $eh$lpad$body$i1935$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4205);
   $eh$lpad$body1186$index64Z2D = $$0$i1938;
   $eh$lpad$body1186$indexZ2D = $$01$i1937;
   label = 1010;
   break;
  }
 case 1586:
  {
   $4246 = ___cxa_find_matching_catch() | 0;
   $4247 = tempRet0;
   HEAP32[$298 >> 2] = $$lcssa6742;
   __ZdlPv($$lcssa6742);
   $$59 = $4246;
   $$5987 = $4247;
   break;
  }
 case 1598:
  {
   $4267 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $4267;
   label = 1010;
   break;
  }
 case 1600:
  {
   $4273 = $ss103 + 64 | 0;
   $4274 = $ss103 + 8 | 0;
   HEAP32[$4274 >> 2] = 752;
   $4275 = $ss103 + 12 | 0;
   HEAP32[$ss103 >> 2] = 900;
   HEAP32[$4273 >> 2] = 920;
   HEAP32[$ss103 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss103 + 64 | 0, $4275 | 0);
   $4278 = __THREW__;
   __THREW__ = 0;
   if ($4278 & 1) {
    $4290 = ___cxa_find_matching_catch() | 0;
    $$0$i1979 = tempRet0;
    $$01$i1978 = $4290;
   } else {
    HEAP32[$ss103 + 136 >> 2] = 0;
    HEAP32[$ss103 + 140 >> 2] = -1;
    HEAP32[$ss103 >> 2] = 732;
    HEAP32[$4273 >> 2] = 772;
    HEAP32[$4274 >> 2] = 752;
    __THREW__ = 0;
    invoke_vi(177, $4275 | 0);
    $4282 = __THREW__;
    __THREW__ = 0;
    do if ($4282 & 1) {
     $4292 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1976$index128Z2D = tempRet0;
     $eh$lpad$body$i1976$indexZ2D = $4292;
    } else {
     HEAP32[$4275 >> 2] = 1064;
     $4284 = $ss103 + 44 | 0;
     HEAP32[$4284 + 0 >> 2] = 0;
     HEAP32[$4284 + 4 >> 2] = 0;
     HEAP32[$4284 + 8 >> 2] = 0;
     HEAP32[$4284 + 12 >> 2] = 0;
     HEAP32[$ss103 + 60 >> 2] = 24;
     HEAP32[$4 + 0 >> 2] = 0;
     HEAP32[$4 + 4 >> 2] = 0;
     HEAP32[$4 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $4275 | 0, $4 | 0);
     $4286 = __THREW__;
     __THREW__ = 0;
     if ($4286 & 1) {
      $4288 = ___cxa_find_matching_catch() | 0;
      $4289 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4284);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4275);
      $eh$lpad$body$i1976$index128Z2D = $4289;
      $eh$lpad$body$i1976$indexZ2D = $4288;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     __THREW__ = 0;
     $4294 = invoke_iiii(25, $4274 | 0, 40528, 29) | 0;
     $4295 = __THREW__;
     __THREW__ = 0;
     do if ($4295 & 1) label = 1614; else {
      __THREW__ = 0;
      invoke_iii(31, $4294 | 0, $$lcssa6739 | 0) | 0;
      $4297 = __THREW__;
      __THREW__ = 0;
      if ($4297 & 1) label = 1614; else {
       $4299 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $121 | 0, $4275 | 0);
       $4300 = __THREW__;
       __THREW__ = 0;
       if ($4300 & 1) {
        $4310 = ___cxa_find_matching_catch() | 0;
        $$532882 = $4310;
        $$53812881 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(17, $4299 | 0, $195 | 0, $$lcssa6574 | 0, $121 | 0);
        $4302 = __THREW__;
        __THREW__ = 0;
        if ($4302 & 1) $$0243 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $4299 | 0, 38664, 183);
         $4304 = __THREW__;
         __THREW__ = 0;
         if ($4304 & 1) $$0243 = 0; else {}
        }
        $4312 = ___cxa_find_matching_catch() | 0;
        $4313 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($121);
        if ($$0243) {
         $$532882 = $4312;
         $$53812881 = $4313;
        } else {
         $$54 = $4312;
         $$5482 = $4313;
         break;
        }
       }
       ___cxa_free_exception($4299 | 0);
       $$54 = $$532882;
       $$5482 = $$53812881;
      }
     } while (0);
     if ((label | 0) == 1614) {
      $4308 = ___cxa_find_matching_catch() | 0;
      $$54 = $4308;
      $$5482 = tempRet0;
     }
     HEAP32[$ss103 >> 2] = 732;
     HEAP32[$4273 >> 2] = 772;
     HEAP32[$4274 >> 2] = 752;
     HEAP32[$4275 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4284);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4275);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4273);
     $$59 = $$54;
     $$5987 = $$5482;
     break L2221;
    } while (0);
    $$0$i1979 = $eh$lpad$body$i1976$index128Z2D;
    $$01$i1978 = $eh$lpad$body$i1976$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4273);
   $eh$lpad$body1186$index64Z2D = $$0$i1979;
   $eh$lpad$body1186$indexZ2D = $$01$i1978;
   label = 1010;
   break;
  }
 case 1613:
  {
   $4306 = ___cxa_find_matching_catch() | 0;
   $4307 = tempRet0;
   HEAP32[$300 >> 2] = $$lcssa6735;
   __ZdlPv($$lcssa6735);
   $$59 = $4306;
   $$5987 = $4307;
   break;
  }
 case 1620:
  {
   $4315 = $ss104 + 64 | 0;
   $4316 = $ss104 + 8 | 0;
   HEAP32[$4316 >> 2] = 752;
   $4317 = $ss104 + 12 | 0;
   HEAP32[$ss104 >> 2] = 900;
   HEAP32[$4315 >> 2] = 920;
   HEAP32[$ss104 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss104 + 64 | 0, $4317 | 0);
   $4320 = __THREW__;
   __THREW__ = 0;
   if ($4320 & 1) {
    $4332 = ___cxa_find_matching_catch() | 0;
    $$0$i1998 = tempRet0;
    $$01$i1997 = $4332;
   } else {
    HEAP32[$ss104 + 136 >> 2] = 0;
    HEAP32[$ss104 + 140 >> 2] = -1;
    HEAP32[$ss104 >> 2] = 732;
    HEAP32[$4315 >> 2] = 772;
    HEAP32[$4316 >> 2] = 752;
    __THREW__ = 0;
    invoke_vi(177, $4317 | 0);
    $4324 = __THREW__;
    __THREW__ = 0;
    do if ($4324 & 1) {
     $4334 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1995$index133Z2D = tempRet0;
     $eh$lpad$body$i1995$indexZ2D = $4334;
    } else {
     HEAP32[$4317 >> 2] = 1064;
     $4326 = $ss104 + 44 | 0;
     HEAP32[$4326 + 0 >> 2] = 0;
     HEAP32[$4326 + 4 >> 2] = 0;
     HEAP32[$4326 + 8 >> 2] = 0;
     HEAP32[$4326 + 12 >> 2] = 0;
     HEAP32[$ss104 + 60 >> 2] = 24;
     HEAP32[$3 + 0 >> 2] = 0;
     HEAP32[$3 + 4 >> 2] = 0;
     HEAP32[$3 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $4317 | 0, $3 | 0);
     $4328 = __THREW__;
     __THREW__ = 0;
     if ($4328 & 1) {
      $4330 = ___cxa_find_matching_catch() | 0;
      $4331 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4326);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4317);
      $eh$lpad$body$i1995$index133Z2D = $4331;
      $eh$lpad$body$i1995$indexZ2D = $4330;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     __THREW__ = 0;
     invoke_iiii(25, $4316 | 0, 40560, 40) | 0;
     $4336 = __THREW__;
     __THREW__ = 0;
     do if ($4336 & 1) label = 1634; else {
      __THREW__ = 0;
      $4338 = invoke_iiii(25, $4316 | 0, 40608, 30) | 0;
      $4339 = __THREW__;
      __THREW__ = 0;
      if ($4339 & 1) label = 1634; else {
       __THREW__ = 0;
       invoke_iii(31, $4338 | 0, $$lcssa6740 | 0) | 0;
       $4341 = __THREW__;
       __THREW__ = 0;
       if ($4341 & 1) label = 1634; else {
        $4343 = ___cxa_allocate_exception(24) | 0;
        __THREW__ = 0;
        invoke_vii(43, $122 | 0, $4317 | 0);
        $4344 = __THREW__;
        __THREW__ = 0;
        if ($4344 & 1) {
         $4352 = ___cxa_find_matching_catch() | 0;
         $$552885 = $4352;
         $$55832884 = tempRet0;
        } else {
         __THREW__ = 0;
         invoke_viiii(17, $4343 | 0, $195 | 0, $$lcssa6575 | 0, $122 | 0);
         $4346 = __THREW__;
         __THREW__ = 0;
         if ($4346 & 1) $$0245 = 1; else {
          __THREW__ = 0;
          invoke_viii(4, $4343 | 0, 38664, 183);
          $4348 = __THREW__;
          __THREW__ = 0;
          if ($4348 & 1) $$0245 = 0; else {}
         }
         $4354 = ___cxa_find_matching_catch() | 0;
         $4355 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($122);
         if ($$0245) {
          $$552885 = $4354;
          $$55832884 = $4355;
         } else {
          $$56 = $4354;
          $$5684 = $4355;
          break;
         }
        }
        ___cxa_free_exception($4343 | 0);
        $$56 = $$552885;
        $$5684 = $$55832884;
       }
      }
     } while (0);
     if ((label | 0) == 1634) {
      $4350 = ___cxa_find_matching_catch() | 0;
      $$56 = $4350;
      $$5684 = tempRet0;
     }
     HEAP32[$ss104 >> 2] = 732;
     HEAP32[$4315 >> 2] = 772;
     HEAP32[$4316 >> 2] = 752;
     HEAP32[$4317 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4326);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4317);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4315);
     $$59 = $$56;
     $$5987 = $$5684;
     break L2221;
    } while (0);
    $$0$i1998 = $eh$lpad$body$i1995$index133Z2D;
    $$01$i1997 = $eh$lpad$body$i1995$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4315);
   $eh$lpad$body1186$index64Z2D = $$0$i1998;
   $eh$lpad$body1186$indexZ2D = $$01$i1997;
   label = 1010;
   break;
  }
 case 1642:
  {
   $4361 = ___cxa_find_matching_catch() | 0;
   $4362 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($124);
   $$59 = $4361;
   $$5987 = $4362;
   break;
  }
 case 1645:
  {
   $4370 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $4370;
   label = 1010;
   break;
  }
 case 1648:
  {
   $4377 = ___cxa_find_matching_catch() | 0;
   $4378 = tempRet0;
   HEAP32[$302 >> 2] = $$lcssa6734;
   __ZdlPv($$lcssa6734);
   $$59 = $4377;
   $$5987 = $4378;
   break;
  }
 case 1651:
  {
   $4386 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $4386;
   label = 1010;
   break;
  }
 case 1654:
  {
   $4393 = ___cxa_find_matching_catch() | 0;
   $4394 = tempRet0;
   HEAP32[$304 >> 2] = $$lcssa6733;
   __ZdlPv($$lcssa6733);
   $$59 = $4393;
   $$5987 = $4394;
   break;
  }
 case 1657:
  {
   $4402 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $4402;
   label = 1010;
   break;
  }
 case 1660:
  {
   $4409 = ___cxa_find_matching_catch() | 0;
   $4410 = tempRet0;
   HEAP32[$306 >> 2] = $$lcssa6732;
   __ZdlPv($$lcssa6732);
   $$59 = $4409;
   $$5987 = $4410;
   break;
  }
 case 1663:
  {
   $4418 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $4418;
   label = 1010;
   break;
  }
 case 1666:
  {
   $4426 = ___cxa_find_matching_catch() | 0;
   $4427 = tempRet0;
   HEAP32[$308 >> 2] = $$lcssa6731;
   __ZdlPv($$lcssa6731);
   $$59 = $4426;
   $$5987 = $4427;
   break;
  }
 case 1669:
  {
   $4436 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $4436;
   label = 1010;
   break;
  }
 case 1671:
  {
   $4441 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $134 | 0, 40016, 17);
   $4442 = __THREW__;
   __THREW__ = 0;
   if ($4442 & 1) {
    $4450 = ___cxa_find_matching_catch() | 0;
    $$572888 = $4450;
    $$57852887 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $4441 | 0, $195 | 0, $$lcssa6563 | 0, $134 | 0);
    $4444 = __THREW__;
    __THREW__ = 0;
    if ($4444 & 1) $$0247 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4441 | 0, 38664, 183);
     $4446 = __THREW__;
     __THREW__ = 0;
     if ($4446 & 1) $$0247 = 0; else {}
    }
    $4452 = ___cxa_find_matching_catch() | 0;
    $4453 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($134);
    if ($$0247) {
     $$572888 = $4452;
     $$57852887 = $4453;
    } else {
     $$59 = $4452;
     $$5987 = $4453;
     break;
    }
   }
   ___cxa_free_exception($4441 | 0);
   $$59 = $$572888;
   $$5987 = $$57852887;
   break;
  }
 case 1674:
  {
   $4448 = ___cxa_find_matching_catch() | 0;
   $4449 = tempRet0;
   HEAP32[$310 >> 2] = $$lcssa6729;
   __ZdlPv($$lcssa6729);
   $$59 = $4448;
   $$5987 = $4449;
   break;
  }
 case 1682:
  {
   $4466 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $4466;
   label = 1010;
   break;
  }
 case 1684:
  {
   $$pre5205$pre$phiZZ2D = $$lcssa6720;
   $4510 = $$lcssa6715;
   $4524 = $$lcssa6720;
   $4528 = $$lcssa6555;
   label = 1701;
   break;
  }
 case 1700:
  {
   $$pre5205$pre$phiZZ2D = $$lcssa6725;
   $4510 = $$lcssa6716;
   $4524 = $$lcssa6721;
   $4528 = $$lcssa6556;
   label = 1701;
   break;
  }
 case 1711:
  {
   $4533 = ___cxa_find_matching_catch() | 0;
   $4534 = tempRet0;
   HEAP32[$312 >> 2] = $$lcssa6709;
   __ZdlPv($$lcssa6709);
   $$59 = $4533;
   $$5987 = $4534;
   break;
  }
 case 1725:
  {
   $4565 = ___cxa_find_matching_catch() | 0;
   $4566 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($138);
   $eh$lpad$body1186$index64Z2D = $4566;
   $eh$lpad$body1186$indexZ2D = $4565;
   label = 1010;
   break;
  }
 case 1733:
  {
   $4583 = ___cxa_find_matching_catch() | 0;
   $4584 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($138);
   $$59 = $4583;
   $$5987 = $4584;
   break;
  }
 case 1734:
  {
   $4585 = ___cxa_find_matching_catch() | 0;
   $4586 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($filename);
   $$59 = $4585;
   $$5987 = $4586;
   break;
  }
 case 1737:
  {
   __THREW__ = 0;
   $4589 = invoke_iiii(25, 45984, 40688, 38) | 0;
   $4590 = __THREW__;
   __THREW__ = 0;
   do if (!($4590 & 1)) {
    __THREW__ = 0;
    $4592 = invoke_iii(21, $4589 | 0, $$lcssa6631 | 0) | 0;
    $4593 = __THREW__;
    __THREW__ = 0;
    if (!($4593 & 1)) {
     __THREW__ = 0;
     invoke_vii(47, $0 | 0, $4592 + (HEAP32[(HEAP32[$4592 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $4599 = __THREW__;
     __THREW__ = 0;
     if (!($4599 & 1)) {
      __THREW__ = 0;
      $4601 = invoke_iii(22, $0 | 0, 50208) | 0;
      $4602 = __THREW__;
      __THREW__ = 0;
      if (!($4602 & 1)) {
       __THREW__ = 0;
       $4607 = invoke_iii(HEAP32[(HEAP32[$4601 >> 2] | 0) + 28 >> 2] | 0, $4601 | 0, 10) | 0;
       $4608 = __THREW__;
       __THREW__ = 0;
       if (!($4608 & 1)) {
        __ZNSt3__16localeD2Ev($0);
        __THREW__ = 0;
        invoke_iii(25, $4592 | 0, $4607 | 0) | 0;
        $4612 = __THREW__;
        __THREW__ = 0;
        if ($4612 & 1) break;
        __THREW__ = 0;
        invoke_ii(68, $4592 | 0) | 0;
        $4614 = __THREW__;
        __THREW__ = 0;
        if ($4614 & 1) break;
        __THREW__ = 0;
        invoke_v(3);
        $4616 = __THREW__;
        __THREW__ = 0;
        if ($4616 & 1) break;
       }
      }
      $4610 = ___cxa_find_matching_catch() | 0;
      $4611 = tempRet0;
      __ZNSt3__16localeD2Ev($0);
      $eh$lpad$body1186$index64Z2D = $4611;
      $eh$lpad$body1186$indexZ2D = $4610;
      label = 1010;
      break L2221;
     }
    }
   } while (0);
   $2863 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1186$index64Z2D = tempRet0;
   $eh$lpad$body1186$indexZ2D = $2863;
   label = 1010;
   break;
  }
 case 1771:
  {
   $4701 = HEAP32[$$idx$val$i910$lcssa6281 + -140 >> 2] | 0;
   $4703 = (HEAP32[$201 >> 2] | 0) == 19;
   $4704 = ___cxa_allocate_exception(24) | 0;
   $4705 = $4701 + 4 | 0;
   if ($4703) {
    __THREW__ = 0;
    invoke_viiii(17, $4704 | 0, $195 | 0, $4705 | 0, (HEAP32[$202 >> 2] | 0) + 8 | 0);
    $4728 = __THREW__;
    __THREW__ = 0;
    if (!($4728 & 1)) ___cxa_throw($4704 | 0, 38664, 183);
    $4730 = ___cxa_find_matching_catch() | 0;
    $4731 = tempRet0;
    ___cxa_free_exception($4704 | 0);
    $$107 = $4730;
    $$107135 = $4731;
    ___resumeException($$107 | 0);
   }
   __THREW__ = 0;
   invoke_vii(61, $142 | 0, HEAP32[$201 >> 2] | 0);
   $4706 = __THREW__;
   __THREW__ = 0;
   do if ($4706 & 1) {
    $4718 = ___cxa_find_matching_catch() | 0;
    $$622897 = $4718;
    $$62902896 = tempRet0;
   } else {
    __THREW__ = 0;
    $4708 = invoke_iiii(30, $142 | 0, 0, 40776) | 0;
    $4709 = __THREW__;
    __THREW__ = 0;
    if ($4709 & 1) {
     $4720 = ___cxa_find_matching_catch() | 0;
     $4721 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($142);
     $$622897 = $4720;
     $$62902896 = $4721;
     break;
    };
    HEAP32[$141 + 0 >> 2] = HEAP32[$4708 + 0 >> 2];
    HEAP32[$141 + 4 >> 2] = HEAP32[$4708 + 4 >> 2];
    HEAP32[$141 + 8 >> 2] = HEAP32[$4708 + 8 >> 2];
    HEAP32[$4708 + 0 >> 2] = 0;
    HEAP32[$4708 + 4 >> 2] = 0;
    HEAP32[$4708 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4711 = invoke_iii(27, $141 | 0, 45688) | 0;
    $4712 = __THREW__;
    __THREW__ = 0;
    if ($4712 & 1) {
     $4722 = ___cxa_find_matching_catch() | 0;
     $$1238 = 1;
     $$60 = $4722;
     $$6088 = tempRet0;
    } else {
     HEAP32[$140 + 0 >> 2] = HEAP32[$4711 + 0 >> 2];
     HEAP32[$140 + 4 >> 2] = HEAP32[$4711 + 4 >> 2];
     HEAP32[$140 + 8 >> 2] = HEAP32[$4711 + 8 >> 2];
     HEAP32[$4711 + 0 >> 2] = 0;
     HEAP32[$4711 + 4 >> 2] = 0;
     HEAP32[$4711 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $4704 | 0, $195 | 0, $4705 | 0, $140 | 0);
     $4714 = __THREW__;
     __THREW__ = 0;
     if ($4714 & 1) $$0237 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4704 | 0, 38664, 183);
      $4716 = __THREW__;
      __THREW__ = 0;
      if ($4716 & 1) $$0237 = 0; else {}
     }
     $4724 = ___cxa_find_matching_catch() | 0;
     $4725 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($140);
     $$1238 = $$0237;
     $$60 = $4724;
     $$6088 = $4725;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($141);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($142);
    if ($$1238) {
     $$622897 = $$60;
     $$62902896 = $$6088;
    } else {
     $$107 = $$60;
     $$107135 = $$6088;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4704 | 0);
   $$107 = $$622897;
   $$107135 = $$62902896;
   ___resumeException($$107 | 0);
   break;
  }
 case 1787:
  {
   $4736 = ___cxa_allocate_exception(24) | 0;
   $4737 = $$lcssa7192 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $145 | 0, HEAP32[$201 >> 2] | 0);
   $4738 = __THREW__;
   __THREW__ = 0;
   do if ($4738 & 1) {
    $4750 = ___cxa_find_matching_catch() | 0;
    $$652901 = $4750;
    $$65932900 = tempRet0;
   } else {
    __THREW__ = 0;
    $4740 = invoke_iiii(30, $145 | 0, 0, 40816) | 0;
    $4741 = __THREW__;
    __THREW__ = 0;
    if ($4741 & 1) {
     $4752 = ___cxa_find_matching_catch() | 0;
     $4753 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($145);
     $$652901 = $4752;
     $$65932900 = $4753;
     break;
    };
    HEAP32[$144 + 0 >> 2] = HEAP32[$4740 + 0 >> 2];
    HEAP32[$144 + 4 >> 2] = HEAP32[$4740 + 4 >> 2];
    HEAP32[$144 + 8 >> 2] = HEAP32[$4740 + 8 >> 2];
    HEAP32[$4740 + 0 >> 2] = 0;
    HEAP32[$4740 + 4 >> 2] = 0;
    HEAP32[$4740 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4743 = invoke_iii(27, $144 | 0, 45688) | 0;
    $4744 = __THREW__;
    __THREW__ = 0;
    if ($4744 & 1) {
     $4754 = ___cxa_find_matching_catch() | 0;
     $$1231 = 1;
     $$63 = $4754;
     $$6391 = tempRet0;
    } else {
     HEAP32[$143 + 0 >> 2] = HEAP32[$4743 + 0 >> 2];
     HEAP32[$143 + 4 >> 2] = HEAP32[$4743 + 4 >> 2];
     HEAP32[$143 + 8 >> 2] = HEAP32[$4743 + 8 >> 2];
     HEAP32[$4743 + 0 >> 2] = 0;
     HEAP32[$4743 + 4 >> 2] = 0;
     HEAP32[$4743 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $4736 | 0, $195 | 0, $4737 | 0, $143 | 0);
     $4746 = __THREW__;
     __THREW__ = 0;
     if ($4746 & 1) $$0230 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4736 | 0, 38664, 183);
      $4748 = __THREW__;
      __THREW__ = 0;
      if ($4748 & 1) $$0230 = 0; else {}
     }
     $4756 = ___cxa_find_matching_catch() | 0;
     $4757 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($143);
     $$1231 = $$0230;
     $$63 = $4756;
     $$6391 = $4757;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($144);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($145);
    if ($$1231) {
     $$652901 = $$63;
     $$65932900 = $$6391;
    } else {
     $$107 = $$63;
     $$107135 = $$6391;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4736 | 0);
   $$107 = $$652901;
   $$107135 = $$65932900;
   ___resumeException($$107 | 0);
   break;
  }
 case 1801:
  {
   $4769 = ___cxa_allocate_exception(24) | 0;
   $4770 = $$lcssa6447 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $148 | 0, HEAP32[$201 >> 2] | 0);
   $4771 = __THREW__;
   __THREW__ = 0;
   do if ($4771 & 1) {
    $4783 = ___cxa_find_matching_catch() | 0;
    $$682905 = $4783;
    $$68962904 = tempRet0;
   } else {
    __THREW__ = 0;
    $4773 = invoke_iiii(30, $148 | 0, 0, 40856) | 0;
    $4774 = __THREW__;
    __THREW__ = 0;
    if ($4774 & 1) {
     $4785 = ___cxa_find_matching_catch() | 0;
     $4786 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($148);
     $$682905 = $4785;
     $$68962904 = $4786;
     break;
    };
    HEAP32[$147 + 0 >> 2] = HEAP32[$4773 + 0 >> 2];
    HEAP32[$147 + 4 >> 2] = HEAP32[$4773 + 4 >> 2];
    HEAP32[$147 + 8 >> 2] = HEAP32[$4773 + 8 >> 2];
    HEAP32[$4773 + 0 >> 2] = 0;
    HEAP32[$4773 + 4 >> 2] = 0;
    HEAP32[$4773 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4776 = invoke_iii(27, $147 | 0, 45688) | 0;
    $4777 = __THREW__;
    __THREW__ = 0;
    if ($4777 & 1) {
     $4787 = ___cxa_find_matching_catch() | 0;
     $$1223 = 1;
     $$66 = $4787;
     $$6694 = tempRet0;
    } else {
     HEAP32[$146 + 0 >> 2] = HEAP32[$4776 + 0 >> 2];
     HEAP32[$146 + 4 >> 2] = HEAP32[$4776 + 4 >> 2];
     HEAP32[$146 + 8 >> 2] = HEAP32[$4776 + 8 >> 2];
     HEAP32[$4776 + 0 >> 2] = 0;
     HEAP32[$4776 + 4 >> 2] = 0;
     HEAP32[$4776 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $4769 | 0, $195 | 0, $4770 | 0, $146 | 0);
     $4779 = __THREW__;
     __THREW__ = 0;
     if ($4779 & 1) $$0222 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4769 | 0, 38664, 183);
      $4781 = __THREW__;
      __THREW__ = 0;
      if ($4781 & 1) $$0222 = 0; else {}
     }
     $4789 = ___cxa_find_matching_catch() | 0;
     $4790 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($146);
     $$1223 = $$0222;
     $$66 = $4789;
     $$6694 = $4790;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($147);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($148);
    if ($$1223) {
     $$682905 = $$66;
     $$68962904 = $$6694;
    } else {
     $$107 = $$66;
     $$107135 = $$6694;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4769 | 0);
   $$107 = $$682905;
   $$107135 = $$68962904;
   ___resumeException($$107 | 0);
   break;
  }
 case 1813:
  {
   $4801 = $ss121 + 64 | 0;
   $4802 = $ss121 + 8 | 0;
   HEAP32[$4802 >> 2] = 752;
   $4803 = $ss121 + 12 | 0;
   HEAP32[$ss121 >> 2] = 900;
   HEAP32[$4801 >> 2] = 920;
   HEAP32[$ss121 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss121 + 64 | 0, $4803 | 0);
   $4806 = __THREW__;
   __THREW__ = 0;
   if ($4806 & 1) {
    $4818 = ___cxa_find_matching_catch() | 0;
    $$0$i2228 = tempRet0;
    $$01$i2227 = $4818;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4801);
    ___resumeException($$01$i2227 | 0);
   }
   HEAP32[$ss121 + 136 >> 2] = 0;
   HEAP32[$ss121 + 140 >> 2] = -1;
   HEAP32[$ss121 >> 2] = 732;
   HEAP32[$4801 >> 2] = 772;
   HEAP32[$4802 >> 2] = 752;
   __THREW__ = 0;
   invoke_vi(177, $4803 | 0);
   $4810 = __THREW__;
   __THREW__ = 0;
   do if ($4810 & 1) {
    $4820 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i2225$index138Z2D = tempRet0;
    $eh$lpad$body$i2225$indexZ2D = $4820;
   } else {
    HEAP32[$4803 >> 2] = 1064;
    $4812 = $ss121 + 44 | 0;
    HEAP32[$4812 + 0 >> 2] = 0;
    HEAP32[$4812 + 4 >> 2] = 0;
    HEAP32[$4812 + 8 >> 2] = 0;
    HEAP32[$4812 + 12 >> 2] = 0;
    HEAP32[$ss121 + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $4803 | 0, $0 | 0);
    $4814 = __THREW__;
    __THREW__ = 0;
    if ($4814 & 1) {
     $4816 = ___cxa_find_matching_catch() | 0;
     $4817 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4812);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4803);
     $eh$lpad$body$i2225$index138Z2D = $4817;
     $eh$lpad$body$i2225$indexZ2D = $4816;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $4822 = invoke_iiii(25, $4802 | 0, 40896, 20) | 0;
    $4823 = __THREW__;
    __THREW__ = 0;
    do if ($4823 & 1) label = 1829; else {
     __THREW__ = 0;
     $4825 = invoke_iii(31, $4822 | 0, $$lcssa6454 | 0) | 0;
     $4826 = __THREW__;
     __THREW__ = 0;
     if ($4826 & 1) label = 1829; else {
      __THREW__ = 0;
      $4828 = invoke_iiii(25, $4825 | 0, 40920, 16) | 0;
      $4829 = __THREW__;
      __THREW__ = 0;
      if ($4829 & 1) label = 1829; else {
       __THREW__ = 0;
       $4831 = invoke_iii(31, $4828 | 0, $$lcssa6456 | 0) | 0;
       $4832 = __THREW__;
       __THREW__ = 0;
       if ($4832 & 1) label = 1829; else {
        __THREW__ = 0;
        invoke_iiii(25, $4831 | 0, 42272, 1) | 0;
        $4834 = __THREW__;
        __THREW__ = 0;
        if ($4834 & 1) label = 1829; else {
         $4836 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_vii(43, $149 | 0, $4803 | 0);
         $4837 = __THREW__;
         __THREW__ = 0;
         if ($4837 & 1) {
          $4846 = ___cxa_find_matching_catch() | 0;
          $$692909 = $4846;
          $$69972908 = tempRet0;
         } else {
          __THREW__ = 0;
          invoke_viiii(17, $4836 | 0, $195 | 0, $$lcssa6448 + 4 | 0, $149 | 0);
          $4840 = __THREW__;
          __THREW__ = 0;
          if ($4840 & 1) $$0218 = 1; else {
           __THREW__ = 0;
           invoke_viii(4, $4836 | 0, 38664, 183);
           $4842 = __THREW__;
           __THREW__ = 0;
           if ($4842 & 1) $$0218 = 0; else {}
          }
          $4848 = ___cxa_find_matching_catch() | 0;
          $4849 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($149);
          if ($$0218) {
           $$692909 = $4848;
           $$69972908 = $4849;
          } else {
           $$70 = $4848;
           $$7098 = $4849;
           break;
          }
         }
         ___cxa_free_exception($4836 | 0);
         $$70 = $$692909;
         $$7098 = $$69972908;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 1829) {
     $4844 = ___cxa_find_matching_catch() | 0;
     $$70 = $4844;
     $$7098 = tempRet0;
    }
    HEAP32[$ss121 >> 2] = 732;
    HEAP32[$4801 >> 2] = 772;
    HEAP32[$4802 >> 2] = 752;
    HEAP32[$4803 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4812);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4803);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4801);
    $$107 = $$70;
    $$107135 = $$7098;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i2228 = $eh$lpad$body$i2225$index138Z2D;
   $$01$i2227 = $eh$lpad$body$i2225$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4801);
   ___resumeException($$01$i2227 | 0);
   break;
  }
 case 1838:
  {
   ___assert_fail(40944, 38952, 1877, 40960);
   break;
  }
 case 1840:
  {
   $4869 = ___cxa_allocate_exception(24) | 0;
   $4870 = $$lcssa6442$lcssa7191 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $152 | 0, HEAP32[$201 >> 2] | 0);
   $4871 = __THREW__;
   __THREW__ = 0;
   do if ($4871 & 1) {
    $4883 = ___cxa_find_matching_catch() | 0;
    $$731012911 = tempRet0;
    $$732912 = $4883;
   } else {
    __THREW__ = 0;
    $4873 = invoke_iiii(30, $152 | 0, 0, 40976) | 0;
    $4874 = __THREW__;
    __THREW__ = 0;
    if ($4874 & 1) {
     $4885 = ___cxa_find_matching_catch() | 0;
     $4886 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($152);
     $$731012911 = $4886;
     $$732912 = $4885;
     break;
    };
    HEAP32[$151 + 0 >> 2] = HEAP32[$4873 + 0 >> 2];
    HEAP32[$151 + 4 >> 2] = HEAP32[$4873 + 4 >> 2];
    HEAP32[$151 + 8 >> 2] = HEAP32[$4873 + 8 >> 2];
    HEAP32[$4873 + 0 >> 2] = 0;
    HEAP32[$4873 + 4 >> 2] = 0;
    HEAP32[$4873 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4876 = invoke_iii(27, $151 | 0, 45688) | 0;
    $4877 = __THREW__;
    __THREW__ = 0;
    if ($4877 & 1) {
     $4887 = ___cxa_find_matching_catch() | 0;
     $$1210 = 1;
     $$71 = $4887;
     $$7199 = tempRet0;
    } else {
     HEAP32[$150 + 0 >> 2] = HEAP32[$4876 + 0 >> 2];
     HEAP32[$150 + 4 >> 2] = HEAP32[$4876 + 4 >> 2];
     HEAP32[$150 + 8 >> 2] = HEAP32[$4876 + 8 >> 2];
     HEAP32[$4876 + 0 >> 2] = 0;
     HEAP32[$4876 + 4 >> 2] = 0;
     HEAP32[$4876 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $4869 | 0, $195 | 0, $4870 | 0, $150 | 0);
     $4879 = __THREW__;
     __THREW__ = 0;
     if ($4879 & 1) $$0209 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4869 | 0, 38664, 183);
      $4881 = __THREW__;
      __THREW__ = 0;
      if ($4881 & 1) $$0209 = 0; else {}
     }
     $4889 = ___cxa_find_matching_catch() | 0;
     $4890 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($150);
     $$1210 = $$0209;
     $$71 = $4889;
     $$7199 = $4890;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($151);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($152);
    if ($$1210) {
     $$731012911 = $$7199;
     $$732912 = $$71;
    } else {
     $$107 = $$71;
     $$107135 = $$7199;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4869 | 0);
   $$107 = $$732912;
   $$107135 = $$731012911;
   ___resumeException($$107 | 0);
   break;
  }
 case 1853:
  {
   ___assert_fail(40944, 38952, 1891, 40960);
   break;
  }
 case 1855:
  {
   $4902 = ___cxa_allocate_exception(24) | 0;
   $4903 = $$lcssa6444 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $155 | 0, HEAP32[$201 >> 2] | 0);
   $4904 = __THREW__;
   __THREW__ = 0;
   do if ($4904 & 1) {
    $4916 = ___cxa_find_matching_catch() | 0;
    $$761042915 = tempRet0;
    $$762916 = $4916;
   } else {
    __THREW__ = 0;
    $4906 = invoke_iiii(30, $155 | 0, 0, 41016) | 0;
    $4907 = __THREW__;
    __THREW__ = 0;
    if ($4907 & 1) {
     $4918 = ___cxa_find_matching_catch() | 0;
     $4919 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($155);
     $$761042915 = $4919;
     $$762916 = $4918;
     break;
    };
    HEAP32[$154 + 0 >> 2] = HEAP32[$4906 + 0 >> 2];
    HEAP32[$154 + 4 >> 2] = HEAP32[$4906 + 4 >> 2];
    HEAP32[$154 + 8 >> 2] = HEAP32[$4906 + 8 >> 2];
    HEAP32[$4906 + 0 >> 2] = 0;
    HEAP32[$4906 + 4 >> 2] = 0;
    HEAP32[$4906 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4909 = invoke_iii(27, $154 | 0, 45688) | 0;
    $4910 = __THREW__;
    __THREW__ = 0;
    if ($4910 & 1) {
     $4920 = ___cxa_find_matching_catch() | 0;
     $$1194 = 1;
     $$74 = $4920;
     $$74102 = tempRet0;
    } else {
     HEAP32[$153 + 0 >> 2] = HEAP32[$4909 + 0 >> 2];
     HEAP32[$153 + 4 >> 2] = HEAP32[$4909 + 4 >> 2];
     HEAP32[$153 + 8 >> 2] = HEAP32[$4909 + 8 >> 2];
     HEAP32[$4909 + 0 >> 2] = 0;
     HEAP32[$4909 + 4 >> 2] = 0;
     HEAP32[$4909 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $4902 | 0, $195 | 0, $4903 | 0, $153 | 0);
     $4912 = __THREW__;
     __THREW__ = 0;
     if ($4912 & 1) $$0193 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4902 | 0, 38664, 183);
      $4914 = __THREW__;
      __THREW__ = 0;
      if ($4914 & 1) $$0193 = 0; else {}
     }
     $4922 = ___cxa_find_matching_catch() | 0;
     $4923 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($153);
     $$1194 = $$0193;
     $$74 = $4922;
     $$74102 = $4923;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($154);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($155);
    if ($$1194) {
     $$761042915 = $$74102;
     $$762916 = $$74;
    } else {
     $$107 = $$74;
     $$107135 = $$74102;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4902 | 0);
   $$107 = $$762916;
   $$107135 = $$761042915;
   ___resumeException($$107 | 0);
   break;
  }
 case 1870:
  {
   $4937 = $ss127 + 64 | 0;
   $4938 = $ss127 + 8 | 0;
   HEAP32[$4938 >> 2] = 752;
   $4939 = $ss127 + 12 | 0;
   HEAP32[$ss127 >> 2] = 900;
   HEAP32[$4937 >> 2] = 920;
   HEAP32[$ss127 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss127 + 64 | 0, $4939 | 0);
   $4942 = __THREW__;
   __THREW__ = 0;
   if ($4942 & 1) {
    $4954 = ___cxa_find_matching_catch() | 0;
    $$0$i2262 = tempRet0;
    $$01$i2261 = $4954;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4937);
    ___resumeException($$01$i2261 | 0);
   }
   HEAP32[$ss127 + 136 >> 2] = 0;
   HEAP32[$ss127 + 140 >> 2] = -1;
   HEAP32[$ss127 >> 2] = 732;
   HEAP32[$4937 >> 2] = 772;
   HEAP32[$4938 >> 2] = 752;
   __THREW__ = 0;
   invoke_vi(177, $4939 | 0);
   $4946 = __THREW__;
   __THREW__ = 0;
   do if ($4946 & 1) {
    $4956 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i2259$index143Z2D = tempRet0;
    $eh$lpad$body$i2259$indexZ2D = $4956;
   } else {
    HEAP32[$4939 >> 2] = 1064;
    $4948 = $ss127 + 44 | 0;
    HEAP32[$4948 + 0 >> 2] = 0;
    HEAP32[$4948 + 4 >> 2] = 0;
    HEAP32[$4948 + 8 >> 2] = 0;
    HEAP32[$4948 + 12 >> 2] = 0;
    HEAP32[$ss127 + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $4939 | 0, $0 | 0);
    $4950 = __THREW__;
    __THREW__ = 0;
    if ($4950 & 1) {
     $4952 = ___cxa_find_matching_catch() | 0;
     $4953 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4948);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4939);
     $eh$lpad$body$i2259$index143Z2D = $4953;
     $eh$lpad$body$i2259$indexZ2D = $4952;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $4958 = invoke_iiii(25, $4938 | 0, 41056, 21) | 0;
    $4959 = __THREW__;
    __THREW__ = 0;
    do if ($4959 & 1) label = 1886; else {
     __THREW__ = 0;
     $4961 = invoke_iii(31, $4958 | 0, $$lcssa6452 | 0) | 0;
     $4962 = __THREW__;
     __THREW__ = 0;
     if ($4962 & 1) label = 1886; else {
      __THREW__ = 0;
      $4964 = invoke_iiii(25, $4961 | 0, 40920, 16) | 0;
      $4965 = __THREW__;
      __THREW__ = 0;
      if ($4965 & 1) label = 1886; else {
       __THREW__ = 0;
       $4967 = invoke_iii(31, $4964 | 0, $$lcssa6450 | 0) | 0;
       $4968 = __THREW__;
       __THREW__ = 0;
       if ($4968 & 1) label = 1886; else {
        __THREW__ = 0;
        invoke_iiii(25, $4967 | 0, 42272, 1) | 0;
        $4970 = __THREW__;
        __THREW__ = 0;
        if ($4970 & 1) label = 1886; else {
         $4972 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_vii(43, $156 | 0, $4939 | 0);
         $4973 = __THREW__;
         __THREW__ = 0;
         if ($4973 & 1) {
          $4982 = ___cxa_find_matching_catch() | 0;
          $$771052919 = tempRet0;
          $$772920 = $4982;
         } else {
          __THREW__ = 0;
          invoke_viiii(17, $4972 | 0, $195 | 0, $$lcssa6445 + 4 | 0, $156 | 0);
          $4976 = __THREW__;
          __THREW__ = 0;
          if ($4976 & 1) $$0183 = 1; else {
           __THREW__ = 0;
           invoke_viii(4, $4972 | 0, 38664, 183);
           $4978 = __THREW__;
           __THREW__ = 0;
           if ($4978 & 1) $$0183 = 0; else {}
          }
          $4984 = ___cxa_find_matching_catch() | 0;
          $4985 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($156);
          if ($$0183) {
           $$771052919 = $4985;
           $$772920 = $4984;
          } else {
           $$78 = $4984;
           $$78106 = $4985;
           break;
          }
         }
         ___cxa_free_exception($4972 | 0);
         $$78 = $$772920;
         $$78106 = $$771052919;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 1886) {
     $4980 = ___cxa_find_matching_catch() | 0;
     $$78 = $4980;
     $$78106 = tempRet0;
    }
    HEAP32[$ss127 >> 2] = 732;
    HEAP32[$4937 >> 2] = 772;
    HEAP32[$4938 >> 2] = 752;
    HEAP32[$4939 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4948);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4939);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4937);
    $$107 = $$78;
    $$107135 = $$78106;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i2262 = $eh$lpad$body$i2259$index143Z2D;
   $$01$i2261 = $eh$lpad$body$i2259$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4937);
   ___resumeException($$01$i2261 | 0);
   break;
  }
 case 1896:
  {
   $4995 = ___cxa_find_matching_catch() | 0;
   $4996 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($158);
   $$107 = $4995;
   $$107135 = $4996;
   ___resumeException($$107 | 0);
   break;
  }
 case 1897:
  {
   $4997 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(45984, 41080, 44) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $4997 + (HEAP32[(HEAP32[$4997 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $5002 = invoke_iii(22, $0 | 0, 50208) | 0;
   $5003 = __THREW__;
   __THREW__ = 0;
   if ($5003 & 1) {
    $5011 = ___cxa_find_matching_catch() | 0;
    $5012 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($5011 | 0);
   }
   __THREW__ = 0;
   $5008 = invoke_iii(HEAP32[(HEAP32[$5002 >> 2] | 0) + 28 >> 2] | 0, $5002 | 0, 10) | 0;
   $5009 = __THREW__;
   __THREW__ = 0;
   if ($5009 & 1) {
    $5011 = ___cxa_find_matching_catch() | 0;
    $5012 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($5011 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($4997, $5008) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($4997) | 0;
    _abort();
   }
   break;
  }
 case 1902:
  {
   $5016 = ___cxa_allocate_exception(24) | 0;
   $5017 = $$lcssa7190 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $161 | 0, HEAP32[$201 >> 2] | 0);
   $5018 = __THREW__;
   __THREW__ = 0;
   do if ($5018 & 1) {
    $5030 = ___cxa_find_matching_catch() | 0;
    $$811092922 = tempRet0;
    $$812923 = $5030;
   } else {
    __THREW__ = 0;
    $5020 = invoke_iiii(30, $161 | 0, 0, 41128) | 0;
    $5021 = __THREW__;
    __THREW__ = 0;
    if ($5021 & 1) {
     $5032 = ___cxa_find_matching_catch() | 0;
     $5033 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($161);
     $$811092922 = $5033;
     $$812923 = $5032;
     break;
    };
    HEAP32[$160 + 0 >> 2] = HEAP32[$5020 + 0 >> 2];
    HEAP32[$160 + 4 >> 2] = HEAP32[$5020 + 4 >> 2];
    HEAP32[$160 + 8 >> 2] = HEAP32[$5020 + 8 >> 2];
    HEAP32[$5020 + 0 >> 2] = 0;
    HEAP32[$5020 + 4 >> 2] = 0;
    HEAP32[$5020 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5023 = invoke_iii(27, $160 | 0, 45688) | 0;
    $5024 = __THREW__;
    __THREW__ = 0;
    if ($5024 & 1) {
     $5034 = ___cxa_find_matching_catch() | 0;
     $$1178 = 1;
     $$79 = $5034;
     $$79107 = tempRet0;
    } else {
     HEAP32[$159 + 0 >> 2] = HEAP32[$5023 + 0 >> 2];
     HEAP32[$159 + 4 >> 2] = HEAP32[$5023 + 4 >> 2];
     HEAP32[$159 + 8 >> 2] = HEAP32[$5023 + 8 >> 2];
     HEAP32[$5023 + 0 >> 2] = 0;
     HEAP32[$5023 + 4 >> 2] = 0;
     HEAP32[$5023 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5016 | 0, $195 | 0, $5017 | 0, $159 | 0);
     $5026 = __THREW__;
     __THREW__ = 0;
     if ($5026 & 1) $$0177 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5016 | 0, 38664, 183);
      $5028 = __THREW__;
      __THREW__ = 0;
      if ($5028 & 1) $$0177 = 0; else {}
     }
     $5036 = ___cxa_find_matching_catch() | 0;
     $5037 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($159);
     $$1178 = $$0177;
     $$79 = $5036;
     $$79107 = $5037;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($160);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($161);
    if ($$1178) {
     $$811092922 = $$79107;
     $$812923 = $$79;
    } else {
     $$107 = $$79;
     $$107135 = $$79107;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5016 | 0);
   $$107 = $$812923;
   $$107135 = $$811092922;
   ___resumeException($$107 | 0);
   break;
  }
 case 1916:
  {
   $5044 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $162 | 0, 41184, 28);
   $5045 = __THREW__;
   __THREW__ = 0;
   if ($5045 & 1) {
    $5052 = ___cxa_find_matching_catch() | 0;
    $$821102926 = tempRet0;
    $$822927 = $5052;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $5044 | 0, $195 | 0, $$lcssa6421 + 4 | 0, $162 | 0);
    $5048 = __THREW__;
    __THREW__ = 0;
    if ($5048 & 1) $$0171 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $5044 | 0, 38664, 183);
     $5050 = __THREW__;
     __THREW__ = 0;
     if ($5050 & 1) $$0171 = 0; else {}
    }
    $5054 = ___cxa_find_matching_catch() | 0;
    $5055 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($162);
    if ($$0171) {
     $$821102926 = $5055;
     $$822927 = $5054;
    } else {
     $$107 = $5054;
     $$107135 = $5055;
     ___resumeException($$107 | 0);
    }
   }
   ___cxa_free_exception($5044 | 0);
   $$107 = $$822927;
   $$107135 = $$821102926;
   ___resumeException($$107 | 0);
   break;
  }
 case 1933:
  {
   $5076 = ___cxa_allocate_exception(24) | 0;
   $5077 = $$lcssa6422 + 4 | 0;
   HEAP32[$164 + 0 >> 2] = 0;
   HEAP32[$164 + 4 >> 2] = 0;
   HEAP32[$164 + 8 >> 2] = 0;
   $5078 = HEAP8[$$lcssa6428 >> 0] | 0;
   if (!($5078 & 1)) $5086 = ($5078 & 255) >>> 1; else $5086 = HEAP32[$$lcssa6427 + 12 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(14, $164 | 0, 41216, 23, $5086 + 23 | 0);
   $5087 = __THREW__;
   __THREW__ = 0;
   do if ($5087 & 1) label = 1944; else {
    if (!(HEAP8[$$lcssa6428 >> 0] & 1)) $5095 = $$lcssa6428 + 1 | 0; else $5095 = HEAP32[$$lcssa6427 + 16 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiii(33, $164 | 0, $5095 | 0, $5086 | 0) | 0;
    $5096 = __THREW__;
    __THREW__ = 0;
    if ($5096 & 1) label = 1944; else {
     __THREW__ = 0;
     $5098 = invoke_iii(27, $164 | 0, 39568) | 0;
     $5099 = __THREW__;
     __THREW__ = 0;
     if ($5099 & 1) {
      $5107 = ___cxa_find_matching_catch() | 0;
      $5108 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($164);
      $$841122929 = $5108;
      $$842930 = $5107;
      break;
     };
     HEAP32[$163 + 0 >> 2] = HEAP32[$5098 + 0 >> 2];
     HEAP32[$163 + 4 >> 2] = HEAP32[$5098 + 4 >> 2];
     HEAP32[$163 + 8 >> 2] = HEAP32[$5098 + 8 >> 2];
     HEAP32[$5098 + 0 >> 2] = 0;
     HEAP32[$5098 + 4 >> 2] = 0;
     HEAP32[$5098 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5076 | 0, $195 | 0, $5077 | 0, $163 | 0);
     $5101 = __THREW__;
     __THREW__ = 0;
     if ($5101 & 1) $$0164 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5076 | 0, 38664, 183);
      $5103 = __THREW__;
      __THREW__ = 0;
      if ($5103 & 1) $$0164 = 0; else {}
     }
     $5109 = ___cxa_find_matching_catch() | 0;
     $5110 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($163);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($164);
     if ($$0164) {
      $$841122929 = $5110;
      $$842930 = $5109;
     } else {
      $$107 = $5109;
      $$107135 = $5110;
      ___resumeException($$107 | 0);
     }
    }
   } while (0);
   if ((label | 0) == 1944) {
    $5105 = ___cxa_find_matching_catch() | 0;
    $5106 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($164);
    $$841122929 = $5106;
    $$842930 = $5105;
   }
   ___cxa_free_exception($5076 | 0);
   $$107 = $$842930;
   $$107135 = $$841122929;
   ___resumeException($$107 | 0);
   break;
  }
 case 2055:
  {
   $5310 = ___cxa_find_matching_catch() | 0;
   $5311 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($166, HEAP32[$319 >> 2] | 0);
   $$86 = $5310;
   $$86114 = $5311;
   label = 2059;
   break;
  }
 case 2056:
  {
   $5313 = ___cxa_find_matching_catch() | 0;
   $5314 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($167, HEAP32[$323 >> 2] | 0);
   $$85 = $5313;
   $$85113 = $5314;
   label = 2058;
   break;
  }
 case 2057:
  {
   $5316 = ___cxa_find_matching_catch() | 0;
   $5317 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($167, HEAP32[$323 >> 2] | 0);
   $$85 = $5316;
   $$85113 = $5317;
   label = 2058;
   break;
  }
 case 2061:
  {
   $5325 = ___cxa_allocate_exception(24) | 0;
   $5326 = $$lcssa6417 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(61, $169 | 0, HEAP32[$201 >> 2] | 0);
   $5327 = __THREW__;
   __THREW__ = 0;
   do if ($5327 & 1) {
    $5336 = ___cxa_find_matching_catch() | 0;
    $$881162933 = tempRet0;
    $$882934 = $5336;
   } else {
    __THREW__ = 0;
    $5329 = invoke_iiii(30, $169 | 0, 0, 41240) | 0;
    $5330 = __THREW__;
    __THREW__ = 0;
    if ($5330 & 1) {
     $5338 = ___cxa_find_matching_catch() | 0;
     $5339 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($169);
     $$881162933 = $5339;
     $$882934 = $5338;
     break;
    };
    HEAP32[$168 + 0 >> 2] = HEAP32[$5329 + 0 >> 2];
    HEAP32[$168 + 4 >> 2] = HEAP32[$5329 + 4 >> 2];
    HEAP32[$168 + 8 >> 2] = HEAP32[$5329 + 8 >> 2];
    HEAP32[$5329 + 0 >> 2] = 0;
    HEAP32[$5329 + 4 >> 2] = 0;
    HEAP32[$5329 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(17, $5325 | 0, $195 | 0, $5326 | 0, $168 | 0);
    $5332 = __THREW__;
    __THREW__ = 0;
    if ($5332 & 1) $$0151 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $5325 | 0, 38664, 183);
     $5334 = __THREW__;
     __THREW__ = 0;
     if ($5334 & 1) $$0151 = 0; else {}
    }
    $5340 = ___cxa_find_matching_catch() | 0;
    $5341 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($168);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($169);
    if ($$0151) {
     $$881162933 = $5341;
     $$882934 = $5340;
    } else {
     $$107 = $5340;
     $$107135 = $5341;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5325 | 0);
   $$107 = $$882934;
   $$107135 = $$881162933;
   ___resumeException($$107 | 0);
   break;
  }
 case 2072:
  {
   $5352 = ___cxa_find_matching_catch() | 0;
   $5353 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($172, HEAP32[$329 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($171, HEAP32[$326 >> 2] | 0);
   $$107 = $5352;
   $$107135 = $5353;
   ___resumeException($$107 | 0);
   break;
  }
 case 2089:
  {
   $5398 = $ss136 + 64 | 0;
   $5399 = $ss136 + 8 | 0;
   HEAP32[$5399 >> 2] = 752;
   $5400 = $ss136 + 12 | 0;
   HEAP32[$ss136 >> 2] = 900;
   HEAP32[$5398 >> 2] = 920;
   HEAP32[$ss136 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss136 + 64 | 0, $5400 | 0);
   $5403 = __THREW__;
   __THREW__ = 0;
   if ($5403 & 1) {
    $5415 = ___cxa_find_matching_catch() | 0;
    $$0$i2442 = tempRet0;
    $$01$i2441 = $5415;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5398);
    ___resumeException($$01$i2441 | 0);
   }
   HEAP32[$ss136 + 136 >> 2] = 0;
   HEAP32[$ss136 + 140 >> 2] = -1;
   HEAP32[$ss136 >> 2] = 732;
   HEAP32[$5398 >> 2] = 772;
   HEAP32[$5399 >> 2] = 752;
   __THREW__ = 0;
   invoke_vi(177, $5400 | 0);
   $5407 = __THREW__;
   __THREW__ = 0;
   do if ($5407 & 1) {
    $5417 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i2439$index148Z2D = tempRet0;
    $eh$lpad$body$i2439$indexZ2D = $5417;
   } else {
    HEAP32[$5400 >> 2] = 1064;
    $5409 = $ss136 + 44 | 0;
    HEAP32[$5409 + 0 >> 2] = 0;
    HEAP32[$5409 + 4 >> 2] = 0;
    HEAP32[$5409 + 8 >> 2] = 0;
    HEAP32[$5409 + 12 >> 2] = 0;
    HEAP32[$ss136 + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $5400 | 0, $0 | 0);
    $5411 = __THREW__;
    __THREW__ = 0;
    if ($5411 & 1) {
     $5413 = ___cxa_find_matching_catch() | 0;
     $5414 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5409);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5400);
     $eh$lpad$body$i2439$index148Z2D = $5414;
     $eh$lpad$body$i2439$indexZ2D = $5413;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $5419 = invoke_iiii(25, $5399 | 0, 41280, 27) | 0;
    $5420 = __THREW__;
    __THREW__ = 0;
    do if ($5420 & 1) label = 2106; else {
     __THREW__ = 0;
     invoke_vii(61, $173 | 0, HEAP32[$201 >> 2] | 0);
     $5422 = __THREW__;
     __THREW__ = 0;
     if ($5422 & 1) label = 2106; else {
      $5424 = HEAP8[$173 >> 0] | 0;
      if (!($5424 & 1)) {
       $5434 = $173 + 1 | 0;
       $5435 = ($5424 & 255) >>> 1;
      } else {
       $5434 = HEAP32[$173 + 8 >> 2] | 0;
       $5435 = HEAP32[$173 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $5419 | 0, $5434 | 0, $5435 | 0) | 0;
      $5436 = __THREW__;
      __THREW__ = 0;
      if ($5436 & 1) {
       $5448 = ___cxa_find_matching_catch() | 0;
       $5449 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($173);
       $$90 = $5448;
       $$90118 = $5449;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($173);
      $5438 = ___cxa_allocate_exception(24) | 0;
      __THREW__ = 0;
      invoke_vii(43, $174 | 0, $5400 | 0);
      $5439 = __THREW__;
      __THREW__ = 0;
      if ($5439 & 1) {
       $5450 = ___cxa_find_matching_catch() | 0;
       $$891172937 = tempRet0;
       $$892938 = $5450;
      } else {
       __THREW__ = 0;
       invoke_viiii(17, $5438 | 0, $195 | 0, $$lcssa6389 + 4 | 0, $174 | 0);
       $5442 = __THREW__;
       __THREW__ = 0;
       if ($5442 & 1) $$0144 = 1; else {
        __THREW__ = 0;
        invoke_viii(4, $5438 | 0, 38664, 183);
        $5444 = __THREW__;
        __THREW__ = 0;
        if ($5444 & 1) $$0144 = 0; else {}
       }
       $5452 = ___cxa_find_matching_catch() | 0;
       $5453 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($174);
       if ($$0144) {
        $$891172937 = $5453;
        $$892938 = $5452;
       } else {
        $$90 = $5452;
        $$90118 = $5453;
        break;
       }
      }
      ___cxa_free_exception($5438 | 0);
      $$90 = $$892938;
      $$90118 = $$891172937;
     }
    } while (0);
    if ((label | 0) == 2106) {
     $5446 = ___cxa_find_matching_catch() | 0;
     $$90 = $5446;
     $$90118 = tempRet0;
    }
    HEAP32[$ss136 >> 2] = 732;
    HEAP32[$5398 >> 2] = 772;
    HEAP32[$5399 >> 2] = 752;
    HEAP32[$5400 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5409);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5400);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5398);
    $$107 = $$90;
    $$107135 = $$90118;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i2442 = $eh$lpad$body$i2439$index148Z2D;
   $$01$i2441 = $eh$lpad$body$i2439$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5398);
   ___resumeException($$01$i2441 | 0);
   break;
  }
 case 2122:
  {
   $5470 = ___cxa_allocate_exception(24) | 0;
   $5471 = $$lcssa6390 + 4 | 0;
   HEAP32[$176 + 0 >> 2] = 0;
   HEAP32[$176 + 4 >> 2] = 0;
   HEAP32[$176 + 8 >> 2] = 0;
   $5472 = HEAP8[$$lcssa6400 >> 0] | 0;
   if (!($5472 & 1)) $5480 = ($5472 & 255) >>> 1; else $5480 = HEAP32[$$lcssa6395 + 12 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(14, $176 | 0, 41216, 23, $5480 + 23 | 0);
   $5481 = __THREW__;
   __THREW__ = 0;
   do if ($5481 & 1) label = 2133; else {
    if (!(HEAP8[$$lcssa6400 >> 0] & 1)) $5489 = $$lcssa6400 + 1 | 0; else $5489 = HEAP32[$$lcssa6395 + 16 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiii(33, $176 | 0, $5489 | 0, $5480 | 0) | 0;
    $5490 = __THREW__;
    __THREW__ = 0;
    if ($5490 & 1) label = 2133; else {
     __THREW__ = 0;
     $5492 = invoke_iii(27, $176 | 0, 39568) | 0;
     $5493 = __THREW__;
     __THREW__ = 0;
     if ($5493 & 1) {
      $5501 = ___cxa_find_matching_catch() | 0;
      $5502 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($176);
      $$921202940 = $5502;
      $$922941 = $5501;
      break;
     };
     HEAP32[$175 + 0 >> 2] = HEAP32[$5492 + 0 >> 2];
     HEAP32[$175 + 4 >> 2] = HEAP32[$5492 + 4 >> 2];
     HEAP32[$175 + 8 >> 2] = HEAP32[$5492 + 8 >> 2];
     HEAP32[$5492 + 0 >> 2] = 0;
     HEAP32[$5492 + 4 >> 2] = 0;
     HEAP32[$5492 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5470 | 0, $195 | 0, $5471 | 0, $175 | 0);
     $5495 = __THREW__;
     __THREW__ = 0;
     if ($5495 & 1) $$0139 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5470 | 0, 38664, 183);
      $5497 = __THREW__;
      __THREW__ = 0;
      if ($5497 & 1) $$0139 = 0; else {}
     }
     $5503 = ___cxa_find_matching_catch() | 0;
     $5504 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($175);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($176);
     if ($$0139) {
      $$921202940 = $5504;
      $$922941 = $5503;
     } else {
      $$107 = $5503;
      $$107135 = $5504;
      ___resumeException($$107 | 0);
     }
    }
   } while (0);
   if ((label | 0) == 2133) {
    $5499 = ___cxa_find_matching_catch() | 0;
    $5500 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($176);
    $$921202940 = $5500;
    $$922941 = $5499;
   }
   ___cxa_free_exception($5470 | 0);
   $$107 = $$922941;
   $$107135 = $$921202940;
   ___resumeException($$107 | 0);
   break;
  }
 case 2228:
  {
   $5677 = ___cxa_find_matching_catch() | 0;
   $5678 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($178, HEAP32[$332 >> 2] | 0);
   $$94 = $5677;
   $$94122 = $5678;
   label = 2232;
   break;
  }
 case 2229:
  {
   $5680 = ___cxa_find_matching_catch() | 0;
   $5681 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($179, HEAP32[$336 >> 2] | 0);
   $$93 = $5680;
   $$93121 = $5681;
   label = 2231;
   break;
  }
 case 2230:
  {
   $5683 = ___cxa_find_matching_catch() | 0;
   $5684 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($179, HEAP32[$336 >> 2] | 0);
   $$93 = $5683;
   $$93121 = $5684;
   label = 2231;
   break;
  }
 case 2251:
  {
   $5733 = ___cxa_find_matching_catch() | 0;
   $5734 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($344);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($339);
   $eh$lpad$body$i2595$index153Z2D = $5734;
   $eh$lpad$body$i2595$indexZ2D = $5733;
   label = 2254;
   break;
  }
 case 2252:
  {
   $5735 = ___cxa_find_matching_catch() | 0;
   $$0$i2598 = tempRet0;
   $$01$i2597 = $5735;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($337);
   ___resumeException($$01$i2597 | 0);
   break;
  }
 case 2253:
  {
   $5737 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i2595$index153Z2D = tempRet0;
   $eh$lpad$body$i2595$indexZ2D = $5737;
   label = 2254;
   break;
  }
 case 2261:
  {
   $5758 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body2622$index159Z2D = tempRet0;
   $eh$lpad$body2622$indexZ2D = $5758;
   label = 2262;
   break;
  }
 case 2265:
  {
   $5767 = ___cxa_find_matching_catch() | 0;
   $5768 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $eh$lpad$body2622$index159Z2D = $5768;
   $eh$lpad$body2622$indexZ2D = $5767;
   label = 2262;
   break;
  }
 case 2271:
  {
   $5780 = ___cxa_find_matching_catch() | 0;
   $5781 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($180);
   $$95 = $5780;
   $$95123 = $5781;
   label = 2290;
   break;
  }
 case 2279:
  {
   $5808 = ___cxa_find_matching_catch() | 0;
   $5809 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $eh$lpad$body2622$index159Z2D = $5809;
   $eh$lpad$body2622$indexZ2D = $5808;
   label = 2262;
   break;
  }
 case 2285:
  {
   $5821 = ___cxa_find_matching_catch() | 0;
   $5822 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($181);
   $$95 = $5821;
   $$95123 = $5822;
   label = 2290;
   break;
  }
 case 2289:
  {
   $5827 = ___cxa_find_matching_catch() | 0;
   $5828 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($183);
   $$95 = $5827;
   $$95123 = $5828;
   label = 2290;
   break;
  }
 case 2294:
  {
   $5837 = ___cxa_allocate_exception(24) | 0;
   $5838 = $$lcssa6381 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $186 | 0, HEAP32[$$lcssa6383 >> 2] | 0);
   $5840 = __THREW__;
   __THREW__ = 0;
   do if ($5840 & 1) {
    $5852 = ___cxa_find_matching_catch() | 0;
    $$981262944 = tempRet0;
    $$982945 = $5852;
   } else {
    __THREW__ = 0;
    $5842 = invoke_iiii(30, $186 | 0, 0, 41312) | 0;
    $5843 = __THREW__;
    __THREW__ = 0;
    if ($5843 & 1) {
     $5854 = ___cxa_find_matching_catch() | 0;
     $5855 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($186);
     $$981262944 = $5855;
     $$982945 = $5854;
     break;
    };
    HEAP32[$185 + 0 >> 2] = HEAP32[$5842 + 0 >> 2];
    HEAP32[$185 + 4 >> 2] = HEAP32[$5842 + 4 >> 2];
    HEAP32[$185 + 8 >> 2] = HEAP32[$5842 + 8 >> 2];
    HEAP32[$5842 + 0 >> 2] = 0;
    HEAP32[$5842 + 4 >> 2] = 0;
    HEAP32[$5842 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5845 = invoke_iii(27, $185 | 0, 39984) | 0;
    $5846 = __THREW__;
    __THREW__ = 0;
    if ($5846 & 1) {
     $5856 = ___cxa_find_matching_catch() | 0;
     $$17 = 1;
     $$96 = $5856;
     $$96124 = tempRet0;
    } else {
     HEAP32[$184 + 0 >> 2] = HEAP32[$5845 + 0 >> 2];
     HEAP32[$184 + 4 >> 2] = HEAP32[$5845 + 4 >> 2];
     HEAP32[$184 + 8 >> 2] = HEAP32[$5845 + 8 >> 2];
     HEAP32[$5845 + 0 >> 2] = 0;
     HEAP32[$5845 + 4 >> 2] = 0;
     HEAP32[$5845 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5837 | 0, $195 | 0, $5838 | 0, $184 | 0);
     $5848 = __THREW__;
     __THREW__ = 0;
     if ($5848 & 1) $$06 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5837 | 0, 38664, 183);
      $5850 = __THREW__;
      __THREW__ = 0;
      if ($5850 & 1) $$06 = 0; else {}
     }
     $5858 = ___cxa_find_matching_catch() | 0;
     $5859 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($184);
     $$17 = $$06;
     $$96 = $5858;
     $$96124 = $5859;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($185);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($186);
    if ($$17) {
     $$981262944 = $$96124;
     $$982945 = $$96;
    } else {
     $$107 = $$96;
     $$107135 = $$96124;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5837 | 0);
   $$107 = $$982945;
   $$107135 = $$981262944;
   ___resumeException($$107 | 0);
   break;
  }
 case 2308:
  {
   $5868 = ___cxa_allocate_exception(24) | 0;
   $5869 = $$lcssa6380 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $189 | 0, HEAP32[$$lcssa6382 >> 2] | 0);
   $5871 = __THREW__;
   __THREW__ = 0;
   do if ($5871 & 1) {
    $5883 = ___cxa_find_matching_catch() | 0;
    $$1011292948 = tempRet0;
    $$1012949 = $5883;
   } else {
    __THREW__ = 0;
    $5873 = invoke_iiii(30, $189 | 0, 0, 41312) | 0;
    $5874 = __THREW__;
    __THREW__ = 0;
    if ($5874 & 1) {
     $5885 = ___cxa_find_matching_catch() | 0;
     $5886 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($189);
     $$1011292948 = $5886;
     $$1012949 = $5885;
     break;
    };
    HEAP32[$188 + 0 >> 2] = HEAP32[$5873 + 0 >> 2];
    HEAP32[$188 + 4 >> 2] = HEAP32[$5873 + 4 >> 2];
    HEAP32[$188 + 8 >> 2] = HEAP32[$5873 + 8 >> 2];
    HEAP32[$5873 + 0 >> 2] = 0;
    HEAP32[$5873 + 4 >> 2] = 0;
    HEAP32[$5873 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5876 = invoke_iii(27, $188 | 0, 40040) | 0;
    $5877 = __THREW__;
    __THREW__ = 0;
    if ($5877 & 1) {
     $5887 = ___cxa_find_matching_catch() | 0;
     $$13 = 1;
     $$99 = $5887;
     $$99127 = tempRet0;
    } else {
     HEAP32[$187 + 0 >> 2] = HEAP32[$5876 + 0 >> 2];
     HEAP32[$187 + 4 >> 2] = HEAP32[$5876 + 4 >> 2];
     HEAP32[$187 + 8 >> 2] = HEAP32[$5876 + 8 >> 2];
     HEAP32[$5876 + 0 >> 2] = 0;
     HEAP32[$5876 + 4 >> 2] = 0;
     HEAP32[$5876 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5868 | 0, $195 | 0, $5869 | 0, $187 | 0);
     $5879 = __THREW__;
     __THREW__ = 0;
     if ($5879 & 1) $$02 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5868 | 0, 38664, 183);
      $5881 = __THREW__;
      __THREW__ = 0;
      if ($5881 & 1) $$02 = 0; else {}
     }
     $5889 = ___cxa_find_matching_catch() | 0;
     $5890 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($187);
     $$13 = $$02;
     $$99 = $5889;
     $$99127 = $5890;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($188);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($189);
    if ($$13) {
     $$1011292948 = $$99127;
     $$1012949 = $$99;
    } else {
     $$107 = $$99;
     $$107135 = $$99127;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5868 | 0);
   $$107 = $$1012949;
   $$107135 = $$1011292948;
   ___resumeException($$107 | 0);
   break;
  }
 case 2319:
  {
   $5891 = ___cxa_allocate_exception(24) | 0;
   $5892 = $$lcssa6379 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $193 | 0, HEAP32[$$lcssa6379 + 48 >> 2] | 0);
   $5895 = __THREW__;
   __THREW__ = 0;
   do if ($5895 & 1) {
    $5924 = ___cxa_find_matching_catch() | 0;
    $$1061342952 = tempRet0;
    $$1062953 = $5924;
   } else {
    __THREW__ = 0;
    $5897 = invoke_iiii(30, $193 | 0, 0, 41312) | 0;
    $5898 = __THREW__;
    __THREW__ = 0;
    if ($5898 & 1) {
     $5926 = ___cxa_find_matching_catch() | 0;
     $5927 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193);
     $$1061342952 = $5927;
     $$1062953 = $5926;
     break;
    };
    HEAP32[$192 + 0 >> 2] = HEAP32[$5897 + 0 >> 2];
    HEAP32[$192 + 4 >> 2] = HEAP32[$5897 + 4 >> 2];
    HEAP32[$192 + 8 >> 2] = HEAP32[$5897 + 8 >> 2];
    HEAP32[$5897 + 0 >> 2] = 0;
    HEAP32[$5897 + 4 >> 2] = 0;
    HEAP32[$5897 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5900 = invoke_iii(27, $192 | 0, 41328) | 0;
    $5901 = __THREW__;
    __THREW__ = 0;
    if ($5901 & 1) {
     $5928 = ___cxa_find_matching_catch() | 0;
     $$104 = $5928;
     $$104132 = tempRet0;
     $$3 = 1;
    } else {
     HEAP32[$191 + 0 >> 2] = HEAP32[$5900 + 0 >> 2];
     HEAP32[$191 + 4 >> 2] = HEAP32[$5900 + 4 >> 2];
     HEAP32[$191 + 8 >> 2] = HEAP32[$5900 + 8 >> 2];
     HEAP32[$5900 + 0 >> 2] = 0;
     HEAP32[$5900 + 4 >> 2] = 0;
     HEAP32[$5900 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(61, $194 | 0, HEAP32[$201 >> 2] | 0);
     $5903 = __THREW__;
     __THREW__ = 0;
     if ($5903 & 1) {
      $5930 = ___cxa_find_matching_catch() | 0;
      $$103 = $5930;
      $$103131 = tempRet0;
      $$2 = 1;
     } else {
      $5905 = HEAP8[$194 >> 0] | 0;
      if (!($5905 & 1)) {
       $5915 = $194 + 1 | 0;
       $5916 = ($5905 & 255) >>> 1;
      } else {
       $5915 = HEAP32[$194 + 8 >> 2] | 0;
       $5916 = HEAP32[$194 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $5917 = invoke_iiii(33, $191 | 0, $5915 | 0, $5916 | 0) | 0;
      $5918 = __THREW__;
      __THREW__ = 0;
      if ($5918 & 1) {
       $5932 = ___cxa_find_matching_catch() | 0;
       $$1 = 1;
       $$102 = $5932;
       $$102130 = tempRet0;
      } else {
       HEAP32[$190 + 0 >> 2] = HEAP32[$5917 + 0 >> 2];
       HEAP32[$190 + 4 >> 2] = HEAP32[$5917 + 4 >> 2];
       HEAP32[$190 + 8 >> 2] = HEAP32[$5917 + 8 >> 2];
       HEAP32[$5917 + 0 >> 2] = 0;
       HEAP32[$5917 + 4 >> 2] = 0;
       HEAP32[$5917 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_viiii(17, $5891 | 0, $195 | 0, $5892 | 0, $190 | 0);
       $5920 = __THREW__;
       __THREW__ = 0;
       if ($5920 & 1) $$0 = 1; else {
        __THREW__ = 0;
        invoke_viii(4, $5891 | 0, 38664, 183);
        $5922 = __THREW__;
        __THREW__ = 0;
        if ($5922 & 1) $$0 = 0; else {}
       }
       $5934 = ___cxa_find_matching_catch() | 0;
       $5935 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($190);
       $$1 = $$0;
       $$102 = $5934;
       $$102130 = $5935;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($194);
      $$103 = $$102;
      $$103131 = $$102130;
      $$2 = $$1;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($191);
     $$104 = $$103;
     $$104132 = $$103131;
     $$3 = $$2;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($192);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193);
    if ($$3) {
     $$1061342952 = $$104132;
     $$1062953 = $$104;
    } else {
     $$107 = $$104;
     $$107135 = $$104132;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5891 | 0);
   $$107 = $$1062953;
   $$107135 = $$1061342952;
   ___resumeException($$107 | 0);
   break;
  }
 case 2339:
  {
   $5938 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(45984, 41360, 36) | 0, HEAP32[$$lcssa6294 >> 2] | 0) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $5938 + (HEAP32[(HEAP32[$5938 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $5943 = invoke_iii(22, $0 | 0, 50208) | 0;
   $5944 = __THREW__;
   __THREW__ = 0;
   if ($5944 & 1) {
    $5952 = ___cxa_find_matching_catch() | 0;
    $5953 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($5952 | 0);
   }
   __THREW__ = 0;
   $5949 = invoke_iii(HEAP32[(HEAP32[$5943 >> 2] | 0) + 28 >> 2] | 0, $5943 | 0, 10) | 0;
   $5950 = __THREW__;
   __THREW__ = 0;
   if ($5950 & 1) {
    $5952 = ___cxa_find_matching_catch() | 0;
    $5953 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($5952 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($5938, $5949) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($5938) | 0;
    _abort();
   }
   break;
  }
 case 2347:
  {
   STACKTOP = sp;
   return;
  }
 case 2348:
  {
   STACKTOP = sp;
   return;
  }
 case 2349:
  {
   STACKTOP = sp;
   return;
  }
 }
 switch (label | 0) {
 case 153:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env, HEAP32[$218 >> 2] | 0);
   $$107 = $eh$lpad$body$indexZ2D;
   $$107135 = $eh$lpad$body$index7Z2D;
   ___resumeException($$107 | 0);
   break;
  }
 case 329:
  {
   $1189 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(45984, 39680, 41) | 0;
   $1190 = HEAP32[$1191 >> 2] | 0;
   $1192 = HEAP8[$1190 >> 0] | 0;
   if (!($1192 & 1)) {
    $1202 = $1190 + 1 | 0;
    $1203 = ($1192 & 255) >>> 1;
   } else {
    $1202 = HEAP32[$1190 + 8 >> 2] | 0;
    $1203 = HEAP32[$1190 + 4 >> 2] | 0;
   }
   $1204 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($1189, $1202, $1203) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $1204 + (HEAP32[(HEAP32[$1204 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $1209 = invoke_iii(22, $0 | 0, 50208) | 0;
   $1210 = __THREW__;
   __THREW__ = 0;
   if ($1210 & 1) {
    $1218 = ___cxa_find_matching_catch() | 0;
    $1219 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1218 | 0);
   }
   __THREW__ = 0;
   $1215 = invoke_iii(HEAP32[(HEAP32[$1209 >> 2] | 0) + 28 >> 2] | 0, $1209 | 0, 10) | 0;
   $1216 = __THREW__;
   __THREW__ = 0;
   if ($1216 & 1) {
    $1218 = ___cxa_find_matching_catch() | 0;
    $1219 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1218 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($1204, $1215) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($1204) | 0;
    _abort();
   }
   break;
  }
 case 476:
  {
   $$7 = $eh$lpad$body825$indexZ2D;
   $$735 = $eh$lpad$body825$index17Z2D;
   label = 573;
   break;
  }
 case 535:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings, $1737);
   $$7 = $lpad$phi2989$index;
   $$735 = $lpad$phi2989$index22;
   label = 573;
   break;
  }
 case 657:
  {
   $2014 = HEAP32[$elements45 >> 2] | 0;
   if (!$2014) {
    $$107 = $lpad$phi2995$index;
    $$107135 = $lpad$phi2995$index28;
    ___resumeException($$107 | 0);
   }
   $2017 = HEAP32[$249 >> 2] | 0;
   if (($2017 | 0) != ($2014 | 0)) HEAP32[$249 >> 2] = $2017 + (~(($2017 + -4 - $2014 | 0) >>> 2) << 2);
   __ZdlPv($2014);
   $$107 = $lpad$phi2995$index;
   $$107135 = $lpad$phi2995$index28;
   ___resumeException($$107 | 0);
   break;
  }
 case 1010:
  {
   $$59 = $eh$lpad$body1186$indexZ2D;
   $$5987 = $eh$lpad$body1186$index64Z2D;
   break;
  }
 case 1053:
  {
   $$45 = $eh$lpad$body1215$indexZ2D;
   $$4573 = $eh$lpad$body1215$index111Z2D;
   label = 1249;
   break;
  }
 case 1486:
  {
   $$50 = $lpad$phi3006$index;
   $$5078 = $lpad$phi3006$index118;
   label = 1562;
   break;
  }
 case 1701:
  {
   $4505 = ___cxa_allocate_exception(24) | 0;
   HEAP32[$137 + 0 >> 2] = 0;
   HEAP32[$137 + 4 >> 2] = 0;
   HEAP32[$137 + 8 >> 2] = 0;
   $4506 = HEAP8[$$pre5205$pre$phiZZ2D >> 0] | 0;
   if (!($4506 & 1)) $4515 = ($4506 & 255) >>> 1; else $4515 = HEAP32[$4510 + 12 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(14, $137 | 0, 40640, 29, $4515 + 29 | 0);
   $4516 = __THREW__;
   __THREW__ = 0;
   if ($4516 & 1) label = 1712; else {
    if (!(HEAP8[$$pre5205$pre$phiZZ2D >> 0] & 1)) $4525 = $4524 + 1 | 0; else $4525 = HEAP32[$4510 + 16 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiii(33, $137 | 0, $4525 | 0, $4515 | 0) | 0;
    $4526 = __THREW__;
    __THREW__ = 0;
    if ($4526 & 1) label = 1712; else {
     __THREW__ = 0;
     invoke_viiii(17, $4505 | 0, $195 | 0, $4528 | 0, $137 | 0);
     $4529 = __THREW__;
     __THREW__ = 0;
     if ($4529 & 1) $$0249 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4505 | 0, 38664, 183);
      $4531 = __THREW__;
      __THREW__ = 0;
      if ($4531 & 1) $$0249 = 0; else {}
     }
     $4537 = ___cxa_find_matching_catch() | 0;
     $4538 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($137);
     if ($$0249) {
      $$582892 = $4537;
      $$58862891 = $4538;
     } else {
      $$59 = $4537;
      $$5987 = $4538;
      break;
     }
    }
   }
   if ((label | 0) == 1712) {
    $4535 = ___cxa_find_matching_catch() | 0;
    $4536 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($137);
    $$582892 = $4535;
    $$58862891 = $4536;
   }
   ___cxa_free_exception($4505 | 0);
   $$59 = $$582892;
   $$5987 = $$58862891;
   break;
  }
 case 2058:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($166, HEAP32[$319 >> 2] | 0);
   $$86 = $$85;
   $$86114 = $$85113;
   label = 2059;
   break;
  }
 case 2231:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($178, HEAP32[$332 >> 2] | 0);
   $$94 = $$93;
   $$94122 = $$93121;
   label = 2232;
   break;
  }
 case 2254:
  {
   $$0$i2598 = $eh$lpad$body$i2595$index153Z2D;
   $$01$i2597 = $eh$lpad$body$i2595$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($337);
   ___resumeException($$01$i2597 | 0);
   break;
  }
 case 2262:
  {
   $$95 = $eh$lpad$body2622$indexZ2D;
   $$95123 = $eh$lpad$body2622$index159Z2D;
   label = 2290;
   break;
  }
 }
 if ((label | 0) == 573) {
  $1825 = HEAP32[$args >> 2] | 0;
  if (!$1825) {
   $$107 = $$7;
   $$107135 = $$735;
   ___resumeException($$107 | 0);
  }
  $1828 = HEAP32[$241 >> 2] | 0;
  if (($1828 | 0) != ($1825 | 0)) HEAP32[$241 >> 2] = $1828 + (~(($1828 + -4 - $1825 | 0) >>> 2) << 2);
  __ZdlPv($1825);
  $$107 = $$7;
  $$107135 = $$735;
  ___resumeException($$107 | 0);
 } else if ((label | 0) == 1249) {
  $3453 = HEAP32[$elements75 >> 2] | 0;
  $3455 = $3453;
  if (!$3453) {
   $$59 = $$45;
   $$5987 = $$4573;
  } else {
   $3456 = HEAP32[$256 >> 2] | 0;
   if (($3456 | 0) != ($3453 | 0)) HEAP32[$256 >> 2] = $3456 + (~(($3456 + -4 - $3455 | 0) >>> 2) << 2);
   __ZdlPv($3453);
   $$59 = $$45;
   $$5987 = $$4573;
  }
 } else if ((label | 0) == 1562) {
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($fields90, HEAP32[$294 >> 2] | 0);
  $$59 = $$50;
  $$5987 = $$5078;
 } else if ((label | 0) == 2059) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env131, HEAP32[$320 >> 2] | 0);
  $$107 = $$86;
  $$107135 = $$86114;
  ___resumeException($$107 | 0);
 } else if ((label | 0) == 2232) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env139, HEAP32[$333 >> 2] | 0);
  $$107 = $$94;
  $$107135 = $$94122;
  ___resumeException($$107 | 0);
 } else if ((label | 0) == 2290) {
  HEAP32[$ss143 >> 2] = 732;
  HEAP32[$337 >> 2] = 772;
  HEAP32[$338 >> 2] = 752;
  HEAP32[$339 >> 2] = 1064;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($344);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($339);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($337);
  $$107 = $$95;
  $$107135 = $$95123;
  ___resumeException($$107 | 0);
 }
 $4627 = HEAP32[$args68 >> 2] | 0;
 if (!$4627) {
  $$107 = $$59;
  $$107135 = $$5987;
  ___resumeException($$107 | 0);
 }
 $4630 = HEAP32[$252 >> 2] | 0;
 if (($4630 | 0) != ($4627 | 0)) HEAP32[$252 >> 2] = $4630 + (~(($4630 + -16 - $4627 | 0) >>> 4) << 4);
 __ZdlPv($4627);
 $$107 = $$59;
 $$107135 = $$5987;
 ___resumeException($$107 | 0);
}

function __ZN12_GLOBAL__N_16Parser5parseEij($this, $precedence, $obj_level) {
 $this = $this | 0;
 $precedence = $precedence | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$0$i179 = 0, $$0$i211 = 0, $$0$i236 = 0, $$0$i277 = 0, $$0$i282 = 0, $$0$i7$i = 0, $$01$i = 0, $$01$i178 = 0, $$01$i210 = 0, $$01$i235 = 0, $$01$i281 = 0, $$011369 = 0, $$017368 = 0, $$02 = 0, $$02$lpad$bodyZZ2D = 0, $$03 = 0, $$05 = 0, $$07 = 0, $$09 = 0, $$1 = 0, $$10 = 0, $$1027 = 0, $$112 = 0, $$1128380 = 0, $$11381 = 0, $$118 = 0, $$12 = 0, $$1229 = 0, $$13 = 0, $$1330 = 0, $$1414 = 0, $$1431 = 0, $$1532384 = 0, $$15385 = 0, $$1615 = 0, $$1633 = 0, $$17 = 0, $$1734 = 0, $$1816 = 0, $$1835 = 0, $$19 = 0, $$1936 = 0, $$20 = 0, $$2037 = 0, $$21 = 0, $$213 = 0, $$2138 = 0, $$219 = 0, $$22 = 0, $$2239 = 0, $$23 = 0, $$2340 = 0, $$24 = 0, $$2441 = 0, $$25 = 0, $$2542 = 0, $$3 = 0, $$320 = 0, $$421372 = 0, $$4373 = 0, $$5 = 0, $$522 = 0, $$6 = 0, $$623 = 0, $$724376 = 0, $$7377 = 0, $$8 = 0, $$825 = 0, $$9 = 0, $$926 = 0, $$lcssa = 0, $$lcssa576 = 0, $$lcssa602 = 0, $$lcssa603 = 0, $$lcssa604 = 0, $$lcssa605 = 0, $$lcssa606 = 0, $$lcssa608 = 0, $$lcssa609 = 0, $$lcssa614 = 0, $$lcssa618 = 0, $$lcssa619 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1028 = 0, $1032 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1041 = 0, $1045 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1052 = 0, $1054 = 0, $1057 = 0, $106 = 0, $1061 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1067 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1076 = 0, $1080 = 0, $1082 = 0, $1084 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1090 = 0, $1092 = 0, $1093 = 0, $1095 = 0, $1097 = 0, $1099 = 0, $11 = 0, $1102 = 0, $1104 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1111 = 0, $112 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1125 = 0, $1126 = 0, $1128 = 0, $1130 = 0, $1133 = 0, $1135 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $1140 = 0, $1142 = 0, $1144 = 0, $1146 = 0, $1148 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1154 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1160 = 0, $1162 = 0, $1164 = 0, $1167 = 0, $1168 = 0, $117 = 0, $1170 = 0, $1173 = 0, $1174 = 0, $1177 = 0, $1178 = 0, $1184 = 0, $1186 = 0, $1189 = 0, $1198 = 0, $12 = 0, $1201 = 0, $1205 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $1211 = 0, $1213 = 0, $1214 = 0, $1216 = 0, $1219 = 0, $122 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1228 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1233 = 0, $1238 = 0, $1239 = 0, $1243 = 0, $1248 = 0, $1249 = 0, $1253 = 0, $1254 = 0, $1256 = 0, $1258 = 0, $1260 = 0, $1267 = 0, $1268 = 0, $127 = 0, $1274 = 0, $1276 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1284 = 0, $1286 = 0, $1288 = 0, $1289 = 0, $1291 = 0, $1296 = 0, $1297 = 0, $13 = 0, $1301 = 0, $1306 = 0, $1307 = 0, $131 = 0, $1311 = 0, $1312 = 0, $1314 = 0, $1315 = 0, $1317 = 0, $1322 = 0, $1323 = 0, $1327 = 0, $133 = 0, $1332 = 0, $1333 = 0, $1337 = 0, $1338 = 0, $1340 = 0, $1342 = 0, $1344 = 0, $1351 = 0, $1352 = 0, $1358 = 0, $1360 = 0, $1362 = 0, $1363 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1370 = 0, $1372 = 0, $1374 = 0, $1377 = 0, $1381 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1388 = 0, $139 = 0, $1391 = 0, $1395 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1401 = 0, $1403 = 0, $1404 = 0, $1406 = 0, $1409 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1420 = 0, $1421 = 0, $1423 = 0, $1428 = 0, $1429 = 0, $1433 = 0, $1438 = 0, $1439 = 0, $1443 = 0, $1444 = 0, $1446 = 0, $1448 = 0, $1449 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1466 = 0, $1468 = 0, $1469 = 0, $1471 = 0, $1476 = 0, $1477 = 0, $148 = 0, $1481 = 0, $1486 = 0, $1487 = 0, $1491 = 0, $1492 = 0, $1494 = 0, $1495 = 0, $1497 = 0, $1499 = 0, $15 = 0, $150 = 0, $1507 = 0, $1508 = 0, $151 = 0, $1514 = 0, $1516 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1522 = 0, $1526 = 0, $1527 = 0, $1529 = 0, $1530 = 0, $1532 = 0, $1533 = 0, $1535 = 0, $1536 = 0, $1539 = 0, $154 = 0, $1541 = 0, $1548 = 0, $1549 = 0, $1555 = 0, $1557 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1562 = 0, $1563 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1570 = 0, $1572 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1586 = 0, $1588 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1602 = 0, $1605 = 0, $1610 = 0, $1611 = 0, $1615 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1625 = 0, $1626 = 0, $1628 = 0, $1630 = 0, $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1646 = 0, $165 = 0, $1651 = 0, $1652 = 0, $1656 = 0, $1661 = 0, $1662 = 0, $1666 = 0, $1667 = 0, $1669 = 0, $167 = 0, $1671 = 0, $1673 = 0, $1681 = 0, $1682 = 0, $1688 = 0, $169 = 0, $1690 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $17 = 0, $170 = 0, $1700 = 0, $1702 = 0, $1703 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1717 = 0, $1719 = 0, $172 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $174 = 0, $176 = 0, $177 = 0, $179 = 0, $18 = 0, $182 = 0, $187 = 0, $188 = 0, $19 = 0, $190 = 0, $194 = 0, $195 = 0, $197 = 0, $199 = 0, $2 = 0, $20 = 0, $201 = 0, $204 = 0, $206 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $214 = 0, $216 = 0, $218 = 0, $22 = 0, $221 = 0, $223 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $23 = 0, $230 = 0, $232 = 0, $233 = 0, $235 = 0, $238 = 0, $24 = 0, $243 = 0, $244 = 0, $246 = 0, $247 = 0, $248 = 0, $25 = 0, $251 = 0, $252 = 0, $257 = 0, $258 = 0, $26 = 0, $263 = 0, $268 = 0, $269 = 0, $27 = 0, $273 = 0, $274 = 0, $277 = 0, $279 = 0, $28 = 0, $284 = 0, $285 = 0, $29 = 0, $291 = 0, $293 = 0, $295 = 0, $296 = 0, $297 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $303 = 0, $304 = 0, $305 = 0, $31 = 0, $310 = 0, $311 = 0, $316 = 0, $32 = 0, $321 = 0, $322 = 0, $326 = 0, $327 = 0, $33 = 0, $330 = 0, $332 = 0, $34 = 0, $340 = 0, $341 = 0, $347 = 0, $349 = 0, $35 = 0, $351 = 0, $352 = 0, $353 = 0, $355 = 0, $357 = 0, $359 = 0, $36 = 0, $362 = 0, $364 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $371 = 0, $373 = 0, $374 = 0, $376 = 0, $379 = 0, $38 = 0, $384 = 0, $386 = 0, $388 = 0, $39 = 0, $391 = 0, $393 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $4 = 0, $40 = 0, $400 = 0, $402 = 0, $403 = 0, $405 = 0, $408 = 0, $41 = 0, $415 = 0, $417 = 0, $419 = 0, $42 = 0, $423 = 0, $424 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $431 = 0, $432 = 0, $434 = 0, $436 = 0, $437 = 0, $438 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $445 = 0, $449 = 0, $45 = 0, $451 = 0, $453 = 0, $455 = 0, $456 = 0, $457 = 0, $459 = 0, $46 = 0, $461 = 0, $462 = 0, $464 = 0, $466 = 0, $467 = 0, $47 = 0, $470 = 0, $472 = 0, $473 = 0, $475 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $481 = 0, $483 = 0, $485 = 0, $487 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $504 = 0, $505 = 0, $509 = 0, $51 = 0, $514 = 0, $515 = 0, $52 = 0, $520 = 0, $525 = 0, $526 = 0, $53 = 0, $530 = 0, $531 = 0, $533 = 0, $535 = 0, $536 = 0, $54 = 0, $542 = 0, $544 = 0, $545 = 0, $551 = 0, $552 = 0, $553 = 0, $555 = 0, $556 = 0, $56 = 0, $562 = 0, $564 = 0, $565 = 0, $571 = 0, $572 = 0, $573 = 0, $576 = 0, $580 = 0, $582 = 0, $584 = 0, $586 = 0, $587 = 0, $588 = 0, $59 = 0, $590 = 0, $592 = 0, $593 = 0, $595 = 0, $597 = 0, $598 = 0, $6 = 0, $600 = 0, $602 = 0, $604 = 0, $606 = 0, $607 = 0, $608 = 0, $61 = 0, $610 = 0, $612 = 0, $614 = 0, $615 = 0, $616 = 0, $618 = 0, $620 = 0, $623 = 0, $625 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $632 = 0, $634 = 0, $635 = 0, $637 = 0, $640 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $653 = 0, $656 = 0, $66 = 0, $660 = 0, $662 = 0, $663 = 0, $664 = 0, $666 = 0, $668 = 0, $669 = 0, $67 = 0, $671 = 0, $674 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $685 = 0, $689 = 0, $691 = 0, $693 = 0, $695 = 0, $696 = 0, $697 = 0, $699 = 0, $7 = 0, $70 = 0, $701 = 0, $702 = 0, $704 = 0, $706 = 0, $707 = 0, $709 = 0, $711 = 0, $713 = 0, $715 = 0, $716 = 0, $717 = 0, $719 = 0, $72 = 0, $721 = 0, $723 = 0, $725 = 0, $727 = 0, $728 = 0, $730 = 0, $731 = 0, $734 = 0, $735 = 0, $739 = 0, $744 = 0, $745 = 0, $75 = 0, $750 = 0, $755 = 0, $756 = 0, $760 = 0, $761 = 0, $763 = 0, $765 = 0, $766 = 0, $77 = 0, $772 = 0, $774 = 0, $776 = 0, $777 = 0, $779 = 0, $783 = 0, $785 = 0, $786 = 0, $788 = 0, $79 = 0, $793 = 0, $795 = 0, $8 = 0, $80 = 0, $806 = 0, $808 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $816 = 0, $817 = 0, $818 = 0, $82 = 0, $821 = 0, $825 = 0, $827 = 0, $829 = 0, $831 = 0, $832 = 0, $833 = 0, $835 = 0, $837 = 0, $838 = 0, $84 = 0, $840 = 0, $850 = 0, $851 = 0, $852 = 0, $854 = 0, $855 = 0, $857 = 0, $859 = 0, $86 = 0, $861 = 0, $863 = 0, $864 = 0, $865 = 0, $867 = 0, $869 = 0, $87 = 0, $871 = 0, $872 = 0, $874 = 0, $875 = 0, $877 = 0, $879 = 0, $882 = 0, $884 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $891 = 0, $893 = 0, $894 = 0, $896 = 0, $899 = 0, $9 = 0, $904 = 0, $905 = 0, $908 = 0, $909 = 0, $912 = 0, $913 = 0, $918 = 0, $919 = 0, $92 = 0, $924 = 0, $929 = 0, $930 = 0, $934 = 0, $935 = 0, $938 = 0, $940 = 0, $947 = 0, $948 = 0, $954 = 0, $956 = 0, $958 = 0, $959 = 0, $960 = 0, $962 = 0, $965 = 0, $966 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa600 = 0, $__nd$0$i$i$lcssa601 = 0, $__parent$i = 0, $__r$0$i = 0, $args = 0, $args11 = 0, $begin = 0, $binds = 0, $body = 0, $delim = 0, $eh$lpad$body$i$index50Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i176$index62Z2D = 0, $eh$lpad$body$i176$indexZ2D = 0, $eh$lpad$body$i208$index67Z2D = 0, $eh$lpad$body$i208$indexZ2D = 0, $eh$lpad$body$i233$index84Z2D = 0, $eh$lpad$body$i233$indexZ2D = 0, $eh$lpad$body$i279$index94Z2D = 0, $eh$lpad$body$i279$indexZ2D = 0, $eh$lpad$body$index114Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body110$index148Z2D = 0, $eh$lpad$body110$indexZ2D = 0, $eh$lpad$body118$index40Z2D = 0, $eh$lpad$body118$indexZ2D = 0, $eh$lpad$body126$index45Z2D = 0, $eh$lpad$body126$indexZ2D = 0, $eh$lpad$body148$index56Z2D = 0, $eh$lpad$body148$indexZ2D = 0, $eh$lpad$body205$index73Z2D = 0, $eh$lpad$body205$indexZ2D = 0, $eh$lpad$body230$index79Z2D = 0, $eh$lpad$body230$indexZ2D = 0, $eh$lpad$body264$index89Z2D = 0, $eh$lpad$body264$indexZ2D = 0, $eh$lpad$body290$index99Z2D = 0, $eh$lpad$body290$indexZ2D = 0, $eh$lpad$body297$index104Z2D = 0, $eh$lpad$body297$indexZ2D = 0, $eh$lpad$body303$index109Z2D = 0, $eh$lpad$body303$indexZ2D = 0, $eh$lpad$body321$index119Z2D = 0, $eh$lpad$body321$indexZ2D = 0, $eh$lpad$body330$index124Z2D = 0, $eh$lpad$body330$indexZ2D = 0, $eh$lpad$body339$index136Z2D = 0, $eh$lpad$body339$indexZ2D = 0, $eh$lpad$body342$index130Z2D = 0, $eh$lpad$body342$indexZ2D = 0, $eh$lpad$body57$index153Z2D = 0, $eh$lpad$body57$indexZ2D = 0, $eh$lpad$body68$index16Z2D = 0, $eh$lpad$body68$indexZ2D = 0, $eh$lpad$body70$index142Z2D = 0, $eh$lpad$body70$indexZ2D = 0, $eh$lpad$body78$index35Z2D = 0, $eh$lpad$body78$indexZ2D = 0, $end = 0, $end10 = 0, $end9 = 0, $f_mod = 0, $field = 0, $l = 0, $lhs = 0, $next = 0, $obj = 0, $op = 0, $op7 = 0, $params = 0, $params_asts = 0, $ss = 0, $ss1 = 0, $ss2 = 0, $ss4 = 0, $ss6 = 0, $tailstrict = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i100 = 0, $this$idx$val$idx$val$i130 = 0, $this$idx$val$idx$val$i138 = 0, $this$idx$val$idx$val$i194 = 0, $this$idx$val$idx$val$i202 = 0, $this$idx$val$idx$val$i252 = 0, $this$idx$val$idx$val$i310 = 0, $this$idx$val$idx$val$i347 = 0, $this$idx$val$idx$val$i82 = 0, $this$idx44$val$idx$val = 0, $this$idx45$val$idx$val = 0, $this$idx46$val$idx$val = 0, $this$idx47$val$idx$val = 0, $this$idx48$val$idx$val = 0, $this$idx49$val$idx$val = 0, $this$idx50$val$idx$val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2464 | 0;
 $0 = sp + 2452 | 0;
 $1 = sp + 2448 | 0;
 $2 = sp + 2444 | 0;
 $__parent$i = sp + 2440 | 0;
 $3 = sp + 2428 | 0;
 $4 = sp + 2424 | 0;
 $5 = sp + 2412 | 0;
 $6 = sp + 2408 | 0;
 $7 = sp + 2396 | 0;
 $8 = sp + 2384 | 0;
 $9 = sp + 2372 | 0;
 $10 = sp + 2368 | 0;
 $11 = sp + 2364 | 0;
 $12 = sp + 2360 | 0;
 $13 = sp + 2356 | 0;
 $14 = sp + 2352 | 0;
 $15 = sp + 2348 | 0;
 $16 = sp + 2344 | 0;
 $begin = sp + 2300 | 0;
 $17 = sp + 2256 | 0;
 $18 = sp + 2228 | 0;
 $19 = sp + 2184 | 0;
 $20 = sp + 2140 | 0;
 $21 = sp + 2096 | 0;
 $22 = sp + 2052 | 0;
 $23 = sp + 2024 | 0;
 $24 = sp + 1996 | 0;
 $25 = sp + 1952 | 0;
 $next = sp + 1908 | 0;
 $params_asts = sp + 1896 | 0;
 $26 = sp + 1852 | 0;
 $27 = sp + 1840 | 0;
 $body = sp + 1836 | 0;
 $params = sp + 1824 | 0;
 $ss = sp + 1680 | 0;
 $28 = sp + 1668 | 0;
 $29 = sp + 1640 | 0;
 $ss1 = sp + 1496 | 0;
 $30 = sp + 1484 | 0;
 $31 = sp + 1440 | 0;
 $binds = sp + 1428 | 0;
 $delim = sp + 1384 | 0;
 $ss2 = sp + 1240 | 0;
 $32 = sp + 1228 | 0;
 $33 = sp + 1200 | 0;
 $ss4 = sp + 1056 | 0;
 $34 = sp + 1040 | 0;
 $op = sp + 996 | 0;
 $35 = sp + 968 | 0;
 $lhs = sp + 964 | 0;
 $36 = sp + 920 | 0;
 $37 = sp + 876 | 0;
 $38 = sp + 832 | 0;
 $ss6 = sp + 688 | 0;
 $39 = sp + 644 | 0;
 $40 = sp + 600 | 0;
 $41 = sp + 588 | 0;
 $op7 = sp + 544 | 0;
 $end = sp + 500 | 0;
 $42 = sp + 472 | 0;
 $field = sp + 428 | 0;
 $43 = sp + 400 | 0;
 $44 = sp + 372 | 0;
 $args = sp + 360 | 0;
 $end9 = sp + 316 | 0;
 $45 = sp + 304 | 0;
 $tailstrict = sp + 2457 | 0;
 $46 = sp + 260 | 0;
 $47 = sp + 216 | 0;
 $48 = sp + 188 | 0;
 $obj = sp + 184 | 0;
 $end10 = sp + 140 | 0;
 $49 = sp + 112 | 0;
 $l = sp + 84 | 0;
 $50 = sp + 72 | 0;
 $f_mod = sp + 68 | 0;
 $args11 = sp + 56 | 0;
 $51 = sp + 28 | 0;
 $52 = sp + 2456 | 0;
 $53 = sp;
 $this$idx50$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
 $54 = $this$idx50$val$idx$val + 8 | 0;
 HEAP32[$begin >> 2] = HEAP32[$54 >> 2];
 $56 = $begin + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($56, $this$idx50$val$idx$val + 12 | 0);
 HEAP32[$begin >> 2] = HEAP32[$54 >> 2];
 $59 = $begin + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $59 | 0, $this$idx50$val$idx$val + 24 | 0);
 $61 = __THREW__;
 __THREW__ = 0;
 if ($61 & 1) {
  $63 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
  ___resumeException($63 | 0);
 }
 $65 = $begin + 28 | 0;
 $66 = $this$idx50$val$idx$val + 36 | 0;
 HEAP32[$65 + 0 >> 2] = HEAP32[$66 + 0 >> 2];
 HEAP32[$65 + 4 >> 2] = HEAP32[$66 + 4 >> 2];
 HEAP32[$65 + 8 >> 2] = HEAP32[$66 + 8 >> 2];
 HEAP32[$65 + 12 >> 2] = HEAP32[$66 + 12 >> 2];
 $67 = HEAP32[$54 >> 2] | 0;
 HEAP32[$begin >> 2] = $67;
 L4 : do switch ($67 | 0) {
 case 13:
  {
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_SL_SL_($0, 1224, $56, HEAP32[307] | 0, 1228 | 0);
   $783 = HEAP32[$0 >> 2] | 0;
   do if (($783 | 0) != (1228 | 0)) {
    $785 = $783 + 16 | 0;
    $786 = HEAP8[$56 >> 0] | 0;
    $788 = ($786 & 1) == 0;
    if ($788) $808 = ($786 & 255) >>> 1; else $808 = HEAP32[$begin + 8 >> 2] | 0;
    $793 = HEAP8[$785 >> 0] | 0;
    $795 = ($793 & 1) == 0;
    if ($795) $806 = ($793 & 255) >>> 1; else $806 = HEAP32[$783 + 20 >> 2] | 0;
    if ($788) $810 = $56 + 1 | 0; else $810 = HEAP32[$begin + 12 >> 2] | 0;
    if ($795) $811 = $785 + 1 | 0; else $811 = HEAP32[$783 + 24 >> 2] | 0;
    $812 = _memcmp($810, $811, $806 >>> 0 < $808 >>> 0 ? $806 : $808) | 0;
    if (!$812) {
     if ($808 >>> 0 < $806 >>> 0) break;
    } else if (($812 | 0) < 0) break;
    $874 = HEAP32[$783 + 28 >> 2] | 0;
    if (!$precedence) {
     label = 256;
     break L4;
    } else if (($precedence | 0) != 4) {
     label = 257;
     break L4;
    }
    $this$idx$val$idx$val$i252 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $875 = $this$idx$val$idx$val$i252 + 8 | 0;
    HEAP32[$op >> 2] = HEAP32[$875 >> 2];
    $877 = $op + 4 | 0;
    __THREW__ = 0;
    invoke_vii(40, $877 | 0, $this$idx$val$idx$val$i252 + 12 | 0);
    $879 = __THREW__;
    __THREW__ = 0;
    if ($879 & 1) {
     label = 19;
     break L4;
    }
    HEAP32[$op >> 2] = HEAP32[$875 >> 2];
    $882 = $op + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $882 | 0, $this$idx$val$idx$val$i252 + 24 | 0);
    $884 = __THREW__;
    __THREW__ = 0;
    if ($884 & 1) {
     $886 = ___cxa_find_matching_catch() | 0;
     $887 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($877);
     $eh$lpad$body68$index16Z2D = $887;
     $eh$lpad$body68$indexZ2D = $886;
     break L4;
    }
    $888 = $op + 28 | 0;
    $889 = $this$idx$val$idx$val$i252 + 36 | 0;
    HEAP32[$888 + 0 >> 2] = HEAP32[$889 + 0 >> 2];
    HEAP32[$888 + 4 >> 2] = HEAP32[$889 + 4 >> 2];
    HEAP32[$888 + 8 >> 2] = HEAP32[$889 + 8 >> 2];
    HEAP32[$888 + 12 >> 2] = HEAP32[$889 + 12 >> 2];
    HEAP32[$op >> 2] = HEAP32[$875 >> 2];
    $891 = HEAP32[$this >> 2] | 0;
    $893 = HEAP32[$891 + 4 >> 2] | 0;
    $894 = $893 + 4 | 0;
    $896 = HEAP32[$893 >> 2] | 0;
    HEAP32[$896 + 4 >> 2] = HEAP32[$894 >> 2];
    HEAP32[HEAP32[$894 >> 2] >> 2] = $896;
    $899 = $891 + 8 | 0;
    HEAP32[$899 >> 2] = (HEAP32[$899 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($893 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($893 + 12 | 0);
    __ZdlPv($893);
    __THREW__ = 0;
    $904 = invoke_iiii(29, $this | 0, 4, $obj_level | 0) | 0;
    $905 = __THREW__;
    __THREW__ = 0;
    if ($905 & 1) label = 251; else {
     $908 = HEAP32[$this + 4 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $35 | 0, $882 | 0);
     $909 = __THREW__;
     __THREW__ = 0;
     if ($909 & 1) label = 251; else {
      $912 = $35 + 12 | 0;
      $913 = $888;
      $918 = HEAP32[$913 + 4 >> 2] | 0;
      $919 = $912;
      HEAP32[$919 >> 2] = HEAP32[$913 >> 2];
      HEAP32[$919 + 4 >> 2] = $918;
      $924 = $904 + 24 | 0;
      $929 = HEAP32[$924 + 4 >> 2] | 0;
      $930 = $35 + 20 | 0;
      HEAP32[$930 >> 2] = HEAP32[$924 >> 2];
      HEAP32[$930 + 4 >> 2] = $929;
      __THREW__ = 0;
      $934 = invoke_ii(67, 56) | 0;
      $935 = __THREW__;
      __THREW__ = 0;
      do if ($935 & 1) label = 252; else {
       HEAP32[$934 >> 2] = 35936;
       __THREW__ = 0;
       invoke_vii(40, $934 + 4 | 0, $35 | 0);
       $938 = __THREW__;
       __THREW__ = 0;
       if ($938 & 1) {
        $958 = ___cxa_find_matching_catch() | 0;
        $959 = tempRet0;
        __ZdlPv($934);
        $eh$lpad$body264$index89Z2D = $959;
        $eh$lpad$body264$indexZ2D = $958;
        break;
       }
       $940 = $934 + 16 | 0;
       HEAP32[$940 + 0 >> 2] = HEAP32[$912 + 0 >> 2];
       HEAP32[$940 + 4 >> 2] = HEAP32[$912 + 4 >> 2];
       HEAP32[$940 + 8 >> 2] = HEAP32[$912 + 8 >> 2];
       HEAP32[$940 + 12 >> 2] = HEAP32[$912 + 12 >> 2];
       HEAP32[$934 + 32 >> 2] = 19;
       HEAP32[$934 + 36 >> 2] = 0;
       HEAP32[$934 + 40 >> 2] = 0;
       HEAP32[$934 + 44 >> 2] = 0;
       HEAP32[$934 >> 2] = 37312;
       HEAP32[$934 + 48 >> 2] = $874;
       HEAP32[$934 + 52 >> 2] = $904;
       HEAP32[$4 >> 2] = $934;
       $947 = $908 + 16 | 0;
       $948 = HEAP32[$947 >> 2] | 0;
       if ($948 >>> 0 < (HEAP32[$908 + 20 >> 2] | 0) >>> 0) {
        if (!$948) $954 = 0; else {
         HEAP32[$948 >> 2] = $934;
         $954 = HEAP32[$947 >> 2] | 0;
        }
        HEAP32[$947 >> 2] = $954 + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(51, $908 + 12 | 0, $4 | 0);
        $956 = __THREW__;
        __THREW__ = 0;
        if ($956 & 1) {
         label = 252;
         break;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($882);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($877);
       $$0 = $934;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
       STACKTOP = sp;
       return $$0 | 0;
      } while (0);
      if ((label | 0) == 252) {
       $962 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body264$index89Z2D = tempRet0;
       $eh$lpad$body264$indexZ2D = $962;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
      $$13 = $eh$lpad$body264$indexZ2D;
      $$1330 = $eh$lpad$body264$index89Z2D;
     }
    }
    if ((label | 0) == 251) {
     $960 = ___cxa_find_matching_catch() | 0;
     $$13 = $960;
     $$1330 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($882);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($877);
    $$25 = $$13;
    $$2542 = $$1330;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
    ___resumeException($$25 | 0);
   } while (0);
   $816 = $ss4 + 64 | 0;
   $817 = $ss4 + 8 | 0;
   HEAP32[$817 >> 2] = 752;
   $818 = $ss4 + 12 | 0;
   HEAP32[$ss4 >> 2] = 900;
   HEAP32[$816 >> 2] = 920;
   HEAP32[$ss4 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss4 + 64 | 0, $818 | 0);
   $821 = __THREW__;
   __THREW__ = 0;
   if ($821 & 1) {
    $833 = ___cxa_find_matching_catch() | 0;
    $$0$i236 = tempRet0;
    $$01$i235 = $833;
   } else {
    HEAP32[$ss4 + 136 >> 2] = 0;
    HEAP32[$ss4 + 140 >> 2] = -1;
    HEAP32[$ss4 >> 2] = 732;
    HEAP32[$816 >> 2] = 772;
    HEAP32[$817 >> 2] = 752;
    __THREW__ = 0;
    invoke_vi(177, $818 | 0);
    $825 = __THREW__;
    __THREW__ = 0;
    do if ($825 & 1) {
     $835 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i233$index84Z2D = tempRet0;
     $eh$lpad$body$i233$indexZ2D = $835;
    } else {
     HEAP32[$818 >> 2] = 1064;
     $827 = $ss4 + 44 | 0;
     HEAP32[$827 + 0 >> 2] = 0;
     HEAP32[$827 + 4 >> 2] = 0;
     HEAP32[$827 + 8 >> 2] = 0;
     HEAP32[$827 + 12 >> 2] = 0;
     HEAP32[$ss4 + 60 >> 2] = 24;
     HEAP32[$5 + 0 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $818 | 0, $5 | 0);
     $829 = __THREW__;
     __THREW__ = 0;
     if ($829 & 1) {
      $831 = ___cxa_find_matching_catch() | 0;
      $832 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($827);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($818);
      $eh$lpad$body$i233$index84Z2D = $832;
      $eh$lpad$body$i233$indexZ2D = $831;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     __THREW__ = 0;
     $837 = invoke_iiii(25, $817 | 0, 37216, 22) | 0;
     $838 = __THREW__;
     __THREW__ = 0;
     L64 : do if ($838 & 1) label = 231; else {
      $840 = HEAP8[$56 >> 0] | 0;
      if (!($840 & 1)) {
       $850 = $56 + 1 | 0;
       $851 = ($840 & 255) >>> 1;
      } else {
       $850 = HEAP32[$begin + 12 >> 2] | 0;
       $851 = HEAP32[$begin + 8 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $837 | 0, $850 | 0, $851 | 0) | 0;
      $852 = __THREW__;
      __THREW__ = 0;
      if ($852 & 1) label = 231; else {
       $854 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_vii(43, $34 | 0, $818 | 0);
       $855 = __THREW__;
       __THREW__ = 0;
       do if ($855 & 1) {
        $869 = ___cxa_find_matching_catch() | 0;
        $$1128380 = tempRet0;
        $$11381 = $869;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $854 | 0, $59 | 0);
        $857 = __THREW__;
        __THREW__ = 0;
        if ($857 & 1) $$03 = 1; else {
         $859 = $854 + 12 | 0;
         HEAP32[$859 + 0 >> 2] = HEAP32[$65 + 0 >> 2];
         HEAP32[$859 + 4 >> 2] = HEAP32[$65 + 4 >> 2];
         HEAP32[$859 + 8 >> 2] = HEAP32[$65 + 8 >> 2];
         HEAP32[$859 + 12 >> 2] = HEAP32[$65 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $854 + 28 | 0, $34 | 0);
         $861 = __THREW__;
         __THREW__ = 0;
         if ($861 & 1) {
          $863 = ___cxa_find_matching_catch() | 0;
          $864 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($854);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
          $$1128380 = $864;
          $$11381 = $863;
          break;
         }
         __THREW__ = 0;
         invoke_viii(4, $854 | 0, 48, 176);
         $865 = __THREW__;
         __THREW__ = 0;
         if ($865 & 1) $$03 = 0; else {}
        }
        $871 = ___cxa_find_matching_catch() | 0;
        $872 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
        if ($$03) {
         $$1128380 = $872;
         $$11381 = $871;
        } else {
         $$12 = $871;
         $$1229 = $872;
         break L64;
        }
       } while (0);
       ___cxa_free_exception($854 | 0);
       $$12 = $$11381;
       $$1229 = $$1128380;
      }
     } while (0);
     if ((label | 0) == 231) {
      $867 = ___cxa_find_matching_catch() | 0;
      $$12 = $867;
      $$1229 = tempRet0;
     }
     HEAP32[$ss4 >> 2] = 732;
     HEAP32[$816 >> 2] = 772;
     HEAP32[$817 >> 2] = 752;
     HEAP32[$818 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($827);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($818);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($816);
     $$25 = $$12;
     $$2542 = $$1229;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
     ___resumeException($$25 | 0);
    } while (0);
    $$0$i236 = $eh$lpad$body$i233$index84Z2D;
    $$01$i235 = $eh$lpad$body$i233$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($816);
   $eh$lpad$body68$index16Z2D = $$0$i236;
   $eh$lpad$body68$indexZ2D = $$01$i235;
   break;
  }
 case 24:
  {
   $this$idx$val$idx$val$i194 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $616 = $this$idx$val$idx$val$i194 + 8 | 0;
   HEAP32[$31 >> 2] = HEAP32[$616 >> 2];
   $618 = $31 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $618 | 0, $this$idx$val$idx$val$i194 + 12 | 0);
   $620 = __THREW__;
   __THREW__ = 0;
   if ($620 & 1) label = 19; else {
    HEAP32[$31 >> 2] = HEAP32[$616 >> 2];
    $623 = $31 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $623 | 0, $this$idx$val$idx$val$i194 + 24 | 0);
    $625 = __THREW__;
    __THREW__ = 0;
    if ($625 & 1) {
     $627 = ___cxa_find_matching_catch() | 0;
     $628 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($618);
     $eh$lpad$body68$index16Z2D = $628;
     $eh$lpad$body68$indexZ2D = $627;
     break L4;
    }
    $629 = $31 + 28 | 0;
    $630 = $this$idx$val$idx$val$i194 + 36 | 0;
    HEAP32[$629 + 0 >> 2] = HEAP32[$630 + 0 >> 2];
    HEAP32[$629 + 4 >> 2] = HEAP32[$630 + 4 >> 2];
    HEAP32[$629 + 8 >> 2] = HEAP32[$630 + 8 >> 2];
    HEAP32[$629 + 12 >> 2] = HEAP32[$630 + 12 >> 2];
    HEAP32[$31 >> 2] = HEAP32[$616 >> 2];
    $632 = HEAP32[$this >> 2] | 0;
    $634 = HEAP32[$632 + 4 >> 2] | 0;
    $635 = $634 + 4 | 0;
    $637 = HEAP32[$634 >> 2] | 0;
    HEAP32[$637 + 4 >> 2] = HEAP32[$635 >> 2];
    HEAP32[HEAP32[$635 >> 2] >> 2] = $637;
    $640 = $632 + 8 | 0;
    HEAP32[$640 >> 2] = (HEAP32[$640 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($634 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($634 + 12 | 0);
    __ZdlPv($634);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($623);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($618);
    HEAP32[$binds + 4 >> 2] = 0;
    HEAP32[$binds + 8 >> 2] = 0;
    $647 = $binds + 4 | 0;
    HEAP32[$binds >> 2] = $647;
    $648 = $delim + 4 | 0;
    $649 = $delim + 16 | 0;
    $650 = $delim + 28 | 0;
    while (1) {
     __THREW__ = 0;
     invoke_viii(6, $this | 0, $binds | 0, $obj_level | 0);
     $651 = __THREW__;
     __THREW__ = 0;
     if ($651 & 1) {
      label = 172;
      break;
     }
     $this$idx$val$idx$val$i202 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $653 = $this$idx$val$idx$val$i202 + 8 | 0;
     HEAP32[$delim >> 2] = HEAP32[$653 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $648 | 0, $this$idx$val$idx$val$i202 + 12 | 0);
     $656 = __THREW__;
     __THREW__ = 0;
     if ($656 & 1) {
      label = 172;
      break;
     }
     HEAP32[$delim >> 2] = HEAP32[$653 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $649 | 0, $this$idx$val$idx$val$i202 + 24 | 0);
     $660 = __THREW__;
     __THREW__ = 0;
     if ($660 & 1) {
      label = 156;
      break;
     }
     $664 = $this$idx$val$idx$val$i202 + 36 | 0;
     HEAP32[$650 + 0 >> 2] = HEAP32[$664 + 0 >> 2];
     HEAP32[$650 + 4 >> 2] = HEAP32[$664 + 4 >> 2];
     HEAP32[$650 + 8 >> 2] = HEAP32[$664 + 8 >> 2];
     HEAP32[$650 + 12 >> 2] = HEAP32[$664 + 12 >> 2];
     HEAP32[$delim >> 2] = HEAP32[$653 >> 2];
     $666 = HEAP32[$this >> 2] | 0;
     $668 = HEAP32[$666 + 4 >> 2] | 0;
     $669 = $668 + 4 | 0;
     $671 = HEAP32[$668 >> 2] | 0;
     HEAP32[$671 + 4 >> 2] = HEAP32[$669 >> 2];
     HEAP32[HEAP32[$669 >> 2] >> 2] = $671;
     $674 = $666 + 8 | 0;
     HEAP32[$674 >> 2] = (HEAP32[$674 >> 2] | 0) + -1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($668 + 24 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($668 + 12 | 0);
     __ZdlPv($668);
     $679 = HEAP32[$delim >> 2] | 0;
     if (!(($679 | 0) == 5 | ($679 | 0) == 10)) {
      label = 158;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($649);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($648);
     if (($679 | 0) == 10) {
      label = 182;
      break;
     }
    }
    do if ((label | 0) == 156) {
     $662 = ___cxa_find_matching_catch() | 0;
     $663 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($648);
     $eh$lpad$body205$index73Z2D = $663;
     $eh$lpad$body205$indexZ2D = $662;
     label = 174;
    } else if ((label | 0) == 158) {
     $680 = $ss2 + 64 | 0;
     $681 = $ss2 + 8 | 0;
     HEAP32[$681 >> 2] = 752;
     $682 = $ss2 + 12 | 0;
     HEAP32[$ss2 >> 2] = 900;
     HEAP32[$680 >> 2] = 920;
     HEAP32[$ss2 + 4 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(41, $ss2 + 64 | 0, $682 | 0);
     $685 = __THREW__;
     __THREW__ = 0;
     L103 : do if ($685 & 1) {
      $697 = ___cxa_find_matching_catch() | 0;
      $$0$i211 = tempRet0;
      $$01$i210 = $697;
      label = 175;
     } else {
      HEAP32[$ss2 + 136 >> 2] = 0;
      HEAP32[$ss2 + 140 >> 2] = -1;
      HEAP32[$ss2 >> 2] = 732;
      HEAP32[$680 >> 2] = 772;
      HEAP32[$681 >> 2] = 752;
      __THREW__ = 0;
      invoke_vi(177, $682 | 0);
      $689 = __THREW__;
      __THREW__ = 0;
      do if ($689 & 1) {
       $699 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body$i208$index67Z2D = tempRet0;
       $eh$lpad$body$i208$indexZ2D = $699;
      } else {
       HEAP32[$682 >> 2] = 1064;
       $691 = $ss2 + 44 | 0;
       HEAP32[$691 + 0 >> 2] = 0;
       HEAP32[$691 + 4 >> 2] = 0;
       HEAP32[$691 + 8 >> 2] = 0;
       HEAP32[$691 + 12 >> 2] = 0;
       HEAP32[$ss2 + 60 >> 2] = 24;
       HEAP32[$7 + 0 >> 2] = 0;
       HEAP32[$7 + 4 >> 2] = 0;
       HEAP32[$7 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(42, $682 | 0, $7 | 0);
       $693 = __THREW__;
       __THREW__ = 0;
       if ($693 & 1) {
        $695 = ___cxa_find_matching_catch() | 0;
        $696 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($691);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($682);
        $eh$lpad$body$i208$index67Z2D = $696;
        $eh$lpad$body$i208$indexZ2D = $695;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
       __THREW__ = 0;
       $701 = invoke_iiii(25, $681 | 0, 37184, 24) | 0;
       $702 = __THREW__;
       __THREW__ = 0;
       L110 : do if ($702 & 1) label = 176; else {
        __THREW__ = 0;
        invoke_vii(52, $701 | 0, $delim | 0);
        $704 = __THREW__;
        __THREW__ = 0;
        if ($704 & 1) label = 176; else {
         $706 = ___cxa_allocate_exception(40) | 0;
         __THREW__ = 0;
         invoke_vii(43, $32 | 0, $682 | 0);
         $707 = __THREW__;
         __THREW__ = 0;
         do if ($707 & 1) {
          $725 = ___cxa_find_matching_catch() | 0;
          $$724376 = tempRet0;
          $$7377 = $725;
         } else {
          __THREW__ = 0;
          invoke_vii(40, $706 | 0, $649 | 0);
          $709 = __THREW__;
          __THREW__ = 0;
          if ($709 & 1) $$05 = 1; else {
           $711 = $706 + 12 | 0;
           HEAP32[$711 + 0 >> 2] = HEAP32[$650 + 0 >> 2];
           HEAP32[$711 + 4 >> 2] = HEAP32[$650 + 4 >> 2];
           HEAP32[$711 + 8 >> 2] = HEAP32[$650 + 8 >> 2];
           HEAP32[$711 + 12 >> 2] = HEAP32[$650 + 12 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $706 + 28 | 0, $32 | 0);
           $713 = __THREW__;
           __THREW__ = 0;
           if ($713 & 1) {
            $715 = ___cxa_find_matching_catch() | 0;
            $716 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($706);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
            $$724376 = $716;
            $$7377 = $715;
            break;
           }
           __THREW__ = 0;
           invoke_viii(4, $706 | 0, 48, 176);
           $717 = __THREW__;
           __THREW__ = 0;
           if ($717 & 1) $$05 = 0; else {}
          }
          $727 = ___cxa_find_matching_catch() | 0;
          $728 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
          if ($$05) {
           $$724376 = $728;
           $$7377 = $727;
          } else {
           $$8 = $727;
           $$825 = $728;
           break L110;
          }
         } while (0);
         ___cxa_free_exception($706 | 0);
         $$8 = $$7377;
         $$825 = $$724376;
        }
       } while (0);
       if ((label | 0) == 176) {
        $723 = ___cxa_find_matching_catch() | 0;
        $$8 = $723;
        $$825 = tempRet0;
       }
       HEAP32[$ss2 >> 2] = 732;
       HEAP32[$680 >> 2] = 772;
       HEAP32[$681 >> 2] = 752;
       HEAP32[$682 >> 2] = 1064;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($691);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($682);
       __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($680);
       $$9 = $$8;
       $$926 = $$825;
       break L103;
      } while (0);
      $$0$i211 = $eh$lpad$body$i208$index67Z2D;
      $$01$i210 = $eh$lpad$body$i208$indexZ2D;
      label = 175;
     } while (0);
     if ((label | 0) == 175) {
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($680);
      $$9 = $$01$i210;
      $$926 = $$0$i211;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($649);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($648);
     $$10 = $$9;
     $$1027 = $$926;
    } else if ((label | 0) == 172) {
     $719 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body205$index73Z2D = tempRet0;
     $eh$lpad$body205$indexZ2D = $719;
     label = 174;
    } else if ((label | 0) == 182) {
     __THREW__ = 0;
     $730 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
     $731 = __THREW__;
     __THREW__ = 0;
     if (!($731 & 1)) {
      $734 = HEAP32[$this + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $33 | 0, $59 | 0);
      $735 = __THREW__;
      __THREW__ = 0;
      if (!($735 & 1)) {
       $739 = $65;
       $744 = HEAP32[$739 + 4 >> 2] | 0;
       $745 = $33 + 12 | 0;
       HEAP32[$745 >> 2] = HEAP32[$739 >> 2];
       HEAP32[$745 + 4 >> 2] = $744;
       $750 = $730 + 24 | 0;
       $755 = HEAP32[$750 + 4 >> 2] | 0;
       $756 = $33 + 20 | 0;
       HEAP32[$756 >> 2] = HEAP32[$750 >> 2];
       HEAP32[$756 + 4 >> 2] = $755;
       __THREW__ = 0;
       $760 = invoke_ii(67, 64) | 0;
       $761 = __THREW__;
       __THREW__ = 0;
       do if ($761 & 1) label = 194; else {
        __THREW__ = 0;
        invoke_viiii(12, $760 | 0, $33 | 0, $binds | 0, $730 | 0);
        $763 = __THREW__;
        __THREW__ = 0;
        if ($763 & 1) {
         $776 = ___cxa_find_matching_catch() | 0;
         $777 = tempRet0;
         __ZdlPv($760);
         $eh$lpad$body230$index79Z2D = $777;
         $eh$lpad$body230$indexZ2D = $776;
         break;
        }
        HEAP32[$6 >> 2] = $760;
        $765 = $734 + 16 | 0;
        $766 = HEAP32[$765 >> 2] | 0;
        if ($766 >>> 0 < (HEAP32[$734 + 20 >> 2] | 0) >>> 0) {
         if (!$766) $772 = 0; else {
          HEAP32[$766 >> 2] = $760;
          $772 = HEAP32[$765 >> 2] | 0;
         }
         HEAP32[$765 >> 2] = $772 + 4;
        } else {
         __THREW__ = 0;
         invoke_vii(51, $734 + 12 | 0, $6 | 0);
         $774 = __THREW__;
         __THREW__ = 0;
         if ($774 & 1) {
          label = 194;
          break;
         }
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($binds, HEAP32[$647 >> 2] | 0);
        $$0 = $760;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
        STACKTOP = sp;
        return $$0 | 0;
       } while (0);
       if ((label | 0) == 194) {
        $779 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body230$index79Z2D = tempRet0;
        $eh$lpad$body230$indexZ2D = $779;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
       $$10 = $eh$lpad$body230$indexZ2D;
       $$1027 = $eh$lpad$body230$index79Z2D;
       break;
      }
     }
     $721 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body205$index73Z2D = tempRet0;
     $eh$lpad$body205$indexZ2D = $721;
     label = 174;
    } while (0);
    if ((label | 0) == 174) {
     $$10 = $eh$lpad$body205$indexZ2D;
     $$1027 = $eh$lpad$body205$index73Z2D;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($binds, HEAP32[$647 >> 2] | 0);
    $$25 = $$10;
    $$2542 = $$1027;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
    ___resumeException($$25 | 0);
   }
   break;
  }
 case 16:
  {
   $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $68 = $this$idx$val$idx$val$i + 8 | 0;
   HEAP32[$17 >> 2] = HEAP32[$68 >> 2];
   $70 = $17 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $70 | 0, $this$idx$val$idx$val$i + 12 | 0);
   $72 = __THREW__;
   __THREW__ = 0;
   if ($72 & 1) label = 19; else {
    HEAP32[$17 >> 2] = HEAP32[$68 >> 2];
    $75 = $17 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $75 | 0, $this$idx$val$idx$val$i + 24 | 0);
    $77 = __THREW__;
    __THREW__ = 0;
    if ($77 & 1) {
     $79 = ___cxa_find_matching_catch() | 0;
     $80 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     $eh$lpad$body68$index16Z2D = $80;
     $eh$lpad$body68$indexZ2D = $79;
     break L4;
    }
    $81 = $17 + 28 | 0;
    $82 = $this$idx$val$idx$val$i + 36 | 0;
    HEAP32[$81 + 0 >> 2] = HEAP32[$82 + 0 >> 2];
    HEAP32[$81 + 4 >> 2] = HEAP32[$82 + 4 >> 2];
    HEAP32[$81 + 8 >> 2] = HEAP32[$82 + 8 >> 2];
    HEAP32[$81 + 12 >> 2] = HEAP32[$82 + 12 >> 2];
    HEAP32[$17 >> 2] = HEAP32[$68 >> 2];
    $84 = HEAP32[$this >> 2] | 0;
    $86 = HEAP32[$84 + 4 >> 2] | 0;
    $87 = $86 + 4 | 0;
    $89 = HEAP32[$86 >> 2] | 0;
    HEAP32[$89 + 4 >> 2] = HEAP32[$87 >> 2];
    HEAP32[HEAP32[$87 >> 2] >> 2] = $89;
    $92 = $84 + 8 | 0;
    HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($86 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($86 + 12 | 0);
    __ZdlPv($86);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($75);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __THREW__ = 0;
    $97 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
    $98 = __THREW__;
    __THREW__ = 0;
    if ($98 & 1) label = 19; else {
     $101 = HEAP32[$this + 4 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $18 | 0, $59 | 0);
     $102 = __THREW__;
     __THREW__ = 0;
     if ($102 & 1) label = 19; else {
      $105 = $18 + 12 | 0;
      $106 = $65;
      $111 = HEAP32[$106 + 4 >> 2] | 0;
      $112 = $105;
      HEAP32[$112 >> 2] = HEAP32[$106 >> 2];
      HEAP32[$112 + 4 >> 2] = $111;
      $117 = $97 + 24 | 0;
      $122 = HEAP32[$117 + 4 >> 2] | 0;
      $123 = $18 + 20 | 0;
      HEAP32[$123 >> 2] = HEAP32[$117 >> 2];
      HEAP32[$123 + 4 >> 2] = $122;
      __THREW__ = 0;
      $127 = invoke_ii(67, 52) | 0;
      $128 = __THREW__;
      __THREW__ = 0;
      do if ($128 & 1) label = 21; else {
       HEAP32[$127 >> 2] = 35936;
       __THREW__ = 0;
       invoke_vii(40, $127 + 4 | 0, $18 | 0);
       $131 = __THREW__;
       __THREW__ = 0;
       if ($131 & 1) {
        $150 = ___cxa_find_matching_catch() | 0;
        $151 = tempRet0;
        __ZdlPv($127);
        $eh$lpad$body78$index35Z2D = $151;
        $eh$lpad$body78$indexZ2D = $150;
        break;
       }
       $133 = $127 + 16 | 0;
       HEAP32[$133 + 0 >> 2] = HEAP32[$105 + 0 >> 2];
       HEAP32[$133 + 4 >> 2] = HEAP32[$105 + 4 >> 2];
       HEAP32[$133 + 8 >> 2] = HEAP32[$105 + 8 >> 2];
       HEAP32[$133 + 12 >> 2] = HEAP32[$105 + 12 >> 2];
       HEAP32[$127 + 32 >> 2] = 5;
       HEAP32[$127 + 36 >> 2] = 0;
       HEAP32[$127 + 40 >> 2] = 0;
       HEAP32[$127 + 44 >> 2] = 0;
       HEAP32[$127 >> 2] = 38344;
       HEAP32[$127 + 48 >> 2] = $97;
       HEAP32[$14 >> 2] = $127;
       $139 = $101 + 16 | 0;
       $140 = HEAP32[$139 >> 2] | 0;
       if ($140 >>> 0 < (HEAP32[$101 + 20 >> 2] | 0) >>> 0) {
        if (!$140) $146 = 0; else {
         HEAP32[$140 >> 2] = $127;
         $146 = HEAP32[$139 >> 2] | 0;
        }
        HEAP32[$139 >> 2] = $146 + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(51, $101 + 12 | 0, $14 | 0);
        $148 = __THREW__;
        __THREW__ = 0;
        if ($148 & 1) {
         label = 21;
         break;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
       $$0 = $127;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
       STACKTOP = sp;
       return $$0 | 0;
      } while (0);
      if ((label | 0) == 21) {
       $156 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body78$index35Z2D = tempRet0;
       $eh$lpad$body78$indexZ2D = $156;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
      $$25 = $eh$lpad$body78$indexZ2D;
      $$2542 = $eh$lpad$body78$index35Z2D;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
      ___resumeException($$25 | 0);
     }
    }
   }
   break;
  }
 case 19:
  {
   $this$idx$val$idx$val$i130 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $355 = $this$idx$val$idx$val$i130 + 8 | 0;
   HEAP32[$25 >> 2] = HEAP32[$355 >> 2];
   $357 = $25 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $357 | 0, $this$idx$val$idx$val$i130 + 12 | 0);
   $359 = __THREW__;
   __THREW__ = 0;
   if ($359 & 1) label = 19; else {
    HEAP32[$25 >> 2] = HEAP32[$355 >> 2];
    $362 = $25 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $362 | 0, $this$idx$val$idx$val$i130 + 24 | 0);
    $364 = __THREW__;
    __THREW__ = 0;
    if ($364 & 1) {
     $366 = ___cxa_find_matching_catch() | 0;
     $367 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($357);
     $eh$lpad$body68$index16Z2D = $367;
     $eh$lpad$body68$indexZ2D = $366;
     break L4;
    }
    $368 = $25 + 28 | 0;
    $369 = $this$idx$val$idx$val$i130 + 36 | 0;
    HEAP32[$368 + 0 >> 2] = HEAP32[$369 + 0 >> 2];
    HEAP32[$368 + 4 >> 2] = HEAP32[$369 + 4 >> 2];
    HEAP32[$368 + 8 >> 2] = HEAP32[$369 + 8 >> 2];
    HEAP32[$368 + 12 >> 2] = HEAP32[$369 + 12 >> 2];
    HEAP32[$25 >> 2] = HEAP32[$355 >> 2];
    $371 = HEAP32[$this >> 2] | 0;
    $373 = HEAP32[$371 + 4 >> 2] | 0;
    $374 = $373 + 4 | 0;
    $376 = HEAP32[$373 >> 2] | 0;
    HEAP32[$376 + 4 >> 2] = HEAP32[$374 >> 2];
    HEAP32[HEAP32[$374 >> 2] >> 2] = $376;
    $379 = $371 + 8 | 0;
    HEAP32[$379 >> 2] = (HEAP32[$379 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($373 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($373 + 12 | 0);
    __ZdlPv($373);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($362);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($357);
    $this$idx$val$idx$val$i138 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $384 = $this$idx$val$idx$val$i138 + 8 | 0;
    HEAP32[$next >> 2] = HEAP32[$384 >> 2];
    $386 = $next + 4 | 0;
    __THREW__ = 0;
    invoke_vii(40, $386 | 0, $this$idx$val$idx$val$i138 + 12 | 0);
    $388 = __THREW__;
    __THREW__ = 0;
    if ($388 & 1) label = 19; else {
     HEAP32[$next >> 2] = HEAP32[$384 >> 2];
     $391 = $next + 16 | 0;
     __THREW__ = 0;
     invoke_vii(40, $391 | 0, $this$idx$val$idx$val$i138 + 24 | 0);
     $393 = __THREW__;
     __THREW__ = 0;
     if ($393 & 1) {
      $395 = ___cxa_find_matching_catch() | 0;
      $396 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($386);
      $eh$lpad$body68$index16Z2D = $396;
      $eh$lpad$body68$indexZ2D = $395;
      break L4;
     }
     $397 = $next + 28 | 0;
     $398 = $this$idx$val$idx$val$i138 + 36 | 0;
     HEAP32[$397 + 0 >> 2] = HEAP32[$398 + 0 >> 2];
     HEAP32[$397 + 4 >> 2] = HEAP32[$398 + 4 >> 2];
     HEAP32[$397 + 8 >> 2] = HEAP32[$398 + 8 >> 2];
     HEAP32[$397 + 12 >> 2] = HEAP32[$398 + 12 >> 2];
     HEAP32[$next >> 2] = HEAP32[$384 >> 2];
     $400 = HEAP32[$this >> 2] | 0;
     $402 = HEAP32[$400 + 4 >> 2] | 0;
     $403 = $402 + 4 | 0;
     $405 = HEAP32[$402 >> 2] | 0;
     HEAP32[$405 + 4 >> 2] = HEAP32[$403 >> 2];
     HEAP32[HEAP32[$403 >> 2] >> 2] = $405;
     $408 = $400 + 8 | 0;
     HEAP32[$408 >> 2] = (HEAP32[$408 >> 2] | 0) + -1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($402 + 24 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($402 + 12 | 0);
     __ZdlPv($402);
     L194 : do if ((HEAP32[$next >> 2] | 0) == 8) {
      HEAP32[$params_asts >> 2] = 0;
      $415 = $params_asts + 4 | 0;
      HEAP32[$415 >> 2] = 0;
      HEAP32[$params_asts + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_viii(3, $27 | 0, 37112, 18);
      $417 = __THREW__;
      __THREW__ = 0;
      do if ($417 & 1) label = 75; else {
       __THREW__ = 0;
       invoke_viiiii(4, $26 | 0, $this | 0, $params_asts | 0, $27 | 0, $obj_level | 0);
       $419 = __THREW__;
       __THREW__ = 0;
       if ($419 & 1) {
        $436 = ___cxa_find_matching_catch() | 0;
        $437 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
        $$3 = $436;
        $$320 = $437;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26 + 16 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26 + 4 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
       __THREW__ = 0;
       $423 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
       $424 = __THREW__;
       __THREW__ = 0;
       if ($424 & 1) label = 75; else {
        HEAP32[$body >> 2] = $423;
        HEAP32[$params >> 2] = 0;
        $426 = $params + 4 | 0;
        HEAP32[$426 >> 2] = 0;
        $427 = $params + 8 | 0;
        HEAP32[$427 >> 2] = 0;
        $428 = HEAP32[$params_asts >> 2] | 0;
        $429 = HEAP32[$415 >> 2] | 0;
        L202 : do if (($428 | 0) == ($429 | 0)) label = 108; else {
         $432 = $428;
         while (1) {
          $431 = HEAP32[$432 >> 2] | 0;
          if (!$431) {
           $$lcssa576 = 0;
           label = 78;
           break;
          }
          $438 = ___dynamic_cast($431, 35776, 36768, 0) | 0;
          if (!$438) {
           $$lcssa576 = $431;
           label = 78;
           break;
          }
          $491 = $438 + 48 | 0;
          $492 = HEAP32[$426 >> 2] | 0;
          if (($492 | 0) == (HEAP32[$427 >> 2] | 0)) {
           __THREW__ = 0;
           invoke_vii(56, $params | 0, $491 | 0);
           $499 = __THREW__;
           __THREW__ = 0;
           if ($499 & 1) {
            label = 93;
            break;
           }
          } else {
           if (!$492) $498 = 0; else {
            HEAP32[$492 >> 2] = HEAP32[$491 >> 2];
            $498 = HEAP32[$426 >> 2] | 0;
           }
           HEAP32[$426 >> 2] = $498 + 4;
          }
          $432 = $432 + 4 | 0;
          if (($432 | 0) == ($429 | 0)) {
           label = 107;
           break;
          }
         }
         if ((label | 0) == 78) {
          $440 = $ss + 64 | 0;
          $441 = $ss + 8 | 0;
          HEAP32[$441 >> 2] = 752;
          $442 = $ss + 12 | 0;
          HEAP32[$ss >> 2] = 900;
          HEAP32[$440 >> 2] = 920;
          HEAP32[$ss + 4 >> 2] = 0;
          __THREW__ = 0;
          invoke_vii(41, $ss + 64 | 0, $442 | 0);
          $445 = __THREW__;
          __THREW__ = 0;
          if ($445 & 1) {
           $457 = ___cxa_find_matching_catch() | 0;
           $$0$i = tempRet0;
           $$01$i = $457;
          } else {
           HEAP32[$ss + 136 >> 2] = 0;
           HEAP32[$ss + 140 >> 2] = -1;
           HEAP32[$ss >> 2] = 732;
           HEAP32[$440 >> 2] = 772;
           HEAP32[$441 >> 2] = 752;
           __THREW__ = 0;
           invoke_vi(177, $442 | 0);
           $449 = __THREW__;
           __THREW__ = 0;
           do if ($449 & 1) {
            $459 = ___cxa_find_matching_catch() | 0;
            $eh$lpad$body$i$index50Z2D = tempRet0;
            $eh$lpad$body$i$indexZ2D = $459;
           } else {
            HEAP32[$442 >> 2] = 1064;
            $451 = $ss + 44 | 0;
            HEAP32[$451 + 0 >> 2] = 0;
            HEAP32[$451 + 4 >> 2] = 0;
            HEAP32[$451 + 8 >> 2] = 0;
            HEAP32[$451 + 12 >> 2] = 0;
            HEAP32[$ss + 60 >> 2] = 24;
            HEAP32[$9 + 0 >> 2] = 0;
            HEAP32[$9 + 4 >> 2] = 0;
            HEAP32[$9 + 8 >> 2] = 0;
            __THREW__ = 0;
            invoke_vii(42, $442 | 0, $9 | 0);
            $453 = __THREW__;
            __THREW__ = 0;
            if ($453 & 1) {
             $455 = ___cxa_find_matching_catch() | 0;
             $456 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($451);
             __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($442);
             $eh$lpad$body$i$index50Z2D = $456;
             $eh$lpad$body$i$indexZ2D = $455;
             break;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
            __THREW__ = 0;
            $461 = invoke_iiii(25, $441 | 0, 37136, 19) | 0;
            $462 = __THREW__;
            __THREW__ = 0;
            L226 : do if ($462 & 1) label = 96; else {
             __THREW__ = 0;
             invoke_iii(26, $461 | 0, $$lcssa576 | 0) | 0;
             $464 = __THREW__;
             __THREW__ = 0;
             if ($464 & 1) {
              label = 96;
              break;
             }
             $466 = ___cxa_allocate_exception(40) | 0;
             __THREW__ = 0;
             invoke_vii(43, $28 | 0, $442 | 0);
             $467 = __THREW__;
             __THREW__ = 0;
             L229 : do if ($467 & 1) {
              $487 = ___cxa_find_matching_catch() | 0;
              $$011369 = $487;
              $$017368 = tempRet0;
             } else {
              __THREW__ = 0;
              invoke_vii(40, $466 | 0, $$lcssa576 + 4 | 0);
              $470 = __THREW__;
              __THREW__ = 0;
              do if ($470 & 1) $$09 = 1; else {
               $472 = $466 + 12 | 0;
               $473 = $$lcssa576 + 16 | 0;
               HEAP32[$472 + 0 >> 2] = HEAP32[$473 + 0 >> 2];
               HEAP32[$472 + 4 >> 2] = HEAP32[$473 + 4 >> 2];
               HEAP32[$472 + 8 >> 2] = HEAP32[$473 + 8 >> 2];
               HEAP32[$472 + 12 >> 2] = HEAP32[$473 + 12 >> 2];
               __THREW__ = 0;
               invoke_vii(40, $466 + 28 | 0, $28 | 0);
               $475 = __THREW__;
               __THREW__ = 0;
               if ($475 & 1) {
                $477 = ___cxa_find_matching_catch() | 0;
                $478 = tempRet0;
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($466);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
                $$011369 = $477;
                $$017368 = $478;
                break L229;
               }
               __THREW__ = 0;
               invoke_viii(4, $466 | 0, 48, 176);
               $479 = __THREW__;
               __THREW__ = 0;
               if ($479 & 1) {
                $$09 = 0;
                break;
               }
              } while (0);
              $489 = ___cxa_find_matching_catch() | 0;
              $490 = tempRet0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
              if ($$09) {
               $$011369 = $489;
               $$017368 = $490;
              } else {
               $$112 = $489;
               $$118 = $490;
               break L226;
              }
             } while (0);
             ___cxa_free_exception($466 | 0);
             $$112 = $$011369;
             $$118 = $$017368;
            } while (0);
            if ((label | 0) == 96) {
             $485 = ___cxa_find_matching_catch() | 0;
             $$112 = $485;
             $$118 = tempRet0;
            }
            HEAP32[$ss >> 2] = 732;
            HEAP32[$440 >> 2] = 772;
            HEAP32[$441 >> 2] = 752;
            HEAP32[$442 >> 2] = 1064;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($451);
            __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($442);
            __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($440);
            $$213 = $$112;
            $$219 = $$118;
            break L202;
           } while (0);
           $$0$i = $eh$lpad$body$i$index50Z2D;
           $$01$i = $eh$lpad$body$i$indexZ2D;
          }
          __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($440);
          $eh$lpad$body148$index56Z2D = $$0$i;
          $eh$lpad$body148$indexZ2D = $$01$i;
          label = 95;
          break;
         } else if ((label | 0) == 93) {
          $481 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body148$index56Z2D = tempRet0;
          $eh$lpad$body148$indexZ2D = $481;
          label = 95;
          break;
         } else if ((label | 0) == 107) {
          label = 108;
          break;
         }
        } while (0);
        do if ((label | 0) == 108) {
         $504 = HEAP32[$this + 4 >> 2] | 0;
         __THREW__ = 0;
         invoke_vii(40, $29 | 0, $59 | 0);
         $505 = __THREW__;
         __THREW__ = 0;
         if ($505 & 1) {
          $483 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body148$index56Z2D = tempRet0;
          $eh$lpad$body148$indexZ2D = $483;
          label = 95;
          break;
         }
         $509 = $65;
         $514 = HEAP32[$509 + 4 >> 2] | 0;
         $515 = $29 + 12 | 0;
         HEAP32[$515 >> 2] = HEAP32[$509 >> 2];
         HEAP32[$515 + 4 >> 2] = $514;
         $520 = $423 + 24 | 0;
         $525 = HEAP32[$520 + 4 >> 2] | 0;
         $526 = $29 + 20 | 0;
         HEAP32[$526 >> 2] = HEAP32[$520 >> 2];
         HEAP32[$526 + 4 >> 2] = $525;
         __THREW__ = 0;
         $530 = invoke_iiiii(7, $504 | 0, $29 | 0, $params | 0, $body | 0) | 0;
         $531 = __THREW__;
         __THREW__ = 0;
         if ($531 & 1) {
          $551 = ___cxa_find_matching_catch() | 0;
          $552 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
          $$213 = $551;
          $$219 = $552;
          break;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
         $533 = HEAP32[$params >> 2] | 0;
         $535 = $533;
         if ($533) {
          $536 = HEAP32[$426 >> 2] | 0;
          if (($536 | 0) != ($533 | 0)) HEAP32[$426 >> 2] = $536 + (~(($536 + -4 - $535 | 0) >>> 2) << 2);
          __ZdlPv($533);
         }
         $542 = HEAP32[$params_asts >> 2] | 0;
         $544 = $542;
         if ($542) {
          $545 = HEAP32[$415 >> 2] | 0;
          if (($545 | 0) != ($542 | 0)) HEAP32[$415 >> 2] = $545 + (~(($545 + -4 - $544 | 0) >>> 2) << 2);
          __ZdlPv($542);
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($391);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($386);
         $$0 = $530;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
         STACKTOP = sp;
         return $$0 | 0;
        } while (0);
        if ((label | 0) == 95) {
         $$213 = $eh$lpad$body148$indexZ2D;
         $$219 = $eh$lpad$body148$index56Z2D;
        }
        $553 = HEAP32[$params >> 2] | 0;
        $555 = $553;
        if (!$553) {
         $$3 = $$213;
         $$320 = $$219;
        } else {
         $556 = HEAP32[$426 >> 2] | 0;
         if (($556 | 0) != ($553 | 0)) HEAP32[$426 >> 2] = $556 + (~(($556 + -4 - $555 | 0) >>> 2) << 2);
         __ZdlPv($553);
         $$3 = $$213;
         $$320 = $$219;
        }
       }
      } while (0);
      if ((label | 0) == 75) {
       $434 = ___cxa_find_matching_catch() | 0;
       $$3 = $434;
       $$320 = tempRet0;
      }
      $562 = HEAP32[$params_asts >> 2] | 0;
      $564 = $562;
      if (!$562) {
       $$6 = $$3;
       $$623 = $$320;
      } else {
       $565 = HEAP32[$415 >> 2] | 0;
       if (($565 | 0) != ($562 | 0)) HEAP32[$415 >> 2] = $565 + (~(($565 + -4 - $564 | 0) >>> 2) << 2);
       __ZdlPv($562);
       $$6 = $$3;
       $$623 = $$320;
      }
     } else {
      $571 = $ss1 + 64 | 0;
      $572 = $ss1 + 8 | 0;
      HEAP32[$572 >> 2] = 752;
      $573 = $ss1 + 12 | 0;
      HEAP32[$ss1 >> 2] = 900;
      HEAP32[$571 >> 2] = 920;
      HEAP32[$ss1 + 4 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(41, $ss1 + 64 | 0, $573 | 0);
      $576 = __THREW__;
      __THREW__ = 0;
      if ($576 & 1) {
       $588 = ___cxa_find_matching_catch() | 0;
       $$0$i179 = tempRet0;
       $$01$i178 = $588;
      } else {
       HEAP32[$ss1 + 136 >> 2] = 0;
       HEAP32[$ss1 + 140 >> 2] = -1;
       HEAP32[$ss1 >> 2] = 732;
       HEAP32[$571 >> 2] = 772;
       HEAP32[$572 >> 2] = 752;
       __THREW__ = 0;
       invoke_vi(177, $573 | 0);
       $580 = __THREW__;
       __THREW__ = 0;
       do if ($580 & 1) {
        $590 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body$i176$index62Z2D = tempRet0;
        $eh$lpad$body$i176$indexZ2D = $590;
       } else {
        HEAP32[$573 >> 2] = 1064;
        $582 = $ss1 + 44 | 0;
        HEAP32[$582 + 0 >> 2] = 0;
        HEAP32[$582 + 4 >> 2] = 0;
        HEAP32[$582 + 8 >> 2] = 0;
        HEAP32[$582 + 12 >> 2] = 0;
        HEAP32[$ss1 + 60 >> 2] = 24;
        HEAP32[$8 + 0 >> 2] = 0;
        HEAP32[$8 + 4 >> 2] = 0;
        HEAP32[$8 + 8 >> 2] = 0;
        __THREW__ = 0;
        invoke_vii(42, $573 | 0, $8 | 0);
        $584 = __THREW__;
        __THREW__ = 0;
        if ($584 & 1) {
         $586 = ___cxa_find_matching_catch() | 0;
         $587 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($582);
         __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($573);
         $eh$lpad$body$i176$index62Z2D = $587;
         $eh$lpad$body$i176$indexZ2D = $586;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
        __THREW__ = 0;
        $592 = invoke_iiii(25, $572 | 0, 37160, 19) | 0;
        $593 = __THREW__;
        __THREW__ = 0;
        L290 : do if ($593 & 1) label = 143; else {
         __THREW__ = 0;
         invoke_vii(52, $592 | 0, $next | 0);
         $595 = __THREW__;
         __THREW__ = 0;
         if ($595 & 1) label = 143; else {
          $597 = ___cxa_allocate_exception(40) | 0;
          __THREW__ = 0;
          invoke_vii(43, $30 | 0, $573 | 0);
          $598 = __THREW__;
          __THREW__ = 0;
          L293 : do if ($598 & 1) {
           $612 = ___cxa_find_matching_catch() | 0;
           $$421372 = tempRet0;
           $$4373 = $612;
          } else {
           __THREW__ = 0;
           invoke_vii(40, $597 | 0, $391 | 0);
           $600 = __THREW__;
           __THREW__ = 0;
           do if ($600 & 1) $$07 = 1; else {
            $602 = $597 + 12 | 0;
            HEAP32[$602 + 0 >> 2] = HEAP32[$397 + 0 >> 2];
            HEAP32[$602 + 4 >> 2] = HEAP32[$397 + 4 >> 2];
            HEAP32[$602 + 8 >> 2] = HEAP32[$397 + 8 >> 2];
            HEAP32[$602 + 12 >> 2] = HEAP32[$397 + 12 >> 2];
            __THREW__ = 0;
            invoke_vii(40, $597 + 28 | 0, $30 | 0);
            $604 = __THREW__;
            __THREW__ = 0;
            if ($604 & 1) {
             $606 = ___cxa_find_matching_catch() | 0;
             $607 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($597);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
             $$421372 = $607;
             $$4373 = $606;
             break L293;
            }
            __THREW__ = 0;
            invoke_viii(4, $597 | 0, 48, 176);
            $608 = __THREW__;
            __THREW__ = 0;
            if ($608 & 1) {
             $$07 = 0;
             break;
            }
           } while (0);
           $614 = ___cxa_find_matching_catch() | 0;
           $615 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
           if ($$07) {
            $$421372 = $615;
            $$4373 = $614;
           } else {
            $$5 = $614;
            $$522 = $615;
            break L290;
           }
          } while (0);
          ___cxa_free_exception($597 | 0);
          $$5 = $$4373;
          $$522 = $$421372;
         }
        } while (0);
        if ((label | 0) == 143) {
         $610 = ___cxa_find_matching_catch() | 0;
         $$5 = $610;
         $$522 = tempRet0;
        }
        HEAP32[$ss1 >> 2] = 732;
        HEAP32[$571 >> 2] = 772;
        HEAP32[$572 >> 2] = 752;
        HEAP32[$573 >> 2] = 1064;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($582);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($573);
        __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($571);
        $$6 = $$5;
        $$623 = $$522;
        break L194;
       } while (0);
       $$0$i179 = $eh$lpad$body$i176$index62Z2D;
       $$01$i178 = $eh$lpad$body$i176$indexZ2D;
      }
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($571);
      $$6 = $$01$i178;
      $$623 = $$0$i179;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($391);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($386);
     $$25 = $$6;
     $$2542 = $$623;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
     ___resumeException($$25 | 0);
    }
   }
   break;
  }
 case 20:
  {
   $this$idx$val$idx$val$i82 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $158 = $this$idx$val$idx$val$i82 + 8 | 0;
   HEAP32[$19 >> 2] = HEAP32[$158 >> 2];
   $160 = $19 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $160 | 0, $this$idx$val$idx$val$i82 + 12 | 0);
   $162 = __THREW__;
   __THREW__ = 0;
   if ($162 & 1) label = 19; else {
    HEAP32[$19 >> 2] = HEAP32[$158 >> 2];
    $165 = $19 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $165 | 0, $this$idx$val$idx$val$i82 + 24 | 0);
    $167 = __THREW__;
    __THREW__ = 0;
    if ($167 & 1) {
     $169 = ___cxa_find_matching_catch() | 0;
     $170 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($160);
     $eh$lpad$body68$index16Z2D = $170;
     $eh$lpad$body68$indexZ2D = $169;
     break L4;
    }
    $171 = $19 + 28 | 0;
    $172 = $this$idx$val$idx$val$i82 + 36 | 0;
    HEAP32[$171 + 0 >> 2] = HEAP32[$172 + 0 >> 2];
    HEAP32[$171 + 4 >> 2] = HEAP32[$172 + 4 >> 2];
    HEAP32[$171 + 8 >> 2] = HEAP32[$172 + 8 >> 2];
    HEAP32[$171 + 12 >> 2] = HEAP32[$172 + 12 >> 2];
    HEAP32[$19 >> 2] = HEAP32[$158 >> 2];
    $174 = HEAP32[$this >> 2] | 0;
    $176 = HEAP32[$174 + 4 >> 2] | 0;
    $177 = $176 + 4 | 0;
    $179 = HEAP32[$176 >> 2] | 0;
    HEAP32[$179 + 4 >> 2] = HEAP32[$177 >> 2];
    HEAP32[HEAP32[$177 >> 2] >> 2] = $179;
    $182 = $174 + 8 | 0;
    HEAP32[$182 >> 2] = (HEAP32[$182 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($176 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($176 + 12 | 0);
    __ZdlPv($176);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($165);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($160);
    __THREW__ = 0;
    $187 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
    $188 = __THREW__;
    __THREW__ = 0;
    if ($188 & 1) label = 19; else {
     __THREW__ = 0;
     invoke_viiii(13, $20 | 0, $this | 0, 27, 0);
     $190 = __THREW__;
     __THREW__ = 0;
     if ($190 & 1) label = 19; else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20 + 16 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20 + 4 | 0);
      __THREW__ = 0;
      $194 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
      $195 = __THREW__;
      __THREW__ = 0;
      if ($195 & 1) label = 19; else {
       $this$idx49$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $197 = $this$idx49$val$idx$val + 8 | 0;
       HEAP32[$21 >> 2] = HEAP32[$197 >> 2];
       $199 = $21 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $199 | 0, $this$idx49$val$idx$val + 12 | 0);
       $201 = __THREW__;
       __THREW__ = 0;
       if ($201 & 1) label = 19; else {
        HEAP32[$21 >> 2] = HEAP32[$197 >> 2];
        $204 = $21 + 16 | 0;
        __THREW__ = 0;
        invoke_vii(40, $204 | 0, $this$idx49$val$idx$val + 24 | 0);
        $206 = __THREW__;
        __THREW__ = 0;
        if ($206 & 1) {
         $208 = ___cxa_find_matching_catch() | 0;
         $209 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($199);
         $eh$lpad$body68$index16Z2D = $209;
         $eh$lpad$body68$indexZ2D = $208;
         break L4;
        }
        $210 = $21 + 28 | 0;
        $211 = $this$idx49$val$idx$val + 36 | 0;
        HEAP32[$210 + 0 >> 2] = HEAP32[$211 + 0 >> 2];
        HEAP32[$210 + 4 >> 2] = HEAP32[$211 + 4 >> 2];
        HEAP32[$210 + 8 >> 2] = HEAP32[$211 + 8 >> 2];
        HEAP32[$210 + 12 >> 2] = HEAP32[$211 + 12 >> 2];
        $212 = HEAP32[$197 >> 2] | 0;
        HEAP32[$21 >> 2] = $212;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($204);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($199);
        L325 : do if (($212 | 0) == 15) {
         $this$idx$val$idx$val$i100 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
         $214 = $this$idx$val$idx$val$i100 + 8 | 0;
         HEAP32[$22 >> 2] = HEAP32[$214 >> 2];
         $216 = $22 + 4 | 0;
         __THREW__ = 0;
         invoke_vii(40, $216 | 0, $this$idx$val$idx$val$i100 + 12 | 0);
         $218 = __THREW__;
         __THREW__ = 0;
         if ($218 & 1) {
          label = 19;
          break L4;
         }
         HEAP32[$22 >> 2] = HEAP32[$214 >> 2];
         $221 = $22 + 16 | 0;
         __THREW__ = 0;
         invoke_vii(40, $221 | 0, $this$idx$val$idx$val$i100 + 24 | 0);
         $223 = __THREW__;
         __THREW__ = 0;
         if ($223 & 1) {
          $225 = ___cxa_find_matching_catch() | 0;
          $226 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($216);
          $eh$lpad$body68$index16Z2D = $226;
          $eh$lpad$body68$indexZ2D = $225;
          break L4;
         }
         $227 = $22 + 28 | 0;
         $228 = $this$idx$val$idx$val$i100 + 36 | 0;
         HEAP32[$227 + 0 >> 2] = HEAP32[$228 + 0 >> 2];
         HEAP32[$227 + 4 >> 2] = HEAP32[$228 + 4 >> 2];
         HEAP32[$227 + 8 >> 2] = HEAP32[$228 + 8 >> 2];
         HEAP32[$227 + 12 >> 2] = HEAP32[$228 + 12 >> 2];
         HEAP32[$22 >> 2] = HEAP32[$214 >> 2];
         $230 = HEAP32[$this >> 2] | 0;
         $232 = HEAP32[$230 + 4 >> 2] | 0;
         $233 = $232 + 4 | 0;
         $235 = HEAP32[$232 >> 2] | 0;
         HEAP32[$235 + 4 >> 2] = HEAP32[$233 >> 2];
         HEAP32[HEAP32[$233 >> 2] >> 2] = $235;
         $238 = $230 + 8 | 0;
         HEAP32[$238 >> 2] = (HEAP32[$238 >> 2] | 0) + -1;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($232 + 24 | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($232 + 12 | 0);
         __ZdlPv($232);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($221);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($216);
         __THREW__ = 0;
         $243 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
         $244 = __THREW__;
         __THREW__ = 0;
         if ($244 & 1) {
          label = 19;
          break L4;
         }
         $$pre$phiZ2D = $this + 4 | 0;
         $303 = $243;
        } else {
         $246 = $this + 4 | 0;
         $247 = HEAP32[$246 >> 2] | 0;
         __THREW__ = 0;
         invoke_vii(40, $23 | 0, $59 | 0);
         $248 = __THREW__;
         __THREW__ = 0;
         if ($248 & 1) {
          label = 19;
          break L4;
         }
         $251 = $23 + 12 | 0;
         $252 = $65;
         $257 = HEAP32[$252 + 4 >> 2] | 0;
         $258 = $251;
         HEAP32[$258 >> 2] = HEAP32[$252 >> 2];
         HEAP32[$258 + 4 >> 2] = $257;
         $263 = $194 + 24 | 0;
         $268 = HEAP32[$263 + 4 >> 2] | 0;
         $269 = $23 + 20 | 0;
         HEAP32[$269 >> 2] = HEAP32[$263 >> 2];
         HEAP32[$269 + 4 >> 2] = $268;
         __THREW__ = 0;
         $273 = invoke_ii(67, 48) | 0;
         $274 = __THREW__;
         __THREW__ = 0;
         do if ($274 & 1) label = 48; else {
          HEAP32[$273 >> 2] = 35936;
          __THREW__ = 0;
          invoke_vii(40, $273 + 4 | 0, $23 | 0);
          $277 = __THREW__;
          __THREW__ = 0;
          if ($277 & 1) {
           $295 = ___cxa_find_matching_catch() | 0;
           $296 = tempRet0;
           __ZdlPv($273);
           $eh$lpad$body118$index40Z2D = $296;
           $eh$lpad$body118$indexZ2D = $295;
           break;
          }
          $279 = $273 + 16 | 0;
          HEAP32[$279 + 0 >> 2] = HEAP32[$251 + 0 >> 2];
          HEAP32[$279 + 4 >> 2] = HEAP32[$251 + 4 >> 2];
          HEAP32[$279 + 8 >> 2] = HEAP32[$251 + 8 >> 2];
          HEAP32[$279 + 12 >> 2] = HEAP32[$251 + 12 >> 2];
          HEAP32[$273 + 32 >> 2] = 12;
          HEAP32[$273 + 36 >> 2] = 0;
          HEAP32[$273 + 40 >> 2] = 0;
          HEAP32[$273 + 44 >> 2] = 0;
          HEAP32[$273 >> 2] = 38272;
          HEAP32[$11 >> 2] = $273;
          $284 = $247 + 16 | 0;
          $285 = HEAP32[$284 >> 2] | 0;
          if ($285 >>> 0 < (HEAP32[$247 + 20 >> 2] | 0) >>> 0) {
           if (!$285) $291 = 0; else {
            HEAP32[$285 >> 2] = $273;
            $291 = HEAP32[$284 >> 2] | 0;
           }
           HEAP32[$284 >> 2] = $291 + 4;
          } else {
           __THREW__ = 0;
           invoke_vii(51, $247 + 12 | 0, $11 | 0);
           $293 = __THREW__;
           __THREW__ = 0;
           if ($293 & 1) {
            label = 48;
            break;
           }
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
          $$pre$phiZ2D = $246;
          $303 = $273;
          break L325;
         } while (0);
         if ((label | 0) == 48) {
          $297 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body118$index40Z2D = tempRet0;
          $eh$lpad$body118$indexZ2D = $297;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
         $$25 = $eh$lpad$body118$indexZ2D;
         $$2542 = $eh$lpad$body118$index40Z2D;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
         ___resumeException($$25 | 0);
        } while (0);
        $299 = HEAP32[$$pre$phiZ2D >> 2] | 0;
        __THREW__ = 0;
        invoke_vii(40, $24 | 0, $59 | 0);
        $300 = __THREW__;
        __THREW__ = 0;
        if ($300 & 1) label = 19; else {
         $304 = $24 + 12 | 0;
         $305 = $65;
         $310 = HEAP32[$305 + 4 >> 2] | 0;
         $311 = $304;
         HEAP32[$311 >> 2] = HEAP32[$305 >> 2];
         HEAP32[$311 + 4 >> 2] = $310;
         $316 = $303 + 24 | 0;
         $321 = HEAP32[$316 + 4 >> 2] | 0;
         $322 = $24 + 20 | 0;
         HEAP32[$322 >> 2] = HEAP32[$316 >> 2];
         HEAP32[$322 + 4 >> 2] = $321;
         __THREW__ = 0;
         $326 = invoke_ii(67, 60) | 0;
         $327 = __THREW__;
         __THREW__ = 0;
         do if ($327 & 1) label = 60; else {
          HEAP32[$326 >> 2] = 35936;
          __THREW__ = 0;
          invoke_vii(40, $326 + 4 | 0, $24 | 0);
          $330 = __THREW__;
          __THREW__ = 0;
          if ($330 & 1) {
           $351 = ___cxa_find_matching_catch() | 0;
           $352 = tempRet0;
           __ZdlPv($326);
           $eh$lpad$body126$index45Z2D = $352;
           $eh$lpad$body126$indexZ2D = $351;
           break;
          }
          $332 = $326 + 16 | 0;
          HEAP32[$332 + 0 >> 2] = HEAP32[$304 + 0 >> 2];
          HEAP32[$332 + 4 >> 2] = HEAP32[$304 + 4 >> 2];
          HEAP32[$332 + 8 >> 2] = HEAP32[$304 + 8 >> 2];
          HEAP32[$332 + 12 >> 2] = HEAP32[$304 + 12 >> 2];
          HEAP32[$326 + 32 >> 2] = 4;
          HEAP32[$326 + 36 >> 2] = 0;
          HEAP32[$326 + 40 >> 2] = 0;
          HEAP32[$326 + 44 >> 2] = 0;
          HEAP32[$326 >> 2] = 38256;
          HEAP32[$326 + 48 >> 2] = $187;
          HEAP32[$326 + 52 >> 2] = $194;
          HEAP32[$326 + 56 >> 2] = $303;
          HEAP32[$10 >> 2] = $326;
          $340 = $299 + 16 | 0;
          $341 = HEAP32[$340 >> 2] | 0;
          if ($341 >>> 0 < (HEAP32[$299 + 20 >> 2] | 0) >>> 0) {
           if (!$341) $347 = 0; else {
            HEAP32[$341 >> 2] = $326;
            $347 = HEAP32[$340 >> 2] | 0;
           }
           HEAP32[$340 >> 2] = $347 + 4;
          } else {
           __THREW__ = 0;
           invoke_vii(51, $299 + 12 | 0, $10 | 0);
           $349 = __THREW__;
           __THREW__ = 0;
           if ($349 & 1) {
            label = 60;
            break;
           }
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
          $$0 = $326;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
          STACKTOP = sp;
          return $$0 | 0;
         } while (0);
         if ((label | 0) == 60) {
          $353 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body126$index45Z2D = tempRet0;
          $eh$lpad$body126$indexZ2D = $353;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
         $$25 = $eh$lpad$body126$indexZ2D;
         $$2542 = $eh$lpad$body126$index45Z2D;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
         ___resumeException($$25 | 0);
        }
       }
      }
     }
    }
   }
   break;
  }
 default:
  if (!$precedence) label = 256; else label = 257;
 } while (0);
 L369 : do if ((label | 0) == 256) {
  __THREW__ = 0;
  $965 = invoke_iii(28, $this | 0, $obj_level | 0) | 0;
  $966 = __THREW__;
  __THREW__ = 0;
  if ($966 & 1) label = 19; else {
   $$0 = $965;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else if ((label | 0) == 257) {
  $968 = $precedence + -1 | 0;
  __THREW__ = 0;
  $969 = invoke_iiii(29, $this | 0, $968 | 0, $obj_level | 0) | 0;
  $970 = __THREW__;
  __THREW__ = 0;
  if ($970 & 1) label = 19; else {
   HEAP32[$lhs >> 2] = $969;
   $972 = $36 + 4 | 0;
   $973 = $36 + 16 | 0;
   $974 = $36 + 28 | 0;
   $975 = $37 + 4 | 0;
   $976 = $37 + 16 | 0;
   $977 = $37 + 28 | 0;
   $978 = ($precedence | 0) == 5;
   $979 = $38 + 4 | 0;
   $980 = $38 + 16 | 0;
   $981 = $38 + 28 | 0;
   $982 = $op7 + 4 | 0;
   $983 = $op7 + 16 | 0;
   $984 = $op7 + 28 | 0;
   $985 = $this + 4 | 0;
   $986 = $l + 12 | 0;
   $987 = $args11 + 4 | 0;
   $988 = $args11 + 8 | 0;
   $989 = $51 + 12 | 0;
   $990 = $51 + 20 | 0;
   $991 = $53 + 12 | 0;
   $992 = $53 + 20 | 0;
   $993 = $end + 36 | 0;
   $994 = $42 + 12 | 0;
   $995 = $42 + 20 | 0;
   $996 = $end + 16 | 0;
   $997 = $end + 4 | 0;
   $998 = $field + 16 | 0;
   $999 = $field + 36 | 0;
   $1000 = $field + 28 | 0;
   $1001 = $43 + 12 | 0;
   $1002 = $43 + 20 | 0;
   $1003 = $field + 4 | 0;
   $1004 = $44 + 12 | 0;
   $1005 = $44 + 20 | 0;
   $1006 = $args + 4 | 0;
   $1007 = $args + 8 | 0;
   $1008 = $46 + 4 | 0;
   $1009 = $46 + 16 | 0;
   $1010 = $46 + 28 | 0;
   $1011 = $47 + 4 | 0;
   $1012 = $47 + 16 | 0;
   $1013 = $47 + 28 | 0;
   $1014 = $end9 + 36 | 0;
   $1015 = $48 + 12 | 0;
   $1016 = $48 + 20 | 0;
   $1017 = $end9 + 16 | 0;
   $1018 = $end9 + 4 | 0;
   $1019 = $end10 + 36 | 0;
   $1020 = $49 + 12 | 0;
   $1021 = $49 + 20 | 0;
   $1022 = $end10 + 16 | 0;
   $1023 = $end10 + 4 | 0;
   $1024 = ($precedence | 0) == 2;
   L374 : while (1) {
    $this$idx48$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $1025 = $this$idx48$val$idx$val + 8 | 0;
    HEAP32[$36 >> 2] = HEAP32[$1025 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $972 | 0, $this$idx48$val$idx$val + 12 | 0);
    $1028 = __THREW__;
    __THREW__ = 0;
    if ($1028 & 1) {
     label = 18;
     break;
    }
    HEAP32[$36 >> 2] = HEAP32[$1025 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $973 | 0, $this$idx48$val$idx$val + 24 | 0);
    $1032 = __THREW__;
    __THREW__ = 0;
    if ($1032 & 1) {
     label = 261;
     break;
    }
    $1036 = $this$idx48$val$idx$val + 36 | 0;
    HEAP32[$974 + 0 >> 2] = HEAP32[$1036 + 0 >> 2];
    HEAP32[$974 + 4 >> 2] = HEAP32[$1036 + 4 >> 2];
    HEAP32[$974 + 8 >> 2] = HEAP32[$1036 + 8 >> 2];
    HEAP32[$974 + 12 >> 2] = HEAP32[$1036 + 12 >> 2];
    $1037 = HEAP32[$1025 >> 2] | 0;
    HEAP32[$36 >> 2] = $1037;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($973);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($972);
    L378 : do switch ($1037 | 0) {
    case 13:
     {
      $this$idx47$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1038 = $this$idx47$val$idx$val + 8 | 0;
      HEAP32[$37 >> 2] = HEAP32[$1038 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $975 | 0, $this$idx47$val$idx$val + 12 | 0);
      $1041 = __THREW__;
      __THREW__ = 0;
      if ($1041 & 1) {
       label = 18;
       break L374;
      }
      HEAP32[$37 >> 2] = HEAP32[$1038 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $976 | 0, $this$idx47$val$idx$val + 24 | 0);
      $1045 = __THREW__;
      __THREW__ = 0;
      if ($1045 & 1) {
       label = 265;
       break L374;
      }
      $1049 = $this$idx47$val$idx$val + 36 | 0;
      HEAP32[$977 + 0 >> 2] = HEAP32[$1049 + 0 >> 2];
      HEAP32[$977 + 4 >> 2] = HEAP32[$1049 + 4 >> 2];
      HEAP32[$977 + 8 >> 2] = HEAP32[$1049 + 8 >> 2];
      HEAP32[$977 + 12 >> 2] = HEAP32[$1049 + 12 >> 2];
      HEAP32[$37 >> 2] = HEAP32[$1038 >> 2];
      $1052 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($975, 37240) | 0) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($976);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($975);
      if ($1052) if ($978) {
       $1640 = 2;
       break L378;
      } else {
       label = 268;
       break L374;
      }
      $this$idx46$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1054 = $this$idx46$val$idx$val + 8 | 0;
      HEAP32[$38 >> 2] = HEAP32[$1054 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $979 | 0, $this$idx46$val$idx$val + 12 | 0);
      $1057 = __THREW__;
      __THREW__ = 0;
      if ($1057 & 1) {
       label = 18;
       break L374;
      }
      HEAP32[$38 >> 2] = HEAP32[$1054 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $980 | 0, $this$idx46$val$idx$val + 24 | 0);
      $1061 = __THREW__;
      __THREW__ = 0;
      if ($1061 & 1) {
       label = 271;
       break L374;
      }
      $1065 = $this$idx46$val$idx$val + 36 | 0;
      HEAP32[$981 + 0 >> 2] = HEAP32[$1065 + 0 >> 2];
      HEAP32[$981 + 4 >> 2] = HEAP32[$1065 + 4 >> 2];
      HEAP32[$981 + 8 >> 2] = HEAP32[$1065 + 8 >> 2];
      HEAP32[$981 + 12 >> 2] = HEAP32[$1065 + 12 >> 2];
      HEAP32[$38 >> 2] = HEAP32[$1054 >> 2];
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($0, 1240, $979);
      $1067 = HEAP32[$0 >> 2] | 0;
      if (($1067 | 0) == (1244 | 0)) {
       $$0$i277 = 0;
       $1168 = 2;
      } else {
       $$0$i277 = 1;
       $1168 = HEAP32[$1067 + 28 >> 2] | 0;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($980);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($979);
      if (!$$0$i277) {
       label = 275;
       break L374;
      }
      $1164 = HEAP32[303] | 0;
      do if (!$1164) {
       HEAP32[$__parent$i >> 2] = 1212;
       $$0$i7$i = 1212 | 0;
       $1184 = 1212 | 0;
       label = 321;
      } else {
       $__nd$0$i$i = $1164;
       while (1) {
        $1167 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
        if (($1168 | 0) < ($1167 | 0)) {
         $1170 = HEAP32[$__nd$0$i$i >> 2] | 0;
         if (!$1170) {
          $$lcssa602 = $__nd$0$i$i;
          $__nd$0$i$i$lcssa601 = $__nd$0$i$i;
          label = 314;
          break;
         } else $__nd$0$be$in$i$i = $1170;
        } else {
         if (($1167 | 0) >= ($1168 | 0)) {
          $__nd$0$i$i$lcssa = $__nd$0$i$i;
          label = 320;
          break;
         }
         $1173 = $__nd$0$i$i + 4 | 0;
         $1174 = HEAP32[$1173 >> 2] | 0;
         if (!$1174) {
          $$lcssa = $1173;
          $__nd$0$i$i$lcssa600 = $__nd$0$i$i;
          label = 318;
          break;
         } else $__nd$0$be$in$i$i = $1174;
        }
        $__nd$0$i$i = $__nd$0$be$in$i$i;
       }
       if ((label | 0) == 314) {
        label = 0;
        HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa601;
        $$0$i7$i = $$lcssa602;
        $1184 = $__nd$0$i$i$lcssa601;
        label = 321;
        break;
       } else if ((label | 0) == 318) {
        label = 0;
        HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa600;
        $$0$i7$i = $$lcssa;
        $1184 = $__nd$0$i$i$lcssa600;
        label = 321;
        break;
       } else if ((label | 0) == 320) {
        label = 0;
        HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
        if (!$__nd$0$i$i$lcssa) {
         $$0$i7$i = $__parent$i;
         $1184 = 0;
         label = 321;
         break;
        } else {
         $__r$0$i = $__nd$0$i$i$lcssa;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 321) {
       label = 0;
       __THREW__ = 0;
       $1177 = invoke_ii(67, 24) | 0;
       $1178 = __THREW__;
       __THREW__ = 0;
       if ($1178 & 1) {
        label = 18;
        break L374;
       }
       HEAP32[$1177 + 16 >> 2] = $1168;
       HEAP32[$1177 + 20 >> 2] = 0;
       HEAP32[$1177 >> 2] = 0;
       HEAP32[$1177 + 4 >> 2] = 0;
       HEAP32[$1177 + 8 >> 2] = $1184;
       HEAP32[$$0$i7$i >> 2] = $1177;
       $1186 = HEAP32[HEAP32[302] >> 2] | 0;
       if (!$1186) $1189 = $1177; else {
        HEAP32[302] = $1186;
        $1189 = HEAP32[$$0$i7$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $1189);
       HEAP32[304] = (HEAP32[304] | 0) + 1;
       $__r$0$i = $1177;
      }
      if ((HEAP32[$__r$0$i + 20 >> 2] | 0) == ($precedence | 0)) $1640 = $1168; else {
       label = 326;
       break L374;
      }
      break;
     }
    case 0:
    case 8:
    case 2:
    case 7:
     {
      if ($1024) $1640 = 2; else {
       label = 328;
       break L374;
      }
      break;
     }
    default:
     {
      label = 329;
      break L374;
     }
    } while (0);
    $this$idx$val$idx$val$i310 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $1198 = $this$idx$val$idx$val$i310 + 8 | 0;
    HEAP32[$op7 >> 2] = HEAP32[$1198 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $982 | 0, $this$idx$val$idx$val$i310 + 12 | 0);
    $1201 = __THREW__;
    __THREW__ = 0;
    if ($1201 & 1) {
     label = 18;
     break;
    }
    HEAP32[$op7 >> 2] = HEAP32[$1198 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $983 | 0, $this$idx$val$idx$val$i310 + 24 | 0);
    $1205 = __THREW__;
    __THREW__ = 0;
    if ($1205 & 1) {
     label = 332;
     break;
    }
    $1209 = $this$idx$val$idx$val$i310 + 36 | 0;
    HEAP32[$984 + 0 >> 2] = HEAP32[$1209 + 0 >> 2];
    HEAP32[$984 + 4 >> 2] = HEAP32[$1209 + 4 >> 2];
    HEAP32[$984 + 8 >> 2] = HEAP32[$1209 + 8 >> 2];
    HEAP32[$984 + 12 >> 2] = HEAP32[$1209 + 12 >> 2];
    HEAP32[$op7 >> 2] = HEAP32[$1198 >> 2];
    $1211 = HEAP32[$this >> 2] | 0;
    $1213 = HEAP32[$1211 + 4 >> 2] | 0;
    $1214 = $1213 + 4 | 0;
    $1216 = HEAP32[$1213 >> 2] | 0;
    HEAP32[$1216 + 4 >> 2] = HEAP32[$1214 >> 2];
    HEAP32[HEAP32[$1214 >> 2] >> 2] = $1216;
    $1219 = $1211 + 8 | 0;
    HEAP32[$1219 >> 2] = (HEAP32[$1219 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1213 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1213 + 12 | 0);
    __ZdlPv($1213);
    $1224 = HEAP32[$op7 >> 2] | 0;
    do if (($1224 | 0) == 8) {
     HEAP32[$args >> 2] = 0;
     HEAP32[$1006 >> 2] = 0;
     HEAP32[$1007 >> 2] = 0;
     __THREW__ = 0;
     invoke_viii(3, $45 | 0, 37272, 17);
     $1370 = __THREW__;
     __THREW__ = 0;
     if ($1370 & 1) {
      label = 380;
      break L374;
     }
     __THREW__ = 0;
     invoke_viiiii(4, $end9 | 0, $this | 0, $args | 0, $45 | 0, $obj_level | 0);
     $1372 = __THREW__;
     __THREW__ = 0;
     if ($1372 & 1) {
      label = 381;
      break L374;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
     HEAP8[$tailstrict >> 0] = 0;
     $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $1374 = $this$idx$val$idx$val + 8 | 0;
     HEAP32[$46 >> 2] = HEAP32[$1374 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $1008 | 0, $this$idx$val$idx$val + 12 | 0);
     $1377 = __THREW__;
     __THREW__ = 0;
     if ($1377 & 1) {
      label = 382;
      break L374;
     }
     HEAP32[$46 >> 2] = HEAP32[$1374 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $1009 | 0, $this$idx$val$idx$val + 24 | 0);
     $1381 = __THREW__;
     __THREW__ = 0;
     if ($1381 & 1) {
      label = 374;
      break L374;
     }
     $1385 = $this$idx$val$idx$val + 36 | 0;
     HEAP32[$1010 + 0 >> 2] = HEAP32[$1385 + 0 >> 2];
     HEAP32[$1010 + 4 >> 2] = HEAP32[$1385 + 4 >> 2];
     HEAP32[$1010 + 8 >> 2] = HEAP32[$1385 + 8 >> 2];
     HEAP32[$1010 + 12 >> 2] = HEAP32[$1385 + 12 >> 2];
     $1386 = HEAP32[$1374 >> 2] | 0;
     HEAP32[$46 >> 2] = $1386;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1009);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1008);
     if (($1386 | 0) == 26) {
      $this$idx$val$idx$val$i347 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1388 = $this$idx$val$idx$val$i347 + 8 | 0;
      HEAP32[$47 >> 2] = HEAP32[$1388 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1011 | 0, $this$idx$val$idx$val$i347 + 12 | 0);
      $1391 = __THREW__;
      __THREW__ = 0;
      if ($1391 & 1) {
       label = 382;
       break L374;
      }
      HEAP32[$47 >> 2] = HEAP32[$1388 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1012 | 0, $this$idx$val$idx$val$i347 + 24 | 0);
      $1395 = __THREW__;
      __THREW__ = 0;
      if ($1395 & 1) {
       label = 378;
       break L374;
      }
      $1399 = $this$idx$val$idx$val$i347 + 36 | 0;
      HEAP32[$1013 + 0 >> 2] = HEAP32[$1399 + 0 >> 2];
      HEAP32[$1013 + 4 >> 2] = HEAP32[$1399 + 4 >> 2];
      HEAP32[$1013 + 8 >> 2] = HEAP32[$1399 + 8 >> 2];
      HEAP32[$1013 + 12 >> 2] = HEAP32[$1399 + 12 >> 2];
      HEAP32[$47 >> 2] = HEAP32[$1388 >> 2];
      $1401 = HEAP32[$this >> 2] | 0;
      $1403 = HEAP32[$1401 + 4 >> 2] | 0;
      $1404 = $1403 + 4 | 0;
      $1406 = HEAP32[$1403 >> 2] | 0;
      HEAP32[$1406 + 4 >> 2] = HEAP32[$1404 >> 2];
      HEAP32[HEAP32[$1404 >> 2] >> 2] = $1406;
      $1409 = $1401 + 8 | 0;
      HEAP32[$1409 >> 2] = (HEAP32[$1409 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1403 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1403 + 12 | 0);
      __ZdlPv($1403);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1012);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1011);
      HEAP8[$tailstrict >> 0] = 1;
     }
     $1420 = HEAP32[$985 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $48 | 0, $59 | 0);
     $1421 = __THREW__;
     __THREW__ = 0;
     if ($1421 & 1) {
      label = 382;
      break L374;
     }
     $1423 = $65;
     $1428 = HEAP32[$1423 + 4 >> 2] | 0;
     $1429 = $1015;
     HEAP32[$1429 >> 2] = HEAP32[$1423 >> 2];
     HEAP32[$1429 + 4 >> 2] = $1428;
     $1433 = $1014;
     $1438 = HEAP32[$1433 + 4 >> 2] | 0;
     $1439 = $1016;
     HEAP32[$1439 >> 2] = HEAP32[$1433 >> 2];
     HEAP32[$1439 + 4 >> 2] = $1438;
     __THREW__ = 0;
     $1443 = invoke_iiiiii(13, $1420 | 0, $48 | 0, $lhs | 0, $args | 0, $tailstrict | 0) | 0;
     $1444 = __THREW__;
     __THREW__ = 0;
     if ($1444 & 1) {
      label = 390;
      break L374;
     }
     HEAP32[$lhs >> 2] = $1443;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1017);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1018);
     $1446 = HEAP32[$args >> 2] | 0;
     $1448 = $1446;
     if ($1446) {
      $1449 = HEAP32[$1006 >> 2] | 0;
      if (($1449 | 0) != ($1446 | 0)) HEAP32[$1006 >> 2] = $1449 + (~(($1449 + -4 - $1448 | 0) >>> 2) << 2);
      __ZdlPv($1446);
     }
    } else if (($1224 | 0) == 2) {
     __THREW__ = 0;
     $1225 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
     $1226 = __THREW__;
     __THREW__ = 0;
     if ($1226 & 1) {
      label = 346;
      break L374;
     }
     __THREW__ = 0;
     invoke_viiii(13, $end | 0, $this | 0, 3, 0);
     $1228 = __THREW__;
     __THREW__ = 0;
     if ($1228 & 1) {
      label = 346;
      break L374;
     }
     $1230 = HEAP32[$985 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $42 | 0, $59 | 0);
     $1231 = __THREW__;
     __THREW__ = 0;
     if ($1231 & 1) {
      label = 348;
      break L374;
     }
     $1233 = $65;
     $1238 = HEAP32[$1233 + 4 >> 2] | 0;
     $1239 = $994;
     HEAP32[$1239 >> 2] = HEAP32[$1233 >> 2];
     HEAP32[$1239 + 4 >> 2] = $1238;
     $1243 = $993;
     $1248 = HEAP32[$1243 + 4 >> 2] | 0;
     $1249 = $995;
     HEAP32[$1249 >> 2] = HEAP32[$1243 >> 2];
     HEAP32[$1249 + 4 >> 2] = $1248;
     __THREW__ = 0;
     $1253 = invoke_ii(67, 56) | 0;
     $1254 = __THREW__;
     __THREW__ = 0;
     if ($1254 & 1) {
      label = 349;
      break L374;
     }
     $1256 = HEAP32[$lhs >> 2] | 0;
     HEAP32[$1253 >> 2] = 35936;
     __THREW__ = 0;
     invoke_vii(40, $1253 + 4 | 0, $42 | 0);
     $1258 = __THREW__;
     __THREW__ = 0;
     if ($1258 & 1) {
      $$lcssa605 = $1253;
      label = 344;
      break L374;
     }
     $1260 = $1253 + 16 | 0;
     HEAP32[$1260 + 0 >> 2] = HEAP32[$994 + 0 >> 2];
     HEAP32[$1260 + 4 >> 2] = HEAP32[$994 + 4 >> 2];
     HEAP32[$1260 + 8 >> 2] = HEAP32[$994 + 8 >> 2];
     HEAP32[$1260 + 12 >> 2] = HEAP32[$994 + 12 >> 2];
     HEAP32[$1253 + 32 >> 2] = 9;
     HEAP32[$1253 + 36 >> 2] = 0;
     HEAP32[$1253 + 40 >> 2] = 0;
     HEAP32[$1253 + 44 >> 2] = 0;
     HEAP32[$1253 >> 2] = 37360;
     HEAP32[$1253 + 48 >> 2] = $1256;
     HEAP32[$1253 + 52 >> 2] = $1225;
     HEAP32[$2 >> 2] = $1253;
     $1267 = $1230 + 16 | 0;
     $1268 = HEAP32[$1267 >> 2] | 0;
     if ($1268 >>> 0 < (HEAP32[$1230 + 20 >> 2] | 0) >>> 0) {
      if (!$1268) $1274 = 0; else {
       HEAP32[$1268 >> 2] = $1253;
       $1274 = HEAP32[$1267 >> 2] | 0;
      }
      HEAP32[$1267 >> 2] = $1274 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1230 + 12 | 0, $2 | 0);
      $1276 = __THREW__;
      __THREW__ = 0;
      if ($1276 & 1) {
       label = 349;
       break L374;
      }
     }
     HEAP32[$lhs >> 2] = $1253;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($996);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($997);
    } else if (($1224 | 0) == 7) {
     __THREW__ = 0;
     invoke_viiii(13, $field | 0, $this | 0, 11, 0);
     $1286 = __THREW__;
     __THREW__ = 0;
     if ($1286 & 1) {
      label = 346;
      break L374;
     }
     $1288 = HEAP32[$985 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $43 | 0, $998 | 0);
     $1289 = __THREW__;
     __THREW__ = 0;
     if ($1289 & 1) {
      label = 365;
      break L374;
     }
     $1291 = $1000;
     $1296 = HEAP32[$1291 + 4 >> 2] | 0;
     $1297 = $1001;
     HEAP32[$1297 >> 2] = HEAP32[$1291 >> 2];
     HEAP32[$1297 + 4 >> 2] = $1296;
     $1301 = $999;
     $1306 = HEAP32[$1301 + 4 >> 2] | 0;
     $1307 = $1002;
     HEAP32[$1307 >> 2] = HEAP32[$1301 >> 2];
     HEAP32[$1307 + 4 >> 2] = $1306;
     __THREW__ = 0;
     $1311 = invoke_iiii(31, $1288 | 0, $43 | 0, $1003 | 0) | 0;
     $1312 = __THREW__;
     __THREW__ = 0;
     if ($1312 & 1) {
      label = 366;
      break L374;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     $1314 = HEAP32[$985 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $44 | 0, $59 | 0);
     $1315 = __THREW__;
     __THREW__ = 0;
     if ($1315 & 1) {
      label = 365;
      break L374;
     }
     $1317 = $65;
     $1322 = HEAP32[$1317 + 4 >> 2] | 0;
     $1323 = $1004;
     HEAP32[$1323 >> 2] = HEAP32[$1317 >> 2];
     HEAP32[$1323 + 4 >> 2] = $1322;
     $1327 = $999;
     $1332 = HEAP32[$1327 + 4 >> 2] | 0;
     $1333 = $1005;
     HEAP32[$1333 >> 2] = HEAP32[$1327 >> 2];
     HEAP32[$1333 + 4 >> 2] = $1332;
     __THREW__ = 0;
     $1337 = invoke_ii(67, 56) | 0;
     $1338 = __THREW__;
     __THREW__ = 0;
     if ($1338 & 1) {
      label = 367;
      break L374;
     }
     $1340 = HEAP32[$lhs >> 2] | 0;
     HEAP32[$1337 >> 2] = 35936;
     __THREW__ = 0;
     invoke_vii(40, $1337 + 4 | 0, $44 | 0);
     $1342 = __THREW__;
     __THREW__ = 0;
     if ($1342 & 1) {
      $$lcssa604 = $1337;
      label = 363;
      break L374;
     }
     $1344 = $1337 + 16 | 0;
     HEAP32[$1344 + 0 >> 2] = HEAP32[$1004 + 0 >> 2];
     HEAP32[$1344 + 4 >> 2] = HEAP32[$1004 + 4 >> 2];
     HEAP32[$1344 + 8 >> 2] = HEAP32[$1004 + 8 >> 2];
     HEAP32[$1344 + 12 >> 2] = HEAP32[$1004 + 12 >> 2];
     HEAP32[$1337 + 32 >> 2] = 9;
     HEAP32[$1337 + 36 >> 2] = 0;
     HEAP32[$1337 + 40 >> 2] = 0;
     HEAP32[$1337 + 44 >> 2] = 0;
     HEAP32[$1337 >> 2] = 37360;
     HEAP32[$1337 + 48 >> 2] = $1340;
     HEAP32[$1337 + 52 >> 2] = $1311;
     HEAP32[$1 >> 2] = $1337;
     $1351 = $1314 + 16 | 0;
     $1352 = HEAP32[$1351 >> 2] | 0;
     if ($1352 >>> 0 < (HEAP32[$1314 + 20 >> 2] | 0) >>> 0) {
      if (!$1352) $1358 = 0; else {
       HEAP32[$1352 >> 2] = $1337;
       $1358 = HEAP32[$1351 >> 2] | 0;
      }
      HEAP32[$1351 >> 2] = $1358 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1314 + 12 | 0, $1 | 0);
      $1360 = __THREW__;
      __THREW__ = 0;
      if ($1360 & 1) {
       label = 367;
       break L374;
      }
     }
     HEAP32[$lhs >> 2] = $1337;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($998);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1003);
    } else if (!$1224) {
     __THREW__ = 0;
     invoke_viiiii(5, $end10 | 0, $this | 0, $obj | 0, $op7 | 0, $obj_level | 0);
     $1466 = __THREW__;
     __THREW__ = 0;
     if ($1466 & 1) {
      label = 346;
      break L374;
     }
     $1468 = HEAP32[$985 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $49 | 0, $59 | 0);
     $1469 = __THREW__;
     __THREW__ = 0;
     if ($1469 & 1) {
      label = 407;
      break L374;
     }
     $1471 = $65;
     $1476 = HEAP32[$1471 + 4 >> 2] | 0;
     $1477 = $1020;
     HEAP32[$1477 >> 2] = HEAP32[$1471 >> 2];
     HEAP32[$1477 + 4 >> 2] = $1476;
     $1481 = $1019;
     $1486 = HEAP32[$1481 + 4 >> 2] | 0;
     $1487 = $1021;
     HEAP32[$1487 >> 2] = HEAP32[$1481 >> 2];
     HEAP32[$1487 + 4 >> 2] = $1486;
     __THREW__ = 0;
     $1491 = invoke_ii(67, 60) | 0;
     $1492 = __THREW__;
     __THREW__ = 0;
     if ($1492 & 1) {
      label = 408;
      break L374;
     }
     $1494 = HEAP32[$lhs >> 2] | 0;
     $1495 = HEAP32[$obj >> 2] | 0;
     HEAP32[$1491 >> 2] = 35936;
     __THREW__ = 0;
     invoke_vii(40, $1491 + 4 | 0, $49 | 0);
     $1497 = __THREW__;
     __THREW__ = 0;
     if ($1497 & 1) {
      $$lcssa603 = $1491;
      label = 405;
      break L374;
     }
     $1499 = $1491 + 16 | 0;
     HEAP32[$1499 + 0 >> 2] = HEAP32[$1020 + 0 >> 2];
     HEAP32[$1499 + 4 >> 2] = HEAP32[$1020 + 4 >> 2];
     HEAP32[$1499 + 8 >> 2] = HEAP32[$1020 + 8 >> 2];
     HEAP32[$1499 + 12 >> 2] = HEAP32[$1020 + 12 >> 2];
     HEAP32[$1491 + 32 >> 2] = 2;
     HEAP32[$1491 + 36 >> 2] = 0;
     HEAP32[$1491 + 40 >> 2] = 0;
     HEAP32[$1491 + 44 >> 2] = 0;
     HEAP32[$1491 >> 2] = 37328;
     HEAP32[$1491 + 48 >> 2] = $1494;
     HEAP32[$1491 + 52 >> 2] = 2;
     HEAP32[$1491 + 56 >> 2] = $1495;
     HEAP32[$0 >> 2] = $1491;
     $1507 = $1468 + 16 | 0;
     $1508 = HEAP32[$1507 >> 2] | 0;
     if ($1508 >>> 0 < (HEAP32[$1468 + 20 >> 2] | 0) >>> 0) {
      if (!$1508) $1514 = 0; else {
       HEAP32[$1508 >> 2] = $1491;
       $1514 = HEAP32[$1507 >> 2] | 0;
      }
      HEAP32[$1507 >> 2] = $1514 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1468 + 12 | 0, $0 | 0);
      $1516 = __THREW__;
      __THREW__ = 0;
      if ($1516 & 1) {
       label = 408;
       break L374;
      }
     }
     HEAP32[$lhs >> 2] = $1491;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1022);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1023);
    } else {
     if (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($982, 37240) | 0) {
      __THREW__ = 0;
      $1637 = invoke_iiii(29, $this | 0, $968 | 0, $obj_level | 0) | 0;
      $1638 = __THREW__;
      __THREW__ = 0;
      if ($1638 & 1) {
       label = 346;
       break L374;
      }
      $1641 = ($1640 | 0) == 11;
      $1642 = HEAP32[$985 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $53 | 0, $59 | 0);
      $1643 = __THREW__;
      __THREW__ = 0;
      if ($1643 & 1) {
       label = 346;
       break L374;
      }
      $1646 = $65;
      $1651 = HEAP32[$1646 + 4 >> 2] | 0;
      $1652 = $991;
      HEAP32[$1652 >> 2] = HEAP32[$1646 >> 2];
      HEAP32[$1652 + 4 >> 2] = $1651;
      $1656 = $1637 + 24 | 0;
      $1661 = HEAP32[$1656 + 4 >> 2] | 0;
      $1662 = $992;
      HEAP32[$1662 >> 2] = HEAP32[$1656 >> 2];
      HEAP32[$1662 + 4 >> 2] = $1661;
      __THREW__ = 0;
      $1666 = invoke_ii(67, 60) | 0;
      $1667 = __THREW__;
      __THREW__ = 0;
      if ($1667 & 1) {
       label = 465;
       break L374;
      }
      $1669 = HEAP32[$lhs >> 2] | 0;
      HEAP32[$1666 >> 2] = 35936;
      __THREW__ = 0;
      invoke_vii(40, $1666 + 4 | 0, $53 | 0);
      $1671 = __THREW__;
      __THREW__ = 0;
      if ($1671 & 1) {
       $$lcssa606 = $1666;
       label = 454;
       break L374;
      }
      $1673 = $1666 + 16 | 0;
      HEAP32[$1673 + 0 >> 2] = HEAP32[$991 + 0 >> 2];
      HEAP32[$1673 + 4 >> 2] = HEAP32[$991 + 4 >> 2];
      HEAP32[$1673 + 8 >> 2] = HEAP32[$991 + 8 >> 2];
      HEAP32[$1673 + 12 >> 2] = HEAP32[$991 + 12 >> 2];
      HEAP32[$1666 + 32 >> 2] = 2;
      HEAP32[$1666 + 36 >> 2] = 0;
      HEAP32[$1666 + 40 >> 2] = 0;
      HEAP32[$1666 + 44 >> 2] = 0;
      HEAP32[$1666 >> 2] = 37328;
      HEAP32[$1666 + 48 >> 2] = $1669;
      HEAP32[$1666 + 52 >> 2] = $1641 ? 10 : $1640;
      HEAP32[$1666 + 56 >> 2] = $1637;
      HEAP32[$15 >> 2] = $1666;
      $1681 = $1642 + 16 | 0;
      $1682 = HEAP32[$1681 >> 2] | 0;
      if ($1682 >>> 0 < (HEAP32[$1642 + 20 >> 2] | 0) >>> 0) {
       if (!$1682) $1688 = 0; else {
        HEAP32[$1682 >> 2] = $1666;
        $1688 = HEAP32[$1681 >> 2] | 0;
       }
       HEAP32[$1681 >> 2] = $1688 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1642 + 12 | 0, $15 | 0);
       $1690 = __THREW__;
       __THREW__ = 0;
       if ($1690 & 1) {
        label = 465;
        break L374;
       }
      }
      HEAP32[$lhs >> 2] = $1666;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
      if (!$1641) break;
      $1694 = HEAP32[$985 >> 2] | 0;
      __THREW__ = 0;
      $1695 = invoke_ii(67, 56) | 0;
      $1696 = __THREW__;
      __THREW__ = 0;
      if ($1696 & 1) {
       label = 346;
       break L374;
      }
      HEAP32[$1695 >> 2] = 35936;
      __THREW__ = 0;
      invoke_vii(40, $1695 + 4 | 0, $1666 + 4 | 0);
      $1700 = __THREW__;
      __THREW__ = 0;
      if ($1700 & 1) {
       $$lcssa608 = $1695;
       label = 463;
       break L374;
      }
      $1702 = $1695 + 16 | 0;
      $1703 = $1666 + 16 | 0;
      HEAP32[$1702 + 0 >> 2] = HEAP32[$1703 + 0 >> 2];
      HEAP32[$1702 + 4 >> 2] = HEAP32[$1703 + 4 >> 2];
      HEAP32[$1702 + 8 >> 2] = HEAP32[$1703 + 8 >> 2];
      HEAP32[$1702 + 12 >> 2] = HEAP32[$1703 + 12 >> 2];
      HEAP32[$1695 + 32 >> 2] = 19;
      HEAP32[$1695 + 36 >> 2] = 0;
      HEAP32[$1695 + 40 >> 2] = 0;
      HEAP32[$1695 + 44 >> 2] = 0;
      HEAP32[$1695 >> 2] = 37312;
      HEAP32[$1695 + 48 >> 2] = 0;
      HEAP32[$1695 + 52 >> 2] = $1666;
      HEAP32[$16 >> 2] = $1695;
      $1710 = $1694 + 16 | 0;
      $1711 = HEAP32[$1710 >> 2] | 0;
      if ($1711 >>> 0 < (HEAP32[$1694 + 20 >> 2] | 0) >>> 0) {
       if (!$1711) $1717 = 0; else {
        HEAP32[$1711 >> 2] = $1695;
        $1717 = HEAP32[$1710 >> 2] | 0;
       }
       HEAP32[$1710 >> 2] = $1717 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1694 + 12 | 0, $16 | 0);
       $1719 = __THREW__;
       __THREW__ = 0;
       if ($1719 & 1) {
        label = 346;
        break L374;
       }
      }
      HEAP32[$lhs >> 2] = $1695;
      break;
     }
     __THREW__ = 0;
     $1526 = invoke_iiii(29, $this | 0, $968 | 0, $obj_level | 0) | 0;
     $1527 = __THREW__;
     __THREW__ = 0;
     if ($1527 & 1) {
      label = 346;
      break L374;
     };
     HEAP32[$l + 0 >> 2] = 0;
     HEAP32[$l + 4 >> 2] = 0;
     HEAP32[$l + 8 >> 2] = 0;
     HEAP32[$l + 12 >> 2] = 0;
     HEAP32[$l + 16 >> 2] = 0;
     HEAP32[$l + 20 >> 2] = 0;
     HEAP32[$l + 24 >> 2] = 0;
     $1529 = HEAP32[$985 >> 2] | 0;
     __THREW__ = 0;
     invoke_viii(3, $50 | 0, 35688, 3);
     $1530 = __THREW__;
     __THREW__ = 0;
     if ($1530 & 1) {
      label = 437;
      break L374;
     }
     __THREW__ = 0;
     $1532 = invoke_iii(23, $1529 | 0, $50 | 0) | 0;
     $1533 = __THREW__;
     __THREW__ = 0;
     if ($1533 & 1) {
      label = 439;
      break L374;
     }
     __THREW__ = 0;
     $1535 = invoke_ii(67, 56) | 0;
     $1536 = __THREW__;
     __THREW__ = 0;
     if ($1536 & 1) {
      label = 439;
      break L374;
     }
     HEAP32[$1535 >> 2] = 35936;
     __THREW__ = 0;
     invoke_vii(40, $1535 + 4 | 0, $l | 0);
     $1539 = __THREW__;
     __THREW__ = 0;
     if ($1539 & 1) {
      $$lcssa609 = $1535;
      label = 422;
      break L374;
     }
     $1541 = $1535 + 16 | 0;
     HEAP32[$1541 + 0 >> 2] = HEAP32[$986 + 0 >> 2];
     HEAP32[$1541 + 4 >> 2] = HEAP32[$986 + 4 >> 2];
     HEAP32[$1541 + 8 >> 2] = HEAP32[$986 + 8 >> 2];
     HEAP32[$1541 + 12 >> 2] = HEAP32[$986 + 12 >> 2];
     HEAP32[$1535 + 32 >> 2] = 20;
     HEAP32[$1535 + 36 >> 2] = 0;
     HEAP32[$1535 + 40 >> 2] = 0;
     HEAP32[$1535 + 44 >> 2] = 0;
     HEAP32[$1535 >> 2] = 37376;
     HEAP32[$1535 + 48 >> 2] = $1532;
     HEAP32[$1535 + 52 >> 2] = $1532;
     HEAP32[$12 >> 2] = $1535;
     $1548 = $1529 + 16 | 0;
     $1549 = HEAP32[$1548 >> 2] | 0;
     if ($1549 >>> 0 < (HEAP32[$1529 + 20 >> 2] | 0) >>> 0) {
      if (!$1549) $1555 = 0; else {
       HEAP32[$1549 >> 2] = $1535;
       $1555 = HEAP32[$1548 >> 2] | 0;
      }
      HEAP32[$1548 >> 2] = $1555 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1529 + 12 | 0, $12 | 0);
      $1557 = __THREW__;
      __THREW__ = 0;
      if ($1557 & 1) {
       label = 439;
       break L374;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
     __THREW__ = 0;
     $1562 = invoke_iiii(32, HEAP32[$985 >> 2] | 0, $l | 0, 37296) | 0;
     $1563 = __THREW__;
     __THREW__ = 0;
     if ($1563 & 1) {
      label = 437;
      break L374;
     }
     $1565 = HEAP32[$985 >> 2] | 0;
     __THREW__ = 0;
     $1566 = invoke_ii(67, 56) | 0;
     $1567 = __THREW__;
     __THREW__ = 0;
     if ($1567 & 1) {
      label = 437;
      break L374;
     }
     HEAP32[$1566 >> 2] = 35936;
     __THREW__ = 0;
     invoke_vii(40, $1566 + 4 | 0, $l | 0);
     $1570 = __THREW__;
     __THREW__ = 0;
     if ($1570 & 1) {
      $$lcssa614 = $1566;
      label = 431;
      break L374;
     }
     $1572 = $1566 + 16 | 0;
     HEAP32[$1572 + 0 >> 2] = HEAP32[$986 + 0 >> 2];
     HEAP32[$1572 + 4 >> 2] = HEAP32[$986 + 4 >> 2];
     HEAP32[$1572 + 8 >> 2] = HEAP32[$986 + 8 >> 2];
     HEAP32[$1572 + 12 >> 2] = HEAP32[$986 + 12 >> 2];
     HEAP32[$1566 + 32 >> 2] = 9;
     HEAP32[$1566 + 36 >> 2] = 0;
     HEAP32[$1566 + 40 >> 2] = 0;
     HEAP32[$1566 + 44 >> 2] = 0;
     HEAP32[$1566 >> 2] = 37360;
     HEAP32[$1566 + 48 >> 2] = $1535;
     HEAP32[$1566 + 52 >> 2] = $1562;
     HEAP32[$13 >> 2] = $1566;
     $1579 = $1565 + 16 | 0;
     $1580 = HEAP32[$1579 >> 2] | 0;
     if ($1580 >>> 0 < (HEAP32[$1565 + 20 >> 2] | 0) >>> 0) {
      if (!$1580) $1586 = 0; else {
       HEAP32[$1580 >> 2] = $1566;
       $1586 = HEAP32[$1579 >> 2] | 0;
      }
      HEAP32[$1579 >> 2] = $1586 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1565 + 12 | 0, $13 | 0);
      $1588 = __THREW__;
      __THREW__ = 0;
      if ($1588 & 1) {
       label = 437;
       break L374;
      }
     }
     HEAP32[$f_mod >> 2] = $1566;
     $1592 = HEAP32[$lhs >> 2] | 0;
     HEAP32[$args11 >> 2] = 0;
     HEAP32[$987 >> 2] = 0;
     HEAP32[$988 >> 2] = 0;
     __THREW__ = 0;
     $1593 = invoke_ii(67, 8) | 0;
     $1594 = __THREW__;
     __THREW__ = 0;
     if ($1594 & 1) {
      label = 434;
      break L374;
     }
     HEAP32[$args11 >> 2] = $1593;
     HEAP32[$988 >> 2] = $1593 + 8;
     HEAP32[$1593 >> 2] = $1592;
     HEAP32[$1593 + 4 >> 2] = $1526;
     HEAP32[$987 >> 2] = $1593 + 8;
     $1599 = HEAP32[$985 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $51 | 0, $59 | 0);
     $1600 = __THREW__;
     __THREW__ = 0;
     if ($1600 & 1) {
      $$lcssa618 = $1593;
      label = 441;
      break L374;
     }
     $1605 = $65;
     $1610 = HEAP32[$1605 + 4 >> 2] | 0;
     $1611 = $989;
     HEAP32[$1611 >> 2] = HEAP32[$1605 >> 2];
     HEAP32[$1611 + 4 >> 2] = $1610;
     $1615 = $1526 + 24 | 0;
     $1620 = HEAP32[$1615 + 4 >> 2] | 0;
     $1621 = $990;
     HEAP32[$1621 >> 2] = HEAP32[$1615 >> 2];
     HEAP32[$1621 + 4 >> 2] = $1620;
     HEAP8[$52 >> 0] = 0;
     __THREW__ = 0;
     $1625 = invoke_iiiiii(14, $1599 | 0, $51 | 0, $f_mod | 0, $args11 | 0, $52 | 0) | 0;
     $1626 = __THREW__;
     __THREW__ = 0;
     if ($1626 & 1) {
      $$lcssa619 = $1593;
      label = 442;
      break L374;
     }
     HEAP32[$lhs >> 2] = $1625;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
     HEAP32[$987 >> 2] = $1593;
     __ZdlPv($1593);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($983);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($982);
   }
   switch (label | 0) {
   case 18:
    {
     $152 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body68$index16Z2D = tempRet0;
     $eh$lpad$body68$indexZ2D = $152;
     break L369;
     break;
    }
   case 261:
    {
     $1034 = ___cxa_find_matching_catch() | 0;
     $1035 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($972);
     $eh$lpad$body68$index16Z2D = $1035;
     $eh$lpad$body68$indexZ2D = $1034;
     break L369;
     break;
    }
   case 265:
    {
     $1047 = ___cxa_find_matching_catch() | 0;
     $1048 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($975);
     $eh$lpad$body68$index16Z2D = $1048;
     $eh$lpad$body68$indexZ2D = $1047;
     break L369;
     break;
    }
   case 268:
    {
     $$0 = HEAP32[$lhs >> 2] | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
     STACKTOP = sp;
     return $$0 | 0;
    }
   case 271:
    {
     $1063 = ___cxa_find_matching_catch() | 0;
     $1064 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($979);
     $eh$lpad$body68$index16Z2D = $1064;
     $eh$lpad$body68$indexZ2D = $1063;
     break L369;
     break;
    }
   case 275:
    {
     $1071 = $ss6 + 64 | 0;
     $1072 = $ss6 + 8 | 0;
     HEAP32[$1072 >> 2] = 752;
     $1073 = $ss6 + 12 | 0;
     HEAP32[$ss6 >> 2] = 900;
     HEAP32[$1071 >> 2] = 920;
     HEAP32[$ss6 + 4 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(41, $ss6 + 64 | 0, $1073 | 0);
     $1076 = __THREW__;
     __THREW__ = 0;
     if ($1076 & 1) {
      $1088 = ___cxa_find_matching_catch() | 0;
      $$0$i282 = tempRet0;
      $$01$i281 = $1088;
     } else {
      HEAP32[$ss6 + 136 >> 2] = 0;
      HEAP32[$ss6 + 140 >> 2] = -1;
      HEAP32[$ss6 >> 2] = 732;
      HEAP32[$1071 >> 2] = 772;
      HEAP32[$1072 >> 2] = 752;
      __THREW__ = 0;
      invoke_vi(177, $1073 | 0);
      $1080 = __THREW__;
      __THREW__ = 0;
      do if ($1080 & 1) {
       $1090 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body$i279$index94Z2D = tempRet0;
       $eh$lpad$body$i279$indexZ2D = $1090;
      } else {
       HEAP32[$1073 >> 2] = 1064;
       $1082 = $ss6 + 44 | 0;
       HEAP32[$1082 + 0 >> 2] = 0;
       HEAP32[$1082 + 4 >> 2] = 0;
       HEAP32[$1082 + 8 >> 2] = 0;
       HEAP32[$1082 + 12 >> 2] = 0;
       HEAP32[$ss6 + 60 >> 2] = 24;
       HEAP32[$3 + 0 >> 2] = 0;
       HEAP32[$3 + 4 >> 2] = 0;
       HEAP32[$3 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(42, $1073 | 0, $3 | 0);
       $1084 = __THREW__;
       __THREW__ = 0;
       if ($1084 & 1) {
        $1086 = ___cxa_find_matching_catch() | 0;
        $1087 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1082);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1073);
        $eh$lpad$body$i279$index94Z2D = $1087;
        $eh$lpad$body$i279$indexZ2D = $1086;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
       __THREW__ = 0;
       $1092 = invoke_iiii(25, $1072 | 0, 37248, 23) | 0;
       $1093 = __THREW__;
       __THREW__ = 0;
       L541 : do if ($1093 & 1) label = 299; else {
        $this$idx45$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $1095 = $this$idx45$val$idx$val + 8 | 0;
        HEAP32[$39 >> 2] = HEAP32[$1095 >> 2];
        $1097 = $39 + 4 | 0;
        __THREW__ = 0;
        invoke_vii(40, $1097 | 0, $this$idx45$val$idx$val + 12 | 0);
        $1099 = __THREW__;
        __THREW__ = 0;
        if ($1099 & 1) label = 299; else {
         HEAP32[$39 >> 2] = HEAP32[$1095 >> 2];
         $1102 = $39 + 16 | 0;
         __THREW__ = 0;
         invoke_vii(40, $1102 | 0, $this$idx45$val$idx$val + 24 | 0);
         $1104 = __THREW__;
         __THREW__ = 0;
         if ($1104 & 1) {
          $1106 = ___cxa_find_matching_catch() | 0;
          $1107 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1097);
          $eh$lpad$body290$index99Z2D = $1107;
          $eh$lpad$body290$indexZ2D = $1106;
          label = 300;
          break;
         }
         $1108 = $39 + 28 | 0;
         $1109 = $this$idx45$val$idx$val + 36 | 0;
         HEAP32[$1108 + 0 >> 2] = HEAP32[$1109 + 0 >> 2];
         HEAP32[$1108 + 4 >> 2] = HEAP32[$1109 + 4 >> 2];
         HEAP32[$1108 + 8 >> 2] = HEAP32[$1109 + 8 >> 2];
         HEAP32[$1108 + 12 >> 2] = HEAP32[$1109 + 12 >> 2];
         HEAP32[$39 >> 2] = HEAP32[$1095 >> 2];
         $1111 = HEAP8[$1097 >> 0] | 0;
         if (!($1111 & 1)) {
          $1121 = $1097 + 1 | 0;
          $1122 = ($1111 & 255) >>> 1;
         } else {
          $1121 = HEAP32[$39 + 12 >> 2] | 0;
          $1122 = HEAP32[$39 + 8 >> 2] | 0;
         }
         __THREW__ = 0;
         invoke_iiii(25, $1092 | 0, $1121 | 0, $1122 | 0) | 0;
         $1123 = __THREW__;
         __THREW__ = 0;
         if ($1123 & 1) {
          $1156 = ___cxa_find_matching_catch() | 0;
          $1157 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1102);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1097);
          $$1615 = $1156;
          $$1633 = $1157;
          break;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1102);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1097);
         $1125 = ___cxa_allocate_exception(40) | 0;
         $this$idx44$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
         $1126 = $this$idx44$val$idx$val + 8 | 0;
         HEAP32[$40 >> 2] = HEAP32[$1126 >> 2];
         $1128 = $40 + 4 | 0;
         __THREW__ = 0;
         invoke_vii(40, $1128 | 0, $this$idx44$val$idx$val + 12 | 0);
         $1130 = __THREW__;
         __THREW__ = 0;
         do if ($1130 & 1) {
          $1158 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body297$index104Z2D = tempRet0;
          $eh$lpad$body297$indexZ2D = $1158;
          label = 303;
         } else {
          HEAP32[$40 >> 2] = HEAP32[$1126 >> 2];
          $1133 = $40 + 16 | 0;
          __THREW__ = 0;
          invoke_vii(40, $1133 | 0, $this$idx44$val$idx$val + 24 | 0);
          $1135 = __THREW__;
          __THREW__ = 0;
          if ($1135 & 1) {
           $1137 = ___cxa_find_matching_catch() | 0;
           $1138 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1128);
           $eh$lpad$body297$index104Z2D = $1138;
           $eh$lpad$body297$indexZ2D = $1137;
           label = 303;
           break;
          }
          $1139 = $40 + 28 | 0;
          $1140 = $this$idx44$val$idx$val + 36 | 0;
          HEAP32[$1139 + 0 >> 2] = HEAP32[$1140 + 0 >> 2];
          HEAP32[$1139 + 4 >> 2] = HEAP32[$1140 + 4 >> 2];
          HEAP32[$1139 + 8 >> 2] = HEAP32[$1140 + 8 >> 2];
          HEAP32[$1139 + 12 >> 2] = HEAP32[$1140 + 12 >> 2];
          HEAP32[$40 >> 2] = HEAP32[$1126 >> 2];
          __THREW__ = 0;
          invoke_vii(43, $41 | 0, $1073 | 0);
          $1142 = __THREW__;
          __THREW__ = 0;
          if ($1142 & 1) {
           $1160 = ___cxa_find_matching_catch() | 0;
           $$1 = 1;
           $$1414 = $1160;
           $$1431 = tempRet0;
          } else {
           __THREW__ = 0;
           invoke_vii(40, $1125 | 0, $1133 | 0);
           $1144 = __THREW__;
           __THREW__ = 0;
           do if ($1144 & 1) {
            $$02 = 1;
            label = 305;
           } else {
            $1146 = $1125 + 12 | 0;
            HEAP32[$1146 + 0 >> 2] = HEAP32[$1139 + 0 >> 2];
            HEAP32[$1146 + 4 >> 2] = HEAP32[$1139 + 4 >> 2];
            HEAP32[$1146 + 8 >> 2] = HEAP32[$1139 + 8 >> 2];
            HEAP32[$1146 + 12 >> 2] = HEAP32[$1139 + 12 >> 2];
            __THREW__ = 0;
            invoke_vii(40, $1125 + 28 | 0, $41 | 0);
            $1148 = __THREW__;
            __THREW__ = 0;
            if ($1148 & 1) {
             $1150 = ___cxa_find_matching_catch() | 0;
             $1151 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1125);
             $$02$lpad$bodyZZ2D = 1;
             $eh$lpad$body303$index109Z2D = $1151;
             $eh$lpad$body303$indexZ2D = $1150;
             break;
            }
            __THREW__ = 0;
            invoke_viii(4, $1125 | 0, 48, 176);
            $1152 = __THREW__;
            __THREW__ = 0;
            if ($1152 & 1) {
             $$02 = 0;
             label = 305;
             break;
            }
           } while (0);
           if ((label | 0) == 305) {
            $1162 = ___cxa_find_matching_catch() | 0;
            $$02$lpad$bodyZZ2D = $$02;
            $eh$lpad$body303$index109Z2D = tempRet0;
            $eh$lpad$body303$indexZ2D = $1162;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
           $$1 = $$02$lpad$bodyZZ2D;
           $$1414 = $eh$lpad$body303$indexZ2D;
           $$1431 = $eh$lpad$body303$index109Z2D;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1133);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1128);
          if ($$1) {
           $$1532384 = $$1431;
           $$15385 = $$1414;
          } else {
           $$1615 = $$1414;
           $$1633 = $$1431;
           break L541;
          }
         } while (0);
         if ((label | 0) == 303) {
          $$1532384 = $eh$lpad$body297$index104Z2D;
          $$15385 = $eh$lpad$body297$indexZ2D;
         }
         ___cxa_free_exception($1125 | 0);
         $$1615 = $$15385;
         $$1633 = $$1532384;
        }
       } while (0);
       if ((label | 0) == 299) {
        $1154 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body290$index99Z2D = tempRet0;
        $eh$lpad$body290$indexZ2D = $1154;
        label = 300;
       }
       if ((label | 0) == 300) {
        $$1615 = $eh$lpad$body290$indexZ2D;
        $$1633 = $eh$lpad$body290$index99Z2D;
       }
       HEAP32[$ss6 >> 2] = 732;
       HEAP32[$1071 >> 2] = 772;
       HEAP32[$1072 >> 2] = 752;
       HEAP32[$1073 >> 2] = 1064;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1082);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1073);
       __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1071);
       $$25 = $$1615;
       $$2542 = $$1633;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
       ___resumeException($$25 | 0);
      } while (0);
      $$0$i282 = $eh$lpad$body$i279$index94Z2D;
      $$01$i281 = $eh$lpad$body$i279$indexZ2D;
     }
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1071);
     $eh$lpad$body68$index16Z2D = $$0$i282;
     $eh$lpad$body68$indexZ2D = $$01$i281;
     break L369;
     break;
    }
   case 326:
    {
     $$0 = HEAP32[$lhs >> 2] | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
     STACKTOP = sp;
     return $$0 | 0;
    }
   case 328:
    {
     $$0 = HEAP32[$lhs >> 2] | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
     STACKTOP = sp;
     return $$0 | 0;
    }
   case 329:
    {
     $$0 = HEAP32[$lhs >> 2] | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
     STACKTOP = sp;
     return $$0 | 0;
    }
   case 332:
    {
     $1207 = ___cxa_find_matching_catch() | 0;
     $1208 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($982);
     $eh$lpad$body68$index16Z2D = $1208;
     $eh$lpad$body68$indexZ2D = $1207;
     break L369;
     break;
    }
   case 344:
    {
     $1278 = ___cxa_find_matching_catch() | 0;
     $1279 = tempRet0;
     __ZdlPv($$lcssa605);
     $eh$lpad$body321$index119Z2D = $1279;
     $eh$lpad$body321$indexZ2D = $1278;
     label = 350;
     break;
    }
   case 346:
    {
     $1280 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index114Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $1280;
     label = 347;
     break;
    }
   case 348:
    {
     $$17 = ___cxa_find_matching_catch() | 0;
     $$1734 = tempRet0;
     label = 351;
     break;
    }
   case 349:
    {
     $1284 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body321$index119Z2D = tempRet0;
     $eh$lpad$body321$indexZ2D = $1284;
     label = 350;
     break;
    }
   case 363:
    {
     $1362 = ___cxa_find_matching_catch() | 0;
     $1363 = tempRet0;
     __ZdlPv($$lcssa604);
     $eh$lpad$body330$index124Z2D = $1363;
     $eh$lpad$body330$indexZ2D = $1362;
     label = 368;
     break;
    }
   case 365:
    {
     $$1816 = ___cxa_find_matching_catch() | 0;
     $$1835 = tempRet0;
     label = 369;
     break;
    }
   case 366:
    {
     $1366 = ___cxa_find_matching_catch() | 0;
     $1367 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     $$1816 = $1366;
     $$1835 = $1367;
     label = 369;
     break;
    }
   case 367:
    {
     $1368 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body330$index124Z2D = tempRet0;
     $eh$lpad$body330$indexZ2D = $1368;
     label = 368;
     break;
    }
   case 374:
    {
     $1383 = ___cxa_find_matching_catch() | 0;
     $1384 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1008);
     $eh$lpad$body342$index130Z2D = $1384;
     $eh$lpad$body342$indexZ2D = $1383;
     label = 383;
     break;
    }
   case 378:
    {
     $1397 = ___cxa_find_matching_catch() | 0;
     $1398 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1011);
     $eh$lpad$body342$index130Z2D = $1398;
     $eh$lpad$body342$indexZ2D = $1397;
     label = 383;
     break;
    }
   case 380:
    {
     $$20 = ___cxa_find_matching_catch() | 0;
     $$2037 = tempRet0;
     label = 392;
     break;
    }
   case 381:
    {
     $1416 = ___cxa_find_matching_catch() | 0;
     $1417 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
     $$20 = $1416;
     $$2037 = $1417;
     label = 392;
     break;
    }
   case 382:
    {
     $1418 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body342$index130Z2D = tempRet0;
     $eh$lpad$body342$indexZ2D = $1418;
     label = 383;
     break;
    }
   case 390:
    {
     $1455 = ___cxa_find_matching_catch() | 0;
     $1456 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
     $$19 = $1455;
     $$1936 = $1456;
     label = 391;
     break;
    }
   case 405:
    {
     $1518 = ___cxa_find_matching_catch() | 0;
     $1519 = tempRet0;
     __ZdlPv($$lcssa603);
     $eh$lpad$body339$index136Z2D = $1519;
     $eh$lpad$body339$indexZ2D = $1518;
     label = 409;
     break;
    }
   case 407:
    {
     $$21 = ___cxa_find_matching_catch() | 0;
     $$2138 = tempRet0;
     label = 410;
     break;
    }
   case 408:
    {
     $1522 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body339$index136Z2D = tempRet0;
     $eh$lpad$body339$indexZ2D = $1522;
     label = 409;
     break;
    }
   case 422:
    {
     $1559 = ___cxa_find_matching_catch() | 0;
     $1560 = tempRet0;
     __ZdlPv($$lcssa609);
     $eh$lpad$body110$index148Z2D = $1560;
     $eh$lpad$body110$indexZ2D = $1559;
     label = 440;
     break;
    }
   case 431:
    {
     $1590 = ___cxa_find_matching_catch() | 0;
     $1591 = tempRet0;
     __ZdlPv($$lcssa614);
     $eh$lpad$body70$index142Z2D = $1591;
     $eh$lpad$body70$indexZ2D = $1590;
     label = 438;
     break;
    }
   case 434:
    {
     $1602 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body70$index142Z2D = tempRet0;
     $eh$lpad$body70$indexZ2D = $1602;
     label = 438;
     break;
    }
   case 437:
    {
     $1628 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body70$index142Z2D = tempRet0;
     $eh$lpad$body70$indexZ2D = $1628;
     label = 438;
     break;
    }
   case 439:
    {
     $1630 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body110$index148Z2D = tempRet0;
     $eh$lpad$body110$indexZ2D = $1630;
     label = 440;
     break;
    }
   case 441:
    {
     $$22 = ___cxa_find_matching_catch() | 0;
     $$2239 = tempRet0;
     $1636 = $$lcssa618;
     label = 443;
     break;
    }
   case 442:
    {
     $1634 = ___cxa_find_matching_catch() | 0;
     $1635 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
     $$22 = $1634;
     $$2239 = $1635;
     $1636 = $$lcssa619;
     label = 443;
     break;
    }
   case 454:
    {
     $1692 = ___cxa_find_matching_catch() | 0;
     $1693 = tempRet0;
     __ZdlPv($$lcssa606);
     $eh$lpad$body57$index153Z2D = $1693;
     $eh$lpad$body57$indexZ2D = $1692;
     label = 466;
     break;
    }
   case 463:
    {
     $1721 = ___cxa_find_matching_catch() | 0;
     $1722 = tempRet0;
     __ZdlPv($$lcssa608);
     $eh$lpad$body$index114Z2D = $1722;
     $eh$lpad$body$indexZ2D = $1721;
     label = 347;
     break;
    }
   case 465:
    {
     $1723 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body57$index153Z2D = tempRet0;
     $eh$lpad$body57$indexZ2D = $1723;
     label = 466;
     break;
    }
   }
   if ((label | 0) == 347) {
    $$24 = $eh$lpad$body$indexZ2D;
    $$2441 = $eh$lpad$body$index114Z2D;
   } else if ((label | 0) == 350) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
    $$17 = $eh$lpad$body321$indexZ2D;
    $$1734 = $eh$lpad$body321$index119Z2D;
    label = 351;
   } else if ((label | 0) == 368) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
    $$1816 = $eh$lpad$body330$indexZ2D;
    $$1835 = $eh$lpad$body330$index124Z2D;
    label = 369;
   } else if ((label | 0) == 383) {
    $$19 = $eh$lpad$body342$indexZ2D;
    $$1936 = $eh$lpad$body342$index130Z2D;
    label = 391;
   } else if ((label | 0) == 409) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
    $$21 = $eh$lpad$body339$indexZ2D;
    $$2138 = $eh$lpad$body339$index136Z2D;
    label = 410;
   } else if ((label | 0) == 438) {
    $$23 = $eh$lpad$body70$indexZ2D;
    $$2340 = $eh$lpad$body70$index142Z2D;
    label = 444;
   } else if ((label | 0) == 440) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
    $$23 = $eh$lpad$body110$indexZ2D;
    $$2340 = $eh$lpad$body110$index148Z2D;
    label = 444;
   } else if ((label | 0) == 443) {
    HEAP32[$987 >> 2] = $1636;
    __ZdlPv($1636);
    $$23 = $$22;
    $$2340 = $$2239;
    label = 444;
   } else if ((label | 0) == 466) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
    $$24 = $eh$lpad$body57$indexZ2D;
    $$2441 = $eh$lpad$body57$index153Z2D;
   }
   if ((label | 0) == 351) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($996);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($997);
    $$24 = $$17;
    $$2441 = $$1734;
   } else if ((label | 0) == 369) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($998);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1003);
    $$24 = $$1816;
    $$2441 = $$1835;
   } else if ((label | 0) == 391) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1017);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1018);
    $$20 = $$19;
    $$2037 = $$1936;
    label = 392;
   } else if ((label | 0) == 410) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1022);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1023);
    $$24 = $$21;
    $$2441 = $$2138;
   } else if ((label | 0) == 444) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
    $$24 = $$23;
    $$2441 = $$2340;
   }
   if ((label | 0) == 392) {
    $1457 = HEAP32[$args >> 2] | 0;
    $1459 = $1457;
    if (!$1457) {
     $$24 = $$20;
     $$2441 = $$2037;
    } else {
     $1460 = HEAP32[$1006 >> 2] | 0;
     if (($1460 | 0) != ($1457 | 0)) HEAP32[$1006 >> 2] = $1460 + (~(($1460 + -4 - $1459 | 0) >>> 2) << 2);
     __ZdlPv($1457);
     $$24 = $$20;
     $$2441 = $$2037;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($983);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($982);
   $$25 = $$24;
   $$2542 = $$2441;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
   ___resumeException($$25 | 0);
  }
 } while (0);
 if ((label | 0) == 19) {
  $154 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body68$index16Z2D = tempRet0;
  $eh$lpad$body68$indexZ2D = $154;
 }
 $$25 = $eh$lpad$body68$indexZ2D;
 $$2542 = $eh$lpad$body68$index16Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
 ___resumeException($$25 | 0);
 return 0;
}
function __ZN12_GLOBAL__N_16Parser13parseTerminalEj($this, $obj_level) {
 $this = $this | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$0$i208 = 0, $$01$i = 0, $$01$i$i380 = 0, $$01$i207 = 0, $$014401 = 0, $$03 = 0, $$034 = 0, $$036 = 0, $$05 = 0, $$07402 = 0, $$10 = 0, $$1024 = 0, $$1125412 = 0, $$11413 = 0, $$115404 = 0, $$12 = 0, $$1210 = 0, $$1226 = 0, $$13 = 0, $$1327 = 0, $$1411 = 0, $$1428 = 0, $$15 = 0, $$1529 = 0, $$1612 = 0, $$1630 = 0, $$1731416 = 0, $$17417 = 0, $$1813 = 0, $$1832 = 0, $$18405 = 0, $$19 = 0, $$1933 = 0, $$2 = 0, $$216 = 0, $$29 = 0, $$3 = 0, $$317 = 0, $$4 = 0, $$418 = 0, $$519408 = 0, $$5409 = 0, $$6 = 0, $$620 = 0, $$7 = 0, $$721 = 0, $$8 = 0, $$822 = 0, $$9 = 0, $$923 = 0, $$pn = 0, $$pre$phi435Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $1000 = 0, $1005 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1015 = 0, $1016 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1021 = 0, $1022 = 0, $1025 = 0, $1026 = 0, $103 = 0, $1031 = 0, $1032 = 0, $1037 = 0, $1042 = 0, $1043 = 0, $1047 = 0, $1048 = 0, $105 = 0, $1051 = 0, $1053 = 0, $1059 = 0, $1060 = 0, $1066 = 0, $1068 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1075 = 0, $1076 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1085 = 0, $1086 = 0, $109 = 0, $1091 = 0, $1096 = 0, $1097 = 0, $11 = 0, $1101 = 0, $1102 = 0, $1105 = 0, $1107 = 0, $1113 = 0, $1114 = 0, $1120 = 0, $1122 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1129 = 0, $1130 = 0, $1133 = 0, $1134 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1145 = 0, $1150 = 0, $1151 = 0, $1155 = 0, $1156 = 0, $1159 = 0, $116 = 0, $1161 = 0, $1166 = 0, $1167 = 0, $1173 = 0, $1175 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1181 = 0, $1184 = 0, $1185 = 0, $1188 = 0, $1189 = 0, $1194 = 0, $1195 = 0, $12 = 0, $120 = 0, $1200 = 0, $1205 = 0, $1206 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1214 = 0, $1215 = 0, $1217 = 0, $1219 = 0, $1220 = 0, $1223 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1236 = 0, $1237 = 0, $1243 = 0, $1245 = 0, $1247 = 0, $125 = 0, $1250 = 0, $1252 = 0, $1255 = 0, $1258 = 0, $1259 = 0, $1262 = 0, $1263 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1274 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1291 = 0, $1293 = 0, $1294 = 0, $1297 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1303 = 0, $1304 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1317 = 0, $1319 = 0, $1321 = 0, $1324 = 0, $1326 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1333 = 0, $1335 = 0, $1337 = 0, $1339 = 0, $1340 = 0, $1341 = 0, $1343 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1352 = 0, $1353 = 0, $1358 = 0, $1359 = 0, $1364 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1374 = 0, $1375 = 0, $1377 = 0, $1378 = 0, $1380 = 0, $1381 = 0, $1384 = 0, $1386 = 0, $1393 = 0, $1394 = 0, $14 = 0, $140 = 0, $1400 = 0, $1402 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1408 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1415 = 0, $1416 = 0, $142 = 0, $1421 = 0, $1422 = 0, $1427 = 0, $1432 = 0, $1433 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1441 = 0, $1442 = 0, $1445 = 0, $1447 = 0, $145 = 0, $1454 = 0, $1455 = 0, $146 = 0, $1461 = 0, $1463 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1474 = 0, $1475 = 0, $1480 = 0, $1481 = 0, $1486 = 0, $149 = 0, $1491 = 0, $1492 = 0, $1496 = 0, $1497 = 0, $15 = 0, $1500 = 0, $1502 = 0, $1507 = 0, $1508 = 0, $151 = 0, $1514 = 0, $1516 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1523 = 0, $1524 = 0, $1527 = 0, $1528 = 0, $1533 = 0, $1534 = 0, $1539 = 0, $154 = 0, $1544 = 0, $1545 = 0, $1549 = 0, $1550 = 0, $1553 = 0, $1555 = 0, $1560 = 0, $1561 = 0, $1567 = 0, $1569 = 0, $157 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1575 = 0, $1576 = 0, $1579 = 0, $1580 = 0, $1582 = 0, $1583 = 0, $1589 = 0, $1591 = 0, $1592 = 0, $1597 = 0, $1598 = 0, $16 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1604 = 0, $1606 = 0, $163 = 0, $164 = 0, $167 = 0, $168 = 0, $17 = 0, $173 = 0, $174 = 0, $179 = 0, $18 = 0, $184 = 0, $185 = 0, $189 = 0, $19 = 0, $190 = 0, $193 = 0, $195 = 0, $2 = 0, $20 = 0, $203 = 0, $204 = 0, $21 = 0, $210 = 0, $212 = 0, $214 = 0, $215 = 0, $216 = 0, $218 = 0, $22 = 0, $220 = 0, $221 = 0, $223 = 0, $225 = 0, $227 = 0, $23 = 0, $230 = 0, $232 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $24 = 0, $246 = 0, $248 = 0, $25 = 0, $250 = 0, $251 = 0, $259 = 0, $26 = 0, $261 = 0, $265 = 0, $267 = 0, $269 = 0, $27 = 0, $272 = 0, $274 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $281 = 0, $283 = 0, $284 = 0, $286 = 0, $289 = 0, $29 = 0, $294 = 0, $296 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $309 = 0, $31 = 0, $310 = 0, $312 = 0, $314 = 0, $315 = 0, $317 = 0, $318 = 0, $32 = 0, $321 = 0, $323 = 0, $324 = 0, $33 = 0, $331 = 0, $332 = 0, $338 = 0, $34 = 0, $340 = 0, $342 = 0, $343 = 0, $346 = 0, $347 = 0, $349 = 0, $35 = 0, $353 = 0, $354 = 0, $356 = 0, $358 = 0, $36 = 0, $360 = 0, $363 = 0, $365 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $372 = 0, $374 = 0, $375 = 0, $377 = 0, $38 = 0, $380 = 0, $385 = 0, $387 = 0, $388 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $395 = 0, $397 = 0, $4 = 0, $40 = 0, $404 = 0, $405 = 0, $41 = 0, $411 = 0, $413 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $425 = 0, $426 = 0, $428 = 0, $43 = 0, $432 = 0, $437 = 0, $438 = 0, $44 = 0, $443 = 0, $448 = 0, $449 = 0, $45 = 0, $453 = 0, $454 = 0, $456 = 0, $458 = 0, $46 = 0, $460 = 0, $462 = 0, $464 = 0, $466 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $473 = 0, $477 = 0, $478 = 0, $48 = 0, $481 = 0, $482 = 0, $484 = 0, $485 = 0, $486 = 0, $489 = 0, $49 = 0, $491 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $505 = 0, $507 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $52 = 0, $520 = 0, $521 = 0, $523 = 0, $527 = 0, $53 = 0, $532 = 0, $533 = 0, $538 = 0, $543 = 0, $544 = 0, $548 = 0, $549 = 0, $55 = 0, $553 = 0, $555 = 0, $557 = 0, $558 = 0, $561 = 0, $562 = 0, $563 = 0, $566 = 0, $570 = 0, $572 = 0, $574 = 0, $576 = 0, $577 = 0, $578 = 0, $58 = 0, $580 = 0, $582 = 0, $583 = 0, $585 = 0, $587 = 0, $588 = 0, $590 = 0, $592 = 0, $594 = 0, $596 = 0, $597 = 0, $598 = 0, $6 = 0, $60 = 0, $600 = 0, $602 = 0, $604 = 0, $605 = 0, $608 = 0, $609 = 0, $610 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $632 = 0, $636 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $646 = 0, $65 = 0, $654 = 0, $658 = 0, $660 = 0, $663 = 0, $667 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $673 = 0, $675 = 0, $676 = 0, $678 = 0, $681 = 0, $686 = 0, $689 = 0, $69 = 0, $693 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $7 = 0, $70 = 0, $703 = 0, $711 = 0, $715 = 0, $717 = 0, $719 = 0, $72 = 0, $721 = 0, $723 = 0, $725 = 0, $728 = 0, $730 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $737 = 0, $739 = 0, $740 = 0, $742 = 0, $745 = 0, $75 = 0, $751 = 0, $752 = 0, $754 = 0, $755 = 0, $756 = 0, $759 = 0, $763 = 0, $765 = 0, $767 = 0, $769 = 0, $770 = 0, $771 = 0, $773 = 0, $775 = 0, $777 = 0, $778 = 0, $780 = 0, $782 = 0, $784 = 0, $786 = 0, $787 = 0, $788 = 0, $790 = 0, $792 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $799 = 0, $8 = 0, $804 = 0, $805 = 0, $808 = 0, $809 = 0, $81 = 0, $814 = 0, $815 = 0, $82 = 0, $820 = 0, $825 = 0, $826 = 0, $830 = 0, $831 = 0, $833 = 0, $834 = 0, $836 = 0, $838 = 0, $839 = 0, $84 = 0, $841 = 0, $842 = 0, $843 = 0, $848 = 0, $849 = 0, $852 = 0, $854 = 0, $855 = 0, $858 = 0, $859 = 0, $86 = 0, $862 = 0, $866 = 0, $867 = 0, $868 = 0, $870 = 0, $871 = 0, $877 = 0, $879 = 0, $88 = 0, $880 = 0, $886 = 0, $887 = 0, $893 = 0, $895 = 0, $897 = 0, $899 = 0, $9 = 0, $90 = 0, $902 = 0, $908 = 0, $91 = 0, $910 = 0, $912 = 0, $913 = 0, $919 = 0, $92 = 0, $920 = 0, $922 = 0, $927 = 0, $928 = 0, $93 = 0, $931 = 0, $932 = 0, $937 = 0, $938 = 0, $943 = 0, $948 = 0, $949 = 0, $95 = 0, $959 = 0, $960 = 0.0, $961 = 0, $962 = 0, $965 = 0, $967 = 0, $97 = 0, $973 = 0, $974 = 0, $980 = 0, $982 = 0, $984 = 0, $985 = 0, $986 = 0, $989 = 0, $99 = 0, $990 = 0, $994 = 0, $999 = 0, $args = 0, $args1 = 0, $cond = 0, $eh$lpad$body$i$index57Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i205$index77Z2D = 0, $eh$lpad$body$i205$indexZ2D = 0, $eh$lpad$body125$index51Z2D = 0, $eh$lpad$body125$indexZ2D = 0, $eh$lpad$body172$index67Z2D = 0, $eh$lpad$body172$indexZ2D = 0, $eh$lpad$body227$index87Z2D = 0, $eh$lpad$body227$indexZ2D = 0, $eh$lpad$body244$index92Z2D = 0, $eh$lpad$body244$indexZ2D = 0, $eh$lpad$body254$index97Z2D = 0, $eh$lpad$body254$indexZ2D = 0, $eh$lpad$body262$index102Z2D = 0, $eh$lpad$body262$indexZ2D = 0, $eh$lpad$body271$index107Z2D = 0, $eh$lpad$body271$indexZ2D = 0, $eh$lpad$body279$index117Z2D = 0, $eh$lpad$body279$indexZ2D = 0, $eh$lpad$body287$index127Z2D = 0, $eh$lpad$body287$indexZ2D = 0, $eh$lpad$body303$index132Z2D = 0, $eh$lpad$body303$indexZ2D = 0, $eh$lpad$body311$index137Z2D = 0, $eh$lpad$body311$indexZ2D = 0, $eh$lpad$body320$index142Z2D = 0, $eh$lpad$body320$indexZ2D = 0, $eh$lpad$body328$index147Z2D = 0, $eh$lpad$body328$indexZ2D = 0, $eh$lpad$body344$index82Z2D = 0, $eh$lpad$body344$indexZ2D = 0, $eh$lpad$body353$index112Z2D = 0, $eh$lpad$body353$indexZ2D = 0, $eh$lpad$body361$index122Z2D = 0, $eh$lpad$body361$indexZ2D = 0, $eh$lpad$body44$index3Z2D = 0, $eh$lpad$body44$indexZ2D = 0, $eh$lpad$body51$index10Z2D = 0, $eh$lpad$body51$indexZ2D = 0, $eh$lpad$body57$index16Z2D = 0, $eh$lpad$body57$indexZ2D = 0, $eh$lpad$body73$index21Z2D = 0, $eh$lpad$body73$indexZ2D = 0, $eh$lpad$body76$index26Z2D = 0, $eh$lpad$body76$indexZ2D = 0, $eh$lpad$body84$index36Z2D = 0, $eh$lpad$body84$indexZ2D = 0, $eh$lpad$body91$index31Z2D = 0, $eh$lpad$body91$indexZ2D = 0, $eh$lpad$body98$index43Z2D = 0, $eh$lpad$body98$indexZ2D = 0, $elements = 0, $file = 0, $file3 = 0, $first = 0, $fmap = 0, $got_comma$0$off0 = 0, $id_token = 0, $l = 0, $last = 0, $map = 0, $maybe_if = 0, $next = 0, $obj = 0, $params = 0, $ss = 0, $ss2 = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i181 = 0, $this$idx$val$idx$val$i197 = 0, $this$idx$val$idx$val$i48 = 0, $this$idx$val$idx$val$i70 = 0, $this$idx$val$idx$val$i88 = 0, $this$idx38$val$idx$val = 0, $this$idx39$val$idx$val = 0, $this$idx40$val$idx$val = 0, $tok = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1744 | 0;
 $0 = sp + 1728 | 0;
 $1 = sp + 1724 | 0;
 $2 = sp + 1720 | 0;
 $3 = sp + 1716 | 0;
 $4 = sp + 1712 | 0;
 $5 = sp + 1708 | 0;
 $6 = sp + 1704 | 0;
 $7 = sp + 1700 | 0;
 $8 = sp + 1696 | 0;
 $9 = sp + 1692 | 0;
 $10 = sp + 1688 | 0;
 $11 = sp + 1684 | 0;
 $12 = sp + 1672 | 0;
 $13 = sp + 1660 | 0;
 $14 = sp + 1656 | 0;
 $15 = sp + 1652 | 0;
 $16 = sp + 1648 | 0;
 $17 = sp + 1644 | 0;
 $tok = sp + 1600 | 0;
 $18 = sp + 1588 | 0;
 $19 = sp + 1576 | 0;
 $obj = sp + 1572 | 0;
 $20 = sp + 1528 | 0;
 $next = sp + 1484 | 0;
 $21 = sp + 1440 | 0;
 $22 = sp + 1412 | 0;
 $first = sp + 1408 | 0;
 $23 = sp + 1364 | 0;
 $l = sp + 1336 | 0;
 $24 = sp + 1292 | 0;
 $id_token = sp + 1248 | 0;
 $params = sp + 1236 | 0;
 $25 = sp + 1224 | 0;
 $26 = sp + 1180 | 0;
 $maybe_if = sp + 1136 | 0;
 $map = sp + 1132 | 0;
 $args = sp + 1120 | 0;
 $27 = sp + 1092 | 0;
 $28 = sp + 1733 | 0;
 $cond = sp + 1088 | 0;
 $last = sp + 1044 | 0;
 $fmap = sp + 1040 | 0;
 $args1 = sp + 1028 | 0;
 $29 = sp + 1e3 | 0;
 $30 = sp + 1732 | 0;
 $ss = sp + 856 | 0;
 $31 = sp + 844 | 0;
 $elements = sp + 832 | 0;
 $32 = sp + 788 | 0;
 $33 = sp + 744 | 0;
 $34 = sp + 700 | 0;
 $35 = sp + 656 | 0;
 $ss2 = sp + 512 | 0;
 $36 = sp + 496 | 0;
 $37 = sp + 492 | 0;
 $38 = sp + 464 | 0;
 $39 = sp + 420 | 0;
 $40 = sp + 392 | 0;
 $41 = sp + 364 | 0;
 $42 = sp + 336 | 0;
 $43 = sp + 308 | 0;
 $44 = sp + 280 | 0;
 $file = sp + 236 | 0;
 $45 = sp + 208 | 0;
 $file3 = sp + 164 | 0;
 $46 = sp + 136 | 0;
 $47 = sp + 124 | 0;
 $48 = sp + 96 | 0;
 $49 = sp + 84 | 0;
 $50 = sp + 56 | 0;
 $51 = sp + 28 | 0;
 $52 = sp;
 $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
 $53 = $this$idx$val$idx$val$i + 8 | 0;
 HEAP32[$tok >> 2] = HEAP32[$53 >> 2];
 $55 = $tok + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($55, $this$idx$val$idx$val$i + 12 | 0);
 HEAP32[$tok >> 2] = HEAP32[$53 >> 2];
 $58 = $tok + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $58 | 0, $this$idx$val$idx$val$i + 24 | 0);
 $60 = __THREW__;
 __THREW__ = 0;
 if ($60 & 1) {
  $62 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
  ___resumeException($62 | 0);
 }
 $64 = $tok + 28 | 0;
 $65 = $this$idx$val$idx$val$i + 36 | 0;
 HEAP32[$64 + 0 >> 2] = HEAP32[$65 + 0 >> 2];
 HEAP32[$64 + 4 >> 2] = HEAP32[$65 + 4 >> 2];
 HEAP32[$64 + 8 >> 2] = HEAP32[$65 + 8 >> 2];
 HEAP32[$64 + 12 >> 2] = HEAP32[$65 + 12 >> 2];
 HEAP32[$tok >> 2] = HEAP32[$53 >> 2];
 $67 = HEAP32[$this >> 2] | 0;
 $69 = HEAP32[$67 + 4 >> 2] | 0;
 $70 = $69 + 4 | 0;
 $72 = HEAP32[$69 >> 2] | 0;
 HEAP32[$72 + 4 >> 2] = HEAP32[$70 >> 2];
 HEAP32[HEAP32[$70 >> 2] >> 2] = $72;
 $75 = $67 + 8 | 0;
 HEAP32[$75 >> 2] = (HEAP32[$75 >> 2] | 0) + -1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69 + 24 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69 + 12 | 0);
 __ZdlPv($69);
 L4 : do switch (HEAP32[$tok >> 2] | 0) {
 case 28:
  {
   $1470 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $51 | 0, $58 | 0);
   $1471 = __THREW__;
   __THREW__ = 0;
   if ($1471 & 1) label = 20; else {
    $1474 = $51 + 12 | 0;
    $1475 = $64;
    $1480 = HEAP32[$1475 + 4 >> 2] | 0;
    $1481 = $1474;
    HEAP32[$1481 >> 2] = HEAP32[$1475 >> 2];
    HEAP32[$1481 + 4 >> 2] = $1480;
    $1486 = $tok + 36 | 0;
    $1491 = HEAP32[$1486 + 4 >> 2] | 0;
    $1492 = $51 + 20 | 0;
    HEAP32[$1492 >> 2] = HEAP32[$1486 >> 2];
    HEAP32[$1492 + 4 >> 2] = $1491;
    __THREW__ = 0;
    $1496 = invoke_ii(67, 48) | 0;
    $1497 = __THREW__;
    __THREW__ = 0;
    do if ($1497 & 1) label = 413; else {
     HEAP32[$1496 >> 2] = 35936;
     __THREW__ = 0;
     invoke_vii(40, $1496 + 4 | 0, $51 | 0);
     $1500 = __THREW__;
     __THREW__ = 0;
     if ($1500 & 1) {
      $1518 = ___cxa_find_matching_catch() | 0;
      $1519 = tempRet0;
      __ZdlPv($1496);
      $eh$lpad$body320$index142Z2D = $1519;
      $eh$lpad$body320$indexZ2D = $1518;
      break;
     }
     $1502 = $1496 + 16 | 0;
     HEAP32[$1502 + 0 >> 2] = HEAP32[$1474 + 0 >> 2];
     HEAP32[$1502 + 4 >> 2] = HEAP32[$1474 + 4 >> 2];
     HEAP32[$1502 + 8 >> 2] = HEAP32[$1474 + 8 >> 2];
     HEAP32[$1502 + 12 >> 2] = HEAP32[$1474 + 12 >> 2];
     HEAP32[$1496 + 32 >> 2] = 17;
     HEAP32[$1496 + 36 >> 2] = 0;
     HEAP32[$1496 + 40 >> 2] = 0;
     HEAP32[$1496 + 44 >> 2] = 0;
     HEAP32[$1496 >> 2] = 37856;
     HEAP32[$2 >> 2] = $1496;
     $1507 = $1470 + 16 | 0;
     $1508 = HEAP32[$1507 >> 2] | 0;
     if ($1508 >>> 0 < (HEAP32[$1470 + 20 >> 2] | 0) >>> 0) {
      if (!$1508) $1514 = 0; else {
       HEAP32[$1508 >> 2] = $1496;
       $1514 = HEAP32[$1507 >> 2] | 0;
      }
      HEAP32[$1507 >> 2] = $1514 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1470 + 12 | 0, $2 | 0);
      $1516 = __THREW__;
      __THREW__ = 0;
      if ($1516 & 1) {
       label = 413;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
     $$2 = $1496;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 413) {
     $1520 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body320$index142Z2D = tempRet0;
     $eh$lpad$body320$indexZ2D = $1520;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
    $$19 = $eh$lpad$body320$indexZ2D;
    $$1933 = $eh$lpad$body320$index142Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    ___resumeException($$19 | 0);
   }
   break;
  }
 case 11:
  {
   $1410 = $this + 4 | 0;
   $1411 = HEAP32[$1410 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $50 | 0, $58 | 0);
   $1412 = __THREW__;
   __THREW__ = 0;
   if ($1412 & 1) label = 20; else {
    $1415 = $50 + 12 | 0;
    $1416 = $64;
    $1421 = HEAP32[$1416 + 4 >> 2] | 0;
    $1422 = $1415;
    HEAP32[$1422 >> 2] = HEAP32[$1416 >> 2];
    HEAP32[$1422 + 4 >> 2] = $1421;
    $1427 = $tok + 36 | 0;
    $1432 = HEAP32[$1427 + 4 >> 2] | 0;
    $1433 = $50 + 20 | 0;
    HEAP32[$1433 >> 2] = HEAP32[$1427 >> 2];
    HEAP32[$1433 + 4 >> 2] = $1432;
    __THREW__ = 0;
    $1438 = invoke_iii(23, HEAP32[$1410 >> 2] | 0, $55 | 0) | 0;
    $1439 = __THREW__;
    __THREW__ = 0;
    do if ($1439 & 1) label = 401; else {
     __THREW__ = 0;
     $1441 = invoke_ii(67, 56) | 0;
     $1442 = __THREW__;
     __THREW__ = 0;
     if ($1442 & 1) label = 401; else {
      HEAP32[$1441 >> 2] = 35936;
      __THREW__ = 0;
      invoke_vii(40, $1441 + 4 | 0, $50 | 0);
      $1445 = __THREW__;
      __THREW__ = 0;
      if ($1445 & 1) {
       $1465 = ___cxa_find_matching_catch() | 0;
       $1466 = tempRet0;
       __ZdlPv($1441);
       $eh$lpad$body311$index137Z2D = $1466;
       $eh$lpad$body311$indexZ2D = $1465;
       break;
      }
      $1447 = $1441 + 16 | 0;
      HEAP32[$1447 + 0 >> 2] = HEAP32[$1415 + 0 >> 2];
      HEAP32[$1447 + 4 >> 2] = HEAP32[$1415 + 4 >> 2];
      HEAP32[$1447 + 8 >> 2] = HEAP32[$1415 + 8 >> 2];
      HEAP32[$1447 + 12 >> 2] = HEAP32[$1415 + 12 >> 2];
      HEAP32[$1441 + 32 >> 2] = 20;
      HEAP32[$1441 + 36 >> 2] = 0;
      HEAP32[$1441 + 40 >> 2] = 0;
      HEAP32[$1441 + 44 >> 2] = 0;
      HEAP32[$1441 >> 2] = 37376;
      HEAP32[$1441 + 48 >> 2] = $1438;
      HEAP32[$1441 + 52 >> 2] = $1438;
      HEAP32[$3 >> 2] = $1441;
      $1454 = $1411 + 16 | 0;
      $1455 = HEAP32[$1454 >> 2] | 0;
      if ($1455 >>> 0 < (HEAP32[$1411 + 20 >> 2] | 0) >>> 0) {
       if (!$1455) $1461 = 0; else {
        HEAP32[$1455 >> 2] = $1441;
        $1461 = HEAP32[$1454 >> 2] | 0;
       }
       HEAP32[$1454 >> 2] = $1461 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1411 + 12 | 0, $3 | 0);
       $1463 = __THREW__;
       __THREW__ = 0;
       if ($1463 & 1) {
        label = 401;
        break;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
      $$2 = $1441;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
      STACKTOP = sp;
      return $$2 | 0;
     }
    } while (0);
    if ((label | 0) == 401) {
     $1467 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body311$index137Z2D = tempRet0;
     $eh$lpad$body311$indexZ2D = $1467;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
    $$19 = $eh$lpad$body311$indexZ2D;
    $$1933 = $eh$lpad$body311$index137Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    ___resumeException($$19 | 0);
   }
   break;
  }
 case 2:
  {
   $this$idx40$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $116 = $this$idx40$val$idx$val + 8 | 0;
   HEAP32[$next >> 2] = HEAP32[$116 >> 2];
   $118 = $next + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $118 | 0, $this$idx40$val$idx$val + 12 | 0);
   $120 = __THREW__;
   __THREW__ = 0;
   if ($120 & 1) label = 20; else {
    HEAP32[$next >> 2] = HEAP32[$116 >> 2];
    $123 = $next + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $123 | 0, $this$idx40$val$idx$val + 24 | 0);
    $125 = __THREW__;
    __THREW__ = 0;
    if ($125 & 1) {
     $127 = ___cxa_find_matching_catch() | 0;
     $128 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($118);
     $eh$lpad$body44$index3Z2D = $128;
     $eh$lpad$body44$indexZ2D = $127;
     break L4;
    }
    $129 = $next + 28 | 0;
    $130 = $this$idx40$val$idx$val + 36 | 0;
    HEAP32[$129 + 0 >> 2] = HEAP32[$130 + 0 >> 2];
    HEAP32[$129 + 4 >> 2] = HEAP32[$130 + 4 >> 2];
    HEAP32[$129 + 8 >> 2] = HEAP32[$130 + 8 >> 2];
    HEAP32[$129 + 12 >> 2] = HEAP32[$130 + 12 >> 2];
    $131 = HEAP32[$116 >> 2] | 0;
    HEAP32[$next >> 2] = $131;
    L49 : do if (($131 | 0) == 3) {
     $this$idx$val$idx$val$i48 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $133 = $this$idx$val$idx$val$i48 + 8 | 0;
     HEAP32[$21 >> 2] = HEAP32[$133 >> 2];
     $135 = $21 + 4 | 0;
     __THREW__ = 0;
     invoke_vii(40, $135 | 0, $this$idx$val$idx$val$i48 + 12 | 0);
     $137 = __THREW__;
     __THREW__ = 0;
     if ($137 & 1) label = 39; else {
      HEAP32[$21 >> 2] = HEAP32[$133 >> 2];
      $140 = $21 + 16 | 0;
      __THREW__ = 0;
      invoke_vii(40, $140 | 0, $this$idx$val$idx$val$i48 + 24 | 0);
      $142 = __THREW__;
      __THREW__ = 0;
      if ($142 & 1) {
       $144 = ___cxa_find_matching_catch() | 0;
       $145 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
       $eh$lpad$body51$index10Z2D = $145;
       $eh$lpad$body51$indexZ2D = $144;
       label = 40;
       break;
      }
      $146 = $21 + 28 | 0;
      $147 = $this$idx$val$idx$val$i48 + 36 | 0;
      HEAP32[$146 + 0 >> 2] = HEAP32[$147 + 0 >> 2];
      HEAP32[$146 + 4 >> 2] = HEAP32[$147 + 4 >> 2];
      HEAP32[$146 + 8 >> 2] = HEAP32[$147 + 8 >> 2];
      HEAP32[$146 + 12 >> 2] = HEAP32[$147 + 12 >> 2];
      HEAP32[$21 >> 2] = HEAP32[$133 >> 2];
      $149 = HEAP32[$this >> 2] | 0;
      $151 = HEAP32[$149 + 4 >> 2] | 0;
      $152 = $151 + 4 | 0;
      $154 = HEAP32[$151 >> 2] | 0;
      HEAP32[$154 + 4 >> 2] = HEAP32[$152 >> 2];
      HEAP32[HEAP32[$152 >> 2] >> 2] = $154;
      $157 = $149 + 8 | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($151 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($151 + 12 | 0);
      __ZdlPv($151);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($140);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
      $163 = HEAP32[$this + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $22 | 0, $58 | 0);
      $164 = __THREW__;
      __THREW__ = 0;
      if ($164 & 1) label = 39; else {
       $167 = $22 + 12 | 0;
       $168 = $64;
       $173 = HEAP32[$168 + 4 >> 2] | 0;
       $174 = $167;
       HEAP32[$174 >> 2] = HEAP32[$168 >> 2];
       HEAP32[$174 + 4 >> 2] = $173;
       $179 = $next + 36 | 0;
       $184 = HEAP32[$179 + 4 >> 2] | 0;
       $185 = $22 + 20 | 0;
       HEAP32[$185 >> 2] = HEAP32[$179 >> 2];
       HEAP32[$185 + 4 >> 2] = $184;
       __THREW__ = 0;
       $189 = invoke_ii(67, 60) | 0;
       $190 = __THREW__;
       __THREW__ = 0;
       do if ($190 & 1) label = 41; else {
        HEAP32[$189 >> 2] = 35936;
        __THREW__ = 0;
        invoke_vii(40, $189 + 4 | 0, $22 | 0);
        $193 = __THREW__;
        __THREW__ = 0;
        if ($193 & 1) {
         $214 = ___cxa_find_matching_catch() | 0;
         $215 = tempRet0;
         __ZdlPv($189);
         $eh$lpad$body57$index16Z2D = $215;
         $eh$lpad$body57$indexZ2D = $214;
         break;
        }
        $195 = $189 + 16 | 0;
        HEAP32[$195 + 0 >> 2] = HEAP32[$167 + 0 >> 2];
        HEAP32[$195 + 4 >> 2] = HEAP32[$167 + 4 >> 2];
        HEAP32[$195 + 8 >> 2] = HEAP32[$167 + 8 >> 2];
        HEAP32[$195 + 12 >> 2] = HEAP32[$167 + 12 >> 2];
        HEAP32[$189 + 32 >> 2] = 1;
        HEAP32[$189 + 36 >> 2] = 0;
        HEAP32[$189 + 40 >> 2] = 0;
        HEAP32[$189 + 44 >> 2] = 0;
        HEAP32[$189 >> 2] = 38176;
        HEAP32[$189 + 48 >> 2] = 0;
        HEAP32[$189 + 52 >> 2] = 0;
        HEAP32[$189 + 56 >> 2] = 0;
        HEAP32[$17 >> 2] = $189;
        $203 = $163 + 16 | 0;
        $204 = HEAP32[$203 >> 2] | 0;
        if ($204 >>> 0 < (HEAP32[$163 + 20 >> 2] | 0) >>> 0) {
         if (!$204) $210 = 0; else {
          HEAP32[$204 >> 2] = $189;
          $210 = HEAP32[$203 >> 2] | 0;
         }
         HEAP32[$203 >> 2] = $210 + 4;
        } else {
         __THREW__ = 0;
         invoke_vii(51, $163 + 12 | 0, $17 | 0);
         $212 = __THREW__;
         __THREW__ = 0;
         if ($212 & 1) {
          label = 41;
          break;
         }
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
        $$12 = $189;
        label = 261;
        break L49;
       } while (0);
       if ((label | 0) == 41) {
        $218 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body57$index16Z2D = tempRet0;
        $eh$lpad$body57$indexZ2D = $218;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
       $$1411 = $eh$lpad$body57$indexZ2D;
       $$1428 = $eh$lpad$body57$index16Z2D;
      }
     }
    } else {
     __THREW__ = 0;
     $220 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
     $221 = __THREW__;
     __THREW__ = 0;
     if ($221 & 1) label = 39; else {
      HEAP32[$first >> 2] = $220;
      $this$idx39$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $223 = $this$idx39$val$idx$val + 8 | 0;
      HEAP32[$23 >> 2] = HEAP32[$223 >> 2];
      $225 = $23 + 4 | 0;
      __THREW__ = 0;
      invoke_vii(40, $225 | 0, $this$idx39$val$idx$val + 12 | 0);
      $227 = __THREW__;
      __THREW__ = 0;
      if ($227 & 1) label = 39; else {
       HEAP32[$23 >> 2] = HEAP32[$223 >> 2];
       $230 = $23 + 16 | 0;
       __THREW__ = 0;
       invoke_vii(40, $230 | 0, $this$idx39$val$idx$val + 24 | 0);
       $232 = __THREW__;
       __THREW__ = 0;
       if ($232 & 1) {
        $234 = ___cxa_find_matching_catch() | 0;
        $235 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($225);
        $eh$lpad$body51$index10Z2D = $235;
        $eh$lpad$body51$indexZ2D = $234;
        label = 40;
        break;
       }
       $236 = $23 + 28 | 0;
       $237 = $this$idx39$val$idx$val + 36 | 0;
       HEAP32[$236 + 0 >> 2] = HEAP32[$237 + 0 >> 2];
       HEAP32[$236 + 4 >> 2] = HEAP32[$237 + 4 >> 2];
       HEAP32[$236 + 8 >> 2] = HEAP32[$237 + 8 >> 2];
       HEAP32[$236 + 12 >> 2] = HEAP32[$237 + 12 >> 2];
       $238 = HEAP32[$223 >> 2] | 0;
       HEAP32[$23 >> 2] = $238;
       HEAP32[$next >> 2] = $238;
       if (!(HEAP8[$118 >> 0] & 1)) {
        HEAP8[$118 + 1 >> 0] = 0;
        HEAP8[$118 >> 0] = 0;
       } else {
        HEAP8[HEAP32[$next + 12 >> 2] >> 0] = 0;
        HEAP32[$next + 8 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $118 | 0, 0);
       $246 = __THREW__;
       __THREW__ = 0;
       if ($246 & 1) {
        $248 = ___cxa_find_matching_catch(0) | 0;
        ___clang_call_terminate($248);
       };
       HEAP32[$118 + 0 >> 2] = HEAP32[$225 + 0 >> 2];
       HEAP32[$118 + 4 >> 2] = HEAP32[$225 + 4 >> 2];
       HEAP32[$118 + 8 >> 2] = HEAP32[$225 + 8 >> 2];
       HEAP32[$225 + 0 >> 2] = 0;
       HEAP32[$225 + 4 >> 2] = 0;
       HEAP32[$225 + 8 >> 2] = 0;
       $250 = $next + 16 | 0;
       $251 = $23 + 16 | 0;
       if (!(HEAP8[$250 >> 0] & 1)) {
        HEAP8[$250 + 1 >> 0] = 0;
        HEAP8[$250 >> 0] = 0;
       } else {
        HEAP8[HEAP32[$next + 24 >> 2] >> 0] = 0;
        HEAP32[$next + 20 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $250 | 0, 0);
       $259 = __THREW__;
       __THREW__ = 0;
       if ($259 & 1) {
        $261 = ___cxa_find_matching_catch(0) | 0;
        ___clang_call_terminate($261);
       };
       HEAP32[$250 + 0 >> 2] = HEAP32[$251 + 0 >> 2];
       HEAP32[$250 + 4 >> 2] = HEAP32[$251 + 4 >> 2];
       HEAP32[$250 + 8 >> 2] = HEAP32[$251 + 8 >> 2];
       HEAP32[$251 + 0 >> 2] = 0;
       HEAP32[$251 + 4 >> 2] = 0;
       HEAP32[$251 + 8 >> 2] = 0;
       HEAP32[$129 + 0 >> 2] = HEAP32[$236 + 0 >> 2];
       HEAP32[$129 + 4 >> 2] = HEAP32[$236 + 4 >> 2];
       HEAP32[$129 + 8 >> 2] = HEAP32[$236 + 8 >> 2];
       HEAP32[$129 + 12 >> 2] = HEAP32[$236 + 12 >> 2];
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($230);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($225);
       if ((HEAP32[$next >> 2] | 0) == 18) {
        HEAP32[$l + 0 >> 2] = 0;
        HEAP32[$l + 4 >> 2] = 0;
        HEAP32[$l + 8 >> 2] = 0;
        HEAP32[$l + 12 >> 2] = 0;
        HEAP32[$l + 16 >> 2] = 0;
        HEAP32[$l + 20 >> 2] = 0;
        HEAP32[$l + 24 >> 2] = 0;
        $this$idx$val$idx$val$i70 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $265 = $this$idx$val$idx$val$i70 + 8 | 0;
        HEAP32[$24 >> 2] = HEAP32[$265 >> 2];
        $267 = $24 + 4 | 0;
        __THREW__ = 0;
        invoke_vii(40, $267 | 0, $this$idx$val$idx$val$i70 + 12 | 0);
        $269 = __THREW__;
        __THREW__ = 0;
        do if ($269 & 1) label = 96; else {
         HEAP32[$24 >> 2] = HEAP32[$265 >> 2];
         $272 = $24 + 16 | 0;
         __THREW__ = 0;
         invoke_vii(40, $272 | 0, $this$idx$val$idx$val$i70 + 24 | 0);
         $274 = __THREW__;
         __THREW__ = 0;
         if ($274 & 1) {
          $276 = ___cxa_find_matching_catch() | 0;
          $277 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($267);
          $eh$lpad$body73$index21Z2D = $277;
          $eh$lpad$body73$indexZ2D = $276;
          label = 97;
          break;
         }
         $278 = $24 + 28 | 0;
         $279 = $this$idx$val$idx$val$i70 + 36 | 0;
         HEAP32[$278 + 0 >> 2] = HEAP32[$279 + 0 >> 2];
         HEAP32[$278 + 4 >> 2] = HEAP32[$279 + 4 >> 2];
         HEAP32[$278 + 8 >> 2] = HEAP32[$279 + 8 >> 2];
         HEAP32[$278 + 12 >> 2] = HEAP32[$279 + 12 >> 2];
         HEAP32[$24 >> 2] = HEAP32[$265 >> 2];
         $281 = HEAP32[$this >> 2] | 0;
         $283 = HEAP32[$281 + 4 >> 2] | 0;
         $284 = $283 + 4 | 0;
         $286 = HEAP32[$283 >> 2] | 0;
         HEAP32[$286 + 4 >> 2] = HEAP32[$284 >> 2];
         HEAP32[HEAP32[$284 >> 2] >> 2] = $286;
         $289 = $281 + 8 | 0;
         HEAP32[$289 >> 2] = (HEAP32[$289 >> 2] | 0) + -1;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($283 + 24 | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($283 + 12 | 0);
         __ZdlPv($283);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($272);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($267);
         __THREW__ = 0;
         invoke_viiii(13, $id_token | 0, $this | 0, 11, 0);
         $294 = __THREW__;
         __THREW__ = 0;
         if ($294 & 1) label = 96; else {
          $296 = $this + 4 | 0;
          $298 = $id_token + 4 | 0;
          __THREW__ = 0;
          $299 = invoke_iii(23, HEAP32[$296 >> 2] | 0, $298 | 0) | 0;
          $300 = __THREW__;
          __THREW__ = 0;
          do if ($300 & 1) {
           $458 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body76$index26Z2D = tempRet0;
           $eh$lpad$body76$indexZ2D = $458;
           label = 99;
          } else {
           HEAP32[$params >> 2] = 0;
           $302 = $params + 4 | 0;
           HEAP32[$302 >> 2] = 0;
           $303 = $params + 8 | 0;
           HEAP32[$303 >> 2] = 0;
           __THREW__ = 0;
           $304 = invoke_ii(67, 4) | 0;
           $305 = __THREW__;
           __THREW__ = 0;
           if ($305 & 1) {
            $312 = ___cxa_find_matching_catch() | 0;
            $eh$lpad$body76$index26Z2D = tempRet0;
            $eh$lpad$body76$indexZ2D = $312;
            label = 99;
            break;
           }
           HEAP32[$params >> 2] = $304;
           HEAP32[$303 >> 2] = $304 + 4;
           HEAP32[$304 >> 2] = $299;
           HEAP32[$302 >> 2] = $304 + 4;
           $309 = HEAP32[$296 >> 2] | 0;
           __THREW__ = 0;
           invoke_viii(3, $25 | 0, 35688, 3);
           $310 = __THREW__;
           __THREW__ = 0;
           L104 : do if ($310 & 1) label = 100; else {
            __THREW__ = 0;
            $314 = invoke_iii(23, $309 | 0, $25 | 0) | 0;
            $315 = __THREW__;
            __THREW__ = 0;
            do if ($315 & 1) label = 102; else {
             __THREW__ = 0;
             $317 = invoke_ii(67, 56) | 0;
             $318 = __THREW__;
             __THREW__ = 0;
             if ($318 & 1) {
              label = 102;
              break;
             }
             HEAP32[$317 >> 2] = 35936;
             __THREW__ = 0;
             invoke_vii(40, $317 + 4 | 0, $l | 0);
             $321 = __THREW__;
             __THREW__ = 0;
             if ($321 & 1) {
              $342 = ___cxa_find_matching_catch() | 0;
              $343 = tempRet0;
              __ZdlPv($317);
              $eh$lpad$body84$index36Z2D = $343;
              $eh$lpad$body84$indexZ2D = $342;
              break;
             }
             $323 = $317 + 16 | 0;
             $324 = $l + 12 | 0;
             HEAP32[$323 + 0 >> 2] = HEAP32[$324 + 0 >> 2];
             HEAP32[$323 + 4 >> 2] = HEAP32[$324 + 4 >> 2];
             HEAP32[$323 + 8 >> 2] = HEAP32[$324 + 8 >> 2];
             HEAP32[$323 + 12 >> 2] = HEAP32[$324 + 12 >> 2];
             HEAP32[$317 + 32 >> 2] = 20;
             HEAP32[$317 + 36 >> 2] = 0;
             HEAP32[$317 + 40 >> 2] = 0;
             HEAP32[$317 + 44 >> 2] = 0;
             HEAP32[$317 >> 2] = 37376;
             HEAP32[$317 + 48 >> 2] = $314;
             HEAP32[$317 + 52 >> 2] = $314;
             HEAP32[$16 >> 2] = $317;
             $331 = $309 + 16 | 0;
             $332 = HEAP32[$331 >> 2] | 0;
             if ($332 >>> 0 < (HEAP32[$309 + 20 >> 2] | 0) >>> 0) {
              if (!$332) $338 = 0; else {
               HEAP32[$332 >> 2] = $317;
               $338 = HEAP32[$331 >> 2] | 0;
              }
              HEAP32[$331 >> 2] = $338 + 4;
             } else {
              __THREW__ = 0;
              invoke_vii(51, $309 + 12 | 0, $16 | 0);
              $340 = __THREW__;
              __THREW__ = 0;
              if ($340 & 1) {
               label = 102;
               break;
              }
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
             __THREW__ = 0;
             $346 = invoke_iiiii(8, HEAP32[$296 >> 2] | 0, $220 + 4 | 0, $params | 0, $first | 0) | 0;
             $347 = __THREW__;
             __THREW__ = 0;
             if ($347 & 1) {
              label = 100;
              break L104;
             }
             __THREW__ = 0;
             invoke_viiii(13, $26 | 0, $this | 0, 23, 0);
             $349 = __THREW__;
             __THREW__ = 0;
             if ($349 & 1) {
              label = 100;
              break L104;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26 + 16 | 0);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26 + 4 | 0);
             __THREW__ = 0;
             $353 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
             $354 = __THREW__;
             __THREW__ = 0;
             if ($354 & 1) {
              label = 100;
              break L104;
             }
             $this$idx$val$idx$val$i88 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
             $356 = $this$idx$val$idx$val$i88 + 8 | 0;
             HEAP32[$maybe_if >> 2] = HEAP32[$356 >> 2];
             $358 = $maybe_if + 4 | 0;
             __THREW__ = 0;
             invoke_vii(40, $358 | 0, $this$idx$val$idx$val$i88 + 12 | 0);
             $360 = __THREW__;
             __THREW__ = 0;
             if ($360 & 1) {
              label = 100;
              break L104;
             }
             HEAP32[$maybe_if >> 2] = HEAP32[$356 >> 2];
             $363 = $maybe_if + 16 | 0;
             __THREW__ = 0;
             invoke_vii(40, $363 | 0, $this$idx$val$idx$val$i88 + 24 | 0);
             $365 = __THREW__;
             __THREW__ = 0;
             if ($365 & 1) {
              $367 = ___cxa_find_matching_catch() | 0;
              $368 = tempRet0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($358);
              $eh$lpad$body91$index31Z2D = $368;
              $eh$lpad$body91$indexZ2D = $367;
              label = 101;
              break L104;
             }
             $369 = $maybe_if + 28 | 0;
             $370 = $this$idx$val$idx$val$i88 + 36 | 0;
             HEAP32[$369 + 0 >> 2] = HEAP32[$370 + 0 >> 2];
             HEAP32[$369 + 4 >> 2] = HEAP32[$370 + 4 >> 2];
             HEAP32[$369 + 8 >> 2] = HEAP32[$370 + 8 >> 2];
             HEAP32[$369 + 12 >> 2] = HEAP32[$370 + 12 >> 2];
             HEAP32[$maybe_if >> 2] = HEAP32[$356 >> 2];
             $372 = HEAP32[$this >> 2] | 0;
             $374 = HEAP32[$372 + 4 >> 2] | 0;
             $375 = $374 + 4 | 0;
             $377 = HEAP32[$374 >> 2] | 0;
             HEAP32[$377 + 4 >> 2] = HEAP32[$375 >> 2];
             HEAP32[HEAP32[$375 >> 2] >> 2] = $377;
             $380 = $372 + 8 | 0;
             HEAP32[$380 >> 2] = (HEAP32[$380 >> 2] | 0) + -1;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($374 + 24 | 0);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($374 + 12 | 0);
             __ZdlPv($374);
             $385 = HEAP32[$maybe_if >> 2] | 0;
             L126 : do if (($385 | 0) == 20) {
              __THREW__ = 0;
              $470 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
              $471 = __THREW__;
              __THREW__ = 0;
              if ($471 & 1) {
               label = 104;
               break;
              }
              HEAP32[$cond >> 2] = $470;
              __THREW__ = 0;
              invoke_viiii(13, $last | 0, $this | 0, 3, 0);
              $473 = __THREW__;
              __THREW__ = 0;
              if ($473 & 1) {
               label = 104;
               break;
              }
              __THREW__ = 0;
              $477 = invoke_iiiii(8, HEAP32[$296 >> 2] | 0, $470 + 4 | 0, $params | 0, $cond | 0) | 0;
              $478 = __THREW__;
              __THREW__ = 0;
              do if ($478 & 1) label = 126; else {
               __THREW__ = 0;
               $481 = invoke_iiii(34, HEAP32[$296 >> 2] | 0, $l | 0, 37920) | 0;
               $482 = __THREW__;
               __THREW__ = 0;
               if ($482 & 1) {
                label = 126;
                break;
               }
               $484 = HEAP32[$296 >> 2] | 0;
               __THREW__ = 0;
               $485 = invoke_ii(67, 56) | 0;
               $486 = __THREW__;
               __THREW__ = 0;
               if ($486 & 1) {
                label = 126;
                break;
               }
               HEAP32[$485 >> 2] = 35936;
               __THREW__ = 0;
               invoke_vii(40, $485 + 4 | 0, $l | 0);
               $489 = __THREW__;
               __THREW__ = 0;
               if ($489 & 1) {
                $509 = ___cxa_find_matching_catch() | 0;
                $510 = tempRet0;
                __ZdlPv($485);
                $eh$lpad$body125$index51Z2D = $510;
                $eh$lpad$body125$indexZ2D = $509;
                label = 127;
                break;
               }
               $491 = $485 + 16 | 0;
               HEAP32[$491 + 0 >> 2] = HEAP32[$324 + 0 >> 2];
               HEAP32[$491 + 4 >> 2] = HEAP32[$324 + 4 >> 2];
               HEAP32[$491 + 8 >> 2] = HEAP32[$324 + 8 >> 2];
               HEAP32[$491 + 12 >> 2] = HEAP32[$324 + 12 >> 2];
               HEAP32[$485 + 32 >> 2] = 9;
               HEAP32[$485 + 36 >> 2] = 0;
               HEAP32[$485 + 40 >> 2] = 0;
               HEAP32[$485 + 44 >> 2] = 0;
               HEAP32[$485 >> 2] = 37360;
               HEAP32[$485 + 48 >> 2] = $317;
               HEAP32[$485 + 52 >> 2] = $481;
               HEAP32[$14 >> 2] = $485;
               $498 = $484 + 16 | 0;
               $499 = HEAP32[$498 >> 2] | 0;
               if ($499 >>> 0 < (HEAP32[$484 + 20 >> 2] | 0) >>> 0) {
                if (!$499) $505 = 0; else {
                 HEAP32[$499 >> 2] = $485;
                 $505 = HEAP32[$498 >> 2] | 0;
                }
                HEAP32[$498 >> 2] = $505 + 4;
               } else {
                __THREW__ = 0;
                invoke_vii(51, $484 + 12 | 0, $14 | 0);
                $507 = __THREW__;
                __THREW__ = 0;
                if ($507 & 1) {
                 label = 126;
                 break;
                }
               }
               HEAP32[$fmap >> 2] = $485;
               HEAP32[$args1 >> 2] = 0;
               $511 = $args1 + 4 | 0;
               HEAP32[$511 >> 2] = 0;
               $512 = $args1 + 8 | 0;
               HEAP32[$512 >> 2] = 0;
               __THREW__ = 0;
               $513 = invoke_ii(67, 12) | 0;
               $514 = __THREW__;
               __THREW__ = 0;
               if ($514 & 1) {
                $523 = ___cxa_find_matching_catch() | 0;
                $eh$lpad$body125$index51Z2D = tempRet0;
                $eh$lpad$body125$indexZ2D = $523;
                label = 127;
                break;
               }
               HEAP32[$args1 >> 2] = $513;
               HEAP32[$512 >> 2] = $513 + 12;
               HEAP32[$513 >> 2] = $477;
               HEAP32[$513 + 4 >> 2] = $346;
               HEAP32[$513 + 8 >> 2] = $353;
               HEAP32[$511 >> 2] = $513 + 12;
               $520 = HEAP32[$296 >> 2] | 0;
               __THREW__ = 0;
               invoke_vii(40, $29 | 0, $58 | 0);
               $521 = __THREW__;
               __THREW__ = 0;
               do if ($521 & 1) {
                $555 = ___cxa_find_matching_catch() | 0;
                $$3 = $555;
                $$317 = tempRet0;
               } else {
                $527 = $64;
                $532 = HEAP32[$527 + 4 >> 2] | 0;
                $533 = $29 + 12 | 0;
                HEAP32[$533 >> 2] = HEAP32[$527 >> 2];
                HEAP32[$533 + 4 >> 2] = $532;
                $538 = $last + 36 | 0;
                $543 = HEAP32[$538 + 4 >> 2] | 0;
                $544 = $29 + 20 | 0;
                HEAP32[$544 >> 2] = HEAP32[$538 >> 2];
                HEAP32[$544 + 4 >> 2] = $543;
                HEAP8[$30 >> 0] = 0;
                __THREW__ = 0;
                $548 = invoke_iiiiii(14, $520 | 0, $29 | 0, $fmap | 0, $args1 | 0, $30 | 0) | 0;
                $549 = __THREW__;
                __THREW__ = 0;
                if ($549 & 1) {
                 $557 = ___cxa_find_matching_catch() | 0;
                 $558 = tempRet0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
                 $$3 = $557;
                 $$317 = $558;
                 break;
                } else {
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
                 HEAP32[$511 >> 2] = $513;
                 __ZdlPv($513);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($last + 16 | 0);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($last + 4 | 0);
                 $$pn = $548;
                 label = 152;
                 break L126;
                }
               } while (0);
               HEAP32[$511 >> 2] = $513;
               __ZdlPv($513);
               $$4 = $$3;
               $$418 = $$317;
              } while (0);
              if ((label | 0) == 126) {
               $553 = ___cxa_find_matching_catch() | 0;
               $eh$lpad$body125$index51Z2D = tempRet0;
               $eh$lpad$body125$indexZ2D = $553;
               label = 127;
              }
              if ((label | 0) == 127) {
               $$4 = $eh$lpad$body125$indexZ2D;
               $$418 = $eh$lpad$body125$index51Z2D;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($last + 16 | 0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($last + 4 | 0);
              $$7 = $$4;
              $$721 = $$418;
             } else if (($385 | 0) == 3) {
              __THREW__ = 0;
              $387 = invoke_iiii(32, HEAP32[$296 >> 2] | 0, $l | 0, 37912) | 0;
              $388 = __THREW__;
              __THREW__ = 0;
              if ($388 & 1) {
               label = 104;
               break;
              }
              $390 = HEAP32[$296 >> 2] | 0;
              __THREW__ = 0;
              $391 = invoke_ii(67, 56) | 0;
              $392 = __THREW__;
              __THREW__ = 0;
              if ($392 & 1) {
               label = 104;
               break;
              }
              HEAP32[$391 >> 2] = 35936;
              __THREW__ = 0;
              invoke_vii(40, $391 + 4 | 0, $l | 0);
              $395 = __THREW__;
              __THREW__ = 0;
              if ($395 & 1) {
               $415 = ___cxa_find_matching_catch() | 0;
               $416 = tempRet0;
               __ZdlPv($391);
               $eh$lpad$body98$index43Z2D = $416;
               $eh$lpad$body98$indexZ2D = $415;
               label = 105;
               break;
              }
              $397 = $391 + 16 | 0;
              HEAP32[$397 + 0 >> 2] = HEAP32[$324 + 0 >> 2];
              HEAP32[$397 + 4 >> 2] = HEAP32[$324 + 4 >> 2];
              HEAP32[$397 + 8 >> 2] = HEAP32[$324 + 8 >> 2];
              HEAP32[$397 + 12 >> 2] = HEAP32[$324 + 12 >> 2];
              HEAP32[$391 + 32 >> 2] = 9;
              HEAP32[$391 + 36 >> 2] = 0;
              HEAP32[$391 + 40 >> 2] = 0;
              HEAP32[$391 + 44 >> 2] = 0;
              HEAP32[$391 >> 2] = 37360;
              HEAP32[$391 + 48 >> 2] = $317;
              HEAP32[$391 + 52 >> 2] = $387;
              HEAP32[$15 >> 2] = $391;
              $404 = $390 + 16 | 0;
              $405 = HEAP32[$404 >> 2] | 0;
              if ($405 >>> 0 < (HEAP32[$390 + 20 >> 2] | 0) >>> 0) {
               if (!$405) $411 = 0; else {
                HEAP32[$405 >> 2] = $391;
                $411 = HEAP32[$404 >> 2] | 0;
               }
               HEAP32[$404 >> 2] = $411 + 4;
              } else {
               __THREW__ = 0;
               invoke_vii(51, $390 + 12 | 0, $15 | 0);
               $413 = __THREW__;
               __THREW__ = 0;
               if ($413 & 1) {
                label = 104;
                break;
               }
              }
              HEAP32[$map >> 2] = $391;
              HEAP32[$args >> 2] = 0;
              $417 = $args + 4 | 0;
              HEAP32[$417 >> 2] = 0;
              $418 = $args + 8 | 0;
              HEAP32[$418 >> 2] = 0;
              __THREW__ = 0;
              $419 = invoke_ii(67, 8) | 0;
              $420 = __THREW__;
              __THREW__ = 0;
              if ($420 & 1) {
               $428 = ___cxa_find_matching_catch() | 0;
               $eh$lpad$body98$index43Z2D = tempRet0;
               $eh$lpad$body98$indexZ2D = $428;
               label = 105;
               break;
              }
              HEAP32[$args >> 2] = $419;
              HEAP32[$418 >> 2] = $419 + 8;
              HEAP32[$419 >> 2] = $346;
              HEAP32[$419 + 4 >> 2] = $353;
              HEAP32[$417 >> 2] = $419 + 8;
              $425 = HEAP32[$296 >> 2] | 0;
              __THREW__ = 0;
              invoke_vii(40, $27 | 0, $58 | 0);
              $426 = __THREW__;
              __THREW__ = 0;
              do if ($426 & 1) {
               $466 = ___cxa_find_matching_catch() | 0;
               $$216 = tempRet0;
               $$29 = $466;
              } else {
               $432 = $64;
               $437 = HEAP32[$432 + 4 >> 2] | 0;
               $438 = $27 + 12 | 0;
               HEAP32[$438 >> 2] = HEAP32[$432 >> 2];
               HEAP32[$438 + 4 >> 2] = $437;
               $443 = $maybe_if + 36 | 0;
               $448 = HEAP32[$443 + 4 >> 2] | 0;
               $449 = $27 + 20 | 0;
               HEAP32[$449 >> 2] = HEAP32[$443 >> 2];
               HEAP32[$449 + 4 >> 2] = $448;
               HEAP8[$28 >> 0] = 0;
               __THREW__ = 0;
               $453 = invoke_iiiiii(14, $425 | 0, $27 | 0, $map | 0, $args | 0, $28 | 0) | 0;
               $454 = __THREW__;
               __THREW__ = 0;
               if ($454 & 1) {
                $468 = ___cxa_find_matching_catch() | 0;
                $469 = tempRet0;
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
                $$216 = $469;
                $$29 = $468;
                break;
               } else {
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
                HEAP32[$417 >> 2] = $419;
                __ZdlPv($419);
                $$pn = $453;
                label = 152;
                break L126;
               }
              } while (0);
              HEAP32[$417 >> 2] = $419;
              __ZdlPv($419);
              $$7 = $$29;
              $$721 = $$216;
             } else {
              $561 = $ss + 64 | 0;
              $562 = $ss + 8 | 0;
              HEAP32[$562 >> 2] = 752;
              $563 = $ss + 12 | 0;
              HEAP32[$ss >> 2] = 900;
              HEAP32[$561 >> 2] = 920;
              HEAP32[$ss + 4 >> 2] = 0;
              __THREW__ = 0;
              invoke_vii(41, $ss + 64 | 0, $563 | 0);
              $566 = __THREW__;
              __THREW__ = 0;
              if ($566 & 1) {
               $578 = ___cxa_find_matching_catch() | 0;
               $$0$i = tempRet0;
               $$01$i = $578;
              } else {
               HEAP32[$ss + 136 >> 2] = 0;
               HEAP32[$ss + 140 >> 2] = -1;
               HEAP32[$ss >> 2] = 732;
               HEAP32[$561 >> 2] = 772;
               HEAP32[$562 >> 2] = 752;
               __THREW__ = 0;
               invoke_vi(177, $563 | 0);
               $570 = __THREW__;
               __THREW__ = 0;
               do if ($570 & 1) {
                $580 = ___cxa_find_matching_catch() | 0;
                $eh$lpad$body$i$index57Z2D = tempRet0;
                $eh$lpad$body$i$indexZ2D = $580;
               } else {
                HEAP32[$563 >> 2] = 1064;
                $572 = $ss + 44 | 0;
                HEAP32[$572 + 0 >> 2] = 0;
                HEAP32[$572 + 4 >> 2] = 0;
                HEAP32[$572 + 8 >> 2] = 0;
                HEAP32[$572 + 12 >> 2] = 0;
                HEAP32[$ss + 60 >> 2] = 24;
                HEAP32[$13 + 0 >> 2] = 0;
                HEAP32[$13 + 4 >> 2] = 0;
                HEAP32[$13 + 8 >> 2] = 0;
                __THREW__ = 0;
                invoke_vii(42, $563 | 0, $13 | 0);
                $574 = __THREW__;
                __THREW__ = 0;
                if ($574 & 1) {
                 $576 = ___cxa_find_matching_catch() | 0;
                 $577 = tempRet0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($572);
                 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($563);
                 $eh$lpad$body$i$index57Z2D = $577;
                 $eh$lpad$body$i$indexZ2D = $576;
                 break;
                }
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
                __THREW__ = 0;
                $582 = invoke_iiii(25, $562 | 0, 37936, 40) | 0;
                $583 = __THREW__;
                __THREW__ = 0;
                L192 : do if ($583 & 1) label = 147; else {
                 __THREW__ = 0;
                 invoke_vii(52, $582 | 0, $maybe_if | 0);
                 $585 = __THREW__;
                 __THREW__ = 0;
                 if ($585 & 1) {
                  label = 147;
                  break;
                 }
                 $587 = ___cxa_allocate_exception(40) | 0;
                 __THREW__ = 0;
                 invoke_vii(43, $31 | 0, $563 | 0);
                 $588 = __THREW__;
                 __THREW__ = 0;
                 L195 : do if ($588 & 1) {
                  $602 = ___cxa_find_matching_catch() | 0;
                  $$519408 = tempRet0;
                  $$5409 = $602;
                 } else {
                  __THREW__ = 0;
                  invoke_vii(40, $587 | 0, $250 | 0);
                  $590 = __THREW__;
                  __THREW__ = 0;
                  do if ($590 & 1) $$05 = 1; else {
                   $592 = $587 + 12 | 0;
                   HEAP32[$592 + 0 >> 2] = HEAP32[$129 + 0 >> 2];
                   HEAP32[$592 + 4 >> 2] = HEAP32[$129 + 4 >> 2];
                   HEAP32[$592 + 8 >> 2] = HEAP32[$129 + 8 >> 2];
                   HEAP32[$592 + 12 >> 2] = HEAP32[$129 + 12 >> 2];
                   __THREW__ = 0;
                   invoke_vii(40, $587 + 28 | 0, $31 | 0);
                   $594 = __THREW__;
                   __THREW__ = 0;
                   if ($594 & 1) {
                    $596 = ___cxa_find_matching_catch() | 0;
                    $597 = tempRet0;
                    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($587);
                    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
                    $$519408 = $597;
                    $$5409 = $596;
                    break L195;
                   }
                   __THREW__ = 0;
                   invoke_viii(4, $587 | 0, 48, 176);
                   $598 = __THREW__;
                   __THREW__ = 0;
                   if ($598 & 1) {
                    $$05 = 0;
                    break;
                   }
                  } while (0);
                  $604 = ___cxa_find_matching_catch() | 0;
                  $605 = tempRet0;
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
                  if ($$05) {
                   $$519408 = $605;
                   $$5409 = $604;
                  } else {
                   $$6 = $604;
                   $$620 = $605;
                   break L192;
                  }
                 } while (0);
                 ___cxa_free_exception($587 | 0);
                 $$6 = $$5409;
                 $$620 = $$519408;
                } while (0);
                if ((label | 0) == 147) {
                 $600 = ___cxa_find_matching_catch() | 0;
                 $$6 = $600;
                 $$620 = tempRet0;
                }
                HEAP32[$ss >> 2] = 732;
                HEAP32[$561 >> 2] = 772;
                HEAP32[$562 >> 2] = 752;
                HEAP32[$563 >> 2] = 1064;
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($572);
                __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($563);
                __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($561);
                $$7 = $$6;
                $$721 = $$620;
                break L126;
               } while (0);
               $$0$i = $eh$lpad$body$i$index57Z2D;
               $$01$i = $eh$lpad$body$i$indexZ2D;
              }
              __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($561);
              $eh$lpad$body98$index43Z2D = $$0$i;
              $eh$lpad$body98$indexZ2D = $$01$i;
              label = 105;
             } while (0);
             if ((label | 0) == 104) {
              $464 = ___cxa_find_matching_catch() | 0;
              $eh$lpad$body98$index43Z2D = tempRet0;
              $eh$lpad$body98$indexZ2D = $464;
              label = 105;
             } else if ((label | 0) == 152) {
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($363);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($358);
              HEAP32[$302 >> 2] = $304;
              __ZdlPv($304);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($id_token + 16 | 0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($298);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
              $$12 = $$pn;
              label = 261;
              break L49;
             }
             if ((label | 0) == 105) {
              $$7 = $eh$lpad$body98$indexZ2D;
              $$721 = $eh$lpad$body98$index43Z2D;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($363);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($358);
             $$8 = $$7;
             $$822 = $$721;
             break L104;
            } while (0);
            if ((label | 0) == 102) {
             $462 = ___cxa_find_matching_catch() | 0;
             $eh$lpad$body84$index36Z2D = tempRet0;
             $eh$lpad$body84$indexZ2D = $462;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
            $$8 = $eh$lpad$body84$indexZ2D;
            $$822 = $eh$lpad$body84$index36Z2D;
           } while (0);
           if ((label | 0) == 100) {
            $460 = ___cxa_find_matching_catch() | 0;
            $eh$lpad$body91$index31Z2D = tempRet0;
            $eh$lpad$body91$indexZ2D = $460;
            label = 101;
           }
           if ((label | 0) == 101) {
            $$8 = $eh$lpad$body91$indexZ2D;
            $$822 = $eh$lpad$body91$index31Z2D;
           }
           HEAP32[$302 >> 2] = $304;
           __ZdlPv($304);
           $$9 = $$8;
           $$923 = $$822;
          } while (0);
          if ((label | 0) == 99) {
           $$9 = $eh$lpad$body76$indexZ2D;
           $$923 = $eh$lpad$body76$index26Z2D;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($id_token + 16 | 0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($298);
          $$10 = $$9;
          $$1024 = $$923;
         }
        } while (0);
        if ((label | 0) == 96) {
         $456 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body73$index21Z2D = tempRet0;
         $eh$lpad$body73$indexZ2D = $456;
         label = 97;
        }
        if ((label | 0) == 97) {
         $$10 = $eh$lpad$body73$indexZ2D;
         $$1024 = $eh$lpad$body73$index21Z2D;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
        $$1411 = $$10;
        $$1428 = $$1024;
        break;
       }
       HEAP32[$elements >> 2] = 0;
       $608 = $elements + 4 | 0;
       HEAP32[$608 >> 2] = 0;
       $609 = $elements + 8 | 0;
       HEAP32[$609 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(57, $elements | 0, $first | 0);
       $610 = __THREW__;
       __THREW__ = 0;
       L235 : do if ($610 & 1) label = 191; else {
        $612 = $32 + 4 | 0;
        $613 = $32 + 16 | 0;
        $614 = $32 + 28 | 0;
        $615 = $118 + 1 | 0;
        $616 = $32 + 16 | 0;
        $617 = $250 + 1 | 0;
        $618 = $33 + 4 | 0;
        $619 = $33 + 16 | 0;
        $620 = $33 + 28 | 0;
        $621 = $34 + 4 | 0;
        $622 = $34 + 16 | 0;
        $623 = $34 + 28 | 0;
        $624 = $34 + 16 | 0;
        $625 = $next + 24 | 0;
        $626 = $next + 20 | 0;
        $627 = $next + 12 | 0;
        $628 = $next + 8 | 0;
        while (1) {
         $this$idx38$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
         $629 = $this$idx38$val$idx$val + 8 | 0;
         HEAP32[$32 >> 2] = HEAP32[$629 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $612 | 0, $this$idx38$val$idx$val + 12 | 0);
         $632 = __THREW__;
         __THREW__ = 0;
         if ($632 & 1) {
          label = 190;
          break;
         }
         HEAP32[$32 >> 2] = HEAP32[$629 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $613 | 0, $this$idx38$val$idx$val + 24 | 0);
         $636 = __THREW__;
         __THREW__ = 0;
         if ($636 & 1) {
          label = 161;
          break;
         }
         $640 = $this$idx38$val$idx$val + 36 | 0;
         HEAP32[$614 + 0 >> 2] = HEAP32[$640 + 0 >> 2];
         HEAP32[$614 + 4 >> 2] = HEAP32[$640 + 4 >> 2];
         HEAP32[$614 + 8 >> 2] = HEAP32[$640 + 8 >> 2];
         HEAP32[$614 + 12 >> 2] = HEAP32[$640 + 12 >> 2];
         $641 = HEAP32[$629 >> 2] | 0;
         HEAP32[$32 >> 2] = $641;
         HEAP32[$next >> 2] = $641;
         if (!(HEAP8[$118 >> 0] & 1)) {
          HEAP8[$615 >> 0] = 0;
          HEAP8[$118 >> 0] = 0;
         } else {
          HEAP8[HEAP32[$627 >> 2] >> 0] = 0;
          HEAP32[$628 >> 2] = 0;
         }
         __THREW__ = 0;
         invoke_vii(45, $118 | 0, 0);
         $646 = __THREW__;
         __THREW__ = 0;
         if ($646 & 1) {
          label = 166;
          break;
         };
         HEAP32[$118 + 0 >> 2] = HEAP32[$612 + 0 >> 2];
         HEAP32[$118 + 4 >> 2] = HEAP32[$612 + 4 >> 2];
         HEAP32[$118 + 8 >> 2] = HEAP32[$612 + 8 >> 2];
         HEAP32[$612 + 0 >> 2] = 0;
         HEAP32[$612 + 4 >> 2] = 0;
         HEAP32[$612 + 8 >> 2] = 0;
         if (!(HEAP8[$250 >> 0] & 1)) {
          HEAP8[$617 >> 0] = 0;
          HEAP8[$250 >> 0] = 0;
         } else {
          HEAP8[HEAP32[$625 >> 2] >> 0] = 0;
          HEAP32[$626 >> 2] = 0;
         }
         __THREW__ = 0;
         invoke_vii(45, $250 | 0, 0);
         $654 = __THREW__;
         __THREW__ = 0;
         if ($654 & 1) {
          label = 171;
          break;
         };
         HEAP32[$250 + 0 >> 2] = HEAP32[$616 + 0 >> 2];
         HEAP32[$250 + 4 >> 2] = HEAP32[$616 + 4 >> 2];
         HEAP32[$250 + 8 >> 2] = HEAP32[$616 + 8 >> 2];
         HEAP32[$616 + 0 >> 2] = 0;
         HEAP32[$616 + 4 >> 2] = 0;
         HEAP32[$616 + 8 >> 2] = 0;
         HEAP32[$129 + 0 >> 2] = HEAP32[$614 + 0 >> 2];
         HEAP32[$129 + 4 >> 2] = HEAP32[$614 + 4 >> 2];
         HEAP32[$129 + 8 >> 2] = HEAP32[$614 + 8 >> 2];
         HEAP32[$129 + 12 >> 2] = HEAP32[$614 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($613);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($612);
         $658 = HEAP32[$next >> 2] | 0;
         if (($658 | 0) == 5) {
          $this$idx$val$idx$val$i181 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
          $660 = $this$idx$val$idx$val$i181 + 8 | 0;
          HEAP32[$33 >> 2] = HEAP32[$660 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $618 | 0, $this$idx$val$idx$val$i181 + 12 | 0);
          $663 = __THREW__;
          __THREW__ = 0;
          if ($663 & 1) {
           label = 190;
           break;
          }
          HEAP32[$33 >> 2] = HEAP32[$660 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $619 | 0, $this$idx$val$idx$val$i181 + 24 | 0);
          $667 = __THREW__;
          __THREW__ = 0;
          if ($667 & 1) {
           label = 175;
           break;
          }
          $671 = $this$idx$val$idx$val$i181 + 36 | 0;
          HEAP32[$620 + 0 >> 2] = HEAP32[$671 + 0 >> 2];
          HEAP32[$620 + 4 >> 2] = HEAP32[$671 + 4 >> 2];
          HEAP32[$620 + 8 >> 2] = HEAP32[$671 + 8 >> 2];
          HEAP32[$620 + 12 >> 2] = HEAP32[$671 + 12 >> 2];
          HEAP32[$33 >> 2] = HEAP32[$660 >> 2];
          $673 = HEAP32[$this >> 2] | 0;
          $675 = HEAP32[$673 + 4 >> 2] | 0;
          $676 = $675 + 4 | 0;
          $678 = HEAP32[$675 >> 2] | 0;
          HEAP32[$678 + 4 >> 2] = HEAP32[$676 >> 2];
          HEAP32[HEAP32[$676 >> 2] >> 2] = $678;
          $681 = $673 + 8 | 0;
          HEAP32[$681 >> 2] = (HEAP32[$681 >> 2] | 0) + -1;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($675 + 24 | 0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($675 + 12 | 0);
          __ZdlPv($675);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($619);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($618);
          $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
          $686 = $this$idx$val$idx$val + 8 | 0;
          HEAP32[$34 >> 2] = HEAP32[$686 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $621 | 0, $this$idx$val$idx$val + 12 | 0);
          $689 = __THREW__;
          __THREW__ = 0;
          if ($689 & 1) {
           label = 190;
           break;
          }
          HEAP32[$34 >> 2] = HEAP32[$686 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $622 | 0, $this$idx$val$idx$val + 24 | 0);
          $693 = __THREW__;
          __THREW__ = 0;
          if ($693 & 1) {
           label = 178;
           break;
          }
          $697 = $this$idx$val$idx$val + 36 | 0;
          HEAP32[$623 + 0 >> 2] = HEAP32[$697 + 0 >> 2];
          HEAP32[$623 + 4 >> 2] = HEAP32[$697 + 4 >> 2];
          HEAP32[$623 + 8 >> 2] = HEAP32[$697 + 8 >> 2];
          HEAP32[$623 + 12 >> 2] = HEAP32[$697 + 12 >> 2];
          $698 = HEAP32[$686 >> 2] | 0;
          HEAP32[$34 >> 2] = $698;
          HEAP32[$next >> 2] = $698;
          if (!(HEAP8[$118 >> 0] & 1)) {
           HEAP8[$615 >> 0] = 0;
           HEAP8[$118 >> 0] = 0;
          } else {
           HEAP8[HEAP32[$627 >> 2] >> 0] = 0;
           HEAP32[$628 >> 2] = 0;
          }
          __THREW__ = 0;
          invoke_vii(45, $118 | 0, 0);
          $703 = __THREW__;
          __THREW__ = 0;
          if ($703 & 1) {
           label = 183;
           break;
          };
          HEAP32[$118 + 0 >> 2] = HEAP32[$621 + 0 >> 2];
          HEAP32[$118 + 4 >> 2] = HEAP32[$621 + 4 >> 2];
          HEAP32[$118 + 8 >> 2] = HEAP32[$621 + 8 >> 2];
          HEAP32[$621 + 0 >> 2] = 0;
          HEAP32[$621 + 4 >> 2] = 0;
          HEAP32[$621 + 8 >> 2] = 0;
          if (!(HEAP8[$250 >> 0] & 1)) {
           HEAP8[$617 >> 0] = 0;
           HEAP8[$250 >> 0] = 0;
          } else {
           HEAP8[HEAP32[$625 >> 2] >> 0] = 0;
           HEAP32[$626 >> 2] = 0;
          }
          __THREW__ = 0;
          invoke_vii(45, $250 | 0, 0);
          $711 = __THREW__;
          __THREW__ = 0;
          if ($711 & 1) {
           label = 188;
           break;
          };
          HEAP32[$250 + 0 >> 2] = HEAP32[$624 + 0 >> 2];
          HEAP32[$250 + 4 >> 2] = HEAP32[$624 + 4 >> 2];
          HEAP32[$250 + 8 >> 2] = HEAP32[$624 + 8 >> 2];
          HEAP32[$624 + 0 >> 2] = 0;
          HEAP32[$624 + 4 >> 2] = 0;
          HEAP32[$624 + 8 >> 2] = 0;
          HEAP32[$129 + 0 >> 2] = HEAP32[$623 + 0 >> 2];
          HEAP32[$129 + 4 >> 2] = HEAP32[$623 + 4 >> 2];
          HEAP32[$129 + 8 >> 2] = HEAP32[$623 + 8 >> 2];
          HEAP32[$129 + 12 >> 2] = HEAP32[$623 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($622);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($621);
          $719 = HEAP32[$next >> 2] | 0;
          $got_comma$0$off0 = 1;
         } else {
          $719 = $658;
          $got_comma$0$off0 = 0;
         }
         if (($719 | 0) == 3) {
          label = 194;
          break;
         }
         if (!$got_comma$0$off0) {
          label = 199;
          break;
         }
         __THREW__ = 0;
         $796 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
         $797 = __THREW__;
         __THREW__ = 0;
         if ($797 & 1) {
          label = 190;
          break;
         }
         HEAP32[$37 >> 2] = $796;
         $799 = HEAP32[$608 >> 2] | 0;
         if ($799 >>> 0 < (HEAP32[$609 >> 2] | 0) >>> 0) {
          if (!$799) $804 = 0; else {
           HEAP32[$799 >> 2] = $796;
           $804 = HEAP32[$608 >> 2] | 0;
          }
          HEAP32[$608 >> 2] = $804 + 4;
         } else {
          __THREW__ = 0;
          invoke_vii(51, $elements | 0, $37 | 0);
          $805 = __THREW__;
          __THREW__ = 0;
          if ($805 & 1) {
           label = 190;
           break;
          }
         }
        }
        switch (label | 0) {
        case 161:
         {
          $638 = ___cxa_find_matching_catch() | 0;
          $639 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($612);
          $eh$lpad$body172$index67Z2D = $639;
          $eh$lpad$body172$indexZ2D = $638;
          label = 192;
          break L235;
          break;
         }
        case 166:
         {
          ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
          break;
         }
        case 171:
         {
          ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
          break;
         }
        case 175:
         {
          $669 = ___cxa_find_matching_catch() | 0;
          $670 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($618);
          $eh$lpad$body172$index67Z2D = $670;
          $eh$lpad$body172$indexZ2D = $669;
          label = 192;
          break L235;
          break;
         }
        case 178:
         {
          $695 = ___cxa_find_matching_catch() | 0;
          $696 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($621);
          $eh$lpad$body172$index67Z2D = $696;
          $eh$lpad$body172$indexZ2D = $695;
          label = 192;
          break L235;
          break;
         }
        case 183:
         {
          ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
          break;
         }
        case 188:
         {
          ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
          break;
         }
        case 190:
         {
          $715 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body172$index67Z2D = tempRet0;
          $eh$lpad$body172$indexZ2D = $715;
          label = 192;
          break L235;
          break;
         }
        case 194:
         {
          $this$idx$val$idx$val$i197 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
          $721 = $this$idx$val$idx$val$i197 + 8 | 0;
          HEAP32[$35 >> 2] = HEAP32[$721 >> 2];
          $723 = $35 + 4 | 0;
          __THREW__ = 0;
          invoke_vii(40, $723 | 0, $this$idx$val$idx$val$i197 + 12 | 0);
          $725 = __THREW__;
          __THREW__ = 0;
          if ($725 & 1) {
           label = 191;
           break L235;
          }
          HEAP32[$35 >> 2] = HEAP32[$721 >> 2];
          $728 = $35 + 16 | 0;
          __THREW__ = 0;
          invoke_vii(40, $728 | 0, $this$idx$val$idx$val$i197 + 24 | 0);
          $730 = __THREW__;
          __THREW__ = 0;
          if ($730 & 1) {
           $732 = ___cxa_find_matching_catch() | 0;
           $733 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($723);
           $eh$lpad$body172$index67Z2D = $733;
           $eh$lpad$body172$indexZ2D = $732;
           label = 192;
           break L235;
          }
          $734 = $35 + 28 | 0;
          $735 = $this$idx$val$idx$val$i197 + 36 | 0;
          HEAP32[$734 + 0 >> 2] = HEAP32[$735 + 0 >> 2];
          HEAP32[$734 + 4 >> 2] = HEAP32[$735 + 4 >> 2];
          HEAP32[$734 + 8 >> 2] = HEAP32[$735 + 8 >> 2];
          HEAP32[$734 + 12 >> 2] = HEAP32[$735 + 12 >> 2];
          HEAP32[$35 >> 2] = HEAP32[$721 >> 2];
          $737 = HEAP32[$this >> 2] | 0;
          $739 = HEAP32[$737 + 4 >> 2] | 0;
          $740 = $739 + 4 | 0;
          $742 = HEAP32[$739 >> 2] | 0;
          HEAP32[$742 + 4 >> 2] = HEAP32[$740 >> 2];
          HEAP32[HEAP32[$740 >> 2] >> 2] = $742;
          $745 = $737 + 8 | 0;
          HEAP32[$745 >> 2] = (HEAP32[$745 >> 2] | 0) + -1;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($739 + 24 | 0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($739 + 12 | 0);
          __ZdlPv($739);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($728);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($723);
          $751 = HEAP32[$this + 4 >> 2] | 0;
          __THREW__ = 0;
          invoke_vii(40, $38 | 0, $58 | 0);
          $752 = __THREW__;
          __THREW__ = 0;
          if ($752 & 1) {
           label = 191;
           break L235;
          }
          $808 = $38 + 12 | 0;
          $809 = $64;
          $814 = HEAP32[$809 + 4 >> 2] | 0;
          $815 = $808;
          HEAP32[$815 >> 2] = HEAP32[$809 >> 2];
          HEAP32[$815 + 4 >> 2] = $814;
          $820 = $next + 36 | 0;
          $825 = HEAP32[$820 + 4 >> 2] | 0;
          $826 = $38 + 20 | 0;
          HEAP32[$826 >> 2] = HEAP32[$820 >> 2];
          HEAP32[$826 + 4 >> 2] = $825;
          __THREW__ = 0;
          $830 = invoke_ii(67, 60) | 0;
          $831 = __THREW__;
          __THREW__ = 0;
          L315 : do if ($831 & 1) label = 255; else {
           HEAP32[$830 >> 2] = 35936;
           $833 = $830 + 4 | 0;
           __THREW__ = 0;
           invoke_vii(40, $833 | 0, $38 | 0);
           $834 = __THREW__;
           __THREW__ = 0;
           L317 : do if ($834 & 1) {
            $897 = ___cxa_find_matching_catch() | 0;
            $eh$lpad$body344$index82Z2D = tempRet0;
            $eh$lpad$body344$indexZ2D = $897;
           } else {
            $836 = $830 + 16 | 0;
            HEAP32[$836 + 0 >> 2] = HEAP32[$808 + 0 >> 2];
            HEAP32[$836 + 4 >> 2] = HEAP32[$808 + 4 >> 2];
            HEAP32[$836 + 8 >> 2] = HEAP32[$808 + 8 >> 2];
            HEAP32[$836 + 12 >> 2] = HEAP32[$808 + 12 >> 2];
            HEAP32[$830 + 32 >> 2] = 1;
            $838 = $830 + 36 | 0;
            HEAP32[$838 >> 2] = 0;
            $839 = $830 + 40 | 0;
            HEAP32[$839 >> 2] = 0;
            HEAP32[$830 + 44 >> 2] = 0;
            HEAP32[$830 >> 2] = 38176;
            $841 = $830 + 48 | 0;
            HEAP32[$841 >> 2] = 0;
            $842 = $830 + 52 | 0;
            HEAP32[$842 >> 2] = 0;
            $843 = $830 + 56 | 0;
            HEAP32[$843 >> 2] = 0;
            $848 = (HEAP32[$608 >> 2] | 0) - (HEAP32[$elements >> 2] | 0) | 0;
            $849 = $848 >> 2;
            L320 : do if ($849) {
             if ($849 >>> 0 > 1073741823) {
              __THREW__ = 0;
              invoke_vi(182, $841 | 0);
              $852 = __THREW__;
              __THREW__ = 0;
              if (!($852 & 1)) label = 230;
             } else label = 230;
             do if ((label | 0) == 230) {
              __THREW__ = 0;
              $854 = invoke_ii(67, $848 | 0) | 0;
              $855 = __THREW__;
              __THREW__ = 0;
              if ($855 & 1) break;
              HEAP32[$842 >> 2] = $854;
              HEAP32[$841 >> 2] = $854;
              HEAP32[$843 >> 2] = $854 + ($849 << 2);
              $858 = HEAP32[$elements >> 2] | 0;
              $859 = HEAP32[$608 >> 2] | 0;
              if (($858 | 0) == ($859 | 0)) break L320;
              $$01$i$i380 = $858;
              $862 = $854;
              do {
               HEAP32[$862 >> 2] = HEAP32[$$01$i$i380 >> 2];
               $862 = (HEAP32[$842 >> 2] | 0) + 4 | 0;
               HEAP32[$842 >> 2] = $862;
               $$01$i$i380 = $$01$i$i380 + 4 | 0;
              } while (($$01$i$i380 | 0) != ($859 | 0));
              break L320;
             } while (0);
             $866 = ___cxa_find_matching_catch() | 0;
             $867 = tempRet0;
             $868 = HEAP32[$841 >> 2] | 0;
             $870 = $868;
             if ($868) {
              $871 = HEAP32[$842 >> 2] | 0;
              if (($871 | 0) != ($868 | 0)) HEAP32[$842 >> 2] = $871 + (~(($871 + -4 - $870 | 0) >>> 2) << 2);
              __ZdlPv($868);
             }
             HEAP32[$830 >> 2] = 35936;
             $877 = HEAP32[$838 >> 2] | 0;
             $879 = $877;
             if ($877) {
              $880 = HEAP32[$839 >> 2] | 0;
              if (($880 | 0) != ($877 | 0)) HEAP32[$839 >> 2] = $880 + (~(($880 + -4 - $879 | 0) >>> 2) << 2);
              __ZdlPv($877);
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($833);
             $eh$lpad$body344$index82Z2D = $867;
             $eh$lpad$body344$indexZ2D = $866;
             break L317;
            } while (0);
            HEAP32[$11 >> 2] = $830;
            $886 = $751 + 16 | 0;
            $887 = HEAP32[$886 >> 2] | 0;
            if ($887 >>> 0 < (HEAP32[$751 + 20 >> 2] | 0) >>> 0) {
             if (!$887) $893 = 0; else {
              HEAP32[$887 >> 2] = $830;
              $893 = HEAP32[$886 >> 2] | 0;
             }
             HEAP32[$886 >> 2] = $893 + 4;
            } else {
             __THREW__ = 0;
             invoke_vii(51, $751 + 12 | 0, $11 | 0);
             $895 = __THREW__;
             __THREW__ = 0;
             if ($895 & 1) {
              label = 255;
              break L315;
             }
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($38);
            $899 = HEAP32[$elements >> 2] | 0;
            if (!$899) {
             $$12 = $830;
             label = 261;
             break L49;
            }
            $902 = HEAP32[$608 >> 2] | 0;
            if (($902 | 0) != ($899 | 0)) HEAP32[$608 >> 2] = $902 + (~(($902 + -4 - $899 | 0) >>> 2) << 2);
            __ZdlPv($899);
            $$12 = $830;
            label = 261;
            break L49;
           } while (0);
           __ZdlPv($830);
           $eh$lpad$body227$index87Z2D = $eh$lpad$body344$index82Z2D;
           $eh$lpad$body227$indexZ2D = $eh$lpad$body344$indexZ2D;
          } while (0);
          if ((label | 0) == 255) {
           $908 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body227$index87Z2D = tempRet0;
           $eh$lpad$body227$indexZ2D = $908;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($38);
          $$13 = $eh$lpad$body227$indexZ2D;
          $$1327 = $eh$lpad$body227$index87Z2D;
          break L235;
          break;
         }
        case 199:
         {
          $754 = $ss2 + 64 | 0;
          $755 = $ss2 + 8 | 0;
          HEAP32[$755 >> 2] = 752;
          $756 = $ss2 + 12 | 0;
          HEAP32[$ss2 >> 2] = 900;
          HEAP32[$754 >> 2] = 920;
          HEAP32[$ss2 + 4 >> 2] = 0;
          __THREW__ = 0;
          invoke_vii(41, $ss2 + 64 | 0, $756 | 0);
          $759 = __THREW__;
          __THREW__ = 0;
          if ($759 & 1) {
           $771 = ___cxa_find_matching_catch() | 0;
           $$0$i208 = tempRet0;
           $$01$i207 = $771;
          } else {
           HEAP32[$ss2 + 136 >> 2] = 0;
           HEAP32[$ss2 + 140 >> 2] = -1;
           HEAP32[$ss2 >> 2] = 732;
           HEAP32[$754 >> 2] = 772;
           HEAP32[$755 >> 2] = 752;
           __THREW__ = 0;
           invoke_vi(177, $756 | 0);
           $763 = __THREW__;
           __THREW__ = 0;
           do if ($763 & 1) {
            $773 = ___cxa_find_matching_catch() | 0;
            $eh$lpad$body$i205$index77Z2D = tempRet0;
            $eh$lpad$body$i205$indexZ2D = $773;
           } else {
            HEAP32[$756 >> 2] = 1064;
            $765 = $ss2 + 44 | 0;
            HEAP32[$765 + 0 >> 2] = 0;
            HEAP32[$765 + 4 >> 2] = 0;
            HEAP32[$765 + 8 >> 2] = 0;
            HEAP32[$765 + 12 >> 2] = 0;
            HEAP32[$ss2 + 60 >> 2] = 24;
            HEAP32[$12 + 0 >> 2] = 0;
            HEAP32[$12 + 4 >> 2] = 0;
            HEAP32[$12 + 8 >> 2] = 0;
            __THREW__ = 0;
            invoke_vii(42, $756 | 0, $12 | 0);
            $767 = __THREW__;
            __THREW__ = 0;
            if ($767 & 1) {
             $769 = ___cxa_find_matching_catch() | 0;
             $770 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($765);
             __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($756);
             $eh$lpad$body$i205$index77Z2D = $770;
             $eh$lpad$body$i205$indexZ2D = $769;
             break;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
            __THREW__ = 0;
            invoke_iiii(25, $755 | 0, 37984, 43) | 0;
            $775 = __THREW__;
            __THREW__ = 0;
            L289 : do if ($775 & 1) {
             $790 = ___cxa_find_matching_catch() | 0;
             $$1210 = $790;
             $$1226 = tempRet0;
            } else {
             $777 = ___cxa_allocate_exception(40) | 0;
             __THREW__ = 0;
             invoke_vii(43, $36 | 0, $756 | 0);
             $778 = __THREW__;
             __THREW__ = 0;
             L292 : do if ($778 & 1) {
              $792 = ___cxa_find_matching_catch() | 0;
              $$1125412 = tempRet0;
              $$11413 = $792;
             } else {
              __THREW__ = 0;
              invoke_vii(40, $777 | 0, $250 | 0);
              $780 = __THREW__;
              __THREW__ = 0;
              do if ($780 & 1) $$03 = 1; else {
               $782 = $777 + 12 | 0;
               HEAP32[$782 + 0 >> 2] = HEAP32[$129 + 0 >> 2];
               HEAP32[$782 + 4 >> 2] = HEAP32[$129 + 4 >> 2];
               HEAP32[$782 + 8 >> 2] = HEAP32[$129 + 8 >> 2];
               HEAP32[$782 + 12 >> 2] = HEAP32[$129 + 12 >> 2];
               __THREW__ = 0;
               invoke_vii(40, $777 + 28 | 0, $36 | 0);
               $784 = __THREW__;
               __THREW__ = 0;
               if ($784 & 1) {
                $786 = ___cxa_find_matching_catch() | 0;
                $787 = tempRet0;
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($777);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
                $$1125412 = $787;
                $$11413 = $786;
                break L292;
               }
               __THREW__ = 0;
               invoke_viii(4, $777 | 0, 48, 176);
               $788 = __THREW__;
               __THREW__ = 0;
               if ($788 & 1) {
                $$03 = 0;
                break;
               }
              } while (0);
              $794 = ___cxa_find_matching_catch() | 0;
              $795 = tempRet0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
              if ($$03) {
               $$1125412 = $795;
               $$11413 = $794;
              } else {
               $$1210 = $794;
               $$1226 = $795;
               break L289;
              }
             } while (0);
             ___cxa_free_exception($777 | 0);
             $$1210 = $$11413;
             $$1226 = $$1125412;
            } while (0);
            HEAP32[$ss2 >> 2] = 732;
            HEAP32[$754 >> 2] = 772;
            HEAP32[$755 >> 2] = 752;
            HEAP32[$756 >> 2] = 1064;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($765);
            __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($756);
            __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($754);
            $$13 = $$1210;
            $$1327 = $$1226;
            break L235;
           } while (0);
           $$0$i208 = $eh$lpad$body$i205$index77Z2D;
           $$01$i207 = $eh$lpad$body$i205$indexZ2D;
          }
          __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($754);
          $eh$lpad$body172$index67Z2D = $$0$i208;
          $eh$lpad$body172$indexZ2D = $$01$i207;
          label = 192;
          break L235;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 191) {
        $717 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body172$index67Z2D = tempRet0;
        $eh$lpad$body172$indexZ2D = $717;
        label = 192;
       }
       if ((label | 0) == 192) {
        $$13 = $eh$lpad$body172$indexZ2D;
        $$1327 = $eh$lpad$body172$index67Z2D;
       }
       $910 = HEAP32[$elements >> 2] | 0;
       $912 = $910;
       if (!$910) {
        $$1411 = $$13;
        $$1428 = $$1327;
       } else {
        $913 = HEAP32[$608 >> 2] | 0;
        if (($913 | 0) != ($910 | 0)) HEAP32[$608 >> 2] = $913 + (~(($913 + -4 - $912 | 0) >>> 2) << 2);
        __ZdlPv($910);
        $$1411 = $$13;
        $$1428 = $$1327;
       }
      }
     }
    } while (0);
    if ((label | 0) == 39) {
     $216 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body51$index10Z2D = tempRet0;
     $eh$lpad$body51$indexZ2D = $216;
     label = 40;
    } else if ((label | 0) == 261) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($123);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($118);
     $$2 = $$12;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     STACKTOP = sp;
     return $$2 | 0;
    }
    if ((label | 0) == 40) {
     $$1411 = $eh$lpad$body51$indexZ2D;
     $$1428 = $eh$lpad$body51$index10Z2D;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($123);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($118);
    $$19 = $$1411;
    $$1933 = $$1428;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    ___resumeException($$19 | 0);
   }
   break;
  }
 case 27:
 case 26:
 case 10:
 case 9:
 case 13:
 case 24:
 case 23:
 case 20:
 case 19:
 case 18:
 case 16:
 case 15:
 case 7:
 case 5:
 case 4:
 case 3:
 case 1:
  {
   $81 = ___cxa_allocate_exception(40) | 0;
   __THREW__ = 0;
   invoke_viii(3, $18 | 0, 37864, 16);
   $82 = __THREW__;
   __THREW__ = 0;
   if ($82 & 1) {
    $88 = ___cxa_find_matching_catch() | 0;
    $$014401 = tempRet0;
    $$07402 = $88;
   } else {
    __THREW__ = 0;
    invoke_viii(7, $81 | 0, $tok | 0, $18 | 0);
    $84 = __THREW__;
    __THREW__ = 0;
    if ($84 & 1) $$034 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $81 | 0, 48, 176);
     $86 = __THREW__;
     __THREW__ = 0;
     if ($86 & 1) $$034 = 0; else {}
    }
    $90 = ___cxa_find_matching_catch() | 0;
    $91 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
    if ($$034) {
     $$014401 = $91;
     $$07402 = $90;
    } else {
     $$19 = $90;
     $$1933 = $91;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     ___resumeException($$19 | 0);
    }
   }
   ___cxa_free_exception($81 | 0);
   $$19 = $$07402;
   $$1933 = $$014401;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
   ___resumeException($$19 | 0);
   break;
  }
 case 0:
  {
   __THREW__ = 0;
   invoke_viiiii(5, $20 | 0, $this | 0, $obj | 0, $tok | 0, $obj_level | 0);
   $109 = __THREW__;
   __THREW__ = 0;
   if ($109 & 1) label = 20; else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20 + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20 + 4 | 0);
    $$2 = HEAP32[$obj >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    STACKTOP = sp;
    return $$2 | 0;
   }
   break;
  }
 case 6:
  {
   if (!$obj_level) {
    $1330 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $47 | 0, 38032, 26);
    $1331 = __THREW__;
    __THREW__ = 0;
    do if ($1331 & 1) {
     $1343 = ___cxa_find_matching_catch() | 0;
     $$1731416 = tempRet0;
     $$17417 = $1343;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $1330 | 0, $58 | 0);
     $1333 = __THREW__;
     __THREW__ = 0;
     if ($1333 & 1) $$0 = 1; else {
      $1335 = $1330 + 12 | 0;
      HEAP32[$1335 + 0 >> 2] = HEAP32[$64 + 0 >> 2];
      HEAP32[$1335 + 4 >> 2] = HEAP32[$64 + 4 >> 2];
      HEAP32[$1335 + 8 >> 2] = HEAP32[$64 + 8 >> 2];
      HEAP32[$1335 + 12 >> 2] = HEAP32[$64 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1330 + 28 | 0, $47 | 0);
      $1337 = __THREW__;
      __THREW__ = 0;
      if ($1337 & 1) {
       $1339 = ___cxa_find_matching_catch() | 0;
       $1340 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1330);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
       $$1731416 = $1340;
       $$17417 = $1339;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $1330 | 0, 48, 176);
      $1341 = __THREW__;
      __THREW__ = 0;
      if ($1341 & 1) $$0 = 0; else {}
     }
     $1345 = ___cxa_find_matching_catch() | 0;
     $1346 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
     if ($$0) {
      $$1731416 = $1346;
      $$17417 = $1345;
     } else {
      $$19 = $1345;
      $$1933 = $1346;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
      ___resumeException($$19 | 0);
     }
    } while (0);
    ___cxa_free_exception($1330 | 0);
    $$19 = $$17417;
    $$1933 = $$1731416;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    ___resumeException($$19 | 0);
   }
   $1347 = $this + 4 | 0;
   $1348 = HEAP32[$1347 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $48 | 0, $58 | 0);
   $1349 = __THREW__;
   __THREW__ = 0;
   if ($1349 & 1) label = 20; else {
    $1352 = $48 + 12 | 0;
    $1353 = $64;
    $1358 = HEAP32[$1353 + 4 >> 2] | 0;
    $1359 = $1352;
    HEAP32[$1359 >> 2] = HEAP32[$1353 >> 2];
    HEAP32[$1359 + 4 >> 2] = $1358;
    $1364 = $tok + 36 | 0;
    $1369 = HEAP32[$1364 + 4 >> 2] | 0;
    $1370 = $48 + 20 | 0;
    HEAP32[$1370 >> 2] = HEAP32[$1364 >> 2];
    HEAP32[$1370 + 4 >> 2] = $1369;
    $1374 = HEAP32[$1347 >> 2] | 0;
    __THREW__ = 0;
    invoke_viii(3, $49 | 0, 37384, 1);
    $1375 = __THREW__;
    __THREW__ = 0;
    if ($1375 & 1) {
     $1406 = ___cxa_find_matching_catch() | 0;
     $$1813 = $1406;
     $$1832 = tempRet0;
    } else {
     __THREW__ = 0;
     $1377 = invoke_iii(23, $1374 | 0, $49 | 0) | 0;
     $1378 = __THREW__;
     __THREW__ = 0;
     do if ($1378 & 1) label = 387; else {
      __THREW__ = 0;
      $1380 = invoke_ii(67, 56) | 0;
      $1381 = __THREW__;
      __THREW__ = 0;
      if ($1381 & 1) label = 387; else {
       HEAP32[$1380 >> 2] = 35936;
       __THREW__ = 0;
       invoke_vii(40, $1380 + 4 | 0, $48 | 0);
       $1384 = __THREW__;
       __THREW__ = 0;
       if ($1384 & 1) {
        $1404 = ___cxa_find_matching_catch() | 0;
        $1405 = tempRet0;
        __ZdlPv($1380);
        $eh$lpad$body303$index132Z2D = $1405;
        $eh$lpad$body303$indexZ2D = $1404;
        break;
       }
       $1386 = $1380 + 16 | 0;
       HEAP32[$1386 + 0 >> 2] = HEAP32[$1352 + 0 >> 2];
       HEAP32[$1386 + 4 >> 2] = HEAP32[$1352 + 4 >> 2];
       HEAP32[$1386 + 8 >> 2] = HEAP32[$1352 + 8 >> 2];
       HEAP32[$1386 + 12 >> 2] = HEAP32[$1352 + 12 >> 2];
       HEAP32[$1380 + 32 >> 2] = 20;
       HEAP32[$1380 + 36 >> 2] = 0;
       HEAP32[$1380 + 40 >> 2] = 0;
       HEAP32[$1380 + 44 >> 2] = 0;
       HEAP32[$1380 >> 2] = 37376;
       HEAP32[$1380 + 48 >> 2] = $1377;
       HEAP32[$1380 + 52 >> 2] = $1377;
       HEAP32[$4 >> 2] = $1380;
       $1393 = $1348 + 16 | 0;
       $1394 = HEAP32[$1393 >> 2] | 0;
       if ($1394 >>> 0 < (HEAP32[$1348 + 20 >> 2] | 0) >>> 0) {
        if (!$1394) $1400 = 0; else {
         HEAP32[$1394 >> 2] = $1380;
         $1400 = HEAP32[$1393 >> 2] | 0;
        }
        HEAP32[$1393 >> 2] = $1400 + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(51, $1348 + 12 | 0, $4 | 0);
        $1402 = __THREW__;
        __THREW__ = 0;
        if ($1402 & 1) {
         label = 387;
         break;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
       $$2 = $1380;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
       STACKTOP = sp;
       return $$2 | 0;
      }
     } while (0);
     if ((label | 0) == 387) {
      $1408 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body303$index132Z2D = tempRet0;
      $eh$lpad$body303$indexZ2D = $1408;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
     $$1813 = $eh$lpad$body303$indexZ2D;
     $$1832 = $eh$lpad$body303$index132Z2D;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
    $$19 = $$1813;
    $$1933 = $$1832;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    ___resumeException($$19 | 0);
   }
   break;
  }
 case 22:
  {
   __THREW__ = 0;
   invoke_viiii(13, $file3 | 0, $this | 0, 14, 0);
   $1255 = __THREW__;
   __THREW__ = 0;
   if ($1255 & 1) label = 20; else {
    $1258 = HEAP32[$this + 4 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $46 | 0, $58 | 0);
    $1259 = __THREW__;
    __THREW__ = 0;
    if ($1259 & 1) {
     $1324 = ___cxa_find_matching_catch() | 0;
     $$1612 = $1324;
     $$1630 = tempRet0;
     $$pre$phi435Z2D = $file3 + 4 | 0;
    } else {
     $1262 = $46 + 12 | 0;
     $1263 = $64;
     $1268 = HEAP32[$1263 + 4 >> 2] | 0;
     $1269 = $1262;
     HEAP32[$1269 >> 2] = HEAP32[$1263 >> 2];
     HEAP32[$1269 + 4 >> 2] = $1268;
     $1274 = $file3 + 36 | 0;
     $1279 = HEAP32[$1274 + 4 >> 2] | 0;
     $1280 = $46 + 20 | 0;
     HEAP32[$1280 >> 2] = HEAP32[$1274 >> 2];
     HEAP32[$1280 + 4 >> 2] = $1279;
     $1284 = $file3 + 4 | 0;
     __THREW__ = 0;
     $1285 = invoke_ii(67, 60) | 0;
     $1286 = __THREW__;
     __THREW__ = 0;
     L453 : do if ($1286 & 1) label = 362; else {
      HEAP32[$1285 >> 2] = 35936;
      $1288 = $1285 + 4 | 0;
      __THREW__ = 0;
      invoke_vii(40, $1288 | 0, $46 | 0);
      $1289 = __THREW__;
      __THREW__ = 0;
      do if ($1289 & 1) {
       $1321 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body361$index122Z2D = tempRet0;
       $eh$lpad$body361$indexZ2D = $1321;
      } else {
       $1291 = $1285 + 16 | 0;
       HEAP32[$1291 + 0 >> 2] = HEAP32[$1262 + 0 >> 2];
       HEAP32[$1291 + 4 >> 2] = HEAP32[$1262 + 4 >> 2];
       HEAP32[$1291 + 8 >> 2] = HEAP32[$1262 + 8 >> 2];
       HEAP32[$1291 + 12 >> 2] = HEAP32[$1262 + 12 >> 2];
       HEAP32[$1285 + 32 >> 2] = 8;
       $1293 = $1285 + 36 | 0;
       HEAP32[$1293 >> 2] = 0;
       $1294 = $1285 + 40 | 0;
       HEAP32[$1294 >> 2] = 0;
       HEAP32[$1285 + 44 >> 2] = 0;
       HEAP32[$1285 >> 2] = 38112;
       __THREW__ = 0;
       invoke_vii(40, $1285 + 48 | 0, $1284 | 0);
       $1297 = __THREW__;
       __THREW__ = 0;
       if ($1297 & 1) {
        $1299 = ___cxa_find_matching_catch() | 0;
        $1300 = tempRet0;
        HEAP32[$1285 >> 2] = 35936;
        $1301 = HEAP32[$1293 >> 2] | 0;
        $1303 = $1301;
        if ($1301) {
         $1304 = HEAP32[$1294 >> 2] | 0;
         if (($1304 | 0) != ($1301 | 0)) HEAP32[$1294 >> 2] = $1304 + (~(($1304 + -4 - $1303 | 0) >>> 2) << 2);
         __ZdlPv($1301);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1288);
        $eh$lpad$body361$index122Z2D = $1300;
        $eh$lpad$body361$indexZ2D = $1299;
        break;
       }
       HEAP32[$5 >> 2] = $1285;
       $1310 = $1258 + 16 | 0;
       $1311 = HEAP32[$1310 >> 2] | 0;
       if ($1311 >>> 0 < (HEAP32[$1258 + 20 >> 2] | 0) >>> 0) {
        if (!$1311) $1317 = 0; else {
         HEAP32[$1311 >> 2] = $1285;
         $1317 = HEAP32[$1310 >> 2] | 0;
        }
        HEAP32[$1310 >> 2] = $1317 + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(51, $1258 + 12 | 0, $5 | 0);
        $1319 = __THREW__;
        __THREW__ = 0;
        if ($1319 & 1) {
         label = 362;
         break L453;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($file3 + 16 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1284);
       $$2 = $1285;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
       STACKTOP = sp;
       return $$2 | 0;
      } while (0);
      __ZdlPv($1285);
      $eh$lpad$body287$index127Z2D = $eh$lpad$body361$index122Z2D;
      $eh$lpad$body287$indexZ2D = $eh$lpad$body361$indexZ2D;
     } while (0);
     if ((label | 0) == 362) {
      $1326 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body287$index127Z2D = tempRet0;
      $eh$lpad$body287$indexZ2D = $1326;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
     $$1612 = $eh$lpad$body287$indexZ2D;
     $$1630 = $eh$lpad$body287$index127Z2D;
     $$pre$phi435Z2D = $1284;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($file3 + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$pre$phi435Z2D);
    $$19 = $$1612;
    $$1933 = $$1630;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    ___resumeException($$19 | 0);
   }
   break;
  }
 case 25:
  {
   $1129 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $44 | 0, $58 | 0);
   $1130 = __THREW__;
   __THREW__ = 0;
   if ($1130 & 1) label = 20; else {
    $1133 = $44 + 12 | 0;
    $1134 = $64;
    $1139 = HEAP32[$1134 + 4 >> 2] | 0;
    $1140 = $1133;
    HEAP32[$1140 >> 2] = HEAP32[$1134 >> 2];
    HEAP32[$1140 + 4 >> 2] = $1139;
    $1145 = $tok + 36 | 0;
    $1150 = HEAP32[$1145 + 4 >> 2] | 0;
    $1151 = $44 + 20 | 0;
    HEAP32[$1151 >> 2] = HEAP32[$1145 >> 2];
    HEAP32[$1151 + 4 >> 2] = $1150;
    __THREW__ = 0;
    $1155 = invoke_ii(67, 48) | 0;
    $1156 = __THREW__;
    __THREW__ = 0;
    do if ($1156 & 1) label = 319; else {
     HEAP32[$1155 >> 2] = 35936;
     __THREW__ = 0;
     invoke_vii(40, $1155 + 4 | 0, $44 | 0);
     $1159 = __THREW__;
     __THREW__ = 0;
     if ($1159 & 1) {
      $1177 = ___cxa_find_matching_catch() | 0;
      $1178 = tempRet0;
      __ZdlPv($1155);
      $eh$lpad$body271$index107Z2D = $1178;
      $eh$lpad$body271$indexZ2D = $1177;
      break;
     }
     $1161 = $1155 + 16 | 0;
     HEAP32[$1161 + 0 >> 2] = HEAP32[$1133 + 0 >> 2];
     HEAP32[$1161 + 4 >> 2] = HEAP32[$1133 + 4 >> 2];
     HEAP32[$1161 + 8 >> 2] = HEAP32[$1133 + 8 >> 2];
     HEAP32[$1161 + 12 >> 2] = HEAP32[$1133 + 12 >> 2];
     HEAP32[$1155 + 32 >> 2] = 12;
     HEAP32[$1155 + 36 >> 2] = 0;
     HEAP32[$1155 + 40 >> 2] = 0;
     HEAP32[$1155 + 44 >> 2] = 0;
     HEAP32[$1155 >> 2] = 38272;
     HEAP32[$7 >> 2] = $1155;
     $1166 = $1129 + 16 | 0;
     $1167 = HEAP32[$1166 >> 2] | 0;
     if ($1167 >>> 0 < (HEAP32[$1129 + 20 >> 2] | 0) >>> 0) {
      if (!$1167) $1173 = 0; else {
       HEAP32[$1167 >> 2] = $1155;
       $1173 = HEAP32[$1166 >> 2] | 0;
      }
      HEAP32[$1166 >> 2] = $1173 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1129 + 12 | 0, $7 | 0);
      $1175 = __THREW__;
      __THREW__ = 0;
      if ($1175 & 1) {
       label = 319;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     $$2 = $1155;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 319) {
     $1179 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body271$index107Z2D = tempRet0;
     $eh$lpad$body271$indexZ2D = $1179;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
    $$19 = $eh$lpad$body271$indexZ2D;
    $$1933 = $eh$lpad$body271$index107Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    ___resumeException($$19 | 0);
   }
   break;
  }
 case 31:
  {
   $92 = ___cxa_allocate_exception(40) | 0;
   __THREW__ = 0;
   invoke_viii(3, $19 | 0, 37888, 23);
   $93 = __THREW__;
   __THREW__ = 0;
   do if ($93 & 1) {
    $105 = ___cxa_find_matching_catch() | 0;
    $$115404 = tempRet0;
    $$18405 = $105;
   } else {
    __THREW__ = 0;
    invoke_vii(40, $92 | 0, $58 | 0);
    $95 = __THREW__;
    __THREW__ = 0;
    if ($95 & 1) $$036 = 1; else {
     $97 = $92 + 12 | 0;
     HEAP32[$97 + 0 >> 2] = HEAP32[$64 + 0 >> 2];
     HEAP32[$97 + 4 >> 2] = HEAP32[$64 + 4 >> 2];
     HEAP32[$97 + 8 >> 2] = HEAP32[$64 + 8 >> 2];
     HEAP32[$97 + 12 >> 2] = HEAP32[$64 + 12 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $92 + 28 | 0, $19 | 0);
     $99 = __THREW__;
     __THREW__ = 0;
     if ($99 & 1) {
      $101 = ___cxa_find_matching_catch() | 0;
      $102 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($92);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
      $$115404 = $102;
      $$18405 = $101;
      break;
     }
     __THREW__ = 0;
     invoke_viii(4, $92 | 0, 48, 176);
     $103 = __THREW__;
     __THREW__ = 0;
     if ($103 & 1) $$036 = 0; else {}
    }
    $107 = ___cxa_find_matching_catch() | 0;
    $108 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
    if ($$036) {
     $$115404 = $108;
     $$18405 = $107;
    } else {
     $$19 = $107;
     $$1933 = $108;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     ___resumeException($$19 | 0);
    }
   } while (0);
   ___cxa_free_exception($92 | 0);
   $$19 = $$18405;
   $$1933 = $$115404;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
   ___resumeException($$19 | 0);
   break;
  }
 case 17:
  {
   $1021 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $42 | 0, $58 | 0);
   $1022 = __THREW__;
   __THREW__ = 0;
   if ($1022 & 1) label = 20; else {
    $1025 = $42 + 12 | 0;
    $1026 = $64;
    $1031 = HEAP32[$1026 + 4 >> 2] | 0;
    $1032 = $1025;
    HEAP32[$1032 >> 2] = HEAP32[$1026 >> 2];
    HEAP32[$1032 + 4 >> 2] = $1031;
    $1037 = $tok + 36 | 0;
    $1042 = HEAP32[$1037 + 4 >> 2] | 0;
    $1043 = $42 + 20 | 0;
    HEAP32[$1043 >> 2] = HEAP32[$1037 >> 2];
    HEAP32[$1043 + 4 >> 2] = $1042;
    __THREW__ = 0;
    $1047 = invoke_ii(67, 52) | 0;
    $1048 = __THREW__;
    __THREW__ = 0;
    do if ($1048 & 1) label = 295; else {
     HEAP32[$1047 >> 2] = 35936;
     __THREW__ = 0;
     invoke_vii(40, $1047 + 4 | 0, $42 | 0);
     $1051 = __THREW__;
     __THREW__ = 0;
     if ($1051 & 1) {
      $1070 = ___cxa_find_matching_catch() | 0;
      $1071 = tempRet0;
      __ZdlPv($1047);
      $eh$lpad$body254$index97Z2D = $1071;
      $eh$lpad$body254$indexZ2D = $1070;
      break;
     }
     $1053 = $1047 + 16 | 0;
     HEAP32[$1053 + 0 >> 2] = HEAP32[$1025 + 0 >> 2];
     HEAP32[$1053 + 4 >> 2] = HEAP32[$1025 + 4 >> 2];
     HEAP32[$1053 + 8 >> 2] = HEAP32[$1025 + 8 >> 2];
     HEAP32[$1053 + 12 >> 2] = HEAP32[$1025 + 12 >> 2];
     HEAP32[$1047 + 32 >> 2] = 11;
     HEAP32[$1047 + 36 >> 2] = 0;
     HEAP32[$1047 + 40 >> 2] = 0;
     HEAP32[$1047 + 44 >> 2] = 0;
     HEAP32[$1047 >> 2] = 38144;
     HEAP8[$1047 + 48 >> 0] = 0;
     HEAP32[$9 >> 2] = $1047;
     $1059 = $1021 + 16 | 0;
     $1060 = HEAP32[$1059 >> 2] | 0;
     if ($1060 >>> 0 < (HEAP32[$1021 + 20 >> 2] | 0) >>> 0) {
      if (!$1060) $1066 = 0; else {
       HEAP32[$1060 >> 2] = $1047;
       $1066 = HEAP32[$1059 >> 2] | 0;
      }
      HEAP32[$1059 >> 2] = $1066 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1021 + 12 | 0, $9 | 0);
      $1068 = __THREW__;
      __THREW__ = 0;
      if ($1068 & 1) {
       label = 295;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
     $$2 = $1047;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 295) {
     $1072 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body254$index97Z2D = tempRet0;
     $eh$lpad$body254$indexZ2D = $1072;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
    $$19 = $eh$lpad$body254$indexZ2D;
    $$1933 = $eh$lpad$body254$index97Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    ___resumeException($$19 | 0);
   }
   break;
  }
 case 29:
  {
   $1523 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $52 | 0, $58 | 0);
   $1524 = __THREW__;
   __THREW__ = 0;
   if ($1524 & 1) label = 20; else {
    $1527 = $52 + 12 | 0;
    $1528 = $64;
    $1533 = HEAP32[$1528 + 4 >> 2] | 0;
    $1534 = $1527;
    HEAP32[$1534 >> 2] = HEAP32[$1528 >> 2];
    HEAP32[$1534 + 4 >> 2] = $1533;
    $1539 = $tok + 36 | 0;
    $1544 = HEAP32[$1539 + 4 >> 2] | 0;
    $1545 = $52 + 20 | 0;
    HEAP32[$1545 >> 2] = HEAP32[$1539 >> 2];
    HEAP32[$1545 + 4 >> 2] = $1544;
    __THREW__ = 0;
    $1549 = invoke_ii(67, 48) | 0;
    $1550 = __THREW__;
    __THREW__ = 0;
    do if ($1550 & 1) label = 425; else {
     HEAP32[$1549 >> 2] = 35936;
     __THREW__ = 0;
     invoke_vii(40, $1549 + 4 | 0, $52 | 0);
     $1553 = __THREW__;
     __THREW__ = 0;
     if ($1553 & 1) {
      $1571 = ___cxa_find_matching_catch() | 0;
      $1572 = tempRet0;
      __ZdlPv($1549);
      $eh$lpad$body328$index147Z2D = $1572;
      $eh$lpad$body328$indexZ2D = $1571;
      break;
     }
     $1555 = $1549 + 16 | 0;
     HEAP32[$1555 + 0 >> 2] = HEAP32[$1527 + 0 >> 2];
     HEAP32[$1555 + 4 >> 2] = HEAP32[$1527 + 4 >> 2];
     HEAP32[$1555 + 8 >> 2] = HEAP32[$1527 + 8 >> 2];
     HEAP32[$1555 + 12 >> 2] = HEAP32[$1527 + 12 >> 2];
     HEAP32[$1549 + 32 >> 2] = 18;
     HEAP32[$1549 + 36 >> 2] = 0;
     HEAP32[$1549 + 40 >> 2] = 0;
     HEAP32[$1549 + 44 >> 2] = 0;
     HEAP32[$1549 >> 2] = 37792;
     HEAP32[$1 >> 2] = $1549;
     $1560 = $1523 + 16 | 0;
     $1561 = HEAP32[$1560 >> 2] | 0;
     if ($1561 >>> 0 < (HEAP32[$1523 + 20 >> 2] | 0) >>> 0) {
      if (!$1561) $1567 = 0; else {
       HEAP32[$1561 >> 2] = $1549;
       $1567 = HEAP32[$1560 >> 2] | 0;
      }
      HEAP32[$1560 >> 2] = $1567 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1523 + 12 | 0, $1 | 0);
      $1569 = __THREW__;
      __THREW__ = 0;
      if ($1569 & 1) {
       label = 425;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
     $$2 = $1549;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 425) {
     $1573 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body328$index147Z2D = tempRet0;
     $eh$lpad$body328$indexZ2D = $1573;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
    $$19 = $eh$lpad$body328$indexZ2D;
    $$1933 = $eh$lpad$body328$index147Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    ___resumeException($$19 | 0);
   }
   break;
  }
 case 8:
  {
   __THREW__ = 0;
   $919 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
   $920 = __THREW__;
   __THREW__ = 0;
   if ($920 & 1) label = 20; else {
    __THREW__ = 0;
    invoke_viiii(13, $39 | 0, $this | 0, 9, 0);
    $922 = __THREW__;
    __THREW__ = 0;
    if ($922 & 1) label = 20; else {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39 + 16 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39 + 4 | 0);
     $$2 = $919;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     STACKTOP = sp;
     return $$2 | 0;
    }
   }
   break;
  }
 case 12:
  {
   $927 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $40 | 0, $58 | 0);
   $928 = __THREW__;
   __THREW__ = 0;
   if ($928 & 1) label = 20; else {
    $931 = $40 + 12 | 0;
    $932 = $64;
    $937 = HEAP32[$932 + 4 >> 2] | 0;
    $938 = $931;
    HEAP32[$938 >> 2] = HEAP32[$932 >> 2];
    HEAP32[$938 + 4 >> 2] = $937;
    $943 = $tok + 36 | 0;
    $948 = HEAP32[$943 + 4 >> 2] | 0;
    $949 = $40 + 20 | 0;
    HEAP32[$949 >> 2] = HEAP32[$943 >> 2];
    HEAP32[$949 + 4 >> 2] = $948;
    if (!(HEAP8[$55 >> 0] & 1)) $959 = $55 + 1 | 0; else $959 = HEAP32[$tok + 12 >> 2] | 0;
    $960 = +_strtod($959, 0);
    __THREW__ = 0;
    $961 = invoke_ii(67, 56) | 0;
    $962 = __THREW__;
    __THREW__ = 0;
    do if ($962 & 1) label = 279; else {
     HEAP32[$961 >> 2] = 35936;
     __THREW__ = 0;
     invoke_vii(40, $961 + 4 | 0, $40 | 0);
     $965 = __THREW__;
     __THREW__ = 0;
     if ($965 & 1) {
      $984 = ___cxa_find_matching_catch() | 0;
      $985 = tempRet0;
      __ZdlPv($961);
      $eh$lpad$body244$index92Z2D = $985;
      $eh$lpad$body244$indexZ2D = $984;
      break;
     }
     $967 = $961 + 16 | 0;
     HEAP32[$967 + 0 >> 2] = HEAP32[$931 + 0 >> 2];
     HEAP32[$967 + 4 >> 2] = HEAP32[$931 + 4 >> 2];
     HEAP32[$967 + 8 >> 2] = HEAP32[$931 + 8 >> 2];
     HEAP32[$967 + 12 >> 2] = HEAP32[$931 + 12 >> 2];
     HEAP32[$961 + 32 >> 2] = 13;
     HEAP32[$961 + 36 >> 2] = 0;
     HEAP32[$961 + 40 >> 2] = 0;
     HEAP32[$961 + 44 >> 2] = 0;
     HEAP32[$961 >> 2] = 38160;
     HEAPF64[$961 + 48 >> 3] = $960;
     HEAP32[$10 >> 2] = $961;
     $973 = $927 + 16 | 0;
     $974 = HEAP32[$973 >> 2] | 0;
     if ($974 >>> 0 < (HEAP32[$927 + 20 >> 2] | 0) >>> 0) {
      if (!$974) $980 = 0; else {
       HEAP32[$974 >> 2] = $961;
       $980 = HEAP32[$973 >> 2] | 0;
      }
      HEAP32[$973 >> 2] = $980 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $927 + 12 | 0, $10 | 0);
      $982 = __THREW__;
      __THREW__ = 0;
      if ($982 & 1) {
       label = 279;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
     $$2 = $961;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 279) {
     $986 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body244$index92Z2D = tempRet0;
     $eh$lpad$body244$indexZ2D = $986;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
    $$19 = $eh$lpad$body244$indexZ2D;
    $$1933 = $eh$lpad$body244$index92Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    ___resumeException($$19 | 0);
   }
   break;
  }
 case 30:
  {
   $1075 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $43 | 0, $58 | 0);
   $1076 = __THREW__;
   __THREW__ = 0;
   if ($1076 & 1) label = 20; else {
    $1079 = $43 + 12 | 0;
    $1080 = $64;
    $1085 = HEAP32[$1080 + 4 >> 2] | 0;
    $1086 = $1079;
    HEAP32[$1086 >> 2] = HEAP32[$1080 >> 2];
    HEAP32[$1086 + 4 >> 2] = $1085;
    $1091 = $tok + 36 | 0;
    $1096 = HEAP32[$1091 + 4 >> 2] | 0;
    $1097 = $43 + 20 | 0;
    HEAP32[$1097 >> 2] = HEAP32[$1091 >> 2];
    HEAP32[$1097 + 4 >> 2] = $1096;
    __THREW__ = 0;
    $1101 = invoke_ii(67, 52) | 0;
    $1102 = __THREW__;
    __THREW__ = 0;
    do if ($1102 & 1) label = 307; else {
     HEAP32[$1101 >> 2] = 35936;
     __THREW__ = 0;
     invoke_vii(40, $1101 + 4 | 0, $43 | 0);
     $1105 = __THREW__;
     __THREW__ = 0;
     if ($1105 & 1) {
      $1124 = ___cxa_find_matching_catch() | 0;
      $1125 = tempRet0;
      __ZdlPv($1101);
      $eh$lpad$body262$index102Z2D = $1125;
      $eh$lpad$body262$indexZ2D = $1124;
      break;
     }
     $1107 = $1101 + 16 | 0;
     HEAP32[$1107 + 0 >> 2] = HEAP32[$1079 + 0 >> 2];
     HEAP32[$1107 + 4 >> 2] = HEAP32[$1079 + 4 >> 2];
     HEAP32[$1107 + 8 >> 2] = HEAP32[$1079 + 8 >> 2];
     HEAP32[$1107 + 12 >> 2] = HEAP32[$1079 + 12 >> 2];
     HEAP32[$1101 + 32 >> 2] = 11;
     HEAP32[$1101 + 36 >> 2] = 0;
     HEAP32[$1101 + 40 >> 2] = 0;
     HEAP32[$1101 + 44 >> 2] = 0;
     HEAP32[$1101 >> 2] = 38144;
     HEAP8[$1101 + 48 >> 0] = 1;
     HEAP32[$8 >> 2] = $1101;
     $1113 = $1075 + 16 | 0;
     $1114 = HEAP32[$1113 >> 2] | 0;
     if ($1114 >>> 0 < (HEAP32[$1075 + 20 >> 2] | 0) >>> 0) {
      if (!$1114) $1120 = 0; else {
       HEAP32[$1114 >> 2] = $1101;
       $1120 = HEAP32[$1113 >> 2] | 0;
      }
      HEAP32[$1113 >> 2] = $1120 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1075 + 12 | 0, $8 | 0);
      $1122 = __THREW__;
      __THREW__ = 0;
      if ($1122 & 1) {
       label = 307;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     $$2 = $1101;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 307) {
     $1126 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body262$index102Z2D = tempRet0;
     $eh$lpad$body262$indexZ2D = $1126;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
    $$19 = $eh$lpad$body262$indexZ2D;
    $$1933 = $eh$lpad$body262$index102Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    ___resumeException($$19 | 0);
   }
   break;
  }
 case 14:
  {
   $989 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $41 | 0, $58 | 0);
   $990 = __THREW__;
   __THREW__ = 0;
   if ($990 & 1) label = 20; else {
    $994 = $64;
    $999 = HEAP32[$994 + 4 >> 2] | 0;
    $1000 = $41 + 12 | 0;
    HEAP32[$1000 >> 2] = HEAP32[$994 >> 2];
    HEAP32[$1000 + 4 >> 2] = $999;
    $1005 = $tok + 36 | 0;
    $1010 = HEAP32[$1005 + 4 >> 2] | 0;
    $1011 = $41 + 20 | 0;
    HEAP32[$1011 >> 2] = HEAP32[$1005 >> 2];
    HEAP32[$1011 + 4 >> 2] = $1010;
    __THREW__ = 0;
    $1015 = invoke_iiii(31, $989 | 0, $41 | 0, $55 | 0) | 0;
    $1016 = __THREW__;
    __THREW__ = 0;
    if ($1016 & 1) {
     $1018 = ___cxa_find_matching_catch() | 0;
     $1019 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
     $$19 = $1018;
     $$1933 = $1019;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     ___resumeException($$19 | 0);
    } else {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
     $$2 = $1015;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     STACKTOP = sp;
     return $$2 | 0;
    }
   }
   break;
  }
 case 21:
  {
   __THREW__ = 0;
   invoke_viiii(13, $file | 0, $this | 0, 14, 0);
   $1181 = __THREW__;
   __THREW__ = 0;
   if ($1181 & 1) label = 20; else {
    $1184 = HEAP32[$this + 4 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $45 | 0, $58 | 0);
    $1185 = __THREW__;
    __THREW__ = 0;
    if ($1185 & 1) {
     $1250 = ___cxa_find_matching_catch() | 0;
     $$15 = $1250;
     $$1529 = tempRet0;
     $$pre$phiZ2D = $file + 4 | 0;
    } else {
     $1188 = $45 + 12 | 0;
     $1189 = $64;
     $1194 = HEAP32[$1189 + 4 >> 2] | 0;
     $1195 = $1188;
     HEAP32[$1195 >> 2] = HEAP32[$1189 >> 2];
     HEAP32[$1195 + 4 >> 2] = $1194;
     $1200 = $file + 36 | 0;
     $1205 = HEAP32[$1200 + 4 >> 2] | 0;
     $1206 = $45 + 20 | 0;
     HEAP32[$1206 >> 2] = HEAP32[$1200 >> 2];
     HEAP32[$1206 + 4 >> 2] = $1205;
     $1210 = $file + 4 | 0;
     __THREW__ = 0;
     $1211 = invoke_ii(67, 60) | 0;
     $1212 = __THREW__;
     __THREW__ = 0;
     L610 : do if ($1212 & 1) label = 340; else {
      HEAP32[$1211 >> 2] = 35936;
      $1214 = $1211 + 4 | 0;
      __THREW__ = 0;
      invoke_vii(40, $1214 | 0, $45 | 0);
      $1215 = __THREW__;
      __THREW__ = 0;
      do if ($1215 & 1) {
       $1247 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body353$index112Z2D = tempRet0;
       $eh$lpad$body353$indexZ2D = $1247;
      } else {
       $1217 = $1211 + 16 | 0;
       HEAP32[$1217 + 0 >> 2] = HEAP32[$1188 + 0 >> 2];
       HEAP32[$1217 + 4 >> 2] = HEAP32[$1188 + 4 >> 2];
       HEAP32[$1217 + 8 >> 2] = HEAP32[$1188 + 8 >> 2];
       HEAP32[$1217 + 12 >> 2] = HEAP32[$1188 + 12 >> 2];
       HEAP32[$1211 + 32 >> 2] = 7;
       $1219 = $1211 + 36 | 0;
       HEAP32[$1219 >> 2] = 0;
       $1220 = $1211 + 40 | 0;
       HEAP32[$1220 >> 2] = 0;
       HEAP32[$1211 + 44 >> 2] = 0;
       HEAP32[$1211 >> 2] = 38128;
       __THREW__ = 0;
       invoke_vii(40, $1211 + 48 | 0, $1210 | 0);
       $1223 = __THREW__;
       __THREW__ = 0;
       if ($1223 & 1) {
        $1225 = ___cxa_find_matching_catch() | 0;
        $1226 = tempRet0;
        HEAP32[$1211 >> 2] = 35936;
        $1227 = HEAP32[$1219 >> 2] | 0;
        $1229 = $1227;
        if ($1227) {
         $1230 = HEAP32[$1220 >> 2] | 0;
         if (($1230 | 0) != ($1227 | 0)) HEAP32[$1220 >> 2] = $1230 + (~(($1230 + -4 - $1229 | 0) >>> 2) << 2);
         __ZdlPv($1227);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1214);
        $eh$lpad$body353$index112Z2D = $1226;
        $eh$lpad$body353$indexZ2D = $1225;
        break;
       }
       HEAP32[$6 >> 2] = $1211;
       $1236 = $1184 + 16 | 0;
       $1237 = HEAP32[$1236 >> 2] | 0;
       if ($1237 >>> 0 < (HEAP32[$1184 + 20 >> 2] | 0) >>> 0) {
        if (!$1237) $1243 = 0; else {
         HEAP32[$1237 >> 2] = $1211;
         $1243 = HEAP32[$1236 >> 2] | 0;
        }
        HEAP32[$1236 >> 2] = $1243 + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(51, $1184 + 12 | 0, $6 | 0);
        $1245 = __THREW__;
        __THREW__ = 0;
        if ($1245 & 1) {
         label = 340;
         break L610;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($file + 16 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1210);
       $$2 = $1211;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
       STACKTOP = sp;
       return $$2 | 0;
      } while (0);
      __ZdlPv($1211);
      $eh$lpad$body279$index117Z2D = $eh$lpad$body353$index112Z2D;
      $eh$lpad$body279$indexZ2D = $eh$lpad$body353$indexZ2D;
     } while (0);
     if ((label | 0) == 340) {
      $1252 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body279$index117Z2D = tempRet0;
      $eh$lpad$body279$indexZ2D = $1252;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
     $$15 = $eh$lpad$body279$indexZ2D;
     $$1529 = $eh$lpad$body279$index117Z2D;
     $$pre$phiZ2D = $1210;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($file + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$pre$phiZ2D);
    $$19 = $$15;
    $$1933 = $$1529;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    ___resumeException($$19 | 0);
   }
   break;
  }
 default:
  {
   __THREW__ = 0;
   $1575 = invoke_iiii(25, 45984, 38064, 34) | 0;
   $1576 = __THREW__;
   __THREW__ = 0;
   if ($1576 & 1) label = 20; else {
    __THREW__ = 0;
    $1579 = invoke_ii(69, HEAP32[$tok >> 2] | 0) | 0;
    $1580 = __THREW__;
    __THREW__ = 0;
    if ($1580 & 1) label = 20; else {
     $1582 = _strlen($1579 | 0) | 0;
     __THREW__ = 0;
     invoke_iiii(25, $1575 | 0, $1579 | 0, $1582 | 0) | 0;
     $1583 = __THREW__;
     __THREW__ = 0;
     if ($1583 & 1) label = 20; else {
      __THREW__ = 0;
      invoke_vii(47, $0 | 0, $1575 + (HEAP32[(HEAP32[$1575 >> 2] | 0) + -12 >> 2] | 0) | 0);
      $1589 = __THREW__;
      __THREW__ = 0;
      if ($1589 & 1) label = 20; else {
       __THREW__ = 0;
       $1591 = invoke_iii(22, $0 | 0, 50208) | 0;
       $1592 = __THREW__;
       __THREW__ = 0;
       if (!($1592 & 1)) {
        __THREW__ = 0;
        $1597 = invoke_iii(HEAP32[(HEAP32[$1591 >> 2] | 0) + 28 >> 2] | 0, $1591 | 0, 10) | 0;
        $1598 = __THREW__;
        __THREW__ = 0;
        if (!($1598 & 1)) {
         __ZNSt3__16localeD2Ev($0);
         __THREW__ = 0;
         invoke_iii(25, $1575 | 0, $1597 | 0) | 0;
         $1602 = __THREW__;
         __THREW__ = 0;
         if ($1602 & 1) {
          label = 20;
          break L4;
         }
         __THREW__ = 0;
         invoke_ii(68, $1575 | 0) | 0;
         $1604 = __THREW__;
         __THREW__ = 0;
         if ($1604 & 1) {
          label = 20;
          break L4;
         }
         __THREW__ = 0;
         invoke_v(3);
         $1606 = __THREW__;
         __THREW__ = 0;
         if ($1606 & 1) {
          label = 20;
          break L4;
         }
        }
       }
       $1600 = ___cxa_find_matching_catch() | 0;
       $1601 = tempRet0;
       __ZNSt3__16localeD2Ev($0);
       $eh$lpad$body44$index3Z2D = $1601;
       $eh$lpad$body44$indexZ2D = $1600;
      }
     }
    }
   }
  }
 } while (0);
 if ((label | 0) == 20) {
  $114 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body44$index3Z2D = tempRet0;
  $eh$lpad$body44$indexZ2D = $114;
 }
 $$19 = $eh$lpad$body44$indexZ2D;
 $$1933 = $eh$lpad$body44$index3Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
 ___resumeException($$19 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_16Parser20parseObjectRemainderERP3ASTRK5Tokenj($agg$result, $this, $obj, $tok, $obj_level) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $obj = $obj | 0;
 $tok = $tok | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i7$i = 0, $$01 = 0, $$010 = 0, $$012 = 0, $$016 = 0, $$03 = 0, $$031 = 0, $$033 = 0, $$035 = 0, $$06 = 0, $$08 = 0, $$10 = 0, $$1026 = 0, $$113267 = 0, $$117266 = 0, $$1214301 = 0, $$1228300 = 0, $$13 = 0, $$1329 = 0, $$1415 = 0, $$1430 = 0, $$218270 = 0, $$2271 = 0, $$319274 = 0, $$3275 = 0, $$420278 = 0, $$4279 = 0, $$5 = 0, $$521 = 0, $$6 = 0, $$622 = 0, $$723282 = 0, $$7283 = 0, $$824292 = 0, $$8293 = 0, $$925296 = 0, $$9297 = 0, $$byval_copy = 0, $$byval_copy83 = 0, $$byval_copy84 = 0, $$lcssa = 0, $$lcssa595 = 0, $$lcssa596 = 0, $$lcssa597 = 0, $$lcssa598 = 0, $$lcssa599 = 0, $$lcssa600 = 0, $$lcssa601 = 0, $$lcssa602 = 0, $$lcssa604 = 0, $$lcssa605 = 0, $$lcssa606 = 0, $$lcssa607 = 0, $$lcssa608 = 0, $$lcssa609 = 0, $$lcssa610 = 0, $$lcssa611 = 0, $$lcssa612 = 0, $$lcssa613 = 0, $$lcssa614 = 0, $$lcssa615 = 0, $$lcssa616 = 0, $$lcssa617 = 0, $$lcssa618 = 0, $$lcssa619 = 0, $$lcssa621 = 0, $$lcssa622 = 0, $$lcssa623 = 0, $$lcssa624 = 0, $$lcssa625 = 0, $$lcssa626 = 0, $$lcssa627 = 0, $$lcssa628 = 0, $$lcssa629 = 0, $$lcssa630 = 0, $$lcssa631 = 0, $$lcssa632 = 0, $$lcssa635 = 0, $$lcssa637 = 0, $$lcssa640 = 0, $$lcssa641 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre539 = 0, $$pre540 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1002 = 0, $1004 = 0, $1005 = 0, $1007 = 0, $1009 = 0, $101 = 0, $1011 = 0, $1014 = 0, $1018 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1025 = 0, $1028 = 0, $103 = 0, $1032 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1038 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1043 = 0, $1046 = 0, $105 = 0, $1051 = 0, $1054 = 0, $1058 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1065 = 0, $1068 = 0, $107 = 0, $1072 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1078 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1083 = 0, $1086 = 0, $109 = 0, $1091 = 0, $1092 = 0, $1094 = 0, $1095 = 0, $1099 = 0, $11 = 0, $110 = 0, $1102 = 0, $1106 = 0, $1107 = 0, $1109 = 0, $111 = 0, $1111 = 0, $1113 = 0, $1115 = 0, $1116 = 0, $112 = 0, $1120 = 0, $1122 = 0, $1124 = 0, $113 = 0, $1131 = 0, $1135 = 0, $1137 = 0, $1139 = 0, $114 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $148 = 0, $149 = 0, $15 = 0, $151 = 0, $152 = 0, $153 = 0, $156 = 0, $158 = 0, $159 = 0, $16 = 0, $164 = 0, $165 = 0, $17 = 0, $171 = 0, $173 = 0, $175 = 0, $176 = 0, $177 = 0, $18 = 0, $180 = 0, $182 = 0, $185 = 0, $186 = 0, $189 = 0, $19 = 0, $190 = 0, $196 = 0, $198 = 0, $2 = 0, $20 = 0, $201 = 0, $205 = 0, $207 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $213 = 0, $216 = 0, $22 = 0, $220 = 0, $222 = 0, $223 = 0, $224 = 0, $226 = 0, $228 = 0, $229 = 0, $23 = 0, $231 = 0, $234 = 0, $239 = 0, $24 = 0, $241 = 0, $244 = 0, $248 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $254 = 0, $256 = 0, $257 = 0, $259 = 0, $26 = 0, $262 = 0, $27 = 0, $272 = 0, $28 = 0, $280 = 0, $284 = 0, $288 = 0, $289 = 0, $29 = 0, $291 = 0, $293 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $305 = 0, $307 = 0, $308 = 0, $31 = 0, $314 = 0, $316 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $327 = 0, $33 = 0, $331 = 0, $338 = 0, $339 = 0, $34 = 0, $341 = 0, $346 = 0, $347 = 0, $35 = 0, $351 = 0, $356 = 0, $357 = 0, $36 = 0, $361 = 0, $362 = 0, $364 = 0, $366 = 0, $367 = 0, $37 = 0, $373 = 0, $375 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $382 = 0, $384 = 0, $386 = 0, $39 = 0, $393 = 0, $397 = 0, $399 = 0, $4 = 0, $40 = 0, $401 = 0, $41 = 0, $410 = 0, $411 = 0, $413 = 0, $415 = 0, $417 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $423 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $43 = 0, $430 = 0, $432 = 0, $434 = 0, $436 = 0, $437 = 0, $438 = 0, $440 = 0, $442 = 0, $443 = 0, $444 = 0, $446 = 0, $448 = 0, $450 = 0, $453 = 0, $454 = 0, $455 = 0, $458 = 0, $46 = 0, $460 = 0, $461 = 0, $467 = 0, $469 = 0, $47 = 0, $471 = 0, $472 = 0, $474 = 0, $475 = 0, $477 = 0, $479 = 0, $48 = 0, $481 = 0, $483 = 0, $484 = 0, $485 = 0, $487 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $494 = 0, $496 = 0, $498 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $504 = 0, $506 = 0, $507 = 0, $508 = 0, $51 = 0, $511 = 0, $512 = 0, $514 = 0, $516 = 0, $517 = 0, $519 = 0, $521 = 0, $522 = 0, $524 = 0, $529 = 0, $53 = 0, $530 = 0, $534 = 0, $539 = 0, $54 = 0, $540 = 0, $544 = 0, $545 = 0, $548 = 0, $55 = 0, $550 = 0, $557 = 0, $56 = 0, $560 = 0, $561 = 0, $567 = 0, $569 = 0, $57 = 0, $571 = 0, $572 = 0, $577 = 0, $58 = 0, $580 = 0, $581 = 0, $583 = 0, $585 = 0, $587 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $593 = 0, $595 = 0, $596 = 0, $597 = 0, $6 = 0, $60 = 0, $600 = 0, $604 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $611 = 0, $614 = 0, $618 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $624 = 0, $626 = 0, $627 = 0, $629 = 0, $63 = 0, $632 = 0, $637 = 0, $639 = 0, $64 = 0, $641 = 0, $643 = 0, $644 = 0, $645 = 0, $648 = 0, $65 = 0, $652 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $659 = 0, $66 = 0, $662 = 0, $666 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $673 = 0, $674 = 0, $677 = 0, $68 = 0, $681 = 0, $683 = 0, $684 = 0, $685 = 0, $69 = 0, $691 = 0, $695 = 0, $698 = 0, $7 = 0, $70 = 0, $702 = 0, $704 = 0, $705 = 0, $706 = 0, $708 = 0, $71 = 0, $710 = 0, $712 = 0, $714 = 0, $715 = 0, $717 = 0, $72 = 0, $720 = 0, $725 = 0, $726 = 0, $73 = 0, $733 = 0, $734 = 0, $74 = 0, $740 = 0, $742 = 0, $744 = 0, $746 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $758 = 0, $76 = 0, $761 = 0, $765 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $772 = 0, $775 = 0, $779 = 0, $78 = 0, $781 = 0, $782 = 0, $783 = 0, $785 = 0, $787 = 0, $788 = 0, $79 = 0, $790 = 0, $793 = 0, $798 = 0, $8 = 0, $80 = 0, $801 = 0, $805 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $812 = 0, $815 = 0, $819 = 0, $82 = 0, $821 = 0, $822 = 0, $823 = 0, $825 = 0, $827 = 0, $828 = 0, $83 = 0, $830 = 0, $833 = 0, $838 = 0, $84 = 0, $842 = 0, $843 = 0, $85 = 0, $850 = 0, $851 = 0, $857 = 0, $859 = 0, $86 = 0, $861 = 0, $863 = 0, $865 = 0, $866 = 0, $867 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $874 = 0, $875 = 0, $877 = 0, $878 = 0, $88 = 0, $882 = 0, $883 = 0, $886 = 0, $887 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $894 = 0, $896 = 0, $9 = 0, $90 = 0, $901 = 0, $902 = 0, $903 = 0, $908 = 0, $91 = 0, $910 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $918 = 0, $92 = 0, $920 = 0, $927 = 0, $93 = 0, $932 = 0, $934 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $944 = 0, $945 = 0, $947 = 0, $948 = 0, $95 = 0, $956 = 0, $957 = 0, $96 = 0, $963 = 0, $965 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $971 = 0, $972 = 0, $976 = 0, $978 = 0, $98 = 0, $980 = 0, $984 = 0, $987 = 0, $99 = 0, $993 = 0, $995 = 0, $996 = 0, $__f$01$i$i = 0, $__f$01$i$i260 = 0, $__f$01$i$i263 = 0, $__f$01$i$i80 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa638 = 0, $__nd$0$i$i$lcssa639 = 0, $__parent$i = 0, $__r$0$i = 0, $body4 = 0, $eh$lpad$body$index9Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body119$index41Z2D = 0, $eh$lpad$body119$indexZ2D = 0, $eh$lpad$body128$index47Z2D = 0, $eh$lpad$body128$indexZ2D = 0, $eh$lpad$body143$index60Z2D = 0, $eh$lpad$body143$indexZ2D = 0, $eh$lpad$body147$index72Z2D = 0, $eh$lpad$body147$indexZ2D = 0, $eh$lpad$body209$index78Z2D = 0, $eh$lpad$body209$indexZ2D = 0, $eh$lpad$body55$index3Z2D = 0, $eh$lpad$body55$indexZ2D = 0, $eh$lpad$body62$index19Z2D = 0, $eh$lpad$body62$indexZ2D = 0, $eh$lpad$body70$index30Z2D = 0, $eh$lpad$body70$indexZ2D = 0, $eh$lpad$body78$index36Z2D = 0, $eh$lpad$body78$indexZ2D = 0, $fields = 0, $got_comma$0$off0 = 0, $got_comma$1$off0 = 0, $got_comma$2$off0 = 0, $id_tok = 0, $is_method$0$off0 = 0, $last_was_local$0$off0 = 0, $last_was_local$2$off0 = 0, $let_binds = 0, $literal_fields = 0, $next = 0, $params = 0, $plus_loc = 0, $plus_sugar$0$off0290 = 0, $r = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i132 = 0, $this$idx$val$idx$val$i158 = 0, $this$idx$val$idx$val$i176 = 0, $this$idx$val$idx$val$i188 = 0, $this$idx$val$idx$val$i240 = 0, $this$idx$val$idx$val$i252 = 0, $this$idx$val$idx$val$i59 = 0, $this$idx43$val$idx$val = 0, $this$idx44$val$idx$val = 0, $this$idx45$val$idx$val = 0, $this$idx46$val$idx$val = 0, $this$idx47$val$idx$val = 0, $this$idx48$val$idx$val = 0, $this$idx49$val$idx$val = 0, label = 0, sp = 0, $__f$01$i$i$looptemp = 0, $__f$01$i$i260$looptemp = 0, $__f$01$i$i80$looptemp = 0, $__f$01$i$i263$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1328 | 0;
 $$byval_copy84 = sp + 1320 | 0;
 $$byval_copy83 = sp + 1316 | 0;
 $$byval_copy = sp + 1312 | 0;
 $0 = sp + 1304 | 0;
 $1 = sp + 1296 | 0;
 $2 = sp + 1292 | 0;
 $3 = sp + 1288 | 0;
 $4 = sp + 1284 | 0;
 $5 = sp + 1280 | 0;
 $6 = sp + 1276 | 0;
 $7 = sp + 1272 | 0;
 $8 = sp + 1268 | 0;
 $__parent$i = sp + 1264 | 0;
 $9 = sp + 1260 | 0;
 $literal_fields = sp + 1248 | 0;
 $fields = sp + 1236 | 0;
 $let_binds = sp + 1224 | 0;
 $10 = sp + 1212 | 0;
 $11 = sp + 1184 | 0;
 $next = sp + 1140 | 0;
 $12 = sp + 1096 | 0;
 $r = sp + 1084 | 0;
 $13 = sp + 1056 | 0;
 $14 = sp + 1044 | 0;
 $15 = sp + 1032 | 0;
 $16 = sp + 1020 | 0;
 $17 = sp + 1008 | 0;
 $id_tok = sp + 964 | 0;
 $18 = sp + 920 | 0;
 $19 = sp + 892 | 0;
 $20 = sp + 880 | 0;
 $params = sp + 868 | 0;
 $21 = sp + 824 | 0;
 $22 = sp + 780 | 0;
 $23 = sp + 768 | 0;
 $24 = sp + 756 | 0;
 $plus_loc = sp + 728 | 0;
 $25 = sp + 684 | 0;
 $26 = sp + 640 | 0;
 $27 = sp + 596 | 0;
 $28 = sp + 552 | 0;
 $29 = sp + 540 | 0;
 $30 = sp + 496 | 0;
 $31 = sp + 452 | 0;
 $32 = sp + 408 | 0;
 $33 = sp + 364 | 0;
 $34 = sp + 320 | 0;
 $35 = sp + 308 | 0;
 $body4 = sp + 304 | 0;
 $36 = sp + 276 | 0;
 $37 = sp + 232 | 0;
 $38 = sp + 188 | 0;
 $39 = sp + 144 | 0;
 $40 = sp + 100 | 0;
 $41 = sp + 56 | 0;
 $42 = sp + 12 | 0;
 $43 = sp;
 HEAP32[$literal_fields + 4 >> 2] = 0;
 HEAP32[$literal_fields + 8 >> 2] = 0;
 $46 = $literal_fields + 4 | 0;
 HEAP32[$literal_fields >> 2] = $46;
 HEAP32[$fields >> 2] = $fields;
 $47 = $fields + 4 | 0;
 HEAP32[$47 >> 2] = $fields;
 $48 = $fields + 8 | 0;
 HEAP32[$48 >> 2] = 0;
 $49 = $let_binds + 4 | 0;
 HEAP32[$49 >> 2] = 0;
 $50 = $let_binds + 8 | 0;
 HEAP32[$50 >> 2] = 0;
 $51 = $let_binds + 4 | 0;
 HEAP32[$let_binds >> 2] = $51;
 $53 = $this + 4 | 0;
 L1 : do if (!$obj_level) {
  $145 = HEAP32[$53 >> 2] | 0;
  __THREW__ = 0;
  invoke_viii(3, $10 | 0, 37384, 1);
  $146 = __THREW__;
  __THREW__ = 0;
  if ($146 & 1) {
   $207 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body55$index3Z2D = tempRet0;
   $eh$lpad$body55$indexZ2D = $207;
   label = 31;
   break;
  }
  __THREW__ = 0;
  $148 = invoke_iii(23, $145 | 0, $10 | 0) | 0;
  $149 = __THREW__;
  __THREW__ = 0;
  if ($149 & 1) {
   $209 = ___cxa_find_matching_catch() | 0;
   $210 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
   $$1415 = $209;
   $$1430 = $210;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $151 = HEAP32[$53 >> 2] | 0;
  HEAP32[$11 + 0 >> 2] = 0;
  HEAP32[$11 + 4 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  HEAP32[$11 + 12 >> 2] = 0;
  HEAP32[$11 + 16 >> 2] = 0;
  HEAP32[$11 + 20 >> 2] = 0;
  HEAP32[$11 + 24 >> 2] = 0;
  __THREW__ = 0;
  $152 = invoke_ii(67, 48) | 0;
  $153 = __THREW__;
  __THREW__ = 0;
  do if ($153 & 1) label = 33; else {
   HEAP32[$152 >> 2] = 35936;
   __THREW__ = 0;
   invoke_vii(40, $152 + 4 | 0, $11 | 0);
   $156 = __THREW__;
   __THREW__ = 0;
   if ($156 & 1) {
    $175 = ___cxa_find_matching_catch() | 0;
    $176 = tempRet0;
    __ZdlPv($152);
    $$pre$phiZ2D = $11;
    $eh$lpad$body$index9Z2D = $176;
    $eh$lpad$body$indexZ2D = $175;
    break;
   }
   $158 = $152 + 16 | 0;
   $159 = $11 + 12 | 0;
   HEAP32[$158 + 0 >> 2] = HEAP32[$159 + 0 >> 2];
   HEAP32[$158 + 4 >> 2] = HEAP32[$159 + 4 >> 2];
   HEAP32[$158 + 8 >> 2] = HEAP32[$159 + 8 >> 2];
   HEAP32[$158 + 12 >> 2] = HEAP32[$159 + 12 >> 2];
   HEAP32[$152 + 32 >> 2] = 17;
   HEAP32[$152 + 36 >> 2] = 0;
   HEAP32[$152 + 40 >> 2] = 0;
   HEAP32[$152 + 44 >> 2] = 0;
   HEAP32[$152 >> 2] = 37856;
   HEAP32[$9 >> 2] = $152;
   $164 = $151 + 16 | 0;
   $165 = HEAP32[$164 >> 2] | 0;
   if ($165 >>> 0 < (HEAP32[$151 + 20 >> 2] | 0) >>> 0) {
    if (!$165) $171 = 0; else {
     HEAP32[$165 >> 2] = $152;
     $171 = HEAP32[$164 >> 2] | 0;
    }
    HEAP32[$164 >> 2] = $171 + 4;
   } else {
    __THREW__ = 0;
    invoke_vii(51, $151 + 12 | 0, $9 | 0);
    $173 = __THREW__;
    __THREW__ = 0;
    if ($173 & 1) {
     label = 33;
     break;
    }
   }
   $177 = HEAP32[$51 >> 2] | 0;
   do if (!$177) {
    HEAP32[$__parent$i >> 2] = $51;
    $$0$i7$i = $51;
    $196 = $51;
    label = 24;
   } else {
    $__nd$0$i$i = $177;
    while (1) {
     $180 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
     if ($148 >>> 0 < $180 >>> 0) {
      $182 = HEAP32[$__nd$0$i$i >> 2] | 0;
      if (!$182) {
       $$lcssa641 = $__nd$0$i$i;
       $__nd$0$i$i$lcssa639 = $__nd$0$i$i;
       label = 17;
       break;
      } else $__nd$0$be$in$i$i = $182;
     } else {
      if ($180 >>> 0 >= $148 >>> 0) {
       $__nd$0$i$i$lcssa = $__nd$0$i$i;
       label = 23;
       break;
      }
      $185 = $__nd$0$i$i + 4 | 0;
      $186 = HEAP32[$185 >> 2] | 0;
      if (!$186) {
       $$lcssa640 = $185;
       $__nd$0$i$i$lcssa638 = $__nd$0$i$i;
       label = 21;
       break;
      } else $__nd$0$be$in$i$i = $186;
     }
     $__nd$0$i$i = $__nd$0$be$in$i$i;
    }
    if ((label | 0) == 17) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa639;
     $$0$i7$i = $$lcssa641;
     $196 = $__nd$0$i$i$lcssa639;
     label = 24;
     break;
    } else if ((label | 0) == 21) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa638;
     $$0$i7$i = $$lcssa640;
     $196 = $__nd$0$i$i$lcssa638;
     label = 24;
     break;
    } else if ((label | 0) == 23) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
     if (!$__nd$0$i$i$lcssa) {
      $$0$i7$i = $__parent$i;
      $196 = 0;
      label = 24;
      break;
     } else {
      $__r$0$i = $__nd$0$i$i$lcssa;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 24) {
    __THREW__ = 0;
    $189 = invoke_ii(67, 24) | 0;
    $190 = __THREW__;
    __THREW__ = 0;
    if ($190 & 1) {
     label = 33;
     break;
    }
    HEAP32[$189 + 16 >> 2] = $148;
    HEAP32[$189 + 20 >> 2] = 0;
    HEAP32[$189 >> 2] = 0;
    HEAP32[$189 + 4 >> 2] = 0;
    HEAP32[$189 + 8 >> 2] = $196;
    HEAP32[$$0$i7$i >> 2] = $189;
    $198 = HEAP32[HEAP32[$let_binds >> 2] >> 2] | 0;
    if (!$198) $201 = $189; else {
     HEAP32[$let_binds >> 2] = $198;
     $201 = HEAP32[$$0$i7$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$49 >> 2] | 0, $201);
    HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + 1;
    $__r$0$i = $189;
   }
   HEAP32[$__r$0$i + 20 >> 2] = $152;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   label = 2;
   break L1;
  } while (0);
  if ((label | 0) == 33) {
   $211 = ___cxa_find_matching_catch() | 0;
   $$pre$phiZ2D = $11;
   $eh$lpad$body$index9Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $211;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$pre$phiZ2D);
  $$1415 = $eh$lpad$body$indexZ2D;
  $$1430 = $eh$lpad$body$index9Z2D;
 } else label = 2; while (0);
 L45 : do if ((label | 0) == 2) {
  $54 = $next + 4 | 0;
  $55 = $next + 16 | 0;
  $56 = $next + 28 | 0;
  $57 = $params + 4 | 0;
  $58 = $params + 8 | 0;
  $59 = $21 + 4 | 0;
  $60 = $21 + 16 | 0;
  $61 = $21 + 28 | 0;
  $62 = $22 + 4 | 0;
  $63 = $22 + 16 | 0;
  $64 = $22 + 28 | 0;
  $65 = $23 + 4 | 0;
  $66 = $23 + 8 | 0;
  $67 = $25 + 4 | 0;
  $68 = $25 + 16 | 0;
  $69 = $25 + 28 | 0;
  $70 = $26 + 4 | 0;
  $71 = $26 + 16 | 0;
  $72 = $26 + 28 | 0;
  $73 = $27 + 4 | 0;
  $74 = $27 + 16 | 0;
  $75 = $27 + 28 | 0;
  $76 = $27 + 16 | 0;
  $77 = $plus_loc + 1 | 0;
  $78 = $plus_loc + 12 | 0;
  $79 = $28 + 4 | 0;
  $80 = $28 + 16 | 0;
  $81 = $28 + 28 | 0;
  $82 = $plus_loc + 8 | 0;
  $83 = $plus_loc + 4 | 0;
  $84 = $30 + 16 | 0;
  $85 = $30 + 4 | 0;
  $86 = $31 + 4 | 0;
  $87 = $31 + 16 | 0;
  $88 = $31 + 28 | 0;
  $89 = $32 + 4 | 0;
  $90 = $32 + 16 | 0;
  $91 = $32 + 28 | 0;
  $92 = $33 + 4 | 0;
  $93 = $33 + 16 | 0;
  $94 = $33 + 28 | 0;
  $95 = $34 + 4 | 0;
  $96 = $34 + 16 | 0;
  $97 = $34 + 28 | 0;
  $98 = $0 + 4 | 0;
  $99 = $next + 16 | 0;
  $100 = $obj_level + 1 | 0;
  $101 = $36 + 12 | 0;
  $102 = $37 + 16 | 0;
  $103 = $37 + 4 | 0;
  $104 = $38 + 16 | 0;
  $105 = $38 + 4 | 0;
  $106 = $39 + 4 | 0;
  $107 = $39 + 16 | 0;
  $108 = $39 + 28 | 0;
  $109 = $40 + 4 | 0;
  $110 = $40 + 16 | 0;
  $111 = $40 + 28 | 0;
  $112 = $41 + 4 | 0;
  $113 = $41 + 16 | 0;
  $114 = $41 + 28 | 0;
  $115 = $42 + 4 | 0;
  $116 = $42 + 16 | 0;
  $117 = $42 + 28 | 0;
  $118 = $r + 4 | 0;
  $119 = $r + 8 | 0;
  $120 = $tok + 16 | 0;
  $121 = $next + 36 | 0;
  $122 = $tok + 28 | 0;
  $123 = $13 + 12 | 0;
  $124 = $13 + 20 | 0;
  $125 = $agg$result + 4 | 0;
  $126 = $agg$result + 16 | 0;
  $127 = $agg$result + 28 | 0;
  $128 = $id_tok + 4 | 0;
  $129 = $18 + 16 | 0;
  $130 = $18 + 4 | 0;
  $131 = $agg$result + 36 | 0;
  $132 = $19 + 12 | 0;
  $133 = $19 + 20 | 0;
  $134 = $id_tok + 16 | 0;
  $135 = $12 + 4 | 0;
  $136 = $12 + 16 | 0;
  $137 = $12 + 28 | 0;
  $138 = $54 + 1 | 0;
  $139 = $12 + 16 | 0;
  $140 = $99 + 1 | 0;
  $141 = $next + 24 | 0;
  $142 = $next + 20 | 0;
  $143 = $next + 12 | 0;
  $144 = $next + 8 | 0;
  $got_comma$0$off0 = 1;
  $last_was_local$0$off0 = 0;
  L47 : while (1) {
   $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $213 = $this$idx$val$idx$val$i + 8 | 0;
   HEAP32[$next >> 2] = HEAP32[$213 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $54 | 0, $this$idx$val$idx$val$i + 12 | 0);
   $216 = __THREW__;
   __THREW__ = 0;
   if ($216 & 1) {
    label = 29;
    break;
   }
   HEAP32[$next >> 2] = HEAP32[$213 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $55 | 0, $this$idx$val$idx$val$i + 24 | 0);
   $220 = __THREW__;
   __THREW__ = 0;
   if ($220 & 1) {
    label = 37;
    break;
   }
   $224 = $this$idx$val$idx$val$i + 36 | 0;
   HEAP32[$56 + 0 >> 2] = HEAP32[$224 + 0 >> 2];
   HEAP32[$56 + 4 >> 2] = HEAP32[$224 + 4 >> 2];
   HEAP32[$56 + 8 >> 2] = HEAP32[$224 + 8 >> 2];
   HEAP32[$56 + 12 >> 2] = HEAP32[$224 + 12 >> 2];
   HEAP32[$next >> 2] = HEAP32[$213 >> 2];
   $226 = HEAP32[$this >> 2] | 0;
   $228 = HEAP32[$226 + 4 >> 2] | 0;
   $229 = $228 + 4 | 0;
   $231 = HEAP32[$228 >> 2] | 0;
   HEAP32[$231 + 4 >> 2] = HEAP32[$229 >> 2];
   HEAP32[HEAP32[$229 >> 2] >> 2] = $231;
   $234 = $226 + 8 | 0;
   HEAP32[$234 >> 2] = (HEAP32[$234 >> 2] | 0) + -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($228 + 24 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($228 + 12 | 0);
   __ZdlPv($228);
   if ($got_comma$0$off0) label = 56; else {
    $239 = HEAP32[$next >> 2] | 0;
    if (($239 | 0) == 5) {
     $this$idx$val$idx$val$i59 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $241 = $this$idx$val$idx$val$i59 + 8 | 0;
     HEAP32[$12 >> 2] = HEAP32[$241 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $135 | 0, $this$idx$val$idx$val$i59 + 12 | 0);
     $244 = __THREW__;
     __THREW__ = 0;
     if ($244 & 1) {
      label = 54;
      break;
     }
     HEAP32[$12 >> 2] = HEAP32[$241 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $136 | 0, $this$idx$val$idx$val$i59 + 24 | 0);
     $248 = __THREW__;
     __THREW__ = 0;
     if ($248 & 1) {
      label = 42;
      break;
     }
     $252 = $this$idx$val$idx$val$i59 + 36 | 0;
     HEAP32[$137 + 0 >> 2] = HEAP32[$252 + 0 >> 2];
     HEAP32[$137 + 4 >> 2] = HEAP32[$252 + 4 >> 2];
     HEAP32[$137 + 8 >> 2] = HEAP32[$252 + 8 >> 2];
     HEAP32[$137 + 12 >> 2] = HEAP32[$252 + 12 >> 2];
     HEAP32[$12 >> 2] = HEAP32[$241 >> 2];
     $254 = HEAP32[$this >> 2] | 0;
     $256 = HEAP32[$254 + 4 >> 2] | 0;
     $257 = $256 + 4 | 0;
     $259 = HEAP32[$256 >> 2] | 0;
     HEAP32[$259 + 4 >> 2] = HEAP32[$257 >> 2];
     HEAP32[HEAP32[$257 >> 2] >> 2] = $259;
     $262 = $254 + 8 | 0;
     HEAP32[$262 >> 2] = (HEAP32[$262 >> 2] | 0) + -1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($256 + 24 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($256 + 12 | 0);
     __ZdlPv($256);
     HEAP32[$next >> 2] = HEAP32[$12 >> 2];
     if (!(HEAP8[$54 >> 0] & 1)) {
      HEAP8[$138 >> 0] = 0;
      HEAP8[$54 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$143 >> 2] >> 0] = 0;
      HEAP32[$144 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $54 | 0, 0);
     $272 = __THREW__;
     __THREW__ = 0;
     if ($272 & 1) {
      label = 47;
      break;
     };
     HEAP32[$54 + 0 >> 2] = HEAP32[$135 + 0 >> 2];
     HEAP32[$54 + 4 >> 2] = HEAP32[$135 + 4 >> 2];
     HEAP32[$54 + 8 >> 2] = HEAP32[$135 + 8 >> 2];
     HEAP32[$135 + 0 >> 2] = 0;
     HEAP32[$135 + 4 >> 2] = 0;
     HEAP32[$135 + 8 >> 2] = 0;
     if (!(HEAP8[$99 >> 0] & 1)) {
      HEAP8[$140 >> 0] = 0;
      HEAP8[$99 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$141 >> 2] >> 0] = 0;
      HEAP32[$142 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $99 | 0, 0);
     $280 = __THREW__;
     __THREW__ = 0;
     if ($280 & 1) {
      label = 52;
      break;
     };
     HEAP32[$99 + 0 >> 2] = HEAP32[$139 + 0 >> 2];
     HEAP32[$99 + 4 >> 2] = HEAP32[$139 + 4 >> 2];
     HEAP32[$99 + 8 >> 2] = HEAP32[$139 + 8 >> 2];
     HEAP32[$139 + 0 >> 2] = 0;
     HEAP32[$139 + 4 >> 2] = 0;
     HEAP32[$139 + 8 >> 2] = 0;
     HEAP32[$56 + 0 >> 2] = HEAP32[$137 + 0 >> 2];
     HEAP32[$56 + 4 >> 2] = HEAP32[$137 + 4 >> 2];
     HEAP32[$56 + 8 >> 2] = HEAP32[$137 + 8 >> 2];
     HEAP32[$56 + 12 >> 2] = HEAP32[$137 + 12 >> 2];
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($136);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
     label = 56;
    } else {
     $1147 = $239;
     $got_comma$1$off0 = 0;
    }
   }
   if ((label | 0) == 56) {
    label = 0;
    $1147 = HEAP32[$next >> 2] | 0;
    $got_comma$1$off0 = 1;
   }
   do if (($1147 | 0) == 1) {
    HEAP32[$r >> 2] = $r;
    HEAP32[$118 >> 2] = $r;
    HEAP32[$119 >> 2] = 0;
    $288 = HEAP32[$47 >> 2] | 0;
    if (!(HEAP32[$50 >> 2] | 0)) {
     HEAP32[$5 >> 2] = $r;
     HEAP32[$6 >> 2] = $288;
     HEAP32[$7 >> 2] = $fields;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     HEAP32[$$byval_copy83 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
     HEAP32[$$byval_copy84 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
     invoke_viiiiii(18, $8 | 0, $r | 0, $$byval_copy | 0, $$byval_copy83 | 0, $$byval_copy84 | 0, 0);
     $289 = __THREW__;
     __THREW__ = 0;
     if ($289 & 1) {
      label = 62;
      break L47;
     }
    } else if (($288 | 0) != ($fields | 0)) {
     $298 = $288;
     do {
      $296 = HEAP32[$53 >> 2] | 0;
      $297 = $298 + 16 | 0;
      $299 = HEAP32[$297 >> 2] | 0;
      __THREW__ = 0;
      $300 = invoke_ii(67, 64) | 0;
      $301 = __THREW__;
      __THREW__ = 0;
      if ($301 & 1) {
       label = 61;
       break L47;
      }
      __THREW__ = 0;
      invoke_viiii(12, $300 | 0, $299 + 4 | 0, $let_binds | 0, HEAP32[$297 >> 2] | 0);
      $305 = __THREW__;
      __THREW__ = 0;
      if ($305 & 1) {
       $$lcssa = $300;
       label = 73;
       break L47;
      }
      HEAP32[$4 >> 2] = $300;
      $307 = $296 + 16 | 0;
      $308 = HEAP32[$307 >> 2] | 0;
      if ($308 >>> 0 < (HEAP32[$296 + 20 >> 2] | 0) >>> 0) {
       if (!$308) $314 = 0; else {
        HEAP32[$308 >> 2] = $300;
        $314 = HEAP32[$307 >> 2] | 0;
       }
       HEAP32[$307 >> 2] = $314 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $296 + 12 | 0, $4 | 0);
       $316 = __THREW__;
       __THREW__ = 0;
       if ($316 & 1) {
        label = 61;
        break L47;
       }
      }
      __THREW__ = 0;
      $320 = invoke_ii(67, 20) | 0;
      $321 = __THREW__;
      __THREW__ = 0;
      if ($321 & 1) {
       label = 61;
       break L47;
      }
      $327 = HEAP32[$298 + 12 >> 2] | 0;
      HEAP32[$320 + 8 >> 2] = HEAP32[$298 + 8 >> 2];
      HEAP32[$320 + 12 >> 2] = $327;
      HEAP32[$320 + 16 >> 2] = $300;
      HEAP32[$320 + 4 >> 2] = $r;
      $331 = HEAP32[$r >> 2] | 0;
      HEAP32[$320 >> 2] = $331;
      HEAP32[$331 + 4 >> 2] = $320;
      HEAP32[$r >> 2] = $320;
      HEAP32[$119 >> 2] = (HEAP32[$119 >> 2] | 0) + 1;
      $298 = HEAP32[$298 + 4 >> 2] | 0;
     } while (($298 | 0) != ($fields | 0));
    }
    $338 = HEAP32[$53 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $13 | 0, $120 | 0);
    $339 = __THREW__;
    __THREW__ = 0;
    if ($339 & 1) {
     label = 62;
     break L47;
    }
    $341 = $122;
    $346 = HEAP32[$341 + 4 >> 2] | 0;
    $347 = $123;
    HEAP32[$347 >> 2] = HEAP32[$341 >> 2];
    HEAP32[$347 + 4 >> 2] = $346;
    $351 = $121;
    $356 = HEAP32[$351 + 4 >> 2] | 0;
    $357 = $124;
    HEAP32[$357 >> 2] = HEAP32[$351 >> 2];
    HEAP32[$357 + 4 >> 2] = $356;
    __THREW__ = 0;
    $361 = invoke_ii(67, 60) | 0;
    $362 = __THREW__;
    __THREW__ = 0;
    if ($362 & 1) {
     label = 90;
     break L47;
    }
    __THREW__ = 0;
    invoke_viii(8, $361 | 0, $13 | 0, $r | 0);
    $364 = __THREW__;
    __THREW__ = 0;
    if ($364 & 1) {
     $$lcssa597 = $361;
     label = 85;
     break L47;
    }
    HEAP32[$3 >> 2] = $361;
    $366 = $338 + 16 | 0;
    $367 = HEAP32[$366 >> 2] | 0;
    if ($367 >>> 0 < (HEAP32[$338 + 20 >> 2] | 0) >>> 0) {
     if (!$367) $373 = 0; else {
      HEAP32[$367 >> 2] = $361;
      $373 = HEAP32[$366 >> 2] | 0;
     }
     HEAP32[$366 >> 2] = $373 + 4;
    } else {
     __THREW__ = 0;
     invoke_vii(51, $338 + 12 | 0, $3 | 0);
     $375 = __THREW__;
     __THREW__ = 0;
     if ($375 & 1) {
      label = 90;
      break L47;
     }
    }
    HEAP32[$obj >> 2] = $361;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
    $379 = HEAP32[$next >> 2] | 0;
    HEAP32[$125 + 0 >> 2] = HEAP32[$54 + 0 >> 2];
    HEAP32[$125 + 4 >> 2] = HEAP32[$54 + 4 >> 2];
    HEAP32[$125 + 8 >> 2] = HEAP32[$54 + 8 >> 2];
    HEAP32[$54 + 0 >> 2] = 0;
    HEAP32[$54 + 4 >> 2] = 0;
    HEAP32[$54 + 8 >> 2] = 0;
    HEAP32[$126 + 0 >> 2] = HEAP32[$99 + 0 >> 2];
    HEAP32[$126 + 4 >> 2] = HEAP32[$99 + 4 >> 2];
    HEAP32[$126 + 8 >> 2] = HEAP32[$99 + 8 >> 2];
    HEAP32[$99 + 0 >> 2] = 0;
    HEAP32[$99 + 4 >> 2] = 0;
    HEAP32[$99 + 8 >> 2] = 0;
    HEAP32[$127 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
    HEAP32[$127 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
    HEAP32[$127 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
    HEAP32[$127 + 12 >> 2] = HEAP32[$56 + 12 >> 2];
    HEAP32[$agg$result >> 2] = $379;
    if (!(HEAP32[$119 >> 2] | 0)) {
     $$035 = 0;
     $got_comma$2$off0 = $got_comma$1$off0;
     $last_was_local$2$off0 = $last_was_local$0$off0;
    } else {
     $382 = HEAP32[$118 >> 2] | 0;
     $384 = (HEAP32[$r >> 2] | 0) + 4 | 0;
     $386 = HEAP32[$382 >> 2] | 0;
     HEAP32[$386 + 4 >> 2] = HEAP32[$384 >> 2];
     HEAP32[HEAP32[$384 >> 2] >> 2] = $386;
     HEAP32[$119 >> 2] = 0;
     if (($382 | 0) == ($r | 0)) {
      $$035 = 0;
      $got_comma$2$off0 = $got_comma$1$off0;
      $last_was_local$2$off0 = $last_was_local$0$off0;
     } else {
      $__f$01$i$i = $382;
      do {
       $__f$01$i$i$looptemp = $__f$01$i$i;
       $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i$looptemp);
      } while (($__f$01$i$i | 0) != ($r | 0));
      $$035 = 0;
      $got_comma$2$off0 = $got_comma$1$off0;
      $last_was_local$2$off0 = $last_was_local$0$off0;
     }
    }
   } else if (($1147 | 0) == 18) {
    if ((HEAP32[$48 >> 2] | 0) != 1) {
     label = 97;
     break L47;
    }
    if ($last_was_local$0$off0) {
     label = 106;
     break L47;
    }
    $444 = HEAP32[$47 >> 2] | 0;
    $446 = HEAP32[$444 + 8 >> 2] | 0;
    $448 = HEAP32[$444 + 12 >> 2] | 0;
    $450 = HEAP32[$444 + 16 >> 2] | 0;
    if (!(HEAP32[$50 >> 2] | 0)) $557 = $450; else {
     $453 = HEAP32[$53 >> 2] | 0;
     __THREW__ = 0;
     $454 = invoke_ii(67, 64) | 0;
     $455 = __THREW__;
     __THREW__ = 0;
     if ($455 & 1) {
      label = 54;
      break L47;
     }
     __THREW__ = 0;
     invoke_viiii(12, $454 | 0, $450 + 4 | 0, $let_binds | 0, $450 | 0);
     $458 = __THREW__;
     __THREW__ = 0;
     if ($458 & 1) {
      $$lcssa595 = $454;
      label = 122;
      break L47;
     }
     HEAP32[$2 >> 2] = $454;
     $460 = $453 + 16 | 0;
     $461 = HEAP32[$460 >> 2] | 0;
     if ($461 >>> 0 < (HEAP32[$453 + 20 >> 2] | 0) >>> 0) {
      if (!$461) $467 = 0; else {
       HEAP32[$461 >> 2] = $454;
       $467 = HEAP32[$460 >> 2] | 0;
      }
      HEAP32[$460 >> 2] = $467 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $453 + 12 | 0, $2 | 0);
      $469 = __THREW__;
      __THREW__ = 0;
      if ($469 & 1) {
       label = 54;
       break L47;
      }
     }
     $557 = $454;
    }
    if ($448) {
     label = 125;
     break L47;
    }
    if ($got_comma$1$off0) {
     label = 134;
     break L47;
    }
    __THREW__ = 0;
    invoke_viiii(13, $id_tok | 0, $this | 0, 11, 0);
    $508 = __THREW__;
    __THREW__ = 0;
    if ($508 & 1) {
     label = 54;
     break L47;
    }
    __THREW__ = 0;
    $511 = invoke_iii(23, HEAP32[$53 >> 2] | 0, $128 | 0) | 0;
    $512 = __THREW__;
    __THREW__ = 0;
    if ($512 & 1) {
     label = 157;
     break L47;
    }
    __THREW__ = 0;
    invoke_viiii(13, $18 | 0, $this | 0, 23, 0);
    $514 = __THREW__;
    __THREW__ = 0;
    if ($514 & 1) {
     label = 157;
     break L47;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($129);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($130);
    __THREW__ = 0;
    $516 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
    $517 = __THREW__;
    __THREW__ = 0;
    if ($517 & 1) {
     label = 157;
     break L47;
    }
    __THREW__ = 0;
    invoke_viiii(13, $agg$result | 0, $this | 0, 1, 0);
    $519 = __THREW__;
    __THREW__ = 0;
    if ($519 & 1) {
     label = 157;
     break L47;
    }
    $521 = HEAP32[$53 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $19 | 0, $120 | 0);
    $522 = __THREW__;
    __THREW__ = 0;
    if ($522 & 1) {
     label = 158;
     break L47;
    }
    $524 = $122;
    $529 = HEAP32[$524 + 4 >> 2] | 0;
    $530 = $132;
    HEAP32[$530 >> 2] = HEAP32[$524 >> 2];
    HEAP32[$530 + 4 >> 2] = $529;
    $534 = $131;
    $539 = HEAP32[$534 + 4 >> 2] | 0;
    $540 = $133;
    HEAP32[$540 >> 2] = HEAP32[$534 >> 2];
    HEAP32[$540 + 4 >> 2] = $539;
    __THREW__ = 0;
    $544 = invoke_ii(67, 64) | 0;
    $545 = __THREW__;
    __THREW__ = 0;
    if ($545 & 1) {
     label = 159;
     break L47;
    }
    HEAP32[$544 >> 2] = 35936;
    __THREW__ = 0;
    invoke_vii(40, $544 + 4 | 0, $19 | 0);
    $548 = __THREW__;
    __THREW__ = 0;
    if ($548 & 1) {
     $$lcssa596 = $544;
     label = 155;
     break L47;
    }
    $550 = $544 + 16 | 0;
    HEAP32[$550 + 0 >> 2] = HEAP32[$132 + 0 >> 2];
    HEAP32[$550 + 4 >> 2] = HEAP32[$132 + 4 >> 2];
    HEAP32[$550 + 8 >> 2] = HEAP32[$132 + 8 >> 2];
    HEAP32[$550 + 12 >> 2] = HEAP32[$132 + 12 >> 2];
    HEAP32[$544 + 32 >> 2] = 16;
    HEAP32[$544 + 36 >> 2] = 0;
    HEAP32[$544 + 40 >> 2] = 0;
    HEAP32[$544 + 44 >> 2] = 0;
    HEAP32[$544 >> 2] = 37824;
    HEAP32[$544 + 48 >> 2] = $446;
    HEAP32[$544 + 52 >> 2] = $557;
    HEAP32[$544 + 56 >> 2] = $511;
    HEAP32[$544 + 60 >> 2] = $516;
    HEAP32[$1 >> 2] = $544;
    $560 = $521 + 16 | 0;
    $561 = HEAP32[$560 >> 2] | 0;
    if ($561 >>> 0 < (HEAP32[$521 + 20 >> 2] | 0) >>> 0) {
     if (!$561) $567 = 0; else {
      HEAP32[$561 >> 2] = $544;
      $567 = HEAP32[$560 >> 2] | 0;
     }
     HEAP32[$560 >> 2] = $567 + 4;
    } else {
     __THREW__ = 0;
     invoke_vii(51, $521 + 12 | 0, $1 | 0);
     $569 = __THREW__;
     __THREW__ = 0;
     if ($569 & 1) {
      label = 159;
      break L47;
     }
    }
    HEAP32[$obj >> 2] = $544;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($134);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($128);
    $$035 = 0;
    $got_comma$2$off0 = 0;
    $last_was_local$2$off0 = 0;
   } else {
    if (!$got_comma$1$off0) {
     label = 164;
     break L47;
    }
    if (($1147 | 0) == 14 | ($1147 | 0) == 11) {
     HEAP32[$params >> 2] = 0;
     HEAP32[$57 >> 2] = 0;
     HEAP32[$58 >> 2] = 0;
     $this$idx49$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $597 = $this$idx49$val$idx$val + 8 | 0;
     HEAP32[$21 >> 2] = HEAP32[$597 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $59 | 0, $this$idx49$val$idx$val + 12 | 0);
     $600 = __THREW__;
     __THREW__ = 0;
     if ($600 & 1) {
      label = 183;
      break L47;
     }
     HEAP32[$21 >> 2] = HEAP32[$597 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $60 | 0, $this$idx49$val$idx$val + 24 | 0);
     $604 = __THREW__;
     __THREW__ = 0;
     if ($604 & 1) {
      label = 175;
      break L47;
     }
     $608 = $this$idx49$val$idx$val + 36 | 0;
     HEAP32[$61 + 0 >> 2] = HEAP32[$608 + 0 >> 2];
     HEAP32[$61 + 4 >> 2] = HEAP32[$608 + 4 >> 2];
     HEAP32[$61 + 8 >> 2] = HEAP32[$608 + 8 >> 2];
     HEAP32[$61 + 12 >> 2] = HEAP32[$608 + 12 >> 2];
     $609 = HEAP32[$597 >> 2] | 0;
     HEAP32[$21 >> 2] = $609;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     if (($609 | 0) == 8) {
      $this$idx$val$idx$val$i132 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $611 = $this$idx$val$idx$val$i132 + 8 | 0;
      HEAP32[$22 >> 2] = HEAP32[$611 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $62 | 0, $this$idx$val$idx$val$i132 + 12 | 0);
      $614 = __THREW__;
      __THREW__ = 0;
      if ($614 & 1) {
       label = 183;
       break L47;
      }
      HEAP32[$22 >> 2] = HEAP32[$611 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $63 | 0, $this$idx$val$idx$val$i132 + 24 | 0);
      $618 = __THREW__;
      __THREW__ = 0;
      if ($618 & 1) {
       label = 179;
       break L47;
      }
      $622 = $this$idx$val$idx$val$i132 + 36 | 0;
      HEAP32[$64 + 0 >> 2] = HEAP32[$622 + 0 >> 2];
      HEAP32[$64 + 4 >> 2] = HEAP32[$622 + 4 >> 2];
      HEAP32[$64 + 8 >> 2] = HEAP32[$622 + 8 >> 2];
      HEAP32[$64 + 12 >> 2] = HEAP32[$622 + 12 >> 2];
      HEAP32[$22 >> 2] = HEAP32[$611 >> 2];
      $624 = HEAP32[$this >> 2] | 0;
      $626 = HEAP32[$624 + 4 >> 2] | 0;
      $627 = $626 + 4 | 0;
      $629 = HEAP32[$626 >> 2] | 0;
      HEAP32[$629 + 4 >> 2] = HEAP32[$627 >> 2];
      HEAP32[HEAP32[$627 >> 2] >> 2] = $629;
      $632 = $624 + 8 | 0;
      HEAP32[$632 >> 2] = (HEAP32[$632 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($626 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($626 + 12 | 0);
      __ZdlPv($626);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($62);
      __THREW__ = 0;
      invoke_viii(3, $24 | 0, 37632, 16);
      $637 = __THREW__;
      __THREW__ = 0;
      if ($637 & 1) {
       label = 183;
       break L47;
      }
      __THREW__ = 0;
      invoke_viiii(15, $23 | 0, $this | 0, $24 | 0, $obj_level | 0);
      $639 = __THREW__;
      __THREW__ = 0;
      if ($639 & 1) {
       label = 185;
       break L47;
      }
      $$pre = HEAP32[$23 >> 2] | 0;
      $$pre539 = HEAP32[$65 >> 2] | 0;
      $$pre540 = HEAP32[$66 >> 2] | 0;
      HEAP32[$params >> 2] = $$pre;
      HEAP32[$57 >> 2] = $$pre539;
      HEAP32[$58 >> 2] = $$pre540;
      HEAP32[$66 >> 2] = 0;
      HEAP32[$65 >> 2] = 0;
      HEAP32[$23 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
      $984 = $$pre;
      $987 = $$pre539;
      $is_method$0$off0 = 1;
     } else {
      $984 = 0;
      $987 = 0;
      $is_method$0$off0 = 0;
     };
     HEAP32[$plus_loc + 0 >> 2] = 0;
     HEAP32[$plus_loc + 4 >> 2] = 0;
     HEAP32[$plus_loc + 8 >> 2] = 0;
     HEAP32[$plus_loc + 12 >> 2] = 0;
     HEAP32[$plus_loc + 16 >> 2] = 0;
     HEAP32[$plus_loc + 20 >> 2] = 0;
     HEAP32[$plus_loc + 24 >> 2] = 0;
     $this$idx48$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $645 = $this$idx48$val$idx$val + 8 | 0;
     HEAP32[$25 >> 2] = HEAP32[$645 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $67 | 0, $this$idx48$val$idx$val + 12 | 0);
     $648 = __THREW__;
     __THREW__ = 0;
     if ($648 & 1) {
      $$lcssa598 = $987;
      $$lcssa615 = $984;
      label = 205;
      break L47;
     }
     HEAP32[$25 >> 2] = HEAP32[$645 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $68 | 0, $this$idx48$val$idx$val + 24 | 0);
     $652 = __THREW__;
     __THREW__ = 0;
     if ($652 & 1) {
      $$lcssa599 = $987;
      $$lcssa616 = $984;
      label = 188;
      break L47;
     }
     $656 = $this$idx48$val$idx$val + 36 | 0;
     HEAP32[$69 + 0 >> 2] = HEAP32[$656 + 0 >> 2];
     HEAP32[$69 + 4 >> 2] = HEAP32[$656 + 4 >> 2];
     HEAP32[$69 + 8 >> 2] = HEAP32[$656 + 8 >> 2];
     HEAP32[$69 + 12 >> 2] = HEAP32[$656 + 12 >> 2];
     $657 = HEAP32[$645 >> 2] | 0;
     HEAP32[$25 >> 2] = $657;
     if (($657 | 0) == 13) {
      $this$idx47$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $659 = $this$idx47$val$idx$val + 8 | 0;
      HEAP32[$26 >> 2] = HEAP32[$659 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $70 | 0, $this$idx47$val$idx$val + 12 | 0);
      $662 = __THREW__;
      __THREW__ = 0;
      if ($662 & 1) {
       $$lcssa600 = $987;
       $$lcssa617 = $984;
       label = 207;
       break L47;
      }
      HEAP32[$26 >> 2] = HEAP32[$659 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $71 | 0, $this$idx47$val$idx$val + 24 | 0);
      $666 = __THREW__;
      __THREW__ = 0;
      if ($666 & 1) {
       $$lcssa601 = $987;
       $$lcssa618 = $984;
       label = 192;
       break L47;
      }
      $670 = $this$idx47$val$idx$val + 36 | 0;
      HEAP32[$72 + 0 >> 2] = HEAP32[$670 + 0 >> 2];
      HEAP32[$72 + 4 >> 2] = HEAP32[$670 + 4 >> 2];
      HEAP32[$72 + 8 >> 2] = HEAP32[$670 + 8 >> 2];
      HEAP32[$72 + 12 >> 2] = HEAP32[$670 + 12 >> 2];
      HEAP32[$26 >> 2] = HEAP32[$659 >> 2];
      $673 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($70, 41400) | 0) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
      if ($673) {
       $this$idx46$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $674 = $this$idx46$val$idx$val + 8 | 0;
       HEAP32[$27 >> 2] = HEAP32[$674 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $73 | 0, $this$idx46$val$idx$val + 12 | 0);
       $677 = __THREW__;
       __THREW__ = 0;
       if ($677 & 1) {
        $$lcssa598 = $987;
        $$lcssa615 = $984;
        label = 205;
        break L47;
       }
       HEAP32[$27 >> 2] = HEAP32[$674 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $74 | 0, $this$idx46$val$idx$val + 24 | 0);
       $681 = __THREW__;
       __THREW__ = 0;
       if ($681 & 1) {
        $$lcssa602 = $987;
        $$lcssa619 = $984;
        label = 196;
        break L47;
       }
       $685 = $this$idx46$val$idx$val + 36 | 0;
       HEAP32[$75 + 0 >> 2] = HEAP32[$685 + 0 >> 2];
       HEAP32[$75 + 4 >> 2] = HEAP32[$685 + 4 >> 2];
       HEAP32[$75 + 8 >> 2] = HEAP32[$685 + 8 >> 2];
       HEAP32[$75 + 12 >> 2] = HEAP32[$685 + 12 >> 2];
       HEAP32[$27 >> 2] = HEAP32[$674 >> 2];
       if (!(HEAP8[$plus_loc >> 0] & 1)) {
        HEAP8[$77 >> 0] = 0;
        HEAP8[$plus_loc >> 0] = 0;
       } else {
        HEAP8[HEAP32[$82 >> 2] >> 0] = 0;
        HEAP32[$83 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $plus_loc | 0, 0);
       $691 = __THREW__;
       __THREW__ = 0;
       if ($691 & 1) {
        label = 201;
        break L47;
       };
       HEAP32[$plus_loc + 0 >> 2] = HEAP32[$76 + 0 >> 2];
       HEAP32[$plus_loc + 4 >> 2] = HEAP32[$76 + 4 >> 2];
       HEAP32[$plus_loc + 8 >> 2] = HEAP32[$76 + 8 >> 2];
       HEAP32[$76 + 0 >> 2] = 0;
       HEAP32[$76 + 4 >> 2] = 0;
       HEAP32[$76 + 8 >> 2] = 0;
       HEAP32[$78 + 0 >> 2] = HEAP32[$75 + 0 >> 2];
       HEAP32[$78 + 4 >> 2] = HEAP32[$75 + 4 >> 2];
       HEAP32[$78 + 8 >> 2] = HEAP32[$75 + 8 >> 2];
       HEAP32[$78 + 12 >> 2] = HEAP32[$75 + 12 >> 2];
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($73);
       $this$idx$val$idx$val$i158 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $695 = $this$idx$val$idx$val$i158 + 8 | 0;
       HEAP32[$28 >> 2] = HEAP32[$695 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $79 | 0, $this$idx$val$idx$val$i158 + 12 | 0);
       $698 = __THREW__;
       __THREW__ = 0;
       if ($698 & 1) {
        $$lcssa598 = $987;
        $$lcssa615 = $984;
        label = 205;
        break L47;
       }
       HEAP32[$28 >> 2] = HEAP32[$695 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $80 | 0, $this$idx$val$idx$val$i158 + 24 | 0);
       $702 = __THREW__;
       __THREW__ = 0;
       if ($702 & 1) {
        $$lcssa604 = $987;
        $$lcssa621 = $984;
        label = 204;
        break L47;
       }
       $710 = $this$idx$val$idx$val$i158 + 36 | 0;
       HEAP32[$81 + 0 >> 2] = HEAP32[$710 + 0 >> 2];
       HEAP32[$81 + 4 >> 2] = HEAP32[$710 + 4 >> 2];
       HEAP32[$81 + 8 >> 2] = HEAP32[$710 + 8 >> 2];
       HEAP32[$81 + 12 >> 2] = HEAP32[$710 + 12 >> 2];
       HEAP32[$28 >> 2] = HEAP32[$695 >> 2];
       $712 = HEAP32[$this >> 2] | 0;
       $714 = HEAP32[$712 + 4 >> 2] | 0;
       $715 = $714 + 4 | 0;
       $717 = HEAP32[$714 >> 2] | 0;
       HEAP32[$717 + 4 >> 2] = HEAP32[$715 >> 2];
       HEAP32[HEAP32[$715 >> 2] >> 2] = $717;
       $720 = $712 + 8 | 0;
       HEAP32[$720 >> 2] = (HEAP32[$720 >> 2] | 0) + -1;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($714 + 24 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($714 + 12 | 0);
       __ZdlPv($714);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($80);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($79);
       if ($is_method$0$off0) {
        $$lcssa605 = $987;
        $$lcssa622 = $984;
        label = 210;
        break L47;
       } else $plus_sugar$0$off0290 = 1;
      } else $plus_sugar$0$off0290 = 0;
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
      $plus_sugar$0$off0290 = 0;
     }
     __THREW__ = 0;
     invoke_viiii(13, $30 | 0, $this | 0, 4, 0);
     $756 = __THREW__;
     __THREW__ = 0;
     if ($756 & 1) {
      $$lcssa598 = $987;
      $$lcssa615 = $984;
      label = 205;
      break L47;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($84);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($85);
     $this$idx45$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $758 = $this$idx45$val$idx$val + 8 | 0;
     HEAP32[$31 >> 2] = HEAP32[$758 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $86 | 0, $this$idx45$val$idx$val + 12 | 0);
     $761 = __THREW__;
     __THREW__ = 0;
     if ($761 & 1) {
      $$lcssa598 = $987;
      $$lcssa615 = $984;
      label = 205;
      break L47;
     }
     HEAP32[$31 >> 2] = HEAP32[$758 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $87 | 0, $this$idx45$val$idx$val + 24 | 0);
     $765 = __THREW__;
     __THREW__ = 0;
     if ($765 & 1) {
      $$lcssa606 = $987;
      $$lcssa623 = $984;
      label = 226;
      break L47;
     }
     $769 = $this$idx45$val$idx$val + 36 | 0;
     HEAP32[$88 + 0 >> 2] = HEAP32[$769 + 0 >> 2];
     HEAP32[$88 + 4 >> 2] = HEAP32[$769 + 4 >> 2];
     HEAP32[$88 + 8 >> 2] = HEAP32[$769 + 8 >> 2];
     HEAP32[$88 + 12 >> 2] = HEAP32[$769 + 12 >> 2];
     $770 = HEAP32[$758 >> 2] | 0;
     HEAP32[$31 >> 2] = $770;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($87);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($86);
     do if (($770 | 0) == 4) {
      $this$idx$val$idx$val$i176 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $772 = $this$idx$val$idx$val$i176 + 8 | 0;
      HEAP32[$32 >> 2] = HEAP32[$772 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $89 | 0, $this$idx$val$idx$val$i176 + 12 | 0);
      $775 = __THREW__;
      __THREW__ = 0;
      if ($775 & 1) {
       $$lcssa598 = $987;
       $$lcssa615 = $984;
       label = 205;
       break L47;
      }
      HEAP32[$32 >> 2] = HEAP32[$772 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $90 | 0, $this$idx$val$idx$val$i176 + 24 | 0);
      $779 = __THREW__;
      __THREW__ = 0;
      if ($779 & 1) {
       $$lcssa607 = $987;
       $$lcssa624 = $984;
       label = 230;
       break L47;
      }
      $783 = $this$idx$val$idx$val$i176 + 36 | 0;
      HEAP32[$91 + 0 >> 2] = HEAP32[$783 + 0 >> 2];
      HEAP32[$91 + 4 >> 2] = HEAP32[$783 + 4 >> 2];
      HEAP32[$91 + 8 >> 2] = HEAP32[$783 + 8 >> 2];
      HEAP32[$91 + 12 >> 2] = HEAP32[$783 + 12 >> 2];
      HEAP32[$32 >> 2] = HEAP32[$772 >> 2];
      $785 = HEAP32[$this >> 2] | 0;
      $787 = HEAP32[$785 + 4 >> 2] | 0;
      $788 = $787 + 4 | 0;
      $790 = HEAP32[$787 >> 2] | 0;
      HEAP32[$790 + 4 >> 2] = HEAP32[$788 >> 2];
      HEAP32[HEAP32[$788 >> 2] >> 2] = $790;
      $793 = $785 + 8 | 0;
      HEAP32[$793 >> 2] = (HEAP32[$793 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($787 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($787 + 12 | 0);
      __ZdlPv($787);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($90);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($89);
      $this$idx44$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $798 = $this$idx44$val$idx$val + 8 | 0;
      HEAP32[$33 >> 2] = HEAP32[$798 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $92 | 0, $this$idx44$val$idx$val + 12 | 0);
      $801 = __THREW__;
      __THREW__ = 0;
      if ($801 & 1) {
       $$lcssa598 = $987;
       $$lcssa615 = $984;
       label = 205;
       break L47;
      }
      HEAP32[$33 >> 2] = HEAP32[$798 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $93 | 0, $this$idx44$val$idx$val + 24 | 0);
      $805 = __THREW__;
      __THREW__ = 0;
      if ($805 & 1) {
       $$lcssa608 = $987;
       $$lcssa625 = $984;
       label = 233;
       break L47;
      }
      $809 = $this$idx44$val$idx$val + 36 | 0;
      HEAP32[$94 + 0 >> 2] = HEAP32[$809 + 0 >> 2];
      HEAP32[$94 + 4 >> 2] = HEAP32[$809 + 4 >> 2];
      HEAP32[$94 + 8 >> 2] = HEAP32[$809 + 8 >> 2];
      HEAP32[$94 + 12 >> 2] = HEAP32[$809 + 12 >> 2];
      $810 = HEAP32[$798 >> 2] | 0;
      HEAP32[$33 >> 2] = $810;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($93);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($92);
      if (($810 | 0) != 4) {
       $976 = 1;
       break;
      }
      $this$idx$val$idx$val$i188 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $812 = $this$idx$val$idx$val$i188 + 8 | 0;
      HEAP32[$34 >> 2] = HEAP32[$812 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $95 | 0, $this$idx$val$idx$val$i188 + 12 | 0);
      $815 = __THREW__;
      __THREW__ = 0;
      if ($815 & 1) {
       $$lcssa598 = $987;
       $$lcssa615 = $984;
       label = 205;
       break L47;
      }
      HEAP32[$34 >> 2] = HEAP32[$812 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $96 | 0, $this$idx$val$idx$val$i188 + 24 | 0);
      $819 = __THREW__;
      __THREW__ = 0;
      if ($819 & 1) {
       $$lcssa609 = $987;
       $$lcssa626 = $984;
       label = 237;
       break L47;
      }
      $823 = $this$idx$val$idx$val$i188 + 36 | 0;
      HEAP32[$97 + 0 >> 2] = HEAP32[$823 + 0 >> 2];
      HEAP32[$97 + 4 >> 2] = HEAP32[$823 + 4 >> 2];
      HEAP32[$97 + 8 >> 2] = HEAP32[$823 + 8 >> 2];
      HEAP32[$97 + 12 >> 2] = HEAP32[$823 + 12 >> 2];
      HEAP32[$34 >> 2] = HEAP32[$812 >> 2];
      $825 = HEAP32[$this >> 2] | 0;
      $827 = HEAP32[$825 + 4 >> 2] | 0;
      $828 = $827 + 4 | 0;
      $830 = HEAP32[$827 >> 2] | 0;
      HEAP32[$830 + 4 >> 2] = HEAP32[$828 >> 2];
      HEAP32[HEAP32[$828 >> 2] >> 2] = $830;
      $833 = $825 + 8 | 0;
      HEAP32[$833 >> 2] = (HEAP32[$833 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($827 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($827 + 12 | 0);
      __ZdlPv($827);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($96);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($95);
      $976 = 2;
     } else $976 = 0; while (0);
     __THREW__ = 0;
     invoke_viii(9, $0 | 0, $literal_fields | 0, $54 | 0);
     $838 = __THREW__;
     __THREW__ = 0;
     if ($838 & 1) {
      $$lcssa598 = $987;
      $$lcssa615 = $984;
      label = 205;
      break L47;
     }
     if (!(HEAP8[$98 >> 0] | 0)) {
      $$lcssa610 = $987;
      $$lcssa627 = $984;
      label = 241;
      break L47;
     }
     __THREW__ = 0;
     $874 = invoke_iiii(35, HEAP32[$53 >> 2] | 0, $99 | 0, $54 | 0) | 0;
     $875 = __THREW__;
     __THREW__ = 0;
     if ($875 & 1) {
      $$lcssa598 = $987;
      $$lcssa615 = $984;
      label = 205;
      break L47;
     }
     __THREW__ = 0;
     $877 = invoke_iiii(29, $this | 0, 15, $100 | 0) | 0;
     $878 = __THREW__;
     __THREW__ = 0;
     if ($878 & 1) {
      $$lcssa598 = $987;
      $$lcssa615 = $984;
      label = 205;
      break L47;
     }
     HEAP32[$body4 >> 2] = $877;
     if ($is_method$0$off0) {
      __THREW__ = 0;
      $882 = invoke_iiiii(8, HEAP32[$53 >> 2] | 0, $877 + 4 | 0, $params | 0, $body4 | 0) | 0;
      $883 = __THREW__;
      __THREW__ = 0;
      if ($883 & 1) {
       $$lcssa598 = $987;
       $$lcssa615 = $984;
       label = 205;
       break L47;
      }
      HEAP32[$body4 >> 2] = $882;
      $944 = $882;
     } else $944 = $877;
     if ($plus_sugar$0$off0290) {
      __THREW__ = 0;
      $886 = invoke_iiii(35, HEAP32[$53 >> 2] | 0, $plus_loc | 0, $54 | 0) | 0;
      $887 = __THREW__;
      __THREW__ = 0;
      if ($887 & 1) {
       $$lcssa598 = $987;
       $$lcssa615 = $984;
       label = 205;
       break L47;
      }
      $889 = HEAP32[$53 >> 2] | 0;
      HEAP32[$36 + 0 >> 2] = 0;
      HEAP32[$36 + 4 >> 2] = 0;
      HEAP32[$36 + 8 >> 2] = 0;
      HEAP32[$36 + 12 >> 2] = 0;
      HEAP32[$36 + 16 >> 2] = 0;
      HEAP32[$36 + 20 >> 2] = 0;
      HEAP32[$36 + 24 >> 2] = 0;
      __THREW__ = 0;
      $890 = invoke_ii(67, 48) | 0;
      $891 = __THREW__;
      __THREW__ = 0;
      if ($891 & 1) {
       $$lcssa611 = $987;
       $$lcssa628 = $984;
       label = 285;
       break L47;
      }
      HEAP32[$890 >> 2] = 35936;
      __THREW__ = 0;
      invoke_vii(40, $890 + 4 | 0, $36 | 0);
      $894 = __THREW__;
      __THREW__ = 0;
      if ($894 & 1) {
       $$lcssa612 = $987;
       $$lcssa629 = $984;
       $$lcssa632 = $890;
       label = 267;
       break L47;
      }
      $896 = $890 + 16 | 0;
      HEAP32[$896 + 0 >> 2] = HEAP32[$101 + 0 >> 2];
      HEAP32[$896 + 4 >> 2] = HEAP32[$101 + 4 >> 2];
      HEAP32[$896 + 8 >> 2] = HEAP32[$101 + 8 >> 2];
      HEAP32[$896 + 12 >> 2] = HEAP32[$101 + 12 >> 2];
      HEAP32[$890 + 32 >> 2] = 18;
      HEAP32[$890 + 36 >> 2] = 0;
      HEAP32[$890 + 40 >> 2] = 0;
      HEAP32[$890 + 44 >> 2] = 0;
      HEAP32[$890 >> 2] = 37792;
      HEAP32[$$byval_copy >> 2] = $890;
      $901 = $889 + 16 | 0;
      $902 = HEAP32[$901 >> 2] | 0;
      $903 = $889 + 20 | 0;
      if ($902 >>> 0 < (HEAP32[$903 >> 2] | 0) >>> 0) {
       if (!$902) $908 = 0; else {
        HEAP32[$902 >> 2] = $890;
        $908 = HEAP32[$901 >> 2] | 0;
       }
       HEAP32[$901 >> 2] = $908 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $889 + 12 | 0, $$byval_copy | 0);
       $910 = __THREW__;
       __THREW__ = 0;
       if ($910 & 1) {
        $$lcssa611 = $987;
        $$lcssa628 = $984;
        label = 285;
        break L47;
       }
      }
      __THREW__ = 0;
      $914 = invoke_ii(67, 56) | 0;
      $915 = __THREW__;
      __THREW__ = 0;
      if ($915 & 1) {
       $$lcssa611 = $987;
       $$lcssa628 = $984;
       label = 285;
       break L47;
      }
      HEAP32[$914 >> 2] = 35936;
      __THREW__ = 0;
      invoke_vii(40, $914 + 4 | 0, $plus_loc | 0);
      $918 = __THREW__;
      __THREW__ = 0;
      if ($918 & 1) {
       $$lcssa613 = $987;
       $$lcssa630 = $984;
       $$lcssa635 = $914;
       label = 275;
       break L47;
      }
      $920 = $914 + 16 | 0;
      HEAP32[$920 + 0 >> 2] = HEAP32[$78 + 0 >> 2];
      HEAP32[$920 + 4 >> 2] = HEAP32[$78 + 4 >> 2];
      HEAP32[$920 + 8 >> 2] = HEAP32[$78 + 8 >> 2];
      HEAP32[$920 + 12 >> 2] = HEAP32[$78 + 12 >> 2];
      HEAP32[$914 + 32 >> 2] = 9;
      HEAP32[$914 + 36 >> 2] = 0;
      HEAP32[$914 + 40 >> 2] = 0;
      HEAP32[$914 + 44 >> 2] = 0;
      HEAP32[$914 >> 2] = 37360;
      HEAP32[$914 + 48 >> 2] = $890;
      HEAP32[$914 + 52 >> 2] = $886;
      HEAP32[$$byval_copy83 >> 2] = $914;
      $927 = HEAP32[$901 >> 2] | 0;
      if ($927 >>> 0 < (HEAP32[$903 >> 2] | 0) >>> 0) {
       if (!$927) $932 = 0; else {
        HEAP32[$927 >> 2] = $914;
        $932 = HEAP32[$901 >> 2] | 0;
       }
       HEAP32[$901 >> 2] = $932 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $889 + 12 | 0, $$byval_copy83 | 0);
       $934 = __THREW__;
       __THREW__ = 0;
       if ($934 & 1) {
        $$lcssa611 = $987;
        $$lcssa628 = $984;
        label = 285;
        break L47;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
      $938 = HEAP32[$53 >> 2] | 0;
      __THREW__ = 0;
      $939 = invoke_ii(67, 60) | 0;
      $940 = __THREW__;
      __THREW__ = 0;
      if ($940 & 1) {
       $$lcssa598 = $987;
       $$lcssa615 = $984;
       label = 205;
       break L47;
      }
      HEAP32[$939 >> 2] = 35936;
      __THREW__ = 0;
      invoke_vii(40, $939 + 4 | 0, $944 + 4 | 0);
      $945 = __THREW__;
      __THREW__ = 0;
      if ($945 & 1) {
       $$lcssa614 = $987;
       $$lcssa631 = $984;
       $$lcssa637 = $939;
       label = 283;
       break L47;
      }
      $947 = $939 + 16 | 0;
      $948 = $944 + 16 | 0;
      HEAP32[$947 + 0 >> 2] = HEAP32[$948 + 0 >> 2];
      HEAP32[$947 + 4 >> 2] = HEAP32[$948 + 4 >> 2];
      HEAP32[$947 + 8 >> 2] = HEAP32[$948 + 8 >> 2];
      HEAP32[$947 + 12 >> 2] = HEAP32[$948 + 12 >> 2];
      HEAP32[$939 + 32 >> 2] = 2;
      HEAP32[$939 + 36 >> 2] = 0;
      HEAP32[$939 + 40 >> 2] = 0;
      HEAP32[$939 + 44 >> 2] = 0;
      HEAP32[$939 >> 2] = 37328;
      HEAP32[$939 + 48 >> 2] = $914;
      HEAP32[$939 + 52 >> 2] = 2;
      HEAP32[$939 + 56 >> 2] = $944;
      HEAP32[$$byval_copy84 >> 2] = $939;
      $956 = $938 + 16 | 0;
      $957 = HEAP32[$956 >> 2] | 0;
      if ($957 >>> 0 < (HEAP32[$938 + 20 >> 2] | 0) >>> 0) {
       if (!$957) $963 = 0; else {
        HEAP32[$957 >> 2] = $939;
        $963 = HEAP32[$956 >> 2] | 0;
       }
       HEAP32[$956 >> 2] = $963 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $938 + 12 | 0, $$byval_copy84 | 0);
       $965 = __THREW__;
       __THREW__ = 0;
       if ($965 & 1) {
        $$lcssa598 = $987;
        $$lcssa615 = $984;
        label = 205;
        break L47;
       }
      }
      HEAP32[$body4 >> 2] = $939;
      $978 = $939;
     } else $978 = $944;
     __THREW__ = 0;
     $971 = invoke_ii(67, 20) | 0;
     $972 = __THREW__;
     __THREW__ = 0;
     if ($972 & 1) {
      $$lcssa598 = $987;
      $$lcssa615 = $984;
      label = 205;
      break L47;
     }
     HEAP32[$971 + 8 >> 2] = $874;
     HEAP32[$971 + 12 >> 2] = $976;
     HEAP32[$971 + 16 >> 2] = $978;
     HEAP32[$971 + 4 >> 2] = $fields;
     $980 = HEAP32[$fields >> 2] | 0;
     HEAP32[$971 >> 2] = $980;
     HEAP32[$980 + 4 >> 2] = $971;
     HEAP32[$fields >> 2] = $971;
     HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($plus_loc);
     if (!$984) {
      $$035 = 1;
      $got_comma$2$off0 = 0;
      $last_was_local$2$off0 = 0;
      break;
     }
     if (($987 | 0) != ($984 | 0)) HEAP32[$57 >> 2] = $987 + (~(($987 + -4 - $984 | 0) >>> 2) << 2);
     __ZdlPv($984);
     $$035 = 1;
     $got_comma$2$off0 = 0;
     $last_was_local$2$off0 = 0;
     break;
    } else if (($1147 | 0) == 24) {
     __THREW__ = 0;
     invoke_viii(6, $this | 0, $let_binds | 0, $obj_level | 0);
     $1002 = __THREW__;
     __THREW__ = 0;
     if ($1002 & 1) {
      label = 54;
      break L47;
     } else {
      $$035 = 1;
      $got_comma$2$off0 = 0;
      $last_was_local$2$off0 = 1;
      break;
     }
    } else if (($1147 | 0) == 2) {
     __THREW__ = 0;
     $1004 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
     $1005 = __THREW__;
     __THREW__ = 0;
     if ($1005 & 1) {
      label = 54;
      break L47;
     }
     __THREW__ = 0;
     invoke_viiii(13, $37 | 0, $this | 0, 3, 0);
     $1007 = __THREW__;
     __THREW__ = 0;
     if ($1007 & 1) {
      label = 54;
      break L47;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($102);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($103);
     __THREW__ = 0;
     invoke_viiii(13, $38 | 0, $this | 0, 4, 0);
     $1009 = __THREW__;
     __THREW__ = 0;
     if ($1009 & 1) {
      label = 54;
      break L47;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($104);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($105);
     $this$idx43$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $1011 = $this$idx43$val$idx$val + 8 | 0;
     HEAP32[$39 >> 2] = HEAP32[$1011 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $106 | 0, $this$idx43$val$idx$val + 12 | 0);
     $1014 = __THREW__;
     __THREW__ = 0;
     if ($1014 & 1) {
      label = 54;
      break L47;
     }
     HEAP32[$39 >> 2] = HEAP32[$1011 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $107 | 0, $this$idx43$val$idx$val + 24 | 0);
     $1018 = __THREW__;
     __THREW__ = 0;
     if ($1018 & 1) {
      label = 302;
      break L47;
     }
     $1022 = $this$idx43$val$idx$val + 36 | 0;
     HEAP32[$108 + 0 >> 2] = HEAP32[$1022 + 0 >> 2];
     HEAP32[$108 + 4 >> 2] = HEAP32[$1022 + 4 >> 2];
     HEAP32[$108 + 8 >> 2] = HEAP32[$1022 + 8 >> 2];
     HEAP32[$108 + 12 >> 2] = HEAP32[$1022 + 12 >> 2];
     $1023 = HEAP32[$1011 >> 2] | 0;
     HEAP32[$39 >> 2] = $1023;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($107);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($106);
     do if (($1023 | 0) == 4) {
      $this$idx$val$idx$val$i240 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1025 = $this$idx$val$idx$val$i240 + 8 | 0;
      HEAP32[$40 >> 2] = HEAP32[$1025 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $109 | 0, $this$idx$val$idx$val$i240 + 12 | 0);
      $1028 = __THREW__;
      __THREW__ = 0;
      if ($1028 & 1) {
       label = 54;
       break L47;
      }
      HEAP32[$40 >> 2] = HEAP32[$1025 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $110 | 0, $this$idx$val$idx$val$i240 + 24 | 0);
      $1032 = __THREW__;
      __THREW__ = 0;
      if ($1032 & 1) {
       label = 306;
       break L47;
      }
      $1036 = $this$idx$val$idx$val$i240 + 36 | 0;
      HEAP32[$111 + 0 >> 2] = HEAP32[$1036 + 0 >> 2];
      HEAP32[$111 + 4 >> 2] = HEAP32[$1036 + 4 >> 2];
      HEAP32[$111 + 8 >> 2] = HEAP32[$1036 + 8 >> 2];
      HEAP32[$111 + 12 >> 2] = HEAP32[$1036 + 12 >> 2];
      HEAP32[$40 >> 2] = HEAP32[$1025 >> 2];
      $1038 = HEAP32[$this >> 2] | 0;
      $1040 = HEAP32[$1038 + 4 >> 2] | 0;
      $1041 = $1040 + 4 | 0;
      $1043 = HEAP32[$1040 >> 2] | 0;
      HEAP32[$1043 + 4 >> 2] = HEAP32[$1041 >> 2];
      HEAP32[HEAP32[$1041 >> 2] >> 2] = $1043;
      $1046 = $1038 + 8 | 0;
      HEAP32[$1046 >> 2] = (HEAP32[$1046 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1040 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1040 + 12 | 0);
      __ZdlPv($1040);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($110);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($109);
      $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1051 = $this$idx$val$idx$val + 8 | 0;
      HEAP32[$41 >> 2] = HEAP32[$1051 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $112 | 0, $this$idx$val$idx$val + 12 | 0);
      $1054 = __THREW__;
      __THREW__ = 0;
      if ($1054 & 1) {
       label = 54;
       break L47;
      }
      HEAP32[$41 >> 2] = HEAP32[$1051 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $113 | 0, $this$idx$val$idx$val + 24 | 0);
      $1058 = __THREW__;
      __THREW__ = 0;
      if ($1058 & 1) {
       label = 309;
       break L47;
      }
      $1062 = $this$idx$val$idx$val + 36 | 0;
      HEAP32[$114 + 0 >> 2] = HEAP32[$1062 + 0 >> 2];
      HEAP32[$114 + 4 >> 2] = HEAP32[$1062 + 4 >> 2];
      HEAP32[$114 + 8 >> 2] = HEAP32[$1062 + 8 >> 2];
      HEAP32[$114 + 12 >> 2] = HEAP32[$1062 + 12 >> 2];
      $1063 = HEAP32[$1051 >> 2] | 0;
      HEAP32[$41 >> 2] = $1063;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($113);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($112);
      if (($1063 | 0) != 4) {
       $1099 = 1;
       break;
      }
      $this$idx$val$idx$val$i252 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1065 = $this$idx$val$idx$val$i252 + 8 | 0;
      HEAP32[$42 >> 2] = HEAP32[$1065 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $115 | 0, $this$idx$val$idx$val$i252 + 12 | 0);
      $1068 = __THREW__;
      __THREW__ = 0;
      if ($1068 & 1) {
       label = 54;
       break L47;
      }
      HEAP32[$42 >> 2] = HEAP32[$1065 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $116 | 0, $this$idx$val$idx$val$i252 + 24 | 0);
      $1072 = __THREW__;
      __THREW__ = 0;
      if ($1072 & 1) {
       label = 313;
       break L47;
      }
      $1076 = $this$idx$val$idx$val$i252 + 36 | 0;
      HEAP32[$117 + 0 >> 2] = HEAP32[$1076 + 0 >> 2];
      HEAP32[$117 + 4 >> 2] = HEAP32[$1076 + 4 >> 2];
      HEAP32[$117 + 8 >> 2] = HEAP32[$1076 + 8 >> 2];
      HEAP32[$117 + 12 >> 2] = HEAP32[$1076 + 12 >> 2];
      HEAP32[$42 >> 2] = HEAP32[$1065 >> 2];
      $1078 = HEAP32[$this >> 2] | 0;
      $1080 = HEAP32[$1078 + 4 >> 2] | 0;
      $1081 = $1080 + 4 | 0;
      $1083 = HEAP32[$1080 >> 2] | 0;
      HEAP32[$1083 + 4 >> 2] = HEAP32[$1081 >> 2];
      HEAP32[HEAP32[$1081 >> 2] >> 2] = $1083;
      $1086 = $1078 + 8 | 0;
      HEAP32[$1086 >> 2] = (HEAP32[$1086 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1080 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1080 + 12 | 0);
      __ZdlPv($1080);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($116);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($115);
      $1099 = 2;
     } else $1099 = 0; while (0);
     __THREW__ = 0;
     $1091 = invoke_iiii(29, $this | 0, 15, $100 | 0) | 0;
     $1092 = __THREW__;
     __THREW__ = 0;
     if ($1092 & 1) {
      label = 54;
      break L47;
     }
     __THREW__ = 0;
     $1094 = invoke_ii(67, 20) | 0;
     $1095 = __THREW__;
     __THREW__ = 0;
     if ($1095 & 1) {
      label = 54;
      break L47;
     }
     HEAP32[$1094 + 8 >> 2] = $1004;
     HEAP32[$1094 + 12 >> 2] = $1099;
     HEAP32[$1094 + 16 >> 2] = $1091;
     HEAP32[$1094 + 4 >> 2] = $fields;
     $1102 = HEAP32[$fields >> 2] | 0;
     HEAP32[$1094 >> 2] = $1102;
     HEAP32[$1102 + 4 >> 2] = $1094;
     HEAP32[$fields >> 2] = $1094;
     HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 1;
     $$035 = 1;
     $got_comma$2$off0 = 0;
     $last_was_local$2$off0 = 0;
     break;
    } else {
     label = 318;
     break L47;
    }
   } while (0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
   if ($$035) {
    $got_comma$0$off0 = $got_comma$2$off0;
    $last_was_local$0$off0 = $last_was_local$2$off0;
   } else {
    label = 328;
    break;
   }
  }
  L245 : switch (label | 0) {
  case 29:
   {
    $205 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body55$index3Z2D = tempRet0;
    $eh$lpad$body55$indexZ2D = $205;
    label = 31;
    break L45;
    break;
   }
  case 37:
   {
    $222 = ___cxa_find_matching_catch() | 0;
    $223 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
    $eh$lpad$body55$index3Z2D = $223;
    $eh$lpad$body55$indexZ2D = $222;
    label = 31;
    break L45;
    break;
   }
  case 42:
   {
    $250 = ___cxa_find_matching_catch() | 0;
    $251 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
    $eh$lpad$body62$index19Z2D = $251;
    $eh$lpad$body62$indexZ2D = $250;
    label = 55;
    break;
   }
  case 47:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 52:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 54:
   {
    $284 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body62$index19Z2D = tempRet0;
    $eh$lpad$body62$indexZ2D = $284;
    label = 55;
    break;
   }
  case 61:
   {
    $291 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body70$index30Z2D = tempRet0;
    $eh$lpad$body70$indexZ2D = $291;
    label = 63;
    break;
   }
  case 62:
   {
    $293 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body70$index30Z2D = tempRet0;
    $eh$lpad$body70$indexZ2D = $293;
    label = 63;
    break;
   }
  case 73:
   {
    $318 = ___cxa_find_matching_catch() | 0;
    $319 = tempRet0;
    __ZdlPv($$lcssa);
    $eh$lpad$body70$index30Z2D = $319;
    $eh$lpad$body70$indexZ2D = $318;
    label = 63;
    break;
   }
  case 85:
   {
    $377 = ___cxa_find_matching_catch() | 0;
    $378 = tempRet0;
    __ZdlPv($$lcssa597);
    $eh$lpad$body78$index36Z2D = $378;
    $eh$lpad$body78$indexZ2D = $377;
    label = 91;
    break;
   }
  case 90:
   {
    $393 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body78$index36Z2D = tempRet0;
    $eh$lpad$body78$indexZ2D = $393;
    label = 91;
    break;
   }
  case 97:
   {
    $410 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $14 | 0, 37392, 54);
    $411 = __THREW__;
    __THREW__ = 0;
    do if ($411 & 1) {
     $423 = ___cxa_find_matching_catch() | 0;
     $$113267 = $423;
     $$117266 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $410 | 0, $55 | 0);
     $413 = __THREW__;
     __THREW__ = 0;
     if ($413 & 1) $$033 = 1; else {
      $415 = $410 + 12 | 0;
      HEAP32[$415 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
      HEAP32[$415 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
      HEAP32[$415 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
      HEAP32[$415 + 12 >> 2] = HEAP32[$56 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $410 + 28 | 0, $14 | 0);
      $417 = __THREW__;
      __THREW__ = 0;
      if ($417 & 1) {
       $419 = ___cxa_find_matching_catch() | 0;
       $420 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($410);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
       $$113267 = $419;
       $$117266 = $420;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $410 | 0, 48, 176);
      $421 = __THREW__;
      __THREW__ = 0;
      if ($421 & 1) $$033 = 0; else {}
     }
     $425 = ___cxa_find_matching_catch() | 0;
     $426 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     if ($$033) {
      $$113267 = $425;
      $$117266 = $426;
     } else {
      $$13 = $425;
      $$1329 = $426;
      break L245;
     }
    } while (0);
    ___cxa_free_exception($410 | 0);
    $$13 = $$113267;
    $$1329 = $$117266;
    break;
   }
  case 106:
   {
    $427 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $15 | 0, 37448, 52);
    $428 = __THREW__;
    __THREW__ = 0;
    do if ($428 & 1) {
     $440 = ___cxa_find_matching_catch() | 0;
     $$218270 = tempRet0;
     $$2271 = $440;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $427 | 0, $55 | 0);
     $430 = __THREW__;
     __THREW__ = 0;
     if ($430 & 1) $$031 = 1; else {
      $432 = $427 + 12 | 0;
      HEAP32[$432 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
      HEAP32[$432 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
      HEAP32[$432 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
      HEAP32[$432 + 12 >> 2] = HEAP32[$56 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $427 + 28 | 0, $15 | 0);
      $434 = __THREW__;
      __THREW__ = 0;
      if ($434 & 1) {
       $436 = ___cxa_find_matching_catch() | 0;
       $437 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($427);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
       $$218270 = $437;
       $$2271 = $436;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $427 | 0, 48, 176);
      $438 = __THREW__;
      __THREW__ = 0;
      if ($438 & 1) $$031 = 0; else {}
     }
     $442 = ___cxa_find_matching_catch() | 0;
     $443 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
     if ($$031) {
      $$218270 = $443;
      $$2271 = $442;
     } else {
      $$13 = $442;
      $$1329 = $443;
      break L245;
     }
    } while (0);
    ___cxa_free_exception($427 | 0);
    $$13 = $$2271;
    $$1329 = $$218270;
    break;
   }
  case 122:
   {
    $471 = ___cxa_find_matching_catch() | 0;
    $472 = tempRet0;
    __ZdlPv($$lcssa595);
    $eh$lpad$body62$index19Z2D = $472;
    $eh$lpad$body62$indexZ2D = $471;
    label = 55;
    break;
   }
  case 125:
   {
    $474 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $16 | 0, 37504, 48);
    $475 = __THREW__;
    __THREW__ = 0;
    do if ($475 & 1) {
     $487 = ___cxa_find_matching_catch() | 0;
     $$319274 = tempRet0;
     $$3275 = $487;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $474 | 0, $55 | 0);
     $477 = __THREW__;
     __THREW__ = 0;
     if ($477 & 1) $$010 = 1; else {
      $479 = $474 + 12 | 0;
      HEAP32[$479 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
      HEAP32[$479 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
      HEAP32[$479 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
      HEAP32[$479 + 12 >> 2] = HEAP32[$56 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $474 + 28 | 0, $16 | 0);
      $481 = __THREW__;
      __THREW__ = 0;
      if ($481 & 1) {
       $483 = ___cxa_find_matching_catch() | 0;
       $484 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($474);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
       $$319274 = $484;
       $$3275 = $483;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $474 | 0, 48, 176);
      $485 = __THREW__;
      __THREW__ = 0;
      if ($485 & 1) $$010 = 0; else {}
     }
     $489 = ___cxa_find_matching_catch() | 0;
     $490 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     if ($$010) {
      $$319274 = $490;
      $$3275 = $489;
     } else {
      $$13 = $489;
      $$1329 = $490;
      break L245;
     }
    } while (0);
    ___cxa_free_exception($474 | 0);
    $$13 = $$3275;
    $$1329 = $$319274;
    break;
   }
  case 134:
   {
    $491 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $17 | 0, 37560, 28);
    $492 = __THREW__;
    __THREW__ = 0;
    do if ($492 & 1) {
     $504 = ___cxa_find_matching_catch() | 0;
     $$420278 = tempRet0;
     $$4279 = $504;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $491 | 0, $55 | 0);
     $494 = __THREW__;
     __THREW__ = 0;
     if ($494 & 1) $$08 = 1; else {
      $496 = $491 + 12 | 0;
      HEAP32[$496 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
      HEAP32[$496 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
      HEAP32[$496 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
      HEAP32[$496 + 12 >> 2] = HEAP32[$56 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $491 + 28 | 0, $17 | 0);
      $498 = __THREW__;
      __THREW__ = 0;
      if ($498 & 1) {
       $500 = ___cxa_find_matching_catch() | 0;
       $501 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($491);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
       $$420278 = $501;
       $$4279 = $500;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $491 | 0, 48, 176);
      $502 = __THREW__;
      __THREW__ = 0;
      if ($502 & 1) $$08 = 0; else {}
     }
     $506 = ___cxa_find_matching_catch() | 0;
     $507 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
     if ($$08) {
      $$420278 = $507;
      $$4279 = $506;
     } else {
      $$13 = $506;
      $$1329 = $507;
      break L245;
     }
    } while (0);
    ___cxa_free_exception($491 | 0);
    $$13 = $$4279;
    $$1329 = $$420278;
    break;
   }
  case 155:
   {
    $571 = ___cxa_find_matching_catch() | 0;
    $572 = tempRet0;
    __ZdlPv($$lcssa596);
    $eh$lpad$body119$index41Z2D = $572;
    $eh$lpad$body119$indexZ2D = $571;
    label = 160;
    break;
   }
  case 157:
   {
    $$6 = ___cxa_find_matching_catch() | 0;
    $$622 = tempRet0;
    label = 162;
    break;
   }
  case 158:
   {
    $$5 = ___cxa_find_matching_catch() | 0;
    $$521 = tempRet0;
    label = 161;
    break;
   }
  case 159:
   {
    $577 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body119$index41Z2D = tempRet0;
    $eh$lpad$body119$indexZ2D = $577;
    label = 160;
    break;
   }
  case 164:
   {
    $580 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $20 | 0, 37592, 35);
    $581 = __THREW__;
    __THREW__ = 0;
    do if ($581 & 1) {
     $593 = ___cxa_find_matching_catch() | 0;
     $$723282 = tempRet0;
     $$7283 = $593;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $580 | 0, $55 | 0);
     $583 = __THREW__;
     __THREW__ = 0;
     if ($583 & 1) $$06 = 1; else {
      $585 = $580 + 12 | 0;
      HEAP32[$585 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
      HEAP32[$585 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
      HEAP32[$585 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
      HEAP32[$585 + 12 >> 2] = HEAP32[$56 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $580 + 28 | 0, $20 | 0);
      $587 = __THREW__;
      __THREW__ = 0;
      if ($587 & 1) {
       $589 = ___cxa_find_matching_catch() | 0;
       $590 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($580);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
       $$723282 = $590;
       $$7283 = $589;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $580 | 0, 48, 176);
      $591 = __THREW__;
      __THREW__ = 0;
      if ($591 & 1) $$06 = 0; else {}
     }
     $595 = ___cxa_find_matching_catch() | 0;
     $596 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
     if ($$06) {
      $$723282 = $596;
      $$7283 = $595;
     } else {
      $$13 = $595;
      $$1329 = $596;
      break L245;
     }
    } while (0);
    ___cxa_free_exception($580 | 0);
    $$13 = $$7283;
    $$1329 = $$723282;
    break;
   }
  case 175:
   {
    $606 = ___cxa_find_matching_catch() | 0;
    $607 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
    $eh$lpad$body128$index47Z2D = $607;
    $eh$lpad$body128$indexZ2D = $606;
    label = 184;
    break;
   }
  case 179:
   {
    $620 = ___cxa_find_matching_catch() | 0;
    $621 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($62);
    $eh$lpad$body128$index47Z2D = $621;
    $eh$lpad$body128$indexZ2D = $620;
    label = 184;
    break;
   }
  case 183:
   {
    $641 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body128$index47Z2D = tempRet0;
    $eh$lpad$body128$indexZ2D = $641;
    label = 184;
    break;
   }
  case 185:
   {
    $643 = ___cxa_find_matching_catch() | 0;
    $644 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
    $$13 = $643;
    $$1329 = $644;
    break;
   }
  case 188:
   {
    $654 = ___cxa_find_matching_catch() | 0;
    $655 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    $1148 = $$lcssa616;
    $1149 = $$lcssa599;
    $eh$lpad$body143$index60Z2D = $655;
    $eh$lpad$body143$indexZ2D = $654;
    label = 206;
    break;
   }
  case 192:
   {
    $668 = ___cxa_find_matching_catch() | 0;
    $669 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    $1150 = $$lcssa618;
    $1151 = $$lcssa601;
    $eh$lpad$body147$index72Z2D = $669;
    $eh$lpad$body147$indexZ2D = $668;
    label = 208;
    break;
   }
  case 196:
   {
    $683 = ___cxa_find_matching_catch() | 0;
    $684 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($73);
    $1148 = $$lcssa619;
    $1149 = $$lcssa602;
    $eh$lpad$body143$index60Z2D = $684;
    $eh$lpad$body143$indexZ2D = $683;
    label = 206;
    break;
   }
  case 201:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 204:
   {
    $704 = ___cxa_find_matching_catch() | 0;
    $705 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($79);
    $1148 = $$lcssa621;
    $1149 = $$lcssa604;
    $eh$lpad$body143$index60Z2D = $705;
    $eh$lpad$body143$indexZ2D = $704;
    label = 206;
    break;
   }
  case 205:
   {
    $706 = ___cxa_find_matching_catch() | 0;
    $1148 = $$lcssa615;
    $1149 = $$lcssa598;
    $eh$lpad$body143$index60Z2D = tempRet0;
    $eh$lpad$body143$indexZ2D = $706;
    label = 206;
    break;
   }
  case 207:
   {
    $708 = ___cxa_find_matching_catch() | 0;
    $1150 = $$lcssa617;
    $1151 = $$lcssa600;
    $eh$lpad$body147$index72Z2D = tempRet0;
    $eh$lpad$body147$indexZ2D = $708;
    label = 208;
    break;
   }
  case 210:
   {
    $725 = ___cxa_allocate_exception(40) | 0;
    HEAP32[$29 + 0 >> 2] = 0;
    HEAP32[$29 + 4 >> 2] = 0;
    HEAP32[$29 + 8 >> 2] = 0;
    $726 = HEAP8[$54 >> 0] | 0;
    if (!($726 & 1)) $733 = ($726 & 255) >>> 1; else $733 = HEAP32[$144 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiii(14, $29 | 0, 37656, 40, $733 + 40 | 0);
    $734 = __THREW__;
    __THREW__ = 0;
    do if ($734 & 1) label = 219; else {
     __THREW__ = 0;
     invoke_iiii(33, $29 | 0, ((HEAP8[$54 >> 0] & 1) == 0 ? $138 : HEAP32[$143 >> 2] | 0) | 0, $733 | 0) | 0;
     $740 = __THREW__;
     __THREW__ = 0;
     if ($740 & 1) label = 219; else {
      __THREW__ = 0;
      invoke_vii(40, $725 | 0, $55 | 0);
      $742 = __THREW__;
      __THREW__ = 0;
      if ($742 & 1) $$03 = 1; else {
       $744 = $725 + 12 | 0;
       HEAP32[$744 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
       HEAP32[$744 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
       HEAP32[$744 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
       HEAP32[$744 + 12 >> 2] = HEAP32[$56 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $725 + 28 | 0, $29 | 0);
       $746 = __THREW__;
       __THREW__ = 0;
       if ($746 & 1) {
        $748 = ___cxa_find_matching_catch() | 0;
        $749 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($725);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
        $$824292 = $749;
        $$8293 = $748;
        break;
       }
       __THREW__ = 0;
       invoke_viii(4, $725 | 0, 48, 176);
       $750 = __THREW__;
       __THREW__ = 0;
       if ($750 & 1) $$03 = 0; else {}
      }
      $754 = ___cxa_find_matching_catch() | 0;
      $755 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
      if ($$03) {
       $$824292 = $755;
       $$8293 = $754;
      } else {
       $$10 = $754;
       $$1026 = $755;
       $993 = $$lcssa622;
       $996 = $$lcssa605;
       label = 292;
       break L245;
      }
     }
    } while (0);
    if ((label | 0) == 219) {
     $752 = ___cxa_find_matching_catch() | 0;
     $753 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
     $$824292 = $753;
     $$8293 = $752;
    }
    ___cxa_free_exception($725 | 0);
    $$10 = $$8293;
    $$1026 = $$824292;
    $993 = $$lcssa622;
    $996 = $$lcssa605;
    label = 292;
    break;
   }
  case 226:
   {
    $767 = ___cxa_find_matching_catch() | 0;
    $768 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($86);
    $1148 = $$lcssa623;
    $1149 = $$lcssa606;
    $eh$lpad$body143$index60Z2D = $768;
    $eh$lpad$body143$indexZ2D = $767;
    label = 206;
    break;
   }
  case 230:
   {
    $781 = ___cxa_find_matching_catch() | 0;
    $782 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($89);
    $1148 = $$lcssa624;
    $1149 = $$lcssa607;
    $eh$lpad$body143$index60Z2D = $782;
    $eh$lpad$body143$indexZ2D = $781;
    label = 206;
    break;
   }
  case 233:
   {
    $807 = ___cxa_find_matching_catch() | 0;
    $808 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($92);
    $1148 = $$lcssa625;
    $1149 = $$lcssa608;
    $eh$lpad$body143$index60Z2D = $808;
    $eh$lpad$body143$indexZ2D = $807;
    label = 206;
    break;
   }
  case 237:
   {
    $821 = ___cxa_find_matching_catch() | 0;
    $822 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($95);
    $1148 = $$lcssa626;
    $1149 = $$lcssa609;
    $eh$lpad$body143$index60Z2D = $822;
    $eh$lpad$body143$indexZ2D = $821;
    label = 206;
    break;
   }
  case 241:
   {
    $842 = ___cxa_allocate_exception(40) | 0;
    HEAP32[$35 + 0 >> 2] = 0;
    HEAP32[$35 + 4 >> 2] = 0;
    HEAP32[$35 + 8 >> 2] = 0;
    $843 = HEAP8[$54 >> 0] | 0;
    if (!($843 & 1)) $850 = ($843 & 255) >>> 1; else $850 = HEAP32[$144 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiii(14, $35 | 0, 37704, 17, $850 + 17 | 0);
    $851 = __THREW__;
    __THREW__ = 0;
    do if ($851 & 1) label = 250; else {
     __THREW__ = 0;
     invoke_iiii(33, $35 | 0, ((HEAP8[$54 >> 0] & 1) == 0 ? $138 : HEAP32[$143 >> 2] | 0) | 0, $850 | 0) | 0;
     $857 = __THREW__;
     __THREW__ = 0;
     if ($857 & 1) label = 250; else {
      __THREW__ = 0;
      invoke_vii(40, $842 | 0, $55 | 0);
      $859 = __THREW__;
      __THREW__ = 0;
      if ($859 & 1) $$01 = 1; else {
       $861 = $842 + 12 | 0;
       HEAP32[$861 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
       HEAP32[$861 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
       HEAP32[$861 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
       HEAP32[$861 + 12 >> 2] = HEAP32[$56 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $842 + 28 | 0, $35 | 0);
       $863 = __THREW__;
       __THREW__ = 0;
       if ($863 & 1) {
        $865 = ___cxa_find_matching_catch() | 0;
        $866 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($842);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
        $$925296 = $866;
        $$9297 = $865;
        break;
       }
       __THREW__ = 0;
       invoke_viii(4, $842 | 0, 48, 176);
       $867 = __THREW__;
       __THREW__ = 0;
       if ($867 & 1) $$01 = 0; else {}
      }
      $871 = ___cxa_find_matching_catch() | 0;
      $872 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
      if ($$01) {
       $$925296 = $872;
       $$9297 = $871;
      } else {
       $$10 = $871;
       $$1026 = $872;
       $993 = $$lcssa627;
       $996 = $$lcssa610;
       label = 292;
       break L245;
      }
     }
    } while (0);
    if ((label | 0) == 250) {
     $869 = ___cxa_find_matching_catch() | 0;
     $870 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
     $$925296 = $870;
     $$9297 = $869;
    }
    ___cxa_free_exception($842 | 0);
    $$10 = $$9297;
    $$1026 = $$925296;
    $993 = $$lcssa627;
    $996 = $$lcssa610;
    label = 292;
    break;
   }
  case 267:
   {
    $912 = ___cxa_find_matching_catch() | 0;
    $913 = tempRet0;
    __ZdlPv($$lcssa632);
    $1152 = $$lcssa629;
    $1153 = $$lcssa612;
    $eh$lpad$body209$index78Z2D = $913;
    $eh$lpad$body209$indexZ2D = $912;
    label = 286;
    break;
   }
  case 275:
   {
    $936 = ___cxa_find_matching_catch() | 0;
    $937 = tempRet0;
    __ZdlPv($$lcssa635);
    $1152 = $$lcssa630;
    $1153 = $$lcssa613;
    $eh$lpad$body209$index78Z2D = $937;
    $eh$lpad$body209$indexZ2D = $936;
    label = 286;
    break;
   }
  case 283:
   {
    $967 = ___cxa_find_matching_catch() | 0;
    $968 = tempRet0;
    __ZdlPv($$lcssa637);
    $1148 = $$lcssa631;
    $1149 = $$lcssa614;
    $eh$lpad$body143$index60Z2D = $968;
    $eh$lpad$body143$indexZ2D = $967;
    label = 206;
    break;
   }
  case 285:
   {
    $969 = ___cxa_find_matching_catch() | 0;
    $1152 = $$lcssa628;
    $1153 = $$lcssa611;
    $eh$lpad$body209$index78Z2D = tempRet0;
    $eh$lpad$body209$indexZ2D = $969;
    label = 286;
    break;
   }
  case 302:
   {
    $1020 = ___cxa_find_matching_catch() | 0;
    $1021 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($106);
    $eh$lpad$body62$index19Z2D = $1021;
    $eh$lpad$body62$indexZ2D = $1020;
    label = 55;
    break;
   }
  case 306:
   {
    $1034 = ___cxa_find_matching_catch() | 0;
    $1035 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($109);
    $eh$lpad$body62$index19Z2D = $1035;
    $eh$lpad$body62$indexZ2D = $1034;
    label = 55;
    break;
   }
  case 309:
   {
    $1060 = ___cxa_find_matching_catch() | 0;
    $1061 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($112);
    $eh$lpad$body62$index19Z2D = $1061;
    $eh$lpad$body62$indexZ2D = $1060;
    label = 55;
    break;
   }
  case 313:
   {
    $1074 = ___cxa_find_matching_catch() | 0;
    $1075 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($115);
    $eh$lpad$body62$index19Z2D = $1075;
    $eh$lpad$body62$indexZ2D = $1074;
    label = 55;
    break;
   }
  case 318:
   {
    $1106 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $43 | 0, 37728, 24);
    $1107 = __THREW__;
    __THREW__ = 0;
    if ($1107 & 1) {
     $1113 = ___cxa_find_matching_catch() | 0;
     $$1214301 = $1113;
     $$1228300 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_viii(7, $1106 | 0, $next | 0, $43 | 0);
     $1109 = __THREW__;
     __THREW__ = 0;
     if ($1109 & 1) $$0 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $1106 | 0, 48, 176);
      $1111 = __THREW__;
      __THREW__ = 0;
      if ($1111 & 1) $$0 = 0; else {}
     }
     $1115 = ___cxa_find_matching_catch() | 0;
     $1116 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     if ($$0) {
      $$1214301 = $1115;
      $$1228300 = $1116;
     } else {
      $$13 = $1115;
      $$1329 = $1116;
      break;
     }
    }
    ___cxa_free_exception($1106 | 0);
    $$13 = $$1214301;
    $$1329 = $$1228300;
    break;
   }
  case 328:
   {
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($let_binds, HEAP32[$51 >> 2] | 0);
    if (!(HEAP32[$48 >> 2] | 0)) {
     $1131 = HEAP32[$46 >> 2] | 0;
     __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1131);
     STACKTOP = sp;
     return;
    }
    $1120 = HEAP32[$47 >> 2] | 0;
    $1122 = (HEAP32[$fields >> 2] | 0) + 4 | 0;
    $1124 = HEAP32[$1120 >> 2] | 0;
    HEAP32[$1124 + 4 >> 2] = HEAP32[$1122 >> 2];
    HEAP32[HEAP32[$1122 >> 2] >> 2] = $1124;
    HEAP32[$48 >> 2] = 0;
    if (($1120 | 0) == ($fields | 0)) {
     $1131 = HEAP32[$46 >> 2] | 0;
     __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1131);
     STACKTOP = sp;
     return;
    }
    $__f$01$i$i260 = $1120;
    do {
     $__f$01$i$i260$looptemp = $__f$01$i$i260;
     $__f$01$i$i260 = HEAP32[$__f$01$i$i260 + 4 >> 2] | 0;
     __ZdlPv($__f$01$i$i260$looptemp);
    } while (($__f$01$i$i260 | 0) != ($fields | 0));
    $1131 = HEAP32[$46 >> 2] | 0;
    __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1131);
    STACKTOP = sp;
    return;
   }
  }
  if ((label | 0) == 55) {
   $$13 = $eh$lpad$body62$indexZ2D;
   $$1329 = $eh$lpad$body62$index19Z2D;
  } else if ((label | 0) == 63) {
   $$012 = $eh$lpad$body70$indexZ2D;
   $$016 = $eh$lpad$body70$index30Z2D;
   label = 92;
  } else if ((label | 0) == 91) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
   $$012 = $eh$lpad$body78$indexZ2D;
   $$016 = $eh$lpad$body78$index36Z2D;
   label = 92;
  } else if ((label | 0) == 160) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
   $$5 = $eh$lpad$body119$indexZ2D;
   $$521 = $eh$lpad$body119$index41Z2D;
   label = 161;
  } else if ((label | 0) == 184) {
   $$13 = $eh$lpad$body128$indexZ2D;
   $$1329 = $eh$lpad$body128$index47Z2D;
  } else if ((label | 0) == 206) {
   $$10 = $eh$lpad$body143$indexZ2D;
   $$1026 = $eh$lpad$body143$index60Z2D;
   $993 = $1148;
   $996 = $1149;
   label = 292;
  } else if ((label | 0) == 208) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
   $$10 = $eh$lpad$body147$indexZ2D;
   $$1026 = $eh$lpad$body147$index72Z2D;
   $993 = $1150;
   $996 = $1151;
   label = 292;
  } else if ((label | 0) == 286) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
   $$10 = $eh$lpad$body209$indexZ2D;
   $$1026 = $eh$lpad$body209$index78Z2D;
   $993 = $1152;
   $996 = $1153;
   label = 292;
  }
  if ((label | 0) == 92) if (!(HEAP32[$119 >> 2] | 0)) {
   $$13 = $$012;
   $$1329 = $$016;
  } else {
   $397 = HEAP32[$118 >> 2] | 0;
   $399 = (HEAP32[$r >> 2] | 0) + 4 | 0;
   $401 = HEAP32[$397 >> 2] | 0;
   HEAP32[$401 + 4 >> 2] = HEAP32[$399 >> 2];
   HEAP32[HEAP32[$399 >> 2] >> 2] = $401;
   HEAP32[$119 >> 2] = 0;
   if (($397 | 0) == ($r | 0)) {
    $$13 = $$012;
    $$1329 = $$016;
   } else {
    $__f$01$i$i80 = $397;
    do {
     $__f$01$i$i80$looptemp = $__f$01$i$i80;
     $__f$01$i$i80 = HEAP32[$__f$01$i$i80 + 4 >> 2] | 0;
     __ZdlPv($__f$01$i$i80$looptemp);
    } while (($__f$01$i$i80 | 0) != ($r | 0));
    $$13 = $$012;
    $$1329 = $$016;
   }
  } else if ((label | 0) == 161) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result + 16 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($125);
   $$6 = $$5;
   $$622 = $$521;
   label = 162;
  } else if ((label | 0) == 292) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($plus_loc);
   $995 = $993;
   if (!$993) {
    $$13 = $$10;
    $$1329 = $$1026;
   } else {
    if (($996 | 0) != ($993 | 0)) HEAP32[$57 >> 2] = $996 + (~(($996 + -4 - $995 | 0) >>> 2) << 2);
    __ZdlPv($993);
    $$13 = $$10;
    $$1329 = $$1026;
   }
  }
  if ((label | 0) == 162) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($134);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($128);
   $$13 = $$6;
   $$1329 = $$622;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
  $$1415 = $$13;
  $$1430 = $$1329;
 } while (0);
 if ((label | 0) == 31) {
  $$1415 = $eh$lpad$body55$indexZ2D;
  $$1430 = $eh$lpad$body55$index3Z2D;
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($let_binds, HEAP32[$51 >> 2] | 0);
 if (!(HEAP32[$48 >> 2] | 0)) {
  $1146 = HEAP32[$46 >> 2] | 0;
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1146);
  ___resumeException($$1415 | 0);
 }
 $1135 = HEAP32[$47 >> 2] | 0;
 $1137 = (HEAP32[$fields >> 2] | 0) + 4 | 0;
 $1139 = HEAP32[$1135 >> 2] | 0;
 HEAP32[$1139 + 4 >> 2] = HEAP32[$1137 >> 2];
 HEAP32[HEAP32[$1137 >> 2] >> 2] = $1139;
 HEAP32[$48 >> 2] = 0;
 if (($1135 | 0) == ($fields | 0)) {
  $1146 = HEAP32[$46 >> 2] | 0;
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1146);
  ___resumeException($$1415 | 0);
 }
 $__f$01$i$i263 = $1135;
 do {
  $__f$01$i$i263$looptemp = $__f$01$i$i263;
  $__f$01$i$i263 = HEAP32[$__f$01$i$i263 + 4 >> 2] | 0;
  __ZdlPv($__f$01$i$i263$looptemp);
 } while (($__f$01$i$i263 | 0) != ($fields | 0));
 $1146 = HEAP32[$46 >> 2] | 0;
 __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1146);
 ___resumeException($$1415 | 0);
}
function __GLOBAL__sub_I_parser_cpp() {
 var $$0$i$i = 0, $$0$i$i26 = 0, $$0$i7$i114$i$i = 0, $$0$i7$i129$i$i = 0, $$0$i7$i144$i$i = 0, $$0$i7$i159$i$i = 0, $$0$i7$i174$i$i = 0, $$0$i7$i189$i$i = 0, $$0$i7$i204$i$i = 0, $$0$i7$i219$i$i = 0, $$0$i7$i234$i$i = 0, $$0$i7$i24$i$i = 0, $$0$i7$i39$i$i = 0, $$0$i7$i54$i$i = 0, $$0$i7$i69$i$i = 0, $$0$i7$i84$i$i = 0, $$0$i7$i9$i$i = 0, $$0$i7$i99$i$i = 0, $$01$i$i = 0, $$01$i$i25 = 0, $$lcssa = 0, $$lcssa218 = 0, $$lcssa221 = 0, $$lcssa222 = 0, $$lcssa225 = 0, $$lcssa226 = 0, $$lcssa229 = 0, $$lcssa230 = 0, $$lcssa233 = 0, $$lcssa234 = 0, $$lcssa237 = 0, $$lcssa238 = 0, $$lcssa241 = 0, $$lcssa242 = 0, $$lcssa245 = 0, $$lcssa246 = 0, $$lcssa249 = 0, $$lcssa250 = 0, $$lcssa253 = 0, $$lcssa254 = 0, $$lcssa257 = 0, $$lcssa258 = 0, $$lcssa261 = 0, $$lcssa262 = 0, $$lcssa265 = 0, $$lcssa266 = 0, $$lcssa269 = 0, $$lcssa270 = 0, $$lcssa273 = 0, $$lcssa274 = 0, $$lcssa277 = 0, $$lcssa278 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $107 = 0, $11 = 0, $110 = 0, $112 = 0, $115 = 0, $116 = 0, $119 = 0, $12 = 0, $120 = 0, $126 = 0, $128 = 0, $13 = 0, $131 = 0, $135 = 0, $138 = 0, $14 = 0, $140 = 0, $143 = 0, $144 = 0, $147 = 0, $148 = 0, $15 = 0, $154 = 0, $156 = 0, $159 = 0, $16 = 0, $163 = 0, $166 = 0, $168 = 0, $17 = 0, $171 = 0, $172 = 0, $175 = 0, $176 = 0, $18 = 0, $182 = 0, $184 = 0, $187 = 0, $191 = 0, $194 = 0, $196 = 0, $199 = 0, $2 = 0, $200 = 0, $203 = 0, $204 = 0, $210 = 0, $212 = 0, $215 = 0, $219 = 0, $222 = 0, $224 = 0, $227 = 0, $228 = 0, $231 = 0, $232 = 0, $238 = 0, $240 = 0, $243 = 0, $247 = 0, $250 = 0, $252 = 0, $255 = 0, $256 = 0, $259 = 0, $26 = 0, $260 = 0, $266 = 0, $268 = 0, $271 = 0, $275 = 0, $278 = 0, $28 = 0, $280 = 0, $283 = 0, $284 = 0, $287 = 0, $288 = 0, $294 = 0, $296 = 0, $299 = 0, $3 = 0, $303 = 0, $306 = 0, $308 = 0, $31 = 0, $311 = 0, $312 = 0, $315 = 0, $316 = 0, $32 = 0, $322 = 0, $324 = 0, $327 = 0, $331 = 0, $334 = 0, $336 = 0, $339 = 0, $340 = 0, $343 = 0, $344 = 0, $35 = 0, $350 = 0, $352 = 0, $355 = 0, $359 = 0, $36 = 0, $362 = 0, $364 = 0, $367 = 0, $368 = 0, $371 = 0, $372 = 0, $378 = 0, $380 = 0, $383 = 0, $387 = 0, $390 = 0, $392 = 0, $395 = 0, $396 = 0, $399 = 0, $4 = 0, $400 = 0, $406 = 0, $408 = 0, $411 = 0, $415 = 0, $418 = 0, $42 = 0, $420 = 0, $423 = 0, $424 = 0, $427 = 0, $428 = 0, $434 = 0, $436 = 0, $439 = 0, $44 = 0, $443 = 0, $446 = 0, $448 = 0, $451 = 0, $452 = 0, $455 = 0, $456 = 0, $462 = 0, $464 = 0, $467 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $474 = 0, $476 = 0, $477 = 0, $479 = 0, $480 = 0, $482 = 0, $484 = 0, $488 = 0, $491 = 0, $495 = 0, $497 = 0, $498 = 0, $5 = 0, $500 = 0, $501 = 0, $503 = 0, $505 = 0, $509 = 0, $51 = 0, $512 = 0, $516 = 0, $518 = 0, $519 = 0, $521 = 0, $522 = 0, $524 = 0, $526 = 0, $530 = 0, $533 = 0, $537 = 0, $539 = 0, $54 = 0, $540 = 0, $542 = 0, $543 = 0, $545 = 0, $547 = 0, $551 = 0, $554 = 0, $557 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $569 = 0, $571 = 0, $572 = 0, $574 = 0, $575 = 0, $577 = 0, $579 = 0, $583 = 0, $586 = 0, $59 = 0, $590 = 0, $592 = 0, $593 = 0, $595 = 0, $596 = 0, $598 = 0, $6 = 0, $60 = 0, $600 = 0, $604 = 0, $607 = 0, $611 = 0, $613 = 0, $614 = 0, $616 = 0, $617 = 0, $619 = 0, $621 = 0, $625 = 0, $628 = 0, $63 = 0, $632 = 0, $634 = 0, $635 = 0, $637 = 0, $638 = 0, $64 = 0, $640 = 0, $642 = 0, $646 = 0, $649 = 0, $653 = 0, $655 = 0, $656 = 0, $658 = 0, $659 = 0, $661 = 0, $663 = 0, $667 = 0, $670 = 0, $674 = 0, $676 = 0, $677 = 0, $679 = 0, $680 = 0, $682 = 0, $684 = 0, $688 = 0, $691 = 0, $695 = 0, $697 = 0, $698 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $703 = 0, $705 = 0, $709 = 0, $712 = 0, $716 = 0, $718 = 0, $719 = 0, $72 = 0, $721 = 0, $722 = 0, $724 = 0, $726 = 0, $730 = 0, $733 = 0, $737 = 0, $739 = 0, $740 = 0, $742 = 0, $743 = 0, $745 = 0, $747 = 0, $75 = 0, $751 = 0, $754 = 0, $758 = 0, $760 = 0, $761 = 0, $763 = 0, $764 = 0, $766 = 0, $768 = 0, $772 = 0, $775 = 0, $779 = 0, $781 = 0, $782 = 0, $784 = 0, $785 = 0, $787 = 0, $789 = 0, $79 = 0, $793 = 0, $796 = 0, $8 = 0, $800 = 0, $802 = 0, $803 = 0, $805 = 0, $806 = 0, $808 = 0, $810 = 0, $814 = 0, $817 = 0, $82 = 0, $821 = 0, $823 = 0, $824 = 0, $826 = 0, $827 = 0, $829 = 0, $831 = 0, $835 = 0, $838 = 0, $84 = 0, $842 = 0, $844 = 0, $845 = 0, $847 = 0, $848 = 0, $850 = 0, $852 = 0, $856 = 0, $859 = 0, $863 = 0, $865 = 0, $866 = 0, $868 = 0, $869 = 0, $87 = 0, $871 = 0, $873 = 0, $877 = 0, $88 = 0, $880 = 0, $884 = 0, $886 = 0, $887 = 0, $889 = 0, $890 = 0, $892 = 0, $894 = 0, $898 = 0, $9 = 0, $901 = 0, $905 = 0, $907 = 0, $908 = 0, $91 = 0, $910 = 0, $911 = 0, $913 = 0, $915 = 0, $919 = 0, $92 = 0, $922 = 0, $925 = 0, $927 = 0, $928 = 0, $929 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $960 = 0, $961 = 0, $962 = 0, $98 = 0, $__nd$0$be$in$i$i109$i$i = 0, $__nd$0$be$in$i$i124$i$i = 0, $__nd$0$be$in$i$i139$i$i = 0, $__nd$0$be$in$i$i154$i$i = 0, $__nd$0$be$in$i$i169$i$i = 0, $__nd$0$be$in$i$i184$i$i = 0, $__nd$0$be$in$i$i19$i$i = 0, $__nd$0$be$in$i$i199$i$i = 0, $__nd$0$be$in$i$i214$i$i = 0, $__nd$0$be$in$i$i229$i$i = 0, $__nd$0$be$in$i$i34$i$i = 0, $__nd$0$be$in$i$i4$i$i = 0, $__nd$0$be$in$i$i49$i$i = 0, $__nd$0$be$in$i$i64$i$i = 0, $__nd$0$be$in$i$i79$i$i = 0, $__nd$0$be$in$i$i94$i$i = 0, $__nd$0$i$i108$i$i = 0, $__nd$0$i$i108$i$i$lcssa = 0, $__nd$0$i$i108$i$i$lcssa247 = 0, $__nd$0$i$i108$i$i$lcssa248 = 0, $__nd$0$i$i123$i$i = 0, $__nd$0$i$i123$i$i$lcssa = 0, $__nd$0$i$i123$i$i$lcssa243 = 0, $__nd$0$i$i123$i$i$lcssa244 = 0, $__nd$0$i$i138$i$i = 0, $__nd$0$i$i138$i$i$lcssa = 0, $__nd$0$i$i138$i$i$lcssa239 = 0, $__nd$0$i$i138$i$i$lcssa240 = 0, $__nd$0$i$i153$i$i = 0, $__nd$0$i$i153$i$i$lcssa = 0, $__nd$0$i$i153$i$i$lcssa235 = 0, $__nd$0$i$i153$i$i$lcssa236 = 0, $__nd$0$i$i168$i$i = 0, $__nd$0$i$i168$i$i$lcssa = 0, $__nd$0$i$i168$i$i$lcssa231 = 0, $__nd$0$i$i168$i$i$lcssa232 = 0, $__nd$0$i$i18$i$i = 0, $__nd$0$i$i18$i$i$lcssa = 0, $__nd$0$i$i18$i$i$lcssa271 = 0, $__nd$0$i$i18$i$i$lcssa272 = 0, $__nd$0$i$i183$i$i = 0, $__nd$0$i$i183$i$i$lcssa = 0, $__nd$0$i$i183$i$i$lcssa227 = 0, $__nd$0$i$i183$i$i$lcssa228 = 0, $__nd$0$i$i198$i$i = 0, $__nd$0$i$i198$i$i$lcssa = 0, $__nd$0$i$i198$i$i$lcssa223 = 0, $__nd$0$i$i198$i$i$lcssa224 = 0, $__nd$0$i$i213$i$i = 0, $__nd$0$i$i213$i$i$lcssa = 0, $__nd$0$i$i213$i$i$lcssa219 = 0, $__nd$0$i$i213$i$i$lcssa220 = 0, $__nd$0$i$i228$i$i = 0, $__nd$0$i$i228$i$i$lcssa = 0, $__nd$0$i$i228$i$i$lcssa216 = 0, $__nd$0$i$i228$i$i$lcssa217 = 0, $__nd$0$i$i3$i$i = 0, $__nd$0$i$i3$i$i$lcssa = 0, $__nd$0$i$i3$i$i$lcssa275 = 0, $__nd$0$i$i3$i$i$lcssa276 = 0, $__nd$0$i$i33$i$i = 0, $__nd$0$i$i33$i$i$lcssa = 0, $__nd$0$i$i33$i$i$lcssa267 = 0, $__nd$0$i$i33$i$i$lcssa268 = 0, $__nd$0$i$i48$i$i = 0, $__nd$0$i$i48$i$i$lcssa = 0, $__nd$0$i$i48$i$i$lcssa263 = 0, $__nd$0$i$i48$i$i$lcssa264 = 0, $__nd$0$i$i63$i$i = 0, $__nd$0$i$i63$i$i$lcssa = 0, $__nd$0$i$i63$i$i$lcssa259 = 0, $__nd$0$i$i63$i$i$lcssa260 = 0, $__nd$0$i$i78$i$i = 0, $__nd$0$i$i78$i$i$lcssa = 0, $__nd$0$i$i78$i$i$lcssa255 = 0, $__nd$0$i$i78$i$i$lcssa256 = 0, $__nd$0$i$i93$i$i = 0, $__nd$0$i$i93$i$i$lcssa = 0, $__nd$0$i$i93$i$i$lcssa251 = 0, $__nd$0$i$i93$i$i$lcssa252 = 0, $__parent$i$i$i5 = 0, $__parent$i107$i$i = 0, $__parent$i11$i$i3 = 0, $__parent$i115$i$i = 0, $__parent$i123$i$i = 0, $__parent$i19$i$i2 = 0, $__parent$i27$i$i = 0, $__parent$i3$i$i4 = 0, $__parent$i35$i$i = 0, $__parent$i43$i$i = 0, $__parent$i51$i$i = 0, $__parent$i59$i$i = 0, $__parent$i67$i$i = 0, $__parent$i75$i$i = 0, $__parent$i83$i$i = 0, $__parent$i91$i$i1 = 0, $__parent$i99$i$i = 0, $__r$0$i$i$i = 0, $__r$0$i$i$i9 = 0, $__r$0$i102$i$i = 0, $__r$0$i103$i$i = 0, $__r$0$i110$i$i = 0, $__r$0$i118$i$i = 0, $__r$0$i118$i$i24 = 0, $__r$0$i126$i$i = 0, $__r$0$i13$i$i = 0, $__r$0$i133$i$i = 0, $__r$0$i14$i$i = 0, $__r$0$i14$i$i17 = 0, $__r$0$i148$i$i = 0, $__r$0$i163$i$i = 0, $__r$0$i178$i$i = 0, $__r$0$i193$i$i = 0, $__r$0$i208$i$i = 0, $__r$0$i22$i$i = 0, $__r$0$i22$i$i21 = 0, $__r$0$i223$i$i = 0, $__r$0$i238$i$i = 0, $__r$0$i28$i$i = 0, $__r$0$i30$i$i = 0, $__r$0$i38$i$i = 0, $__r$0$i43$i$i = 0, $__r$0$i46$i$i = 0, $__r$0$i54$i$i = 0, $__r$0$i58$i$i = 0, $__r$0$i6$i$i = 0, $__r$0$i6$i$i13 = 0, $__r$0$i62$i$i = 0, $__r$0$i70$i$i = 0, $__r$0$i73$i$i = 0, $__r$0$i78$i$i = 0, $__r$0$i86$i$i = 0, $__r$0$i88$i$i = 0, $__r$0$i94$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__parent$i123$i$i = sp + 300 | 0;
 $__parent$i115$i$i = sp + 296 | 0;
 $__parent$i107$i$i = sp + 292 | 0;
 $__parent$i99$i$i = sp + 288 | 0;
 $__parent$i91$i$i1 = sp + 276 | 0;
 $__parent$i83$i$i = sp + 264 | 0;
 $__parent$i75$i$i = sp + 252 | 0;
 $__parent$i67$i$i = sp + 240 | 0;
 $__parent$i59$i$i = sp + 236 | 0;
 $__parent$i51$i$i = sp + 232 | 0;
 $__parent$i43$i$i = sp + 228 | 0;
 $__parent$i35$i$i = sp + 224 | 0;
 $__parent$i27$i$i = sp + 220 | 0;
 $__parent$i19$i$i2 = sp + 216 | 0;
 $__parent$i11$i$i3 = sp + 212 | 0;
 $__parent$i3$i$i4 = sp + 208 | 0;
 $__parent$i$i$i5 = sp + 204 | 0;
 $0 = sp + 192 | 0;
 $1 = sp + 180 | 0;
 $2 = sp + 168 | 0;
 $3 = sp + 156 | 0;
 $4 = sp + 144 | 0;
 $5 = sp + 132 | 0;
 $6 = sp + 120 | 0;
 $7 = sp + 108 | 0;
 $8 = sp + 96 | 0;
 $9 = sp + 84 | 0;
 $10 = sp + 72 | 0;
 $11 = sp + 60 | 0;
 $12 = sp + 48 | 0;
 $13 = sp + 36 | 0;
 $14 = sp + 24 | 0;
 $15 = sp + 12 | 0;
 $16 = sp;
 HEAP32[303] = 0;
 HEAP32[304] = 0;
 HEAP32[302] = 1212;
 __THREW__ = 0;
 $17 = invoke_ii(67, 24) | 0;
 $18 = __THREW__;
 __THREW__ = 0;
 if ($18 & 1) {
  $472 = 0;
  $470 = ___cxa_find_matching_catch() | 0;
  $471 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
  ___resumeException($470 | 0);
 }
 HEAP32[$17 + 16 >> 2] = 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 1212;
 HEAP32[303] = $17;
 HEAP32[302] = $17;
 HEAP8[$17 + 12 >> 0] = 1;
 HEAP32[304] = 1;
 HEAP32[$17 + 20 >> 2] = 5;
 $__nd$0$i$i3$i$i = $17;
 while (1) {
  $26 = HEAP32[$__nd$0$i$i3$i$i + 16 >> 2] | 0;
  if (($26 | 0) > 1) {
   $28 = HEAP32[$__nd$0$i$i3$i$i >> 2] | 0;
   if (!$28) {
    $$lcssa278 = $__nd$0$i$i3$i$i;
    $__nd$0$i$i3$i$i$lcssa276 = $__nd$0$i$i3$i$i;
    label = 5;
    break;
   } else $__nd$0$be$in$i$i4$i$i = $28;
  } else {
   if (($26 | 0) >= 1) {
    $__nd$0$i$i3$i$i$lcssa = $__nd$0$i$i3$i$i;
    label = 10;
    break;
   }
   $31 = $__nd$0$i$i3$i$i + 4 | 0;
   $32 = HEAP32[$31 >> 2] | 0;
   if (!$32) {
    $$lcssa277 = $31;
    $__nd$0$i$i3$i$i$lcssa275 = $__nd$0$i$i3$i$i;
    label = 9;
    break;
   } else $__nd$0$be$in$i$i4$i$i = $32;
  }
  $__nd$0$i$i3$i$i = $__nd$0$be$in$i$i4$i$i;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent$i3$i$i4 >> 2] = $__nd$0$i$i3$i$i$lcssa276;
  $$0$i7$i9$i$i = $$lcssa278;
  $42 = $__nd$0$i$i3$i$i$lcssa276;
  label = 11;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent$i3$i$i4 >> 2] = $__nd$0$i$i3$i$i$lcssa275;
  $$0$i7$i9$i$i = $$lcssa277;
  $42 = $__nd$0$i$i3$i$i$lcssa275;
  label = 11;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent$i3$i$i4 >> 2] = $__nd$0$i$i3$i$i$lcssa;
  if (!$__nd$0$i$i3$i$i$lcssa) {
   $$0$i7$i9$i$i = $__parent$i3$i$i4;
   $42 = 0;
   label = 11;
  } else {
   $51 = $17;
   $__r$0$i13$i$i = $__nd$0$i$i3$i$i$lcssa;
  }
 }
 if ((label | 0) == 11) {
  __THREW__ = 0;
  $35 = invoke_ii(67, 24) | 0;
  $36 = __THREW__;
  __THREW__ = 0;
  if ($36 & 1) {
   $472 = $17;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$35 + 16 >> 2] = 1;
  HEAP32[$35 + 20 >> 2] = 0;
  HEAP32[$35 >> 2] = 0;
  HEAP32[$35 + 4 >> 2] = 0;
  HEAP32[$35 + 8 >> 2] = $42;
  HEAP32[$$0$i7$i9$i$i >> 2] = $35;
  $44 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$44) $47 = $35; else {
   HEAP32[302] = $44;
   $47 = HEAP32[$$0$i7$i9$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $47);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $51 = HEAP32[303] | 0;
  $__r$0$i13$i$i = $35;
 }
 HEAP32[$__r$0$i13$i$i + 20 >> 2] = 5;
 do if (!$51) {
  HEAP32[$__parent$i11$i$i3 >> 2] = 1212;
  $$0$i7$i24$i$i = 1212 | 0;
  $70 = 1212 | 0;
  label = 26;
 } else {
  $__nd$0$i$i18$i$i = $51;
  while (1) {
   $54 = HEAP32[$__nd$0$i$i18$i$i + 16 >> 2] | 0;
   if (($54 | 0) > 2) {
    $56 = HEAP32[$__nd$0$i$i18$i$i >> 2] | 0;
    if (!$56) {
     $$lcssa274 = $__nd$0$i$i18$i$i;
     $__nd$0$i$i18$i$i$lcssa272 = $__nd$0$i$i18$i$i;
     label = 19;
     break;
    } else $__nd$0$be$in$i$i19$i$i = $56;
   } else {
    if (($54 | 0) >= 2) {
     $__nd$0$i$i18$i$i$lcssa = $__nd$0$i$i18$i$i;
     label = 25;
     break;
    }
    $59 = $__nd$0$i$i18$i$i + 4 | 0;
    $60 = HEAP32[$59 >> 2] | 0;
    if (!$60) {
     $$lcssa273 = $59;
     $__nd$0$i$i18$i$i$lcssa271 = $__nd$0$i$i18$i$i;
     label = 23;
     break;
    } else $__nd$0$be$in$i$i19$i$i = $60;
   }
   $__nd$0$i$i18$i$i = $__nd$0$be$in$i$i19$i$i;
  }
  if ((label | 0) == 19) {
   HEAP32[$__parent$i11$i$i3 >> 2] = $__nd$0$i$i18$i$i$lcssa272;
   $$0$i7$i24$i$i = $$lcssa274;
   $70 = $__nd$0$i$i18$i$i$lcssa272;
   label = 26;
   break;
  } else if ((label | 0) == 23) {
   HEAP32[$__parent$i11$i$i3 >> 2] = $__nd$0$i$i18$i$i$lcssa271;
   $$0$i7$i24$i$i = $$lcssa273;
   $70 = $__nd$0$i$i18$i$i$lcssa271;
   label = 26;
   break;
  } else if ((label | 0) == 25) {
   HEAP32[$__parent$i11$i$i3 >> 2] = $__nd$0$i$i18$i$i$lcssa;
   if (!$__nd$0$i$i18$i$i$lcssa) {
    $$0$i7$i24$i$i = $__parent$i11$i$i3;
    $70 = 0;
    label = 26;
    break;
   } else {
    $79 = $51;
    $__r$0$i28$i$i = $__nd$0$i$i18$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 26) {
  __THREW__ = 0;
  $63 = invoke_ii(67, 24) | 0;
  $64 = __THREW__;
  __THREW__ = 0;
  if ($64 & 1) {
   $472 = $51;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$63 + 16 >> 2] = 2;
  HEAP32[$63 + 20 >> 2] = 0;
  HEAP32[$63 >> 2] = 0;
  HEAP32[$63 + 4 >> 2] = 0;
  HEAP32[$63 + 8 >> 2] = $70;
  HEAP32[$$0$i7$i24$i$i >> 2] = $63;
  $72 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$72) $75 = $63; else {
   HEAP32[302] = $72;
   $75 = HEAP32[$$0$i7$i24$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $75);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $79 = HEAP32[303] | 0;
  $__r$0$i28$i$i = $63;
 }
 HEAP32[$__r$0$i28$i$i + 20 >> 2] = 6;
 do if (!$79) {
  HEAP32[$__parent$i19$i$i2 >> 2] = 1212;
  $$0$i7$i39$i$i = 1212 | 0;
  $98 = 1212 | 0;
  label = 41;
 } else {
  $__nd$0$i$i33$i$i = $79;
  while (1) {
   $82 = HEAP32[$__nd$0$i$i33$i$i + 16 >> 2] | 0;
   if (($82 | 0) > 3) {
    $84 = HEAP32[$__nd$0$i$i33$i$i >> 2] | 0;
    if (!$84) {
     $$lcssa270 = $__nd$0$i$i33$i$i;
     $__nd$0$i$i33$i$i$lcssa268 = $__nd$0$i$i33$i$i;
     label = 34;
     break;
    } else $__nd$0$be$in$i$i34$i$i = $84;
   } else {
    if (($82 | 0) >= 3) {
     $__nd$0$i$i33$i$i$lcssa = $__nd$0$i$i33$i$i;
     label = 40;
     break;
    }
    $87 = $__nd$0$i$i33$i$i + 4 | 0;
    $88 = HEAP32[$87 >> 2] | 0;
    if (!$88) {
     $$lcssa269 = $87;
     $__nd$0$i$i33$i$i$lcssa267 = $__nd$0$i$i33$i$i;
     label = 38;
     break;
    } else $__nd$0$be$in$i$i34$i$i = $88;
   }
   $__nd$0$i$i33$i$i = $__nd$0$be$in$i$i34$i$i;
  }
  if ((label | 0) == 34) {
   HEAP32[$__parent$i19$i$i2 >> 2] = $__nd$0$i$i33$i$i$lcssa268;
   $$0$i7$i39$i$i = $$lcssa270;
   $98 = $__nd$0$i$i33$i$i$lcssa268;
   label = 41;
   break;
  } else if ((label | 0) == 38) {
   HEAP32[$__parent$i19$i$i2 >> 2] = $__nd$0$i$i33$i$i$lcssa267;
   $$0$i7$i39$i$i = $$lcssa269;
   $98 = $__nd$0$i$i33$i$i$lcssa267;
   label = 41;
   break;
  } else if ((label | 0) == 40) {
   HEAP32[$__parent$i19$i$i2 >> 2] = $__nd$0$i$i33$i$i$lcssa;
   if (!$__nd$0$i$i33$i$i$lcssa) {
    $$0$i7$i39$i$i = $__parent$i19$i$i2;
    $98 = 0;
    label = 41;
    break;
   } else {
    $107 = $79;
    $__r$0$i43$i$i = $__nd$0$i$i33$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 41) {
  __THREW__ = 0;
  $91 = invoke_ii(67, 24) | 0;
  $92 = __THREW__;
  __THREW__ = 0;
  if ($92 & 1) {
   $472 = $79;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$91 + 16 >> 2] = 3;
  HEAP32[$91 + 20 >> 2] = 0;
  HEAP32[$91 >> 2] = 0;
  HEAP32[$91 + 4 >> 2] = 0;
  HEAP32[$91 + 8 >> 2] = $98;
  HEAP32[$$0$i7$i39$i$i >> 2] = $91;
  $100 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$100) $103 = $91; else {
   HEAP32[302] = $100;
   $103 = HEAP32[$$0$i7$i39$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $103);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $107 = HEAP32[303] | 0;
  $__r$0$i43$i$i = $91;
 }
 HEAP32[$__r$0$i43$i$i + 20 >> 2] = 6;
 do if (!$107) {
  HEAP32[$__parent$i27$i$i >> 2] = 1212;
  $$0$i7$i54$i$i = 1212 | 0;
  $126 = 1212 | 0;
  label = 56;
 } else {
  $__nd$0$i$i48$i$i = $107;
  while (1) {
   $110 = HEAP32[$__nd$0$i$i48$i$i + 16 >> 2] | 0;
   if (($110 | 0) > 4) {
    $112 = HEAP32[$__nd$0$i$i48$i$i >> 2] | 0;
    if (!$112) {
     $$lcssa266 = $__nd$0$i$i48$i$i;
     $__nd$0$i$i48$i$i$lcssa264 = $__nd$0$i$i48$i$i;
     label = 49;
     break;
    } else $__nd$0$be$in$i$i49$i$i = $112;
   } else {
    if (($110 | 0) >= 4) {
     $__nd$0$i$i48$i$i$lcssa = $__nd$0$i$i48$i$i;
     label = 55;
     break;
    }
    $115 = $__nd$0$i$i48$i$i + 4 | 0;
    $116 = HEAP32[$115 >> 2] | 0;
    if (!$116) {
     $$lcssa265 = $115;
     $__nd$0$i$i48$i$i$lcssa263 = $__nd$0$i$i48$i$i;
     label = 53;
     break;
    } else $__nd$0$be$in$i$i49$i$i = $116;
   }
   $__nd$0$i$i48$i$i = $__nd$0$be$in$i$i49$i$i;
  }
  if ((label | 0) == 49) {
   HEAP32[$__parent$i27$i$i >> 2] = $__nd$0$i$i48$i$i$lcssa264;
   $$0$i7$i54$i$i = $$lcssa266;
   $126 = $__nd$0$i$i48$i$i$lcssa264;
   label = 56;
   break;
  } else if ((label | 0) == 53) {
   HEAP32[$__parent$i27$i$i >> 2] = $__nd$0$i$i48$i$i$lcssa263;
   $$0$i7$i54$i$i = $$lcssa265;
   $126 = $__nd$0$i$i48$i$i$lcssa263;
   label = 56;
   break;
  } else if ((label | 0) == 55) {
   HEAP32[$__parent$i27$i$i >> 2] = $__nd$0$i$i48$i$i$lcssa;
   if (!$__nd$0$i$i48$i$i$lcssa) {
    $$0$i7$i54$i$i = $__parent$i27$i$i;
    $126 = 0;
    label = 56;
    break;
   } else {
    $135 = $107;
    $__r$0$i58$i$i = $__nd$0$i$i48$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 56) {
  __THREW__ = 0;
  $119 = invoke_ii(67, 24) | 0;
  $120 = __THREW__;
  __THREW__ = 0;
  if ($120 & 1) {
   $472 = $107;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$119 + 16 >> 2] = 4;
  HEAP32[$119 + 20 >> 2] = 0;
  HEAP32[$119 >> 2] = 0;
  HEAP32[$119 + 4 >> 2] = 0;
  HEAP32[$119 + 8 >> 2] = $126;
  HEAP32[$$0$i7$i54$i$i >> 2] = $119;
  $128 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$128) $131 = $119; else {
   HEAP32[302] = $128;
   $131 = HEAP32[$$0$i7$i54$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $131);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $135 = HEAP32[303] | 0;
  $__r$0$i58$i$i = $119;
 }
 HEAP32[$__r$0$i58$i$i + 20 >> 2] = 7;
 do if (!$135) {
  HEAP32[$__parent$i35$i$i >> 2] = 1212;
  $$0$i7$i69$i$i = 1212 | 0;
  $154 = 1212 | 0;
  label = 71;
 } else {
  $__nd$0$i$i63$i$i = $135;
  while (1) {
   $138 = HEAP32[$__nd$0$i$i63$i$i + 16 >> 2] | 0;
   if (($138 | 0) > 5) {
    $140 = HEAP32[$__nd$0$i$i63$i$i >> 2] | 0;
    if (!$140) {
     $$lcssa262 = $__nd$0$i$i63$i$i;
     $__nd$0$i$i63$i$i$lcssa260 = $__nd$0$i$i63$i$i;
     label = 64;
     break;
    } else $__nd$0$be$in$i$i64$i$i = $140;
   } else {
    if (($138 | 0) >= 5) {
     $__nd$0$i$i63$i$i$lcssa = $__nd$0$i$i63$i$i;
     label = 70;
     break;
    }
    $143 = $__nd$0$i$i63$i$i + 4 | 0;
    $144 = HEAP32[$143 >> 2] | 0;
    if (!$144) {
     $$lcssa261 = $143;
     $__nd$0$i$i63$i$i$lcssa259 = $__nd$0$i$i63$i$i;
     label = 68;
     break;
    } else $__nd$0$be$in$i$i64$i$i = $144;
   }
   $__nd$0$i$i63$i$i = $__nd$0$be$in$i$i64$i$i;
  }
  if ((label | 0) == 64) {
   HEAP32[$__parent$i35$i$i >> 2] = $__nd$0$i$i63$i$i$lcssa260;
   $$0$i7$i69$i$i = $$lcssa262;
   $154 = $__nd$0$i$i63$i$i$lcssa260;
   label = 71;
   break;
  } else if ((label | 0) == 68) {
   HEAP32[$__parent$i35$i$i >> 2] = $__nd$0$i$i63$i$i$lcssa259;
   $$0$i7$i69$i$i = $$lcssa261;
   $154 = $__nd$0$i$i63$i$i$lcssa259;
   label = 71;
   break;
  } else if ((label | 0) == 70) {
   HEAP32[$__parent$i35$i$i >> 2] = $__nd$0$i$i63$i$i$lcssa;
   if (!$__nd$0$i$i63$i$i$lcssa) {
    $$0$i7$i69$i$i = $__parent$i35$i$i;
    $154 = 0;
    label = 71;
    break;
   } else {
    $163 = $135;
    $__r$0$i73$i$i = $__nd$0$i$i63$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 71) {
  __THREW__ = 0;
  $147 = invoke_ii(67, 24) | 0;
  $148 = __THREW__;
  __THREW__ = 0;
  if ($148 & 1) {
   $472 = $135;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$147 + 16 >> 2] = 5;
  HEAP32[$147 + 20 >> 2] = 0;
  HEAP32[$147 >> 2] = 0;
  HEAP32[$147 + 4 >> 2] = 0;
  HEAP32[$147 + 8 >> 2] = $154;
  HEAP32[$$0$i7$i69$i$i >> 2] = $147;
  $156 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$156) $159 = $147; else {
   HEAP32[302] = $156;
   $159 = HEAP32[$$0$i7$i69$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $159);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $163 = HEAP32[303] | 0;
  $__r$0$i73$i$i = $147;
 }
 HEAP32[$__r$0$i73$i$i + 20 >> 2] = 7;
 do if (!$163) {
  HEAP32[$__parent$i43$i$i >> 2] = 1212;
  $$0$i7$i84$i$i = 1212 | 0;
  $182 = 1212 | 0;
  label = 86;
 } else {
  $__nd$0$i$i78$i$i = $163;
  while (1) {
   $166 = HEAP32[$__nd$0$i$i78$i$i + 16 >> 2] | 0;
   if (($166 | 0) > 6) {
    $168 = HEAP32[$__nd$0$i$i78$i$i >> 2] | 0;
    if (!$168) {
     $$lcssa258 = $__nd$0$i$i78$i$i;
     $__nd$0$i$i78$i$i$lcssa256 = $__nd$0$i$i78$i$i;
     label = 79;
     break;
    } else $__nd$0$be$in$i$i79$i$i = $168;
   } else {
    if (($166 | 0) >= 6) {
     $__nd$0$i$i78$i$i$lcssa = $__nd$0$i$i78$i$i;
     label = 85;
     break;
    }
    $171 = $__nd$0$i$i78$i$i + 4 | 0;
    $172 = HEAP32[$171 >> 2] | 0;
    if (!$172) {
     $$lcssa257 = $171;
     $__nd$0$i$i78$i$i$lcssa255 = $__nd$0$i$i78$i$i;
     label = 83;
     break;
    } else $__nd$0$be$in$i$i79$i$i = $172;
   }
   $__nd$0$i$i78$i$i = $__nd$0$be$in$i$i79$i$i;
  }
  if ((label | 0) == 79) {
   HEAP32[$__parent$i43$i$i >> 2] = $__nd$0$i$i78$i$i$lcssa256;
   $$0$i7$i84$i$i = $$lcssa258;
   $182 = $__nd$0$i$i78$i$i$lcssa256;
   label = 86;
   break;
  } else if ((label | 0) == 83) {
   HEAP32[$__parent$i43$i$i >> 2] = $__nd$0$i$i78$i$i$lcssa255;
   $$0$i7$i84$i$i = $$lcssa257;
   $182 = $__nd$0$i$i78$i$i$lcssa255;
   label = 86;
   break;
  } else if ((label | 0) == 85) {
   HEAP32[$__parent$i43$i$i >> 2] = $__nd$0$i$i78$i$i$lcssa;
   if (!$__nd$0$i$i78$i$i$lcssa) {
    $$0$i7$i84$i$i = $__parent$i43$i$i;
    $182 = 0;
    label = 86;
    break;
   } else {
    $191 = $163;
    $__r$0$i88$i$i = $__nd$0$i$i78$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 86) {
  __THREW__ = 0;
  $175 = invoke_ii(67, 24) | 0;
  $176 = __THREW__;
  __THREW__ = 0;
  if ($176 & 1) {
   $472 = $163;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$175 + 16 >> 2] = 6;
  HEAP32[$175 + 20 >> 2] = 0;
  HEAP32[$175 >> 2] = 0;
  HEAP32[$175 + 4 >> 2] = 0;
  HEAP32[$175 + 8 >> 2] = $182;
  HEAP32[$$0$i7$i84$i$i >> 2] = $175;
  $184 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$184) $187 = $175; else {
   HEAP32[302] = $184;
   $187 = HEAP32[$$0$i7$i84$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $187);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $191 = HEAP32[303] | 0;
  $__r$0$i88$i$i = $175;
 }
 HEAP32[$__r$0$i88$i$i + 20 >> 2] = 8;
 do if (!$191) {
  HEAP32[$__parent$i51$i$i >> 2] = 1212;
  $$0$i7$i99$i$i = 1212 | 0;
  $210 = 1212 | 0;
  label = 101;
 } else {
  $__nd$0$i$i93$i$i = $191;
  while (1) {
   $194 = HEAP32[$__nd$0$i$i93$i$i + 16 >> 2] | 0;
   if (($194 | 0) > 7) {
    $196 = HEAP32[$__nd$0$i$i93$i$i >> 2] | 0;
    if (!$196) {
     $$lcssa254 = $__nd$0$i$i93$i$i;
     $__nd$0$i$i93$i$i$lcssa252 = $__nd$0$i$i93$i$i;
     label = 94;
     break;
    } else $__nd$0$be$in$i$i94$i$i = $196;
   } else {
    if (($194 | 0) >= 7) {
     $__nd$0$i$i93$i$i$lcssa = $__nd$0$i$i93$i$i;
     label = 100;
     break;
    }
    $199 = $__nd$0$i$i93$i$i + 4 | 0;
    $200 = HEAP32[$199 >> 2] | 0;
    if (!$200) {
     $$lcssa253 = $199;
     $__nd$0$i$i93$i$i$lcssa251 = $__nd$0$i$i93$i$i;
     label = 98;
     break;
    } else $__nd$0$be$in$i$i94$i$i = $200;
   }
   $__nd$0$i$i93$i$i = $__nd$0$be$in$i$i94$i$i;
  }
  if ((label | 0) == 94) {
   HEAP32[$__parent$i51$i$i >> 2] = $__nd$0$i$i93$i$i$lcssa252;
   $$0$i7$i99$i$i = $$lcssa254;
   $210 = $__nd$0$i$i93$i$i$lcssa252;
   label = 101;
   break;
  } else if ((label | 0) == 98) {
   HEAP32[$__parent$i51$i$i >> 2] = $__nd$0$i$i93$i$i$lcssa251;
   $$0$i7$i99$i$i = $$lcssa253;
   $210 = $__nd$0$i$i93$i$i$lcssa251;
   label = 101;
   break;
  } else if ((label | 0) == 100) {
   HEAP32[$__parent$i51$i$i >> 2] = $__nd$0$i$i93$i$i$lcssa;
   if (!$__nd$0$i$i93$i$i$lcssa) {
    $$0$i7$i99$i$i = $__parent$i51$i$i;
    $210 = 0;
    label = 101;
    break;
   } else {
    $219 = $191;
    $__r$0$i103$i$i = $__nd$0$i$i93$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 101) {
  __THREW__ = 0;
  $203 = invoke_ii(67, 24) | 0;
  $204 = __THREW__;
  __THREW__ = 0;
  if ($204 & 1) {
   $472 = $191;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$203 + 16 >> 2] = 7;
  HEAP32[$203 + 20 >> 2] = 0;
  HEAP32[$203 >> 2] = 0;
  HEAP32[$203 + 4 >> 2] = 0;
  HEAP32[$203 + 8 >> 2] = $210;
  HEAP32[$$0$i7$i99$i$i >> 2] = $203;
  $212 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$212) $215 = $203; else {
   HEAP32[302] = $212;
   $215 = HEAP32[$$0$i7$i99$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $215);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $219 = HEAP32[303] | 0;
  $__r$0$i103$i$i = $203;
 }
 HEAP32[$__r$0$i103$i$i + 20 >> 2] = 8;
 do if (!$219) {
  HEAP32[$__parent$i59$i$i >> 2] = 1212;
  $$0$i7$i114$i$i = 1212 | 0;
  $238 = 1212 | 0;
  label = 116;
 } else {
  $__nd$0$i$i108$i$i = $219;
  while (1) {
   $222 = HEAP32[$__nd$0$i$i108$i$i + 16 >> 2] | 0;
   if (($222 | 0) > 8) {
    $224 = HEAP32[$__nd$0$i$i108$i$i >> 2] | 0;
    if (!$224) {
     $$lcssa250 = $__nd$0$i$i108$i$i;
     $__nd$0$i$i108$i$i$lcssa248 = $__nd$0$i$i108$i$i;
     label = 109;
     break;
    } else $__nd$0$be$in$i$i109$i$i = $224;
   } else {
    if (($222 | 0) >= 8) {
     $__nd$0$i$i108$i$i$lcssa = $__nd$0$i$i108$i$i;
     label = 115;
     break;
    }
    $227 = $__nd$0$i$i108$i$i + 4 | 0;
    $228 = HEAP32[$227 >> 2] | 0;
    if (!$228) {
     $$lcssa249 = $227;
     $__nd$0$i$i108$i$i$lcssa247 = $__nd$0$i$i108$i$i;
     label = 113;
     break;
    } else $__nd$0$be$in$i$i109$i$i = $228;
   }
   $__nd$0$i$i108$i$i = $__nd$0$be$in$i$i109$i$i;
  }
  if ((label | 0) == 109) {
   HEAP32[$__parent$i59$i$i >> 2] = $__nd$0$i$i108$i$i$lcssa248;
   $$0$i7$i114$i$i = $$lcssa250;
   $238 = $__nd$0$i$i108$i$i$lcssa248;
   label = 116;
   break;
  } else if ((label | 0) == 113) {
   HEAP32[$__parent$i59$i$i >> 2] = $__nd$0$i$i108$i$i$lcssa247;
   $$0$i7$i114$i$i = $$lcssa249;
   $238 = $__nd$0$i$i108$i$i$lcssa247;
   label = 116;
   break;
  } else if ((label | 0) == 115) {
   HEAP32[$__parent$i59$i$i >> 2] = $__nd$0$i$i108$i$i$lcssa;
   if (!$__nd$0$i$i108$i$i$lcssa) {
    $$0$i7$i114$i$i = $__parent$i59$i$i;
    $238 = 0;
    label = 116;
    break;
   } else {
    $247 = $219;
    $__r$0$i118$i$i = $__nd$0$i$i108$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 116) {
  __THREW__ = 0;
  $231 = invoke_ii(67, 24) | 0;
  $232 = __THREW__;
  __THREW__ = 0;
  if ($232 & 1) {
   $472 = $219;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$231 + 16 >> 2] = 8;
  HEAP32[$231 + 20 >> 2] = 0;
  HEAP32[$231 >> 2] = 0;
  HEAP32[$231 + 4 >> 2] = 0;
  HEAP32[$231 + 8 >> 2] = $238;
  HEAP32[$$0$i7$i114$i$i >> 2] = $231;
  $240 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$240) $243 = $231; else {
   HEAP32[302] = $240;
   $243 = HEAP32[$$0$i7$i114$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $243);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $247 = HEAP32[303] | 0;
  $__r$0$i118$i$i = $231;
 }
 HEAP32[$__r$0$i118$i$i + 20 >> 2] = 8;
 do if (!$247) {
  HEAP32[$__parent$i67$i$i >> 2] = 1212;
  $$0$i7$i129$i$i = 1212 | 0;
  $266 = 1212 | 0;
  label = 131;
 } else {
  $__nd$0$i$i123$i$i = $247;
  while (1) {
   $250 = HEAP32[$__nd$0$i$i123$i$i + 16 >> 2] | 0;
   if (($250 | 0) > 9) {
    $252 = HEAP32[$__nd$0$i$i123$i$i >> 2] | 0;
    if (!$252) {
     $$lcssa246 = $__nd$0$i$i123$i$i;
     $__nd$0$i$i123$i$i$lcssa244 = $__nd$0$i$i123$i$i;
     label = 124;
     break;
    } else $__nd$0$be$in$i$i124$i$i = $252;
   } else {
    if (($250 | 0) >= 9) {
     $__nd$0$i$i123$i$i$lcssa = $__nd$0$i$i123$i$i;
     label = 130;
     break;
    }
    $255 = $__nd$0$i$i123$i$i + 4 | 0;
    $256 = HEAP32[$255 >> 2] | 0;
    if (!$256) {
     $$lcssa245 = $255;
     $__nd$0$i$i123$i$i$lcssa243 = $__nd$0$i$i123$i$i;
     label = 128;
     break;
    } else $__nd$0$be$in$i$i124$i$i = $256;
   }
   $__nd$0$i$i123$i$i = $__nd$0$be$in$i$i124$i$i;
  }
  if ((label | 0) == 124) {
   HEAP32[$__parent$i67$i$i >> 2] = $__nd$0$i$i123$i$i$lcssa244;
   $$0$i7$i129$i$i = $$lcssa246;
   $266 = $__nd$0$i$i123$i$i$lcssa244;
   label = 131;
   break;
  } else if ((label | 0) == 128) {
   HEAP32[$__parent$i67$i$i >> 2] = $__nd$0$i$i123$i$i$lcssa243;
   $$0$i7$i129$i$i = $$lcssa245;
   $266 = $__nd$0$i$i123$i$i$lcssa243;
   label = 131;
   break;
  } else if ((label | 0) == 130) {
   HEAP32[$__parent$i67$i$i >> 2] = $__nd$0$i$i123$i$i$lcssa;
   if (!$__nd$0$i$i123$i$i$lcssa) {
    $$0$i7$i129$i$i = $__parent$i67$i$i;
    $266 = 0;
    label = 131;
    break;
   } else {
    $275 = $247;
    $__r$0$i133$i$i = $__nd$0$i$i123$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 131) {
  __THREW__ = 0;
  $259 = invoke_ii(67, 24) | 0;
  $260 = __THREW__;
  __THREW__ = 0;
  if ($260 & 1) {
   $472 = $247;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$259 + 16 >> 2] = 9;
  HEAP32[$259 + 20 >> 2] = 0;
  HEAP32[$259 >> 2] = 0;
  HEAP32[$259 + 4 >> 2] = 0;
  HEAP32[$259 + 8 >> 2] = $266;
  HEAP32[$$0$i7$i129$i$i >> 2] = $259;
  $268 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$268) $271 = $259; else {
   HEAP32[302] = $268;
   $271 = HEAP32[$$0$i7$i129$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $271);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $275 = HEAP32[303] | 0;
  $__r$0$i133$i$i = $259;
 }
 HEAP32[$__r$0$i133$i$i + 20 >> 2] = 8;
 do if (!$275) {
  HEAP32[$__parent$i75$i$i >> 2] = 1212;
  $$0$i7$i144$i$i = 1212 | 0;
  $294 = 1212 | 0;
  label = 146;
 } else {
  $__nd$0$i$i138$i$i = $275;
  while (1) {
   $278 = HEAP32[$__nd$0$i$i138$i$i + 16 >> 2] | 0;
   if (($278 | 0) > 10) {
    $280 = HEAP32[$__nd$0$i$i138$i$i >> 2] | 0;
    if (!$280) {
     $$lcssa242 = $__nd$0$i$i138$i$i;
     $__nd$0$i$i138$i$i$lcssa240 = $__nd$0$i$i138$i$i;
     label = 139;
     break;
    } else $__nd$0$be$in$i$i139$i$i = $280;
   } else {
    if (($278 | 0) >= 10) {
     $__nd$0$i$i138$i$i$lcssa = $__nd$0$i$i138$i$i;
     label = 145;
     break;
    }
    $283 = $__nd$0$i$i138$i$i + 4 | 0;
    $284 = HEAP32[$283 >> 2] | 0;
    if (!$284) {
     $$lcssa241 = $283;
     $__nd$0$i$i138$i$i$lcssa239 = $__nd$0$i$i138$i$i;
     label = 143;
     break;
    } else $__nd$0$be$in$i$i139$i$i = $284;
   }
   $__nd$0$i$i138$i$i = $__nd$0$be$in$i$i139$i$i;
  }
  if ((label | 0) == 139) {
   HEAP32[$__parent$i75$i$i >> 2] = $__nd$0$i$i138$i$i$lcssa240;
   $$0$i7$i144$i$i = $$lcssa242;
   $294 = $__nd$0$i$i138$i$i$lcssa240;
   label = 146;
   break;
  } else if ((label | 0) == 143) {
   HEAP32[$__parent$i75$i$i >> 2] = $__nd$0$i$i138$i$i$lcssa239;
   $$0$i7$i144$i$i = $$lcssa241;
   $294 = $__nd$0$i$i138$i$i$lcssa239;
   label = 146;
   break;
  } else if ((label | 0) == 145) {
   HEAP32[$__parent$i75$i$i >> 2] = $__nd$0$i$i138$i$i$lcssa;
   if (!$__nd$0$i$i138$i$i$lcssa) {
    $$0$i7$i144$i$i = $__parent$i75$i$i;
    $294 = 0;
    label = 146;
    break;
   } else {
    $303 = $275;
    $__r$0$i148$i$i = $__nd$0$i$i138$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 146) {
  __THREW__ = 0;
  $287 = invoke_ii(67, 24) | 0;
  $288 = __THREW__;
  __THREW__ = 0;
  if ($288 & 1) {
   $472 = $275;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$287 + 16 >> 2] = 10;
  HEAP32[$287 + 20 >> 2] = 0;
  HEAP32[$287 >> 2] = 0;
  HEAP32[$287 + 4 >> 2] = 0;
  HEAP32[$287 + 8 >> 2] = $294;
  HEAP32[$$0$i7$i144$i$i >> 2] = $287;
  $296 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$296) $299 = $287; else {
   HEAP32[302] = $296;
   $299 = HEAP32[$$0$i7$i144$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $299);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $303 = HEAP32[303] | 0;
  $__r$0$i148$i$i = $287;
 }
 HEAP32[$__r$0$i148$i$i + 20 >> 2] = 9;
 do if (!$303) {
  HEAP32[$__parent$i83$i$i >> 2] = 1212;
  $$0$i7$i159$i$i = 1212 | 0;
  $322 = 1212 | 0;
  label = 161;
 } else {
  $__nd$0$i$i153$i$i = $303;
  while (1) {
   $306 = HEAP32[$__nd$0$i$i153$i$i + 16 >> 2] | 0;
   if (($306 | 0) > 11) {
    $308 = HEAP32[$__nd$0$i$i153$i$i >> 2] | 0;
    if (!$308) {
     $$lcssa238 = $__nd$0$i$i153$i$i;
     $__nd$0$i$i153$i$i$lcssa236 = $__nd$0$i$i153$i$i;
     label = 154;
     break;
    } else $__nd$0$be$in$i$i154$i$i = $308;
   } else {
    if (($306 | 0) >= 11) {
     $__nd$0$i$i153$i$i$lcssa = $__nd$0$i$i153$i$i;
     label = 160;
     break;
    }
    $311 = $__nd$0$i$i153$i$i + 4 | 0;
    $312 = HEAP32[$311 >> 2] | 0;
    if (!$312) {
     $$lcssa237 = $311;
     $__nd$0$i$i153$i$i$lcssa235 = $__nd$0$i$i153$i$i;
     label = 158;
     break;
    } else $__nd$0$be$in$i$i154$i$i = $312;
   }
   $__nd$0$i$i153$i$i = $__nd$0$be$in$i$i154$i$i;
  }
  if ((label | 0) == 154) {
   HEAP32[$__parent$i83$i$i >> 2] = $__nd$0$i$i153$i$i$lcssa236;
   $$0$i7$i159$i$i = $$lcssa238;
   $322 = $__nd$0$i$i153$i$i$lcssa236;
   label = 161;
   break;
  } else if ((label | 0) == 158) {
   HEAP32[$__parent$i83$i$i >> 2] = $__nd$0$i$i153$i$i$lcssa235;
   $$0$i7$i159$i$i = $$lcssa237;
   $322 = $__nd$0$i$i153$i$i$lcssa235;
   label = 161;
   break;
  } else if ((label | 0) == 160) {
   HEAP32[$__parent$i83$i$i >> 2] = $__nd$0$i$i153$i$i$lcssa;
   if (!$__nd$0$i$i153$i$i$lcssa) {
    $$0$i7$i159$i$i = $__parent$i83$i$i;
    $322 = 0;
    label = 161;
    break;
   } else {
    $331 = $303;
    $__r$0$i163$i$i = $__nd$0$i$i153$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 161) {
  __THREW__ = 0;
  $315 = invoke_ii(67, 24) | 0;
  $316 = __THREW__;
  __THREW__ = 0;
  if ($316 & 1) {
   $472 = $303;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$315 + 16 >> 2] = 11;
  HEAP32[$315 + 20 >> 2] = 0;
  HEAP32[$315 >> 2] = 0;
  HEAP32[$315 + 4 >> 2] = 0;
  HEAP32[$315 + 8 >> 2] = $322;
  HEAP32[$$0$i7$i159$i$i >> 2] = $315;
  $324 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$324) $327 = $315; else {
   HEAP32[302] = $324;
   $327 = HEAP32[$$0$i7$i159$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $327);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $331 = HEAP32[303] | 0;
  $__r$0$i163$i$i = $315;
 }
 HEAP32[$__r$0$i163$i$i + 20 >> 2] = 9;
 do if (!$331) {
  HEAP32[$__parent$i91$i$i1 >> 2] = 1212;
  $$0$i7$i174$i$i = 1212 | 0;
  $350 = 1212 | 0;
  label = 176;
 } else {
  $__nd$0$i$i168$i$i = $331;
  while (1) {
   $334 = HEAP32[$__nd$0$i$i168$i$i + 16 >> 2] | 0;
   if (($334 | 0) > 12) {
    $336 = HEAP32[$__nd$0$i$i168$i$i >> 2] | 0;
    if (!$336) {
     $$lcssa234 = $__nd$0$i$i168$i$i;
     $__nd$0$i$i168$i$i$lcssa232 = $__nd$0$i$i168$i$i;
     label = 169;
     break;
    } else $__nd$0$be$in$i$i169$i$i = $336;
   } else {
    if (($334 | 0) >= 12) {
     $__nd$0$i$i168$i$i$lcssa = $__nd$0$i$i168$i$i;
     label = 175;
     break;
    }
    $339 = $__nd$0$i$i168$i$i + 4 | 0;
    $340 = HEAP32[$339 >> 2] | 0;
    if (!$340) {
     $$lcssa233 = $339;
     $__nd$0$i$i168$i$i$lcssa231 = $__nd$0$i$i168$i$i;
     label = 173;
     break;
    } else $__nd$0$be$in$i$i169$i$i = $340;
   }
   $__nd$0$i$i168$i$i = $__nd$0$be$in$i$i169$i$i;
  }
  if ((label | 0) == 169) {
   HEAP32[$__parent$i91$i$i1 >> 2] = $__nd$0$i$i168$i$i$lcssa232;
   $$0$i7$i174$i$i = $$lcssa234;
   $350 = $__nd$0$i$i168$i$i$lcssa232;
   label = 176;
   break;
  } else if ((label | 0) == 173) {
   HEAP32[$__parent$i91$i$i1 >> 2] = $__nd$0$i$i168$i$i$lcssa231;
   $$0$i7$i174$i$i = $$lcssa233;
   $350 = $__nd$0$i$i168$i$i$lcssa231;
   label = 176;
   break;
  } else if ((label | 0) == 175) {
   HEAP32[$__parent$i91$i$i1 >> 2] = $__nd$0$i$i168$i$i$lcssa;
   if (!$__nd$0$i$i168$i$i$lcssa) {
    $$0$i7$i174$i$i = $__parent$i91$i$i1;
    $350 = 0;
    label = 176;
    break;
   } else {
    $359 = $331;
    $__r$0$i178$i$i = $__nd$0$i$i168$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 176) {
  __THREW__ = 0;
  $343 = invoke_ii(67, 24) | 0;
  $344 = __THREW__;
  __THREW__ = 0;
  if ($344 & 1) {
   $472 = $331;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$343 + 16 >> 2] = 12;
  HEAP32[$343 + 20 >> 2] = 0;
  HEAP32[$343 >> 2] = 0;
  HEAP32[$343 + 4 >> 2] = 0;
  HEAP32[$343 + 8 >> 2] = $350;
  HEAP32[$$0$i7$i174$i$i >> 2] = $343;
  $352 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$352) $355 = $343; else {
   HEAP32[302] = $352;
   $355 = HEAP32[$$0$i7$i174$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $355);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $359 = HEAP32[303] | 0;
  $__r$0$i178$i$i = $343;
 }
 HEAP32[$__r$0$i178$i$i + 20 >> 2] = 10;
 do if (!$359) {
  HEAP32[$__parent$i99$i$i >> 2] = 1212;
  $$0$i7$i189$i$i = 1212 | 0;
  $378 = 1212 | 0;
  label = 191;
 } else {
  $__nd$0$i$i183$i$i = $359;
  while (1) {
   $362 = HEAP32[$__nd$0$i$i183$i$i + 16 >> 2] | 0;
   if (($362 | 0) > 13) {
    $364 = HEAP32[$__nd$0$i$i183$i$i >> 2] | 0;
    if (!$364) {
     $$lcssa230 = $__nd$0$i$i183$i$i;
     $__nd$0$i$i183$i$i$lcssa228 = $__nd$0$i$i183$i$i;
     label = 184;
     break;
    } else $__nd$0$be$in$i$i184$i$i = $364;
   } else {
    if (($362 | 0) >= 13) {
     $__nd$0$i$i183$i$i$lcssa = $__nd$0$i$i183$i$i;
     label = 190;
     break;
    }
    $367 = $__nd$0$i$i183$i$i + 4 | 0;
    $368 = HEAP32[$367 >> 2] | 0;
    if (!$368) {
     $$lcssa229 = $367;
     $__nd$0$i$i183$i$i$lcssa227 = $__nd$0$i$i183$i$i;
     label = 188;
     break;
    } else $__nd$0$be$in$i$i184$i$i = $368;
   }
   $__nd$0$i$i183$i$i = $__nd$0$be$in$i$i184$i$i;
  }
  if ((label | 0) == 184) {
   HEAP32[$__parent$i99$i$i >> 2] = $__nd$0$i$i183$i$i$lcssa228;
   $$0$i7$i189$i$i = $$lcssa230;
   $378 = $__nd$0$i$i183$i$i$lcssa228;
   label = 191;
   break;
  } else if ((label | 0) == 188) {
   HEAP32[$__parent$i99$i$i >> 2] = $__nd$0$i$i183$i$i$lcssa227;
   $$0$i7$i189$i$i = $$lcssa229;
   $378 = $__nd$0$i$i183$i$i$lcssa227;
   label = 191;
   break;
  } else if ((label | 0) == 190) {
   HEAP32[$__parent$i99$i$i >> 2] = $__nd$0$i$i183$i$i$lcssa;
   if (!$__nd$0$i$i183$i$i$lcssa) {
    $$0$i7$i189$i$i = $__parent$i99$i$i;
    $378 = 0;
    label = 191;
    break;
   } else {
    $387 = $359;
    $__r$0$i193$i$i = $__nd$0$i$i183$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 191) {
  __THREW__ = 0;
  $371 = invoke_ii(67, 24) | 0;
  $372 = __THREW__;
  __THREW__ = 0;
  if ($372 & 1) {
   $472 = $359;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$371 + 16 >> 2] = 13;
  HEAP32[$371 + 20 >> 2] = 0;
  HEAP32[$371 >> 2] = 0;
  HEAP32[$371 + 4 >> 2] = 0;
  HEAP32[$371 + 8 >> 2] = $378;
  HEAP32[$$0$i7$i189$i$i >> 2] = $371;
  $380 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$380) $383 = $371; else {
   HEAP32[302] = $380;
   $383 = HEAP32[$$0$i7$i189$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $383);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $387 = HEAP32[303] | 0;
  $__r$0$i193$i$i = $371;
 }
 HEAP32[$__r$0$i193$i$i + 20 >> 2] = 11;
 do if (!$387) {
  HEAP32[$__parent$i107$i$i >> 2] = 1212;
  $$0$i7$i204$i$i = 1212 | 0;
  $406 = 1212 | 0;
  label = 206;
 } else {
  $__nd$0$i$i198$i$i = $387;
  while (1) {
   $390 = HEAP32[$__nd$0$i$i198$i$i + 16 >> 2] | 0;
   if (($390 | 0) > 14) {
    $392 = HEAP32[$__nd$0$i$i198$i$i >> 2] | 0;
    if (!$392) {
     $$lcssa226 = $__nd$0$i$i198$i$i;
     $__nd$0$i$i198$i$i$lcssa224 = $__nd$0$i$i198$i$i;
     label = 199;
     break;
    } else $__nd$0$be$in$i$i199$i$i = $392;
   } else {
    if (($390 | 0) >= 14) {
     $__nd$0$i$i198$i$i$lcssa = $__nd$0$i$i198$i$i;
     label = 205;
     break;
    }
    $395 = $__nd$0$i$i198$i$i + 4 | 0;
    $396 = HEAP32[$395 >> 2] | 0;
    if (!$396) {
     $$lcssa225 = $395;
     $__nd$0$i$i198$i$i$lcssa223 = $__nd$0$i$i198$i$i;
     label = 203;
     break;
    } else $__nd$0$be$in$i$i199$i$i = $396;
   }
   $__nd$0$i$i198$i$i = $__nd$0$be$in$i$i199$i$i;
  }
  if ((label | 0) == 199) {
   HEAP32[$__parent$i107$i$i >> 2] = $__nd$0$i$i198$i$i$lcssa224;
   $$0$i7$i204$i$i = $$lcssa226;
   $406 = $__nd$0$i$i198$i$i$lcssa224;
   label = 206;
   break;
  } else if ((label | 0) == 203) {
   HEAP32[$__parent$i107$i$i >> 2] = $__nd$0$i$i198$i$i$lcssa223;
   $$0$i7$i204$i$i = $$lcssa225;
   $406 = $__nd$0$i$i198$i$i$lcssa223;
   label = 206;
   break;
  } else if ((label | 0) == 205) {
   HEAP32[$__parent$i107$i$i >> 2] = $__nd$0$i$i198$i$i$lcssa;
   if (!$__nd$0$i$i198$i$i$lcssa) {
    $$0$i7$i204$i$i = $__parent$i107$i$i;
    $406 = 0;
    label = 206;
    break;
   } else {
    $415 = $387;
    $__r$0$i208$i$i = $__nd$0$i$i198$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 206) {
  __THREW__ = 0;
  $399 = invoke_ii(67, 24) | 0;
  $400 = __THREW__;
  __THREW__ = 0;
  if ($400 & 1) {
   $472 = $387;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$399 + 16 >> 2] = 14;
  HEAP32[$399 + 20 >> 2] = 0;
  HEAP32[$399 >> 2] = 0;
  HEAP32[$399 + 4 >> 2] = 0;
  HEAP32[$399 + 8 >> 2] = $406;
  HEAP32[$$0$i7$i204$i$i >> 2] = $399;
  $408 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$408) $411 = $399; else {
   HEAP32[302] = $408;
   $411 = HEAP32[$$0$i7$i204$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $411);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $415 = HEAP32[303] | 0;
  $__r$0$i208$i$i = $399;
 }
 HEAP32[$__r$0$i208$i$i + 20 >> 2] = 12;
 do if (!$415) {
  HEAP32[$__parent$i115$i$i >> 2] = 1212;
  $$0$i7$i219$i$i = 1212 | 0;
  $434 = 1212 | 0;
  label = 221;
 } else {
  $__nd$0$i$i213$i$i = $415;
  while (1) {
   $418 = HEAP32[$__nd$0$i$i213$i$i + 16 >> 2] | 0;
   if (($418 | 0) > 15) {
    $420 = HEAP32[$__nd$0$i$i213$i$i >> 2] | 0;
    if (!$420) {
     $$lcssa222 = $__nd$0$i$i213$i$i;
     $__nd$0$i$i213$i$i$lcssa220 = $__nd$0$i$i213$i$i;
     label = 214;
     break;
    } else $__nd$0$be$in$i$i214$i$i = $420;
   } else {
    if (($418 | 0) >= 15) {
     $__nd$0$i$i213$i$i$lcssa = $__nd$0$i$i213$i$i;
     label = 220;
     break;
    }
    $423 = $__nd$0$i$i213$i$i + 4 | 0;
    $424 = HEAP32[$423 >> 2] | 0;
    if (!$424) {
     $$lcssa221 = $423;
     $__nd$0$i$i213$i$i$lcssa219 = $__nd$0$i$i213$i$i;
     label = 218;
     break;
    } else $__nd$0$be$in$i$i214$i$i = $424;
   }
   $__nd$0$i$i213$i$i = $__nd$0$be$in$i$i214$i$i;
  }
  if ((label | 0) == 214) {
   HEAP32[$__parent$i115$i$i >> 2] = $__nd$0$i$i213$i$i$lcssa220;
   $$0$i7$i219$i$i = $$lcssa222;
   $434 = $__nd$0$i$i213$i$i$lcssa220;
   label = 221;
   break;
  } else if ((label | 0) == 218) {
   HEAP32[$__parent$i115$i$i >> 2] = $__nd$0$i$i213$i$i$lcssa219;
   $$0$i7$i219$i$i = $$lcssa221;
   $434 = $__nd$0$i$i213$i$i$lcssa219;
   label = 221;
   break;
  } else if ((label | 0) == 220) {
   HEAP32[$__parent$i115$i$i >> 2] = $__nd$0$i$i213$i$i$lcssa;
   if (!$__nd$0$i$i213$i$i$lcssa) {
    $$0$i7$i219$i$i = $__parent$i115$i$i;
    $434 = 0;
    label = 221;
    break;
   } else {
    $443 = $415;
    $__r$0$i223$i$i = $__nd$0$i$i213$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 221) {
  __THREW__ = 0;
  $427 = invoke_ii(67, 24) | 0;
  $428 = __THREW__;
  __THREW__ = 0;
  if ($428 & 1) {
   $472 = $415;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$427 + 16 >> 2] = 15;
  HEAP32[$427 + 20 >> 2] = 0;
  HEAP32[$427 >> 2] = 0;
  HEAP32[$427 + 4 >> 2] = 0;
  HEAP32[$427 + 8 >> 2] = $434;
  HEAP32[$$0$i7$i219$i$i >> 2] = $427;
  $436 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$436) $439 = $427; else {
   HEAP32[302] = $436;
   $439 = HEAP32[$$0$i7$i219$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $439);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $443 = HEAP32[303] | 0;
  $__r$0$i223$i$i = $427;
 }
 HEAP32[$__r$0$i223$i$i + 20 >> 2] = 13;
 do if (!$443) {
  HEAP32[$__parent$i123$i$i >> 2] = 1212;
  $$0$i7$i234$i$i = 1212 | 0;
  $462 = 1212 | 0;
  label = 236;
 } else {
  $__nd$0$i$i228$i$i = $443;
  while (1) {
   $446 = HEAP32[$__nd$0$i$i228$i$i + 16 >> 2] | 0;
   if (($446 | 0) > 16) {
    $448 = HEAP32[$__nd$0$i$i228$i$i >> 2] | 0;
    if (!$448) {
     $$lcssa218 = $__nd$0$i$i228$i$i;
     $__nd$0$i$i228$i$i$lcssa217 = $__nd$0$i$i228$i$i;
     label = 229;
     break;
    } else $__nd$0$be$in$i$i229$i$i = $448;
   } else {
    if (($446 | 0) >= 16) {
     $__nd$0$i$i228$i$i$lcssa = $__nd$0$i$i228$i$i;
     label = 235;
     break;
    }
    $451 = $__nd$0$i$i228$i$i + 4 | 0;
    $452 = HEAP32[$451 >> 2] | 0;
    if (!$452) {
     $$lcssa = $451;
     $__nd$0$i$i228$i$i$lcssa216 = $__nd$0$i$i228$i$i;
     label = 233;
     break;
    } else $__nd$0$be$in$i$i229$i$i = $452;
   }
   $__nd$0$i$i228$i$i = $__nd$0$be$in$i$i229$i$i;
  }
  if ((label | 0) == 229) {
   HEAP32[$__parent$i123$i$i >> 2] = $__nd$0$i$i228$i$i$lcssa217;
   $$0$i7$i234$i$i = $$lcssa218;
   $462 = $__nd$0$i$i228$i$i$lcssa217;
   label = 236;
   break;
  } else if ((label | 0) == 233) {
   HEAP32[$__parent$i123$i$i >> 2] = $__nd$0$i$i228$i$i$lcssa216;
   $$0$i7$i234$i$i = $$lcssa;
   $462 = $__nd$0$i$i228$i$i$lcssa216;
   label = 236;
   break;
  } else if ((label | 0) == 235) {
   HEAP32[$__parent$i123$i$i >> 2] = $__nd$0$i$i228$i$i$lcssa;
   if (!$__nd$0$i$i228$i$i$lcssa) {
    $$0$i7$i234$i$i = $__parent$i123$i$i;
    $462 = 0;
    label = 236;
    break;
   } else {
    $__r$0$i238$i$i = $__nd$0$i$i228$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 236) {
  __THREW__ = 0;
  $455 = invoke_ii(67, 24) | 0;
  $456 = __THREW__;
  __THREW__ = 0;
  if ($456 & 1) {
   $472 = $443;
   $470 = ___cxa_find_matching_catch() | 0;
   $471 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1208, $472);
   ___resumeException($470 | 0);
  }
  HEAP32[$455 + 16 >> 2] = 16;
  HEAP32[$455 + 20 >> 2] = 0;
  HEAP32[$455 >> 2] = 0;
  HEAP32[$455 + 4 >> 2] = 0;
  HEAP32[$455 + 8 >> 2] = $462;
  HEAP32[$$0$i7$i234$i$i >> 2] = $455;
  $464 = HEAP32[HEAP32[302] >> 2] | 0;
  if (!$464) $467 = $455; else {
   HEAP32[302] = $464;
   $467 = HEAP32[$$0$i7$i234$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[303] | 0, $467);
  HEAP32[304] = (HEAP32[304] | 0) + 1;
  $__r$0$i238$i$i = $455;
 }
 HEAP32[$__r$0$i238$i$i + 20 >> 2] = 14;
 ___cxa_atexit(179, 1208, ___dso_handle | 0) | 0;
 HEAP32[307] = 0;
 HEAP32[308] = 0;
 HEAP32[306] = 1228;
 __THREW__ = 0;
 invoke_viii(3, $__parent$i91$i$i1 | 0, 41416, 1);
 $474 = __THREW__;
 __THREW__ = 0;
 do if (!($474 & 1)) {
  $476 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1224, $__parent$i99$i$i, $__parent$i91$i$i1) | 0;
  $477 = HEAP32[$476 >> 2] | 0;
  if (!$477) {
   __THREW__ = 0;
   $479 = invoke_ii(67, 32) | 0;
   $480 = __THREW__;
   __THREW__ = 0;
   if ($480 & 1) {
    $559 = ___cxa_find_matching_catch() | 0;
    $560 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i91$i$i1);
    $$0$i$i = $560;
    $$01$i$i = $559;
    $567 = HEAP32[307] | 0;
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1224, $567);
    ___resumeException($$01$i$i | 0);
   }
   $482 = $479 + 16 | 0;
   HEAP32[$482 + 0 >> 2] = HEAP32[$__parent$i91$i$i1 + 0 >> 2];
   HEAP32[$482 + 4 >> 2] = HEAP32[$__parent$i91$i$i1 + 4 >> 2];
   HEAP32[$482 + 8 >> 2] = HEAP32[$__parent$i91$i$i1 + 8 >> 2];
   HEAP32[$__parent$i91$i$i1 + 0 >> 2] = 0;
   HEAP32[$__parent$i91$i$i1 + 4 >> 2] = 0;
   HEAP32[$__parent$i91$i$i1 + 8 >> 2] = 0;
   HEAP32[$479 + 28 >> 2] = 0;
   $484 = HEAP32[$__parent$i99$i$i >> 2] | 0;
   HEAP32[$479 >> 2] = 0;
   HEAP32[$479 + 4 >> 2] = 0;
   HEAP32[$479 + 8 >> 2] = $484;
   HEAP32[$476 >> 2] = $479;
   $488 = HEAP32[HEAP32[306] >> 2] | 0;
   if (!$488) $491 = $479; else {
    HEAP32[306] = $488;
    $491 = HEAP32[$476 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[307] | 0, $491);
   HEAP32[308] = (HEAP32[308] | 0) + 1;
   $__r$0$i$i$i = $479;
  } else $__r$0$i$i$i = $477;
  HEAP32[$__r$0$i$i$i + 28 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i91$i$i1);
  __THREW__ = 0;
  invoke_viii(3, $__parent$i83$i$i | 0, 41408, 1);
  $495 = __THREW__;
  __THREW__ = 0;
  if (!($495 & 1)) {
   $497 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1224, $__parent$i107$i$i, $__parent$i83$i$i) | 0;
   $498 = HEAP32[$497 >> 2] | 0;
   if (!$498) {
    __THREW__ = 0;
    $500 = invoke_ii(67, 32) | 0;
    $501 = __THREW__;
    __THREW__ = 0;
    if ($501 & 1) {
     $561 = ___cxa_find_matching_catch() | 0;
     $562 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i83$i$i);
     $$0$i$i = $562;
     $$01$i$i = $561;
     $567 = HEAP32[307] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1224, $567);
     ___resumeException($$01$i$i | 0);
    }
    $503 = $500 + 16 | 0;
    HEAP32[$503 + 0 >> 2] = HEAP32[$__parent$i83$i$i + 0 >> 2];
    HEAP32[$503 + 4 >> 2] = HEAP32[$__parent$i83$i$i + 4 >> 2];
    HEAP32[$503 + 8 >> 2] = HEAP32[$__parent$i83$i$i + 8 >> 2];
    HEAP32[$__parent$i83$i$i + 0 >> 2] = 0;
    HEAP32[$__parent$i83$i$i + 4 >> 2] = 0;
    HEAP32[$__parent$i83$i$i + 8 >> 2] = 0;
    HEAP32[$500 + 28 >> 2] = 0;
    $505 = HEAP32[$__parent$i107$i$i >> 2] | 0;
    HEAP32[$500 >> 2] = 0;
    HEAP32[$500 + 4 >> 2] = 0;
    HEAP32[$500 + 8 >> 2] = $505;
    HEAP32[$497 >> 2] = $500;
    $509 = HEAP32[HEAP32[306] >> 2] | 0;
    if (!$509) $512 = $500; else {
     HEAP32[306] = $509;
     $512 = HEAP32[$497 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[307] | 0, $512);
    HEAP32[308] = (HEAP32[308] | 0) + 1;
    $__r$0$i6$i$i = $500;
   } else $__r$0$i6$i$i = $498;
   HEAP32[$__r$0$i6$i$i + 28 >> 2] = 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i83$i$i);
   __THREW__ = 0;
   invoke_viii(3, $__parent$i75$i$i | 0, 41400, 1);
   $516 = __THREW__;
   __THREW__ = 0;
   if ($516 & 1) break;
   $518 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1224, $__parent$i115$i$i, $__parent$i75$i$i) | 0;
   $519 = HEAP32[$518 >> 2] | 0;
   if (!$519) {
    __THREW__ = 0;
    $521 = invoke_ii(67, 32) | 0;
    $522 = __THREW__;
    __THREW__ = 0;
    if ($522 & 1) {
     $563 = ___cxa_find_matching_catch() | 0;
     $564 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i75$i$i);
     $$0$i$i = $564;
     $$01$i$i = $563;
     $567 = HEAP32[307] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1224, $567);
     ___resumeException($$01$i$i | 0);
    }
    $524 = $521 + 16 | 0;
    HEAP32[$524 + 0 >> 2] = HEAP32[$__parent$i75$i$i + 0 >> 2];
    HEAP32[$524 + 4 >> 2] = HEAP32[$__parent$i75$i$i + 4 >> 2];
    HEAP32[$524 + 8 >> 2] = HEAP32[$__parent$i75$i$i + 8 >> 2];
    HEAP32[$__parent$i75$i$i + 0 >> 2] = 0;
    HEAP32[$__parent$i75$i$i + 4 >> 2] = 0;
    HEAP32[$__parent$i75$i$i + 8 >> 2] = 0;
    HEAP32[$521 + 28 >> 2] = 0;
    $526 = HEAP32[$__parent$i115$i$i >> 2] | 0;
    HEAP32[$521 >> 2] = 0;
    HEAP32[$521 + 4 >> 2] = 0;
    HEAP32[$521 + 8 >> 2] = $526;
    HEAP32[$518 >> 2] = $521;
    $530 = HEAP32[HEAP32[306] >> 2] | 0;
    if (!$530) $533 = $521; else {
     HEAP32[306] = $530;
     $533 = HEAP32[$518 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[307] | 0, $533);
    HEAP32[308] = (HEAP32[308] | 0) + 1;
    $__r$0$i14$i$i = $521;
   } else $__r$0$i14$i$i = $519;
   HEAP32[$__r$0$i14$i$i + 28 >> 2] = 2;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i75$i$i);
   __THREW__ = 0;
   invoke_viii(3, $__parent$i67$i$i | 0, 42248, 1);
   $537 = __THREW__;
   __THREW__ = 0;
   if ($537 & 1) break;
   $539 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1224, $__parent$i123$i$i, $__parent$i67$i$i) | 0;
   $540 = HEAP32[$539 >> 2] | 0;
   if (!$540) {
    __THREW__ = 0;
    $542 = invoke_ii(67, 32) | 0;
    $543 = __THREW__;
    __THREW__ = 0;
    if ($543 & 1) {
     $565 = ___cxa_find_matching_catch() | 0;
     $566 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i67$i$i);
     $$0$i$i = $566;
     $$01$i$i = $565;
     $567 = HEAP32[307] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1224, $567);
     ___resumeException($$01$i$i | 0);
    }
    $545 = $542 + 16 | 0;
    HEAP32[$545 + 0 >> 2] = HEAP32[$__parent$i67$i$i + 0 >> 2];
    HEAP32[$545 + 4 >> 2] = HEAP32[$__parent$i67$i$i + 4 >> 2];
    HEAP32[$545 + 8 >> 2] = HEAP32[$__parent$i67$i$i + 8 >> 2];
    HEAP32[$__parent$i67$i$i + 0 >> 2] = 0;
    HEAP32[$__parent$i67$i$i + 4 >> 2] = 0;
    HEAP32[$__parent$i67$i$i + 8 >> 2] = 0;
    HEAP32[$542 + 28 >> 2] = 0;
    $547 = HEAP32[$__parent$i123$i$i >> 2] | 0;
    HEAP32[$542 >> 2] = 0;
    HEAP32[$542 + 4 >> 2] = 0;
    HEAP32[$542 + 8 >> 2] = $547;
    HEAP32[$539 >> 2] = $542;
    $551 = HEAP32[HEAP32[306] >> 2] | 0;
    if (!$551) $554 = $542; else {
     HEAP32[306] = $551;
     $554 = HEAP32[$539 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[307] | 0, $554);
    HEAP32[308] = (HEAP32[308] | 0) + 1;
    $__r$0$i22$i$i = $542;
   } else $__r$0$i22$i$i = $540;
   HEAP32[$__r$0$i22$i$i + 28 >> 2] = 3;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i67$i$i);
   ___cxa_atexit(180, 1224, ___dso_handle | 0) | 0;
   HEAP32[311] = 0;
   HEAP32[312] = 0;
   HEAP32[310] = 1244;
   __THREW__ = 0;
   invoke_viii(3, $0 | 0, 41672, 1);
   $569 = __THREW__;
   __THREW__ = 0;
   do if (!($569 & 1)) {
    $571 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i$i$i5, $0) | 0;
    $572 = HEAP32[$571 >> 2] | 0;
    if (!$572) {
     __THREW__ = 0;
     $574 = invoke_ii(67, 32) | 0;
     $575 = __THREW__;
     __THREW__ = 0;
     if ($575 & 1) {
      $927 = ___cxa_find_matching_catch() | 0;
      $928 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $$0$i$i26 = $928;
      $$01$i$i25 = $927;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $577 = $574 + 16 | 0;
     HEAP32[$577 + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     HEAP32[$577 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
     HEAP32[$577 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
     HEAP32[$0 + 0 >> 2] = 0;
     HEAP32[$0 + 4 >> 2] = 0;
     HEAP32[$0 + 8 >> 2] = 0;
     HEAP32[$574 + 28 >> 2] = 0;
     $579 = HEAP32[$__parent$i$i$i5 >> 2] | 0;
     HEAP32[$574 >> 2] = 0;
     HEAP32[$574 + 4 >> 2] = 0;
     HEAP32[$574 + 8 >> 2] = $579;
     HEAP32[$571 >> 2] = $574;
     $583 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$583) $586 = $574; else {
      HEAP32[310] = $583;
      $586 = HEAP32[$571 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $586);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i$i$i9 = $574;
    } else $__r$0$i$i$i9 = $572;
    HEAP32[$__r$0$i$i$i9 + 28 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    invoke_viii(3, $1 | 0, 41680, 1);
    $590 = __THREW__;
    __THREW__ = 0;
    if ($590 & 1) break;
    $592 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i3$i$i4, $1) | 0;
    $593 = HEAP32[$592 >> 2] | 0;
    if (!$593) {
     __THREW__ = 0;
     $595 = invoke_ii(67, 32) | 0;
     $596 = __THREW__;
     __THREW__ = 0;
     if ($596 & 1) {
      $929 = ___cxa_find_matching_catch() | 0;
      $930 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $$0$i$i26 = $930;
      $$01$i$i25 = $929;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $598 = $595 + 16 | 0;
     HEAP32[$598 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
     HEAP32[$598 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
     HEAP32[$598 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
     HEAP32[$1 + 0 >> 2] = 0;
     HEAP32[$1 + 4 >> 2] = 0;
     HEAP32[$1 + 8 >> 2] = 0;
     HEAP32[$595 + 28 >> 2] = 0;
     $600 = HEAP32[$__parent$i3$i$i4 >> 2] | 0;
     HEAP32[$595 >> 2] = 0;
     HEAP32[$595 + 4 >> 2] = 0;
     HEAP32[$595 + 8 >> 2] = $600;
     HEAP32[$592 >> 2] = $595;
     $604 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$604) $607 = $595; else {
      HEAP32[310] = $604;
      $607 = HEAP32[$592 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $607);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i6$i$i13 = $595;
    } else $__r$0$i6$i$i13 = $593;
    HEAP32[$__r$0$i6$i$i13 + 28 >> 2] = 1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    __THREW__ = 0;
    invoke_viii(3, $2 | 0, 41400, 1);
    $611 = __THREW__;
    __THREW__ = 0;
    if ($611 & 1) break;
    $613 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i11$i$i3, $2) | 0;
    $614 = HEAP32[$613 >> 2] | 0;
    if (!$614) {
     __THREW__ = 0;
     $616 = invoke_ii(67, 32) | 0;
     $617 = __THREW__;
     __THREW__ = 0;
     if ($617 & 1) {
      $931 = ___cxa_find_matching_catch() | 0;
      $932 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
      $$0$i$i26 = $932;
      $$01$i$i25 = $931;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $619 = $616 + 16 | 0;
     HEAP32[$619 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
     HEAP32[$619 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
     HEAP32[$619 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
     HEAP32[$2 + 0 >> 2] = 0;
     HEAP32[$2 + 4 >> 2] = 0;
     HEAP32[$2 + 8 >> 2] = 0;
     HEAP32[$616 + 28 >> 2] = 0;
     $621 = HEAP32[$__parent$i11$i$i3 >> 2] | 0;
     HEAP32[$616 >> 2] = 0;
     HEAP32[$616 + 4 >> 2] = 0;
     HEAP32[$616 + 8 >> 2] = $621;
     HEAP32[$613 >> 2] = $616;
     $625 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$625) $628 = $616; else {
      HEAP32[310] = $625;
      $628 = HEAP32[$613 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $628);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i14$i$i17 = $616;
    } else $__r$0$i14$i$i17 = $614;
    HEAP32[$__r$0$i14$i$i17 + 28 >> 2] = 2;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    __THREW__ = 0;
    invoke_viii(3, $3 | 0, 42248, 1);
    $632 = __THREW__;
    __THREW__ = 0;
    if ($632 & 1) break;
    $634 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i19$i$i2, $3) | 0;
    $635 = HEAP32[$634 >> 2] | 0;
    if (!$635) {
     __THREW__ = 0;
     $637 = invoke_ii(67, 32) | 0;
     $638 = __THREW__;
     __THREW__ = 0;
     if ($638 & 1) {
      $933 = ___cxa_find_matching_catch() | 0;
      $934 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $$0$i$i26 = $934;
      $$01$i$i25 = $933;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $640 = $637 + 16 | 0;
     HEAP32[$640 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
     HEAP32[$640 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$640 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
     HEAP32[$3 + 0 >> 2] = 0;
     HEAP32[$3 + 4 >> 2] = 0;
     HEAP32[$3 + 8 >> 2] = 0;
     HEAP32[$637 + 28 >> 2] = 0;
     $642 = HEAP32[$__parent$i19$i$i2 >> 2] | 0;
     HEAP32[$637 >> 2] = 0;
     HEAP32[$637 + 4 >> 2] = 0;
     HEAP32[$637 + 8 >> 2] = $642;
     HEAP32[$634 >> 2] = $637;
     $646 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$646) $649 = $637; else {
      HEAP32[310] = $646;
      $649 = HEAP32[$634 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $649);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i22$i$i21 = $637;
    } else $__r$0$i22$i$i21 = $635;
    HEAP32[$__r$0$i22$i$i21 + 28 >> 2] = 3;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __THREW__ = 0;
    invoke_viii(3, $4 | 0, 41688, 2);
    $653 = __THREW__;
    __THREW__ = 0;
    if ($653 & 1) break;
    $655 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i27$i$i, $4) | 0;
    $656 = HEAP32[$655 >> 2] | 0;
    if (!$656) {
     __THREW__ = 0;
     $658 = invoke_ii(67, 32) | 0;
     $659 = __THREW__;
     __THREW__ = 0;
     if ($659 & 1) {
      $935 = ___cxa_find_matching_catch() | 0;
      $936 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $$0$i$i26 = $936;
      $$01$i$i25 = $935;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $661 = $658 + 16 | 0;
     HEAP32[$661 + 0 >> 2] = HEAP32[$4 + 0 >> 2];
     HEAP32[$661 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
     HEAP32[$661 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
     HEAP32[$4 + 0 >> 2] = 0;
     HEAP32[$4 + 4 >> 2] = 0;
     HEAP32[$4 + 8 >> 2] = 0;
     HEAP32[$658 + 28 >> 2] = 0;
     $663 = HEAP32[$__parent$i27$i$i >> 2] | 0;
     HEAP32[$658 >> 2] = 0;
     HEAP32[$658 + 4 >> 2] = 0;
     HEAP32[$658 + 8 >> 2] = $663;
     HEAP32[$655 >> 2] = $658;
     $667 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$667) $670 = $658; else {
      HEAP32[310] = $667;
      $670 = HEAP32[$655 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $670);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i30$i$i = $658;
    } else $__r$0$i30$i$i = $656;
    HEAP32[$__r$0$i30$i$i + 28 >> 2] = 4;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    __THREW__ = 0;
    invoke_viii(3, $5 | 0, 41696, 2);
    $674 = __THREW__;
    __THREW__ = 0;
    if ($674 & 1) break;
    $676 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i35$i$i, $5) | 0;
    $677 = HEAP32[$676 >> 2] | 0;
    if (!$677) {
     __THREW__ = 0;
     $679 = invoke_ii(67, 32) | 0;
     $680 = __THREW__;
     __THREW__ = 0;
     if ($680 & 1) {
      $937 = ___cxa_find_matching_catch() | 0;
      $938 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      $$0$i$i26 = $938;
      $$01$i$i25 = $937;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $682 = $679 + 16 | 0;
     HEAP32[$682 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     HEAP32[$682 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$682 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     HEAP32[$5 + 0 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     HEAP32[$679 + 28 >> 2] = 0;
     $684 = HEAP32[$__parent$i35$i$i >> 2] | 0;
     HEAP32[$679 >> 2] = 0;
     HEAP32[$679 + 4 >> 2] = 0;
     HEAP32[$679 + 8 >> 2] = $684;
     HEAP32[$676 >> 2] = $679;
     $688 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$688) $691 = $679; else {
      HEAP32[310] = $688;
      $691 = HEAP32[$676 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $691);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i38$i$i = $679;
    } else $__r$0$i38$i$i = $677;
    HEAP32[$__r$0$i38$i$i + 28 >> 2] = 5;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    __THREW__ = 0;
    invoke_viii(3, $6 | 0, 39e3, 1);
    $695 = __THREW__;
    __THREW__ = 0;
    if ($695 & 1) break;
    $697 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i43$i$i, $6) | 0;
    $698 = HEAP32[$697 >> 2] | 0;
    if (!$698) {
     __THREW__ = 0;
     $700 = invoke_ii(67, 32) | 0;
     $701 = __THREW__;
     __THREW__ = 0;
     if ($701 & 1) {
      $939 = ___cxa_find_matching_catch() | 0;
      $940 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
      $$0$i$i26 = $940;
      $$01$i$i25 = $939;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $703 = $700 + 16 | 0;
     HEAP32[$703 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
     HEAP32[$703 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$703 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     HEAP32[$6 + 0 >> 2] = 0;
     HEAP32[$6 + 4 >> 2] = 0;
     HEAP32[$6 + 8 >> 2] = 0;
     HEAP32[$700 + 28 >> 2] = 0;
     $705 = HEAP32[$__parent$i43$i$i >> 2] | 0;
     HEAP32[$700 >> 2] = 0;
     HEAP32[$700 + 4 >> 2] = 0;
     HEAP32[$700 + 8 >> 2] = $705;
     HEAP32[$697 >> 2] = $700;
     $709 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$709) $712 = $700; else {
      HEAP32[310] = $709;
      $712 = HEAP32[$697 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $712);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i46$i$i = $700;
    } else $__r$0$i46$i$i = $698;
    HEAP32[$__r$0$i46$i$i + 28 >> 2] = 6;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    __THREW__ = 0;
    invoke_viii(3, $7 | 0, 41704, 2);
    $716 = __THREW__;
    __THREW__ = 0;
    if ($716 & 1) break;
    $718 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i51$i$i, $7) | 0;
    $719 = HEAP32[$718 >> 2] | 0;
    if (!$719) {
     __THREW__ = 0;
     $721 = invoke_ii(67, 32) | 0;
     $722 = __THREW__;
     __THREW__ = 0;
     if ($722 & 1) {
      $941 = ___cxa_find_matching_catch() | 0;
      $942 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      $$0$i$i26 = $942;
      $$01$i$i25 = $941;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $724 = $721 + 16 | 0;
     HEAP32[$724 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
     HEAP32[$724 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$724 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     HEAP32[$7 + 0 >> 2] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
     HEAP32[$7 + 8 >> 2] = 0;
     HEAP32[$721 + 28 >> 2] = 0;
     $726 = HEAP32[$__parent$i51$i$i >> 2] | 0;
     HEAP32[$721 >> 2] = 0;
     HEAP32[$721 + 4 >> 2] = 0;
     HEAP32[$721 + 8 >> 2] = $726;
     HEAP32[$718 >> 2] = $721;
     $730 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$730) $733 = $721; else {
      HEAP32[310] = $730;
      $733 = HEAP32[$718 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $733);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i54$i$i = $721;
    } else $__r$0$i54$i$i = $719;
    HEAP32[$__r$0$i54$i$i + 28 >> 2] = 7;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
    __THREW__ = 0;
    invoke_viii(3, $8 | 0, 41712, 1);
    $737 = __THREW__;
    __THREW__ = 0;
    if ($737 & 1) break;
    $739 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i59$i$i, $8) | 0;
    $740 = HEAP32[$739 >> 2] | 0;
    if (!$740) {
     __THREW__ = 0;
     $742 = invoke_ii(67, 32) | 0;
     $743 = __THREW__;
     __THREW__ = 0;
     if ($743 & 1) {
      $943 = ___cxa_find_matching_catch() | 0;
      $944 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      $$0$i$i26 = $944;
      $$01$i$i25 = $943;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $745 = $742 + 16 | 0;
     HEAP32[$745 + 0 >> 2] = HEAP32[$8 + 0 >> 2];
     HEAP32[$745 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$745 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     HEAP32[$8 + 0 >> 2] = 0;
     HEAP32[$8 + 4 >> 2] = 0;
     HEAP32[$8 + 8 >> 2] = 0;
     HEAP32[$742 + 28 >> 2] = 0;
     $747 = HEAP32[$__parent$i59$i$i >> 2] | 0;
     HEAP32[$742 >> 2] = 0;
     HEAP32[$742 + 4 >> 2] = 0;
     HEAP32[$742 + 8 >> 2] = $747;
     HEAP32[$739 >> 2] = $742;
     $751 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$751) $754 = $742; else {
      HEAP32[310] = $751;
      $754 = HEAP32[$739 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $754);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i62$i$i = $742;
    } else $__r$0$i62$i$i = $740;
    HEAP32[$__r$0$i62$i$i + 28 >> 2] = 8;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
    __THREW__ = 0;
    invoke_viii(3, $9 | 0, 41720, 2);
    $758 = __THREW__;
    __THREW__ = 0;
    if ($758 & 1) break;
    $760 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i67$i$i, $9) | 0;
    $761 = HEAP32[$760 >> 2] | 0;
    if (!$761) {
     __THREW__ = 0;
     $763 = invoke_ii(67, 32) | 0;
     $764 = __THREW__;
     __THREW__ = 0;
     if ($764 & 1) {
      $945 = ___cxa_find_matching_catch() | 0;
      $946 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      $$0$i$i26 = $946;
      $$01$i$i25 = $945;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $766 = $763 + 16 | 0;
     HEAP32[$766 + 0 >> 2] = HEAP32[$9 + 0 >> 2];
     HEAP32[$766 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$766 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     HEAP32[$9 + 0 >> 2] = 0;
     HEAP32[$9 + 4 >> 2] = 0;
     HEAP32[$9 + 8 >> 2] = 0;
     HEAP32[$763 + 28 >> 2] = 0;
     $768 = HEAP32[$__parent$i67$i$i >> 2] | 0;
     HEAP32[$763 >> 2] = 0;
     HEAP32[$763 + 4 >> 2] = 0;
     HEAP32[$763 + 8 >> 2] = $768;
     HEAP32[$760 >> 2] = $763;
     $772 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$772) $775 = $763; else {
      HEAP32[310] = $772;
      $775 = HEAP32[$760 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $775);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i70$i$i = $763;
    } else $__r$0$i70$i$i = $761;
    HEAP32[$__r$0$i70$i$i + 28 >> 2] = 9;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    __THREW__ = 0;
    invoke_viii(3, $10 | 0, 41728, 2);
    $779 = __THREW__;
    __THREW__ = 0;
    if ($779 & 1) break;
    $781 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i75$i$i, $10) | 0;
    $782 = HEAP32[$781 >> 2] | 0;
    if (!$782) {
     __THREW__ = 0;
     $784 = invoke_ii(67, 32) | 0;
     $785 = __THREW__;
     __THREW__ = 0;
     if ($785 & 1) {
      $947 = ___cxa_find_matching_catch() | 0;
      $948 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
      $$0$i$i26 = $948;
      $$01$i$i25 = $947;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $787 = $784 + 16 | 0;
     HEAP32[$787 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
     HEAP32[$787 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
     HEAP32[$787 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
     HEAP32[$10 + 0 >> 2] = 0;
     HEAP32[$10 + 4 >> 2] = 0;
     HEAP32[$10 + 8 >> 2] = 0;
     HEAP32[$784 + 28 >> 2] = 0;
     $789 = HEAP32[$__parent$i75$i$i >> 2] | 0;
     HEAP32[$784 >> 2] = 0;
     HEAP32[$784 + 4 >> 2] = 0;
     HEAP32[$784 + 8 >> 2] = $789;
     HEAP32[$781 >> 2] = $784;
     $793 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$793) $796 = $784; else {
      HEAP32[310] = $793;
      $796 = HEAP32[$781 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $796);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i78$i$i = $784;
    } else $__r$0$i78$i$i = $782;
    HEAP32[$__r$0$i78$i$i + 28 >> 2] = 10;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
    __THREW__ = 0;
    invoke_viii(3, $11 | 0, 41736, 2);
    $800 = __THREW__;
    __THREW__ = 0;
    if ($800 & 1) break;
    $802 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i83$i$i, $11) | 0;
    $803 = HEAP32[$802 >> 2] | 0;
    if (!$803) {
     __THREW__ = 0;
     $805 = invoke_ii(67, 32) | 0;
     $806 = __THREW__;
     __THREW__ = 0;
     if ($806 & 1) {
      $949 = ___cxa_find_matching_catch() | 0;
      $950 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
      $$0$i$i26 = $950;
      $$01$i$i25 = $949;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $808 = $805 + 16 | 0;
     HEAP32[$808 + 0 >> 2] = HEAP32[$11 + 0 >> 2];
     HEAP32[$808 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
     HEAP32[$808 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
     HEAP32[$11 + 0 >> 2] = 0;
     HEAP32[$11 + 4 >> 2] = 0;
     HEAP32[$11 + 8 >> 2] = 0;
     HEAP32[$805 + 28 >> 2] = 0;
     $810 = HEAP32[$__parent$i83$i$i >> 2] | 0;
     HEAP32[$805 >> 2] = 0;
     HEAP32[$805 + 4 >> 2] = 0;
     HEAP32[$805 + 8 >> 2] = $810;
     HEAP32[$802 >> 2] = $805;
     $814 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$814) $817 = $805; else {
      HEAP32[310] = $814;
      $817 = HEAP32[$802 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $817);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i86$i$i = $805;
    } else $__r$0$i86$i$i = $803;
    HEAP32[$__r$0$i86$i$i + 28 >> 2] = 11;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
    __THREW__ = 0;
    invoke_viii(3, $12 | 0, 41744, 1);
    $821 = __THREW__;
    __THREW__ = 0;
    if ($821 & 1) break;
    $823 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i91$i$i1, $12) | 0;
    $824 = HEAP32[$823 >> 2] | 0;
    if (!$824) {
     __THREW__ = 0;
     $826 = invoke_ii(67, 32) | 0;
     $827 = __THREW__;
     __THREW__ = 0;
     if ($827 & 1) {
      $951 = ___cxa_find_matching_catch() | 0;
      $952 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
      $$0$i$i26 = $952;
      $$01$i$i25 = $951;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $829 = $826 + 16 | 0;
     HEAP32[$829 + 0 >> 2] = HEAP32[$12 + 0 >> 2];
     HEAP32[$829 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
     HEAP32[$829 + 8 >> 2] = HEAP32[$12 + 8 >> 2];
     HEAP32[$12 + 0 >> 2] = 0;
     HEAP32[$12 + 4 >> 2] = 0;
     HEAP32[$12 + 8 >> 2] = 0;
     HEAP32[$826 + 28 >> 2] = 0;
     $831 = HEAP32[$__parent$i91$i$i1 >> 2] | 0;
     HEAP32[$826 >> 2] = 0;
     HEAP32[$826 + 4 >> 2] = 0;
     HEAP32[$826 + 8 >> 2] = $831;
     HEAP32[$823 >> 2] = $826;
     $835 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$835) $838 = $826; else {
      HEAP32[310] = $835;
      $838 = HEAP32[$823 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $838);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i94$i$i = $826;
    } else $__r$0$i94$i$i = $824;
    HEAP32[$__r$0$i94$i$i + 28 >> 2] = 12;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
    __THREW__ = 0;
    invoke_viii(3, $13 | 0, 41752, 1);
    $842 = __THREW__;
    __THREW__ = 0;
    if ($842 & 1) break;
    $844 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i99$i$i, $13) | 0;
    $845 = HEAP32[$844 >> 2] | 0;
    if (!$845) {
     __THREW__ = 0;
     $847 = invoke_ii(67, 32) | 0;
     $848 = __THREW__;
     __THREW__ = 0;
     if ($848 & 1) {
      $953 = ___cxa_find_matching_catch() | 0;
      $954 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
      $$0$i$i26 = $954;
      $$01$i$i25 = $953;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $850 = $847 + 16 | 0;
     HEAP32[$850 + 0 >> 2] = HEAP32[$13 + 0 >> 2];
     HEAP32[$850 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
     HEAP32[$850 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
     HEAP32[$13 + 0 >> 2] = 0;
     HEAP32[$13 + 4 >> 2] = 0;
     HEAP32[$13 + 8 >> 2] = 0;
     HEAP32[$847 + 28 >> 2] = 0;
     $852 = HEAP32[$__parent$i99$i$i >> 2] | 0;
     HEAP32[$847 >> 2] = 0;
     HEAP32[$847 + 4 >> 2] = 0;
     HEAP32[$847 + 8 >> 2] = $852;
     HEAP32[$844 >> 2] = $847;
     $856 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$856) $859 = $847; else {
      HEAP32[310] = $856;
      $859 = HEAP32[$844 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $859);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i102$i$i = $847;
    } else $__r$0$i102$i$i = $845;
    HEAP32[$__r$0$i102$i$i + 28 >> 2] = 13;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
    __THREW__ = 0;
    invoke_viii(3, $14 | 0, 41760, 1);
    $863 = __THREW__;
    __THREW__ = 0;
    if ($863 & 1) break;
    $865 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i107$i$i, $14) | 0;
    $866 = HEAP32[$865 >> 2] | 0;
    if (!$866) {
     __THREW__ = 0;
     $868 = invoke_ii(67, 32) | 0;
     $869 = __THREW__;
     __THREW__ = 0;
     if ($869 & 1) {
      $955 = ___cxa_find_matching_catch() | 0;
      $956 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
      $$0$i$i26 = $956;
      $$01$i$i25 = $955;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $871 = $868 + 16 | 0;
     HEAP32[$871 + 0 >> 2] = HEAP32[$14 + 0 >> 2];
     HEAP32[$871 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
     HEAP32[$871 + 8 >> 2] = HEAP32[$14 + 8 >> 2];
     HEAP32[$14 + 0 >> 2] = 0;
     HEAP32[$14 + 4 >> 2] = 0;
     HEAP32[$14 + 8 >> 2] = 0;
     HEAP32[$868 + 28 >> 2] = 0;
     $873 = HEAP32[$__parent$i107$i$i >> 2] | 0;
     HEAP32[$868 >> 2] = 0;
     HEAP32[$868 + 4 >> 2] = 0;
     HEAP32[$868 + 8 >> 2] = $873;
     HEAP32[$865 >> 2] = $868;
     $877 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$877) $880 = $868; else {
      HEAP32[310] = $877;
      $880 = HEAP32[$865 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $880);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i110$i$i = $868;
    } else $__r$0$i110$i$i = $866;
    HEAP32[$__r$0$i110$i$i + 28 >> 2] = 14;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
    __THREW__ = 0;
    invoke_viii(3, $15 | 0, 41768, 2);
    $884 = __THREW__;
    __THREW__ = 0;
    if ($884 & 1) break;
    $886 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i115$i$i, $15) | 0;
    $887 = HEAP32[$886 >> 2] | 0;
    if (!$887) {
     __THREW__ = 0;
     $889 = invoke_ii(67, 32) | 0;
     $890 = __THREW__;
     __THREW__ = 0;
     if ($890 & 1) {
      $957 = ___cxa_find_matching_catch() | 0;
      $958 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
      $$0$i$i26 = $958;
      $$01$i$i25 = $957;
      $961 = HEAP32[311] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
      ___resumeException($$01$i$i25 | 0);
     }
     $892 = $889 + 16 | 0;
     HEAP32[$892 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
     HEAP32[$892 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
     HEAP32[$892 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
     HEAP32[$15 + 0 >> 2] = 0;
     HEAP32[$15 + 4 >> 2] = 0;
     HEAP32[$15 + 8 >> 2] = 0;
     HEAP32[$889 + 28 >> 2] = 0;
     $894 = HEAP32[$__parent$i115$i$i >> 2] | 0;
     HEAP32[$889 >> 2] = 0;
     HEAP32[$889 + 4 >> 2] = 0;
     HEAP32[$889 + 8 >> 2] = $894;
     HEAP32[$886 >> 2] = $889;
     $898 = HEAP32[HEAP32[310] >> 2] | 0;
     if (!$898) $901 = $889; else {
      HEAP32[310] = $898;
      $901 = HEAP32[$886 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $901);
     HEAP32[312] = (HEAP32[312] | 0) + 1;
     $__r$0$i118$i$i24 = $889;
    } else $__r$0$i118$i$i24 = $887;
    HEAP32[$__r$0$i118$i$i24 + 28 >> 2] = 15;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
    __THREW__ = 0;
    invoke_viii(3, $16 | 0, 41776, 2);
    $905 = __THREW__;
    __THREW__ = 0;
    if ($905 & 1) break;
    $907 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1240, $__parent$i123$i$i, $16) | 0;
    $908 = HEAP32[$907 >> 2] | 0;
    if ($908) {
     $__r$0$i126$i$i = $908;
     $962 = $__r$0$i126$i$i + 28 | 0;
     HEAP32[$962 >> 2] = 16;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     ___cxa_atexit(181, 1240, ___dso_handle | 0) | 0;
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    $910 = invoke_ii(67, 32) | 0;
    $911 = __THREW__;
    __THREW__ = 0;
    if ($911 & 1) {
     $959 = ___cxa_find_matching_catch() | 0;
     $960 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     $$0$i$i26 = $960;
     $$01$i$i25 = $959;
     $961 = HEAP32[311] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
     ___resumeException($$01$i$i25 | 0);
    }
    $913 = $910 + 16 | 0;
    HEAP32[$913 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
    HEAP32[$913 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
    HEAP32[$913 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
    HEAP32[$16 + 0 >> 2] = 0;
    HEAP32[$16 + 4 >> 2] = 0;
    HEAP32[$16 + 8 >> 2] = 0;
    HEAP32[$910 + 28 >> 2] = 0;
    $915 = HEAP32[$__parent$i123$i$i >> 2] | 0;
    HEAP32[$910 >> 2] = 0;
    HEAP32[$910 + 4 >> 2] = 0;
    HEAP32[$910 + 8 >> 2] = $915;
    HEAP32[$907 >> 2] = $910;
    $919 = HEAP32[HEAP32[310] >> 2] | 0;
    if (!$919) $922 = $910; else {
     HEAP32[310] = $919;
     $922 = HEAP32[$907 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[311] | 0, $922);
    HEAP32[312] = (HEAP32[312] | 0) + 1;
    $__r$0$i126$i$i = $910;
    $962 = $__r$0$i126$i$i + 28 | 0;
    HEAP32[$962 >> 2] = 16;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
    ___cxa_atexit(181, 1240, ___dso_handle | 0) | 0;
    STACKTOP = sp;
    return;
   } while (0);
   $925 = ___cxa_find_matching_catch() | 0;
   $$0$i$i26 = tempRet0;
   $$01$i$i25 = $925;
   $961 = HEAP32[311] | 0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1240, $961);
   ___resumeException($$01$i$i25 | 0);
  }
 } while (0);
 $557 = ___cxa_find_matching_catch() | 0;
 $$0$i$i = tempRet0;
 $$01$i$i = $557;
 $567 = HEAP32[307] | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1224, $567);
 ___resumeException($$01$i$i | 0);
}

function __ZL15static_analysisP3ASTbRKNSt3__13setIPK10IdentifierNS1_4lessIS5_EENS1_9allocatorIS5_EEEE($agg$result, $ast_, $in_object, $vars) {
 $agg$result = $agg$result | 0;
 $ast_ = $ast_ | 0;
 $in_object = $in_object | 0;
 $vars = $vars | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i125 = 0, $$0$i$i$i$i$i$i125$lcssa = 0, $$0$i$i$i$i$i$i196 = 0, $$0$i$i$i$i$i$i196$lcssa = 0, $$0$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i127 = 0, $$0$i$i$i$i$i162 = 0, $$0$i$i$i$i$i162$lcssa = 0, $$0$i$i$i$i$i198 = 0, $$0$i$i$i$i$i62 = 0, $$0$i$i$i$i$i97 = 0, $$0$i$i$i$i$i97$lcssa = 0, $$0$i$i$i$i108 = 0, $$0$i$i$i$i108$lcssa = 0, $$0$i$i$i$i135 = 0, $$0$i$i$i$i135$lcssa = 0, $$0$i$i$i$i164 = 0, $$0$i$i$i$i87 = 0, $$0$i$i$i$i87$lcssa = 0, $$0$i$i$i$i99 = 0, $$0$i$i$i$lcssa = 0, $$0$i$i$i110 = 0, $$0$i$i$i137 = 0, $$0$i$i$i179 = 0, $$0$i$i$i34 = 0, $$0$i$i$i42 = 0, $$0$i$i$i80 = 0, $$0$i$i$i88 = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph$lcssa$i$i$i$i121 = 0, $$0$ph$lcssa$i$i$i$i192 = 0, $$0$ph$lcssa$i$i$i153 = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$i = 0, $$0$ph6$i$i$i$i$lcssa480 = 0, $$0$ph6$i$i$i$i116 = 0, $$0$ph6$i$i$i$i116$lcssa474 = 0, $$0$ph6$i$i$i$i187 = 0, $$0$ph6$i$i$i$i187$lcssa469 = 0, $$0$ph6$i$i$i$lcssa482 = 0, $$0$ph6$i$i$i148 = 0, $$0$ph6$i$i$i148$lcssa467 = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i130 = 0, $$01$i$i$i$i$i201 = 0, $$01$i$i$i$i102 = 0, $$01$i$i$i$i167 = 0, $$01$i$i$i113 = 0, $$01$i$i$i140 = 0, $$01$ph5$i$i$i = 0, $$01$ph5$i$i$i$i = 0, $$01$ph5$i$i$i$i117 = 0, $$01$ph5$i$i$i$i188 = 0, $$01$ph5$i$i$i149 = 0, $$013$i$i$i = 0, $$013$i$i$i$i = 0, $$013$i$i$i$i$lcssa = 0, $$013$i$i$i$i$lcssa$lcssa = 0, $$013$i$i$i$i119 = 0, $$013$i$i$i$i119$lcssa = 0, $$013$i$i$i$i119$lcssa$lcssa = 0, $$013$i$i$i$i190 = 0, $$013$i$i$i$i190$lcssa = 0, $$013$i$i$i$i190$lcssa$lcssa = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i$lcssa$lcssa = 0, $$013$i$i$i151 = 0, $$013$i$i$i151$lcssa = 0, $$013$i$i$i151$lcssa$lcssa = 0, $$014 = 0, $$016 = 0, $$018 = 0, $$02 = 0, $$0236 = 0, $$04235 = 0, $$1 = 0, $$15 = 0, $$2 = 0, $$26 = 0, $$3 = 0, $$37 = 0, $$4 = 0, $$48 = 0, $$5 = 0, $$59 = 0, $$610261 = 0, $$6262 = 0, $$711267 = 0, $$7268 = 0, $$812275 = 0, $$8276 = 0, $$9 = 0, $$913 = 0, $$byval_copy34 = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i128$lcssa = 0, $$cast$i$i$i$i$i199$lcssa = 0, $$cast$i$i$i$i$lcssa = 0, $$cast$i$i$i$i100$lcssa = 0, $$cast$i$i$i$i165$lcssa = 0, $$cast$i$i$i111$lcssa = 0, $$cast$i$i$i138$lcssa = 0, $$cast$i$i$i89$lcssa = 0, $$cast$i$i$lcssa = 0, $$lcssa = 0, $$lcssa472 = 0, $$lcssa477 = 0, $$lcssa478 = 0, $$lcssa485 = 0, $$lcssa486 = 0, $$lcssa489 = 0, $$lcssa490 = 0, $$lcssa491 = 0, $$pre = 0, $$pre$phi402Z2D = 0, $$pre$phi403Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $105 = 0, $107 = 0, $11 = 0, $111 = 0, $112 = 0, $115 = 0, $116 = 0, $12 = 0, $121 = 0, $125 = 0, $127 = 0, $13 = 0, $133 = 0, $135 = 0, $14 = 0, $141 = 0, $143 = 0, $147 = 0, $148 = 0, $15 = 0, $151 = 0, $152 = 0, $155 = 0, $156 = 0, $159 = 0, $16 = 0, $163 = 0, $165 = 0, $169 = 0, $17 = 0, $170 = 0, $173 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $181 = 0, $182 = 0, $183 = 0, $186 = 0, $187 = 0, $19 = 0, $191 = 0, $195 = 0, $198 = 0, $2 = 0, $20 = 0, $202 = 0, $203 = 0, $205 = 0, $208 = 0, $21 = 0, $212 = 0, $213 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $223 = 0, $224 = 0, $225 = 0, $23 = 0, $239 = 0, $24 = 0, $240 = 0, $248 = 0, $249 = 0, $25 = 0, $257 = 0, $258 = 0, $26 = 0, $261 = 0, $263 = 0, $264 = 0, $266 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $272 = 0, $274 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $282 = 0, $284 = 0, $287 = 0, $288 = 0, $29 = 0, $292 = 0, $293 = 0, $298 = 0, $3 = 0, $300 = 0, $303 = 0, $306 = 0, $309 = 0, $31 = 0, $311 = 0, $314 = 0, $315 = 0, $319 = 0, $320 = 0, $325 = 0, $327 = 0, $330 = 0, $333 = 0, $337 = 0, $339 = 0, $340 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $35 = 0, $361 = 0, $363 = 0, $366 = 0, $37 = 0, $375 = 0, $376 = 0, $379 = 0, $391 = 0, $395 = 0, $397 = 0, $4 = 0, $403 = 0, $405 = 0, $409 = 0, $410 = 0, $413 = 0, $414 = 0, $417 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $426 = 0, $427 = 0, $428 = 0, $430 = 0, $432 = 0, $434 = 0, $437 = 0, $438 = 0, $44 = 0, $442 = 0, $443 = 0, $449 = 0, $451 = 0, $454 = 0, $458 = 0, $46 = 0, $460 = 0, $463 = 0, $467 = 0, $469 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $475 = 0, $476 = 0, $477 = 0, $48 = 0, $480 = 0, $481 = 0, $485 = 0, $489 = 0, $49 = 0, $492 = 0, $496 = 0, $497 = 0, $499 = 0, $5 = 0, $502 = 0, $506 = 0, $507 = 0, $509 = 0, $51 = 0, $512 = 0, $513 = 0, $514 = 0, $516 = 0, $518 = 0, $520 = 0, $522 = 0, $526 = 0, $528 = 0, $531 = 0, $535 = 0, $537 = 0, $539 = 0, $541 = 0, $542 = 0, $546 = 0, $548 = 0, $552 = 0, $554 = 0, $557 = 0, $558 = 0, $56 = 0, $572 = 0, $574 = 0, $577 = 0, $58 = 0, $585 = 0, $587 = 0, $590 = 0, $594 = 0, $595 = 0, $598 = 0, $6 = 0, $60 = 0, $614 = 0, $616 = 0, $618 = 0, $62 = 0, $620 = 0, $621 = 0, $623 = 0, $626 = 0, $627 = 0, $629 = 0, $632 = 0, $634 = 0, $64 = 0, $640 = 0, $641 = 0, $643 = 0, $644 = 0, $646 = 0, $648 = 0, $649 = 0, $650 = 0, $651 = 0, $652 = 0, $655 = 0, $656 = 0, $657 = 0, $66 = 0, $660 = 0, $661 = 0, $665 = 0, $669 = 0, $67 = 0, $672 = 0, $676 = 0, $677 = 0, $679 = 0, $682 = 0, $686 = 0, $687 = 0, $689 = 0, $691 = 0, $693 = 0, $695 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $703 = 0, $704 = 0, $708 = 0, $71 = 0, $711 = 0, $713 = 0, $716 = 0, $721 = 0, $723 = 0, $729 = 0, $73 = 0, $731 = 0, $735 = 0, $737 = 0, $751 = 0, $753 = 0, $756 = 0, $76 = 0, $765 = 0, $767 = 0, $772 = 0, $774 = 0, $775 = 0, $778 = 0, $779 = 0, $78 = 0, $782 = 0, $783 = 0, $789 = 0, $790 = 0, $793 = 0, $795 = 0, $796 = 0, $798 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $804 = 0, $806 = 0, $807 = 0, $810 = 0, $811 = 0, $814 = 0, $816 = 0, $817 = 0, $819 = 0, $82 = 0, $821 = 0, $822 = 0, $823 = 0, $825 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $833 = 0, $835 = 0, $839 = 0, $840 = 0, $843 = 0, $845 = 0, $846 = 0, $847 = 0, $849 = 0, $85 = 0, $862 = 0, $863 = 0, $864 = 0, $872 = 0, $873 = 0, $881 = 0, $882 = 0, $885 = 0, $887 = 0, $888 = 0, $890 = 0, $892 = 0, $893 = 0, $894 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $902 = 0, $903 = 0, $91 = 0, $910 = 0, $913 = 0, $916 = 0, $917 = 0, $919 = 0, $920 = 0, $926 = 0, $928 = 0, $929 = 0, $93 = 0, $934 = 0, $935 = 0, $937 = 0, $938 = 0, $939 = 0, $941 = 0, $943 = 0, $945 = 0, $947 = 0, $948 = 0, $949 = 0, $951 = 0, $952 = 0, $953 = 0, $958 = 0, $959 = 0, $962 = 0, $964 = 0, $967 = 0, $97 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $99 = 0, $__nd$0$be$in$i$i$i = 0, $__nd$0$be$in$i$i$i176 = 0, $__nd$0$be$in$i$i$i39 = 0, $__nd$0$be$in$i$i$i77 = 0, $__nd$0$i$i$i = 0, $__nd$0$i$i$i$lcssa = 0, $__nd$0$i$i$i$lcssa483 = 0, $__nd$0$i$i$i$lcssa484 = 0, $__nd$0$i$i$i175 = 0, $__nd$0$i$i$i175$lcssa = 0, $__nd$0$i$i$i175$lcssa470 = 0, $__nd$0$i$i$i175$lcssa471 = 0, $__nd$0$i$i$i38 = 0, $__nd$0$i$i$i38$lcssa = 0, $__nd$0$i$i$i38$lcssa487 = 0, $__nd$0$i$i$i38$lcssa488 = 0, $__nd$0$i$i$i76 = 0, $__nd$0$i$i$i76$lcssa = 0, $__nd$0$i$i$i76$lcssa475 = 0, $__nd$0$i$i$i76$lcssa476 = 0, $__parent$i$i = 0, $__parent$i$i$i = 0, $__parent$i$i$i156 = 0, $__parent$i$i$i91 = 0, $__parent$i$i36 = 0, $__parent$i$i74 = 0, $ast_vars = 0, $eh$lpad$body$index8Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body106$index24Z2D = 0, $eh$lpad$body106$indexZ2D = 0, $fv = 0, $fvs = 0, $id = 0, $lpad$phi295$index = 0, $lpad$phi295$index29 = 0, $lpad$phi305$index = 0, $lpad$phi305$index19 = 0, $new_vars = 0, $new_vars21 = 0, $new_vars35 = 0, $params = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $$byval_copy34 = sp + 404 | 0;
 $__parent$i$i$i156 = sp + 400 | 0;
 $0 = sp + 396 | 0;
 $__parent$i$i$i91 = sp + 392 | 0;
 $1 = sp + 388 | 0;
 $__parent$i$i74 = sp + 384 | 0;
 $__parent$i$i36 = sp + 380 | 0;
 $__parent$i$i = sp + 376 | 0;
 $2 = sp + 372 | 0;
 $__parent$i$i$i = sp + 368 | 0;
 $3 = sp + 364 | 0;
 $4 = sp + 352 | 0;
 $5 = sp + 340 | 0;
 $6 = sp + 328 | 0;
 $7 = sp + 316 | 0;
 $8 = sp + 304 | 0;
 $9 = sp + 292 | 0;
 $10 = sp + 280 | 0;
 $11 = sp + 268 | 0;
 $12 = sp + 256 | 0;
 $new_vars = sp + 244 | 0;
 $params = sp + 232 | 0;
 $13 = sp + 220 | 0;
 $fv = sp + 208 | 0;
 $14 = sp + 196 | 0;
 $15 = sp + 184 | 0;
 $ast_vars = sp + 172 | 0;
 $new_vars21 = sp + 160 | 0;
 $fvs = sp + 148 | 0;
 $16 = sp + 136 | 0;
 $17 = sp + 124 | 0;
 $18 = sp + 112 | 0;
 $19 = sp + 100 | 0;
 $new_vars35 = sp + 88 | 0;
 $20 = sp + 76 | 0;
 $21 = sp + 64 | 0;
 $22 = sp + 52 | 0;
 $23 = sp + 40 | 0;
 $24 = sp + 28 | 0;
 $25 = sp + 16 | 0;
 $26 = sp + 4 | 0;
 $id = sp;
 $27 = $agg$result + 4 | 0;
 HEAP32[$27 >> 2] = 0;
 $28 = $agg$result + 8 | 0;
 HEAP32[$28 >> 2] = 0;
 $29 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $29;
 L1 : do if (!$ast_) label = 414; else {
  $31 = ___dynamic_cast($ast_, 35776, 36024, 0) | 0;
  L3 : do if (!$31) {
   $73 = ___dynamic_cast($ast_, 35776, 36056, 0) | 0;
   if ($73) {
    $76 = HEAP32[$73 + 48 >> 2] | 0;
    $78 = HEAP32[$73 + 52 >> 2] | 0;
    if (($76 | 0) == ($78 | 0)) break;
    $80 = $6 + 4 | 0;
    $82 = $76;
    while (1) {
     __THREW__ = 0;
     invoke_viiii(16, $6 | 0, HEAP32[$82 >> 2] | 0, $in_object | 0, $vars | 0);
     $83 = __THREW__;
     __THREW__ = 0;
     if ($83 & 1) {
      label = 12;
      break;
     }
     __THREW__ = 0;
     invoke_vii(59, $agg$result | 0, $6 | 0);
     $85 = __THREW__;
     __THREW__ = 0;
     if ($85 & 1) {
      label = 24;
      break;
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($6, HEAP32[$80 >> 2] | 0);
     $82 = $82 + 4 | 0;
     if (($82 | 0) == ($78 | 0)) {
      label = 425;
      break;
     }
    }
    if ((label | 0) == 12) {
     $60 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index8Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $60;
     break L1;
    } else if ((label | 0) == 24) {
     $90 = ___cxa_find_matching_catch() | 0;
     $91 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($6, HEAP32[$80 >> 2] | 0);
     $$9 = $90;
     $$913 = $91;
     $971 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
     ___resumeException($$9 | 0);
    } else if ((label | 0) == 425) break;
   }
   $93 = ___dynamic_cast($ast_, 35776, 36080, 0) | 0;
   if ($93) {
    __THREW__ = 0;
    invoke_viiii(16, $7 | 0, HEAP32[$93 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 14;
     break L1;
    }
    __THREW__ = 0;
    invoke_vii(59, $agg$result | 0, $7 | 0);
    $99 = __THREW__;
    __THREW__ = 0;
    if ($99 & 1) {
     $111 = ___cxa_find_matching_catch() | 0;
     $112 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($7, HEAP32[$7 + 4 >> 2] | 0);
     $$9 = $111;
     $$913 = $112;
     $971 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
     ___resumeException($$9 | 0);
    }
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($7, HEAP32[$7 + 4 >> 2] | 0);
    __THREW__ = 0;
    invoke_viiii(16, $8 | 0, HEAP32[$93 + 56 >> 2] | 0, $in_object | 0, $vars | 0);
    $105 = __THREW__;
    __THREW__ = 0;
    if ($105 & 1) {
     label = 14;
     break L1;
    }
    __THREW__ = 0;
    invoke_vii(59, $agg$result | 0, $8 | 0);
    $107 = __THREW__;
    __THREW__ = 0;
    if (!($107 & 1)) {
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($8, HEAP32[$8 + 4 >> 2] | 0);
     break;
    }
    $115 = ___cxa_find_matching_catch() | 0;
    $116 = tempRet0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($8, HEAP32[$8 + 4 >> 2] | 0);
    $$9 = $115;
    $$913 = $116;
    $971 = HEAP32[$29 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
    ___resumeException($$9 | 0);
   }
   if (!(___dynamic_cast($ast_, 35776, 35984, 0) | 0)) {
    $121 = ___dynamic_cast($ast_, 35776, 36160, 0) | 0;
    if ($121) {
     __THREW__ = 0;
     invoke_viiii(16, $9 | 0, HEAP32[$121 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
     $125 = __THREW__;
     __THREW__ = 0;
     if ($125 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(59, $agg$result | 0, $9 | 0);
     $127 = __THREW__;
     __THREW__ = 0;
     if ($127 & 1) {
      $147 = ___cxa_find_matching_catch() | 0;
      $148 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($9, HEAP32[$9 + 4 >> 2] | 0);
      $$9 = $147;
      $$913 = $148;
      $971 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
      ___resumeException($$9 | 0);
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($9, HEAP32[$9 + 4 >> 2] | 0);
     __THREW__ = 0;
     invoke_viiii(16, $10 | 0, HEAP32[$121 + 52 >> 2] | 0, $in_object | 0, $vars | 0);
     $133 = __THREW__;
     __THREW__ = 0;
     if ($133 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(59, $agg$result | 0, $10 | 0);
     $135 = __THREW__;
     __THREW__ = 0;
     if ($135 & 1) {
      $151 = ___cxa_find_matching_catch() | 0;
      $152 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($10, HEAP32[$10 + 4 >> 2] | 0);
      $$9 = $151;
      $$913 = $152;
      $971 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
      ___resumeException($$9 | 0);
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($10, HEAP32[$10 + 4 >> 2] | 0);
     __THREW__ = 0;
     invoke_viiii(16, $11 | 0, HEAP32[$121 + 56 >> 2] | 0, $in_object | 0, $vars | 0);
     $141 = __THREW__;
     __THREW__ = 0;
     if ($141 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(59, $agg$result | 0, $11 | 0);
     $143 = __THREW__;
     __THREW__ = 0;
     if (!($143 & 1)) {
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($11, HEAP32[$11 + 4 >> 2] | 0);
      break;
     }
     $155 = ___cxa_find_matching_catch() | 0;
     $156 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($11, HEAP32[$11 + 4 >> 2] | 0);
     $$9 = $155;
     $$913 = $156;
     $971 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
     ___resumeException($$9 | 0);
    }
    $159 = ___dynamic_cast($ast_, 35776, 36208, 0) | 0;
    if ($159) {
     __THREW__ = 0;
     invoke_viiii(16, $12 | 0, HEAP32[$159 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
     $163 = __THREW__;
     __THREW__ = 0;
     if ($163 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(59, $agg$result | 0, $12 | 0);
     $165 = __THREW__;
     __THREW__ = 0;
     if (!($165 & 1)) {
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($12, HEAP32[$12 + 4 >> 2] | 0);
      break;
     }
     $169 = ___cxa_find_matching_catch() | 0;
     $170 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($12, HEAP32[$12 + 4 >> 2] | 0);
     $$9 = $169;
     $$913 = $170;
     $971 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
     ___resumeException($$9 | 0);
    }
    $173 = ___dynamic_cast($ast_, 35776, 36248, 0) | 0;
    if ($173) {
     $175 = $new_vars + 4 | 0;
     HEAP32[$175 >> 2] = 0;
     $176 = $new_vars + 8 | 0;
     HEAP32[$176 >> 2] = 0;
     $177 = $new_vars + 4 | 0;
     HEAP32[$new_vars >> 2] = $177;
     $178 = HEAP32[$vars >> 2] | 0;
     $179 = $vars + 4 | 0;
     do if (($178 | 0) != ($179 | 0)) {
      $182 = $178;
      $202 = $178;
      while (1) {
       $181 = $182 + 16 | 0;
       HEAP32[$3 >> 2] = $177;
       HEAP32[$$byval_copy34 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
       $183 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($new_vars, $$byval_copy34, $__parent$i$i$i, $181) | 0;
       if (!(HEAP32[$183 >> 2] | 0)) {
        __THREW__ = 0;
        $186 = invoke_ii(67, 20) | 0;
        $187 = __THREW__;
        __THREW__ = 0;
        if ($187 & 1) {
         label = 66;
         break;
        }
        HEAP32[$186 + 16 >> 2] = HEAP32[$181 >> 2];
        $191 = HEAP32[$__parent$i$i$i >> 2] | 0;
        HEAP32[$186 >> 2] = 0;
        HEAP32[$186 + 4 >> 2] = 0;
        HEAP32[$186 + 8 >> 2] = $191;
        HEAP32[$183 >> 2] = $186;
        $195 = HEAP32[HEAP32[$new_vars >> 2] >> 2] | 0;
        if (!$195) $198 = $186; else {
         HEAP32[$new_vars >> 2] = $195;
         $198 = HEAP32[$183 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$175 >> 2] | 0, $198);
        HEAP32[$176 >> 2] = (HEAP32[$176 >> 2] | 0) + 1;
       }
       $203 = HEAP32[$202 + 4 >> 2] | 0;
       if (!$203) {
        $$0$i$i$i$i = $202;
        while (1) {
         $208 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$208 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
          $$cast$i$i$i$i$lcssa = $208;
          break;
         } else $$0$i$i$i$i = $208;
        }
        $$01$i$i$i$i = $$cast$i$i$i$i$lcssa;
       } else {
        $$0$i$i$i$i$i = $203;
        while (1) {
         $205 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
         if (!$205) {
          $$0$i$i$i$i$i$lcssa = $$0$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i = $205;
        }
        $$01$i$i$i$i = $$0$i$i$i$i$i$lcssa;
       }
       if (($$01$i$i$i$i | 0) == ($179 | 0)) {
        label = 67;
        break;
       } else {
        $182 = $$01$i$i$i$i;
        $202 = $$01$i$i$i$i;
       }
      }
      if ((label | 0) == 66) {
       $212 = ___cxa_find_matching_catch() | 0;
       $213 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars, HEAP32[$177 >> 2] | 0);
       $eh$lpad$body$index8Z2D = $213;
       $eh$lpad$body$indexZ2D = $212;
       break L1;
      } else if ((label | 0) == 67) break;
     } while (0);
     $215 = $params + 4 | 0;
     HEAP32[$215 >> 2] = 0;
     $216 = $params + 8 | 0;
     HEAP32[$216 >> 2] = 0;
     $217 = $params + 4 | 0;
     HEAP32[$params >> 2] = $217;
     $218 = $173 + 48 | 0;
     $219 = HEAP32[$218 >> 2] | 0;
     $220 = $173 + 52 | 0;
     $221 = HEAP32[$220 >> 2] | 0;
     L101 : do if (($219 | 0) == ($221 | 0)) label = 133; else {
      $224 = $219;
      $225 = 0;
      while (1) {
       $223 = HEAP32[$224 >> 2] | 0;
       if ($225) {
        $$0$ph6$i$i$i = $217;
        $$01$ph5$i$i$i = $225;
        L107 : while (1) {
         $$013$i$i$i = $$01$ph5$i$i$i;
         while (1) {
          if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $223 >>> 0) {
           $$013$i$i$i$lcssa = $$013$i$i$i;
           break;
          }
          $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
          if (!$$013$i$i$i) {
           $$0$ph6$i$i$i$lcssa482 = $$0$ph6$i$i$i;
           label = 76;
           break L107;
          }
         }
         $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
         if (!$$01$ph5$i$i$i) {
          $$013$i$i$i$lcssa$lcssa = $$013$i$i$i$lcssa;
          label = 77;
          break;
         } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
        }
        if ((label | 0) == 76) {
         label = 0;
         $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i$lcssa482;
        } else if ((label | 0) == 77) {
         label = 0;
         $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa$lcssa;
        }
        if (($$0$ph$lcssa$i$i$i | 0) != ($217 | 0)) if ($223 >>> 0 >= (HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0) {
         $$lcssa491 = $223;
         label = 80;
         break;
        }
       }
       do if (!$225) {
        HEAP32[$__parent$i$i >> 2] = $217;
        $$0$i$i$i34 = $217;
        $298 = $217;
       } else {
        $__nd$0$i$i$i = $225;
        while (1) {
         $282 = HEAP32[$__nd$0$i$i$i + 16 >> 2] | 0;
         if ($223 >>> 0 < $282 >>> 0) {
          $284 = HEAP32[$__nd$0$i$i$i >> 2] | 0;
          if (!$284) {
           $$lcssa486 = $__nd$0$i$i$i;
           $__nd$0$i$i$i$lcssa484 = $__nd$0$i$i$i;
           label = 102;
           break;
          } else $__nd$0$be$in$i$i$i = $284;
         } else {
          if ($282 >>> 0 >= $223 >>> 0) {
           $__nd$0$i$i$i$lcssa = $__nd$0$i$i$i;
           label = 107;
           break;
          }
          $287 = $__nd$0$i$i$i + 4 | 0;
          $288 = HEAP32[$287 >> 2] | 0;
          if (!$288) {
           $$lcssa485 = $287;
           $__nd$0$i$i$i$lcssa483 = $__nd$0$i$i$i;
           label = 106;
           break;
          } else $__nd$0$be$in$i$i$i = $288;
         }
         $__nd$0$i$i$i = $__nd$0$be$in$i$i$i;
        }
        if ((label | 0) == 102) {
         label = 0;
         HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa484;
         $$0$i$i$i34 = $$lcssa486;
         $298 = $__nd$0$i$i$i$lcssa484;
         break;
        } else if ((label | 0) == 106) {
         label = 0;
         HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa483;
         $$0$i$i$i34 = $$lcssa485;
         $298 = $__nd$0$i$i$i$lcssa483;
         break;
        } else if ((label | 0) == 107) {
         label = 0;
         HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa;
         $$0$i$i$i34 = $__parent$i$i;
         $298 = $__nd$0$i$i$i$lcssa;
         break;
        }
       } while (0);
       if (!(HEAP32[$$0$i$i$i34 >> 2] | 0)) {
        __THREW__ = 0;
        $292 = invoke_ii(67, 20) | 0;
        $293 = __THREW__;
        __THREW__ = 0;
        if ($293 & 1) {
         label = 92;
         break;
        }
        HEAP32[$292 + 16 >> 2] = $223;
        HEAP32[$292 >> 2] = 0;
        HEAP32[$292 + 4 >> 2] = 0;
        HEAP32[$292 + 8 >> 2] = $298;
        HEAP32[$$0$i$i$i34 >> 2] = $292;
        $300 = HEAP32[HEAP32[$params >> 2] >> 2] | 0;
        if (!$300) $303 = $292; else {
         HEAP32[$params >> 2] = $300;
         $303 = HEAP32[$$0$i$i$i34 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$215 >> 2] | 0, $303);
        HEAP32[$216 >> 2] = (HEAP32[$216 >> 2] | 0) + 1;
       }
       $306 = HEAP32[$177 >> 2] | 0;
       do if (!$306) {
        HEAP32[$__parent$i$i36 >> 2] = $177;
        $$0$i$i$i42 = $177;
        $325 = $177;
       } else {
        $__nd$0$i$i$i38 = $306;
        while (1) {
         $309 = HEAP32[$__nd$0$i$i$i38 + 16 >> 2] | 0;
         if ($223 >>> 0 < $309 >>> 0) {
          $311 = HEAP32[$__nd$0$i$i$i38 >> 2] | 0;
          if (!$311) {
           $$lcssa490 = $__nd$0$i$i$i38;
           $__nd$0$i$i$i38$lcssa488 = $__nd$0$i$i$i38;
           label = 118;
           break;
          } else $__nd$0$be$in$i$i$i39 = $311;
         } else {
          if ($309 >>> 0 >= $223 >>> 0) {
           $__nd$0$i$i$i38$lcssa = $__nd$0$i$i$i38;
           label = 123;
           break;
          }
          $314 = $__nd$0$i$i$i38 + 4 | 0;
          $315 = HEAP32[$314 >> 2] | 0;
          if (!$315) {
           $$lcssa489 = $314;
           $__nd$0$i$i$i38$lcssa487 = $__nd$0$i$i$i38;
           label = 122;
           break;
          } else $__nd$0$be$in$i$i$i39 = $315;
         }
         $__nd$0$i$i$i38 = $__nd$0$be$in$i$i$i39;
        }
        if ((label | 0) == 118) {
         label = 0;
         HEAP32[$__parent$i$i36 >> 2] = $__nd$0$i$i$i38$lcssa488;
         $$0$i$i$i42 = $$lcssa490;
         $325 = $__nd$0$i$i$i38$lcssa488;
         break;
        } else if ((label | 0) == 122) {
         label = 0;
         HEAP32[$__parent$i$i36 >> 2] = $__nd$0$i$i$i38$lcssa487;
         $$0$i$i$i42 = $$lcssa489;
         $325 = $__nd$0$i$i$i38$lcssa487;
         break;
        } else if ((label | 0) == 123) {
         label = 0;
         HEAP32[$__parent$i$i36 >> 2] = $__nd$0$i$i$i38$lcssa;
         $$0$i$i$i42 = $__parent$i$i36;
         $325 = $__nd$0$i$i$i38$lcssa;
         break;
        }
       } while (0);
       if (!(HEAP32[$$0$i$i$i42 >> 2] | 0)) {
        __THREW__ = 0;
        $319 = invoke_ii(67, 20) | 0;
        $320 = __THREW__;
        __THREW__ = 0;
        if ($320 & 1) {
         label = 92;
         break;
        }
        HEAP32[$319 + 16 >> 2] = $223;
        HEAP32[$319 >> 2] = 0;
        HEAP32[$319 + 4 >> 2] = 0;
        HEAP32[$319 + 8 >> 2] = $325;
        HEAP32[$$0$i$i$i42 >> 2] = $319;
        $327 = HEAP32[HEAP32[$new_vars >> 2] >> 2] | 0;
        if (!$327) $330 = $319; else {
         HEAP32[$new_vars >> 2] = $327;
         $330 = HEAP32[$$0$i$i$i42 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$175 >> 2] | 0, $330);
        HEAP32[$176 >> 2] = (HEAP32[$176 >> 2] | 0) + 1;
       }
       $333 = $224 + 4 | 0;
       if (($333 | 0) == ($221 | 0)) {
        label = 132;
        break;
       }
       $224 = $333;
       $225 = HEAP32[$217 >> 2] | 0;
      }
      if ((label | 0) == 80) {
       $239 = ___cxa_allocate_exception(40) | 0;
       HEAP32[$13 + 0 >> 2] = 0;
       HEAP32[$13 + 4 >> 2] = 0;
       HEAP32[$13 + 8 >> 2] = 0;
       $240 = HEAP8[$$lcssa491 >> 0] | 0;
       if (!($240 & 1)) $248 = ($240 & 255) >>> 1; else $248 = HEAP32[$$lcssa491 + 4 >> 2] | 0;
       __THREW__ = 0;
       invoke_viiii(14, $13 | 0, 38352, 30, $248 + 30 | 0);
       $249 = __THREW__;
       __THREW__ = 0;
       L170 : do if ($249 & 1) label = 95; else {
        if (!(HEAP8[$$lcssa491 >> 0] & 1)) $257 = $$lcssa491 + 1 | 0; else $257 = HEAP32[$$lcssa491 + 8 >> 2] | 0;
        __THREW__ = 0;
        invoke_iiii(33, $13 | 0, $257 | 0, $248 | 0) | 0;
        $258 = __THREW__;
        __THREW__ = 0;
        if ($258 & 1) label = 95; else {
         __THREW__ = 0;
         invoke_vii(40, $239 | 0, $ast_ + 4 | 0);
         $261 = __THREW__;
         __THREW__ = 0;
         do if ($261 & 1) $$014 = 1; else {
          $263 = $239 + 12 | 0;
          $264 = $ast_ + 16 | 0;
          HEAP32[$263 + 0 >> 2] = HEAP32[$264 + 0 >> 2];
          HEAP32[$263 + 4 >> 2] = HEAP32[$264 + 4 >> 2];
          HEAP32[$263 + 8 >> 2] = HEAP32[$264 + 8 >> 2];
          HEAP32[$263 + 12 >> 2] = HEAP32[$264 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $239 + 28 | 0, $13 | 0);
          $266 = __THREW__;
          __THREW__ = 0;
          if ($266 & 1) {
           $268 = ___cxa_find_matching_catch() | 0;
           $269 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($239);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
           $$0236 = $268;
           $$04235 = $269;
           break L170;
          }
          __THREW__ = 0;
          invoke_viii(4, $239 | 0, 48, 176);
          $270 = __THREW__;
          __THREW__ = 0;
          if ($270 & 1) {
           $$014 = 0;
           break;
          }
         } while (0);
         $278 = ___cxa_find_matching_catch() | 0;
         $279 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
         if ($$014) {
          $$0236 = $278;
          $$04235 = $279;
         } else {
          $$1 = $278;
          $$15 = $279;
          break L101;
         }
        }
       } while (0);
       if ((label | 0) == 95) {
        $276 = ___cxa_find_matching_catch() | 0;
        $277 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
        $$0236 = $276;
        $$04235 = $277;
       }
       ___cxa_free_exception($239 | 0);
       $$1 = $$0236;
       $$15 = $$04235;
       break;
      } else if ((label | 0) == 92) {
       $272 = ___cxa_find_matching_catch() | 0;
       $lpad$phi305$index = $272;
       $lpad$phi305$index19 = tempRet0;
       label = 94;
       break;
      } else if ((label | 0) == 132) {
       label = 133;
       break;
      }
     } while (0);
     do if ((label | 0) == 133) {
      __THREW__ = 0;
      invoke_viiii(16, $fv | 0, HEAP32[$173 + 60 >> 2] | 0, $in_object | 0, $new_vars | 0);
      $337 = __THREW__;
      __THREW__ = 0;
      if ($337 & 1) {
       $274 = ___cxa_find_matching_catch() | 0;
       $lpad$phi305$index = $274;
       $lpad$phi305$index19 = tempRet0;
       label = 94;
       break;
      }
      $339 = HEAP32[$218 >> 2] | 0;
      $340 = HEAP32[$220 >> 2] | 0;
      if (($339 | 0) != ($340 | 0)) {
       $342 = $fv + 4 | 0;
       $343 = $fv + 8 | 0;
       $345 = $339;
       do {
        $344 = HEAP32[$345 >> 2] | 0;
        $346 = HEAP32[$342 >> 2] | 0;
        do if ($346) {
         $$0$ph6$i$i$i$i = $342;
         $$01$ph5$i$i$i$i = $346;
         L200 : while (1) {
          $$013$i$i$i$i = $$01$ph5$i$i$i$i;
          while (1) {
           if ((HEAP32[$$013$i$i$i$i + 16 >> 2] | 0) >>> 0 >= $344 >>> 0) {
            $$013$i$i$i$i$lcssa = $$013$i$i$i$i;
            break;
           }
           $$013$i$i$i$i = HEAP32[$$013$i$i$i$i + 4 >> 2] | 0;
           if (!$$013$i$i$i$i) {
            $$0$ph6$i$i$i$i$lcssa480 = $$0$ph6$i$i$i$i;
            label = 142;
            break L200;
           }
          }
          $$01$ph5$i$i$i$i = HEAP32[$$013$i$i$i$i$lcssa >> 2] | 0;
          if (!$$01$ph5$i$i$i$i) {
           $$013$i$i$i$i$lcssa$lcssa = $$013$i$i$i$i$lcssa;
           label = 143;
           break;
          } else $$0$ph6$i$i$i$i = $$013$i$i$i$i$lcssa;
         }
         if ((label | 0) == 142) {
          label = 0;
          $$0$ph$lcssa$i$i$i$i = $$0$ph6$i$i$i$i$lcssa480;
         } else if ((label | 0) == 143) {
          label = 0;
          $$0$ph$lcssa$i$i$i$i = $$013$i$i$i$i$lcssa$lcssa;
         }
         if (($$0$ph$lcssa$i$i$i$i | 0) == ($342 | 0)) break;
         if ($344 >>> 0 < (HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) >>> 0) break;
         $361 = HEAP32[$$0$ph$lcssa$i$i$i$i + 4 >> 2] | 0;
         if (!$361) {
          $$0$i$i$i$i$i62 = $$0$ph$lcssa$i$i$i$i;
          while (1) {
           $366 = HEAP32[$$0$i$i$i$i$i62 + 8 >> 2] | 0;
           if ((HEAP32[$366 >> 2] | 0) == ($$0$i$i$i$i$i62 | 0)) {
            $$cast$i$i$i$i$i$lcssa = $366;
            break;
           } else $$0$i$i$i$i$i62 = $366;
          }
          $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
         } else {
          $$0$i$i$i$i$i$i = $361;
          while (1) {
           $363 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
           if (!$363) {
            $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
            break;
           } else $$0$i$i$i$i$i$i = $363;
          }
          $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
         }
         if ((HEAP32[$fv >> 2] | 0) == ($$0$ph$lcssa$i$i$i$i | 0)) HEAP32[$fv >> 2] = $$01$i$i$i$i$i;
         HEAP32[$343 >> 2] = (HEAP32[$343 >> 2] | 0) + -1;
         __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($346, $$0$ph$lcssa$i$i$i$i);
         __ZdlPv($$0$ph$lcssa$i$i$i$i);
        } while (0);
        $345 = $345 + 4 | 0;
       } while (($345 | 0) != ($340 | 0));
      }
      __THREW__ = 0;
      invoke_vii(59, $agg$result | 0, $fv | 0);
      $379 = __THREW__;
      __THREW__ = 0;
      if ($379 & 1) {
       $375 = ___cxa_find_matching_catch() | 0;
       $376 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fv, HEAP32[$fv + 4 >> 2] | 0);
       $$1 = $375;
       $$15 = $376;
       break;
      } else {
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fv, HEAP32[$fv + 4 >> 2] | 0);
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($params, HEAP32[$217 >> 2] | 0);
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars, HEAP32[$177 >> 2] | 0);
       break L3;
      }
     } while (0);
     if ((label | 0) == 94) {
      $$1 = $lpad$phi305$index;
      $$15 = $lpad$phi305$index19;
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($params, HEAP32[$217 >> 2] | 0);
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars, HEAP32[$177 >> 2] | 0);
     $$9 = $$1;
     $$913 = $$15;
     $971 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
     ___resumeException($$9 | 0);
    }
    if (!(___dynamic_cast($ast_, 35776, 36296, 0) | 0)) if (!(___dynamic_cast($ast_, 35776, 36336, 0) | 0)) {
     $391 = ___dynamic_cast($ast_, 35776, 36376, 0) | 0;
     if ($391) {
      __THREW__ = 0;
      invoke_viiii(16, $14 | 0, HEAP32[$391 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
      $395 = __THREW__;
      __THREW__ = 0;
      if ($395 & 1) {
       label = 14;
       break L1;
      }
      __THREW__ = 0;
      invoke_vii(59, $agg$result | 0, $14 | 0);
      $397 = __THREW__;
      __THREW__ = 0;
      if ($397 & 1) {
       $409 = ___cxa_find_matching_catch() | 0;
       $410 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($14, HEAP32[$14 + 4 >> 2] | 0);
       $$9 = $409;
       $$913 = $410;
       $971 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
       ___resumeException($$9 | 0);
      }
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($14, HEAP32[$14 + 4 >> 2] | 0);
      __THREW__ = 0;
      invoke_viiii(16, $15 | 0, HEAP32[$391 + 52 >> 2] | 0, $in_object | 0, $vars | 0);
      $403 = __THREW__;
      __THREW__ = 0;
      if ($403 & 1) {
       label = 14;
       break L1;
      }
      __THREW__ = 0;
      invoke_vii(59, $agg$result | 0, $15 | 0);
      $405 = __THREW__;
      __THREW__ = 0;
      if (!($405 & 1)) {
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($15, HEAP32[$15 + 4 >> 2] | 0);
       break;
      }
      $413 = ___cxa_find_matching_catch() | 0;
      $414 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($15, HEAP32[$15 + 4 >> 2] | 0);
      $$9 = $413;
      $$913 = $414;
      $971 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
      ___resumeException($$9 | 0);
     }
     $417 = ___dynamic_cast($ast_, 35776, 35792, 0) | 0;
     if ($417) {
      $419 = $ast_vars + 4 | 0;
      HEAP32[$419 >> 2] = 0;
      $420 = $ast_vars + 8 | 0;
      HEAP32[$420 >> 2] = 0;
      $421 = $ast_vars + 4 | 0;
      HEAP32[$ast_vars >> 2] = $421;
      $422 = $417 + 48 | 0;
      $423 = HEAP32[$422 >> 2] | 0;
      $424 = $417 + 52 | 0;
      do if (($423 | 0) == ($424 | 0)) label = 203; else {
       $427 = $423;
       $428 = 0;
       while (1) {
        $426 = $427 + 16 | 0;
        do if (!$428) {
         HEAP32[$__parent$i$i74 >> 2] = $421;
         $$0$i$i$i80 = $421;
         $449 = $421;
        } else {
         $430 = HEAP32[$426 >> 2] | 0;
         $__nd$0$i$i$i76 = $428;
         while (1) {
          $432 = HEAP32[$__nd$0$i$i$i76 + 16 >> 2] | 0;
          if ($430 >>> 0 < $432 >>> 0) {
           $434 = HEAP32[$__nd$0$i$i$i76 >> 2] | 0;
           if (!$434) {
            $$lcssa478 = $__nd$0$i$i$i76;
            $__nd$0$i$i$i76$lcssa476 = $__nd$0$i$i$i76;
            label = 179;
            break;
           } else $__nd$0$be$in$i$i$i77 = $434;
          } else {
           if ($432 >>> 0 >= $430 >>> 0) {
            $__nd$0$i$i$i76$lcssa = $__nd$0$i$i$i76;
            label = 184;
            break;
           }
           $437 = $__nd$0$i$i$i76 + 4 | 0;
           $438 = HEAP32[$437 >> 2] | 0;
           if (!$438) {
            $$lcssa477 = $437;
            $__nd$0$i$i$i76$lcssa475 = $__nd$0$i$i$i76;
            label = 183;
            break;
           } else $__nd$0$be$in$i$i$i77 = $438;
          }
          $__nd$0$i$i$i76 = $__nd$0$be$in$i$i$i77;
         }
         if ((label | 0) == 179) {
          label = 0;
          HEAP32[$__parent$i$i74 >> 2] = $__nd$0$i$i$i76$lcssa476;
          $$0$i$i$i80 = $$lcssa478;
          $449 = $__nd$0$i$i$i76$lcssa476;
          break;
         } else if ((label | 0) == 183) {
          label = 0;
          HEAP32[$__parent$i$i74 >> 2] = $__nd$0$i$i$i76$lcssa475;
          $$0$i$i$i80 = $$lcssa477;
          $449 = $__nd$0$i$i$i76$lcssa475;
          break;
         } else if ((label | 0) == 184) {
          label = 0;
          HEAP32[$__parent$i$i74 >> 2] = $__nd$0$i$i$i76$lcssa;
          $$0$i$i$i80 = $__parent$i$i74;
          $449 = $__nd$0$i$i$i76$lcssa;
          break;
         }
        } while (0);
        if (!(HEAP32[$$0$i$i$i80 >> 2] | 0)) {
         __THREW__ = 0;
         $442 = invoke_ii(67, 20) | 0;
         $443 = __THREW__;
         __THREW__ = 0;
         if ($443 & 1) {
          label = 200;
          break;
         }
         HEAP32[$442 + 16 >> 2] = HEAP32[$426 >> 2];
         HEAP32[$442 >> 2] = 0;
         HEAP32[$442 + 4 >> 2] = 0;
         HEAP32[$442 + 8 >> 2] = $449;
         HEAP32[$$0$i$i$i80 >> 2] = $442;
         $451 = HEAP32[HEAP32[$ast_vars >> 2] >> 2] | 0;
         if (!$451) $454 = $442; else {
          HEAP32[$ast_vars >> 2] = $451;
          $454 = HEAP32[$$0$i$i$i80 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$419 >> 2] | 0, $454);
         HEAP32[$420 >> 2] = (HEAP32[$420 >> 2] | 0) + 1;
        }
        $458 = HEAP32[$427 + 4 >> 2] | 0;
        if (!$458) {
         $$0$i$i$i88 = $427;
         while (1) {
          $463 = HEAP32[$$0$i$i$i88 + 8 >> 2] | 0;
          if ((HEAP32[$463 >> 2] | 0) == ($$0$i$i$i88 | 0)) {
           $$cast$i$i$i89$lcssa = $463;
           break;
          } else $$0$i$i$i88 = $463;
         }
         $$01$i$i$i = $$cast$i$i$i89$lcssa;
        } else {
         $$0$i$i$i$i87 = $458;
         while (1) {
          $460 = HEAP32[$$0$i$i$i$i87 >> 2] | 0;
          if (!$460) {
           $$0$i$i$i$i87$lcssa = $$0$i$i$i$i87;
           break;
          } else $$0$i$i$i$i87 = $460;
         }
         $$01$i$i$i = $$0$i$i$i$i87$lcssa;
        }
        if (($$01$i$i$i | 0) == ($424 | 0)) {
         label = 202;
         break;
        }
        $427 = $$01$i$i$i;
        $428 = HEAP32[$421 >> 2] | 0;
       }
       if ((label | 0) == 200) {
        $467 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body106$index24Z2D = tempRet0;
        $eh$lpad$body106$indexZ2D = $467;
        label = 201;
        break;
       } else if ((label | 0) == 202) {
        label = 203;
        break;
       }
      } while (0);
      L293 : do if ((label | 0) == 203) {
       $469 = $new_vars21 + 4 | 0;
       HEAP32[$469 >> 2] = 0;
       $470 = $new_vars21 + 8 | 0;
       HEAP32[$470 >> 2] = 0;
       $471 = $new_vars21 + 4 | 0;
       HEAP32[$new_vars21 >> 2] = $471;
       $472 = HEAP32[$vars >> 2] | 0;
       $473 = $vars + 4 | 0;
       do if (($472 | 0) != ($473 | 0)) {
        $476 = $472;
        $496 = $472;
        while (1) {
         $475 = $476 + 16 | 0;
         HEAP32[$1 >> 2] = $471;
         HEAP32[$$byval_copy34 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
         $477 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($new_vars21, $$byval_copy34, $__parent$i$i$i91, $475) | 0;
         if (!(HEAP32[$477 >> 2] | 0)) {
          __THREW__ = 0;
          $480 = invoke_ii(67, 20) | 0;
          $481 = __THREW__;
          __THREW__ = 0;
          if ($481 & 1) {
           label = 218;
           break;
          }
          HEAP32[$480 + 16 >> 2] = HEAP32[$475 >> 2];
          $485 = HEAP32[$__parent$i$i$i91 >> 2] | 0;
          HEAP32[$480 >> 2] = 0;
          HEAP32[$480 + 4 >> 2] = 0;
          HEAP32[$480 + 8 >> 2] = $485;
          HEAP32[$477 >> 2] = $480;
          $489 = HEAP32[HEAP32[$new_vars21 >> 2] >> 2] | 0;
          if (!$489) $492 = $480; else {
           HEAP32[$new_vars21 >> 2] = $489;
           $492 = HEAP32[$477 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$469 >> 2] | 0, $492);
          HEAP32[$470 >> 2] = (HEAP32[$470 >> 2] | 0) + 1;
         }
         $497 = HEAP32[$496 + 4 >> 2] | 0;
         if (!$497) {
          $$0$i$i$i$i99 = $496;
          while (1) {
           $502 = HEAP32[$$0$i$i$i$i99 + 8 >> 2] | 0;
           if ((HEAP32[$502 >> 2] | 0) == ($$0$i$i$i$i99 | 0)) {
            $$cast$i$i$i$i100$lcssa = $502;
            break;
           } else $$0$i$i$i$i99 = $502;
          }
          $$01$i$i$i$i102 = $$cast$i$i$i$i100$lcssa;
         } else {
          $$0$i$i$i$i$i97 = $497;
          while (1) {
           $499 = HEAP32[$$0$i$i$i$i$i97 >> 2] | 0;
           if (!$499) {
            $$0$i$i$i$i$i97$lcssa = $$0$i$i$i$i$i97;
            break;
           } else $$0$i$i$i$i$i97 = $499;
          }
          $$01$i$i$i$i102 = $$0$i$i$i$i$i97$lcssa;
         }
         if (($$01$i$i$i$i102 | 0) == ($473 | 0)) {
          label = 219;
          break;
         } else {
          $476 = $$01$i$i$i$i102;
          $496 = $$01$i$i$i$i102;
         }
        }
        if ((label | 0) == 218) {
         $506 = ___cxa_find_matching_catch() | 0;
         $507 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars21, HEAP32[$471 >> 2] | 0);
         $eh$lpad$body106$index24Z2D = $507;
         $eh$lpad$body106$indexZ2D = $506;
         label = 201;
         break L293;
        } else if ((label | 0) == 219) break;
       } while (0);
       __THREW__ = 0;
       invoke_vii(59, $new_vars21 | 0, $ast_vars | 0);
       $509 = __THREW__;
       __THREW__ = 0;
       if ($509 & 1) {
        $535 = ___cxa_find_matching_catch() | 0;
        $$3 = $535;
        $$37 = tempRet0;
       } else {
        HEAP32[$fvs + 4 >> 2] = 0;
        $512 = $fvs + 8 | 0;
        HEAP32[$512 >> 2] = 0;
        $513 = $fvs + 4 | 0;
        HEAP32[$fvs >> 2] = $513;
        $514 = HEAP32[$422 >> 2] | 0;
        do if (($514 | 0) == ($424 | 0)) label = 239; else {
         $516 = $16 + 4 | 0;
         $518 = $514;
         while (1) {
          __THREW__ = 0;
          invoke_viiii(16, $16 | 0, HEAP32[$518 + 20 >> 2] | 0, $in_object | 0, $new_vars21 | 0);
          $520 = __THREW__;
          __THREW__ = 0;
          if ($520 & 1) {
           label = 234;
           break;
          }
          __THREW__ = 0;
          invoke_vii(59, $fvs | 0, $16 | 0);
          $522 = __THREW__;
          __THREW__ = 0;
          if ($522 & 1) {
           label = 237;
           break;
          }
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($16, HEAP32[$516 >> 2] | 0);
          $526 = HEAP32[$518 + 4 >> 2] | 0;
          if (!$526) {
           $$0$i$i$i110 = $518;
           while (1) {
            $531 = HEAP32[$$0$i$i$i110 + 8 >> 2] | 0;
            if ((HEAP32[$531 >> 2] | 0) == ($$0$i$i$i110 | 0)) {
             $$cast$i$i$i111$lcssa = $531;
             break;
            } else $$0$i$i$i110 = $531;
           }
           $$01$i$i$i113 = $$cast$i$i$i111$lcssa;
          } else {
           $$0$i$i$i$i108 = $526;
           while (1) {
            $528 = HEAP32[$$0$i$i$i$i108 >> 2] | 0;
            if (!$528) {
             $$0$i$i$i$i108$lcssa = $$0$i$i$i$i108;
             break;
            } else $$0$i$i$i$i108 = $528;
           }
           $$01$i$i$i113 = $$0$i$i$i$i108$lcssa;
          }
          if (($$01$i$i$i113 | 0) == ($424 | 0)) {
           label = 238;
           break;
          } else $518 = $$01$i$i$i113;
         }
         if ((label | 0) == 234) {
          $537 = ___cxa_find_matching_catch() | 0;
          $lpad$phi295$index = $537;
          $lpad$phi295$index29 = tempRet0;
          label = 236;
          break;
         } else if ((label | 0) == 237) {
          $541 = ___cxa_find_matching_catch() | 0;
          $542 = tempRet0;
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($16, HEAP32[$516 >> 2] | 0);
          $$2 = $541;
          $$26 = $542;
          break;
         } else if ((label | 0) == 238) {
          label = 239;
          break;
         }
        } while (0);
        L343 : do if ((label | 0) == 239) {
         __THREW__ = 0;
         invoke_viiii(16, $17 | 0, HEAP32[$417 + 60 >> 2] | 0, $in_object | 0, $new_vars21 | 0);
         $546 = __THREW__;
         __THREW__ = 0;
         do if (!($546 & 1)) {
          __THREW__ = 0;
          invoke_vii(59, $fvs | 0, $17 | 0);
          $548 = __THREW__;
          __THREW__ = 0;
          if ($548 & 1) {
           $594 = ___cxa_find_matching_catch() | 0;
           $595 = tempRet0;
           __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($17, HEAP32[$17 + 4 >> 2] | 0);
           $$2 = $594;
           $$26 = $595;
           break L343;
          }
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($17, HEAP32[$17 + 4 >> 2] | 0);
          $552 = HEAP32[$422 >> 2] | 0;
          if (($552 | 0) != ($424 | 0)) {
           $557 = $552;
           while (1) {
            $554 = HEAP32[$513 >> 2] | 0;
            do if ($554) {
             $558 = HEAP32[$557 + 16 >> 2] | 0;
             $$0$ph6$i$i$i$i116 = $513;
             $$01$ph5$i$i$i$i117 = $554;
             L356 : while (1) {
              $$013$i$i$i$i119 = $$01$ph5$i$i$i$i117;
              while (1) {
               if ((HEAP32[$$013$i$i$i$i119 + 16 >> 2] | 0) >>> 0 >= $558 >>> 0) {
                $$013$i$i$i$i119$lcssa = $$013$i$i$i$i119;
                break;
               }
               $$013$i$i$i$i119 = HEAP32[$$013$i$i$i$i119 + 4 >> 2] | 0;
               if (!$$013$i$i$i$i119) {
                $$0$ph6$i$i$i$i116$lcssa474 = $$0$ph6$i$i$i$i116;
                label = 249;
                break L356;
               }
              }
              $$01$ph5$i$i$i$i117 = HEAP32[$$013$i$i$i$i119$lcssa >> 2] | 0;
              if (!$$01$ph5$i$i$i$i117) {
               $$013$i$i$i$i119$lcssa$lcssa = $$013$i$i$i$i119$lcssa;
               label = 250;
               break;
              } else $$0$ph6$i$i$i$i116 = $$013$i$i$i$i119$lcssa;
             }
             if ((label | 0) == 249) {
              label = 0;
              $$0$ph$lcssa$i$i$i$i121 = $$0$ph6$i$i$i$i116$lcssa474;
             } else if ((label | 0) == 250) {
              label = 0;
              $$0$ph$lcssa$i$i$i$i121 = $$013$i$i$i$i119$lcssa$lcssa;
             }
             if (($$0$ph$lcssa$i$i$i$i121 | 0) == ($513 | 0)) break;
             if ($558 >>> 0 < (HEAP32[$$0$ph$lcssa$i$i$i$i121 + 16 >> 2] | 0) >>> 0) break;
             $572 = HEAP32[$$0$ph$lcssa$i$i$i$i121 + 4 >> 2] | 0;
             if (!$572) {
              $$0$i$i$i$i$i127 = $$0$ph$lcssa$i$i$i$i121;
              while (1) {
               $577 = HEAP32[$$0$i$i$i$i$i127 + 8 >> 2] | 0;
               if ((HEAP32[$577 >> 2] | 0) == ($$0$i$i$i$i$i127 | 0)) {
                $$cast$i$i$i$i$i128$lcssa = $577;
                break;
               } else $$0$i$i$i$i$i127 = $577;
              }
              $$01$i$i$i$i$i130 = $$cast$i$i$i$i$i128$lcssa;
             } else {
              $$0$i$i$i$i$i$i125 = $572;
              while (1) {
               $574 = HEAP32[$$0$i$i$i$i$i$i125 >> 2] | 0;
               if (!$574) {
                $$0$i$i$i$i$i$i125$lcssa = $$0$i$i$i$i$i$i125;
                break;
               } else $$0$i$i$i$i$i$i125 = $574;
              }
              $$01$i$i$i$i$i130 = $$0$i$i$i$i$i$i125$lcssa;
             }
             if ((HEAP32[$fvs >> 2] | 0) == ($$0$ph$lcssa$i$i$i$i121 | 0)) HEAP32[$fvs >> 2] = $$01$i$i$i$i$i130;
             HEAP32[$512 >> 2] = (HEAP32[$512 >> 2] | 0) + -1;
             __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($554, $$0$ph$lcssa$i$i$i$i121);
             __ZdlPv($$0$ph$lcssa$i$i$i$i121);
            } while (0);
            $585 = HEAP32[$557 + 4 >> 2] | 0;
            if (!$585) {
             $$0$i$i$i137 = $557;
             while (1) {
              $590 = HEAP32[$$0$i$i$i137 + 8 >> 2] | 0;
              if ((HEAP32[$590 >> 2] | 0) == ($$0$i$i$i137 | 0)) {
               $$cast$i$i$i138$lcssa = $590;
               break;
              } else $$0$i$i$i137 = $590;
             }
             $$01$i$i$i140 = $$cast$i$i$i138$lcssa;
            } else {
             $$0$i$i$i$i135 = $585;
             while (1) {
              $587 = HEAP32[$$0$i$i$i$i135 >> 2] | 0;
              if (!$587) {
               $$0$i$i$i$i135$lcssa = $$0$i$i$i$i135;
               break;
              } else $$0$i$i$i$i135 = $587;
             }
             $$01$i$i$i140 = $$0$i$i$i$i135$lcssa;
            }
            if (($$01$i$i$i140 | 0) == ($424 | 0)) break; else $557 = $$01$i$i$i140;
           }
          }
          __THREW__ = 0;
          invoke_vii(59, $agg$result | 0, $fvs | 0);
          $598 = __THREW__;
          __THREW__ = 0;
          if ($598 & 1) break;
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fvs, HEAP32[$513 >> 2] | 0);
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars21, HEAP32[$471 >> 2] | 0);
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($ast_vars, HEAP32[$421 >> 2] | 0);
          break L3;
         } while (0);
         $539 = ___cxa_find_matching_catch() | 0;
         $lpad$phi295$index = $539;
         $lpad$phi295$index29 = tempRet0;
         label = 236;
        } while (0);
        if ((label | 0) == 236) {
         $$2 = $lpad$phi295$index;
         $$26 = $lpad$phi295$index29;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fvs, HEAP32[$513 >> 2] | 0);
        $$3 = $$2;
        $$37 = $$26;
       }
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars21, HEAP32[$471 >> 2] | 0);
       $$4 = $$3;
       $$48 = $$37;
      } while (0);
      if ((label | 0) == 201) {
       $$4 = $eh$lpad$body106$indexZ2D;
       $$48 = $eh$lpad$body106$index24Z2D;
      }
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($ast_vars, HEAP32[$421 >> 2] | 0);
      $$9 = $$4;
      $$913 = $$48;
      $971 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
      ___resumeException($$9 | 0);
     }
     if (!(___dynamic_cast($ast_, 35776, 36440, 0) | 0)) if (!(___dynamic_cast($ast_, 35776, 36472, 0) | 0)) if (!(___dynamic_cast($ast_, 35776, 35912, 0) | 0)) if (!(___dynamic_cast($ast_, 35776, 36504, 0) | 0)) {
      $614 = ___dynamic_cast($ast_, 35776, 36528, 0) | 0;
      if ($614) {
       $616 = $614 + 48 | 0;
       $618 = HEAP32[$614 + 52 >> 2] | 0;
       if (($618 | 0) == ($616 | 0)) break;
       $620 = $18 + 4 | 0;
       $621 = $19 + 4 | 0;
       $623 = $618;
       while (1) {
        $626 = HEAP32[$623 + 16 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(16, $18 | 0, HEAP32[$623 + 8 >> 2] | 0, $in_object | 0, $vars | 0);
        $627 = __THREW__;
        __THREW__ = 0;
        if ($627 & 1) {
         label = 11;
         break;
        }
        __THREW__ = 0;
        invoke_vii(59, $agg$result | 0, $18 | 0);
        $629 = __THREW__;
        __THREW__ = 0;
        if ($629 & 1) {
         label = 290;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($18, HEAP32[$620 >> 2] | 0);
        __THREW__ = 0;
        invoke_viiii(16, $19 | 0, $626 | 0, 1, $vars | 0);
        $632 = __THREW__;
        __THREW__ = 0;
        if ($632 & 1) {
         label = 11;
         break;
        }
        __THREW__ = 0;
        invoke_vii(59, $agg$result | 0, $19 | 0);
        $634 = __THREW__;
        __THREW__ = 0;
        if ($634 & 1) {
         label = 291;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($19, HEAP32[$621 >> 2] | 0);
        $623 = HEAP32[$623 + 4 >> 2] | 0;
        if (($623 | 0) == ($616 | 0)) {
         label = 424;
         break;
        }
       }
       if ((label | 0) == 11) {
        $58 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body$index8Z2D = tempRet0;
        $eh$lpad$body$indexZ2D = $58;
        break L1;
       } else if ((label | 0) == 290) {
        $640 = ___cxa_find_matching_catch() | 0;
        $641 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($18, HEAP32[$620 >> 2] | 0);
        $$9 = $640;
        $$913 = $641;
        $971 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
        ___resumeException($$9 | 0);
       } else if ((label | 0) == 291) {
        $643 = ___cxa_find_matching_catch() | 0;
        $644 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($19, HEAP32[$621 >> 2] | 0);
        $$9 = $643;
        $$913 = $644;
        $971 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
        ___resumeException($$9 | 0);
       } else if ((label | 0) == 424) break;
      }
      $646 = ___dynamic_cast($ast_, 35776, 36624, 0) | 0;
      if (!$646) {
       if (___dynamic_cast($ast_, 35776, 36680, 0) | 0) {
        if ($in_object) break;
        $789 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_viii(3, $23 | 0, 38384, 36);
        $790 = __THREW__;
        __THREW__ = 0;
        L524 : do if ($790 & 1) {
         $804 = ___cxa_find_matching_catch() | 0;
         $$610261 = tempRet0;
         $$6262 = $804;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $789 | 0, $ast_ + 4 | 0);
         $793 = __THREW__;
         __THREW__ = 0;
         do if ($793 & 1) $$018 = 1; else {
          $795 = $789 + 12 | 0;
          $796 = $ast_ + 16 | 0;
          HEAP32[$795 + 0 >> 2] = HEAP32[$796 + 0 >> 2];
          HEAP32[$795 + 4 >> 2] = HEAP32[$796 + 4 >> 2];
          HEAP32[$795 + 8 >> 2] = HEAP32[$796 + 8 >> 2];
          HEAP32[$795 + 12 >> 2] = HEAP32[$796 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $789 + 28 | 0, $23 | 0);
          $798 = __THREW__;
          __THREW__ = 0;
          if ($798 & 1) {
           $800 = ___cxa_find_matching_catch() | 0;
           $801 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($789);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
           $$610261 = $801;
           $$6262 = $800;
           break L524;
          }
          __THREW__ = 0;
          invoke_viii(4, $789 | 0, 48, 176);
          $802 = __THREW__;
          __THREW__ = 0;
          if ($802 & 1) {
           $$018 = 0;
           break;
          }
         } while (0);
         $806 = ___cxa_find_matching_catch() | 0;
         $807 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
         if ($$018) {
          $$610261 = $807;
          $$6262 = $806;
          break;
         } else {
          $$9 = $806;
          $$913 = $807;
         }
         $971 = HEAP32[$29 >> 2] | 0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
         ___resumeException($$9 | 0);
        } while (0);
        ___cxa_free_exception($789 | 0);
        $$9 = $$6262;
        $$913 = $$610261;
        $971 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
        ___resumeException($$9 | 0);
       }
       if (___dynamic_cast($ast_, 35776, 36712, 0) | 0) {
        if ($in_object) break;
        $810 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_viii(3, $24 | 0, 38424, 37);
        $811 = __THREW__;
        __THREW__ = 0;
        L541 : do if ($811 & 1) {
         $825 = ___cxa_find_matching_catch() | 0;
         $$711267 = tempRet0;
         $$7268 = $825;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $810 | 0, $ast_ + 4 | 0);
         $814 = __THREW__;
         __THREW__ = 0;
         do if ($814 & 1) $$016 = 1; else {
          $816 = $810 + 12 | 0;
          $817 = $ast_ + 16 | 0;
          HEAP32[$816 + 0 >> 2] = HEAP32[$817 + 0 >> 2];
          HEAP32[$816 + 4 >> 2] = HEAP32[$817 + 4 >> 2];
          HEAP32[$816 + 8 >> 2] = HEAP32[$817 + 8 >> 2];
          HEAP32[$816 + 12 >> 2] = HEAP32[$817 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $810 + 28 | 0, $24 | 0);
          $819 = __THREW__;
          __THREW__ = 0;
          if ($819 & 1) {
           $821 = ___cxa_find_matching_catch() | 0;
           $822 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($810);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
           $$711267 = $822;
           $$7268 = $821;
           break L541;
          }
          __THREW__ = 0;
          invoke_viii(4, $810 | 0, 48, 176);
          $823 = __THREW__;
          __THREW__ = 0;
          if ($823 & 1) {
           $$016 = 0;
           break;
          }
         } while (0);
         $827 = ___cxa_find_matching_catch() | 0;
         $828 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
         if ($$016) {
          $$711267 = $828;
          $$7268 = $827;
          break;
         } else {
          $$9 = $827;
          $$913 = $828;
         }
         $971 = HEAP32[$29 >> 2] | 0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
         ___resumeException($$9 | 0);
        } while (0);
        ___cxa_free_exception($810 | 0);
        $$9 = $$7268;
        $$913 = $$711267;
        $971 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
        ___resumeException($$9 | 0);
       }
       $829 = ___dynamic_cast($ast_, 35776, 36744, 0) | 0;
       if ($829) {
        __THREW__ = 0;
        invoke_viiii(16, $25 | 0, HEAP32[$829 + 52 >> 2] | 0, $in_object | 0, $vars | 0);
        $833 = __THREW__;
        __THREW__ = 0;
        if ($833 & 1) {
         label = 14;
         break L1;
        }
        __THREW__ = 0;
        invoke_vii(59, $agg$result | 0, $25 | 0);
        $835 = __THREW__;
        __THREW__ = 0;
        if (!($835 & 1)) {
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($25, HEAP32[$25 + 4 >> 2] | 0);
         break;
        }
        $839 = ___cxa_find_matching_catch() | 0;
        $840 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($25, HEAP32[$25 + 4 >> 2] | 0);
        $$9 = $839;
        $$913 = $840;
        $971 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
        ___resumeException($$9 | 0);
       }
       $843 = ___dynamic_cast($ast_, 35776, 36768, 0) | 0;
       if (!$843) {
        label = 414;
        break L1;
       }
       $845 = $843 + 48 | 0;
       $846 = $vars + 4 | 0;
       $847 = HEAP32[$846 >> 2] | 0;
       do if ($847) {
        $849 = HEAP32[$845 >> 2] | 0;
        $$0$ph6$i$i$i148 = $846;
        $$01$ph5$i$i$i149 = $847;
        L566 : while (1) {
         $$013$i$i$i151 = $$01$ph5$i$i$i149;
         while (1) {
          if ((HEAP32[$$013$i$i$i151 + 16 >> 2] | 0) >>> 0 >= $849 >>> 0) {
           $$013$i$i$i151$lcssa = $$013$i$i$i151;
           break;
          }
          $$013$i$i$i151 = HEAP32[$$013$i$i$i151 + 4 >> 2] | 0;
          if (!$$013$i$i$i151) {
           $$0$ph6$i$i$i148$lcssa467 = $$0$ph6$i$i$i148;
           label = 390;
           break L566;
          }
         }
         $$01$ph5$i$i$i149 = HEAP32[$$013$i$i$i151$lcssa >> 2] | 0;
         if (!$$01$ph5$i$i$i149) {
          $$013$i$i$i151$lcssa$lcssa = $$013$i$i$i151$lcssa;
          label = 391;
          break;
         } else $$0$ph6$i$i$i148 = $$013$i$i$i151$lcssa;
        }
        if ((label | 0) == 390) $$0$ph$lcssa$i$i$i153 = $$0$ph6$i$i$i148$lcssa467; else if ((label | 0) == 391) $$0$ph$lcssa$i$i$i153 = $$013$i$i$i151$lcssa$lcssa;
        if (($$0$ph$lcssa$i$i$i153 | 0) == ($846 | 0)) break;
        if ($849 >>> 0 < (HEAP32[$$0$ph$lcssa$i$i$i153 + 16 >> 2] | 0) >>> 0) break;
        if (HEAP32[$29 >> 2] | 0) break L3;
        __THREW__ = 0;
        $902 = invoke_ii(67, 20) | 0;
        $903 = __THREW__;
        __THREW__ = 0;
        if ($903 & 1) {
         label = 14;
         break L1;
        }
        HEAP32[$902 + 16 >> 2] = HEAP32[$845 >> 2];
        HEAP32[$902 >> 2] = 0;
        HEAP32[$902 + 4 >> 2] = 0;
        HEAP32[$902 + 8 >> 2] = $29;
        HEAP32[$29 >> 2] = $902;
        $910 = HEAP32[HEAP32[$agg$result >> 2] >> 2] | 0;
        if (!$910) $913 = $902; else {
         HEAP32[$agg$result >> 2] = $910;
         $913 = HEAP32[$29 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$27 >> 2] | 0, $913);
        HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
        break L3;
       } while (0);
       $862 = ___cxa_allocate_exception(40) | 0;
       $863 = HEAP32[$845 >> 2] | 0;
       HEAP32[$26 + 0 >> 2] = 0;
       HEAP32[$26 + 4 >> 2] = 0;
       HEAP32[$26 + 8 >> 2] = 0;
       $864 = HEAP8[$863 >> 0] | 0;
       if (!($864 & 1)) $872 = ($864 & 255) >>> 1; else $872 = HEAP32[$863 + 4 >> 2] | 0;
       __THREW__ = 0;
       invoke_viiii(14, $26 | 0, 38464, 18, $872 + 18 | 0);
       $873 = __THREW__;
       __THREW__ = 0;
       L588 : do if ($873 & 1) label = 406; else {
        if (!(HEAP8[$863 >> 0] & 1)) $881 = $863 + 1 | 0; else $881 = HEAP32[$863 + 8 >> 2] | 0;
        __THREW__ = 0;
        invoke_iiii(33, $26 | 0, $881 | 0, $872 | 0) | 0;
        $882 = __THREW__;
        __THREW__ = 0;
        if ($882 & 1) {
         label = 406;
         break;
        }
        __THREW__ = 0;
        invoke_vii(40, $862 | 0, $843 + 4 | 0);
        $885 = __THREW__;
        __THREW__ = 0;
        do if ($885 & 1) $$02 = 1; else {
         $887 = $862 + 12 | 0;
         $888 = $843 + 16 | 0;
         HEAP32[$887 + 0 >> 2] = HEAP32[$888 + 0 >> 2];
         HEAP32[$887 + 4 >> 2] = HEAP32[$888 + 4 >> 2];
         HEAP32[$887 + 8 >> 2] = HEAP32[$888 + 8 >> 2];
         HEAP32[$887 + 12 >> 2] = HEAP32[$888 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $862 + 28 | 0, $26 | 0);
         $890 = __THREW__;
         __THREW__ = 0;
         if ($890 & 1) {
          $892 = ___cxa_find_matching_catch() | 0;
          $893 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($862);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
          $$812275 = $893;
          $$8276 = $892;
          break L588;
         }
         __THREW__ = 0;
         invoke_viii(4, $862 | 0, 48, 176);
         $894 = __THREW__;
         __THREW__ = 0;
         if ($894 & 1) {
          $$02 = 0;
          break;
         }
        } while (0);
        $898 = ___cxa_find_matching_catch() | 0;
        $899 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
        if ($$02) {
         $$812275 = $899;
         $$8276 = $898;
         break;
        } else {
         $$9 = $898;
         $$913 = $899;
        }
        $971 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
        ___resumeException($$9 | 0);
       } while (0);
       if ((label | 0) == 406) {
        $896 = ___cxa_find_matching_catch() | 0;
        $897 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
        $$812275 = $897;
        $$8276 = $896;
       }
       ___cxa_free_exception($862 | 0);
       $$9 = $$8276;
       $$913 = $$812275;
       $971 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
       ___resumeException($$9 | 0);
      } else {
       $648 = $new_vars35 + 4 | 0;
       HEAP32[$648 >> 2] = 0;
       $649 = $new_vars35 + 8 | 0;
       HEAP32[$649 >> 2] = 0;
       $650 = $new_vars35 + 4 | 0;
       HEAP32[$new_vars35 >> 2] = $650;
       $651 = HEAP32[$vars >> 2] | 0;
       $652 = $vars + 4 | 0;
       do if (($651 | 0) == ($652 | 0)) {
        $$pre$phi403Z2D = $650;
        $972 = $$byval_copy34;
        $973 = $646 + 56 | 0;
        label = 320;
       } else {
        $656 = $651;
        $676 = $651;
        while (1) {
         $655 = $656 + 16 | 0;
         HEAP32[$0 >> 2] = $650;
         HEAP32[$$byval_copy34 + 0 >> 2] = HEAP32[$0 + 0 >> 2];
         $657 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($new_vars35, $$byval_copy34, $__parent$i$i$i156, $655) | 0;
         if (!(HEAP32[$657 >> 2] | 0)) {
          __THREW__ = 0;
          $660 = invoke_ii(67, 20) | 0;
          $661 = __THREW__;
          __THREW__ = 0;
          if ($661 & 1) {
           label = 309;
           break;
          }
          HEAP32[$660 + 16 >> 2] = HEAP32[$655 >> 2];
          $665 = HEAP32[$__parent$i$i$i156 >> 2] | 0;
          HEAP32[$660 >> 2] = 0;
          HEAP32[$660 + 4 >> 2] = 0;
          HEAP32[$660 + 8 >> 2] = $665;
          HEAP32[$657 >> 2] = $660;
          $669 = HEAP32[HEAP32[$new_vars35 >> 2] >> 2] | 0;
          if (!$669) $672 = $660; else {
           HEAP32[$new_vars35 >> 2] = $669;
           $672 = HEAP32[$657 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$648 >> 2] | 0, $672);
          HEAP32[$649 >> 2] = (HEAP32[$649 >> 2] | 0) + 1;
         }
         $677 = HEAP32[$676 + 4 >> 2] | 0;
         if (!$677) {
          $$0$i$i$i$i164 = $676;
          while (1) {
           $682 = HEAP32[$$0$i$i$i$i164 + 8 >> 2] | 0;
           if ((HEAP32[$682 >> 2] | 0) == ($$0$i$i$i$i164 | 0)) {
            $$cast$i$i$i$i165$lcssa = $682;
            break;
           } else $$0$i$i$i$i164 = $682;
          }
          $$01$i$i$i$i167 = $$cast$i$i$i$i165$lcssa;
         } else {
          $$0$i$i$i$i$i162 = $677;
          while (1) {
           $679 = HEAP32[$$0$i$i$i$i$i162 >> 2] | 0;
           if (!$679) {
            $$0$i$i$i$i$i162$lcssa = $$0$i$i$i$i$i162;
            break;
           } else $$0$i$i$i$i$i162 = $679;
          }
          $$01$i$i$i$i167 = $$0$i$i$i$i$i162$lcssa;
         }
         if (($$01$i$i$i$i167 | 0) == ($652 | 0)) break; else {
          $656 = $$01$i$i$i$i167;
          $676 = $$01$i$i$i$i167;
         }
        }
        if ((label | 0) == 309) {
         $686 = ___cxa_find_matching_catch() | 0;
         $687 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars35, HEAP32[$650 >> 2] | 0);
         $eh$lpad$body$index8Z2D = $687;
         $eh$lpad$body$indexZ2D = $686;
         break L1;
        }
        $$pre = HEAP32[$650 >> 2] | 0;
        $689 = $646 + 56 | 0;
        if (!$$pre) {
         $$pre$phi403Z2D = $650;
         $972 = $$byval_copy34;
         $973 = $689;
         label = 320;
         break;
        }
        $691 = HEAP32[$689 >> 2] | 0;
        $__nd$0$i$i$i175 = $$pre;
        while (1) {
         $693 = HEAP32[$__nd$0$i$i$i175 + 16 >> 2] | 0;
         if ($691 >>> 0 < $693 >>> 0) {
          $695 = HEAP32[$__nd$0$i$i$i175 >> 2] | 0;
          if (!$695) {
           $$lcssa472 = $__nd$0$i$i$i175;
           $__nd$0$i$i$i175$lcssa471 = $__nd$0$i$i$i175;
           label = 314;
           break;
          } else $__nd$0$be$in$i$i$i176 = $695;
         } else {
          if ($693 >>> 0 >= $691 >>> 0) {
           $__nd$0$i$i$i175$lcssa = $__nd$0$i$i$i175;
           label = 319;
           break;
          }
          $698 = $__nd$0$i$i$i175 + 4 | 0;
          $699 = HEAP32[$698 >> 2] | 0;
          if (!$699) {
           $$lcssa = $698;
           $__nd$0$i$i$i175$lcssa470 = $__nd$0$i$i$i175;
           label = 318;
           break;
          } else $__nd$0$be$in$i$i$i176 = $699;
         }
         $__nd$0$i$i$i175 = $__nd$0$be$in$i$i$i176;
        }
        if ((label | 0) == 314) {
         HEAP32[$$byval_copy34 >> 2] = $__nd$0$i$i$i175$lcssa471;
         $$0$i$i$i179 = $$lcssa472;
         $$pre$phi402Z2D = $650;
         $708 = $689;
         $711 = $__nd$0$i$i$i175$lcssa471;
         $974 = $$byval_copy34;
         break;
        } else if ((label | 0) == 318) {
         HEAP32[$$byval_copy34 >> 2] = $__nd$0$i$i$i175$lcssa470;
         $$0$i$i$i179 = $$lcssa;
         $$pre$phi402Z2D = $650;
         $708 = $689;
         $711 = $__nd$0$i$i$i175$lcssa470;
         $974 = $$byval_copy34;
         break;
        } else if ((label | 0) == 319) {
         HEAP32[$$byval_copy34 >> 2] = $__nd$0$i$i$i175$lcssa;
         $$0$i$i$i179 = $$byval_copy34;
         $$pre$phi402Z2D = $650;
         $708 = $689;
         $711 = $__nd$0$i$i$i175$lcssa;
         $974 = $$byval_copy34;
         break;
        }
       } while (0);
       if ((label | 0) == 320) {
        HEAP32[$$byval_copy34 >> 2] = $650;
        $$0$i$i$i179 = $650;
        $$pre$phi402Z2D = $$pre$phi403Z2D;
        $708 = $973;
        $711 = $650;
        $974 = $972;
       }
       do if (!(HEAP32[$$0$i$i$i179 >> 2] | 0)) {
        __THREW__ = 0;
        $703 = invoke_ii(67, 20) | 0;
        $704 = __THREW__;
        __THREW__ = 0;
        if ($704 & 1) {
         label = 353;
         break;
        }
        HEAP32[$703 + 16 >> 2] = HEAP32[$708 >> 2];
        HEAP32[$703 >> 2] = 0;
        HEAP32[$703 + 4 >> 2] = 0;
        HEAP32[$703 + 8 >> 2] = $711;
        HEAP32[$$0$i$i$i179 >> 2] = $703;
        $713 = HEAP32[HEAP32[$new_vars35 >> 2] >> 2] | 0;
        if (!$713) $716 = $703; else {
         HEAP32[$new_vars35 >> 2] = $713;
         $716 = HEAP32[$$0$i$i$i179 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$648 >> 2] | 0, $716);
        HEAP32[$649 >> 2] = (HEAP32[$649 >> 2] | 0) + 1;
        label = 326;
       } else label = 326; while (0);
       do if ((label | 0) == 326) {
        __THREW__ = 0;
        invoke_viiii(16, $20 | 0, HEAP32[$646 + 48 >> 2] | 0, 0, $new_vars35 | 0);
        $721 = __THREW__;
        __THREW__ = 0;
        if ($721 & 1) {
         label = 353;
         break;
        }
        __THREW__ = 0;
        invoke_vii(59, $agg$result | 0, $20 | 0);
        $723 = __THREW__;
        __THREW__ = 0;
        if ($723 & 1) {
         $774 = ___cxa_find_matching_catch() | 0;
         $775 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($20, HEAP32[$20 + 4 >> 2] | 0);
         $$5 = $774;
         $$59 = $775;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($20, HEAP32[$20 + 4 >> 2] | 0);
        __THREW__ = 0;
        invoke_viiii(16, $21 | 0, HEAP32[$646 + 52 >> 2] | 0, 1, $new_vars35 | 0);
        $729 = __THREW__;
        __THREW__ = 0;
        if ($729 & 1) {
         label = 353;
         break;
        }
        __THREW__ = 0;
        invoke_vii(59, $agg$result | 0, $21 | 0);
        $731 = __THREW__;
        __THREW__ = 0;
        if ($731 & 1) {
         $778 = ___cxa_find_matching_catch() | 0;
         $779 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($21, HEAP32[$21 + 4 >> 2] | 0);
         $$5 = $778;
         $$59 = $779;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($21, HEAP32[$21 + 4 >> 2] | 0);
        $735 = HEAP32[$29 >> 2] | 0;
        do if ($735) {
         $737 = HEAP32[$708 >> 2] | 0;
         $$0$ph6$i$i$i$i187 = $29;
         $$01$ph5$i$i$i$i188 = $735;
         L486 : while (1) {
          $$013$i$i$i$i190 = $$01$ph5$i$i$i$i188;
          while (1) {
           if ((HEAP32[$$013$i$i$i$i190 + 16 >> 2] | 0) >>> 0 >= $737 >>> 0) {
            $$013$i$i$i$i190$lcssa = $$013$i$i$i$i190;
            break;
           }
           $$013$i$i$i$i190 = HEAP32[$$013$i$i$i$i190 + 4 >> 2] | 0;
           if (!$$013$i$i$i$i190) {
            $$0$ph6$i$i$i$i187$lcssa469 = $$0$ph6$i$i$i$i187;
            label = 336;
            break L486;
           }
          }
          $$01$ph5$i$i$i$i188 = HEAP32[$$013$i$i$i$i190$lcssa >> 2] | 0;
          if (!$$01$ph5$i$i$i$i188) {
           $$013$i$i$i$i190$lcssa$lcssa = $$013$i$i$i$i190$lcssa;
           label = 337;
           break;
          } else $$0$ph6$i$i$i$i187 = $$013$i$i$i$i190$lcssa;
         }
         if ((label | 0) == 336) $$0$ph$lcssa$i$i$i$i192 = $$0$ph6$i$i$i$i187$lcssa469; else if ((label | 0) == 337) $$0$ph$lcssa$i$i$i$i192 = $$013$i$i$i$i190$lcssa$lcssa;
         if (($$0$ph$lcssa$i$i$i$i192 | 0) == ($29 | 0)) break;
         if ($737 >>> 0 < (HEAP32[$$0$ph$lcssa$i$i$i$i192 + 16 >> 2] | 0) >>> 0) break;
         $751 = HEAP32[$$0$ph$lcssa$i$i$i$i192 + 4 >> 2] | 0;
         if (!$751) {
          $$0$i$i$i$i$i198 = $$0$ph$lcssa$i$i$i$i192;
          while (1) {
           $756 = HEAP32[$$0$i$i$i$i$i198 + 8 >> 2] | 0;
           if ((HEAP32[$756 >> 2] | 0) == ($$0$i$i$i$i$i198 | 0)) {
            $$cast$i$i$i$i$i199$lcssa = $756;
            break;
           } else $$0$i$i$i$i$i198 = $756;
          }
          $$01$i$i$i$i$i201 = $$cast$i$i$i$i$i199$lcssa;
         } else {
          $$0$i$i$i$i$i$i196 = $751;
          while (1) {
           $753 = HEAP32[$$0$i$i$i$i$i$i196 >> 2] | 0;
           if (!$753) {
            $$0$i$i$i$i$i$i196$lcssa = $$0$i$i$i$i$i$i196;
            break;
           } else $$0$i$i$i$i$i$i196 = $753;
          }
          $$01$i$i$i$i$i201 = $$0$i$i$i$i$i$i196$lcssa;
         }
         if ((HEAP32[$agg$result >> 2] | 0) == ($$0$ph$lcssa$i$i$i$i192 | 0)) HEAP32[$agg$result >> 2] = $$01$i$i$i$i$i201;
         HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + -1;
         __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($735, $$0$ph$lcssa$i$i$i$i192);
         __ZdlPv($$0$ph$lcssa$i$i$i$i192);
        } while (0);
        __THREW__ = 0;
        invoke_viiii(16, $22 | 0, HEAP32[$646 + 60 >> 2] | 0, $in_object | 0, $vars | 0);
        $765 = __THREW__;
        __THREW__ = 0;
        if ($765 & 1) {
         label = 353;
         break;
        }
        __THREW__ = 0;
        invoke_vii(59, $agg$result | 0, $22 | 0);
        $767 = __THREW__;
        __THREW__ = 0;
        if ($767 & 1) {
         $782 = ___cxa_find_matching_catch() | 0;
         $783 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($22, HEAP32[$22 + 4 >> 2] | 0);
         $$5 = $782;
         $$59 = $783;
         break;
        } else {
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($22, HEAP32[$22 + 4 >> 2] | 0);
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars35, HEAP32[$$pre$phi402Z2D >> 2] | 0);
         break L3;
        }
       } while (0);
       if ((label | 0) == 353) {
        $772 = ___cxa_find_matching_catch() | 0;
        $$5 = $772;
        $$59 = tempRet0;
       }
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars35, HEAP32[$$pre$phi402Z2D >> 2] | 0);
       $$9 = $$5;
       $$913 = $$59;
       $971 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
       ___resumeException($$9 | 0);
      }
     }
    }
   }
  } else {
   __THREW__ = 0;
   invoke_viiii(16, $4 | 0, HEAP32[$31 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
   $35 = __THREW__;
   __THREW__ = 0;
   if ($35 & 1) {
    label = 14;
    break L1;
   }
   __THREW__ = 0;
   invoke_vii(59, $agg$result | 0, $4 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if ($37 & 1) {
    $66 = ___cxa_find_matching_catch() | 0;
    $67 = tempRet0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$4 + 4 >> 2] | 0);
    $$9 = $66;
    $$913 = $67;
    $971 = HEAP32[$29 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
    ___resumeException($$9 | 0);
   }
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$4 + 4 >> 2] | 0);
   $42 = HEAP32[$31 + 52 >> 2] | 0;
   $44 = HEAP32[$31 + 56 >> 2] | 0;
   if (($42 | 0) != ($44 | 0)) {
    $46 = $5 + 4 | 0;
    $48 = $42;
    while (1) {
     __THREW__ = 0;
     invoke_viiii(16, $5 | 0, HEAP32[$48 >> 2] | 0, $in_object | 0, $vars | 0);
     $49 = __THREW__;
     __THREW__ = 0;
     if ($49 & 1) {
      label = 13;
      break;
     }
     __THREW__ = 0;
     invoke_vii(59, $agg$result | 0, $5 | 0);
     $51 = __THREW__;
     __THREW__ = 0;
     if ($51 & 1) {
      label = 17;
      break;
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($5, HEAP32[$46 >> 2] | 0);
     $48 = $48 + 4 | 0;
     if (($48 | 0) == ($44 | 0)) {
      label = 426;
      break;
     }
    }
    if ((label | 0) == 13) {
     $62 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index8Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $62;
     break L1;
    } else if ((label | 0) == 17) {
     $70 = ___cxa_find_matching_catch() | 0;
     $71 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($5, HEAP32[$46 >> 2] | 0);
     $$9 = $70;
     $$913 = $71;
     $971 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
     ___resumeException($$9 | 0);
    } else if ((label | 0) == 426) break;
   }
  } while (0);
  $945 = HEAP32[$agg$result >> 2] | 0;
  if (($945 | 0) == ($29 | 0)) {
   STACKTOP = sp;
   return;
  }
  $947 = $ast_ + 40 | 0;
  $948 = $ast_ + 44 | 0;
  $949 = $ast_ + 36 | 0;
  $951 = $945;
  while (1) {
   $952 = HEAP32[$951 + 16 >> 2] | 0;
   HEAP32[$id >> 2] = $952;
   $953 = HEAP32[$947 >> 2] | 0;
   if (($953 | 0) == (HEAP32[$948 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_vii(56, $949 | 0, $id | 0);
    $959 = __THREW__;
    __THREW__ = 0;
    if ($959 & 1) {
     label = 10;
     break;
    }
   } else {
    if (!$953) $958 = 0; else {
     HEAP32[$953 >> 2] = $952;
     $958 = HEAP32[$947 >> 2] | 0;
    }
    HEAP32[$947 >> 2] = $958 + 4;
   }
   $962 = HEAP32[$951 + 4 >> 2] | 0;
   if (!$962) {
    $$0$i$i = $951;
    while (1) {
     $967 = HEAP32[$$0$i$i + 8 >> 2] | 0;
     if ((HEAP32[$967 >> 2] | 0) == ($$0$i$i | 0)) {
      $$cast$i$i$lcssa = $967;
      break;
     } else $$0$i$i = $967;
    }
    $$01$i$i = $$cast$i$i$lcssa;
   } else {
    $$0$i$i$i = $962;
    while (1) {
     $964 = HEAP32[$$0$i$i$i >> 2] | 0;
     if (!$964) {
      $$0$i$i$i$lcssa = $$0$i$i$i;
      break;
     } else $$0$i$i$i = $964;
    }
    $$01$i$i = $$0$i$i$i$lcssa;
   }
   if (($$01$i$i | 0) == ($29 | 0)) break; else $951 = $$01$i$i;
  }
  if ((label | 0) == 10) {
   $56 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index8Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $56;
   break;
  }
  STACKTOP = sp;
  return;
 } while (0);
 do if ((label | 0) == 414) {
  __THREW__ = 0;
  $916 = invoke_iiii(25, 45984, 39728, 29) | 0;
  $917 = __THREW__;
  __THREW__ = 0;
  if ($917 & 1) label = 14; else {
   __THREW__ = 0;
   $919 = invoke_iii(26, $916 | 0, $ast_ | 0) | 0;
   $920 = __THREW__;
   __THREW__ = 0;
   if ($920 & 1) label = 14; else {
    __THREW__ = 0;
    invoke_vii(47, $2 | 0, $919 + (HEAP32[(HEAP32[$919 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $926 = __THREW__;
    __THREW__ = 0;
    if ($926 & 1) label = 14; else {
     __THREW__ = 0;
     $928 = invoke_iii(22, $2 | 0, 50208) | 0;
     $929 = __THREW__;
     __THREW__ = 0;
     if (!($929 & 1)) {
      __THREW__ = 0;
      $934 = invoke_iii(HEAP32[(HEAP32[$928 >> 2] | 0) + 28 >> 2] | 0, $928 | 0, 10) | 0;
      $935 = __THREW__;
      __THREW__ = 0;
      if (!($935 & 1)) {
       __ZNSt3__16localeD2Ev($2);
       __THREW__ = 0;
       invoke_iii(25, $919 | 0, $934 | 0) | 0;
       $939 = __THREW__;
       __THREW__ = 0;
       if ($939 & 1) {
        label = 14;
        break;
       }
       __THREW__ = 0;
       invoke_ii(68, $919 | 0) | 0;
       $941 = __THREW__;
       __THREW__ = 0;
       if ($941 & 1) {
        label = 14;
        break;
       }
       __THREW__ = 0;
       invoke_v(3);
       $943 = __THREW__;
       __THREW__ = 0;
       if ($943 & 1) {
        label = 14;
        break;
       }
      }
     }
     $937 = ___cxa_find_matching_catch() | 0;
     $938 = tempRet0;
     __ZNSt3__16localeD2Ev($2);
     $eh$lpad$body$index8Z2D = $938;
     $eh$lpad$body$indexZ2D = $937;
    }
   }
  }
 } while (0);
 if ((label | 0) == 14) {
  $64 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index8Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $64;
 }
 $$9 = $eh$lpad$body$indexZ2D;
 $$913 = $eh$lpad$body$index8Z2D;
 $971 = HEAP32[$29 >> 2] | 0;
 __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $971);
 ___resumeException($$9 | 0);
}

function __Z11jsonnet_lexRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKc($agg$result, $filename, $input) {
 $agg$result = $agg$result | 0;
 $filename = $filename | 0;
 $input = $input | 0;
 var $$0 = 0, $$0$i = 0, $$0$i119 = 0, $$0$i153 = 0, $$0$i195 = 0, $$01 = 0, $$01$i = 0, $$01$i118 = 0, $$01$i152 = 0, $$01$i194 = 0, $$013 = 0, $$015230 = 0, $$03 = 0, $$036 = 0, $$038 = 0, $$040 = 0, $$042 = 0, $$044 = 0, $$046 = 0, $$048 = 0, $$05 = 0, $$07231 = 0, $$1025264 = 0, $$10265 = 0, $$1126268 = 0, $$11269 = 0, $$116234 = 0, $$1227272 = 0, $$129273 = 0, $$13 = 0, $$1328 = 0, $$1410277 = 0, $$1429276 = 0, $$15 = 0, $$1530 = 0, $$1611 = 0, $$1631 = 0, $$17 = 0, $$1732 = 0, $$1812 = 0, $$18235 = 0, $$1833 = 0, $$19 = 0, $$1934 = 0, $$20 = 0, $$2035 = 0, $$217238 = 0, $$2239 = 0, $$318242 = 0, $$3243 = 0, $$4 = 0, $$419 = 0, $$520246 = 0, $$5247 = 0, $$621250 = 0, $$6251 = 0, $$722254 = 0, $$7255 = 0, $$8 = 0, $$823 = 0, $$924260 = 0, $$9261 = 0, $$lcssa = 0, $$lcssa531 = 0, $$lcssa627 = 0, $$lcssa628 = 0, $$lcssa629 = 0, $$lcssa630 = 0, $$lcssa631 = 0, $$lcssa633 = 0, $$lcssa634 = 0, $$lcssa636 = 0, $$lcssa637 = 0, $$lcssa640 = 0, $$lcssa641 = 0, $$ph = 0, $$ph573 = 0, $$ph607 = 0, $$ph608 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $106 = 0, $11 = 0, $111 = 0, $112 = 0, $117 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $123 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $131 = 0, $133 = 0, $135 = 0, $137 = 0, $139 = 0, $14 = 0, $141 = 0, $143 = 0, $145 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $153 = 0, $156 = 0, $16 = 0, $161 = 0, $162 = 0, $167 = 0, $17 = 0, $172 = 0, $173 = 0, $178 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $184 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $191 = 0, $194 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $205 = 0, $21 = 0, $210 = 0, $211 = 0, $216 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $222 = 0, $224 = 0, $225 = 0, $23 = 0, $232 = 0, $233 = 0, $234 = 0, $237 = 0, $24 = 0, $241 = 0, $243 = 0, $245 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $251 = 0, $253 = 0, $254 = 0, $256 = 0, $257 = 0, $259 = 0, $26 = 0, $260 = 0, $262 = 0, $264 = 0, $265 = 0, $267 = 0, $27 = 0, $270 = 0, $275 = 0, $276 = 0, $28 = 0, $281 = 0, $286 = 0, $287 = 0, $29 = 0, $292 = 0, $294 = 0, $295 = 0, $296 = 0, $298 = 0, $3 = 0, $300 = 0, $302 = 0, $303 = 0, $305 = 0, $306 = 0, $308 = 0, $309 = 0, $311 = 0, $312 = 0, $314 = 0, $317 = 0, $32 = 0, $322 = 0, $323 = 0, $328 = 0, $33 = 0, $333 = 0, $334 = 0, $339 = 0, $34 = 0, $341 = 0, $342 = 0, $343 = 0, $345 = 0, $347 = 0, $348 = 0, $35 = 0, $351 = 0, $352 = 0, $354 = 0, $357 = 0, $36 = 0, $362 = 0, $363 = 0, $368 = 0, $37 = 0, $373 = 0, $374 = 0, $379 = 0, $38 = 0, $381 = 0, $382 = 0, $383 = 0, $385 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $394 = 0, $398 = 0, $4 = 0, $40 = 0, $400 = 0, $402 = 0, $404 = 0, $405 = 0, $406 = 0, $408 = 0, $41 = 0, $410 = 0, $411 = 0, $415 = 0, $416 = 0, $418 = 0, $42 = 0, $420 = 0, $421 = 0, $423 = 0, $426 = 0, $43 = 0, $431 = 0, $432 = 0, $437 = 0, $44 = 0, $442 = 0, $443 = 0, $448 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $454 = 0, $456 = 0, $458 = 0, $459 = 0, $46 = 0, $462 = 0, $464 = 0, $47 = 0, $470 = 0, $472 = 0, $48 = 0, $481 = 0, $484 = 0, $488 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $521 = 0, $526 = 0, $527 = 0, $529 = 0, $53 = 0, $530 = 0, $536 = 0, $537 = 0, $54 = 0, $542 = 0, $543 = 0, $544 = 0, $546 = 0, $549 = 0, $55 = 0, $554 = 0, $555 = 0, $560 = 0, $565 = 0, $566 = 0, $571 = 0, $573 = 0, $574 = 0, $575 = 0, $577 = 0, $579 = 0, $580 = 0, $59 = 0, $591 = 0, $593 = 0, $595 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $601 = 0, $603 = 0, $604 = 0, $605 = 0, $607 = 0, $610 = 0, $611 = 0, $613 = 0, $616 = 0, $62 = 0, $621 = 0, $622 = 0, $627 = 0, $632 = 0, $633 = 0, $638 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $650 = 0, $652 = 0, $654 = 0, $655 = 0, $657 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $665 = 0, $668 = 0, $673 = 0, $674 = 0, $679 = 0, $68 = 0, $684 = 0, $685 = 0, $690 = 0, $692 = 0, $693 = 0, $694 = 0, $696 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $704 = 0, $706 = 0, $707 = 0, $708 = 0, $710 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $718$phi = 0, $72 = 0, $722 = 0, $725 = 0, $726 = 0, $728 = 0, $731 = 0, $736 = 0, $737 = 0, $74 = 0, $742 = 0, $747 = 0, $748 = 0, $753 = 0, $755 = 0, $756 = 0, $757 = 0, $759 = 0, $76 = 0, $761 = 0, $762 = 0, $763 = 0, $769 = 0, $774 = 0, $775 = 0, $778 = 0, $78 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $788 = 0, $792 = 0, $794 = 0, $796 = 0, $798 = 0, $799 = 0, $8 = 0, $800 = 0, $802 = 0, $804 = 0, $807 = 0, $809 = 0, $810 = 0, $813 = 0, $815 = 0, $817 = 0, $818 = 0, $822 = 0, $823 = 0, $825 = 0, $827 = 0, $828 = 0, $830 = 0, $833 = 0, $838 = 0, $839 = 0, $84 = 0, $844 = 0, $849 = 0, $850 = 0, $855 = 0, $857 = 0, $858 = 0, $859 = 0, $861 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $872 = 0, $877 = 0, $878 = 0, $88 = 0, $882 = 0, $886 = 0, $888 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $901 = 0, $912 = 0, $913 = 0, $915 = 0, $916 = 0, $917 = 0, $919 = 0, $92 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $928 = 0, $930 = 0, $934 = 0, $935 = 0, $937 = 0, $938 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $953 = 0, $957 = 0, $959 = 0, $961 = 0, $962 = 0, $965 = 0, $967 = 0, $969 = 0, $985 = 0, $987 = 0, $988 = 0, $996 = 0, $998 = 0, $999 = 0, $__f$01$i$i = 0, $begin = 0, $block = 0, $c = 0, $data = 0, $digit$0 = 0, $digit$0$1 = 0, $digit$0$2 = 0, $digit$0$3 = 0, $eh$lpad$body$i$index17Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i116$index22Z2D = 0, $eh$lpad$body$i116$indexZ2D = 0, $eh$lpad$body$i150$index32Z2D = 0, $eh$lpad$body$i150$indexZ2D = 0, $eh$lpad$body$i192$index46Z2D = 0, $eh$lpad$body$i192$indexZ2D = 0, $eh$lpad$body218$index51Z2D = 0, $eh$lpad$body218$indexZ2D = 0, $eh$lpad$body226$index56Z2D = 0, $eh$lpad$body226$indexZ2D = 0, $eh$lpad$body89$index7Z2D = 0, $eh$lpad$body89$indexZ2D = 0, $i$0$i = 0, $i$0$i$lcssa = 0, $i$0$i174 = 0, $i$0$i174$lcssa = 0, $id = 0, $kind$0 = 0, $kind$1 = 0, $line_number$0$lcssa = 0, $line_number$0523 = 0, $line_number$1 = 0, $line_number$1$lcssa618 = 0, $line_number$2 = 0, $line_number$3$ph = 0, $line_number$3$ph$lcssa639 = 0, $line_number$5 = 0, $line_number$6 = 0, $line_number$7 = 0, $line_number$7$lcssa = 0, $line_start$0522 = 0, $line_start$1 = 0, $line_start$1$lcssa610 = 0, $line_start$2 = 0, $line_start$3$ph = 0, $line_start$3$ph$lcssa638 = 0, $line_start$5 = 0, $line_start$6 = 0, $lpad$phi$index = 0, $lpad$phi$index39 = 0, $lpad$phi290$index = 0, $lpad$phi290$index27 = 0, $ss = 0, $ss4 = 0, $ss8 = 0, $storemerge50 = 0, $storemerge51 = 0, $ws_chars$0 = 0, label = 0, sp = 0, $__f$01$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008 | 0;
 $0 = sp + 996 | 0;
 $1 = sp + 980 | 0;
 $2 = sp + 995 | 0;
 $3 = sp + 994 | 0;
 $4 = sp + 968 | 0;
 $5 = sp + 993 | 0;
 $6 = sp + 956 | 0;
 $7 = sp + 992 | 0;
 $8 = sp + 944 | 0;
 $c = sp + 940 | 0;
 $begin = sp;
 $data = sp + 928 | 0;
 $9 = sp + 916 | 0;
 $10 = sp + 904 | 0;
 $11 = sp + 892 | 0;
 $12 = sp + 880 | 0;
 $ss = sp + 736 | 0;
 $13 = sp + 720 | 0;
 $14 = sp + 708 | 0;
 $15 = sp + 696 | 0;
 $ss4 = sp + 552 | 0;
 $16 = sp + 536 | 0;
 $id = sp + 524 | 0;
 $17 = sp + 512 | 0;
 $block = sp + 368 | 0;
 $18 = sp + 356 | 0;
 $19 = sp + 344 | 0;
 $20 = sp + 332 | 0;
 $21 = sp + 320 | 0;
 $ss8 = sp + 176 | 0;
 $22 = sp + 164 | 0;
 $23 = sp + 120 | 0;
 $24 = sp + 92 | 0;
 $25 = sp + 48 | 0;
 $26 = sp + 36 | 0;
 $27 = sp + 8 | 0;
 HEAP32[$agg$result >> 2] = $agg$result;
 $28 = $agg$result + 4 | 0;
 HEAP32[$28 >> 2] = $agg$result;
 $29 = $agg$result + 8 | 0;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$c >> 2] = $input;
 L1 : do if (!(HEAP8[$input >> 0] | 0)) {
  $923 = 0;
  $928 = 1;
  $line_number$0$lcssa = 1;
  label = 317;
 } else {
  $32 = $begin + 4 | 0;
  $33 = $block + 64 | 0;
  $34 = $block + 8 | 0;
  $35 = $block + 12 | 0;
  $36 = $block + 4 | 0;
  $37 = $block + 64 | 0;
  $38 = $block + 136 | 0;
  $39 = $block + 140 | 0;
  $40 = $block + 44 | 0;
  $41 = $block + 60 | 0;
  $42 = $data + 1 | 0;
  $43 = $data + 8 | 0;
  $44 = $data + 4 | 0;
  $45 = $24 + 12 | 0;
  $46 = $24 + 20 | 0;
  $47 = $23 + 4 | 0;
  $48 = $23 + 16 | 0;
  $49 = $23 + 28 | 0;
  $50 = $23 + 16 | 0;
  $51 = 1;
  $53 = $input;
  $line_number$0523 = 1;
  $line_start$0522 = $input;
  L3 : while (1) {
   HEAP32[$begin >> 2] = $line_number$0523;
   HEAP32[$32 >> 2] = $51;
   HEAP32[$data + 0 >> 2] = 0;
   HEAP32[$data + 4 >> 2] = 0;
   HEAP32[$data + 8 >> 2] = 0;
   $52 = HEAP8[$53 >> 0] | 0;
   $54 = $52 << 24 >> 24;
   L5 : do switch ($54 | 0) {
   case 10:
    {
     $line_number$7 = $line_number$0523 + 1 | 0;
     $line_start$6 = $53 + 1 | 0;
     break;
    }
   case 125:
    {
     $kind$1 = 1;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
     break;
    }
   case 91:
    {
     $kind$1 = 2;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
     break;
    }
   case 34:
    {
     $$pn = $53;
     $line_number$1 = $line_number$0523;
     $line_start$1 = $line_start$0522;
     while (1) {
      $storemerge50 = $$pn + 1 | 0;
      HEAP32[$c >> 2] = $storemerge50;
      $88 = HEAP8[$storemerge50 >> 0] | 0;
      if (!($88 << 24 >> 24)) {
       label = 35;
       break L3;
      } else if ($88 << 24 >> 24 == 34) {
       $line_number$1$lcssa618 = $line_number$1;
       $line_start$1$lcssa610 = $line_start$1;
       break;
      }
      $127 = $88 << 24 >> 24;
      L13 : do if (($127 | 0) == 92) {
       $128 = $$pn + 2 | 0;
       HEAP32[$c >> 2] = $128;
       $129 = HEAP8[$128 >> 0] | 0;
       switch ($129 << 24 >> 24 | 0) {
       case 114:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 13);
         $143 = __THREW__;
         __THREW__ = 0;
         if ($143 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L13;
         }
         break;
        }
       case 116:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 9);
         $145 = __THREW__;
         __THREW__ = 0;
         if ($145 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L13;
         }
         break;
        }
       case 117:
        {
         $147 = $$pn + 3 | 0;
         HEAP32[$c >> 2] = $147;
         $148 = HEAP8[$147 >> 0] | 0;
         $149 = $148 & 255;
         if (!($148 << 24 >> 24)) {
          label = 54;
          break L3;
         } else if ($148 << 24 >> 24 == 34) {
          label = 62;
          break L3;
         }
         do if (($148 + -48 & 255) < 10) $digit$0 = $149 + -48 | 0; else {
          if (($148 + -97 & 255) < 6) {
           $digit$0 = $149 + -87 | 0;
           break;
          }
          if (($148 + -65 & 255) >= 6) {
           $$lcssa531 = $148;
           label = 76;
           break L3;
          }
          $digit$0 = $149 + -55 | 0;
         } while (0);
         $305 = HEAP8[$$pn + 4 >> 0] | 0;
         $306 = $305 & 255;
         if (!($305 << 24 >> 24)) {
          label = 54;
          break L3;
         } else if ($305 << 24 >> 24 == 34) {
          label = 62;
          break L3;
         }
         do if (($305 + -48 & 255) < 10) $digit$0$1 = $306 + -48 | 0; else {
          if (($305 + -97 & 255) < 6) {
           $digit$0$1 = $306 + -87 | 0;
           break;
          }
          if (($305 + -65 & 255) >= 6) {
           $$lcssa531 = $305;
           label = 76;
           break L3;
          }
          $digit$0$1 = $306 + -55 | 0;
         } while (0);
         $985 = $digit$0$1 + ($digit$0 << 4) | 0;
         $987 = HEAP8[$$pn + 5 >> 0] | 0;
         $988 = $987 & 255;
         if (!($987 << 24 >> 24)) {
          label = 54;
          break L3;
         } else if ($987 << 24 >> 24 == 34) {
          label = 62;
          break L3;
         }
         do if (($987 + -48 & 255) < 10) $digit$0$2 = $988 + -48 | 0; else {
          if (($987 + -97 & 255) < 6) {
           $digit$0$2 = $988 + -87 | 0;
           break;
          }
          if (($987 + -65 & 255) >= 6) {
           $$lcssa531 = $987;
           label = 76;
           break L3;
          }
          $digit$0$2 = $988 + -55 | 0;
         } while (0);
         $996 = $digit$0$2 + ($985 << 4) | 0;
         $998 = HEAP8[$$pn + 6 >> 0] | 0;
         $999 = $998 & 255;
         if (!($998 << 24 >> 24)) {
          label = 54;
          break L3;
         } else if ($998 << 24 >> 24 == 34) {
          label = 62;
          break L3;
         }
         do if (($998 + -48 & 255) < 10) $digit$0$3 = $999 + -48 | 0; else {
          if (($998 + -97 & 255) < 6) {
           $digit$0$3 = $999 + -87 | 0;
           break;
          }
          if (($998 + -65 & 255) >= 6) {
           $$lcssa531 = $998;
           label = 76;
           break L3;
          }
          $digit$0$3 = $999 + -55 | 0;
         } while (0);
         $308 = $digit$0$3 + ($996 << 4) | 0;
         if ($308 >>> 0 >= 128) {
          label = 100;
          break L3;
         }
         __THREW__ = 0;
         invoke_vii(44, $data | 0, $308 & 255 | 0);
         $309 = __THREW__;
         __THREW__ = 0;
         if ($309 & 1) {
          label = 20;
          break L3;
         }
         HEAP32[$c >> 2] = (HEAP32[$c >> 2] | 0) + 3;
         $line_number$2 = $line_number$1;
         $line_start$2 = $line_start$1;
         break L13;
         break;
        }
       case 0:
        {
         label = 109;
         break L3;
         break;
        }
       case 34:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, $129 | 0);
         $131 = __THREW__;
         __THREW__ = 0;
         if ($131 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L13;
         }
         break;
        }
       case 92:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, $129 | 0);
         $133 = __THREW__;
         __THREW__ = 0;
         if ($133 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L13;
         }
         break;
        }
       case 47:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, $129 | 0);
         $135 = __THREW__;
         __THREW__ = 0;
         if ($135 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L13;
         }
         break;
        }
       case 98:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 8);
         $137 = __THREW__;
         __THREW__ = 0;
         if ($137 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L13;
         }
         break;
        }
       case 102:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 12);
         $139 = __THREW__;
         __THREW__ = 0;
         if ($139 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L13;
         }
         break;
        }
       case 110:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 10);
         $141 = __THREW__;
         __THREW__ = 0;
         if ($141 & 1) {
          label = 20;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L13;
         }
         break;
        }
       default:
        {
         label = 117;
         break L3;
        }
       }
      } else if (($127 | 0) == 10) {
       __THREW__ = 0;
       invoke_vii(44, $data | 0, $88 | 0);
       $462 = __THREW__;
       __THREW__ = 0;
       if ($462 & 1) {
        label = 20;
        break L3;
       } else {
        $line_number$2 = $line_number$1 + 1 | 0;
        $line_start$2 = $$pn + 2 | 0;
       }
      } else {
       __THREW__ = 0;
       invoke_vii(44, $data | 0, $88 | 0);
       $464 = __THREW__;
       __THREW__ = 0;
       if ($464 & 1) {
        label = 20;
        break L3;
       } else {
        $line_number$2 = $line_number$1;
        $line_start$2 = $line_start$1;
       }
      } while (0);
      $$pn = HEAP32[$c >> 2] | 0;
      $line_number$1 = $line_number$2;
      $line_start$1 = $line_start$2;
     }
     $kind$1 = 14;
     $line_number$6 = $line_number$1$lcssa618;
     $line_start$5 = $line_start$1$lcssa610;
     label = 304;
     break;
    }
   case 126:
    {
     __THREW__ = 0;
     invoke_iii(19, $data | 0, 41408) | 0;
     $72 = __THREW__;
     __THREW__ = 0;
     if ($72 & 1) {
      label = 21;
      break L3;
     } else {
      $kind$1 = 13;
      $line_number$6 = $line_number$0523;
      $line_start$5 = $line_start$0522;
      label = 304;
     }
     break;
    }
   case 43:
    {
     __THREW__ = 0;
     invoke_iii(19, $data | 0, 41400) | 0;
     $74 = __THREW__;
     __THREW__ = 0;
     if ($74 & 1) {
      label = 21;
      break L3;
     } else {
      $kind$1 = 13;
      $line_number$6 = $line_number$0523;
      $line_start$5 = $line_start$0522;
      label = 304;
     }
     break;
    }
   case 45:
    {
     __THREW__ = 0;
     invoke_iii(19, $data | 0, 42248) | 0;
     $76 = __THREW__;
     __THREW__ = 0;
     if ($76 & 1) {
      label = 21;
      break L3;
     } else {
      $kind$1 = 13;
      $line_number$6 = $line_number$0523;
      $line_start$5 = $line_start$0522;
      label = 304;
     }
     break;
    }
   case 57:
   case 56:
   case 55:
   case 54:
   case 53:
   case 52:
   case 51:
   case 50:
   case 49:
   case 48:
    {
     __THREW__ = 0;
     invoke_viiii(10, $9 | 0, $c | 0, $filename | 0, $begin | 0);
     $78 = __THREW__;
     __THREW__ = 0;
     if ($78 & 1) {
      label = 21;
      break L3;
     }
     if (!(HEAP8[$data >> 0] & 1)) {
      HEAP8[$42 >> 0] = 0;
      HEAP8[$data >> 0] = 0;
     } else {
      HEAP8[HEAP32[$43 >> 2] >> 0] = 0;
      HEAP32[$44 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $data | 0, 0);
     $84 = __THREW__;
     __THREW__ = 0;
     if ($84 & 1) {
      label = 32;
      break L3;
     };
     HEAP32[$data + 0 >> 2] = HEAP32[$9 + 0 >> 2];
     HEAP32[$data + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$data + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     HEAP32[$9 + 0 >> 2] = 0;
     HEAP32[$9 + 4 >> 2] = 0;
     HEAP32[$9 + 8 >> 2] = 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     $kind$1 = 12;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
     break;
    }
   case 93:
    {
     $kind$1 = 3;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
     break;
    }
   case 58:
    {
     $kind$1 = 4;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
     break;
    }
   case 44:
    {
     $kind$1 = 5;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
     break;
    }
   case 36:
    {
     $kind$1 = 6;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
     break;
    }
   case 33:
    {
     $59 = $53 + 1 | 0;
     if ((HEAP8[$59 >> 0] | 0) == 61) {
      HEAP32[$c >> 2] = $59;
      __THREW__ = 0;
      invoke_iii(19, $data | 0, 41736) | 0;
      $62 = __THREW__;
      __THREW__ = 0;
      if ($62 & 1) {
       label = 21;
       break L3;
      } else {
       $kind$1 = 13;
       $line_number$6 = $line_number$0523;
       $line_start$5 = $line_start$0522;
       label = 304;
       break L5;
      }
     } else {
      __THREW__ = 0;
      invoke_iii(19, $data | 0, 41416) | 0;
      $70 = __THREW__;
      __THREW__ = 0;
      if ($70 & 1) {
       label = 21;
       break L3;
      } else {
       $kind$1 = 13;
       $line_number$6 = $line_number$0523;
       $line_start$5 = $line_start$0522;
       label = 304;
       break L5;
      }
     }
     break;
    }
   case 46:
    {
     $kind$1 = 7;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
     break;
    }
   case 40:
    {
     $kind$1 = 8;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
     break;
    }
   case 41:
    {
     $kind$1 = 9;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
     break;
    }
   case 59:
    {
     $kind$1 = 10;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
     break;
    }
   case 123:
    {
     $kind$1 = 0;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
     break;
    }
   case 13:
   case 9:
   case 32:
    {
     $line_number$7 = $line_number$0523;
     $line_start$6 = $line_start$0522;
     break;
    }
   default:
    {
     if (($52 + -65 & 255) >= 26) if (!($52 << 24 >> 24 == 95 | ($52 + -97 & 255) < 26)) {
      switch ($54 | 0) {
      case 35:
      case 37:
      case 47:
      case 42:
      case 62:
      case 60:
      case 61:
      case 94:
      case 124:
      case 38:
       break;
      default:
       {
        label = 278;
        break L3;
       }
      }
      if ($52 << 24 >> 24 == 35) {
       $1009 = 35;
       $530 = $53;
       while (1) {
        if ($1009 << 24 >> 24 == 0 | $1009 << 24 >> 24 == 10) {
         $$lcssa634 = $530;
         break;
        }
        $529 = $530 + 1 | 0;
        HEAP32[$c >> 2] = $529;
        $1009 = HEAP8[$529 >> 0] | 0;
        $530 = $529;
       }
       HEAP32[$c >> 2] = $$lcssa634 + -1;
       $line_number$7 = $line_number$0523;
       $line_start$6 = $line_start$0522;
       break L5;
      } else if ($52 << 24 >> 24 == 47) {
       if ((HEAP8[$53 + 1 >> 0] | 0) == 47) {
        $1011 = 47;
        $527 = $53;
        while (1) {
         if ($1011 << 24 >> 24 == 0 | $1011 << 24 >> 24 == 10) {
          $$lcssa640 = $527;
          break;
         }
         $526 = $527 + 1 | 0;
         HEAP32[$c >> 2] = $526;
         $1011 = HEAP8[$526 >> 0] | 0;
         $527 = $526;
        }
        HEAP32[$c >> 2] = $$lcssa640 + -1;
        $line_number$7 = $line_number$0523;
        $line_start$6 = $line_start$0522;
        break L5;
       }
       if ((HEAP8[$53 + 1 >> 0] | 0) == 42) {
        $$ph573 = $53 + 2 | 0;
        $line_number$3$ph = $line_number$0523;
        $line_start$3$ph = $line_start$0522;
        L109 : while (1) {
         $536 = $$ph573;
         while (1) {
          HEAP32[$c >> 2] = $536;
          $537 = HEAP8[$536 >> 0] | 0;
          if ($537 << 24 >> 24 == 42) {
           if ((HEAP8[$536 + 1 >> 0] | 0) == 47) {
            $$lcssa637 = $536;
            $line_number$3$ph$lcssa639 = $line_number$3$ph;
            $line_start$3$ph$lcssa638 = $line_start$3$ph;
            break L109;
           }
          } else if ($537 << 24 >> 24 == 10) {
           $$lcssa636 = $536;
           break;
          } else if (!($537 << 24 >> 24)) {
           label = 190;
           break L3;
          }
          $536 = $536 + 1 | 0;
         }
         $542 = $$lcssa636 + 1 | 0;
         $$ph573 = $542;
         $line_number$3$ph = $line_number$3$ph + 1 | 0;
         $line_start$3$ph = $542;
        }
        HEAP32[$c >> 2] = $$lcssa637 + 1;
        $line_number$7 = $line_number$3$ph$lcssa639;
        $line_start$6 = $line_start$3$ph$lcssa638;
        break L5;
       } else {
        $$ph607 = 47;
        label = 174;
       }
      } else if ($52 << 24 >> 24 == 124) if ((HEAP8[$53 + 1 >> 0] | 0) == 124) if ((HEAP8[$53 + 2 >> 0] | 0) == 124) if ((HEAP8[$53 + 3 >> 0] | 0) == 10) {
       HEAP32[$34 >> 2] = 752;
       HEAP32[$block >> 2] = 900;
       HEAP32[$33 >> 2] = 920;
       HEAP32[$36 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(41, $37 | 0, $35 | 0);
       $591 = __THREW__;
       __THREW__ = 0;
       if ($591 & 1) {
        label = 206;
        break L3;
       }
       HEAP32[$38 >> 2] = 0;
       HEAP32[$39 >> 2] = -1;
       HEAP32[$block >> 2] = 732;
       HEAP32[$33 >> 2] = 772;
       HEAP32[$34 >> 2] = 752;
       __THREW__ = 0;
       invoke_vi(177, $35 | 0);
       $593 = __THREW__;
       __THREW__ = 0;
       if ($593 & 1) {
        label = 207;
        break L3;
       }
       HEAP32[$35 >> 2] = 1064;
       HEAP32[$40 + 0 >> 2] = 0;
       HEAP32[$40 + 4 >> 2] = 0;
       HEAP32[$40 + 8 >> 2] = 0;
       HEAP32[$40 + 12 >> 2] = 0;
       HEAP32[$41 >> 2] = 24;
       HEAP32[$4 + 0 >> 2] = 0;
       HEAP32[$4 + 4 >> 2] = 0;
       HEAP32[$4 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(42, $35 | 0, $4 | 0);
       $595 = __THREW__;
       __THREW__ = 0;
       if ($595 & 1) {
        label = 205;
        break L3;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
       $603 = HEAP32[$c >> 2] | 0;
       $604 = $603 + 4 | 0;
       HEAP32[$c >> 2] = $604;
       $605 = $line_number$0523 + 1 | 0;
       $i$0$i = 0;
       while (1) {
        $607 = HEAP8[$603 + ($i$0$i + 4) >> 0] | 0;
        if (!($607 << 24 >> 24 == 9 | $607 << 24 >> 24 == 32)) {
         $i$0$i$lcssa = $i$0$i;
         break;
        }
        $i$0$i = $i$0$i + 1 | 0;
       }
       if (!$i$0$i$lcssa) {
        label = 215;
        break L3;
       }
       $660 = $604;
       $line_number$5 = $605;
       $ws_chars$0 = $i$0$i$lcssa;
       L130 : while (1) {
        if (($ws_chars$0 | 0) <= 0) {
         label = 229;
         break L3;
        }
        $storemerge51 = $660 + $ws_chars$0 | 0;
        while (1) {
         HEAP32[$c >> 2] = $storemerge51;
         $661 = HEAP8[$storemerge51 >> 0] | 0;
         if (!($661 << 24 >> 24)) {
          label = 233;
          break L3;
         } else if ($661 << 24 >> 24 == 10) break;
         HEAP8[$3 >> 0] = $661;
         __THREW__ = 0;
         invoke_iiii(25, $34 | 0, $3 | 0, 1) | 0;
         $700 = __THREW__;
         __THREW__ = 0;
         if ($700 & 1) {
          label = 220;
          break L3;
         }
         $storemerge51 = (HEAP32[$c >> 2] | 0) + 1 | 0;
        }
        HEAP8[$2 >> 0] = 10;
        __THREW__ = 0;
        invoke_iiii(25, $34 | 0, $2 | 0, 1) | 0;
        $704 = __THREW__;
        __THREW__ = 0;
        if ($704 & 1) {
         label = 221;
         break L3;
        }
        $706 = HEAP32[$c >> 2] | 0;
        $707 = $706 + 1 | 0;
        HEAP32[$c >> 2] = $707;
        $708 = $line_number$5 + 1 | 0;
        $i$0$i174 = 0;
        while (1) {
         $710 = HEAP8[$603 + ($i$0$i174 + 4) >> 0] | 0;
         if (!($710 << 24 >> 24 == 9 | $710 << 24 >> 24 == 32)) {
          $i$0$i174$lcssa = $i$0$i174;
          break;
         }
         $i$0$i174 = $i$0$i174 + 1 | 0;
         if ((HEAP8[$706 + $i$0$i174 >> 0] | 0) != $710 << 24 >> 24) {
          $$lcssa = $706;
          $$lcssa628 = $707;
          $$lcssa630 = $708;
          label = 248;
          break L130;
         }
        }
        if (!$i$0$i174$lcssa) {
         $$lcssa627 = $706;
         $$lcssa629 = $707;
         $$lcssa631 = $708;
         label = 249;
         break;
        } else {
         $660 = $707;
         $line_number$5 = $708;
         $ws_chars$0 = $i$0$i174$lcssa;
        }
       }
       if ((label | 0) == 248) {
        label = 0;
        $1012 = $$lcssa630;
        $1013 = $$lcssa628;
        $1014 = $$lcssa;
       } else if ((label | 0) == 249) {
        label = 0;
        $1012 = $$lcssa631;
        $1013 = $$lcssa629;
        $1014 = $$lcssa627;
       }
       $716 = $1013;
       $718 = $1014;
       while (1) {
        $715 = HEAP8[$716 >> 0] | 0;
        if ($715 << 24 >> 24 == 124) {
         $$lcssa633 = $718;
         break;
        } else if (!($715 << 24 >> 24 == 9 | $715 << 24 >> 24 == 32)) {
         label = 255;
         break L3;
        }
        $717 = $718 + 2 | 0;
        HEAP32[$c >> 2] = $717;
        $718$phi = $716;
        $716 = $717;
        $718 = $718$phi;
       }
       if ((HEAP8[$$lcssa633 + 2 >> 0] | 0) != 124) {
        label = 256;
        break L3;
       }
       $722 = $$lcssa633 + 3 | 0;
       if ((HEAP8[$722 >> 0] | 0) != 124) {
        label = 256;
        break L3;
       }
       HEAP32[$c >> 2] = $722;
       __THREW__ = 0;
       invoke_vii(43, $21 | 0, $35 | 0);
       $763 = __THREW__;
       __THREW__ = 0;
       if ($763 & 1) {
        label = 222;
        break L3;
       }
       if (!(HEAP8[$data >> 0] & 1)) {
        HEAP8[$42 >> 0] = 0;
        HEAP8[$data >> 0] = 0;
       } else {
        HEAP8[HEAP32[$43 >> 2] >> 0] = 0;
        HEAP32[$44 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $data | 0, 0);
       $769 = __THREW__;
       __THREW__ = 0;
       if ($769 & 1) {
        label = 270;
        break L3;
       };
       HEAP32[$data + 0 >> 2] = HEAP32[$21 + 0 >> 2];
       HEAP32[$data + 4 >> 2] = HEAP32[$21 + 4 >> 2];
       HEAP32[$data + 8 >> 2] = HEAP32[$21 + 8 >> 2];
       HEAP32[$21 + 0 >> 2] = 0;
       HEAP32[$21 + 4 >> 2] = 0;
       HEAP32[$21 + 8 >> 2] = 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
       HEAP32[$block >> 2] = 732;
       HEAP32[$33 >> 2] = 772;
       HEAP32[$34 >> 2] = 752;
       HEAP32[$35 >> 2] = 1064;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($35);
       __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($33);
       $kind$1 = 14;
       $line_number$6 = $1012;
       $line_start$5 = $1013;
       label = 304;
       break L5;
      } else {
       $$ph607 = 124;
       label = 174;
      } else {
       $$ph607 = 124;
       label = 174;
      } else {
       $$ph607 = 124;
       label = 174;
      } else if (!($52 << 24 >> 24)) $782 = $53; else {
       $$ph607 = $52;
       label = 174;
      }
      if ((label | 0) == 174) {
       label = 0;
       $1010 = $53;
       $774 = $$ph607;
       L161 : while (1) {
        switch ($774 << 24 >> 24 | 0) {
        case 35:
        case 37:
        case 47:
        case 42:
        case 62:
        case 60:
        case 61:
        case 94:
        case 124:
        case 38:
         break;
        default:
         {
          $$ph608 = $1010;
          break L161;
         }
        }
        __THREW__ = 0;
        invoke_vii(44, $data | 0, $774 | 0);
        $775 = __THREW__;
        __THREW__ = 0;
        if ($775 & 1) {
         label = 19;
         break L3;
        }
        $778 = (HEAP32[$c >> 2] | 0) + 1 | 0;
        HEAP32[$c >> 2] = $778;
        $774 = HEAP8[$778 >> 0] | 0;
        if (!($774 << 24 >> 24)) {
         $$ph608 = $778;
         break;
        } else $1010 = $778;
       }
       $782 = $$ph608;
      }
      HEAP32[$c >> 2] = $782 + -1;
      $kind$1 = 13;
      $line_number$6 = $line_number$0523;
      $line_start$5 = $line_start$0522;
      label = 304;
      break L5;
     };
     HEAP32[$id + 0 >> 2] = 0;
     HEAP32[$id + 4 >> 2] = 0;
     HEAP32[$id + 8 >> 2] = 0;
     $470 = HEAP8[$53 >> 0] | 0;
     if (!($470 << 24 >> 24)) $488 = $53; else {
      $1008 = $53;
      $472 = $470;
      while (1) {
       if (($472 + -65 & 255) >= 26) if (!(($472 + -48 & 255) < 10 | ($472 << 24 >> 24 == 95 | ($472 + -97 & 255) < 26))) {
        $$ph = $1008;
        break;
       }
       __THREW__ = 0;
       invoke_vii(44, $id | 0, $472 | 0);
       $481 = __THREW__;
       __THREW__ = 0;
       if ($481 & 1) {
        label = 147;
        break L3;
       }
       $484 = (HEAP32[$c >> 2] | 0) + 1 | 0;
       HEAP32[$c >> 2] = $484;
       $472 = HEAP8[$484 >> 0] | 0;
       if (!($472 << 24 >> 24)) {
        $$ph = $484;
        break;
       } else $1008 = $484;
      }
      $488 = $$ph;
     }
     HEAP32[$c >> 2] = $488 + -1;
     do if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 36960) | 0)) $kind$0 = 15; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 36968) | 0)) $kind$0 = 16; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50480) | 0)) $kind$0 = 17; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 36976) | 0)) $kind$0 = 18; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 39312) | 0)) $kind$0 = 19; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 36984) | 0)) $kind$0 = 20; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 36992) | 0)) $kind$0 = 21; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 37e3) | 0)) $kind$0 = 22; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 37016) | 0)) $kind$0 = 23; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 37024) | 0)) $kind$0 = 24; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 39280) | 0)) $kind$0 = 25; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 36696) | 0)) $kind$0 = 28; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 36728) | 0)) $kind$0 = 29; else {
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 37032) | 0)) {
       $kind$0 = 26;
       break;
      }
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 37048) | 0)) {
       $kind$0 = 27;
       break;
      }
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50448) | 0)) {
       $kind$0 = 30;
       break;
      }
      __THREW__ = 0;
      invoke_iii(20, $data | 0, $id | 0) | 0;
      $521 = __THREW__;
      __THREW__ = 0;
      if ($521 & 1) {
       label = 148;
       break L3;
      } else $kind$0 = 11;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($id);
     $kind$1 = $kind$0;
     $line_number$6 = $line_number$0523;
     $line_start$5 = $line_start$0522;
     label = 304;
    }
   } while (0);
   if ((label | 0) == 304) {
    label = 0;
    $865 = HEAP32[$c >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $24 | 0, $filename | 0);
    $866 = __THREW__;
    __THREW__ = 0;
    if ($866 & 1) {
     label = 21;
     break;
    }
    $872 = $begin;
    $877 = HEAP32[$872 + 4 >> 2] | 0;
    $878 = $45;
    HEAP32[$878 >> 2] = HEAP32[$872 >> 2];
    HEAP32[$878 + 4 >> 2] = $877;
    $882 = $46;
    HEAP32[$882 >> 2] = $line_number$6;
    HEAP32[$882 + 4 >> 2] = 1 - $line_start$5 + $865;
    HEAP32[$23 >> 2] = $kind$1;
    __THREW__ = 0;
    invoke_vii(40, $47 | 0, $data | 0);
    $886 = __THREW__;
    __THREW__ = 0;
    if ($886 & 1) {
     label = 311;
     break;
    }
    __THREW__ = 0;
    invoke_vii(40, $48 | 0, $24 | 0);
    $888 = __THREW__;
    __THREW__ = 0;
    if ($888 & 1) {
     label = 307;
     break;
    };
    HEAP32[$49 + 0 >> 2] = HEAP32[$45 + 0 >> 2];
    HEAP32[$49 + 4 >> 2] = HEAP32[$45 + 4 >> 2];
    HEAP32[$49 + 8 >> 2] = HEAP32[$45 + 8 >> 2];
    HEAP32[$49 + 12 >> 2] = HEAP32[$45 + 12 >> 2];
    __THREW__ = 0;
    $892 = invoke_ii(67, 52) | 0;
    $893 = __THREW__;
    __THREW__ = 0;
    if ($893 & 1) {
     label = 313;
     break;
    }
    $896 = HEAP32[$23 >> 2] | 0;
    $897 = $892 + 12 | 0;
    HEAP32[$897 + 0 >> 2] = HEAP32[$47 + 0 >> 2];
    HEAP32[$897 + 4 >> 2] = HEAP32[$47 + 4 >> 2];
    HEAP32[$897 + 8 >> 2] = HEAP32[$47 + 8 >> 2];
    HEAP32[$47 + 0 >> 2] = 0;
    HEAP32[$47 + 4 >> 2] = 0;
    HEAP32[$47 + 8 >> 2] = 0;
    $898 = $892 + 24 | 0;
    HEAP32[$898 + 0 >> 2] = HEAP32[$50 + 0 >> 2];
    HEAP32[$898 + 4 >> 2] = HEAP32[$50 + 4 >> 2];
    HEAP32[$898 + 8 >> 2] = HEAP32[$50 + 8 >> 2];
    HEAP32[$50 + 0 >> 2] = 0;
    HEAP32[$50 + 4 >> 2] = 0;
    HEAP32[$50 + 8 >> 2] = 0;
    $899 = $892 + 36 | 0;
    HEAP32[$899 + 0 >> 2] = HEAP32[$49 + 0 >> 2];
    HEAP32[$899 + 4 >> 2] = HEAP32[$49 + 4 >> 2];
    HEAP32[$899 + 8 >> 2] = HEAP32[$49 + 8 >> 2];
    HEAP32[$899 + 12 >> 2] = HEAP32[$49 + 12 >> 2];
    HEAP32[$892 + 8 >> 2] = $896;
    HEAP32[$892 + 4 >> 2] = $agg$result;
    $901 = HEAP32[$agg$result >> 2] | 0;
    HEAP32[$892 >> 2] = $901;
    HEAP32[$901 + 4 >> 2] = $892;
    HEAP32[$agg$result >> 2] = $892;
    HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
    $line_number$7 = $line_number$6;
    $line_start$6 = $line_start$5;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($data);
   $53 = (HEAP32[$c >> 2] | 0) + 1 | 0;
   HEAP32[$c >> 2] = $53;
   $912 = $53 - $line_start$6 + 1 | 0;
   if (!(HEAP8[$53 >> 0] | 0)) {
    $$lcssa641 = $912;
    $line_number$7$lcssa = $line_number$7;
    label = 316;
    break;
   } else {
    $51 = $912;
    $line_number$0523 = $line_number$7;
    $line_start$0522 = $line_start$6;
   }
  }
  L203 : switch (label | 0) {
  case 19:
   {
    $64 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body89$index7Z2D = tempRet0;
    $eh$lpad$body89$indexZ2D = $64;
    label = 22;
    break;
   }
  case 20:
   {
    $66 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body89$index7Z2D = tempRet0;
    $eh$lpad$body89$indexZ2D = $66;
    label = 22;
    break;
   }
  case 21:
   {
    $68 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body89$index7Z2D = tempRet0;
    $eh$lpad$body89$indexZ2D = $68;
    label = 22;
    break;
   }
  case 32:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 35:
   {
    $89 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $10 | 0, 192, 19);
    $90 = __THREW__;
    __THREW__ = 0;
    do if ($90 & 1) {
     $123 = ___cxa_find_matching_catch() | 0;
     $$015230 = tempRet0;
     $$07231 = $123;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $89 | 0, $filename | 0);
     $92 = __THREW__;
     __THREW__ = 0;
     if ($92 & 1) $$046 = 1; else {
      $95 = $begin;
      $100 = HEAP32[$95 + 4 >> 2] | 0;
      $101 = $89 + 12 | 0;
      HEAP32[$101 >> 2] = HEAP32[$95 >> 2];
      HEAP32[$101 + 4 >> 2] = $100;
      $106 = $begin;
      $111 = HEAP32[$106 + 4 >> 2] | 0;
      $112 = $89 + 20 | 0;
      HEAP32[$112 >> 2] = HEAP32[$106 >> 2];
      HEAP32[$112 + 4 >> 2] = $111;
      __THREW__ = 0;
      invoke_vii(40, $89 + 28 | 0, $10 | 0);
      $117 = __THREW__;
      __THREW__ = 0;
      if ($117 & 1) {
       $119 = ___cxa_find_matching_catch() | 0;
       $120 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($89);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
       $$015230 = $120;
       $$07231 = $119;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $89 | 0, 48, 176);
      $121 = __THREW__;
      __THREW__ = 0;
      if ($121 & 1) $$046 = 0; else {}
     }
     $125 = ___cxa_find_matching_catch() | 0;
     $126 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
     if ($$046) {
      $$015230 = $126;
      $$07231 = $125;
     } else {
      $$17 = $125;
      $$1732 = $126;
      break L203;
     }
    } while (0);
    ___cxa_free_exception($89 | 0);
    $$17 = $$07231;
    $$1732 = $$015230;
    break;
   }
  case 54:
   {
    $150 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $11 | 0, 192, 19);
    $151 = __THREW__;
    __THREW__ = 0;
    do if ($151 & 1) {
     $184 = ___cxa_find_matching_catch() | 0;
     $$116234 = tempRet0;
     $$18235 = $184;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $150 | 0, $filename | 0);
     $153 = __THREW__;
     __THREW__ = 0;
     if ($153 & 1) $$048 = 1; else {
      $156 = $begin;
      $161 = HEAP32[$156 + 4 >> 2] | 0;
      $162 = $150 + 12 | 0;
      HEAP32[$162 >> 2] = HEAP32[$156 >> 2];
      HEAP32[$162 + 4 >> 2] = $161;
      $167 = $begin;
      $172 = HEAP32[$167 + 4 >> 2] | 0;
      $173 = $150 + 20 | 0;
      HEAP32[$173 >> 2] = HEAP32[$167 >> 2];
      HEAP32[$173 + 4 >> 2] = $172;
      __THREW__ = 0;
      invoke_vii(40, $150 + 28 | 0, $11 | 0);
      $178 = __THREW__;
      __THREW__ = 0;
      if ($178 & 1) {
       $180 = ___cxa_find_matching_catch() | 0;
       $181 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($150);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
       $$116234 = $181;
       $$18235 = $180;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $150 | 0, 48, 176);
      $182 = __THREW__;
      __THREW__ = 0;
      if ($182 & 1) $$048 = 0; else {}
     }
     $186 = ___cxa_find_matching_catch() | 0;
     $187 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
     if ($$048) {
      $$116234 = $187;
      $$18235 = $186;
     } else {
      $$17 = $186;
      $$1732 = $187;
      break L203;
     }
    } while (0);
    ___cxa_free_exception($150 | 0);
    $$17 = $$18235;
    $$1732 = $$116234;
    break;
   }
  case 62:
   {
    $188 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $12 | 0, 216, 52);
    $189 = __THREW__;
    __THREW__ = 0;
    do if ($189 & 1) {
     $222 = ___cxa_find_matching_catch() | 0;
     $$217238 = tempRet0;
     $$2239 = $222;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $188 | 0, $filename | 0);
     $191 = __THREW__;
     __THREW__ = 0;
     if ($191 & 1) $$044 = 1; else {
      $194 = $begin;
      $199 = HEAP32[$194 + 4 >> 2] | 0;
      $200 = $188 + 12 | 0;
      HEAP32[$200 >> 2] = HEAP32[$194 >> 2];
      HEAP32[$200 + 4 >> 2] = $199;
      $205 = $begin;
      $210 = HEAP32[$205 + 4 >> 2] | 0;
      $211 = $188 + 20 | 0;
      HEAP32[$211 >> 2] = HEAP32[$205 >> 2];
      HEAP32[$211 + 4 >> 2] = $210;
      __THREW__ = 0;
      invoke_vii(40, $188 + 28 | 0, $12 | 0);
      $216 = __THREW__;
      __THREW__ = 0;
      if ($216 & 1) {
       $218 = ___cxa_find_matching_catch() | 0;
       $219 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($188);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
       $$217238 = $219;
       $$2239 = $218;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $188 | 0, 48, 176);
      $220 = __THREW__;
      __THREW__ = 0;
      if ($220 & 1) $$044 = 0; else {}
     }
     $224 = ___cxa_find_matching_catch() | 0;
     $225 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
     if ($$044) {
      $$217238 = $225;
      $$2239 = $224;
     } else {
      $$17 = $224;
      $$1732 = $225;
      break L203;
     }
    } while (0);
    ___cxa_free_exception($188 | 0);
    $$17 = $$2239;
    $$1732 = $$217238;
    break;
   }
  case 76:
   {
    $232 = $ss + 64 | 0;
    $233 = $ss + 8 | 0;
    HEAP32[$233 >> 2] = 752;
    $234 = $ss + 12 | 0;
    HEAP32[$ss >> 2] = 900;
    HEAP32[$232 >> 2] = 920;
    HEAP32[$ss + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss + 64 | 0, $234 | 0);
    $237 = __THREW__;
    __THREW__ = 0;
    if ($237 & 1) {
     $249 = ___cxa_find_matching_catch() | 0;
     $$0$i = tempRet0;
     $$01$i = $249;
    } else {
     HEAP32[$ss + 136 >> 2] = 0;
     HEAP32[$ss + 140 >> 2] = -1;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$232 >> 2] = 772;
     HEAP32[$233 >> 2] = 752;
     __THREW__ = 0;
     invoke_vi(177, $234 | 0);
     $241 = __THREW__;
     __THREW__ = 0;
     do if ($241 & 1) {
      $251 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index17Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $251;
     } else {
      HEAP32[$234 >> 2] = 1064;
      $243 = $ss + 44 | 0;
      HEAP32[$243 + 0 >> 2] = 0;
      HEAP32[$243 + 4 >> 2] = 0;
      HEAP32[$243 + 8 >> 2] = 0;
      HEAP32[$243 + 12 >> 2] = 0;
      HEAP32[$ss + 60 >> 2] = 24;
      HEAP32[$8 + 0 >> 2] = 0;
      HEAP32[$8 + 4 >> 2] = 0;
      HEAP32[$8 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $234 | 0, $8 | 0);
      $245 = __THREW__;
      __THREW__ = 0;
      if ($245 & 1) {
       $247 = ___cxa_find_matching_catch() | 0;
       $248 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($243);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($234);
       $eh$lpad$body$i$index17Z2D = $248;
       $eh$lpad$body$i$indexZ2D = $247;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      __THREW__ = 0;
      $253 = invoke_iiii(25, $233 | 0, 272, 36) | 0;
      $254 = __THREW__;
      __THREW__ = 0;
      L225 : do if ($254 & 1) label = 93; else {
       __THREW__ = 0;
       $256 = invoke_iiii(25, $253 | 0, 312, 16) | 0;
       $257 = __THREW__;
       __THREW__ = 0;
       if ($257 & 1) label = 93; else {
        HEAP8[$7 >> 0] = $$lcssa531;
        __THREW__ = 0;
        $259 = invoke_iiii(25, $256 | 0, $7 | 0, 1) | 0;
        $260 = __THREW__;
        __THREW__ = 0;
        if ($260 & 1) label = 93; else {
         __THREW__ = 0;
         invoke_iiii(25, $259 | 0, 336, 1) | 0;
         $262 = __THREW__;
         __THREW__ = 0;
         if ($262 & 1) label = 93; else {
          $264 = ___cxa_allocate_exception(40) | 0;
          __THREW__ = 0;
          invoke_vii(43, $13 | 0, $234 | 0);
          $265 = __THREW__;
          __THREW__ = 0;
          do if ($265 & 1) {
           $300 = ___cxa_find_matching_catch() | 0;
           $$318242 = tempRet0;
           $$3243 = $300;
          } else {
           __THREW__ = 0;
           invoke_vii(40, $264 | 0, $filename | 0);
           $267 = __THREW__;
           __THREW__ = 0;
           if ($267 & 1) $$042 = 1; else {
            $270 = $begin;
            $275 = HEAP32[$270 + 4 >> 2] | 0;
            $276 = $264 + 12 | 0;
            HEAP32[$276 >> 2] = HEAP32[$270 >> 2];
            HEAP32[$276 + 4 >> 2] = $275;
            $281 = $begin;
            $286 = HEAP32[$281 + 4 >> 2] | 0;
            $287 = $264 + 20 | 0;
            HEAP32[$287 >> 2] = HEAP32[$281 >> 2];
            HEAP32[$287 + 4 >> 2] = $286;
            __THREW__ = 0;
            invoke_vii(40, $264 + 28 | 0, $13 | 0);
            $292 = __THREW__;
            __THREW__ = 0;
            if ($292 & 1) {
             $294 = ___cxa_find_matching_catch() | 0;
             $295 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($264);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
             $$318242 = $295;
             $$3243 = $294;
             break;
            }
            __THREW__ = 0;
            invoke_viii(4, $264 | 0, 48, 176);
            $296 = __THREW__;
            __THREW__ = 0;
            if ($296 & 1) $$042 = 0; else {}
           }
           $302 = ___cxa_find_matching_catch() | 0;
           $303 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
           if ($$042) {
            $$318242 = $303;
            $$3243 = $302;
           } else {
            $$4 = $302;
            $$419 = $303;
            break L225;
           }
          } while (0);
          ___cxa_free_exception($264 | 0);
          $$4 = $$3243;
          $$419 = $$318242;
         }
        }
       }
      } while (0);
      if ((label | 0) == 93) {
       $298 = ___cxa_find_matching_catch() | 0;
       $$4 = $298;
       $$419 = tempRet0;
      }
      HEAP32[$ss >> 2] = 732;
      HEAP32[$232 >> 2] = 772;
      HEAP32[$233 >> 2] = 752;
      HEAP32[$234 >> 2] = 1064;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($243);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($234);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($232);
      $$17 = $$4;
      $$1732 = $$419;
      break L203;
     } while (0);
     $$0$i = $eh$lpad$body$i$index17Z2D;
     $$01$i = $eh$lpad$body$i$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($232);
    $eh$lpad$body89$index7Z2D = $$0$i;
    $eh$lpad$body89$indexZ2D = $$01$i;
    label = 22;
    break;
   }
  case 100:
   {
    $311 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $14 | 0, 344, 29);
    $312 = __THREW__;
    __THREW__ = 0;
    do if ($312 & 1) {
     $345 = ___cxa_find_matching_catch() | 0;
     $$520246 = tempRet0;
     $$5247 = $345;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $311 | 0, $filename | 0);
     $314 = __THREW__;
     __THREW__ = 0;
     if ($314 & 1) $$040 = 1; else {
      $317 = $begin;
      $322 = HEAP32[$317 + 4 >> 2] | 0;
      $323 = $311 + 12 | 0;
      HEAP32[$323 >> 2] = HEAP32[$317 >> 2];
      HEAP32[$323 + 4 >> 2] = $322;
      $328 = $begin;
      $333 = HEAP32[$328 + 4 >> 2] | 0;
      $334 = $311 + 20 | 0;
      HEAP32[$334 >> 2] = HEAP32[$328 >> 2];
      HEAP32[$334 + 4 >> 2] = $333;
      __THREW__ = 0;
      invoke_vii(40, $311 + 28 | 0, $14 | 0);
      $339 = __THREW__;
      __THREW__ = 0;
      if ($339 & 1) {
       $341 = ___cxa_find_matching_catch() | 0;
       $342 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($311);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
       $$520246 = $342;
       $$5247 = $341;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $311 | 0, 48, 176);
      $343 = __THREW__;
      __THREW__ = 0;
      if ($343 & 1) $$040 = 0; else {}
     }
     $347 = ___cxa_find_matching_catch() | 0;
     $348 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     if ($$040) {
      $$520246 = $348;
      $$5247 = $347;
     } else {
      $$17 = $347;
      $$1732 = $348;
      break L203;
     }
    } while (0);
    ___cxa_free_exception($311 | 0);
    $$17 = $$5247;
    $$1732 = $$520246;
    break;
   }
  case 109:
   {
    $351 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $15 | 0, 376, 44);
    $352 = __THREW__;
    __THREW__ = 0;
    do if ($352 & 1) {
     $385 = ___cxa_find_matching_catch() | 0;
     $$621250 = tempRet0;
     $$6251 = $385;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $351 | 0, $filename | 0);
     $354 = __THREW__;
     __THREW__ = 0;
     if ($354 & 1) $$038 = 1; else {
      $357 = $begin;
      $362 = HEAP32[$357 + 4 >> 2] | 0;
      $363 = $351 + 12 | 0;
      HEAP32[$363 >> 2] = HEAP32[$357 >> 2];
      HEAP32[$363 + 4 >> 2] = $362;
      $368 = $begin;
      $373 = HEAP32[$368 + 4 >> 2] | 0;
      $374 = $351 + 20 | 0;
      HEAP32[$374 >> 2] = HEAP32[$368 >> 2];
      HEAP32[$374 + 4 >> 2] = $373;
      __THREW__ = 0;
      invoke_vii(40, $351 + 28 | 0, $15 | 0);
      $379 = __THREW__;
      __THREW__ = 0;
      if ($379 & 1) {
       $381 = ___cxa_find_matching_catch() | 0;
       $382 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($351);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
       $$621250 = $382;
       $$6251 = $381;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $351 | 0, 48, 176);
      $383 = __THREW__;
      __THREW__ = 0;
      if ($383 & 1) $$038 = 0; else {}
     }
     $387 = ___cxa_find_matching_catch() | 0;
     $388 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
     if ($$038) {
      $$621250 = $388;
      $$6251 = $387;
     } else {
      $$17 = $387;
      $$1732 = $388;
      break L203;
     }
    } while (0);
    ___cxa_free_exception($351 | 0);
    $$17 = $$6251;
    $$1732 = $$621250;
    break;
   }
  case 117:
   {
    $389 = $ss4 + 64 | 0;
    $390 = $ss4 + 8 | 0;
    HEAP32[$390 >> 2] = 752;
    $391 = $ss4 + 12 | 0;
    HEAP32[$ss4 >> 2] = 900;
    HEAP32[$389 >> 2] = 920;
    HEAP32[$ss4 + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss4 + 64 | 0, $391 | 0);
    $394 = __THREW__;
    __THREW__ = 0;
    if ($394 & 1) {
     $406 = ___cxa_find_matching_catch() | 0;
     $$0$i119 = tempRet0;
     $$01$i118 = $406;
    } else {
     HEAP32[$ss4 + 136 >> 2] = 0;
     HEAP32[$ss4 + 140 >> 2] = -1;
     HEAP32[$ss4 >> 2] = 732;
     HEAP32[$389 >> 2] = 772;
     HEAP32[$390 >> 2] = 752;
     __THREW__ = 0;
     invoke_vi(177, $391 | 0);
     $398 = __THREW__;
     __THREW__ = 0;
     do if ($398 & 1) {
      $408 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i116$index22Z2D = tempRet0;
      $eh$lpad$body$i116$indexZ2D = $408;
     } else {
      HEAP32[$391 >> 2] = 1064;
      $400 = $ss4 + 44 | 0;
      HEAP32[$400 + 0 >> 2] = 0;
      HEAP32[$400 + 4 >> 2] = 0;
      HEAP32[$400 + 8 >> 2] = 0;
      HEAP32[$400 + 12 >> 2] = 0;
      HEAP32[$ss4 + 60 >> 2] = 24;
      HEAP32[$6 + 0 >> 2] = 0;
      HEAP32[$6 + 4 >> 2] = 0;
      HEAP32[$6 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $391 | 0, $6 | 0);
      $402 = __THREW__;
      __THREW__ = 0;
      if ($402 & 1) {
       $404 = ___cxa_find_matching_catch() | 0;
       $405 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($400);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($391);
       $eh$lpad$body$i116$index22Z2D = $405;
       $eh$lpad$body$i116$indexZ2D = $404;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
      __THREW__ = 0;
      $410 = invoke_iiii(25, $390 | 0, 424, 44) | 0;
      $411 = __THREW__;
      __THREW__ = 0;
      L307 : do if ($411 & 1) label = 133; else {
       HEAP8[$5 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
       __THREW__ = 0;
       $415 = invoke_iiii(25, $410 | 0, $5 | 0, 1) | 0;
       $416 = __THREW__;
       __THREW__ = 0;
       if ($416 & 1) label = 133; else {
        __THREW__ = 0;
        invoke_iiii(25, $415 | 0, 336, 1) | 0;
        $418 = __THREW__;
        __THREW__ = 0;
        if ($418 & 1) label = 133; else {
         $420 = ___cxa_allocate_exception(40) | 0;
         __THREW__ = 0;
         invoke_vii(43, $16 | 0, $391 | 0);
         $421 = __THREW__;
         __THREW__ = 0;
         do if ($421 & 1) {
          $456 = ___cxa_find_matching_catch() | 0;
          $$722254 = tempRet0;
          $$7255 = $456;
         } else {
          __THREW__ = 0;
          invoke_vii(40, $420 | 0, $filename | 0);
          $423 = __THREW__;
          __THREW__ = 0;
          if ($423 & 1) $$036 = 1; else {
           $426 = $begin;
           $431 = HEAP32[$426 + 4 >> 2] | 0;
           $432 = $420 + 12 | 0;
           HEAP32[$432 >> 2] = HEAP32[$426 >> 2];
           HEAP32[$432 + 4 >> 2] = $431;
           $437 = $begin;
           $442 = HEAP32[$437 + 4 >> 2] | 0;
           $443 = $420 + 20 | 0;
           HEAP32[$443 >> 2] = HEAP32[$437 >> 2];
           HEAP32[$443 + 4 >> 2] = $442;
           __THREW__ = 0;
           invoke_vii(40, $420 + 28 | 0, $16 | 0);
           $448 = __THREW__;
           __THREW__ = 0;
           if ($448 & 1) {
            $450 = ___cxa_find_matching_catch() | 0;
            $451 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($420);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
            $$722254 = $451;
            $$7255 = $450;
            break;
           }
           __THREW__ = 0;
           invoke_viii(4, $420 | 0, 48, 176);
           $452 = __THREW__;
           __THREW__ = 0;
           if ($452 & 1) $$036 = 0; else {}
          }
          $458 = ___cxa_find_matching_catch() | 0;
          $459 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
          if ($$036) {
           $$722254 = $459;
           $$7255 = $458;
          } else {
           $$8 = $458;
           $$823 = $459;
           break L307;
          }
         } while (0);
         ___cxa_free_exception($420 | 0);
         $$8 = $$7255;
         $$823 = $$722254;
        }
       }
      } while (0);
      if ((label | 0) == 133) {
       $454 = ___cxa_find_matching_catch() | 0;
       $$8 = $454;
       $$823 = tempRet0;
      }
      HEAP32[$ss4 >> 2] = 732;
      HEAP32[$389 >> 2] = 772;
      HEAP32[$390 >> 2] = 752;
      HEAP32[$391 >> 2] = 1064;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($400);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($391);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($389);
      $$17 = $$8;
      $$1732 = $$823;
      break L203;
     } while (0);
     $$0$i119 = $eh$lpad$body$i116$index22Z2D;
     $$01$i118 = $eh$lpad$body$i116$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($389);
    $eh$lpad$body89$index7Z2D = $$0$i119;
    $eh$lpad$body89$indexZ2D = $$01$i118;
    label = 22;
    break;
   }
  case 147:
   {
    $lpad$phi290$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi290$index27 = tempRet0;
    label = 149;
    break;
   }
  case 148:
   {
    $lpad$phi290$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi290$index27 = tempRet0;
    label = 149;
    break;
   }
  case 190:
   {
    $543 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $17 | 0, 472, 41);
    $544 = __THREW__;
    __THREW__ = 0;
    do if ($544 & 1) {
     $577 = ___cxa_find_matching_catch() | 0;
     $$924260 = tempRet0;
     $$9261 = $577;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $543 | 0, $filename | 0);
     $546 = __THREW__;
     __THREW__ = 0;
     if ($546 & 1) $$013 = 1; else {
      $549 = $begin;
      $554 = HEAP32[$549 + 4 >> 2] | 0;
      $555 = $543 + 12 | 0;
      HEAP32[$555 >> 2] = HEAP32[$549 >> 2];
      HEAP32[$555 + 4 >> 2] = $554;
      $560 = $begin;
      $565 = HEAP32[$560 + 4 >> 2] | 0;
      $566 = $543 + 20 | 0;
      HEAP32[$566 >> 2] = HEAP32[$560 >> 2];
      HEAP32[$566 + 4 >> 2] = $565;
      __THREW__ = 0;
      invoke_vii(40, $543 + 28 | 0, $17 | 0);
      $571 = __THREW__;
      __THREW__ = 0;
      if ($571 & 1) {
       $573 = ___cxa_find_matching_catch() | 0;
       $574 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($543);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
       $$924260 = $574;
       $$9261 = $573;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $543 | 0, 48, 176);
      $575 = __THREW__;
      __THREW__ = 0;
      if ($575 & 1) $$013 = 0; else {}
     }
     $579 = ___cxa_find_matching_catch() | 0;
     $580 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
     if ($$013) {
      $$924260 = $580;
      $$9261 = $579;
     } else {
      $$17 = $579;
      $$1732 = $580;
      break L203;
     }
    } while (0);
    ___cxa_free_exception($543 | 0);
    $$17 = $$9261;
    $$1732 = $$924260;
    break;
   }
  case 205:
   {
    $597 = ___cxa_find_matching_catch() | 0;
    $598 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($35);
    $eh$lpad$body$i150$index32Z2D = $598;
    $eh$lpad$body$i150$indexZ2D = $597;
    label = 208;
    break;
   }
  case 206:
   {
    $599 = ___cxa_find_matching_catch() | 0;
    $$0$i153 = tempRet0;
    $$01$i152 = $599;
    label = 209;
    break;
   }
  case 207:
   {
    $601 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i150$index32Z2D = tempRet0;
    $eh$lpad$body$i150$indexZ2D = $601;
    label = 208;
    break;
   }
  case 215:
   {
    $610 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $18 | 0, 520, 51);
    $611 = __THREW__;
    __THREW__ = 0;
    do if ($611 & 1) {
     $652 = ___cxa_find_matching_catch() | 0;
     $$1025264 = tempRet0;
     $$10265 = $652;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $610 | 0, $filename | 0);
     $613 = __THREW__;
     __THREW__ = 0;
     if ($613 & 1) $$05 = 1; else {
      $616 = $begin;
      $621 = HEAP32[$616 + 4 >> 2] | 0;
      $622 = $610 + 12 | 0;
      HEAP32[$622 >> 2] = HEAP32[$616 >> 2];
      HEAP32[$622 + 4 >> 2] = $621;
      $627 = $begin;
      $632 = HEAP32[$627 + 4 >> 2] | 0;
      $633 = $610 + 20 | 0;
      HEAP32[$633 >> 2] = HEAP32[$627 >> 2];
      HEAP32[$633 + 4 >> 2] = $632;
      __THREW__ = 0;
      invoke_vii(40, $610 + 28 | 0, $18 | 0);
      $638 = __THREW__;
      __THREW__ = 0;
      if ($638 & 1) {
       $640 = ___cxa_find_matching_catch() | 0;
       $641 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($610);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
       $$1025264 = $641;
       $$10265 = $640;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $610 | 0, 48, 176);
      $642 = __THREW__;
      __THREW__ = 0;
      if ($642 & 1) $$05 = 0; else {}
     }
     $654 = ___cxa_find_matching_catch() | 0;
     $655 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
     if ($$05) {
      $$1025264 = $655;
      $$10265 = $654;
     } else {
      $$13 = $654;
      $$1328 = $655;
      label = 272;
      break L203;
     }
    } while (0);
    ___cxa_free_exception($610 | 0);
    $$13 = $$10265;
    $$1328 = $$1025264;
    label = 272;
    break;
   }
  case 220:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index39 = tempRet0;
    label = 224;
    break;
   }
  case 221:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index39 = tempRet0;
    label = 224;
    break;
   }
  case 222:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index39 = tempRet0;
    label = 224;
    break;
   }
  case 229:
   {
    __THREW__ = 0;
    invoke_viiii(11, 576, 592, 570, 608);
    $657 = __THREW__;
    __THREW__ = 0;
    if ($657 & 1) {
     $650 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $650;
     $lpad$phi$index39 = tempRet0;
     label = 224;
     break;
    } else {}
    break;
   }
  case 233:
   {
    $662 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $19 | 0, 624, 14);
    $663 = __THREW__;
    __THREW__ = 0;
    do if ($663 & 1) {
     $696 = ___cxa_find_matching_catch() | 0;
     $$1126268 = tempRet0;
     $$11269 = $696;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $662 | 0, $filename | 0);
     $665 = __THREW__;
     __THREW__ = 0;
     if ($665 & 1) $$03 = 1; else {
      $668 = $begin;
      $673 = HEAP32[$668 + 4 >> 2] | 0;
      $674 = $662 + 12 | 0;
      HEAP32[$674 >> 2] = HEAP32[$668 >> 2];
      HEAP32[$674 + 4 >> 2] = $673;
      $679 = $begin;
      $684 = HEAP32[$679 + 4 >> 2] | 0;
      $685 = $662 + 20 | 0;
      HEAP32[$685 >> 2] = HEAP32[$679 >> 2];
      HEAP32[$685 + 4 >> 2] = $684;
      __THREW__ = 0;
      invoke_vii(40, $662 + 28 | 0, $19 | 0);
      $690 = __THREW__;
      __THREW__ = 0;
      if ($690 & 1) {
       $692 = ___cxa_find_matching_catch() | 0;
       $693 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($662);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
       $$1126268 = $693;
       $$11269 = $692;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $662 | 0, 48, 176);
      $694 = __THREW__;
      __THREW__ = 0;
      if ($694 & 1) $$03 = 0; else {}
     }
     $698 = ___cxa_find_matching_catch() | 0;
     $699 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
     if ($$03) {
      $$1126268 = $699;
      $$11269 = $698;
     } else {
      $$13 = $698;
      $$1328 = $699;
      label = 272;
      break L203;
     }
    } while (0);
    ___cxa_free_exception($662 | 0);
    $$13 = $$11269;
    $$1328 = $$1126268;
    label = 272;
    break;
   }
  case 255:
   {
    label = 257;
    break;
   }
  case 256:
   {
    label = 257;
    break;
   }
  case 270:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 278:
   {
    $783 = $ss8 + 64 | 0;
    $784 = $ss8 + 8 | 0;
    HEAP32[$784 >> 2] = 752;
    $785 = $ss8 + 12 | 0;
    HEAP32[$ss8 >> 2] = 900;
    HEAP32[$783 >> 2] = 920;
    HEAP32[$ss8 + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss8 + 64 | 0, $785 | 0);
    $788 = __THREW__;
    __THREW__ = 0;
    if ($788 & 1) {
     $800 = ___cxa_find_matching_catch() | 0;
     $$0$i195 = tempRet0;
     $$01$i194 = $800;
    } else {
     HEAP32[$ss8 + 136 >> 2] = 0;
     HEAP32[$ss8 + 140 >> 2] = -1;
     HEAP32[$ss8 >> 2] = 732;
     HEAP32[$783 >> 2] = 772;
     HEAP32[$784 >> 2] = 752;
     __THREW__ = 0;
     invoke_vi(177, $785 | 0);
     $792 = __THREW__;
     __THREW__ = 0;
     do if ($792 & 1) {
      $802 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i192$index46Z2D = tempRet0;
      $eh$lpad$body$i192$indexZ2D = $802;
     } else {
      HEAP32[$785 >> 2] = 1064;
      $794 = $ss8 + 44 | 0;
      HEAP32[$794 + 0 >> 2] = 0;
      HEAP32[$794 + 4 >> 2] = 0;
      HEAP32[$794 + 8 >> 2] = 0;
      HEAP32[$794 + 12 >> 2] = 0;
      HEAP32[$ss8 + 60 >> 2] = 24;
      HEAP32[$1 + 0 >> 2] = 0;
      HEAP32[$1 + 4 >> 2] = 0;
      HEAP32[$1 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $785 | 0, $1 | 0);
      $796 = __THREW__;
      __THREW__ = 0;
      if ($796 & 1) {
       $798 = ___cxa_find_matching_catch() | 0;
       $799 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($794);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($785);
       $eh$lpad$body$i192$index46Z2D = $799;
       $eh$lpad$body$i192$indexZ2D = $798;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      __THREW__ = 0;
      invoke_iiii(25, $784 | 0, 680, 28) | 0;
      $804 = __THREW__;
      __THREW__ = 0;
      L388 : do if ($804 & 1) label = 290; else {
       $807 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
       if ($807 << 24 >> 24 < 32) {
        __THREW__ = 0;
        $809 = invoke_iiii(25, $784 | 0, 712, 5) | 0;
        $810 = __THREW__;
        __THREW__ = 0;
        if ($810 & 1) {
         label = 290;
         break;
        }
        __THREW__ = 0;
        invoke_iii(21, $809 | 0, $807 & 255 | 0) | 0;
        $813 = __THREW__;
        __THREW__ = 0;
        if ($813 & 1) {
         label = 290;
         break;
        }
       } else {
        __THREW__ = 0;
        $817 = invoke_iiii(25, $784 | 0, 336, 1) | 0;
        $818 = __THREW__;
        __THREW__ = 0;
        if ($818 & 1) {
         label = 290;
         break;
        }
        HEAP8[$0 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
        __THREW__ = 0;
        $822 = invoke_iiii(25, $817 | 0, $0 | 0, 1) | 0;
        $823 = __THREW__;
        __THREW__ = 0;
        if ($823 & 1) {
         label = 290;
         break;
        }
        __THREW__ = 0;
        invoke_iiii(25, $822 | 0, 336, 1) | 0;
        $825 = __THREW__;
        __THREW__ = 0;
        if ($825 & 1) {
         label = 290;
         break;
        }
       }
       $827 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_vii(43, $22 | 0, $785 | 0);
       $828 = __THREW__;
       __THREW__ = 0;
       do if ($828 & 1) {
        $861 = ___cxa_find_matching_catch() | 0;
        $$1410277 = $861;
        $$1429276 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $827 | 0, $filename | 0);
        $830 = __THREW__;
        __THREW__ = 0;
        if ($830 & 1) $$0 = 1; else {
         $833 = $begin;
         $838 = HEAP32[$833 + 4 >> 2] | 0;
         $839 = $827 + 12 | 0;
         HEAP32[$839 >> 2] = HEAP32[$833 >> 2];
         HEAP32[$839 + 4 >> 2] = $838;
         $844 = $begin;
         $849 = HEAP32[$844 + 4 >> 2] | 0;
         $850 = $827 + 20 | 0;
         HEAP32[$850 >> 2] = HEAP32[$844 >> 2];
         HEAP32[$850 + 4 >> 2] = $849;
         __THREW__ = 0;
         invoke_vii(40, $827 + 28 | 0, $22 | 0);
         $855 = __THREW__;
         __THREW__ = 0;
         if ($855 & 1) {
          $857 = ___cxa_find_matching_catch() | 0;
          $858 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($827);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
          $$1410277 = $857;
          $$1429276 = $858;
          break;
         }
         __THREW__ = 0;
         invoke_viii(4, $827 | 0, 48, 176);
         $859 = __THREW__;
         __THREW__ = 0;
         if ($859 & 1) $$0 = 0; else {}
        }
        $863 = ___cxa_find_matching_catch() | 0;
        $864 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
        if ($$0) {
         $$1410277 = $863;
         $$1429276 = $864;
        } else {
         $$15 = $863;
         $$1530 = $864;
         break L388;
        }
       } while (0);
       ___cxa_free_exception($827 | 0);
       $$15 = $$1410277;
       $$1530 = $$1429276;
      } while (0);
      if ((label | 0) == 290) {
       $815 = ___cxa_find_matching_catch() | 0;
       $$15 = $815;
       $$1530 = tempRet0;
      }
      HEAP32[$ss8 >> 2] = 732;
      HEAP32[$783 >> 2] = 772;
      HEAP32[$784 >> 2] = 752;
      HEAP32[$785 >> 2] = 1064;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($794);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($785);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($783);
      $$17 = $$15;
      $$1732 = $$1530;
      break L203;
     } while (0);
     $$0$i195 = $eh$lpad$body$i192$index46Z2D;
     $$01$i194 = $eh$lpad$body$i192$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($783);
    $eh$lpad$body89$index7Z2D = $$0$i195;
    $eh$lpad$body89$indexZ2D = $$01$i194;
    label = 22;
    break;
   }
  case 307:
   {
    $890 = ___cxa_find_matching_catch() | 0;
    $891 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
    $eh$lpad$body218$index51Z2D = $891;
    $eh$lpad$body218$indexZ2D = $890;
    label = 312;
    break;
   }
  case 311:
   {
    $913 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body218$index51Z2D = tempRet0;
    $eh$lpad$body218$indexZ2D = $913;
    label = 312;
    break;
   }
  case 313:
   {
    $915 = ___cxa_find_matching_catch() | 0;
    $916 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
    $$1611 = $915;
    $$1631 = $916;
    label = 314;
    break;
   }
  case 316:
   {
    $923 = 0;
    $928 = $$lcssa641;
    $line_number$0$lcssa = $line_number$7$lcssa;
    label = 317;
    break L1;
    break;
   }
  }
  L419 : do if ((label | 0) == 149) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($id);
   $$17 = $lpad$phi290$index;
   $$1732 = $lpad$phi290$index27;
  } else if ((label | 0) == 208) {
   $$0$i153 = $eh$lpad$body$i150$index32Z2D;
   $$01$i152 = $eh$lpad$body$i150$indexZ2D;
   label = 209;
  } else if ((label | 0) == 224) {
   $$13 = $lpad$phi$index;
   $$1328 = $lpad$phi$index39;
   label = 272;
  } else if ((label | 0) == 257) {
   $725 = ___cxa_allocate_exception(40) | 0;
   __THREW__ = 0;
   invoke_viii(3, $20 | 0, 640, 34);
   $726 = __THREW__;
   __THREW__ = 0;
   do if ($726 & 1) {
    $759 = ___cxa_find_matching_catch() | 0;
    $$1227272 = tempRet0;
    $$129273 = $759;
   } else {
    __THREW__ = 0;
    invoke_vii(40, $725 | 0, $filename | 0);
    $728 = __THREW__;
    __THREW__ = 0;
    if ($728 & 1) $$01 = 1; else {
     $731 = $begin;
     $736 = HEAP32[$731 + 4 >> 2] | 0;
     $737 = $725 + 12 | 0;
     HEAP32[$737 >> 2] = HEAP32[$731 >> 2];
     HEAP32[$737 + 4 >> 2] = $736;
     $742 = $begin;
     $747 = HEAP32[$742 + 4 >> 2] | 0;
     $748 = $725 + 20 | 0;
     HEAP32[$748 >> 2] = HEAP32[$742 >> 2];
     HEAP32[$748 + 4 >> 2] = $747;
     __THREW__ = 0;
     invoke_vii(40, $725 + 28 | 0, $20 | 0);
     $753 = __THREW__;
     __THREW__ = 0;
     if ($753 & 1) {
      $755 = ___cxa_find_matching_catch() | 0;
      $756 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($725);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
      $$1227272 = $756;
      $$129273 = $755;
      break;
     }
     __THREW__ = 0;
     invoke_viii(4, $725 | 0, 48, 176);
     $757 = __THREW__;
     __THREW__ = 0;
     if ($757 & 1) $$01 = 0; else {}
    }
    $761 = ___cxa_find_matching_catch() | 0;
    $762 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
    if ($$01) {
     $$1227272 = $762;
     $$129273 = $761;
    } else {
     $$13 = $761;
     $$1328 = $762;
     label = 272;
     break L419;
    }
   } while (0);
   ___cxa_free_exception($725 | 0);
   $$13 = $$129273;
   $$1328 = $$1227272;
   label = 272;
  } else if ((label | 0) == 312) {
   $$1611 = $eh$lpad$body218$indexZ2D;
   $$1631 = $eh$lpad$body218$index51Z2D;
   label = 314;
  } while (0);
  if ((label | 0) == 209) {
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($33);
   $eh$lpad$body89$index7Z2D = $$0$i153;
   $eh$lpad$body89$indexZ2D = $$01$i152;
   label = 22;
  } else if ((label | 0) == 272) {
   HEAP32[$block >> 2] = 732;
   HEAP32[$33 >> 2] = 772;
   HEAP32[$34 >> 2] = 752;
   HEAP32[$35 >> 2] = 1064;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($35);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($33);
   $$17 = $$13;
   $$1732 = $$1328;
  } else if ((label | 0) == 314) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
   $$17 = $$1611;
   $$1732 = $$1631;
  }
  if ((label | 0) == 22) {
   $$17 = $eh$lpad$body89$indexZ2D;
   $$1732 = $eh$lpad$body89$index7Z2D;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($data);
  $$20 = $$17;
  $$2035 = $$1732;
 } while (0);
 do if ((label | 0) == 317) {
  __THREW__ = 0;
  invoke_viii(3, $26 | 0, 48920, 0);
  $917 = __THREW__;
  __THREW__ = 0;
  if ($917 & 1) {
   $55 = ___cxa_find_matching_catch() | 0;
   $$20 = $55;
   $$2035 = tempRet0;
   break;
  }
  __THREW__ = 0;
  invoke_vii(40, $27 | 0, $filename | 0);
  $919 = __THREW__;
  __THREW__ = 0;
  if ($919 & 1) {
   $957 = ___cxa_find_matching_catch() | 0;
   $$19 = $957;
   $$1934 = tempRet0;
  } else {
   $921 = $27 + 12 | 0;
   $922 = $923 | $line_number$0$lcssa;
   $924 = $921;
   HEAP32[$924 >> 2] = $922;
   HEAP32[$924 + 4 >> 2] = $928;
   $930 = $27 + 20 | 0;
   HEAP32[$930 >> 2] = $922;
   HEAP32[$930 + 4 >> 2] = $928;
   HEAP32[$25 >> 2] = 31;
   $934 = $25 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $934 | 0, $26 | 0);
   $935 = __THREW__;
   __THREW__ = 0;
   do if ($935 & 1) {
    $959 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body226$index56Z2D = tempRet0;
    $eh$lpad$body226$indexZ2D = $959;
    label = 326;
   } else {
    $937 = $25 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $937 | 0, $27 | 0);
    $938 = __THREW__;
    __THREW__ = 0;
    if ($938 & 1) {
     $940 = ___cxa_find_matching_catch() | 0;
     $941 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($934);
     $eh$lpad$body226$index56Z2D = $941;
     $eh$lpad$body226$indexZ2D = $940;
     label = 326;
     break;
    }
    $942 = $25 + 28 | 0;
    HEAP32[$942 + 0 >> 2] = HEAP32[$921 + 0 >> 2];
    HEAP32[$942 + 4 >> 2] = HEAP32[$921 + 4 >> 2];
    HEAP32[$942 + 8 >> 2] = HEAP32[$921 + 8 >> 2];
    HEAP32[$942 + 12 >> 2] = HEAP32[$921 + 12 >> 2];
    __THREW__ = 0;
    $943 = invoke_ii(67, 52) | 0;
    $944 = __THREW__;
    __THREW__ = 0;
    if ($944 & 1) {
     $961 = ___cxa_find_matching_catch() | 0;
     $962 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($937);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($934);
     $$1812 = $961;
     $$1833 = $962;
     break;
    } else {
     $947 = HEAP32[$25 >> 2] | 0;
     $948 = $943 + 12 | 0;
     HEAP32[$948 + 0 >> 2] = HEAP32[$934 + 0 >> 2];
     HEAP32[$948 + 4 >> 2] = HEAP32[$934 + 4 >> 2];
     HEAP32[$948 + 8 >> 2] = HEAP32[$934 + 8 >> 2];
     HEAP32[$934 + 0 >> 2] = 0;
     HEAP32[$934 + 4 >> 2] = 0;
     HEAP32[$934 + 8 >> 2] = 0;
     $949 = $943 + 24 | 0;
     $950 = $25 + 16 | 0;
     HEAP32[$949 + 0 >> 2] = HEAP32[$950 + 0 >> 2];
     HEAP32[$949 + 4 >> 2] = HEAP32[$950 + 4 >> 2];
     HEAP32[$949 + 8 >> 2] = HEAP32[$950 + 8 >> 2];
     HEAP32[$950 + 0 >> 2] = 0;
     HEAP32[$950 + 4 >> 2] = 0;
     HEAP32[$950 + 8 >> 2] = 0;
     $951 = $943 + 36 | 0;
     HEAP32[$951 + 0 >> 2] = HEAP32[$942 + 0 >> 2];
     HEAP32[$951 + 4 >> 2] = HEAP32[$942 + 4 >> 2];
     HEAP32[$951 + 8 >> 2] = HEAP32[$942 + 8 >> 2];
     HEAP32[$951 + 12 >> 2] = HEAP32[$942 + 12 >> 2];
     HEAP32[$943 + 8 >> 2] = $947;
     HEAP32[$943 + 4 >> 2] = $agg$result;
     $953 = HEAP32[$agg$result >> 2] | 0;
     HEAP32[$943 >> 2] = $953;
     HEAP32[$953 + 4 >> 2] = $943;
     HEAP32[$agg$result >> 2] = $943;
     HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($937);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($934);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 326) {
    $$1812 = $eh$lpad$body226$indexZ2D;
    $$1833 = $eh$lpad$body226$index56Z2D;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
   $$19 = $$1812;
   $$1934 = $$1833;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
  $$20 = $$19;
  $$2035 = $$1934;
 } while (0);
 if (!(HEAP32[$29 >> 2] | 0)) ___resumeException($$20 | 0);
 $965 = HEAP32[$28 >> 2] | 0;
 $967 = (HEAP32[$agg$result >> 2] | 0) + 4 | 0;
 $969 = HEAP32[$965 >> 2] | 0;
 HEAP32[$969 + 4 >> 2] = HEAP32[$967 >> 2];
 HEAP32[HEAP32[$967 >> 2] >> 2] = $969;
 HEAP32[$29 >> 2] = 0;
 if (($965 | 0) == ($agg$result | 0)) ___resumeException($$20 | 0);
 $__f$01$i$i = $965;
 do {
  $__f$01$i$i$looptemp = $__f$01$i$i;
  $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i$looptemp + 24 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i$looptemp + 12 | 0);
  __ZdlPv($__f$01$i$i$looptemp);
 } while (($__f$01$i$i | 0) != ($agg$result | 0));
 ___resumeException($$20 | 0);
}
function _printf_core($f, $fmt, $ap, $nl_arg, $nl_type) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 $nl_arg = $nl_arg | 0;
 $nl_type = $nl_type | 0;
 var $$$p$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i105$i = 0, $$0$lcssa$i112$i = 0, $$0$lcssa$i136$i = 0, $$0$lcssa$i151$i = 0, $$0$lcssa$i47 = 0, $$0$lcssa$i47$i = 0, $$0$lcssa$i52 = 0, $$0$lcssa$i54 = 0, $$0$lcssa$i54$i = 0, $$0$lcssa$i56$i = 0, $$0$lcssa$i62 = 0, $$0$lcssa$i64$i = 0, $$0$lcssa$i69 = 0, $$0$lcssa$i71$i = 0, $$0$lcssa$i76 = 0, $$0$lcssa$i77$i = 0, $$0$lcssa$i84$i = 0, $$0$lcssa$i86 = 0, $$0$lcssa$i92$i = 0, $$0$ph = 0, $$0$ph340 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i103$i = 0, $$01$i110$i = 0, $$01$i134$i = 0, $$01$i149$i = 0, $$01$i45 = 0, $$01$i45$i = 0, $$01$i52$i = 0, $$01$i60 = 0, $$01$i62$i = 0, $$01$i67 = 0, $$01$i69$i = 0, $$01$i74 = 0, $$01$i75$i = 0, $$01$i82$i = 0, $$01$i84 = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i93$i = 0, $$012$i = 0, $$013$i = 0.0, $$019$i = 0, $$03$i49 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i87$i = 0, $$1$i = 0.0, $$1$lcssa$i$i = 0, $$1$lcssa$i120$i = 0, $$12$i = 0, $$12$i$i = 0, $$12$i118$i = 0, $$12$i127$i = 0, $$12$i142$i = 0, $$12$i142$i$lcssa = 0, $$12$i95$i = 0, $$120$i = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$216$i = 0, $$26$i = 0, $$26$us$i = 0, $$28$i = 0.0, $$29$i = 0, $$3$i = 0.0, $$31$i = 0, $$317$i = 0, $$39$i = 0, $$4$i = 0.0, $$418$lcssa$i = 0, $$418193$i = 0, $$5205$i = 0, $$93 = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us310$i = 0, $$a$3$us310$i$lcssa = 0, $$a$3312$i = 0, $$a$3312$i$lcssa = 0, $$be = 0, $$be341 = 0, $$be342 = 0, $$fl$4 = 0, $$lcssa = 0, $$lcssa107 = 0, $$lcssa107$ph = 0, $$lcssa283$i = 0, $$lcssa344 = 0, $$lcssa345 = 0, $$lcssa346 = 0, $$lcssa347 = 0, $$lcssa348 = 0, $$lcssa350 = 0, $$lcssa352 = 0, $$lcssa353 = 0, $$lcssa354 = 0, $$lcssa355 = 0, $$lcssa356 = 0, $$lcssa357 = 0, $$lcssa358 = 0, $$lcssa359 = 0, $$lcssa360 = 0, $$lcssa361 = 0, $$lcssa362 = 0, $$lcssa363 = 0, $$lcssa364 = 0, $$lcssa365 = 0, $$lcssa367 = 0, $$lcssa368 = 0, $$lcssa369 = 0, $$lcssa370 = 0, $$lcssa371 = 0, $$lcssa372 = 0, $$lcssa373 = 0, $$lcssa374 = 0, $$lcssa375 = 0, $$lcssa376 = 0, $$lcssa377 = 0, $$lcssa378 = 0.0, $$lcssa379 = 0, $$lcssa381 = 0, $$lcssa382 = 0, $$lcssa384 = 0, $$lcssa385 = 0, $$lcssa386 = 0, $$p$5 = 0, $$p$i = 0, $$ph = 0, $$pn$i = 0, $$pr$i = 0, $$pr154$i = 0, $$pre308$i = 0, $$z$4$us$i = 0, $$z$4$us$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1009 = 0, $1011 = 0, $1013 = 0, $1015 = 0, $1016 = 0, $1024 = 0, $1032 = 0, $1040 = 0, $105 = 0, $1050 = 0, $1053 = 0, $1060 = 0, $1061 = 0, $1067 = 0, $1068 = 0, $107 = 0, $1071 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1091 = 0, $1092 = 0, $1094 = 0, $1097 = 0, $1098 = 0, $11 = 0, $110 = 0, $1107 = 0, $1108 = 0, $1110 = 0, $1113 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1133 = 0, $1134 = 0, $1136 = 0, $1139 = 0, $1148 = 0, $1149 = 0, $1150 = 0, $1159 = 0, $1160 = 0.0, $1166 = 0, $1167 = 0.0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $1190 = 0, $1191 = 0, $1193 = 0, $1195 = 0, $12 = 0, $13 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $140$phi = 0, $144 = 0, $146 = 0, $148 = 0, $15 = 0, $150 = 0, $151 = 0, $156 = 0, $159 = 0, $16 = 0, $171 = 0, $172 = 0, $179 = 0, $180 = 0, $188 = 0, $189 = 0, $195 = 0, $196 = 0, $198 = 0, $2 = 0, $201 = 0, $207 = 0, $208 = 0, $219 = 0, $22 = 0, $220 = 0, $226 = 0, $227 = 0, $23 = 0, $238 = 0, $239 = 0, $245 = 0, $246 = 0.0, $25 = 0, $254 = 0, $255 = 0.0, $259 = 0, $26 = 0, $266 = 0, $267 = 0, $273 = 0, $28 = 0, $285 = 0, $292 = 0, $294 = 0, $298 = 0, $3 = 0, $304 = 0, $305 = 0, $31 = 0, $317 = 0, $319 = 0, $32 = 0, $322 = 0, $323 = 0, $333 = 0, $337 = 0, $339 = 0, $341 = 0, $346 = 0, $347 = 0, $348 = 0, $352 = 0, $353 = 0, $364 = 0, $369 = 0, $37 = 0, $371 = 0, $373 = 0, $379 = 0, $387 = 0, $39 = 0, $393 = 0, $395 = 0, $397 = 0, $4 = 0, $40 = 0, $402 = 0, $405 = 0, $407 = 0, $408 = 0, $416 = 0, $418 = 0, $424 = 0, $432 = 0.0, $437 = 0, $44 = 0, $441 = 0, $448 = 0, $452 = 0, $455 = 0, $456 = 0, $46 = 0, $465 = 0, $47 = 0, $473 = 0.0, $474 = 0, $477 = 0, $479 = 0, $482 = 0, $486 = 0.0, $496 = 0, $499 = 0, $5 = 0, $503 = 0, $504 = 0, $505 = 0, $509 = 0, $51 = 0, $510 = 0, $521 = 0, $533 = 0, $536 = 0, $542 = 0, $551 = 0, $557 = 0, $56 = 0, $566 = 0, $572 = 0, $584 = 0, $589 = 0, $59 = 0, $590 = 0, $592 = 0, $593 = 0, $6 = 0, $60 = 0, $601 = 0, $608 = 0, $61 = 0, $610 = 0, $612 = 0, $621 = 0, $631 = 0, $632 = 0, $634 = 0, $635 = 0, $636 = 0, $642 = 0, $644 = 0, $647 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $653 = 0, $655 = 0, $655$phi = 0, $658 = 0, $660 = 0, $664 = 0, $669 = 0, $67 = 0, $671 = 0, $672 = 0, $691 = 0, $693 = 0, $696 = 0, $697 = 0, $7 = 0, $701 = 0, $709 = 0, $710 = 0, $711 = 0, $715 = 0, $736 = 0, $737 = 0, $740 = 0, $745 = 0, $747 = 0, $754 = 0, $755 = 0, $756 = 0, $759 = 0, $760 = 0, $761 = 0, $768 = 0, $778 = 0, $781 = 0, $783 = 0, $785 = 0, $787 = 0, $792 = 0, $793 = 0, $796 = 0, $798 = 0, $8 = 0, $800 = 0, $802 = 0, $816 = 0, $821 = 0, $830 = 0, $831 = 0, $835 = 0, $838 = 0, $841 = 0, $842 = 0, $844 = 0, $848 = 0, $852 = 0, $853 = 0, $854 = 0, $858 = 0, $859 = 0, $870 = 0, $876 = 0, $886 = 0, $891 = 0, $892 = 0, $894 = 0, $895 = 0, $9 = 0, $903 = 0, $91 = 0, $911 = 0, $912 = 0, $914 = 0, $916 = 0, $917 = 0, $92 = 0, $922 = 0, $927 = 0, $932 = 0, $941 = 0, $946 = 0, $950 = 0, $952 = 0, $954 = 0, $955 = 0, $955$phi = 0, $956 = 0, $968 = 0, $969 = 0, $974 = 0, $98 = 0, $980 = 0, $984 = 0, $986 = 0, $99 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1261$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$2$ph$i$lcssa = 0, $a$3$lcssa$i = 0, $a$3248$i = 0, $a$3248$us$i = 0, $a$5$lcssa$i = 0, $a$5223$i = 0, $a$6$i = 0, $a$6$i$lcssa = 0, $a$7$i = 0, $a$8$ph$i = 0, $a$8$ph294$i = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0254$i = 0, $carry3$0242$i = 0, $carry3$0242$us$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0253$i = 0, $d$0255$i = 0, $d$1241$i = 0, $d$1241$us$i = 0, $d$2$lcssa$i = 0, $d$2222$i = 0, $d$3$i = 0, $d$4199$i = 0, $d$5192$i = 0, $d$6204$i = 0, $e$0237$i = 0, $e$1$i = 0, $e$2218$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1209$i = 0, $estr$2$i = 0, $fl$0111 = 0, $fl$0111$ph = 0, $fl$0171 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa272 = 0, $i$0176 = 0, $i$0236$i = 0, $i$03$i = 0, $i$03$i31 = 0, $i$1$lcssa$i = 0, $i$1187 = 0, $i$1230$i = 0, $i$2163 = 0, $i$2163$lcssa = 0, $i$2217$i = 0, $i$3161 = 0, $i$3213$i = 0, $isdigittmp = 0, $isdigittmp1$i = 0, $isdigittmp1$i28 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i30 = 0, $isdigittmp9 = 0, $j$0229$i = 0, $j$0231$i = 0, $j$1214$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$be = 0, $l$0$i = 0, $l$1175 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$be = 0, $l10n$0$lcssa = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $or$cond19 = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$4271 = 0, $p$5 = 0, $pad$i = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$1187$i = 0, $round$0186$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0, $s$1$i = 0, $s$1$i$lcssa = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$i$lcssa = 0, $s$1$us$us$i = 0, $s$1$us$us$i$lcssa = 0, $s1$0$i = 0, $s7$0196$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0188$i = 0, $s8$0188$i$ph = 0, $s9$0$i = 0, $s9$1200$i = 0, $s9$2$i = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa351 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8109 = 0, $storemerge8109$ph = 0, $storemerge8170 = 0, $t$0 = 0, $t$1 = 0, $uglygep296$i = 0, $uglygep300301$i = 0, $umax$i = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0, $wc = 0, $ws$0177 = 0, $ws$1188 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i117$i = 0, $y$03$i126$i = 0, $y$03$i141$i = 0, $y$03$i94$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0$lcssa$ph = 0, $z$0164 = 0, $z$1$lcssa$i = 0, $z$1260$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$2$i$lcssa$lcssa = 0, $z$3$lcssa$i = 0, $z$3247$i = 0, $z$3247$us$i = 0, $z$4$i = 0, $z$4$us$i = 0, $z$5$i = 0, $z$5$i$lcssa = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864 | 0;
 $big$i = sp + 16 | 0;
 $e2$i = sp + 8 | 0;
 $buf$i = sp + 836 | 0;
 $0 = $buf$i;
 $ebuf0$i = sp + 824 | 0;
 $pad$i = sp + 568 | 0;
 $buf = sp + 528 | 0;
 $wc = sp;
 $mb = sp + 520 | 0;
 $1 = ($f | 0) != 0;
 $2 = $buf + 40 | 0;
 $3 = $2;
 $4 = $buf + 39 | 0;
 $5 = $wc + 4 | 0;
 $6 = $wc;
 $7 = $ebuf0$i + 12 | 0;
 $8 = $ebuf0$i + 11 | 0;
 $9 = $7;
 $10 = $9 - $0 | 0;
 $11 = -2 - $0 | 0;
 $12 = $9 + 2 | 0;
 $13 = $big$i + 288 | 0;
 $14 = $buf$i + 9 | 0;
 $15 = $14;
 $16 = $buf$i + 8 | 0;
 $1175 = 0;
 $1176 = 0;
 $23 = $fmt;
 $cnt$0 = 0;
 $l$0 = 0;
 $l10n$0 = 0;
 L1 : while (1) {
  do if (($cnt$0 | 0) > -1) if (($l$0 | 0) > (2147483647 - $cnt$0 | 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 75;
   $cnt$1 = -1;
   break;
  } else {
   $cnt$1 = $l$0 + $cnt$0 | 0;
   break;
  } else $cnt$1 = $cnt$0; while (0);
  $22 = HEAP8[$23 >> 0] | 0;
  if (!($22 << 24 >> 24)) {
   $cnt$1$lcssa = $cnt$1;
   $l10n$0$lcssa = $l10n$0;
   label = 429;
   break;
  }
  $1177 = $22;
  $26 = $23;
  while (1) {
   if (!($1177 << 24 >> 24)) {
    $$lcssa344 = $26;
    label = 14;
    break;
   } else if ($1177 << 24 >> 24 == 37) {
    $$lcssa = $26;
    label = 9;
    break;
   }
   $25 = $26 + 1 | 0;
   $1177 = HEAP8[$25 >> 0] | 0;
   $26 = $25;
  }
  if ((label | 0) == 9) {
   label = 0;
   $28 = $$lcssa;
   $z$0164 = $$lcssa;
   while (1) {
    if ((HEAP8[$28 + 1 >> 0] | 0) != 37) {
     $$lcssa107$ph = $28;
     $z$0$lcssa$ph = $z$0164;
     break;
    }
    $31 = $z$0164 + 1 | 0;
    $32 = $28 + 2 | 0;
    if ((HEAP8[$32 >> 0] | 0) == 37) {
     $28 = $32;
     $z$0164 = $31;
    } else {
     $$lcssa107$ph = $32;
     $z$0$lcssa$ph = $31;
     break;
    }
   }
   $$lcssa107 = $$lcssa107$ph;
   $z$0$lcssa = $z$0$lcssa$ph;
  } else if ((label | 0) == 14) {
   label = 0;
   $$lcssa107 = $$lcssa344;
   $z$0$lcssa = $$lcssa344;
  }
  $37 = $z$0$lcssa - $23 | 0;
  if ($1) ___fwritex($23, $37, $f) | 0;
  L24 : do if (($z$0$lcssa | 0) == ($23 | 0)) {
   $39 = $$lcssa107 + 1 | 0;
   $40 = HEAP8[$39 >> 0] | 0;
   $isdigittmp = ($40 << 24 >> 24) + -48 | 0;
   if ($isdigittmp >>> 0 < 10) {
    $44 = (HEAP8[$$lcssa107 + 2 >> 0] | 0) == 36;
    $$93 = $44 ? $$lcssa107 + 3 | 0 : $39;
    $47 = HEAP8[$$93 >> 0] | 0;
    $argpos$0 = $44 ? $isdigittmp : -1;
    $l10n$1 = $44 ? 1 : $l10n$0;
    $storemerge = $$93;
   } else {
    $47 = $40;
    $argpos$0 = -1;
    $l10n$1 = $l10n$0;
    $storemerge = $39;
   }
   $46 = $47 << 24 >> 24;
   if (($46 & -32 | 0) == 32) {
    $51 = $46;
    $56 = $47;
    $fl$0171 = 0;
    $storemerge8170 = $storemerge;
    while (1) {
     if (!(1 << $51 + -32 & 75913)) {
      $$ph = $56;
      $fl$0111$ph = $fl$0171;
      $storemerge8109$ph = $storemerge8170;
      break;
     }
     $59 = 1 << ($56 << 24 >> 24) + -32 | $fl$0171;
     $60 = $storemerge8170 + 1 | 0;
     $61 = HEAP8[$60 >> 0] | 0;
     $51 = $61 << 24 >> 24;
     if (($51 & -32 | 0) != 32) {
      $$ph = $61;
      $fl$0111$ph = $59;
      $storemerge8109$ph = $60;
      break;
     } else {
      $56 = $61;
      $fl$0171 = $59;
      $storemerge8170 = $60;
     }
    }
    $65 = $$ph;
    $fl$0111 = $fl$0111$ph;
    $storemerge8109 = $storemerge8109$ph;
   } else {
    $65 = $47;
    $fl$0111 = 0;
    $storemerge8109 = $storemerge;
   }
   do if ($65 << 24 >> 24 == 42) {
    $67 = $storemerge8109 + 1 | 0;
    $isdigittmp11 = (HEAP8[$67 >> 0] | 0) + -48 | 0;
    if ($isdigittmp11 >>> 0 < 10) if ((HEAP8[$storemerge8109 + 2 >> 0] | 0) == 36) {
     HEAP32[$nl_type + ($isdigittmp11 << 2) >> 2] = 10;
     $l10n$2 = 1;
     $storemerge13 = $storemerge8109 + 3 | 0;
     $w$0 = HEAP32[$nl_arg + ((HEAP8[$67 >> 0] | 0) + -48 << 3) >> 2] | 0;
    } else label = 29; else label = 29;
    if ((label | 0) == 29) {
     label = 0;
     if ($l10n$1) {
      $$0$ph340 = -1;
      label = 453;
      break L1;
     }
     if (!$1) {
      $105 = $67;
      $fl$1 = $fl$0111;
      $l10n$3 = 0;
      $w$1 = 0;
      break;
     }
     $91 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $92 = HEAP32[$91 >> 2] | 0;
     HEAP32[$ap >> 2] = $91 + 4;
     $l10n$2 = 0;
     $storemerge13 = $67;
     $w$0 = $92;
    }
    if (($w$0 | 0) < 0) {
     $105 = $storemerge13;
     $fl$1 = $fl$0111 | 8192;
     $l10n$3 = $l10n$2;
     $w$1 = 0 - $w$0 | 0;
    } else {
     $105 = $storemerge13;
     $fl$1 = $fl$0111;
     $l10n$3 = $l10n$2;
     $w$1 = $w$0;
    }
   } else {
    $isdigittmp1$i = ($65 << 24 >> 24) + -48 | 0;
    if ($isdigittmp1$i >>> 0 < 10) {
     $100 = $storemerge8109;
     $i$03$i = 0;
     $isdigittmp4$i = $isdigittmp1$i;
     while (1) {
      $98 = ($i$03$i * 10 | 0) + $isdigittmp4$i | 0;
      $99 = $100 + 1 | 0;
      $isdigittmp4$i = (HEAP8[$99 >> 0] | 0) + -48 | 0;
      if ($isdigittmp4$i >>> 0 >= 10) {
       $$lcssa345 = $98;
       $$lcssa346 = $99;
       break;
      } else {
       $100 = $99;
       $i$03$i = $98;
      }
     }
     if (($$lcssa345 | 0) < 0) {
      $$0$ph340 = -1;
      label = 453;
      break L1;
     } else {
      $105 = $$lcssa346;
      $fl$1 = $fl$0111;
      $l10n$3 = $l10n$1;
      $w$1 = $$lcssa345;
     }
    } else {
     $105 = $storemerge8109;
     $fl$1 = $fl$0111;
     $l10n$3 = $l10n$1;
     $w$1 = 0;
    }
   } while (0);
   do if ((HEAP8[$105 >> 0] | 0) == 46) {
    $107 = $105 + 1 | 0;
    $108 = HEAP8[$107 >> 0] | 0;
    if ($108 << 24 >> 24 != 42) {
     $isdigittmp1$i28 = ($108 << 24 >> 24) + -48 | 0;
     if ($isdigittmp1$i28 >>> 0 >= 10) {
      $1178 = $107;
      $p$0 = 0;
      break;
     }
     $1179 = $107;
     $140 = $105;
     $i$03$i31 = 0;
     $isdigittmp4$i30 = $isdigittmp1$i28;
     while (1) {
      $138 = ($i$03$i31 * 10 | 0) + $isdigittmp4$i30 | 0;
      $139 = $140 + 2 | 0;
      $isdigittmp4$i30 = (HEAP8[$139 >> 0] | 0) + -48 | 0;
      if ($isdigittmp4$i30 >>> 0 >= 10) {
       $$lcssa347 = $138;
       $$lcssa348 = $139;
       break;
      } else {
       $140$phi = $1179;
       $1179 = $139;
       $i$03$i31 = $138;
       $140 = $140$phi;
      }
     }
     $1178 = $$lcssa348;
     $p$0 = $$lcssa347;
     break;
    }
    $110 = $105 + 2 | 0;
    $isdigittmp9 = (HEAP8[$110 >> 0] | 0) + -48 | 0;
    if ($isdigittmp9 >>> 0 < 10) if ((HEAP8[$105 + 3 >> 0] | 0) == 36) {
     HEAP32[$nl_type + ($isdigittmp9 << 2) >> 2] = 10;
     $1178 = $105 + 4 | 0;
     $p$0 = HEAP32[$nl_arg + ((HEAP8[$110 >> 0] | 0) + -48 << 3) >> 2] | 0;
     break;
    }
    if ($l10n$3) {
     $$0$ph340 = -1;
     label = 453;
     break L1;
    }
    if ($1) {
     $134 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $135 = HEAP32[$134 >> 2] | 0;
     HEAP32[$ap >> 2] = $134 + 4;
     $1178 = $110;
     $p$0 = $135;
    } else {
     $1178 = $110;
     $p$0 = 0;
    }
   } else {
    $1178 = $105;
    $p$0 = -1;
   } while (0);
   $144 = $1178;
   $st$0 = 0;
   while (1) {
    $146 = (HEAP8[$144 >> 0] | 0) + -65 | 0;
    if ($146 >>> 0 > 57) {
     label = 452;
     break L1;
    }
    $148 = $144 + 1 | 0;
    $150 = HEAP8[45128 + ($st$0 * 58 | 0) + $146 >> 0] | 0;
    $151 = $150 & 255;
    if (($151 + -1 | 0) >>> 0 < 8) {
     $144 = $148;
     $st$0 = $151;
    } else {
     $$lcssa350 = $144;
     $$lcssa352 = $148;
     $$lcssa353 = $150;
     $$lcssa354 = $151;
     $st$0$lcssa351 = $st$0;
     break;
    }
   }
   if (!($$lcssa353 << 24 >> 24)) {
    $$0$ph340 = -1;
    label = 453;
    break L1;
   }
   $156 = ($argpos$0 | 0) > -1;
   L74 : do if ($$lcssa353 << 24 >> 24 == 19) if ($156) {
    $$0$ph340 = -1;
    label = 453;
    break L1;
   } else {
    $1180 = $1175;
    $1181 = $1176;
    label = 71;
   } else {
    if ($156) {
     HEAP32[$nl_type + ($argpos$0 << 2) >> 2] = $$lcssa354;
     $159 = $nl_arg + ($argpos$0 << 3) | 0;
     $1180 = HEAP32[$159 + 4 >> 2] | 0;
     $1181 = HEAP32[$159 >> 2] | 0;
     label = 71;
     break;
    }
    if (!$1) {
     $$0$ph340 = 0;
     label = 453;
     break L1;
    }
    if (($$lcssa353 & 255) > 20) {
     $1182 = $$lcssa352;
     $267 = $1176;
     $294 = $1175;
    } else do switch ($$lcssa354 | 0) {
    case 10:
     {
      $179 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $180 = HEAP32[$179 >> 2] | 0;
      HEAP32[$ap >> 2] = $179 + 4;
      $1182 = $$lcssa352;
      $267 = $180;
      $294 = (($180 | 0) < 0) << 31 >> 31;
      break L74;
      break;
     }
    case 13:
     {
      $207 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $208 = HEAP32[$207 >> 2] | 0;
      HEAP32[$ap >> 2] = $207 + 4;
      $1182 = $$lcssa352;
      $267 = $208 << 16 >> 16;
      $294 = ((($208 & 65535) << 16 >> 16 | 0) < 0) << 31 >> 31;
      break L74;
      break;
     }
    case 18:
     {
      $254 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
      $255 = +HEAPF64[$254 >> 3];
      HEAP32[$ap >> 2] = $254 + 8;
      HEAPF64[tempDoublePtr >> 3] = $255;
      $1182 = $$lcssa352;
      $267 = HEAP32[tempDoublePtr >> 2] | 0;
      $294 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
      break L74;
      break;
     }
    case 16:
     {
      $238 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $239 = HEAP32[$238 >> 2] | 0;
      HEAP32[$ap >> 2] = $238 + 4;
      $1182 = $$lcssa352;
      $267 = $239 & 255;
      $294 = 0;
      break L74;
      break;
     }
    case 12:
     {
      $195 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
      $196 = $195;
      $198 = HEAP32[$196 >> 2] | 0;
      $201 = HEAP32[$196 + 4 >> 2] | 0;
      HEAP32[$ap >> 2] = $195 + 8;
      $1182 = $$lcssa352;
      $267 = $198;
      $294 = $201;
      break L74;
      break;
     }
    case 17:
     {
      $245 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
      $246 = +HEAPF64[$245 >> 3];
      HEAP32[$ap >> 2] = $245 + 8;
      HEAPF64[tempDoublePtr >> 3] = $246;
      $1182 = $$lcssa352;
      $267 = HEAP32[tempDoublePtr >> 2] | 0;
      $294 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
      break L74;
      break;
     }
    case 14:
     {
      $219 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $220 = HEAP32[$219 >> 2] | 0;
      HEAP32[$ap >> 2] = $219 + 4;
      $1182 = $$lcssa352;
      $267 = $220 & 65535;
      $294 = 0;
      break L74;
      break;
     }
    case 9:
     {
      $171 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $172 = HEAP32[$171 >> 2] | 0;
      HEAP32[$ap >> 2] = $171 + 4;
      $1182 = $$lcssa352;
      $267 = $172;
      $294 = $1175;
      break L74;
      break;
     }
    case 15:
     {
      $226 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $227 = HEAP32[$226 >> 2] | 0;
      HEAP32[$ap >> 2] = $226 + 4;
      $1182 = $$lcssa352;
      $267 = $227 << 24 >> 24;
      $294 = ((($227 & 255) << 24 >> 24 | 0) < 0) << 31 >> 31;
      break L74;
      break;
     }
    case 11:
     {
      $188 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $189 = HEAP32[$188 >> 2] | 0;
      HEAP32[$ap >> 2] = $188 + 4;
      $1182 = $$lcssa352;
      $267 = $189;
      $294 = 0;
      break L74;
      break;
     }
    default:
     {
      $1182 = $$lcssa352;
      $267 = $1176;
      $294 = $1175;
      break L74;
     }
    } while (0);
   } while (0);
   if ((label | 0) == 71) {
    label = 0;
    if ($1) {
     $1182 = $$lcssa352;
     $267 = $1181;
     $294 = $1180;
    } else {
     $$be = $$lcssa352;
     $$be341 = $1180;
     $$be342 = $1181;
     $l$0$be = $37;
     $l10n$0$be = $l10n$3;
     break;
    }
   }
   $259 = HEAP8[$$lcssa350 >> 0] | 0;
   $t$0 = ($st$0$lcssa351 | 0) != 0 & ($259 & 15 | 0) == 3 ? $259 & -33 : $259;
   $266 = $fl$1 & -65537;
   $fl$1$ = ($fl$1 & 8192 | 0) == 0 ? $fl$1 : $266;
   L96 : do switch ($t$0 | 0) {
   case 67:
    {
     HEAP32[$wc >> 2] = $267;
     HEAP32[$5 >> 2] = 0;
     $1187 = $wc;
     $1188 = $6;
     $p$4271 = -1;
     label = 114;
     break;
    }
   case 109:
    {
     $a$1 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
     label = 109;
     break;
    }
   case 117:
    {
     $339 = $294;
     $341 = $267;
     $pl$0 = 0;
     $prefix$0 = 45592;
     label = 96;
     break;
    }
   case 99:
    {
     HEAP8[$4 >> 0] = $267;
     $1183 = $294;
     $1184 = $267;
     $a$2 = $4;
     $fl$6 = $266;
     $p$5 = 1;
     $pl$2 = 0;
     $prefix$2 = 45592;
     $z$2 = $2;
     break;
    }
   case 111:
    {
     $317 = ($267 | 0) == 0 & ($294 | 0) == 0;
     if ($317) $$0$lcssa$i52 = $2; else {
      $$03$i49 = $2;
      $319 = $267;
      $323 = $294;
      while (1) {
       $322 = $$03$i49 + -1 | 0;
       HEAP8[$322 >> 0] = $319 & 7 | 48;
       $319 = _bitshift64Lshr($319 | 0, $323 | 0, 3) | 0;
       $323 = tempRet0;
       if (($319 | 0) == 0 & ($323 | 0) == 0) {
        $$lcssa385 = $322;
        break;
       } else $$03$i49 = $322;
      }
      $$0$lcssa$i52 = $$lcssa385;
     }
     $or$cond19 = ($fl$1$ & 8 | 0) == 0 | $317;
     $369 = $267;
     $371 = $294;
     $a$0 = $$0$lcssa$i52;
     $fl$4 = $fl$1$;
     $p$2 = $p$0;
     $pl$1 = $or$cond19 & 1 ^ 1;
     $prefix$1 = $or$cond19 ? 45592 : 45597;
     label = 104;
     break;
    }
   case 105:
   case 100:
    {
     if (($294 | 0) < 0) {
      $333 = _i64Subtract(0, 0, $267 | 0, $294 | 0) | 0;
      $339 = tempRet0;
      $341 = $333;
      $pl$0 = 1;
      $prefix$0 = 45592;
      label = 96;
      break L96;
     }
     if (!($fl$1$ & 2048)) {
      $337 = $fl$1$ & 1;
      $339 = $294;
      $341 = $267;
      $pl$0 = $337;
      $prefix$0 = ($337 | 0) == 0 ? 45592 : 45594;
      label = 96;
     } else {
      $339 = $294;
      $341 = $267;
      $pl$0 = 1;
      $prefix$0 = 45593;
      label = 96;
     }
     break;
    }
   case 112:
    {
     $fl$3 = $fl$1$ | 8;
     $p$1 = $p$0 >>> 0 > 8 ? $p$0 : 8;
     $t$1 = 120;
     label = 82;
     break;
    }
   case 83:
    {
     $393 = $267;
     if (!$p$0) {
      $1189 = $267;
      $1190 = $393;
      $i$0$lcssa272 = 0;
      label = 119;
     } else {
      $1187 = $393;
      $1188 = $267;
      $p$4271 = $p$0;
      label = 114;
     }
     break;
    }
   case 88:
   case 120:
    {
     $fl$3 = $fl$1$;
     $p$1 = $p$0;
     $t$1 = $t$0;
     label = 82;
     break;
    }
   case 110:
    {
     switch ($st$0$lcssa351 | 0) {
     case 7:
      {
       $285 = $267;
       HEAP32[$285 >> 2] = $cnt$1;
       HEAP32[$285 + 4 >> 2] = (($cnt$1 | 0) < 0) << 31 >> 31;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     case 4:
      {
       HEAP8[$267 >> 0] = $cnt$1;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     case 6:
      {
       HEAP32[$267 >> 2] = $cnt$1;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     case 3:
      {
       HEAP16[$267 >> 1] = $cnt$1;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     case 1:
      {
       HEAP32[$267 >> 2] = $cnt$1;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     case 0:
      {
       HEAP32[$267 >> 2] = $cnt$1;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     case 2:
      {
       $273 = $267;
       HEAP32[$273 >> 2] = $cnt$1;
       HEAP32[$273 + 4 >> 2] = (($cnt$1 | 0) < 0) << 31 >> 31;
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
       break;
      }
     default:
      {
       $$be = $1182;
       $$be341 = $294;
       $$be342 = $267;
       $l$0$be = $37;
       $l10n$0$be = $l10n$3;
       break L24;
      }
     }
     break;
    }
   case 115:
    {
     $a$1 = ($267 | 0) == 0 ? 45608 : $267;
     label = 109;
     break;
    }
   case 65:
   case 71:
   case 70:
   case 69:
   case 97:
   case 103:
   case 102:
   case 101:
    {
     HEAP32[tempDoublePtr >> 2] = $267;
     HEAP32[tempDoublePtr + 4 >> 2] = $294;
     $432 = +HEAPF64[tempDoublePtr >> 3];
     HEAP32[$e2$i >> 2] = 0;
     if (($294 | 0) < 0) {
      $$013$i = -$432;
      $pl$0$i = 1;
      $prefix$0$i = 45616;
     } else if (!($fl$1$ & 2048)) {
      $437 = $fl$1$ & 1;
      $$013$i = $432;
      $pl$0$i = $437;
      $prefix$0$i = ($437 | 0) == 0 ? 45617 : 45622;
     } else {
      $$013$i = $432;
      $pl$0$i = 1;
      $prefix$0$i = 45619;
     }
     HEAPF64[tempDoublePtr >> 3] = $$013$i;
     $441 = HEAP32[tempDoublePtr + 4 >> 2] & 2146435072;
     do if ($441 >>> 0 < 2146435072 | ($441 | 0) == 2146435072 & 0 < 0) {
      $473 = +_frexpl($$013$i, $e2$i) * 2.0;
      $474 = $473 != 0.0;
      if ($474) HEAP32[$e2$i >> 2] = (HEAP32[$e2$i >> 2] | 0) + -1;
      $477 = $t$0 | 32;
      if (($477 | 0) == 97) {
       $479 = $t$0 & 32;
       $prefix$0$$i = ($479 | 0) == 0 ? $prefix$0$i : $prefix$0$i + 9 | 0;
       $482 = $pl$0$i | 2;
       do if ($p$0 >>> 0 > 11) $$1$i = $473; else {
        $re$1187$i = 12 - $p$0 | 0;
        $round$0186$i = 8.0;
        while (1) {
         $re$1187$i = $re$1187$i + -1 | 0;
         $486 = $round$0186$i * 16.0;
         if (!$re$1187$i) {
          $$lcssa378 = $486;
          break;
         } else $round$0186$i = $486;
        }
        if ((HEAP8[$prefix$0$$i >> 0] | 0) == 45) {
         $$1$i = -($$lcssa378 + (-$473 - $$lcssa378));
         break;
        } else {
         $$1$i = $473 + $$lcssa378 - $$lcssa378;
         break;
        }
       } while (0);
       $496 = HEAP32[$e2$i >> 2] | 0;
       $499 = ($496 | 0) < 0 ? 0 - $496 | 0 : $496;
       if (($499 | 0) < 0) {
        $$05$i$i = $7;
        $503 = $499;
        $504 = (($499 | 0) < 0) << 31 >> 31;
        while (1) {
         $505 = ___uremdi3($503 | 0, $504 | 0, 10, 0) | 0;
         $509 = $$05$i$i + -1 | 0;
         HEAP8[$509 >> 0] = $505 | 48;
         $510 = ___udivdi3($503 | 0, $504 | 0, 10, 0) | 0;
         if ($504 >>> 0 > 9 | ($504 | 0) == 9 & $503 >>> 0 > 4294967295) {
          $$05$i$i = $509;
          $503 = $510;
          $504 = tempRet0;
         } else {
          $$lcssa379 = $509;
          $1191 = $510;
          break;
         }
        }
        $$0$lcssa$i56$i = $$lcssa379;
        $$01$lcssa$off0$i$i = $1191;
       } else {
        $$0$lcssa$i56$i = $7;
        $$01$lcssa$off0$i$i = $499;
       }
       if (!$$01$lcssa$off0$i$i) $$1$lcssa$i$i = $$0$lcssa$i56$i; else {
        $$12$i$i = $$0$lcssa$i56$i;
        $y$03$i$i = $$01$lcssa$off0$i$i;
        while (1) {
         $521 = $$12$i$i + -1 | 0;
         HEAP8[$521 >> 0] = ($y$03$i$i >>> 0) % 10 | 0 | 48;
         if ($y$03$i$i >>> 0 < 10) {
          $$lcssa381 = $521;
          break;
         } else {
          $$12$i$i = $521;
          $y$03$i$i = ($y$03$i$i >>> 0) / 10 | 0;
         }
        }
        $$1$lcssa$i$i = $$lcssa381;
       }
       if (($$1$lcssa$i$i | 0) == ($7 | 0)) {
        HEAP8[$8 >> 0] = 48;
        $estr$0$i = $8;
       } else $estr$0$i = $$1$lcssa$i$i;
       HEAP8[$estr$0$i + -1 >> 0] = (HEAP32[$e2$i >> 2] >> 31 & 2) + 43;
       $533 = $estr$0$i + -2 | 0;
       HEAP8[$533 >> 0] = $t$0 + 15;
       do if (!($fl$1$ & 8)) if (($p$0 | 0) < 1) {
        $$2$us$us$i = $$1$i;
        $s$0$us$us$i = $buf$i;
        while (1) {
         $536 = ~~$$2$us$us$i;
         $542 = $s$0$us$us$i + 1 | 0;
         HEAP8[$s$0$us$us$i >> 0] = HEAPU8[45672 + $536 >> 0] | $479;
         $$2$us$us$i = ($$2$us$us$i - +($536 | 0)) * 16.0;
         if (($542 - $0 | 0) != 1 | $$2$us$us$i == 0.0) $s$1$us$us$i = $542; else {
          HEAP8[$542 >> 0] = 46;
          $s$1$us$us$i = $s$0$us$us$i + 2 | 0;
         }
         if (!($$2$us$us$i != 0.0)) {
          $s$1$us$us$i$lcssa = $s$1$us$us$i;
          break;
         } else $s$0$us$us$i = $s$1$us$us$i;
        }
        $s$1$lcssa$i = $s$1$us$us$i$lcssa;
        break;
       } else {
        $$2$us$i = $$1$i;
        $s$0$us$i = $buf$i;
        while (1) {
         $551 = ~~$$2$us$i;
         $557 = $s$0$us$i + 1 | 0;
         HEAP8[$s$0$us$i >> 0] = HEAPU8[45672 + $551 >> 0] | $479;
         $$2$us$i = ($$2$us$i - +($551 | 0)) * 16.0;
         if (($557 - $0 | 0) == 1) {
          HEAP8[$557 >> 0] = 46;
          $s$1$us$i = $s$0$us$i + 2 | 0;
         } else $s$1$us$i = $557;
         if (!($$2$us$i != 0.0)) {
          $s$1$us$i$lcssa = $s$1$us$i;
          break;
         } else $s$0$us$i = $s$1$us$i;
        }
        $s$1$lcssa$i = $s$1$us$i$lcssa;
        break;
       } else {
        $$2$i = $$1$i;
        $s$0$i = $buf$i;
        while (1) {
         $566 = ~~$$2$i;
         $572 = $s$0$i + 1 | 0;
         HEAP8[$s$0$i >> 0] = HEAPU8[45672 + $566 >> 0] | $479;
         $$2$i = ($$2$i - +($566 | 0)) * 16.0;
         if (($572 - $0 | 0) == 1) {
          HEAP8[$572 >> 0] = 46;
          $s$1$i = $s$0$i + 2 | 0;
         } else $s$1$i = $572;
         if (!($$2$i != 0.0)) {
          $s$1$i$lcssa = $s$1$i;
          break;
         } else $s$0$i = $s$1$i;
        }
        $s$1$lcssa$i = $s$1$i$lcssa;
       } while (0);
       $$pre308$i = $s$1$lcssa$i;
       $584 = $533;
       if (($p$0 | 0) != 0 & ($11 + $$pre308$i | 0) < ($p$0 | 0)) $l$0$i = $12 + $p$0 - $584 | 0; else $l$0$i = $10 - $584 + $$pre308$i | 0;
       $589 = $l$0$i + $482 | 0;
       $590 = $fl$1$ & 73728;
       $592 = ($w$1 | 0) > ($589 | 0);
       if (($590 | 0) == 0 & $592) {
        $593 = $w$1 - $589 | 0;
        _memset($pad$i | 0, 32, ($593 >>> 0 > 256 ? 256 : $593) | 0) | 0;
        if ($593 >>> 0 > 255) {
         $$01$i62$i = $593;
         do {
          ___fwritex($pad$i, 256, $f) | 0;
          $$01$i62$i = $$01$i62$i + -256 | 0;
         } while ($$01$i62$i >>> 0 > 255);
         $$0$lcssa$i64$i = $593 & 255;
        } else $$0$lcssa$i64$i = $593;
        ___fwritex($pad$i, $$0$lcssa$i64$i, $f) | 0;
       }
       ___fwritex($prefix$0$$i, $482, $f) | 0;
       if (($590 | 0) == 65536 & $592) {
        $601 = $w$1 - $589 | 0;
        _memset($pad$i | 0, 48, ($601 >>> 0 > 256 ? 256 : $601) | 0) | 0;
        if ($601 >>> 0 > 255) {
         $$01$i69$i = $601;
         do {
          ___fwritex($pad$i, 256, $f) | 0;
          $$01$i69$i = $$01$i69$i + -256 | 0;
         } while ($$01$i69$i >>> 0 > 255);
         $$0$lcssa$i71$i = $601 & 255;
        } else $$0$lcssa$i71$i = $601;
        ___fwritex($pad$i, $$0$lcssa$i71$i, $f) | 0;
       }
       $608 = $$pre308$i - $0 | 0;
       ___fwritex($buf$i, $608, $f) | 0;
       $610 = $9 - $533 | 0;
       $612 = $l$0$i - $610 - $608 | 0;
       if (($612 | 0) > 0) {
        _memset($pad$i | 0, 48, ($612 >>> 0 > 256 ? 256 : $612) | 0) | 0;
        if ($612 >>> 0 > 255) {
         $$01$i75$i = $612;
         do {
          ___fwritex($pad$i, 256, $f) | 0;
          $$01$i75$i = $$01$i75$i + -256 | 0;
         } while ($$01$i75$i >>> 0 > 255);
         $$0$lcssa$i77$i = $612 & 255;
        } else $$0$lcssa$i77$i = $612;
        ___fwritex($pad$i, $$0$lcssa$i77$i, $f) | 0;
       }
       ___fwritex($533, $610, $f) | 0;
       if (($590 | 0) == 8192 & $592) {
        $621 = $w$1 - $589 | 0;
        _memset($pad$i | 0, 32, ($621 >>> 0 > 256 ? 256 : $621) | 0) | 0;
        if ($621 >>> 0 > 255) {
         $$01$i82$i = $621;
         do {
          ___fwritex($pad$i, 256, $f) | 0;
          $$01$i82$i = $$01$i82$i + -256 | 0;
         } while ($$01$i82$i >>> 0 > 255);
         $$0$lcssa$i84$i = $621 & 255;
        } else $$0$lcssa$i84$i = $621;
        ___fwritex($pad$i, $$0$lcssa$i84$i, $f) | 0;
       }
       $$0$i = $592 ? $w$1 : $589;
       break;
      }
      $$p$i = ($p$0 | 0) < 0 ? 6 : $p$0;
      if ($474) {
       $631 = (HEAP32[$e2$i >> 2] | 0) + -28 | 0;
       HEAP32[$e2$i >> 2] = $631;
       $$3$i = $473 * 268435456.0;
       $632 = $631;
      } else {
       $$3$i = $473;
       $632 = HEAP32[$e2$i >> 2] | 0;
      }
      $$39$i = ($632 | 0) < 0 ? $big$i : $13;
      $634 = $$39$i;
      $$4$i = $$3$i;
      $z$0$i = $$39$i;
      while (1) {
       $635 = ~~$$4$i >>> 0;
       HEAP32[$z$0$i >> 2] = $635;
       $636 = $z$0$i + 4 | 0;
       $$4$i = ($$4$i - +($635 >>> 0)) * 1.0e9;
       if (!($$4$i != 0.0)) {
        $$lcssa355 = $636;
        break;
       } else $z$0$i = $636;
      }
      $$pr$i = HEAP32[$e2$i >> 2] | 0;
      if (($$pr$i | 0) > 0) {
       $642 = $$pr$i;
       $a$1261$i = $$39$i;
       $z$1260$i = $$lcssa355;
       while (1) {
        $644 = ($642 | 0) > 29 ? 29 : $642;
        $d$0253$i = $z$1260$i + -4 | 0;
        do if ($d$0253$i >>> 0 < $a$1261$i >>> 0) $a$2$ph$i = $a$1261$i; else {
         $655 = $z$1260$i;
         $carry$0254$i = 0;
         $d$0255$i = $d$0253$i;
         while (1) {
          $647 = _bitshift64Shl(HEAP32[$d$0255$i >> 2] | 0, 0, $644 | 0) | 0;
          $649 = _i64Add($647 | 0, tempRet0 | 0, $carry$0254$i | 0, 0) | 0;
          $650 = tempRet0;
          $651 = ___uremdi3($649 | 0, $650 | 0, 1e9, 0) | 0;
          HEAP32[$d$0255$i >> 2] = $651;
          $653 = ___udivdi3($649 | 0, $650 | 0, 1e9, 0) | 0;
          $d$0$i = $655 + -8 | 0;
          if ($d$0$i >>> 0 < $a$1261$i >>> 0) {
           $$lcssa356 = $653;
           break;
          } else {
           $655$phi = $d$0255$i;
           $carry$0254$i = $653;
           $d$0255$i = $d$0$i;
           $655 = $655$phi;
          }
         }
         if (!$$lcssa356) {
          $a$2$ph$i = $a$1261$i;
          break;
         }
         $658 = $a$1261$i + -4 | 0;
         HEAP32[$658 >> 2] = $$lcssa356;
         $a$2$ph$i = $658;
        } while (0);
        $z$2$i = $z$1260$i;
        while (1) {
         if ($z$2$i >>> 0 <= $a$2$ph$i >>> 0) {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
         $660 = $z$2$i + -4 | 0;
         if (!(HEAP32[$660 >> 2] | 0)) $z$2$i = $660; else {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
        }
        $664 = (HEAP32[$e2$i >> 2] | 0) - $644 | 0;
        HEAP32[$e2$i >> 2] = $664;
        if (($664 | 0) > 0) {
         $642 = $664;
         $a$1261$i = $a$2$ph$i;
         $z$1260$i = $z$2$i$lcssa;
        } else {
         $$lcssa357 = $664;
         $a$2$ph$i$lcssa = $a$2$ph$i;
         $z$2$i$lcssa$lcssa = $z$2$i$lcssa;
         break;
        }
       }
       $$pr154$i = $$lcssa357;
       $a$1$lcssa$i = $a$2$ph$i$lcssa;
       $z$1$lcssa$i = $z$2$i$lcssa$lcssa;
      } else {
       $$pr154$i = $$pr$i;
       $a$1$lcssa$i = $$39$i;
       $z$1$lcssa$i = $$lcssa355;
      }
      do if (($$pr154$i | 0) < 0) {
       $669 = (($$p$i + 25 | 0) / 9 | 0) + 1 | 0;
       if (($477 | 0) == 102) {
        $671 = $$39$i + ($669 << 2) | 0;
        $672 = $$pr154$i;
        $a$3248$us$i = $a$1$lcssa$i;
        $z$3247$us$i = $z$1$lcssa$i;
        while (1) {
         $$26$us$i = ($672 | 0) < -9 ? 9 : 0 - $672 | 0;
         do if ($a$3248$us$i >>> 0 < $z$3247$us$i >>> 0) {
          $693 = (1 << $$26$us$i) + -1 | 0;
          $697 = 1e9 >>> $$26$us$i;
          $carry3$0242$us$i = 0;
          $d$1241$us$i = $a$3248$us$i;
          while (1) {
           $691 = HEAP32[$d$1241$us$i >> 2] | 0;
           HEAP32[$d$1241$us$i >> 2] = ($691 >>> $$26$us$i) + $carry3$0242$us$i;
           $696 = Math_imul($691 & $693, $697) | 0;
           $d$1241$us$i = $d$1241$us$i + 4 | 0;
           if ($d$1241$us$i >>> 0 >= $z$3247$us$i >>> 0) {
            $$lcssa359 = $696;
            break;
           } else $carry3$0242$us$i = $696;
          }
          $$a$3$us$i = (HEAP32[$a$3248$us$i >> 2] | 0) == 0 ? $a$3248$us$i + 4 | 0 : $a$3248$us$i;
          if (!$$lcssa359) {
           $$a$3$us310$i = $$a$3$us$i;
           $z$4$us$i = $z$3247$us$i;
           break;
          }
          HEAP32[$z$3247$us$i >> 2] = $$lcssa359;
          $$a$3$us310$i = $$a$3$us$i;
          $z$4$us$i = $z$3247$us$i + 4 | 0;
         } else {
          $$a$3$us310$i = (HEAP32[$a$3248$us$i >> 2] | 0) == 0 ? $a$3248$us$i + 4 | 0 : $a$3248$us$i;
          $z$4$us$i = $z$3247$us$i;
         } while (0);
         $$z$4$us$i = ($z$4$us$i - $634 >> 2 | 0) > ($669 | 0) ? $671 : $z$4$us$i;
         $672 = (HEAP32[$e2$i >> 2] | 0) + $$26$us$i | 0;
         HEAP32[$e2$i >> 2] = $672;
         if (($672 | 0) >= 0) {
          $$a$3$us310$i$lcssa = $$a$3$us310$i;
          $$z$4$us$i$lcssa = $$z$4$us$i;
          break;
         } else {
          $a$3248$us$i = $$a$3$us310$i;
          $z$3247$us$i = $$z$4$us$i;
         }
        }
        $a$3$lcssa$i = $$a$3$us310$i$lcssa;
        $z$3$lcssa$i = $$z$4$us$i$lcssa;
        break;
       }
       $701 = $$pr154$i;
       $a$3248$i = $a$1$lcssa$i;
       $z$3247$i = $z$1$lcssa$i;
       while (1) {
        $$26$i = ($701 | 0) < -9 ? 9 : 0 - $701 | 0;
        do if ($a$3248$i >>> 0 < $z$3247$i >>> 0) {
         $709 = (1 << $$26$i) + -1 | 0;
         $710 = 1e9 >>> $$26$i;
         $carry3$0242$i = 0;
         $d$1241$i = $a$3248$i;
         while (1) {
          $711 = HEAP32[$d$1241$i >> 2] | 0;
          HEAP32[$d$1241$i >> 2] = ($711 >>> $$26$i) + $carry3$0242$i;
          $715 = Math_imul($711 & $709, $710) | 0;
          $d$1241$i = $d$1241$i + 4 | 0;
          if ($d$1241$i >>> 0 >= $z$3247$i >>> 0) {
           $$lcssa358 = $715;
           break;
          } else $carry3$0242$i = $715;
         }
         $$a$3$i = (HEAP32[$a$3248$i >> 2] | 0) == 0 ? $a$3248$i + 4 | 0 : $a$3248$i;
         if (!$$lcssa358) {
          $$a$3312$i = $$a$3$i;
          $z$4$i = $z$3247$i;
          break;
         }
         HEAP32[$z$3247$i >> 2] = $$lcssa358;
         $$a$3312$i = $$a$3$i;
         $z$4$i = $z$3247$i + 4 | 0;
        } else {
         $$a$3312$i = (HEAP32[$a$3248$i >> 2] | 0) == 0 ? $a$3248$i + 4 | 0 : $a$3248$i;
         $z$4$i = $z$3247$i;
        } while (0);
        if (($z$4$i - $$a$3312$i >> 2 | 0) > ($669 | 0)) $z$5$i = $$a$3312$i + ($669 << 2) | 0; else $z$5$i = $z$4$i;
        $701 = (HEAP32[$e2$i >> 2] | 0) + $$26$i | 0;
        HEAP32[$e2$i >> 2] = $701;
        if (($701 | 0) >= 0) {
         $$a$3312$i$lcssa = $$a$3312$i;
         $z$5$i$lcssa = $z$5$i;
         break;
        } else {
         $a$3248$i = $$a$3312$i;
         $z$3247$i = $z$5$i;
        }
       }
       $a$3$lcssa$i = $$a$3312$i$lcssa;
       $z$3$lcssa$i = $z$5$i$lcssa;
      } else {
       $a$3$lcssa$i = $a$1$lcssa$i;
       $z$3$lcssa$i = $z$1$lcssa$i;
      } while (0);
      do if ($a$3$lcssa$i >>> 0 < $z$3$lcssa$i >>> 0) {
       $736 = ($634 - $a$3$lcssa$i >> 2) * 9 | 0;
       $737 = HEAP32[$a$3$lcssa$i >> 2] | 0;
       if ($737 >>> 0 < 10) {
        $e$1$i = $736;
        break;
       }
       $e$0237$i = $736;
       $i$0236$i = 10;
       while (1) {
        $i$0236$i = $i$0236$i * 10 | 0;
        $740 = $e$0237$i + 1 | 0;
        if ($737 >>> 0 < $i$0236$i >>> 0) {
         $$lcssa360 = $740;
         break;
        } else $e$0237$i = $740;
       }
       $e$1$i = $$lcssa360;
      } else $e$1$i = 0; while (0);
      $745 = ($477 | 0) == 103;
      $747 = $$p$i - (($477 | 0) != 102 ? $e$1$i : 0) + ((($$p$i | 0) != 0 & $745) << 31 >> 31) | 0;
      if (($747 | 0) < ((($z$3$lcssa$i - $634 >> 2) * 9 | 0) + -9 | 0)) {
       $754 = $747 + 9216 | 0;
       $755 = ($754 | 0) / 9 | 0;
       $756 = $$39$i + ($755 + -1023 << 2) | 0;
       $j$0229$i = (($754 | 0) % 9 | 0) + 1 | 0;
       if (($j$0229$i | 0) < 9) {
        $i$1230$i = 10;
        $j$0231$i = $j$0229$i;
        while (1) {
         $759 = $i$1230$i * 10 | 0;
         if (($j$0231$i | 0) == 8) {
          $$lcssa361 = $759;
          break;
         } else {
          $i$1230$i = $759;
          $j$0231$i = $j$0231$i + 1 | 0;
         }
        }
        $i$1$lcssa$i = $$lcssa361;
       } else $i$1$lcssa$i = 10;
       $760 = HEAP32[$756 >> 2] | 0;
       $761 = ($760 >>> 0) % ($i$1$lcssa$i >>> 0) | 0;
       if (!$761) if (($$39$i + ($755 + -1022 << 2) | 0) == ($z$3$lcssa$i | 0)) {
        $a$7$i = $a$3$lcssa$i;
        $d$3$i = $756;
        $e$3$i = $e$1$i;
       } else label = 274; else label = 274;
       do if ((label | 0) == 274) {
        label = 0;
        $$28$i = ((($760 >>> 0) / ($i$1$lcssa$i >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
        $768 = ($i$1$lcssa$i | 0) / 2 | 0;
        do if ($761 >>> 0 < $768 >>> 0) $small$0$i = .5; else {
         if (($761 | 0) == ($768 | 0)) if (($$39$i + ($755 + -1022 << 2) | 0) == ($z$3$lcssa$i | 0)) {
          $small$0$i = 1.0;
          break;
         }
         $small$0$i = 1.5;
        } while (0);
        do if (!$pl$0$i) {
         $round6$1$i = $$28$i;
         $small$1$i = $small$0$i;
        } else {
         if ((HEAP8[$prefix$0$i >> 0] | 0) != 45) {
          $round6$1$i = $$28$i;
          $small$1$i = $small$0$i;
          break;
         }
         $round6$1$i = -$$28$i;
         $small$1$i = -$small$0$i;
        } while (0);
        $778 = $760 - $761 | 0;
        HEAP32[$756 >> 2] = $778;
        if (!($round6$1$i + $small$1$i != $round6$1$i)) {
         $a$7$i = $a$3$lcssa$i;
         $d$3$i = $756;
         $e$3$i = $e$1$i;
         break;
        }
        $781 = $778 + $i$1$lcssa$i | 0;
        HEAP32[$756 >> 2] = $781;
        if ($781 >>> 0 > 999999999) {
         $a$5223$i = $a$3$lcssa$i;
         $d$2222$i = $756;
         while (1) {
          $783 = $d$2222$i + -4 | 0;
          HEAP32[$d$2222$i >> 2] = 0;
          if ($783 >>> 0 < $a$5223$i >>> 0) {
           $785 = $a$5223$i + -4 | 0;
           HEAP32[$785 >> 2] = 0;
           $a$6$i = $785;
          } else $a$6$i = $a$5223$i;
          $787 = (HEAP32[$783 >> 2] | 0) + 1 | 0;
          HEAP32[$783 >> 2] = $787;
          if ($787 >>> 0 > 999999999) {
           $a$5223$i = $a$6$i;
           $d$2222$i = $783;
          } else {
           $$lcssa362 = $783;
           $a$6$i$lcssa = $a$6$i;
           break;
          }
         }
         $a$5$lcssa$i = $a$6$i$lcssa;
         $d$2$lcssa$i = $$lcssa362;
        } else {
         $a$5$lcssa$i = $a$3$lcssa$i;
         $d$2$lcssa$i = $756;
        }
        $792 = ($634 - $a$5$lcssa$i >> 2) * 9 | 0;
        $793 = HEAP32[$a$5$lcssa$i >> 2] | 0;
        if ($793 >>> 0 < 10) {
         $a$7$i = $a$5$lcssa$i;
         $d$3$i = $d$2$lcssa$i;
         $e$3$i = $792;
         break;
        }
        $e$2218$i = $792;
        $i$2217$i = 10;
        while (1) {
         $i$2217$i = $i$2217$i * 10 | 0;
         $796 = $e$2218$i + 1 | 0;
         if ($793 >>> 0 < $i$2217$i >>> 0) {
          $$lcssa363 = $796;
          break;
         } else $e$2218$i = $796;
        }
        $a$7$i = $a$5$lcssa$i;
        $d$3$i = $d$2$lcssa$i;
        $e$3$i = $$lcssa363;
       } while (0);
       $798 = $d$3$i + 4 | 0;
       $a$8$ph$i = $a$7$i;
       $e$4$ph$i = $e$3$i;
       $z$6$ph$i = $z$3$lcssa$i >>> 0 > $798 >>> 0 ? $798 : $z$3$lcssa$i;
      } else {
       $a$8$ph$i = $a$3$lcssa$i;
       $e$4$ph$i = $e$1$i;
       $z$6$ph$i = $z$3$lcssa$i;
      }
      $a$8$ph294$i = $a$8$ph$i;
      $800 = 0 - $e$4$ph$i | 0;
      $z$6$i = $z$6$ph$i;
      while (1) {
       if ($z$6$i >>> 0 <= $a$8$ph$i >>> 0) {
        $$lcssa283$i = 0;
        $z$6$i$lcssa = $z$6$i;
        break;
       }
       $802 = $z$6$i + -4 | 0;
       if (!(HEAP32[$802 >> 2] | 0)) $z$6$i = $802; else {
        $$lcssa283$i = 1;
        $z$6$i$lcssa = $z$6$i;
        break;
       }
      }
      do if ($745) {
       $$$p$i = (($$p$i | 0) == 0 & 1) + $$p$i | 0;
       if (($$$p$i | 0) > ($e$4$ph$i | 0) & ($e$4$ph$i | 0) > -5) {
        $$019$i = $t$0 + -1 | 0;
        $$216$i = $$$p$i + -1 - $e$4$ph$i | 0;
       } else {
        $$019$i = $t$0 + -2 | 0;
        $$216$i = $$$p$i + -1 | 0;
       }
       if ($fl$1$ & 8) {
        $$120$i = $$019$i;
        $$317$i = $$216$i;
        break;
       }
       do if ($$lcssa283$i) {
        $816 = HEAP32[$z$6$i$lcssa + -4 >> 2] | 0;
        if (!$816) {
         $j$2$i = 9;
         break;
        }
        if (($816 >>> 0) % 10 | 0) {
         $j$2$i = 0;
         break;
        }
        $i$3213$i = 10;
        $j$1214$i = 0;
        while (1) {
         $i$3213$i = $i$3213$i * 10 | 0;
         $821 = $j$1214$i + 1 | 0;
         if (($816 >>> 0) % ($i$3213$i >>> 0) | 0) {
          $$lcssa364 = $821;
          break;
         } else $j$1214$i = $821;
        }
        $j$2$i = $$lcssa364;
       } else $j$2$i = 9; while (0);
       $830 = (($z$6$i$lcssa - $634 >> 2) * 9 | 0) + -9 | 0;
       if (($$019$i | 32 | 0) == 102) {
        $831 = $830 - $j$2$i | 0;
        $$29$i = ($831 | 0) < 0 ? 0 : $831;
        $$120$i = $$019$i;
        $$317$i = ($$216$i | 0) < ($$29$i | 0) ? $$216$i : $$29$i;
        break;
       } else {
        $835 = $830 + $e$4$ph$i - $j$2$i | 0;
        $$31$i = ($835 | 0) < 0 ? 0 : $835;
        $$120$i = $$019$i;
        $$317$i = ($$216$i | 0) < ($$31$i | 0) ? $$216$i : $$31$i;
        break;
       }
      } else {
       $$120$i = $t$0;
       $$317$i = $$p$i;
      } while (0);
      $838 = ($$317$i | 0) != 0;
      if ($838) $842 = 1; else $842 = ($fl$1$ & 8 | 0) != 0;
      $841 = $842 & 1;
      $844 = ($$120$i | 32 | 0) == 102;
      if ($844) {
       $$pn$i = ($e$4$ph$i | 0) > 0 ? $e$4$ph$i : 0;
       $estr$2$i = 0;
      } else {
       $848 = ($e$4$ph$i | 0) < 0 ? $800 : $e$4$ph$i;
       if (($848 | 0) < 0) {
        $$05$i87$i = $7;
        $852 = $848;
        $853 = (($848 | 0) < 0) << 31 >> 31;
        while (1) {
         $854 = ___uremdi3($852 | 0, $853 | 0, 10, 0) | 0;
         $858 = $$05$i87$i + -1 | 0;
         HEAP8[$858 >> 0] = $854 | 48;
         $859 = ___udivdi3($852 | 0, $853 | 0, 10, 0) | 0;
         if ($853 >>> 0 > 9 | ($853 | 0) == 9 & $852 >>> 0 > 4294967295) {
          $$05$i87$i = $858;
          $852 = $859;
          $853 = tempRet0;
         } else {
          $$lcssa365 = $858;
          $1193 = $859;
          break;
         }
        }
        $$0$lcssa$i92$i = $$lcssa365;
        $$01$lcssa$off0$i93$i = $1193;
       } else {
        $$0$lcssa$i92$i = $7;
        $$01$lcssa$off0$i93$i = $848;
       }
       if (!$$01$lcssa$off0$i93$i) $estr$1$ph$i = $$0$lcssa$i92$i; else {
        $$12$i95$i = $$0$lcssa$i92$i;
        $y$03$i94$i = $$01$lcssa$off0$i93$i;
        while (1) {
         $870 = $$12$i95$i + -1 | 0;
         HEAP8[$870 >> 0] = ($y$03$i94$i >>> 0) % 10 | 0 | 48;
         if ($y$03$i94$i >>> 0 < 10) {
          $$lcssa367 = $870;
          break;
         } else {
          $$12$i95$i = $870;
          $y$03$i94$i = ($y$03$i94$i >>> 0) / 10 | 0;
         }
        }
        $estr$1$ph$i = $$lcssa367;
       }
       if (($9 - $estr$1$ph$i | 0) < 2) {
        $estr$1209$i = $estr$1$ph$i;
        while (1) {
         $876 = $estr$1209$i + -1 | 0;
         HEAP8[$876 >> 0] = 48;
         if (($9 - $876 | 0) < 2) $estr$1209$i = $876; else {
          $$lcssa368 = $876;
          break;
         }
        }
        $estr$1$lcssa$i = $$lcssa368;
       } else $estr$1$lcssa$i = $estr$1$ph$i;
       HEAP8[$estr$1$lcssa$i + -1 >> 0] = ($e$4$ph$i >> 31 & 2) + 43;
       $886 = $estr$1$lcssa$i + -2 | 0;
       HEAP8[$886 >> 0] = $$120$i;
       $$pn$i = $9 - $886 | 0;
       $estr$2$i = $886;
      }
      $891 = $pl$0$i + 1 + $$317$i + $841 + $$pn$i | 0;
      $892 = $fl$1$ & 73728;
      $894 = ($w$1 | 0) > ($891 | 0);
      if (($892 | 0) == 0 & $894) {
       $895 = $w$1 - $891 | 0;
       _memset($pad$i | 0, 32, ($895 >>> 0 > 256 ? 256 : $895) | 0) | 0;
       if ($895 >>> 0 > 255) {
        $$01$i103$i = $895;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i103$i = $$01$i103$i + -256 | 0;
        } while ($$01$i103$i >>> 0 > 255);
        $$0$lcssa$i105$i = $895 & 255;
       } else $$0$lcssa$i105$i = $895;
       ___fwritex($pad$i, $$0$lcssa$i105$i, $f) | 0;
      }
      ___fwritex($prefix$0$i, $pl$0$i, $f) | 0;
      if (($892 | 0) == 65536 & $894) {
       $903 = $w$1 - $891 | 0;
       _memset($pad$i | 0, 48, ($903 >>> 0 > 256 ? 256 : $903) | 0) | 0;
       if ($903 >>> 0 > 255) {
        $$01$i110$i = $903;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i110$i = $$01$i110$i + -256 | 0;
        } while ($$01$i110$i >>> 0 > 255);
        $$0$lcssa$i112$i = $903 & 255;
       } else $$0$lcssa$i112$i = $903;
       ___fwritex($pad$i, $$0$lcssa$i112$i, $f) | 0;
      }
      if ($844) {
       $r$0$a$8$i = $a$8$ph$i >>> 0 > $$39$i >>> 0 ? $$39$i : $a$8$ph$i;
       $911 = ~$634;
       $912 = ~$a$8$ph294$i;
       $umax$i = $911 >>> 0 > $912 >>> 0 ? $911 : $912;
       $914 = 3 - $umax$i | 0;
       $uglygep296$i = $$39$i + 1 | 0;
       $uglygep300301$i = ($914 >>> 0 > $uglygep296$i >>> 0 ? $914 : $uglygep296$i) + $umax$i | 0;
       $916 = ~$umax$i;
       $d$4199$i = $r$0$a$8$i;
       while (1) {
        $917 = HEAP32[$d$4199$i >> 2] | 0;
        if (!$917) $$1$lcssa$i120$i = $14; else {
         $$12$i118$i = $14;
         $y$03$i117$i = $917;
         while (1) {
          $922 = $$12$i118$i + -1 | 0;
          HEAP8[$922 >> 0] = ($y$03$i117$i >>> 0) % 10 | 0 | 48;
          if ($y$03$i117$i >>> 0 < 10) {
           $$lcssa372 = $922;
           break;
          } else {
           $$12$i118$i = $922;
           $y$03$i117$i = ($y$03$i117$i >>> 0) / 10 | 0;
          }
         }
         $$1$lcssa$i120$i = $$lcssa372;
        }
        do if (($d$4199$i | 0) == ($r$0$a$8$i | 0)) {
         if (($$1$lcssa$i120$i | 0) != ($14 | 0)) {
          $s7$1$i = $$1$lcssa$i120$i;
          break;
         }
         HEAP8[$16 >> 0] = 48;
         $s7$1$i = $16;
        } else {
         if ($$1$lcssa$i120$i >>> 0 <= $buf$i >>> 0) {
          $s7$1$i = $$1$lcssa$i120$i;
          break;
         }
         $s7$0196$i = $$1$lcssa$i120$i;
         while (1) {
          $927 = $s7$0196$i + -1 | 0;
          HEAP8[$927 >> 0] = 48;
          if ($927 >>> 0 > $buf$i >>> 0) $s7$0196$i = $927; else {
           $$lcssa373 = $927;
           break;
          }
         }
         $s7$1$i = $$lcssa373;
        } while (0);
        ___fwritex($s7$1$i, $15 - $s7$1$i | 0, $f) | 0;
        $932 = $d$4199$i + 4 | 0;
        if ($932 >>> 0 > $$39$i >>> 0) {
         $$lcssa374 = $932;
         break;
        } else $d$4199$i = $932;
       }
       if (!(($fl$1$ & 8 | 0) == 0 & ($838 ^ 1))) ___fwritex(45688, 1, $f) | 0;
       if (($$317$i | 0) > 0 & $$lcssa374 >>> 0 < $z$6$i$lcssa >>> 0) {
        $$418193$i = $$317$i;
        $955 = ($uglygep300301$i & -4) + $916 | 0;
        $d$5192$i = $$lcssa374;
        while (1) {
         $941 = HEAP32[$d$5192$i >> 2] | 0;
         if (!$941) {
          $s8$0188$i$ph = $14;
          label = 361;
         } else {
          $$12$i127$i = $14;
          $y$03$i126$i = $941;
          while (1) {
           $946 = $$12$i127$i + -1 | 0;
           HEAP8[$946 >> 0] = ($y$03$i126$i >>> 0) % 10 | 0 | 48;
           if ($y$03$i126$i >>> 0 < 10) {
            $$lcssa375 = $946;
            break;
           } else {
            $$12$i127$i = $946;
            $y$03$i126$i = ($y$03$i126$i >>> 0) / 10 | 0;
           }
          }
          if ($$lcssa375 >>> 0 > $buf$i >>> 0) {
           $s8$0188$i$ph = $$lcssa375;
           label = 361;
          } else $s8$0$lcssa$i = $$lcssa375;
         }
         if ((label | 0) == 361) {
          label = 0;
          $s8$0188$i = $s8$0188$i$ph;
          while (1) {
           $950 = $s8$0188$i + -1 | 0;
           HEAP8[$950 >> 0] = 48;
           if ($950 >>> 0 > $buf$i >>> 0) $s8$0188$i = $950; else {
            $$lcssa376 = $950;
            break;
           }
          }
          $s8$0$lcssa$i = $$lcssa376;
         }
         $952 = ($$418193$i | 0) > 9;
         ___fwritex($s8$0$lcssa$i, $952 ? 9 : $$418193$i, $f) | 0;
         $954 = $955 + 8 | 0;
         $956 = $$418193$i + -9 | 0;
         if ($952 & $954 >>> 0 < $z$6$i$lcssa >>> 0) {
          $955$phi = $d$5192$i;
          $$418193$i = $956;
          $d$5192$i = $954;
          $955 = $955$phi;
         } else {
          $$lcssa377 = $956;
          break;
         }
        }
        $$418$lcssa$i = $$lcssa377;
       } else $$418$lcssa$i = $$317$i;
       if (($$418$lcssa$i | 0) > 0) {
        _memset($pad$i | 0, 48, ($$418$lcssa$i >>> 0 > 256 ? 256 : $$418$lcssa$i) | 0) | 0;
        if ($$418$lcssa$i >>> 0 > 255) {
         $$01$i134$i = $$418$lcssa$i;
         do {
          ___fwritex($pad$i, 256, $f) | 0;
          $$01$i134$i = $$01$i134$i + -256 | 0;
         } while ($$01$i134$i >>> 0 > 255);
         $$0$lcssa$i136$i = $$418$lcssa$i & 255;
        } else $$0$lcssa$i136$i = $$418$lcssa$i;
        ___fwritex($pad$i, $$0$lcssa$i136$i, $f) | 0;
       }
      } else {
       $z$6$$i = $$lcssa283$i ? $z$6$i$lcssa : $a$8$ph$i + 4 | 0;
       do if (($$317$i | 0) > -1) {
        $968 = ($fl$1$ & 8 | 0) == 0;
        $$5205$i = $$317$i;
        $d$6204$i = $a$8$ph$i;
        while (1) {
         $969 = HEAP32[$d$6204$i >> 2] | 0;
         if (!$969) label = 380; else {
          $$12$i142$i = $14;
          $y$03$i141$i = $969;
          while (1) {
           $974 = $$12$i142$i + -1 | 0;
           HEAP8[$974 >> 0] = ($y$03$i141$i >>> 0) % 10 | 0 | 48;
           if ($y$03$i141$i >>> 0 < 10) {
            $$12$i142$i$lcssa = $$12$i142$i;
            $$lcssa369 = $974;
            break;
           } else {
            $$12$i142$i = $974;
            $y$03$i141$i = ($y$03$i141$i >>> 0) / 10 | 0;
           }
          }
          if (($$lcssa369 | 0) == ($14 | 0)) label = 380; else {
           $1195 = $$12$i142$i$lcssa;
           $s9$0$i = $$lcssa369;
          }
         }
         if ((label | 0) == 380) {
          label = 0;
          HEAP8[$16 >> 0] = 48;
          $1195 = $14;
          $s9$0$i = $16;
         }
         do if (($d$6204$i | 0) == ($a$8$ph$i | 0)) {
          ___fwritex($s9$0$i, 1, $f) | 0;
          if ($968 & ($$5205$i | 0) < 1) {
           $s9$2$i = $1195;
           break;
          }
          ___fwritex(45688, 1, $f) | 0;
          $s9$2$i = $1195;
         } else {
          if ($s9$0$i >>> 0 <= $buf$i >>> 0) {
           $s9$2$i = $s9$0$i;
           break;
          }
          $s9$1200$i = $s9$0$i;
          while (1) {
           $980 = $s9$1200$i + -1 | 0;
           HEAP8[$980 >> 0] = 48;
           if ($980 >>> 0 > $buf$i >>> 0) $s9$1200$i = $980; else {
            $$lcssa370 = $980;
            break;
           }
          }
          $s9$2$i = $$lcssa370;
         } while (0);
         $984 = $15 - $s9$2$i | 0;
         ___fwritex($s9$2$i, ($$5205$i | 0) > ($984 | 0) ? $984 : $$5205$i, $f) | 0;
         $986 = $$5205$i - $984 | 0;
         $d$6204$i = $d$6204$i + 4 | 0;
         if (!($d$6204$i >>> 0 < $z$6$$i >>> 0 & ($986 | 0) > -1)) {
          $$lcssa371 = $986;
          break;
         } else $$5205$i = $986;
        }
        if (($$lcssa371 | 0) <= 0) break;
        _memset($pad$i | 0, 48, ($$lcssa371 >>> 0 > 256 ? 256 : $$lcssa371) | 0) | 0;
        if ($$lcssa371 >>> 0 > 255) {
         $$01$i149$i = $$lcssa371;
         do {
          ___fwritex($pad$i, 256, $f) | 0;
          $$01$i149$i = $$01$i149$i + -256 | 0;
         } while ($$01$i149$i >>> 0 > 255);
         $$0$lcssa$i151$i = $$lcssa371 & 255;
        } else $$0$lcssa$i151$i = $$lcssa371;
        ___fwritex($pad$i, $$0$lcssa$i151$i, $f) | 0;
       } else {} while (0);
       ___fwritex($estr$2$i, $9 - $estr$2$i | 0, $f) | 0;
      }
      if (($892 | 0) == 8192 & $894) {
       $1000 = $w$1 - $891 | 0;
       _memset($pad$i | 0, 32, ($1000 >>> 0 > 256 ? 256 : $1000) | 0) | 0;
       if ($1000 >>> 0 > 255) {
        $$01$i$i = $1000;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i$i = $$01$i$i + -256 | 0;
        } while ($$01$i$i >>> 0 > 255);
        $$0$lcssa$i$i = $1000 & 255;
       } else $$0$lcssa$i$i = $1000;
       ___fwritex($pad$i, $$0$lcssa$i$i, $f) | 0;
      }
      $$0$i = $894 ? $w$1 : $891;
     } else {
      $448 = ($t$0 & 32 | 0) != 0;
      if ($$013$i != $$013$i | 0.0 != 0.0) {
       $pl$1$i = 0;
       $s1$0$i = $448 ? 45656 : 45664;
      } else {
       $pl$1$i = $pl$0$i;
       $s1$0$i = $448 ? 45640 : 45648;
      }
      $452 = $pl$1$i + 3 | 0;
      $455 = ($w$1 | 0) > ($452 | 0);
      if (($fl$1$ & 8192 | 0) == 0 & $455) {
       $456 = $w$1 - $452 | 0;
       _memset($pad$i | 0, 32, ($456 >>> 0 > 256 ? 256 : $456) | 0) | 0;
       if ($456 >>> 0 > 255) {
        $$01$i45$i = $456;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i45$i = $$01$i45$i + -256 | 0;
        } while ($$01$i45$i >>> 0 > 255);
        $$0$lcssa$i47$i = $456 & 255;
       } else $$0$lcssa$i47$i = $456;
       ___fwritex($pad$i, $$0$lcssa$i47$i, $f) | 0;
      }
      ___fwritex($prefix$0$i, $pl$1$i, $f) | 0;
      ___fwritex($s1$0$i, 3, $f) | 0;
      if (($fl$1$ & 73728 | 0) == 8192 & $455) {
       $465 = $w$1 - $452 | 0;
       _memset($pad$i | 0, 32, ($465 >>> 0 > 256 ? 256 : $465) | 0) | 0;
       if ($465 >>> 0 > 255) {
        $$01$i52$i = $465;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i52$i = $$01$i52$i + -256 | 0;
        } while ($$01$i52$i >>> 0 > 255);
        $$0$lcssa$i54$i = $465 & 255;
       } else $$0$lcssa$i54$i = $465;
       ___fwritex($pad$i, $$0$lcssa$i54$i, $f) | 0;
      }
      $$0$i = $455 ? $w$1 : $452;
     } while (0);
     $$be = $1182;
     $$be341 = $294;
     $$be342 = $267;
     $l$0$be = $$0$i;
     $l10n$0$be = $l10n$3;
     break L24;
     break;
    }
   default:
    {
     $1183 = $294;
     $1184 = $267;
     $a$2 = $23;
     $fl$6 = $fl$1$;
     $p$5 = $p$0;
     $pl$2 = 0;
     $prefix$2 = 45592;
     $z$2 = $2;
    }
   } while (0);
   do if ((label | 0) == 82) {
    label = 0;
    $292 = $t$1 & 32;
    if (($267 | 0) == 0 & ($294 | 0) == 0) {
     $369 = $267;
     $371 = $294;
     $a$0 = $2;
     $fl$4 = $fl$3;
     $p$2 = $p$1;
     $pl$1 = 0;
     $prefix$1 = 45592;
     label = 104;
    } else {
     $$012$i = $2;
     $298 = $267;
     $305 = $294;
     while (1) {
      $304 = $$012$i + -1 | 0;
      HEAP8[$304 >> 0] = HEAPU8[45672 + ($298 & 15) >> 0] | $292;
      $298 = _bitshift64Lshr($298 | 0, $305 | 0, 4) | 0;
      $305 = tempRet0;
      if (($298 | 0) == 0 & ($305 | 0) == 0) {
       $$lcssa386 = $304;
       break;
      } else $$012$i = $304;
     }
     if (!($fl$3 & 8)) {
      $369 = $267;
      $371 = $294;
      $a$0 = $$lcssa386;
      $fl$4 = $fl$3;
      $p$2 = $p$1;
      $pl$1 = 0;
      $prefix$1 = 45592;
      label = 104;
     } else {
      $369 = $267;
      $371 = $294;
      $a$0 = $$lcssa386;
      $fl$4 = $fl$3;
      $p$2 = $p$1;
      $pl$1 = 2;
      $prefix$1 = 45592 + ($t$1 >> 4) | 0;
      label = 104;
     }
    }
   } else if ((label | 0) == 96) {
    label = 0;
    if ($339 >>> 0 > 0 | ($339 | 0) == 0 & $341 >>> 0 > 4294967295) {
     $$05$i = $2;
     $346 = $341;
     $347 = $339;
     while (1) {
      $348 = ___uremdi3($346 | 0, $347 | 0, 10, 0) | 0;
      $352 = $$05$i + -1 | 0;
      HEAP8[$352 >> 0] = $348 | 48;
      $353 = ___udivdi3($346 | 0, $347 | 0, 10, 0) | 0;
      if ($347 >>> 0 > 9 | ($347 | 0) == 9 & $346 >>> 0 > 4294967295) {
       $$05$i = $352;
       $346 = $353;
       $347 = tempRet0;
      } else {
       $$lcssa382 = $352;
       $1185 = $353;
       break;
      }
     }
     $$0$lcssa$i54 = $$lcssa382;
     $$01$lcssa$off0$i = $1185;
    } else {
     $$0$lcssa$i54 = $2;
     $$01$lcssa$off0$i = $341;
    }
    if (!$$01$lcssa$off0$i) {
     $369 = $341;
     $371 = $339;
     $a$0 = $$0$lcssa$i54;
     $fl$4 = $fl$1$;
     $p$2 = $p$0;
     $pl$1 = $pl$0;
     $prefix$1 = $prefix$0;
     label = 104;
    } else {
     $$12$i = $$0$lcssa$i54;
     $y$03$i = $$01$lcssa$off0$i;
     while (1) {
      $364 = $$12$i + -1 | 0;
      HEAP8[$364 >> 0] = ($y$03$i >>> 0) % 10 | 0 | 48;
      if ($y$03$i >>> 0 < 10) {
       $$lcssa384 = $364;
       break;
      } else {
       $$12$i = $364;
       $y$03$i = ($y$03$i >>> 0) / 10 | 0;
      }
     }
     $369 = $341;
     $371 = $339;
     $a$0 = $$lcssa384;
     $fl$4 = $fl$1$;
     $p$2 = $p$0;
     $pl$1 = $pl$0;
     $prefix$1 = $prefix$0;
     label = 104;
    }
   } else if ((label | 0) == 109) {
    label = 0;
    $387 = _memchr($a$1, 0, $p$0) | 0;
    if (!$387) {
     $1183 = $294;
     $1184 = $267;
     $a$2 = $a$1;
     $fl$6 = $266;
     $p$5 = $p$0;
     $pl$2 = 0;
     $prefix$2 = 45592;
     $z$2 = $a$1 + $p$0 | 0;
     break;
    } else {
     $1183 = $294;
     $1184 = $267;
     $a$2 = $a$1;
     $fl$6 = $266;
     $p$5 = $387 - $a$1 | 0;
     $pl$2 = 0;
     $prefix$2 = 45592;
     $z$2 = $387;
     break;
    }
   } else if ((label | 0) == 114) {
    label = 0;
    $i$0176 = 0;
    $l$1175 = 0;
    $ws$0177 = $1187;
    while (1) {
     $395 = HEAP32[$ws$0177 >> 2] | 0;
     if (!$395) {
      $i$0$lcssa = $i$0176;
      $l$2 = $l$1175;
      break;
     }
     $397 = _wctomb($mb, $395) | 0;
     if (($397 | 0) < 0 | $397 >>> 0 > ($p$4271 - $i$0176 | 0) >>> 0) {
      $i$0$lcssa = $i$0176;
      $l$2 = $397;
      break;
     }
     $402 = $397 + $i$0176 | 0;
     if ($p$4271 >>> 0 > $402 >>> 0) {
      $i$0176 = $402;
      $l$1175 = $397;
      $ws$0177 = $ws$0177 + 4 | 0;
     } else {
      $i$0$lcssa = $402;
      $l$2 = $397;
      break;
     }
    }
    if (($l$2 | 0) < 0) {
     $$0$ph340 = -1;
     label = 453;
     break L1;
    } else {
     $1189 = $1188;
     $1190 = $1187;
     $i$0$lcssa272 = $i$0$lcssa;
     label = 119;
    }
   } while (0);
   if ((label | 0) == 104) {
    label = 0;
    $$fl$4 = ($p$2 | 0) > -1 ? $fl$4 & -65537 : $fl$4;
    $373 = ($369 | 0) != 0 | ($371 | 0) != 0;
    if ($373 | ($p$2 | 0) != 0) {
     $379 = ($373 & 1 ^ 1) + ($3 - $a$0) | 0;
     $1183 = $371;
     $1184 = $369;
     $a$2 = $a$0;
     $fl$6 = $$fl$4;
     $p$5 = ($p$2 | 0) > ($379 | 0) ? $p$2 : $379;
     $pl$2 = $pl$1;
     $prefix$2 = $prefix$1;
     $z$2 = $2;
    } else {
     $1183 = $371;
     $1184 = $369;
     $a$2 = $2;
     $fl$6 = $$fl$4;
     $p$5 = 0;
     $pl$2 = $pl$1;
     $prefix$2 = $prefix$1;
     $z$2 = $2;
    }
   } else if ((label | 0) == 119) {
    label = 0;
    $405 = $fl$1$ & 73728;
    $407 = ($w$1 | 0) > ($i$0$lcssa272 | 0);
    if (($405 | 0) == 0 & $407) {
     $408 = $w$1 - $i$0$lcssa272 | 0;
     _memset($pad$i | 0, 32, ($408 >>> 0 > 256 ? 256 : $408) | 0) | 0;
     if ($408 >>> 0 > 255) {
      $$01$i67 = $408;
      do {
       ___fwritex($pad$i, 256, $f) | 0;
       $$01$i67 = $$01$i67 + -256 | 0;
      } while ($$01$i67 >>> 0 > 255);
      $$0$lcssa$i69 = $408 & 255;
     } else $$0$lcssa$i69 = $408;
     ___fwritex($pad$i, $$0$lcssa$i69, $f) | 0;
    }
    if ($i$0$lcssa272) {
     $i$1187 = 0;
     $ws$1188 = $1190;
     while (1) {
      $416 = HEAP32[$ws$1188 >> 2] | 0;
      if (!$416) break;
      $418 = _wctomb($mb, $416) | 0;
      $i$1187 = $418 + $i$1187 | 0;
      if (($i$1187 | 0) > ($i$0$lcssa272 | 0)) break;
      ___fwritex($mb, $418, $f) | 0;
      if ($i$1187 >>> 0 >= $i$0$lcssa272 >>> 0) break; else $ws$1188 = $ws$1188 + 4 | 0;
     }
    }
    if (($405 | 0) == 8192 & $407) {
     $424 = $w$1 - $i$0$lcssa272 | 0;
     _memset($pad$i | 0, 32, ($424 >>> 0 > 256 ? 256 : $424) | 0) | 0;
     if ($424 >>> 0 > 255) {
      $$01$i74 = $424;
      do {
       ___fwritex($pad$i, 256, $f) | 0;
       $$01$i74 = $$01$i74 + -256 | 0;
      } while ($$01$i74 >>> 0 > 255);
      $$0$lcssa$i76 = $424 & 255;
     } else $$0$lcssa$i76 = $424;
     ___fwritex($pad$i, $$0$lcssa$i76, $f) | 0;
    }
    $$be = $1182;
    $$be341 = $294;
    $$be342 = $1189;
    $l$0$be = $407 ? $w$1 : $i$0$lcssa272;
    $l10n$0$be = $l10n$3;
    break;
   }
   $1009 = $z$2 - $a$2 | 0;
   $$p$5 = ($p$5 | 0) < ($1009 | 0) ? $1009 : $p$5;
   $1011 = $pl$2 + $$p$5 | 0;
   $w$2 = ($w$1 | 0) < ($1011 | 0) ? $1011 : $w$1;
   $1013 = $fl$6 & 73728;
   $1015 = ($w$2 | 0) > ($1011 | 0);
   if (($1013 | 0) == 0 & $1015) {
    $1016 = $w$2 - $1011 | 0;
    _memset($pad$i | 0, 32, ($1016 >>> 0 > 256 ? 256 : $1016) | 0) | 0;
    if ($1016 >>> 0 > 255) {
     $$01$i84 = $1016;
     do {
      ___fwritex($pad$i, 256, $f) | 0;
      $$01$i84 = $$01$i84 + -256 | 0;
     } while ($$01$i84 >>> 0 > 255);
     $$0$lcssa$i86 = $1016 & 255;
    } else $$0$lcssa$i86 = $1016;
    ___fwritex($pad$i, $$0$lcssa$i86, $f) | 0;
   }
   ___fwritex($prefix$2, $pl$2, $f) | 0;
   if (($1013 | 0) == 65536 & $1015) {
    $1024 = $w$2 - $1011 | 0;
    _memset($pad$i | 0, 48, ($1024 >>> 0 > 256 ? 256 : $1024) | 0) | 0;
    if ($1024 >>> 0 > 255) {
     $$01$i60 = $1024;
     do {
      ___fwritex($pad$i, 256, $f) | 0;
      $$01$i60 = $$01$i60 + -256 | 0;
     } while ($$01$i60 >>> 0 > 255);
     $$0$lcssa$i62 = $1024 & 255;
    } else $$0$lcssa$i62 = $1024;
    ___fwritex($pad$i, $$0$lcssa$i62, $f) | 0;
   }
   if (($$p$5 | 0) > ($1009 | 0)) {
    $1032 = $$p$5 - $1009 | 0;
    _memset($pad$i | 0, 48, ($1032 >>> 0 > 256 ? 256 : $1032) | 0) | 0;
    if ($1032 >>> 0 > 255) {
     $$01$i45 = $1032;
     do {
      ___fwritex($pad$i, 256, $f) | 0;
      $$01$i45 = $$01$i45 + -256 | 0;
     } while ($$01$i45 >>> 0 > 255);
     $$0$lcssa$i47 = $1032 & 255;
    } else $$0$lcssa$i47 = $1032;
    ___fwritex($pad$i, $$0$lcssa$i47, $f) | 0;
   }
   ___fwritex($a$2, $1009, $f) | 0;
   if (($1013 | 0) == 8192 & $1015) {
    $1040 = $w$2 - $1011 | 0;
    _memset($pad$i | 0, 32, ($1040 >>> 0 > 256 ? 256 : $1040) | 0) | 0;
    if ($1040 >>> 0 > 255) {
     $$01$i = $1040;
     do {
      ___fwritex($pad$i, 256, $f) | 0;
      $$01$i = $$01$i + -256 | 0;
     } while ($$01$i >>> 0 > 255);
     $$0$lcssa$i = $1040 & 255;
    } else $$0$lcssa$i = $1040;
    ___fwritex($pad$i, $$0$lcssa$i, $f) | 0;
   }
   $$be = $1182;
   $$be341 = $1183;
   $$be342 = $1184;
   $l$0$be = $w$2;
   $l10n$0$be = $l10n$3;
  } else {
   $$be = $$lcssa107;
   $$be341 = $1175;
   $$be342 = $1176;
   $l$0$be = $37;
   $l10n$0$be = $l10n$0;
  } while (0);
  $1175 = $$be341;
  $1176 = $$be342;
  $23 = $$be;
  $cnt$0 = $cnt$1;
  $l$0 = $l$0$be;
  $l10n$0 = $l10n$0$be;
 }
 if ((label | 0) == 429) {
  if ($f) {
   $$0 = $cnt$1$lcssa;
   STACKTOP = sp;
   return $$0 | 0;
  }
  if (!$l10n$0$lcssa) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $i$2163 = 1;
  while (1) {
   $1050 = HEAP32[$nl_type + ($i$2163 << 2) >> 2] | 0;
   if (!$1050) {
    $i$2163$lcssa = $i$2163;
    break;
   }
   $1053 = $nl_arg + ($i$2163 << 3) | 0;
   L614 : do if ($1050 >>> 0 <= 20) do switch ($1050 | 0) {
   case 17:
    {
     $1159 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $1160 = +HEAPF64[$1159 >> 3];
     HEAP32[$ap >> 2] = $1159 + 8;
     HEAPF64[$1053 >> 3] = $1160;
     break L614;
     break;
    }
   case 9:
    {
     $1060 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1061 = HEAP32[$1060 >> 2] | 0;
     HEAP32[$ap >> 2] = $1060 + 4;
     HEAP32[$1053 >> 2] = $1061;
     break L614;
     break;
    }
   case 16:
    {
     $1148 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1149 = HEAP32[$1148 >> 2] | 0;
     HEAP32[$ap >> 2] = $1148 + 4;
     $1150 = $1053;
     HEAP32[$1150 >> 2] = $1149 & 255;
     HEAP32[$1150 + 4 >> 2] = 0;
     break L614;
     break;
    }
   case 14:
    {
     $1122 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1123 = HEAP32[$1122 >> 2] | 0;
     HEAP32[$ap >> 2] = $1122 + 4;
     $1124 = $1053;
     HEAP32[$1124 >> 2] = $1123 & 65535;
     HEAP32[$1124 + 4 >> 2] = 0;
     break L614;
     break;
    }
   case 10:
    {
     $1067 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1068 = HEAP32[$1067 >> 2] | 0;
     HEAP32[$ap >> 2] = $1067 + 4;
     $1071 = $1053;
     HEAP32[$1071 >> 2] = $1068;
     HEAP32[$1071 + 4 >> 2] = (($1068 | 0) < 0) << 31 >> 31;
     break L614;
     break;
    }
   case 18:
    {
     $1166 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $1167 = +HEAPF64[$1166 >> 3];
     HEAP32[$ap >> 2] = $1166 + 8;
     HEAPF64[$1053 >> 3] = $1167;
     break L614;
     break;
    }
   case 15:
    {
     $1133 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1134 = HEAP32[$1133 >> 2] | 0;
     HEAP32[$ap >> 2] = $1133 + 4;
     $1136 = ($1134 & 255) << 24 >> 24;
     $1139 = $1053;
     HEAP32[$1139 >> 2] = $1136;
     HEAP32[$1139 + 4 >> 2] = (($1136 | 0) < 0) << 31 >> 31;
     break L614;
     break;
    }
   case 13:
    {
     $1107 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1108 = HEAP32[$1107 >> 2] | 0;
     HEAP32[$ap >> 2] = $1107 + 4;
     $1110 = ($1108 & 65535) << 16 >> 16;
     $1113 = $1053;
     HEAP32[$1113 >> 2] = $1110;
     HEAP32[$1113 + 4 >> 2] = (($1110 | 0) < 0) << 31 >> 31;
     break L614;
     break;
    }
   case 11:
    {
     $1080 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1081 = HEAP32[$1080 >> 2] | 0;
     HEAP32[$ap >> 2] = $1080 + 4;
     $1082 = $1053;
     HEAP32[$1082 >> 2] = $1081;
     HEAP32[$1082 + 4 >> 2] = 0;
     break L614;
     break;
    }
   case 12:
    {
     $1091 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $1092 = $1091;
     $1094 = HEAP32[$1092 >> 2] | 0;
     $1097 = HEAP32[$1092 + 4 >> 2] | 0;
     HEAP32[$ap >> 2] = $1091 + 8;
     $1098 = $1053;
     HEAP32[$1098 >> 2] = $1094;
     HEAP32[$1098 + 4 >> 2] = $1097;
     break L614;
     break;
    }
   default:
    break L614;
   } while (0); while (0);
   $i$2163 = $i$2163 + 1 | 0;
   if (($i$2163 | 0) >= 10) {
    label = 451;
    break;
   }
  }
  if ((label | 0) == 451) {
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  if (($i$2163$lcssa | 0) >= 10) {
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $i$3161 = $i$2163$lcssa;
  while (1) {
   if (HEAP32[$nl_type + ($i$3161 << 2) >> 2] | 0) {
    $$0$ph = -1;
    break;
   }
   $i$3161 = $i$3161 + 1 | 0;
   if (($i$3161 | 0) >= 10) {
    $$0$ph = 1;
    break;
   }
  }
  $$0 = $$0$ph;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 452) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 453) {
  $$0 = $$0$ph340;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __Z20jsonnet_builtin_declm($agg$result, $builtin) {
 $agg$result = $agg$result | 0;
 $builtin = $builtin | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$03 = 0, $$034 = 0, $$035 = 0, $$036 = 0, $$037 = 0, $$1 = 0, $$10 = 0, $$11 = 0, $$110 = 0, $$12 = 0, $$1221 = 0, $$13 = 0, $$1322 = 0, $$14 = 0, $$15 = 0, $$1524 = 0, $$16 = 0, $$17 = 0, $$18 = 0, $$19 = 0, $$2 = 0, $$20 = 0, $$21 = 0, $$22 = 0, $$2231 = 0, $$23 = 0, $$24 = 0, $$2433 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $$pre = 0, $$pre704 = 0, $$pre705 = 0, $$pre706 = 0, $$pre707 = 0, $$pre708 = 0, $$pre709 = 0, $$pre710 = 0, $$pre711 = 0, $$pre712 = 0, $$pre713 = 0, $$pre714 = 0, $$pre715 = 0, $$pre716 = 0, $$pre717 = 0, $$pre718 = 0, $$pre719 = 0, $$pre720 = 0, $$pre721 = 0, $$pre722 = 0, $$pre723 = 0, $$pre724 = 0, $$pre725 = 0, $$pre726 = 0, $$sink$index23 = 0, $$sink774$index35 = 0, $$sink775$index47 = 0, $$sink776$index59 = 0, $$sink777$index71 = 0, $$sink778$index83 = 0, $$sink779$index95 = 0, $$sink780$index107 = 0, $$sink781$index119 = 0, $$sink782$index131 = 0, $$sink783$index157 = 0, $$sink784$index176 = 0, $$sink785$index188 = 0, $$sink786$index200 = 0, $$sink787$index212 = 0, $$sink788$index224 = 0, $$sink789$index236 = 0, $$sink790$index255 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $108 = 0, $11 = 0, $111 = 0, $113 = 0, $114 = 0, $116 = 0, $118 = 0, $119 = 0, $12 = 0, $122 = 0, $123 = 0, $125 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $134 = 0, $137 = 0, $139 = 0, $14 = 0, $140 = 0, $142 = 0, $144 = 0, $145 = 0, $148 = 0, $149 = 0, $15 = 0, $151 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $160 = 0, $163 = 0, $165 = 0, $166 = 0, $168 = 0, $17 = 0, $170 = 0, $171 = 0, $174 = 0, $175 = 0, $177 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $186 = 0, $189 = 0, $19 = 0, $191 = 0, $192 = 0, $194 = 0, $196 = 0, $197 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $203 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $212 = 0, $215 = 0, $217 = 0, $218 = 0, $22 = 0, $220 = 0, $222 = 0, $223 = 0, $226 = 0, $227 = 0, $229 = 0, $23 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $238 = 0, $24 = 0, $241 = 0, $243 = 0, $244 = 0, $246 = 0, $248 = 0, $249 = 0, $25 = 0, $252 = 0, $253 = 0, $255 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $264 = 0, $267 = 0, $269 = 0, $270 = 0, $272 = 0, $274 = 0, $275 = 0, $278 = 0, $279 = 0, $28 = 0, $281 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $29 = 0, $290 = 0, $293 = 0, $295 = 0, $296 = 0, $298 = 0, $3 = 0, $300 = 0, $301 = 0, $304 = 0, $305 = 0, $307 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $316 = 0, $319 = 0, $32 = 0, $321 = 0, $322 = 0, $324 = 0, $326 = 0, $327 = 0, $33 = 0, $330 = 0, $331 = 0, $333 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $342 = 0, $345 = 0, $347 = 0, $348 = 0, $350 = 0, $352 = 0, $353 = 0, $356 = 0, $357 = 0, $359 = 0, $360 = 0, $362 = 0, $363 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $37 = 0, $371 = 0, $373 = 0, $375 = 0, $377 = 0, $379 = 0, $380 = 0, $382 = 0, $384 = 0, $385 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $393 = 0, $396 = 0, $397 = 0, $399 = 0, $4 = 0, $400 = 0, $402 = 0, $403 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $41 = 0, $411 = 0, $413 = 0, $415 = 0, $417 = 0, $419 = 0, $420 = 0, $422 = 0, $424 = 0, $425 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $433 = 0, $437 = 0, $439 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $446 = 0, $449 = 0, $45 = 0, $451 = 0, $452 = 0, $454 = 0, $456 = 0, $457 = 0, $46 = 0, $460 = 0, $461 = 0, $463 = 0, $464 = 0, $466 = 0, $467 = 0, $469 = 0, $470 = 0, $471 = 0, $472 = 0, $475 = 0, $477 = 0, $479 = 0, $48 = 0, $481 = 0, $483 = 0, $484 = 0, $486 = 0, $488 = 0, $489 = 0, $492 = 0, $493 = 0, $494 = 0, $497 = 0, $5 = 0, $50 = 0, $500 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $509 = 0, $51 = 0, $512 = 0, $514 = 0, $515 = 0, $517 = 0, $519 = 0, $520 = 0, $523 = 0, $524 = 0, $526 = 0, $528 = 0, $529 = 0, $530 = 0, $531 = 0, $532 = 0, $535 = 0, $538 = 0, $54 = 0, $540 = 0, $541 = 0, $543 = 0, $545 = 0, $546 = 0, $549 = 0, $55 = 0, $550 = 0, $552 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $56 = 0, $561 = 0, $564 = 0, $566 = 0, $567 = 0, $569 = 0, $571 = 0, $572 = 0, $575 = 0, $576 = 0, $578 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $587 = 0, $59 = 0, $590 = 0, $592 = 0, $593 = 0, $595 = 0, $597 = 0, $598 = 0, $6 = 0, $601 = 0, $602 = 0, $604 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $610 = 0, $613 = 0, $616 = 0, $618 = 0, $619 = 0, $62 = 0, $621 = 0, $623 = 0, $624 = 0, $627 = 0, $628 = 0, $63 = 0, $630 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $639 = 0, $642 = 0, $644 = 0, $645 = 0, $647 = 0, $649 = 0, $65 = 0, $650 = 0, $653 = 0, $654 = 0, $656 = 0, $657 = 0, $659 = 0, $66 = 0, $660 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $668 = 0, $670 = 0, $672 = 0, $674 = 0, $676 = 0, $677 = 0, $679 = 0, $68 = 0, $681 = 0, $682 = 0, $685 = 0, $686 = 0, $687 = 0, $69 = 0, $690 = 0, $693 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $702 = 0, $705 = 0, $707 = 0, $708 = 0, $71 = 0, $710 = 0, $712 = 0, $713 = 0, $716 = 0, $717 = 0, $720 = 0, $725 = 0, $726 = 0, $731 = 0, $732 = 0, $734 = 0, $735 = 0, $74 = 0, $742 = 0, $744 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $9 = 0, $91 = 0, $92 = 0, $93 = 0, $96 = 0, $99 = 0, $lpad$phi$i110735$index = 0, $lpad$phi$i110735$index41 = 0, $lpad$phi$i130737$index = 0, $lpad$phi$i130737$index53 = 0, $lpad$phi$i150739$index = 0, $lpad$phi$i150739$index65 = 0, $lpad$phi$i170741$index = 0, $lpad$phi$i170741$index77 = 0, $lpad$phi$i190743$index = 0, $lpad$phi$i190743$index89 = 0, $lpad$phi$i210745$index = 0, $lpad$phi$i210745$index101 = 0, $lpad$phi$i230747$index = 0, $lpad$phi$i230747$index113 = 0, $lpad$phi$i250749$index = 0, $lpad$phi$i250749$index125 = 0, $lpad$phi$i271751$index = 0, $lpad$phi$i271751$index137 = 0, $lpad$phi$i293753$index = 0, $lpad$phi$i293753$index144 = 0, $lpad$phi$i313755$index = 0, $lpad$phi$i313755$index151 = 0, $lpad$phi$i334757$index = 0, $lpad$phi$i334757$index163 = 0, $lpad$phi$i354759$index = 0, $lpad$phi$i354759$index170 = 0, $lpad$phi$i374761$index = 0, $lpad$phi$i374761$index182 = 0, $lpad$phi$i394763$index = 0, $lpad$phi$i394763$index194 = 0, $lpad$phi$i414765$index = 0, $lpad$phi$i414765$index206 = 0, $lpad$phi$i434767$index = 0, $lpad$phi$i434767$index218 = 0, $lpad$phi$i454769$index = 0, $lpad$phi$i454769$index230 = 0, $lpad$phi$i475771$index = 0, $lpad$phi$i475771$index242 = 0, $lpad$phi$i495773$index = 0, $lpad$phi$i495773$index249 = 0, $lpad$phi$i50729$index = 0, $lpad$phi$i50729$index10 = 0, $lpad$phi$i70731$index = 0, $lpad$phi$i70731$index17 = 0, $lpad$phi$i727$index = 0, $lpad$phi$i727$index3 = 0, $lpad$phi$i90733$index = 0, $lpad$phi$i90733$index29 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 $0 = sp + 376 | 0;
 $1 = sp + 352 | 0;
 $2 = sp + 328 | 0;
 $3 = sp + 316 | 0;
 $4 = sp + 304 | 0;
 $5 = sp + 292 | 0;
 $6 = sp + 280 | 0;
 $7 = sp + 268 | 0;
 $8 = sp + 256 | 0;
 $9 = sp + 244 | 0;
 $10 = sp + 232 | 0;
 $11 = sp + 220 | 0;
 $12 = sp + 208 | 0;
 $13 = sp + 184 | 0;
 $14 = sp + 148 | 0;
 $15 = sp + 136 | 0;
 $16 = sp + 112 | 0;
 $17 = sp + 100 | 0;
 $18 = sp + 88 | 0;
 $19 = sp + 76 | 0;
 $20 = sp + 64 | 0;
 $21 = sp + 52 | 0;
 $22 = sp + 40 | 0;
 $23 = sp + 16 | 0;
 $24 = sp;
 do switch ($builtin | 0) {
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1288, 3);
   $62 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $2 | 0, 1296, 1);
   $63 = __THREW__;
   __THREW__ = 0;
   if ($63 & 1) {
    $$034 = $2;
    label = 32;
   } else {
    $65 = $2 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $65 | 0, 1304, 1);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     $$034 = $65;
     label = 32;
    } else {
     HEAP32[$62 >> 2] = 0;
     $68 = $agg$result + 16 | 0;
     HEAP32[$68 >> 2] = 0;
     $69 = $agg$result + 20 | 0;
     HEAP32[$69 >> 2] = 0;
     __THREW__ = 0;
     $70 = invoke_ii(67, 24) | 0;
     $71 = __THREW__;
     __THREW__ = 0;
     if ($71 & 1) {
      $80 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i50729$index = $80;
      $lpad$phi$i50729$index10 = tempRet0;
     } else {
      HEAP32[$68 >> 2] = $70;
      HEAP32[$62 >> 2] = $70;
      HEAP32[$69 >> 2] = $70 + 24;
      __THREW__ = 0;
      invoke_vii(40, $70 | 0, $2 | 0);
      $74 = __THREW__;
      __THREW__ = 0;
      if (!($74 & 1)) {
       $76 = (HEAP32[$68 >> 2] | 0) + 12 | 0;
       HEAP32[$68 >> 2] = $76;
       __THREW__ = 0;
       invoke_vii(40, $76 | 0, $2 + 12 | 0);
       $78 = __THREW__;
       __THREW__ = 0;
       if (!($78 & 1)) {
        HEAP32[$68 >> 2] = (HEAP32[$68 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        STACKTOP = sp;
        return;
       }
      }
      $82 = ___cxa_find_matching_catch() | 0;
      $83 = tempRet0;
      $$pre704 = HEAP32[$62 >> 2] | 0;
      if (!$$pre704) {
       $lpad$phi$i50729$index = $82;
       $lpad$phi$i50729$index10 = $83;
      } else {
       $85 = HEAP32[$68 >> 2] | 0;
       if (($85 | 0) == ($$pre704 | 0)) $91 = $$pre704; else {
        $88 = $85;
        do {
         $87 = $88 + -12 | 0;
         HEAP32[$68 >> 2] = $87;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($87);
         $88 = HEAP32[$68 >> 2] | 0;
        } while (($88 | 0) != ($$pre704 | 0));
        $91 = HEAP32[$62 >> 2] | 0;
       }
       __ZdlPv($91);
       $lpad$phi$i50729$index = $82;
       $lpad$phi$i50729$index10 = $83;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     $$1 = $lpad$phi$i50729$index;
     $$110 = $lpad$phi$i50729$index10;
    }
   }
   if ((label | 0) == 32) {
    $92 = ___cxa_find_matching_catch() | 0;
    $93 = tempRet0;
    if (($2 | 0) == ($$034 | 0)) {
     $$1 = $92;
     $$110 = $93;
    } else {
     $96 = $$034;
     do {
      $96 = $96 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($96);
     } while (($96 | 0) != ($2 | 0));
     $$1 = $92;
     $$110 = $93;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$1;
   $$2433 = $$110;
   ___resumeException($$24 | 0);
   break;
  }
 case 4:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1328, 4);
   __THREW__ = 0;
   invoke_viii(3, $5 | 0, 1296, 1);
   $151 = __THREW__;
   __THREW__ = 0;
   if ($151 & 1) {
    $175 = ___cxa_find_matching_catch() | 0;
    $$4 = $175;
    $$sink775$index47 = tempRet0;
   } else {
    $153 = $agg$result + 12 | 0;
    HEAP32[$153 >> 2] = 0;
    $154 = $agg$result + 16 | 0;
    HEAP32[$154 >> 2] = 0;
    $155 = $agg$result + 20 | 0;
    HEAP32[$155 >> 2] = 0;
    __THREW__ = 0;
    $156 = invoke_ii(67, 12) | 0;
    $157 = __THREW__;
    __THREW__ = 0;
    if ($157 & 1) {
     $163 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i110735$index = $163;
     $lpad$phi$i110735$index41 = tempRet0;
    } else {
     HEAP32[$154 >> 2] = $156;
     HEAP32[$153 >> 2] = $156;
     HEAP32[$155 >> 2] = $156 + 12;
     __THREW__ = 0;
     invoke_vii(40, $156 | 0, $5 | 0);
     $160 = __THREW__;
     __THREW__ = 0;
     if (!($160 & 1)) {
      HEAP32[$154 >> 2] = (HEAP32[$154 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      STACKTOP = sp;
      return;
     }
     $165 = ___cxa_find_matching_catch() | 0;
     $166 = tempRet0;
     $$pre707 = HEAP32[$153 >> 2] | 0;
     if (!$$pre707) {
      $lpad$phi$i110735$index = $165;
      $lpad$phi$i110735$index41 = $166;
     } else {
      $168 = HEAP32[$154 >> 2] | 0;
      if (($168 | 0) == ($$pre707 | 0)) $174 = $$pre707; else {
       $171 = $168;
       do {
        $170 = $171 + -12 | 0;
        HEAP32[$154 >> 2] = $170;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($170);
        $171 = HEAP32[$154 >> 2] | 0;
       } while (($171 | 0) != ($$pre707 | 0));
       $174 = HEAP32[$153 >> 2] | 0;
      }
      __ZdlPv($174);
      $lpad$phi$i110735$index = $165;
      $lpad$phi$i110735$index41 = $166;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $$4 = $lpad$phi$i110735$index;
    $$sink775$index47 = $lpad$phi$i110735$index41;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$4;
   $$2433 = $$sink775$index47;
   ___resumeException($$24 | 0);
   break;
  }
 case 9:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1368, 4);
   __THREW__ = 0;
   invoke_viii(3, $10 | 0, 1296, 1);
   $281 = __THREW__;
   __THREW__ = 0;
   if ($281 & 1) {
    $305 = ___cxa_find_matching_catch() | 0;
    $$9 = $305;
    $$sink780$index107 = tempRet0;
   } else {
    $283 = $agg$result + 12 | 0;
    HEAP32[$283 >> 2] = 0;
    $284 = $agg$result + 16 | 0;
    HEAP32[$284 >> 2] = 0;
    $285 = $agg$result + 20 | 0;
    HEAP32[$285 >> 2] = 0;
    __THREW__ = 0;
    $286 = invoke_ii(67, 12) | 0;
    $287 = __THREW__;
    __THREW__ = 0;
    if ($287 & 1) {
     $293 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i210745$index = $293;
     $lpad$phi$i210745$index101 = tempRet0;
    } else {
     HEAP32[$284 >> 2] = $286;
     HEAP32[$283 >> 2] = $286;
     HEAP32[$285 >> 2] = $286 + 12;
     __THREW__ = 0;
     invoke_vii(40, $286 | 0, $10 | 0);
     $290 = __THREW__;
     __THREW__ = 0;
     if (!($290 & 1)) {
      HEAP32[$284 >> 2] = (HEAP32[$284 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
      STACKTOP = sp;
      return;
     }
     $295 = ___cxa_find_matching_catch() | 0;
     $296 = tempRet0;
     $$pre712 = HEAP32[$283 >> 2] | 0;
     if (!$$pre712) {
      $lpad$phi$i210745$index = $295;
      $lpad$phi$i210745$index101 = $296;
     } else {
      $298 = HEAP32[$284 >> 2] | 0;
      if (($298 | 0) == ($$pre712 | 0)) $304 = $$pre712; else {
       $301 = $298;
       do {
        $300 = $301 + -12 | 0;
        HEAP32[$284 >> 2] = $300;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($300);
        $301 = HEAP32[$284 >> 2] | 0;
       } while (($301 | 0) != ($$pre712 | 0));
       $304 = HEAP32[$283 >> 2] | 0;
      }
      __ZdlPv($304);
      $lpad$phi$i210745$index = $295;
      $lpad$phi$i210745$index101 = $296;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
    $$9 = $lpad$phi$i210745$index;
    $$sink780$index107 = $lpad$phi$i210745$index101;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$9;
   $$2433 = $$sink780$index107;
   ___resumeException($$24 | 0);
   break;
  }
 case 12:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1392, 6);
   $359 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $13 | 0, 1280, 4);
   $360 = __THREW__;
   __THREW__ = 0;
   if ($360 & 1) {
    $$037 = $13;
    label = 190;
   } else {
    $362 = $13 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $362 | 0, 1400, 3);
    $363 = __THREW__;
    __THREW__ = 0;
    if ($363 & 1) {
     $$037 = $362;
     label = 190;
    } else {
     HEAP32[$359 >> 2] = 0;
     $365 = $agg$result + 16 | 0;
     HEAP32[$365 >> 2] = 0;
     $366 = $agg$result + 20 | 0;
     HEAP32[$366 >> 2] = 0;
     __THREW__ = 0;
     $367 = invoke_ii(67, 24) | 0;
     $368 = __THREW__;
     __THREW__ = 0;
     if ($368 & 1) {
      $377 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i271751$index = $377;
      $lpad$phi$i271751$index137 = tempRet0;
     } else {
      HEAP32[$365 >> 2] = $367;
      HEAP32[$359 >> 2] = $367;
      HEAP32[$366 >> 2] = $367 + 24;
      __THREW__ = 0;
      invoke_vii(40, $367 | 0, $13 | 0);
      $371 = __THREW__;
      __THREW__ = 0;
      if (!($371 & 1)) {
       $373 = (HEAP32[$365 >> 2] | 0) + 12 | 0;
       HEAP32[$365 >> 2] = $373;
       __THREW__ = 0;
       invoke_vii(40, $373 | 0, $13 + 12 | 0);
       $375 = __THREW__;
       __THREW__ = 0;
       if (!($375 & 1)) {
        HEAP32[$365 >> 2] = (HEAP32[$365 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
        STACKTOP = sp;
        return;
       }
      }
      $379 = ___cxa_find_matching_catch() | 0;
      $380 = tempRet0;
      $$pre715 = HEAP32[$359 >> 2] | 0;
      if (!$$pre715) {
       $lpad$phi$i271751$index = $379;
       $lpad$phi$i271751$index137 = $380;
      } else {
       $382 = HEAP32[$365 >> 2] | 0;
       if (($382 | 0) == ($$pre715 | 0)) $388 = $$pre715; else {
        $385 = $382;
        do {
         $384 = $385 + -12 | 0;
         HEAP32[$365 >> 2] = $384;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($384);
         $385 = HEAP32[$365 >> 2] | 0;
        } while (($385 | 0) != ($$pre715 | 0));
        $388 = HEAP32[$359 >> 2] | 0;
       }
       __ZdlPv($388);
       $lpad$phi$i271751$index = $379;
       $lpad$phi$i271751$index137 = $380;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
     $$12 = $lpad$phi$i271751$index;
     $$1221 = $lpad$phi$i271751$index137;
    }
   }
   if ((label | 0) == 190) {
    $389 = ___cxa_find_matching_catch() | 0;
    $390 = tempRet0;
    if (($13 | 0) == ($$037 | 0)) {
     $$12 = $389;
     $$1221 = $390;
    } else {
     $393 = $$037;
     do {
      $393 = $393 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($393);
     } while (($393 | 0) != ($13 | 0));
     $$12 = $389;
     $$1221 = $390;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$12;
   $$2433 = $$1221;
   ___resumeException($$24 | 0);
   break;
  }
 case 13:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1408, 11);
   $396 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $14 | 0, 1424, 3);
   $397 = __THREW__;
   __THREW__ = 0;
   if ($397 & 1) {
    $$036 = $14;
    label = 209;
   } else {
    $399 = $14 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $399 | 0, 1432, 1);
    $400 = __THREW__;
    __THREW__ = 0;
    if ($400 & 1) {
     $$036 = $399;
     label = 209;
    } else {
     $402 = $14 + 24 | 0;
     __THREW__ = 0;
     invoke_viii(3, $402 | 0, 1440, 10);
     $403 = __THREW__;
     __THREW__ = 0;
     if ($403 & 1) {
      $$036 = $402;
      label = 209;
     } else {
      HEAP32[$396 >> 2] = 0;
      $405 = $agg$result + 16 | 0;
      HEAP32[$405 >> 2] = 0;
      $406 = $agg$result + 20 | 0;
      HEAP32[$406 >> 2] = 0;
      __THREW__ = 0;
      $407 = invoke_ii(67, 36) | 0;
      $408 = __THREW__;
      __THREW__ = 0;
      if ($408 & 1) {
       $417 = ___cxa_find_matching_catch() | 0;
       $lpad$phi$i293753$index = $417;
       $lpad$phi$i293753$index144 = tempRet0;
      } else {
       HEAP32[$405 >> 2] = $407;
       HEAP32[$396 >> 2] = $407;
       HEAP32[$406 >> 2] = $407 + 36;
       __THREW__ = 0;
       invoke_vii(40, $407 | 0, $14 | 0);
       $411 = __THREW__;
       __THREW__ = 0;
       if (!($411 & 1)) {
        $413 = (HEAP32[$405 >> 2] | 0) + 12 | 0;
        HEAP32[$405 >> 2] = $413;
        __THREW__ = 0;
        invoke_vii(40, $413 | 0, $14 + 12 | 0);
        $415 = __THREW__;
        __THREW__ = 0;
        if (!($415 & 1)) {
         $742 = (HEAP32[$405 >> 2] | 0) + 12 | 0;
         HEAP32[$405 >> 2] = $742;
         __THREW__ = 0;
         invoke_vii(40, $742 | 0, $14 + 24 | 0);
         $744 = __THREW__;
         __THREW__ = 0;
         if (!($744 & 1)) {
          HEAP32[$405 >> 2] = (HEAP32[$405 >> 2] | 0) + 12;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14 + 24 | 0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14 + 12 | 0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
          STACKTOP = sp;
          return;
         }
        }
       }
       $419 = ___cxa_find_matching_catch() | 0;
       $420 = tempRet0;
       $$pre716 = HEAP32[$396 >> 2] | 0;
       if (!$$pre716) {
        $lpad$phi$i293753$index = $419;
        $lpad$phi$i293753$index144 = $420;
       } else {
        $422 = HEAP32[$405 >> 2] | 0;
        if (($422 | 0) == ($$pre716 | 0)) $428 = $$pre716; else {
         $425 = $422;
         do {
          $424 = $425 + -12 | 0;
          HEAP32[$405 >> 2] = $424;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($424);
          $425 = HEAP32[$405 >> 2] | 0;
         } while (($425 | 0) != ($$pre716 | 0));
         $428 = HEAP32[$396 >> 2] | 0;
        }
        __ZdlPv($428);
        $lpad$phi$i293753$index = $419;
        $lpad$phi$i293753$index144 = $420;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14 + 12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
      $$13 = $lpad$phi$i293753$index;
      $$1322 = $lpad$phi$i293753$index144;
     }
    }
   }
   if ((label | 0) == 209) {
    $429 = ___cxa_find_matching_catch() | 0;
    $430 = tempRet0;
    if (($14 | 0) == ($$036 | 0)) {
     $$13 = $429;
     $$1322 = $430;
    } else {
     $433 = $$036;
     do {
      $433 = $433 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($433);
     } while (($433 | 0) != ($14 | 0));
     $$13 = $429;
     $$1322 = $430;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$13;
   $$2433 = $$1322;
   ___resumeException($$24 | 0);
   break;
  }
 case 11:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1384, 4);
   __THREW__ = 0;
   invoke_viii(3, $12 | 0, 1296, 1);
   $333 = __THREW__;
   __THREW__ = 0;
   if ($333 & 1) {
    $357 = ___cxa_find_matching_catch() | 0;
    $$11 = $357;
    $$sink782$index131 = tempRet0;
   } else {
    $335 = $agg$result + 12 | 0;
    HEAP32[$335 >> 2] = 0;
    $336 = $agg$result + 16 | 0;
    HEAP32[$336 >> 2] = 0;
    $337 = $agg$result + 20 | 0;
    HEAP32[$337 >> 2] = 0;
    __THREW__ = 0;
    $338 = invoke_ii(67, 12) | 0;
    $339 = __THREW__;
    __THREW__ = 0;
    if ($339 & 1) {
     $345 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i250749$index = $345;
     $lpad$phi$i250749$index125 = tempRet0;
    } else {
     HEAP32[$336 >> 2] = $338;
     HEAP32[$335 >> 2] = $338;
     HEAP32[$337 >> 2] = $338 + 12;
     __THREW__ = 0;
     invoke_vii(40, $338 | 0, $12 | 0);
     $342 = __THREW__;
     __THREW__ = 0;
     if (!($342 & 1)) {
      HEAP32[$336 >> 2] = (HEAP32[$336 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
      STACKTOP = sp;
      return;
     }
     $347 = ___cxa_find_matching_catch() | 0;
     $348 = tempRet0;
     $$pre714 = HEAP32[$335 >> 2] | 0;
     if (!$$pre714) {
      $lpad$phi$i250749$index = $347;
      $lpad$phi$i250749$index125 = $348;
     } else {
      $350 = HEAP32[$336 >> 2] | 0;
      if (($350 | 0) == ($$pre714 | 0)) $356 = $$pre714; else {
       $353 = $350;
       do {
        $352 = $353 + -12 | 0;
        HEAP32[$336 >> 2] = $352;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($352);
        $353 = HEAP32[$336 >> 2] | 0;
       } while (($353 | 0) != ($$pre714 | 0));
       $356 = HEAP32[$335 >> 2] | 0;
      }
      __ZdlPv($356);
      $lpad$phi$i250749$index = $347;
      $lpad$phi$i250749$index125 = $348;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
    $$11 = $lpad$phi$i250749$index;
    $$sink782$index131 = $lpad$phi$i250749$index125;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$11;
   $$2433 = $$sink782$index131;
   ___resumeException($$24 | 0);
   break;
  }
 case 6:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1344, 3);
   __THREW__ = 0;
   invoke_viii(3, $7 | 0, 1296, 1);
   $203 = __THREW__;
   __THREW__ = 0;
   if ($203 & 1) {
    $227 = ___cxa_find_matching_catch() | 0;
    $$6 = $227;
    $$sink777$index71 = tempRet0;
   } else {
    $205 = $agg$result + 12 | 0;
    HEAP32[$205 >> 2] = 0;
    $206 = $agg$result + 16 | 0;
    HEAP32[$206 >> 2] = 0;
    $207 = $agg$result + 20 | 0;
    HEAP32[$207 >> 2] = 0;
    __THREW__ = 0;
    $208 = invoke_ii(67, 12) | 0;
    $209 = __THREW__;
    __THREW__ = 0;
    if ($209 & 1) {
     $215 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i150739$index = $215;
     $lpad$phi$i150739$index65 = tempRet0;
    } else {
     HEAP32[$206 >> 2] = $208;
     HEAP32[$205 >> 2] = $208;
     HEAP32[$207 >> 2] = $208 + 12;
     __THREW__ = 0;
     invoke_vii(40, $208 | 0, $7 | 0);
     $212 = __THREW__;
     __THREW__ = 0;
     if (!($212 & 1)) {
      HEAP32[$206 >> 2] = (HEAP32[$206 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      STACKTOP = sp;
      return;
     }
     $217 = ___cxa_find_matching_catch() | 0;
     $218 = tempRet0;
     $$pre709 = HEAP32[$205 >> 2] | 0;
     if (!$$pre709) {
      $lpad$phi$i150739$index = $217;
      $lpad$phi$i150739$index65 = $218;
     } else {
      $220 = HEAP32[$206 >> 2] | 0;
      if (($220 | 0) == ($$pre709 | 0)) $226 = $$pre709; else {
       $223 = $220;
       do {
        $222 = $223 + -12 | 0;
        HEAP32[$206 >> 2] = $222;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($222);
        $223 = HEAP32[$206 >> 2] | 0;
       } while (($223 | 0) != ($$pre709 | 0));
       $226 = HEAP32[$205 >> 2] | 0;
      }
      __ZdlPv($226);
      $lpad$phi$i150739$index = $217;
      $lpad$phi$i150739$index65 = $218;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
    $$6 = $lpad$phi$i150739$index;
    $$sink777$index71 = $lpad$phi$i150739$index65;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$6;
   $$2433 = $$sink777$index71;
   ___resumeException($$24 | 0);
   break;
  }
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1256, 9);
   $25 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $1 | 0, 1272, 2);
   $26 = __THREW__;
   __THREW__ = 0;
   if ($26 & 1) {
    $$0 = $1;
    label = 14;
   } else {
    $28 = $1 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $28 | 0, 1280, 4);
    $29 = __THREW__;
    __THREW__ = 0;
    if ($29 & 1) {
     $$0 = $28;
     label = 14;
    } else {
     HEAP32[$25 >> 2] = 0;
     $31 = $agg$result + 16 | 0;
     HEAP32[$31 >> 2] = 0;
     $32 = $agg$result + 20 | 0;
     HEAP32[$32 >> 2] = 0;
     __THREW__ = 0;
     $33 = invoke_ii(67, 24) | 0;
     $34 = __THREW__;
     __THREW__ = 0;
     if ($34 & 1) {
      $43 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i727$index = $43;
      $lpad$phi$i727$index3 = tempRet0;
     } else {
      HEAP32[$31 >> 2] = $33;
      HEAP32[$25 >> 2] = $33;
      HEAP32[$32 >> 2] = $33 + 24;
      __THREW__ = 0;
      invoke_vii(40, $33 | 0, $1 | 0);
      $37 = __THREW__;
      __THREW__ = 0;
      if (!($37 & 1)) {
       $39 = (HEAP32[$31 >> 2] | 0) + 12 | 0;
       HEAP32[$31 >> 2] = $39;
       __THREW__ = 0;
       invoke_vii(40, $39 | 0, $1 + 12 | 0);
       $41 = __THREW__;
       __THREW__ = 0;
       if (!($41 & 1)) {
        HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        STACKTOP = sp;
        return;
       }
      }
      $45 = ___cxa_find_matching_catch() | 0;
      $46 = tempRet0;
      $$pre = HEAP32[$25 >> 2] | 0;
      if (!$$pre) {
       $lpad$phi$i727$index = $45;
       $lpad$phi$i727$index3 = $46;
      } else {
       $48 = HEAP32[$31 >> 2] | 0;
       if (($48 | 0) == ($$pre | 0)) $54 = $$pre; else {
        $51 = $48;
        do {
         $50 = $51 + -12 | 0;
         HEAP32[$31 >> 2] = $50;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
         $51 = HEAP32[$31 >> 2] | 0;
        } while (($51 | 0) != ($$pre | 0));
        $54 = HEAP32[$25 >> 2] | 0;
       }
       __ZdlPv($54);
       $lpad$phi$i727$index = $45;
       $lpad$phi$i727$index3 = $46;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
     $$02 = $lpad$phi$i727$index;
     $$03 = $lpad$phi$i727$index3;
    }
   }
   if ((label | 0) == 14) {
    $55 = ___cxa_find_matching_catch() | 0;
    $56 = tempRet0;
    if (($1 | 0) == ($$0 | 0)) {
     $$02 = $55;
     $$03 = $56;
    } else {
     $59 = $$0;
     do {
      $59 = $59 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     } while (($59 | 0) != ($1 | 0));
     $$02 = $55;
     $$03 = $56;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$02;
   $$2433 = $$03;
   ___resumeException($$24 | 0);
   break;
  }
 case 3:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1320, 4);
   __THREW__ = 0;
   invoke_viii(3, $4 | 0, 1296, 1);
   $125 = __THREW__;
   __THREW__ = 0;
   if ($125 & 1) {
    $149 = ___cxa_find_matching_catch() | 0;
    $$3 = $149;
    $$sink774$index35 = tempRet0;
   } else {
    $127 = $agg$result + 12 | 0;
    HEAP32[$127 >> 2] = 0;
    $128 = $agg$result + 16 | 0;
    HEAP32[$128 >> 2] = 0;
    $129 = $agg$result + 20 | 0;
    HEAP32[$129 >> 2] = 0;
    __THREW__ = 0;
    $130 = invoke_ii(67, 12) | 0;
    $131 = __THREW__;
    __THREW__ = 0;
    if ($131 & 1) {
     $137 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i90733$index = $137;
     $lpad$phi$i90733$index29 = tempRet0;
    } else {
     HEAP32[$128 >> 2] = $130;
     HEAP32[$127 >> 2] = $130;
     HEAP32[$129 >> 2] = $130 + 12;
     __THREW__ = 0;
     invoke_vii(40, $130 | 0, $4 | 0);
     $134 = __THREW__;
     __THREW__ = 0;
     if (!($134 & 1)) {
      HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      STACKTOP = sp;
      return;
     }
     $139 = ___cxa_find_matching_catch() | 0;
     $140 = tempRet0;
     $$pre706 = HEAP32[$127 >> 2] | 0;
     if (!$$pre706) {
      $lpad$phi$i90733$index = $139;
      $lpad$phi$i90733$index29 = $140;
     } else {
      $142 = HEAP32[$128 >> 2] | 0;
      if (($142 | 0) == ($$pre706 | 0)) $148 = $$pre706; else {
       $145 = $142;
       do {
        $144 = $145 + -12 | 0;
        HEAP32[$128 >> 2] = $144;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($144);
        $145 = HEAP32[$128 >> 2] | 0;
       } while (($145 | 0) != ($$pre706 | 0));
       $148 = HEAP32[$127 >> 2] | 0;
      }
      __ZdlPv($148);
      $lpad$phi$i90733$index = $139;
      $lpad$phi$i90733$index29 = $140;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    $$3 = $lpad$phi$i90733$index;
    $$sink774$index35 = $lpad$phi$i90733$index29;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$3;
   $$2433 = $$sink774$index35;
   ___resumeException($$24 | 0);
   break;
  }
 case 16:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1480, 9);
   __THREW__ = 0;
   invoke_viii(3, $17 | 0, 1496, 3);
   $500 = __THREW__;
   __THREW__ = 0;
   if ($500 & 1) {
    $524 = ___cxa_find_matching_catch() | 0;
    $$16 = $524;
    $$sink784$index176 = tempRet0;
   } else {
    $502 = $agg$result + 12 | 0;
    HEAP32[$502 >> 2] = 0;
    $503 = $agg$result + 16 | 0;
    HEAP32[$503 >> 2] = 0;
    $504 = $agg$result + 20 | 0;
    HEAP32[$504 >> 2] = 0;
    __THREW__ = 0;
    $505 = invoke_ii(67, 12) | 0;
    $506 = __THREW__;
    __THREW__ = 0;
    if ($506 & 1) {
     $512 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i354759$index = $512;
     $lpad$phi$i354759$index170 = tempRet0;
    } else {
     HEAP32[$503 >> 2] = $505;
     HEAP32[$502 >> 2] = $505;
     HEAP32[$504 >> 2] = $505 + 12;
     __THREW__ = 0;
     invoke_vii(40, $505 | 0, $17 | 0);
     $509 = __THREW__;
     __THREW__ = 0;
     if (!($509 & 1)) {
      HEAP32[$503 >> 2] = (HEAP32[$503 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
      STACKTOP = sp;
      return;
     }
     $514 = ___cxa_find_matching_catch() | 0;
     $515 = tempRet0;
     $$pre719 = HEAP32[$502 >> 2] | 0;
     if (!$$pre719) {
      $lpad$phi$i354759$index = $514;
      $lpad$phi$i354759$index170 = $515;
     } else {
      $517 = HEAP32[$503 >> 2] | 0;
      if (($517 | 0) == ($$pre719 | 0)) $523 = $$pre719; else {
       $520 = $517;
       do {
        $519 = $520 + -12 | 0;
        HEAP32[$503 >> 2] = $519;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($519);
        $520 = HEAP32[$503 >> 2] | 0;
       } while (($520 | 0) != ($$pre719 | 0));
       $523 = HEAP32[$502 >> 2] | 0;
      }
      __ZdlPv($523);
      $lpad$phi$i354759$index = $514;
      $lpad$phi$i354759$index170 = $515;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    $$16 = $lpad$phi$i354759$index;
    $$sink784$index176 = $lpad$phi$i354759$index170;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$16;
   $$2433 = $$sink784$index176;
   ___resumeException($$24 | 0);
   break;
  }
 case 17:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1504, 4);
   __THREW__ = 0;
   invoke_viii(3, $18 | 0, 1304, 1);
   $526 = __THREW__;
   __THREW__ = 0;
   if ($526 & 1) {
    $550 = ___cxa_find_matching_catch() | 0;
    $$17 = $550;
    $$sink785$index188 = tempRet0;
   } else {
    $528 = $agg$result + 12 | 0;
    HEAP32[$528 >> 2] = 0;
    $529 = $agg$result + 16 | 0;
    HEAP32[$529 >> 2] = 0;
    $530 = $agg$result + 20 | 0;
    HEAP32[$530 >> 2] = 0;
    __THREW__ = 0;
    $531 = invoke_ii(67, 12) | 0;
    $532 = __THREW__;
    __THREW__ = 0;
    if ($532 & 1) {
     $538 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i374761$index = $538;
     $lpad$phi$i374761$index182 = tempRet0;
    } else {
     HEAP32[$529 >> 2] = $531;
     HEAP32[$528 >> 2] = $531;
     HEAP32[$530 >> 2] = $531 + 12;
     __THREW__ = 0;
     invoke_vii(40, $531 | 0, $18 | 0);
     $535 = __THREW__;
     __THREW__ = 0;
     if (!($535 & 1)) {
      HEAP32[$529 >> 2] = (HEAP32[$529 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
      STACKTOP = sp;
      return;
     }
     $540 = ___cxa_find_matching_catch() | 0;
     $541 = tempRet0;
     $$pre720 = HEAP32[$528 >> 2] | 0;
     if (!$$pre720) {
      $lpad$phi$i374761$index = $540;
      $lpad$phi$i374761$index182 = $541;
     } else {
      $543 = HEAP32[$529 >> 2] | 0;
      if (($543 | 0) == ($$pre720 | 0)) $549 = $$pre720; else {
       $546 = $543;
       do {
        $545 = $546 + -12 | 0;
        HEAP32[$529 >> 2] = $545;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($545);
        $546 = HEAP32[$529 >> 2] | 0;
       } while (($546 | 0) != ($$pre720 | 0));
       $549 = HEAP32[$528 >> 2] | 0;
      }
      __ZdlPv($549);
      $lpad$phi$i374761$index = $540;
      $lpad$phi$i374761$index182 = $541;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
    $$17 = $lpad$phi$i374761$index;
    $$sink785$index188 = $lpad$phi$i374761$index182;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$17;
   $$2433 = $$sink785$index188;
   ___resumeException($$24 | 0);
   break;
  }
 case 18:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1512, 3);
   __THREW__ = 0;
   invoke_viii(3, $19 | 0, 1304, 1);
   $552 = __THREW__;
   __THREW__ = 0;
   if ($552 & 1) {
    $576 = ___cxa_find_matching_catch() | 0;
    $$18 = $576;
    $$sink786$index200 = tempRet0;
   } else {
    $554 = $agg$result + 12 | 0;
    HEAP32[$554 >> 2] = 0;
    $555 = $agg$result + 16 | 0;
    HEAP32[$555 >> 2] = 0;
    $556 = $agg$result + 20 | 0;
    HEAP32[$556 >> 2] = 0;
    __THREW__ = 0;
    $557 = invoke_ii(67, 12) | 0;
    $558 = __THREW__;
    __THREW__ = 0;
    if ($558 & 1) {
     $564 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i394763$index = $564;
     $lpad$phi$i394763$index194 = tempRet0;
    } else {
     HEAP32[$555 >> 2] = $557;
     HEAP32[$554 >> 2] = $557;
     HEAP32[$556 >> 2] = $557 + 12;
     __THREW__ = 0;
     invoke_vii(40, $557 | 0, $19 | 0);
     $561 = __THREW__;
     __THREW__ = 0;
     if (!($561 & 1)) {
      HEAP32[$555 >> 2] = (HEAP32[$555 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
      STACKTOP = sp;
      return;
     }
     $566 = ___cxa_find_matching_catch() | 0;
     $567 = tempRet0;
     $$pre721 = HEAP32[$554 >> 2] | 0;
     if (!$$pre721) {
      $lpad$phi$i394763$index = $566;
      $lpad$phi$i394763$index194 = $567;
     } else {
      $569 = HEAP32[$555 >> 2] | 0;
      if (($569 | 0) == ($$pre721 | 0)) $575 = $$pre721; else {
       $572 = $569;
       do {
        $571 = $572 + -12 | 0;
        HEAP32[$555 >> 2] = $571;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($571);
        $572 = HEAP32[$555 >> 2] | 0;
       } while (($572 | 0) != ($$pre721 | 0));
       $575 = HEAP32[$554 >> 2] | 0;
      }
      __ZdlPv($575);
      $lpad$phi$i394763$index = $566;
      $lpad$phi$i394763$index194 = $567;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
    $$18 = $lpad$phi$i394763$index;
    $$sink786$index200 = $lpad$phi$i394763$index194;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$18;
   $$2433 = $$sink786$index200;
   ___resumeException($$24 | 0);
   break;
  }
 case 20:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1528, 8);
   __THREW__ = 0;
   invoke_viii(3, $21 | 0, 1304, 1);
   $604 = __THREW__;
   __THREW__ = 0;
   if ($604 & 1) {
    $628 = ___cxa_find_matching_catch() | 0;
    $$20 = $628;
    $$sink788$index224 = tempRet0;
   } else {
    $606 = $agg$result + 12 | 0;
    HEAP32[$606 >> 2] = 0;
    $607 = $agg$result + 16 | 0;
    HEAP32[$607 >> 2] = 0;
    $608 = $agg$result + 20 | 0;
    HEAP32[$608 >> 2] = 0;
    __THREW__ = 0;
    $609 = invoke_ii(67, 12) | 0;
    $610 = __THREW__;
    __THREW__ = 0;
    if ($610 & 1) {
     $616 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i434767$index = $616;
     $lpad$phi$i434767$index218 = tempRet0;
    } else {
     HEAP32[$607 >> 2] = $609;
     HEAP32[$606 >> 2] = $609;
     HEAP32[$608 >> 2] = $609 + 12;
     __THREW__ = 0;
     invoke_vii(40, $609 | 0, $21 | 0);
     $613 = __THREW__;
     __THREW__ = 0;
     if (!($613 & 1)) {
      HEAP32[$607 >> 2] = (HEAP32[$607 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
      STACKTOP = sp;
      return;
     }
     $618 = ___cxa_find_matching_catch() | 0;
     $619 = tempRet0;
     $$pre723 = HEAP32[$606 >> 2] | 0;
     if (!$$pre723) {
      $lpad$phi$i434767$index = $618;
      $lpad$phi$i434767$index218 = $619;
     } else {
      $621 = HEAP32[$607 >> 2] | 0;
      if (($621 | 0) == ($$pre723 | 0)) $627 = $$pre723; else {
       $624 = $621;
       do {
        $623 = $624 + -12 | 0;
        HEAP32[$607 >> 2] = $623;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($623);
        $624 = HEAP32[$607 >> 2] | 0;
       } while (($624 | 0) != ($$pre723 | 0));
       $627 = HEAP32[$606 >> 2] | 0;
      }
      __ZdlPv($627);
      $lpad$phi$i434767$index = $618;
      $lpad$phi$i434767$index218 = $619;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
    $$20 = $lpad$phi$i434767$index;
    $$sink788$index224 = $lpad$phi$i434767$index218;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$20;
   $$2433 = $$sink788$index224;
   ___resumeException($$24 | 0);
   break;
  }
 case 7:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1352, 3);
   __THREW__ = 0;
   invoke_viii(3, $8 | 0, 1296, 1);
   $229 = __THREW__;
   __THREW__ = 0;
   if ($229 & 1) {
    $253 = ___cxa_find_matching_catch() | 0;
    $$7 = $253;
    $$sink778$index83 = tempRet0;
   } else {
    $231 = $agg$result + 12 | 0;
    HEAP32[$231 >> 2] = 0;
    $232 = $agg$result + 16 | 0;
    HEAP32[$232 >> 2] = 0;
    $233 = $agg$result + 20 | 0;
    HEAP32[$233 >> 2] = 0;
    __THREW__ = 0;
    $234 = invoke_ii(67, 12) | 0;
    $235 = __THREW__;
    __THREW__ = 0;
    if ($235 & 1) {
     $241 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i170741$index = $241;
     $lpad$phi$i170741$index77 = tempRet0;
    } else {
     HEAP32[$232 >> 2] = $234;
     HEAP32[$231 >> 2] = $234;
     HEAP32[$233 >> 2] = $234 + 12;
     __THREW__ = 0;
     invoke_vii(40, $234 | 0, $8 | 0);
     $238 = __THREW__;
     __THREW__ = 0;
     if (!($238 & 1)) {
      HEAP32[$232 >> 2] = (HEAP32[$232 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      STACKTOP = sp;
      return;
     }
     $243 = ___cxa_find_matching_catch() | 0;
     $244 = tempRet0;
     $$pre710 = HEAP32[$231 >> 2] | 0;
     if (!$$pre710) {
      $lpad$phi$i170741$index = $243;
      $lpad$phi$i170741$index77 = $244;
     } else {
      $246 = HEAP32[$232 >> 2] | 0;
      if (($246 | 0) == ($$pre710 | 0)) $252 = $$pre710; else {
       $249 = $246;
       do {
        $248 = $249 + -12 | 0;
        HEAP32[$232 >> 2] = $248;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($248);
        $249 = HEAP32[$232 >> 2] | 0;
       } while (($249 | 0) != ($$pre710 | 0));
       $252 = HEAP32[$231 >> 2] | 0;
      }
      __ZdlPv($252);
      $lpad$phi$i170741$index = $243;
      $lpad$phi$i170741$index77 = $244;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
    $$7 = $lpad$phi$i170741$index;
    $$sink778$index83 = $lpad$phi$i170741$index77;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$7;
   $$2433 = $$sink778$index83;
   ___resumeException($$24 | 0);
   break;
  }
 case 14:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1456, 6);
   __THREW__ = 0;
   invoke_viii(3, $15 | 0, 1296, 1);
   $437 = __THREW__;
   __THREW__ = 0;
   if ($437 & 1) {
    $461 = ___cxa_find_matching_catch() | 0;
    $$14 = $461;
    $$sink783$index157 = tempRet0;
   } else {
    $439 = $agg$result + 12 | 0;
    HEAP32[$439 >> 2] = 0;
    $440 = $agg$result + 16 | 0;
    HEAP32[$440 >> 2] = 0;
    $441 = $agg$result + 20 | 0;
    HEAP32[$441 >> 2] = 0;
    __THREW__ = 0;
    $442 = invoke_ii(67, 12) | 0;
    $443 = __THREW__;
    __THREW__ = 0;
    if ($443 & 1) {
     $449 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i313755$index = $449;
     $lpad$phi$i313755$index151 = tempRet0;
    } else {
     HEAP32[$440 >> 2] = $442;
     HEAP32[$439 >> 2] = $442;
     HEAP32[$441 >> 2] = $442 + 12;
     __THREW__ = 0;
     invoke_vii(40, $442 | 0, $15 | 0);
     $446 = __THREW__;
     __THREW__ = 0;
     if (!($446 & 1)) {
      HEAP32[$440 >> 2] = (HEAP32[$440 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
      STACKTOP = sp;
      return;
     }
     $451 = ___cxa_find_matching_catch() | 0;
     $452 = tempRet0;
     $$pre717 = HEAP32[$439 >> 2] | 0;
     if (!$$pre717) {
      $lpad$phi$i313755$index = $451;
      $lpad$phi$i313755$index151 = $452;
     } else {
      $454 = HEAP32[$440 >> 2] | 0;
      if (($454 | 0) == ($$pre717 | 0)) $460 = $$pre717; else {
       $457 = $454;
       do {
        $456 = $457 + -12 | 0;
        HEAP32[$440 >> 2] = $456;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($456);
        $457 = HEAP32[$440 >> 2] | 0;
       } while (($457 | 0) != ($$pre717 | 0));
       $460 = HEAP32[$439 >> 2] | 0;
      }
      __ZdlPv($460);
      $lpad$phi$i313755$index = $451;
      $lpad$phi$i313755$index151 = $452;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
    $$14 = $lpad$phi$i313755$index;
    $$sink783$index157 = $lpad$phi$i313755$index151;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$14;
   $$2433 = $$sink783$index157;
   ___resumeException($$24 | 0);
   break;
  }
 case 19:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1520, 3);
   __THREW__ = 0;
   invoke_viii(3, $20 | 0, 1304, 1);
   $578 = __THREW__;
   __THREW__ = 0;
   if ($578 & 1) {
    $602 = ___cxa_find_matching_catch() | 0;
    $$19 = $602;
    $$sink787$index212 = tempRet0;
   } else {
    $580 = $agg$result + 12 | 0;
    HEAP32[$580 >> 2] = 0;
    $581 = $agg$result + 16 | 0;
    HEAP32[$581 >> 2] = 0;
    $582 = $agg$result + 20 | 0;
    HEAP32[$582 >> 2] = 0;
    __THREW__ = 0;
    $583 = invoke_ii(67, 12) | 0;
    $584 = __THREW__;
    __THREW__ = 0;
    if ($584 & 1) {
     $590 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i414765$index = $590;
     $lpad$phi$i414765$index206 = tempRet0;
    } else {
     HEAP32[$581 >> 2] = $583;
     HEAP32[$580 >> 2] = $583;
     HEAP32[$582 >> 2] = $583 + 12;
     __THREW__ = 0;
     invoke_vii(40, $583 | 0, $20 | 0);
     $587 = __THREW__;
     __THREW__ = 0;
     if (!($587 & 1)) {
      HEAP32[$581 >> 2] = (HEAP32[$581 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
      STACKTOP = sp;
      return;
     }
     $592 = ___cxa_find_matching_catch() | 0;
     $593 = tempRet0;
     $$pre722 = HEAP32[$580 >> 2] | 0;
     if (!$$pre722) {
      $lpad$phi$i414765$index = $592;
      $lpad$phi$i414765$index206 = $593;
     } else {
      $595 = HEAP32[$581 >> 2] | 0;
      if (($595 | 0) == ($$pre722 | 0)) $601 = $$pre722; else {
       $598 = $595;
       do {
        $597 = $598 + -12 | 0;
        HEAP32[$581 >> 2] = $597;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($597);
        $598 = HEAP32[$581 >> 2] | 0;
       } while (($598 | 0) != ($$pre722 | 0));
       $601 = HEAP32[$580 >> 2] | 0;
      }
      __ZdlPv($601);
      $lpad$phi$i414765$index = $592;
      $lpad$phi$i414765$index206 = $593;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
    $$19 = $lpad$phi$i414765$index;
    $$sink787$index212 = $lpad$phi$i414765$index206;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$19;
   $$2433 = $$sink787$index212;
   ___resumeException($$24 | 0);
   break;
  }
 case 21:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1544, 8);
   __THREW__ = 0;
   invoke_viii(3, $22 | 0, 1304, 1);
   $630 = __THREW__;
   __THREW__ = 0;
   if ($630 & 1) {
    $654 = ___cxa_find_matching_catch() | 0;
    $$21 = $654;
    $$sink789$index236 = tempRet0;
   } else {
    $632 = $agg$result + 12 | 0;
    HEAP32[$632 >> 2] = 0;
    $633 = $agg$result + 16 | 0;
    HEAP32[$633 >> 2] = 0;
    $634 = $agg$result + 20 | 0;
    HEAP32[$634 >> 2] = 0;
    __THREW__ = 0;
    $635 = invoke_ii(67, 12) | 0;
    $636 = __THREW__;
    __THREW__ = 0;
    if ($636 & 1) {
     $642 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i454769$index = $642;
     $lpad$phi$i454769$index230 = tempRet0;
    } else {
     HEAP32[$633 >> 2] = $635;
     HEAP32[$632 >> 2] = $635;
     HEAP32[$634 >> 2] = $635 + 12;
     __THREW__ = 0;
     invoke_vii(40, $635 | 0, $22 | 0);
     $639 = __THREW__;
     __THREW__ = 0;
     if (!($639 & 1)) {
      HEAP32[$633 >> 2] = (HEAP32[$633 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
      STACKTOP = sp;
      return;
     }
     $644 = ___cxa_find_matching_catch() | 0;
     $645 = tempRet0;
     $$pre724 = HEAP32[$632 >> 2] | 0;
     if (!$$pre724) {
      $lpad$phi$i454769$index = $644;
      $lpad$phi$i454769$index230 = $645;
     } else {
      $647 = HEAP32[$633 >> 2] | 0;
      if (($647 | 0) == ($$pre724 | 0)) $653 = $$pre724; else {
       $650 = $647;
       do {
        $649 = $650 + -12 | 0;
        HEAP32[$633 >> 2] = $649;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($649);
        $650 = HEAP32[$633 >> 2] | 0;
       } while (($650 | 0) != ($$pre724 | 0));
       $653 = HEAP32[$632 >> 2] | 0;
      }
      __ZdlPv($653);
      $lpad$phi$i454769$index = $644;
      $lpad$phi$i454769$index230 = $645;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
    $$21 = $lpad$phi$i454769$index;
    $$sink789$index236 = $lpad$phi$i454769$index230;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$21;
   $$2433 = $$sink789$index236;
   ___resumeException($$24 | 0);
   break;
  }
 case 22:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1560, 6);
   $656 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $23 | 0, 1568, 1);
   $657 = __THREW__;
   __THREW__ = 0;
   if ($657 & 1) {
    $$01 = $23;
    label = 343;
   } else {
    $659 = $23 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $659 | 0, 1576, 1);
    $660 = __THREW__;
    __THREW__ = 0;
    if ($660 & 1) {
     $$01 = $659;
     label = 343;
    } else {
     HEAP32[$656 >> 2] = 0;
     $662 = $agg$result + 16 | 0;
     HEAP32[$662 >> 2] = 0;
     $663 = $agg$result + 20 | 0;
     HEAP32[$663 >> 2] = 0;
     __THREW__ = 0;
     $664 = invoke_ii(67, 24) | 0;
     $665 = __THREW__;
     __THREW__ = 0;
     if ($665 & 1) {
      $674 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i475771$index = $674;
      $lpad$phi$i475771$index242 = tempRet0;
     } else {
      HEAP32[$662 >> 2] = $664;
      HEAP32[$656 >> 2] = $664;
      HEAP32[$663 >> 2] = $664 + 24;
      __THREW__ = 0;
      invoke_vii(40, $664 | 0, $23 | 0);
      $668 = __THREW__;
      __THREW__ = 0;
      if (!($668 & 1)) {
       $670 = (HEAP32[$662 >> 2] | 0) + 12 | 0;
       HEAP32[$662 >> 2] = $670;
       __THREW__ = 0;
       invoke_vii(40, $670 | 0, $23 + 12 | 0);
       $672 = __THREW__;
       __THREW__ = 0;
       if (!($672 & 1)) {
        HEAP32[$662 >> 2] = (HEAP32[$662 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
        STACKTOP = sp;
        return;
       }
      }
      $676 = ___cxa_find_matching_catch() | 0;
      $677 = tempRet0;
      $$pre725 = HEAP32[$656 >> 2] | 0;
      if (!$$pre725) {
       $lpad$phi$i475771$index = $676;
       $lpad$phi$i475771$index242 = $677;
      } else {
       $679 = HEAP32[$662 >> 2] | 0;
       if (($679 | 0) == ($$pre725 | 0)) $685 = $$pre725; else {
        $682 = $679;
        do {
         $681 = $682 + -12 | 0;
         HEAP32[$662 >> 2] = $681;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($681);
         $682 = HEAP32[$662 >> 2] | 0;
        } while (($682 | 0) != ($$pre725 | 0));
        $685 = HEAP32[$656 >> 2] | 0;
       }
       __ZdlPv($685);
       $lpad$phi$i475771$index = $676;
       $lpad$phi$i475771$index242 = $677;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
     $$22 = $lpad$phi$i475771$index;
     $$2231 = $lpad$phi$i475771$index242;
    }
   }
   if ((label | 0) == 343) {
    $686 = ___cxa_find_matching_catch() | 0;
    $687 = tempRet0;
    if (($23 | 0) == ($$01 | 0)) {
     $$22 = $686;
     $$2231 = $687;
    } else {
     $690 = $$01;
     do {
      $690 = $690 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($690);
     } while (($690 | 0) != ($23 | 0));
     $$22 = $686;
     $$2231 = $687;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$22;
   $$2433 = $$2231;
   ___resumeException($$24 | 0);
   break;
  }
 case 23:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1584, 6);
   __THREW__ = 0;
   invoke_viii(3, $24 | 0, 1296, 1);
   $693 = __THREW__;
   __THREW__ = 0;
   if ($693 & 1) {
    $717 = ___cxa_find_matching_catch() | 0;
    $$23 = $717;
    $$sink790$index255 = tempRet0;
   } else {
    $695 = $agg$result + 12 | 0;
    HEAP32[$695 >> 2] = 0;
    $696 = $agg$result + 16 | 0;
    HEAP32[$696 >> 2] = 0;
    $697 = $agg$result + 20 | 0;
    HEAP32[$697 >> 2] = 0;
    __THREW__ = 0;
    $698 = invoke_ii(67, 12) | 0;
    $699 = __THREW__;
    __THREW__ = 0;
    if ($699 & 1) {
     $705 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i495773$index = $705;
     $lpad$phi$i495773$index249 = tempRet0;
    } else {
     HEAP32[$696 >> 2] = $698;
     HEAP32[$695 >> 2] = $698;
     HEAP32[$697 >> 2] = $698 + 12;
     __THREW__ = 0;
     invoke_vii(40, $698 | 0, $24 | 0);
     $702 = __THREW__;
     __THREW__ = 0;
     if (!($702 & 1)) {
      HEAP32[$696 >> 2] = (HEAP32[$696 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
      STACKTOP = sp;
      return;
     }
     $707 = ___cxa_find_matching_catch() | 0;
     $708 = tempRet0;
     $$pre726 = HEAP32[$695 >> 2] | 0;
     if (!$$pre726) {
      $lpad$phi$i495773$index = $707;
      $lpad$phi$i495773$index249 = $708;
     } else {
      $710 = HEAP32[$696 >> 2] | 0;
      if (($710 | 0) == ($$pre726 | 0)) $716 = $$pre726; else {
       $713 = $710;
       do {
        $712 = $713 + -12 | 0;
        HEAP32[$696 >> 2] = $712;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($712);
        $713 = HEAP32[$696 >> 2] | 0;
       } while (($713 | 0) != ($$pre726 | 0));
       $716 = HEAP32[$695 >> 2] | 0;
      }
      __ZdlPv($716);
      $lpad$phi$i495773$index = $707;
      $lpad$phi$i495773$index249 = $708;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
    $$23 = $lpad$phi$i495773$index;
    $$sink790$index255 = $lpad$phi$i495773$index249;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$23;
   $$2433 = $$sink790$index255;
   ___resumeException($$24 | 0);
   break;
  }
 case 5:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1336, 3);
   __THREW__ = 0;
   invoke_viii(3, $6 | 0, 1296, 1);
   $177 = __THREW__;
   __THREW__ = 0;
   if ($177 & 1) {
    $201 = ___cxa_find_matching_catch() | 0;
    $$5 = $201;
    $$sink776$index59 = tempRet0;
   } else {
    $179 = $agg$result + 12 | 0;
    HEAP32[$179 >> 2] = 0;
    $180 = $agg$result + 16 | 0;
    HEAP32[$180 >> 2] = 0;
    $181 = $agg$result + 20 | 0;
    HEAP32[$181 >> 2] = 0;
    __THREW__ = 0;
    $182 = invoke_ii(67, 12) | 0;
    $183 = __THREW__;
    __THREW__ = 0;
    if ($183 & 1) {
     $189 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i130737$index = $189;
     $lpad$phi$i130737$index53 = tempRet0;
    } else {
     HEAP32[$180 >> 2] = $182;
     HEAP32[$179 >> 2] = $182;
     HEAP32[$181 >> 2] = $182 + 12;
     __THREW__ = 0;
     invoke_vii(40, $182 | 0, $6 | 0);
     $186 = __THREW__;
     __THREW__ = 0;
     if (!($186 & 1)) {
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
      STACKTOP = sp;
      return;
     }
     $191 = ___cxa_find_matching_catch() | 0;
     $192 = tempRet0;
     $$pre708 = HEAP32[$179 >> 2] | 0;
     if (!$$pre708) {
      $lpad$phi$i130737$index = $191;
      $lpad$phi$i130737$index53 = $192;
     } else {
      $194 = HEAP32[$180 >> 2] | 0;
      if (($194 | 0) == ($$pre708 | 0)) $200 = $$pre708; else {
       $197 = $194;
       do {
        $196 = $197 + -12 | 0;
        HEAP32[$180 >> 2] = $196;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($196);
        $197 = HEAP32[$180 >> 2] | 0;
       } while (($197 | 0) != ($$pre708 | 0));
       $200 = HEAP32[$179 >> 2] | 0;
      }
      __ZdlPv($200);
      $lpad$phi$i130737$index = $191;
      $lpad$phi$i130737$index53 = $192;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    $$5 = $lpad$phi$i130737$index;
    $$sink776$index59 = $lpad$phi$i130737$index53;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$5;
   $$2433 = $$sink776$index59;
   ___resumeException($$24 | 0);
   break;
  }
 case 15:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1464, 14);
   $463 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $16 | 0, 1424, 3);
   $464 = __THREW__;
   __THREW__ = 0;
   if ($464 & 1) {
    $$035 = $16;
    label = 241;
   } else {
    $466 = $16 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $466 | 0, 1440, 10);
    $467 = __THREW__;
    __THREW__ = 0;
    if ($467 & 1) {
     $$035 = $466;
     label = 241;
    } else {
     HEAP32[$463 >> 2] = 0;
     $469 = $agg$result + 16 | 0;
     HEAP32[$469 >> 2] = 0;
     $470 = $agg$result + 20 | 0;
     HEAP32[$470 >> 2] = 0;
     __THREW__ = 0;
     $471 = invoke_ii(67, 24) | 0;
     $472 = __THREW__;
     __THREW__ = 0;
     if ($472 & 1) {
      $481 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i334757$index = $481;
      $lpad$phi$i334757$index163 = tempRet0;
     } else {
      HEAP32[$469 >> 2] = $471;
      HEAP32[$463 >> 2] = $471;
      HEAP32[$470 >> 2] = $471 + 24;
      __THREW__ = 0;
      invoke_vii(40, $471 | 0, $16 | 0);
      $475 = __THREW__;
      __THREW__ = 0;
      if (!($475 & 1)) {
       $477 = (HEAP32[$469 >> 2] | 0) + 12 | 0;
       HEAP32[$469 >> 2] = $477;
       __THREW__ = 0;
       invoke_vii(40, $477 | 0, $16 + 12 | 0);
       $479 = __THREW__;
       __THREW__ = 0;
       if (!($479 & 1)) {
        HEAP32[$469 >> 2] = (HEAP32[$469 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
        STACKTOP = sp;
        return;
       }
      }
      $483 = ___cxa_find_matching_catch() | 0;
      $484 = tempRet0;
      $$pre718 = HEAP32[$463 >> 2] | 0;
      if (!$$pre718) {
       $lpad$phi$i334757$index = $483;
       $lpad$phi$i334757$index163 = $484;
      } else {
       $486 = HEAP32[$469 >> 2] | 0;
       if (($486 | 0) == ($$pre718 | 0)) $492 = $$pre718; else {
        $489 = $486;
        do {
         $488 = $489 + -12 | 0;
         HEAP32[$469 >> 2] = $488;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($488);
         $489 = HEAP32[$469 >> 2] | 0;
        } while (($489 | 0) != ($$pre718 | 0));
        $492 = HEAP32[$463 >> 2] | 0;
       }
       __ZdlPv($492);
       $lpad$phi$i334757$index = $483;
       $lpad$phi$i334757$index163 = $484;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     $$15 = $lpad$phi$i334757$index;
     $$1524 = $lpad$phi$i334757$index163;
    }
   }
   if ((label | 0) == 241) {
    $493 = ___cxa_find_matching_catch() | 0;
    $494 = tempRet0;
    if (($16 | 0) == ($$035 | 0)) {
     $$15 = $493;
     $$1524 = $494;
    } else {
     $497 = $$035;
     do {
      $497 = $497 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($497);
     } while (($497 | 0) != ($16 | 0));
     $$15 = $493;
     $$1524 = $494;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$15;
   $$2433 = $$1524;
   ___resumeException($$24 | 0);
   break;
  }
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1312, 5);
   __THREW__ = 0;
   invoke_viii(3, $3 | 0, 1296, 1);
   $99 = __THREW__;
   __THREW__ = 0;
   if ($99 & 1) {
    $123 = ___cxa_find_matching_catch() | 0;
    $$2 = $123;
    $$sink$index23 = tempRet0;
   } else {
    $101 = $agg$result + 12 | 0;
    HEAP32[$101 >> 2] = 0;
    $102 = $agg$result + 16 | 0;
    HEAP32[$102 >> 2] = 0;
    $103 = $agg$result + 20 | 0;
    HEAP32[$103 >> 2] = 0;
    __THREW__ = 0;
    $104 = invoke_ii(67, 12) | 0;
    $105 = __THREW__;
    __THREW__ = 0;
    if ($105 & 1) {
     $111 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i70731$index = $111;
     $lpad$phi$i70731$index17 = tempRet0;
    } else {
     HEAP32[$102 >> 2] = $104;
     HEAP32[$101 >> 2] = $104;
     HEAP32[$103 >> 2] = $104 + 12;
     __THREW__ = 0;
     invoke_vii(40, $104 | 0, $3 | 0);
     $108 = __THREW__;
     __THREW__ = 0;
     if (!($108 & 1)) {
      HEAP32[$102 >> 2] = (HEAP32[$102 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      STACKTOP = sp;
      return;
     }
     $113 = ___cxa_find_matching_catch() | 0;
     $114 = tempRet0;
     $$pre705 = HEAP32[$101 >> 2] | 0;
     if (!$$pre705) {
      $lpad$phi$i70731$index = $113;
      $lpad$phi$i70731$index17 = $114;
     } else {
      $116 = HEAP32[$102 >> 2] | 0;
      if (($116 | 0) == ($$pre705 | 0)) $122 = $$pre705; else {
       $119 = $116;
       do {
        $118 = $119 + -12 | 0;
        HEAP32[$102 >> 2] = $118;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($118);
        $119 = HEAP32[$102 >> 2] | 0;
       } while (($119 | 0) != ($$pre705 | 0));
       $122 = HEAP32[$101 >> 2] | 0;
      }
      __ZdlPv($122);
      $lpad$phi$i70731$index = $113;
      $lpad$phi$i70731$index17 = $114;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $$2 = $lpad$phi$i70731$index;
    $$sink$index23 = $lpad$phi$i70731$index17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$2;
   $$2433 = $$sink$index23;
   ___resumeException($$24 | 0);
   break;
  }
 case 10:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1376, 4);
   __THREW__ = 0;
   invoke_viii(3, $11 | 0, 1296, 1);
   $307 = __THREW__;
   __THREW__ = 0;
   if ($307 & 1) {
    $331 = ___cxa_find_matching_catch() | 0;
    $$10 = $331;
    $$sink781$index119 = tempRet0;
   } else {
    $309 = $agg$result + 12 | 0;
    HEAP32[$309 >> 2] = 0;
    $310 = $agg$result + 16 | 0;
    HEAP32[$310 >> 2] = 0;
    $311 = $agg$result + 20 | 0;
    HEAP32[$311 >> 2] = 0;
    __THREW__ = 0;
    $312 = invoke_ii(67, 12) | 0;
    $313 = __THREW__;
    __THREW__ = 0;
    if ($313 & 1) {
     $319 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i230747$index = $319;
     $lpad$phi$i230747$index113 = tempRet0;
    } else {
     HEAP32[$310 >> 2] = $312;
     HEAP32[$309 >> 2] = $312;
     HEAP32[$311 >> 2] = $312 + 12;
     __THREW__ = 0;
     invoke_vii(40, $312 | 0, $11 | 0);
     $316 = __THREW__;
     __THREW__ = 0;
     if (!($316 & 1)) {
      HEAP32[$310 >> 2] = (HEAP32[$310 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
      STACKTOP = sp;
      return;
     }
     $321 = ___cxa_find_matching_catch() | 0;
     $322 = tempRet0;
     $$pre713 = HEAP32[$309 >> 2] | 0;
     if (!$$pre713) {
      $lpad$phi$i230747$index = $321;
      $lpad$phi$i230747$index113 = $322;
     } else {
      $324 = HEAP32[$310 >> 2] | 0;
      if (($324 | 0) == ($$pre713 | 0)) $330 = $$pre713; else {
       $327 = $324;
       do {
        $326 = $327 + -12 | 0;
        HEAP32[$310 >> 2] = $326;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($326);
        $327 = HEAP32[$310 >> 2] | 0;
       } while (($327 | 0) != ($$pre713 | 0));
       $330 = HEAP32[$309 >> 2] | 0;
      }
      __ZdlPv($330);
      $lpad$phi$i230747$index = $321;
      $lpad$phi$i230747$index113 = $322;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
    $$10 = $lpad$phi$i230747$index;
    $$sink781$index119 = $lpad$phi$i230747$index113;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$10;
   $$2433 = $$sink781$index119;
   ___resumeException($$24 | 0);
   break;
  }
 case 8:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1360, 4);
   __THREW__ = 0;
   invoke_viii(3, $9 | 0, 1296, 1);
   $255 = __THREW__;
   __THREW__ = 0;
   if ($255 & 1) {
    $279 = ___cxa_find_matching_catch() | 0;
    $$8 = $279;
    $$sink779$index95 = tempRet0;
   } else {
    $257 = $agg$result + 12 | 0;
    HEAP32[$257 >> 2] = 0;
    $258 = $agg$result + 16 | 0;
    HEAP32[$258 >> 2] = 0;
    $259 = $agg$result + 20 | 0;
    HEAP32[$259 >> 2] = 0;
    __THREW__ = 0;
    $260 = invoke_ii(67, 12) | 0;
    $261 = __THREW__;
    __THREW__ = 0;
    if ($261 & 1) {
     $267 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i190743$index = $267;
     $lpad$phi$i190743$index89 = tempRet0;
    } else {
     HEAP32[$258 >> 2] = $260;
     HEAP32[$257 >> 2] = $260;
     HEAP32[$259 >> 2] = $260 + 12;
     __THREW__ = 0;
     invoke_vii(40, $260 | 0, $9 | 0);
     $264 = __THREW__;
     __THREW__ = 0;
     if (!($264 & 1)) {
      HEAP32[$258 >> 2] = (HEAP32[$258 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      STACKTOP = sp;
      return;
     }
     $269 = ___cxa_find_matching_catch() | 0;
     $270 = tempRet0;
     $$pre711 = HEAP32[$257 >> 2] | 0;
     if (!$$pre711) {
      $lpad$phi$i190743$index = $269;
      $lpad$phi$i190743$index89 = $270;
     } else {
      $272 = HEAP32[$258 >> 2] | 0;
      if (($272 | 0) == ($$pre711 | 0)) $278 = $$pre711; else {
       $275 = $272;
       do {
        $274 = $275 + -12 | 0;
        HEAP32[$258 >> 2] = $274;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($274);
        $275 = HEAP32[$258 >> 2] | 0;
       } while (($275 | 0) != ($$pre711 | 0));
       $278 = HEAP32[$257 >> 2] | 0;
      }
      __ZdlPv($278);
      $lpad$phi$i190743$index = $269;
      $lpad$phi$i190743$index89 = $270;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    $$8 = $lpad$phi$i190743$index;
    $$sink779$index95 = $lpad$phi$i190743$index89;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$8;
   $$2433 = $$sink779$index95;
   ___resumeException($$24 | 0);
   break;
  }
 default:
  {
   $720 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(45984, 1592, 47) | 0, $builtin) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $720 + (HEAP32[(HEAP32[$720 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $725 = invoke_iii(22, $0 | 0, 50208) | 0;
   $726 = __THREW__;
   __THREW__ = 0;
   if ($726 & 1) {
    $734 = ___cxa_find_matching_catch() | 0;
    $735 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($734 | 0);
   }
   __THREW__ = 0;
   $731 = invoke_iii(HEAP32[(HEAP32[$725 >> 2] | 0) + 28 >> 2] | 0, $725 | 0, 10) | 0;
   $732 = __THREW__;
   __THREW__ = 0;
   if ($732 & 1) {
    $734 = ___cxa_find_matching_catch() | 0;
    $735 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($734 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($720, $731) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($720) | 0;
    _abort();
   }
  }
 } while (0);
}

function __ZL7unparsePK3AST($agg$result, $ast_) {
 $agg$result = $agg$result | 0;
 $ast_ = $ast_ | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$3 = 0, $$34 = 0, $$4 = 0, $$45 = 0, $$5 = 0, $$56 = 0, $$6 = 0, $$67 = 0, $$7 = 0, $$78 = 0, $$8 = 0, $$89 = 0, $$9 = 0, $$910 = 0, $$cast$i$i$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1002 = 0, $1004 = 0, $1005 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1017 = 0, $1019 = 0, $102 = 0, $1021 = 0, $1023 = 0, $1024 = 0, $1026 = 0, $1027 = 0, $1029 = 0, $1031 = 0, $1032 = 0, $104 = 0, $106 = 0, $11 = 0, $113 = 0, $114 = 0, $115 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $123 = 0, $127 = 0, $128 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $135 = 0, $136 = 0, $139 = 0, $14 = 0, $140 = 0, $142 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $155 = 0, $156 = 0, $157 = 0, $159 = 0, $16 = 0, $163 = 0, $165 = 0, $17 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $18 = 0, $180 = 0, $181 = 0, $184 = 0, $185 = 0, $187 = 0, $189 = 0, $19 = 0, $191 = 0, $193 = 0, $195 = 0, $197 = 0, $199 = 0, $2 = 0, $20 = 0, $201 = 0, $203 = 0, $205 = 0, $207 = 0, $209 = 0, $21 = 0, $211 = 0, $213 = 0, $215 = 0, $217 = 0, $219 = 0, $22 = 0, $220 = 0, $222 = 0, $223 = 0, $229 = 0, $23 = 0, $231 = 0, $232 = 0, $237 = 0, $238 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $244 = 0, $246 = 0, $248 = 0, $25 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $263 = 0, $264 = 0, $268 = 0, $27 = 0, $270 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $284 = 0, $286 = 0, $288 = 0, $289 = 0, $29 = 0, $292 = 0, $293 = 0, $299 = 0, $3 = 0, $30 = 0, $301 = 0, $302 = 0, $307 = 0, $308 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $314 = 0, $316 = 0, $318 = 0, $32 = 0, $320 = 0, $321 = 0, $325 = 0, $327 = 0, $33 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $342 = 0, $343 = 0, $347 = 0, $349 = 0, $359 = 0, $360 = 0, $361 = 0, $362 = 0, $364 = 0, $365 = 0, $369 = 0, $37 = 0, $371 = 0, $381 = 0, $382 = 0, $383 = 0, $385 = 0, $387 = 0, $389 = 0, $390 = 0, $391 = 0, $393 = 0, $394 = 0, $398 = 0, $4 = 0, $400 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $414 = 0, $415 = 0, $416 = 0, $418 = 0, $421 = 0, $423 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $431 = 0, $441 = 0, $442 = 0, $443 = 0, $447 = 0, $448 = 0, $45 = 0, $452 = 0, $454 = 0, $464 = 0, $465 = 0, $466 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $472 = 0, $473 = 0, $476 = 0, $478 = 0, $48 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $492 = 0, $493 = 0, $494 = 0, $496 = 0, $497 = 0, $5 = 0, $500 = 0, $502 = 0, $51 = 0, $512 = 0, $513 = 0, $514 = 0, $516 = 0, $517 = 0, $518 = 0, $522 = 0, $524 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $539 = 0, $54 = 0, $540 = 0, $544 = 0, $546 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $561 = 0, $563 = 0, $565 = 0, $566 = 0, $567 = 0, $570 = 0, $571 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $58 = 0, $581 = 0, $582 = 0, $583 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $603 = 0, $605 = 0, $612 = 0, $613 = 0, $614 = 0, $617 = 0, $619 = 0, $622 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $633 = 0, $635 = 0, $645 = 0, $646 = 0, $647 = 0, $649 = 0, $650 = 0, $651 = 0, $655 = 0, $658 = 0, $660 = 0, $664 = 0, $666 = 0, $669 = 0, $671 = 0, $681 = 0, $682 = 0, $683 = 0, $685 = 0, $686 = 0, $689 = 0, $691 = 0, $696 = 0, $698 = 0, $7 = 0, $70 = 0, $700 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $718 = 0, $719 = 0, $72 = 0, $725 = 0, $727 = 0, $728 = 0, $733 = 0, $734 = 0, $736 = 0, $737 = 0, $738 = 0, $740 = 0, $742 = 0, $743 = 0, $747 = 0, $749 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $761 = 0, $762 = 0, $764 = 0, $765 = 0, $766 = 0, $768 = 0, $769 = 0, $77 = 0, $773 = 0, $775 = 0, $782 = 0, $783 = 0, $784 = 0, $789 = 0, $79 = 0, $791 = 0, $792 = 0, $793 = 0, $795 = 0, $797 = 0, $798 = 0, $8 = 0, $80 = 0, $802 = 0, $804 = 0, $81 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $819 = 0, $82 = 0, $820 = 0, $824 = 0, $826 = 0, $836 = 0, $837 = 0, $838 = 0, $84 = 0, $840 = 0, $841 = 0, $844 = 0, $845 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $86 = 0, $860 = 0, $861 = 0, $865 = 0, $867 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $881 = 0, $883 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $891 = 0, $894 = 0, $896 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $902 = 0, $904 = 0, $906 = 0, $908 = 0, $909 = 0, $911 = 0, $912 = 0, $918 = 0, $92 = 0, $920 = 0, $921 = 0, $926 = 0, $927 = 0, $929 = 0, $930 = 0, $931 = 0, $933 = 0, $935 = 0, $937 = 0, $94 = 0, $947 = 0, $948 = 0, $949 = 0, $950 = 0, $954 = 0, $956 = 0, $96 = 0, $966 = 0, $967 = 0, $968 = 0, $97 = 0, $970 = 0, $972 = 0, $973 = 0, $974 = 0, $977 = 0, $978 = 0, $98 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $992 = 0, $993 = 0, $995 = 0, $996 = 0, $colons$0 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index28Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body60$index15Z2D = 0, $eh$lpad$body60$indexZ2D = 0, $prefix$0299 = 0, $prefix10$0292 = 0, $prefix19$0287 = 0, $prefix2$0295 = 0, $prefix27$0286 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $0 = sp + 488 | 0;
 $1 = sp + 484 | 0;
 $2 = sp + 480 | 0;
 $3 = sp + 476 | 0;
 $4 = sp + 472 | 0;
 $ss = sp + 328 | 0;
 $5 = sp + 312 | 0;
 $6 = sp + 300 | 0;
 $7 = sp + 288 | 0;
 $8 = sp + 276 | 0;
 $9 = sp + 264 | 0;
 $10 = sp + 252 | 0;
 $11 = sp + 240 | 0;
 $12 = sp + 228 | 0;
 $13 = sp + 216 | 0;
 $14 = sp + 204 | 0;
 $15 = sp + 192 | 0;
 $16 = sp + 180 | 0;
 $17 = sp + 168 | 0;
 $18 = sp + 156 | 0;
 $19 = sp + 144 | 0;
 $20 = sp + 132 | 0;
 $21 = sp + 120 | 0;
 $22 = sp + 108 | 0;
 $23 = sp + 96 | 0;
 $24 = sp + 84 | 0;
 $25 = sp + 72 | 0;
 $26 = sp + 60 | 0;
 $27 = sp + 48 | 0;
 $28 = sp + 36 | 0;
 $29 = sp + 24 | 0;
 $30 = sp + 12 | 0;
 $31 = sp;
 $32 = $ss + 64 | 0;
 $33 = $ss + 8 | 0;
 HEAP32[$33 >> 2] = 752;
 $34 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 900;
 HEAP32[$32 >> 2] = 920;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $34 | 0);
 $37 = __THREW__;
 __THREW__ = 0;
 if ($37 & 1) {
  $49 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $49;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 732;
 HEAP32[$32 >> 2] = 772;
 HEAP32[$33 >> 2] = 752;
 __THREW__ = 0;
 invoke_vi(177, $34 | 0);
 $41 = __THREW__;
 __THREW__ = 0;
 do if ($41 & 1) {
  $51 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $51;
 } else {
  HEAP32[$34 >> 2] = 1064;
  $43 = $ss + 44 | 0;
  HEAP32[$43 + 0 >> 2] = 0;
  HEAP32[$43 + 4 >> 2] = 0;
  HEAP32[$43 + 8 >> 2] = 0;
  HEAP32[$43 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $34 | 0, $0 | 0);
  $45 = __THREW__;
  __THREW__ = 0;
  if ($45 & 1) {
   $47 = ___cxa_find_matching_catch() | 0;
   $48 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
   $eh$lpad$body$i$index2Z2D = $48;
   $eh$lpad$body$i$indexZ2D = $47;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  L11 : do if (!$ast_) label = 349; else {
   $54 = ___dynamic_cast($ast_, 35776, 36024, 0) | 0;
   L13 : do if (!$54) {
    $123 = ___dynamic_cast($ast_, 35776, 36056, 0) | 0;
    if ($123) {
     $127 = HEAP32[$123 + 52 >> 2] | 0;
     $128 = HEAP32[$123 + 48 >> 2] | 0;
     if (($127 | 0) == ($128 | 0)) {
      __THREW__ = 0;
      invoke_iiii(25, $33 | 0, 39448, 3) | 0;
      $133 = __THREW__;
      __THREW__ = 0;
      if ($133 & 1) {
       label = 24;
       break L11;
      } else break;
     }
     $130 = $7 + 1 | 0;
     $131 = $7 + 8 | 0;
     $132 = $7 + 4 | 0;
     $139 = $128;
     $prefix2$0295 = 39464;
     while (1) {
      $135 = _strlen($prefix2$0295 | 0) | 0;
      __THREW__ = 0;
      invoke_iiii(25, $33 | 0, $prefix2$0295 | 0, $135 | 0) | 0;
      $136 = __THREW__;
      __THREW__ = 0;
      if ($136 & 1) {
       label = 22;
       break;
      }
      __THREW__ = 0;
      invoke_vii(54, $7 | 0, HEAP32[$139 >> 2] | 0);
      $140 = __THREW__;
      __THREW__ = 0;
      if ($140 & 1) {
       label = 22;
       break;
      }
      $142 = HEAP8[$7 >> 0] | 0;
      if (!($142 & 1)) {
       $149 = $130;
       $150 = ($142 & 255) >>> 1;
      } else {
       $149 = HEAP32[$131 >> 2] | 0;
       $150 = HEAP32[$132 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $33 | 0, $149 | 0, $150 | 0) | 0;
      $151 = __THREW__;
      __THREW__ = 0;
      if ($151 & 1) {
       label = 47;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      $139 = $139 + 4 | 0;
      if (($139 | 0) == ($127 | 0)) {
       label = 48;
       break;
      } else $prefix2$0295 = 38552;
     }
     if ((label | 0) == 22) {
      $90 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body60$index15Z2D = tempRet0;
      $eh$lpad$body60$indexZ2D = $90;
      break L11;
     } else if ((label | 0) == 47) {
      $155 = ___cxa_find_matching_catch() | 0;
      $156 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      $$9 = $155;
      $$910 = $156;
      HEAP32[$ss >> 2] = 732;
      HEAP32[$32 >> 2] = 772;
      HEAP32[$33 >> 2] = 752;
      HEAP32[$34 >> 2] = 1064;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } else if ((label | 0) == 48) {
      __THREW__ = 0;
      invoke_iiii(25, $33 | 0, 39488, 1) | 0;
      $157 = __THREW__;
      __THREW__ = 0;
      if ($157 & 1) {
       label = 24;
       break L11;
      } else break;
     }
    }
    $159 = ___dynamic_cast($ast_, 35776, 36080, 0) | 0;
    if ($159) {
     __THREW__ = 0;
     invoke_vii(54, $8 | 0, HEAP32[$159 + 48 >> 2] | 0);
     $163 = __THREW__;
     __THREW__ = 0;
     if ($163 & 1) {
      label = 24;
      break L11;
     }
     $165 = HEAP8[$8 >> 0] | 0;
     if (!($165 & 1)) {
      $175 = $8 + 1 | 0;
      $176 = ($165 & 255) >>> 1;
     } else {
      $175 = HEAP32[$8 + 8 >> 2] | 0;
      $176 = HEAP32[$8 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $177 = invoke_iiii(25, $33 | 0, $175 | 0, $176 | 0) | 0;
     $178 = __THREW__;
     __THREW__ = 0;
     L69 : do if ($178 & 1) label = 95; else {
      __THREW__ = 0;
      $180 = invoke_iiii(25, $177 | 0, 42240, 1) | 0;
      $181 = __THREW__;
      __THREW__ = 0;
      if ($181 & 1) label = 95; else {
       $184 = HEAP32[$159 + 52 >> 2] | 0;
       do switch ($184 | 0) {
       case 16:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41776, 2);
         $217 = __THREW__;
         __THREW__ = 0;
         if ($217 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 3:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 42248, 1);
         $191 = __THREW__;
         __THREW__ = 0;
         if ($191 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 4:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41688, 2);
         $193 = __THREW__;
         __THREW__ = 0;
         if ($193 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 5:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41696, 2);
         $195 = __THREW__;
         __THREW__ = 0;
         if ($195 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 6:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 39e3, 1);
         $197 = __THREW__;
         __THREW__ = 0;
         if ($197 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 0:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41672, 1);
         $185 = __THREW__;
         __THREW__ = 0;
         if ($185 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 1:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41680, 1);
         $187 = __THREW__;
         __THREW__ = 0;
         if ($187 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 2:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41400, 1);
         $189 = __THREW__;
         __THREW__ = 0;
         if ($189 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 12:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41744, 1);
         $209 = __THREW__;
         __THREW__ = 0;
         if ($209 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 13:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41752, 1);
         $211 = __THREW__;
         __THREW__ = 0;
         if ($211 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 14:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41760, 1);
         $213 = __THREW__;
         __THREW__ = 0;
         if ($213 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 15:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41768, 2);
         $215 = __THREW__;
         __THREW__ = 0;
         if ($215 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 9:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41720, 2);
         $203 = __THREW__;
         __THREW__ = 0;
         if ($203 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 10:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41728, 2);
         $205 = __THREW__;
         __THREW__ = 0;
         if ($205 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 11:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41736, 2);
         $207 = __THREW__;
         __THREW__ = 0;
         if ($207 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 7:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41704, 2);
         $199 = __THREW__;
         __THREW__ = 0;
         if ($199 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       case 8:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 41712, 1);
         $201 = __THREW__;
         __THREW__ = 0;
         if ($201 & 1) {
          label = 95;
          break L69;
         }
         break;
        }
       default:
        {
         __THREW__ = 0;
         $219 = invoke_iiii(25, 45984, 41784, 46) | 0;
         $220 = __THREW__;
         __THREW__ = 0;
         if ($220 & 1) {
          label = 95;
          break L69;
         }
         __THREW__ = 0;
         $222 = invoke_iii(24, $219 | 0, $184 | 0) | 0;
         $223 = __THREW__;
         __THREW__ = 0;
         if ($223 & 1) {
          label = 95;
          break L69;
         }
         __THREW__ = 0;
         invoke_vii(47, $4 | 0, $222 + (HEAP32[(HEAP32[$222 >> 2] | 0) + -12 >> 2] | 0) | 0);
         $229 = __THREW__;
         __THREW__ = 0;
         if ($229 & 1) {
          label = 95;
          break L69;
         }
         __THREW__ = 0;
         $231 = invoke_iii(22, $4 | 0, 50208) | 0;
         $232 = __THREW__;
         __THREW__ = 0;
         do if (!($232 & 1)) {
          __THREW__ = 0;
          $237 = invoke_iii(HEAP32[(HEAP32[$231 >> 2] | 0) + 28 >> 2] | 0, $231 | 0, 10) | 0;
          $238 = __THREW__;
          __THREW__ = 0;
          if ($238 & 1) break;
          __ZNSt3__16localeD2Ev($4);
          __THREW__ = 0;
          invoke_iii(25, $222 | 0, $237 | 0) | 0;
          $242 = __THREW__;
          __THREW__ = 0;
          if ($242 & 1) {
           label = 95;
           break L69;
          }
          __THREW__ = 0;
          invoke_ii(68, $222 | 0) | 0;
          $244 = __THREW__;
          __THREW__ = 0;
          if ($244 & 1) {
           label = 95;
           break L69;
          }
          __THREW__ = 0;
          invoke_v(3);
          $246 = __THREW__;
          __THREW__ = 0;
          if ($246 & 1) {
           label = 95;
           break L69;
          }
         } while (0);
         $240 = ___cxa_find_matching_catch() | 0;
         $241 = tempRet0;
         __ZNSt3__16localeD2Ev($4);
         $eh$lpad$body$index28Z2D = $241;
         $eh$lpad$body$indexZ2D = $240;
         label = 96;
         break L69;
        }
       } while (0);
       $248 = HEAP8[$9 >> 0] | 0;
       if (!($248 & 1)) {
        $258 = $9 + 1 | 0;
        $259 = ($248 & 255) >>> 1;
       } else {
        $258 = HEAP32[$9 + 8 >> 2] | 0;
        $259 = HEAP32[$9 + 4 >> 2] | 0;
       }
       __THREW__ = 0;
       $260 = invoke_iiii(25, $180 | 0, $258 | 0, $259 | 0) | 0;
       $261 = __THREW__;
       __THREW__ = 0;
       do if ($261 & 1) label = 97; else {
        __THREW__ = 0;
        $263 = invoke_iiii(25, $260 | 0, 42240, 1) | 0;
        $264 = __THREW__;
        __THREW__ = 0;
        if ($264 & 1) label = 97; else {
         __THREW__ = 0;
         invoke_vii(54, $10 | 0, HEAP32[$159 + 56 >> 2] | 0);
         $268 = __THREW__;
         __THREW__ = 0;
         if ($268 & 1) {
          label = 97;
          break;
         }
         $270 = HEAP8[$10 >> 0] | 0;
         if (!($270 & 1)) {
          $280 = $10 + 1 | 0;
          $281 = ($270 & 255) >>> 1;
         } else {
          $280 = HEAP32[$10 + 8 >> 2] | 0;
          $281 = HEAP32[$10 + 4 >> 2] | 0;
         }
         __THREW__ = 0;
         invoke_iiii(25, $263 | 0, $280 | 0, $281 | 0) | 0;
         $282 = __THREW__;
         __THREW__ = 0;
         if ($282 & 1) {
          $288 = ___cxa_find_matching_catch() | 0;
          $289 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
          $$0 = $288;
          $$01 = $289;
          break;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
          break L13;
         }
        }
       } while (0);
       if ((label | 0) == 97) {
        $286 = ___cxa_find_matching_catch() | 0;
        $$0 = $286;
        $$01 = tempRet0;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
       $$1 = $$0;
       $$12 = $$01;
      }
     } while (0);
     if ((label | 0) == 95) {
      $284 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$index28Z2D = tempRet0;
      $eh$lpad$body$indexZ2D = $284;
      label = 96;
     }
     if ((label | 0) == 96) {
      $$1 = $eh$lpad$body$indexZ2D;
      $$12 = $eh$lpad$body$index28Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     $$9 = $$1;
     $$910 = $$12;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$32 >> 2] = 772;
     HEAP32[$33 >> 2] = 752;
     HEAP32[$34 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    if (___dynamic_cast($ast_, 35776, 35984, 0) | 0) {
     __THREW__ = 0;
     $292 = invoke_iiii(25, 45984, 36096, 43) | 0;
     $293 = __THREW__;
     __THREW__ = 0;
     if ($293 & 1) {
      label = 24;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(47, $3 | 0, $292 + (HEAP32[(HEAP32[$292 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $299 = __THREW__;
     __THREW__ = 0;
     if ($299 & 1) {
      label = 24;
      break L11;
     }
     __THREW__ = 0;
     $301 = invoke_iii(22, $3 | 0, 50208) | 0;
     $302 = __THREW__;
     __THREW__ = 0;
     if (!($302 & 1)) {
      __THREW__ = 0;
      $307 = invoke_iii(HEAP32[(HEAP32[$301 >> 2] | 0) + 28 >> 2] | 0, $301 | 0, 10) | 0;
      $308 = __THREW__;
      __THREW__ = 0;
      if (!($308 & 1)) {
       __ZNSt3__16localeD2Ev($3);
       __THREW__ = 0;
       invoke_iii(25, $292 | 0, $307 | 0) | 0;
       $312 = __THREW__;
       __THREW__ = 0;
       if ($312 & 1) {
        label = 24;
        break L11;
       }
       __THREW__ = 0;
       invoke_ii(68, $292 | 0) | 0;
       $314 = __THREW__;
       __THREW__ = 0;
       if ($314 & 1) {
        label = 24;
        break L11;
       }
       __THREW__ = 0;
       invoke_v(3);
       $316 = __THREW__;
       __THREW__ = 0;
       if ($316 & 1) {
        label = 24;
        break L11;
       }
      }
     }
     $310 = ___cxa_find_matching_catch() | 0;
     $311 = tempRet0;
     __ZNSt3__16localeD2Ev($3);
     $eh$lpad$body60$index15Z2D = $311;
     $eh$lpad$body60$indexZ2D = $310;
     break L11;
    }
    $318 = ___dynamic_cast($ast_, 35776, 36160, 0) | 0;
    if ($318) {
     __THREW__ = 0;
     $320 = invoke_iiii(25, $33 | 0, 36176, 3) | 0;
     $321 = __THREW__;
     __THREW__ = 0;
     if ($321 & 1) {
      label = 24;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(54, $11 | 0, HEAP32[$318 + 48 >> 2] | 0);
     $325 = __THREW__;
     __THREW__ = 0;
     if ($325 & 1) {
      label = 24;
      break L11;
     }
     $327 = HEAP8[$11 >> 0] | 0;
     if (!($327 & 1)) {
      $337 = $11 + 1 | 0;
      $338 = ($327 & 255) >>> 1;
     } else {
      $337 = HEAP32[$11 + 8 >> 2] | 0;
      $338 = HEAP32[$11 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $339 = invoke_iiii(25, $320 | 0, $337 | 0, $338 | 0) | 0;
     $340 = __THREW__;
     __THREW__ = 0;
     if ($340 & 1) label = 131; else {
      __THREW__ = 0;
      $342 = invoke_iiii(25, $339 | 0, 36184, 6) | 0;
      $343 = __THREW__;
      __THREW__ = 0;
      if ($343 & 1) label = 131; else {
       __THREW__ = 0;
       invoke_vii(54, $12 | 0, HEAP32[$318 + 52 >> 2] | 0);
       $347 = __THREW__;
       __THREW__ = 0;
       if ($347 & 1) label = 131; else {
        $349 = HEAP8[$12 >> 0] | 0;
        if (!($349 & 1)) {
         $359 = $12 + 1 | 0;
         $360 = ($349 & 255) >>> 1;
        } else {
         $359 = HEAP32[$12 + 8 >> 2] | 0;
         $360 = HEAP32[$12 + 4 >> 2] | 0;
        }
        __THREW__ = 0;
        $361 = invoke_iiii(25, $342 | 0, $359 | 0, $360 | 0) | 0;
        $362 = __THREW__;
        __THREW__ = 0;
        do if ($362 & 1) label = 132; else {
         __THREW__ = 0;
         $364 = invoke_iiii(25, $361 | 0, 36192, 6) | 0;
         $365 = __THREW__;
         __THREW__ = 0;
         if ($365 & 1) {
          label = 132;
          break;
         }
         __THREW__ = 0;
         invoke_vii(54, $13 | 0, HEAP32[$318 + 56 >> 2] | 0);
         $369 = __THREW__;
         __THREW__ = 0;
         if ($369 & 1) {
          label = 132;
          break;
         }
         $371 = HEAP8[$13 >> 0] | 0;
         if (!($371 & 1)) {
          $381 = $13 + 1 | 0;
          $382 = ($371 & 255) >>> 1;
         } else {
          $381 = HEAP32[$13 + 8 >> 2] | 0;
          $382 = HEAP32[$13 + 4 >> 2] | 0;
         }
         __THREW__ = 0;
         invoke_iiii(25, $364 | 0, $381 | 0, $382 | 0) | 0;
         $383 = __THREW__;
         __THREW__ = 0;
         if ($383 & 1) {
          $389 = ___cxa_find_matching_catch() | 0;
          $390 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
          $$2 = $389;
          $$23 = $390;
          break;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
          break L13;
         }
        } while (0);
        if ((label | 0) == 132) {
         $387 = ___cxa_find_matching_catch() | 0;
         $$2 = $387;
         $$23 = tempRet0;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
        $$3 = $$2;
        $$34 = $$23;
       }
      }
     }
     if ((label | 0) == 131) {
      $385 = ___cxa_find_matching_catch() | 0;
      $$3 = $385;
      $$34 = tempRet0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
     $$9 = $$3;
     $$910 = $$34;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$32 >> 2] = 772;
     HEAP32[$33 >> 2] = 752;
     HEAP32[$34 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $391 = ___dynamic_cast($ast_, 35776, 36208, 0) | 0;
    if ($391) {
     __THREW__ = 0;
     $393 = invoke_iiii(25, $33 | 0, 36224, 6) | 0;
     $394 = __THREW__;
     __THREW__ = 0;
     if ($394 & 1) {
      label = 24;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(54, $14 | 0, HEAP32[$391 + 48 >> 2] | 0);
     $398 = __THREW__;
     __THREW__ = 0;
     if ($398 & 1) {
      label = 24;
      break L11;
     }
     $400 = HEAP8[$14 >> 0] | 0;
     if (!($400 & 1)) {
      $410 = $14 + 1 | 0;
      $411 = ($400 & 255) >>> 1;
     } else {
      $410 = HEAP32[$14 + 8 >> 2] | 0;
      $411 = HEAP32[$14 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $393 | 0, $410 | 0, $411 | 0) | 0;
     $412 = __THREW__;
     __THREW__ = 0;
     if (!($412 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
      break;
     }
     $414 = ___cxa_find_matching_catch() | 0;
     $415 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     $$9 = $414;
     $$910 = $415;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$32 >> 2] = 772;
     HEAP32[$33 >> 2] = 752;
     HEAP32[$34 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $416 = ___dynamic_cast($ast_, 35776, 36248, 0) | 0;
    if ($416) {
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 36264, 9) | 0;
     $418 = __THREW__;
     __THREW__ = 0;
     if ($418 & 1) {
      label = 24;
      break L11;
     }
     $421 = HEAP32[$416 + 48 >> 2] | 0;
     $423 = HEAP32[$416 + 52 >> 2] | 0;
     do if (($421 | 0) != ($423 | 0)) {
      $426 = $421;
      $prefix10$0292 = 42256;
      while (1) {
       $425 = HEAP32[$426 >> 2] | 0;
       $427 = _strlen($prefix10$0292 | 0) | 0;
       __THREW__ = 0;
       $428 = invoke_iiii(25, $33 | 0, $prefix10$0292 | 0, $427 | 0) | 0;
       $429 = __THREW__;
       __THREW__ = 0;
       if ($429 & 1) {
        label = 21;
        break;
       }
       $431 = HEAP8[$425 >> 0] | 0;
       if (!($431 & 1)) {
        $441 = $425 + 1 | 0;
        $442 = ($431 & 255) >>> 1;
       } else {
        $441 = HEAP32[$425 + 8 >> 2] | 0;
        $442 = HEAP32[$425 + 4 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $428 | 0, $441 | 0, $442 | 0) | 0;
       $443 = __THREW__;
       __THREW__ = 0;
       if ($443 & 1) {
        label = 21;
        break;
       }
       $426 = $426 + 4 | 0;
       if (($426 | 0) == ($423 | 0)) {
        label = 155;
        break;
       } else $prefix10$0292 = 38552;
      }
      if ((label | 0) == 21) {
       $88 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body60$index15Z2D = tempRet0;
       $eh$lpad$body60$indexZ2D = $88;
       break L11;
      } else if ((label | 0) == 155) break;
     } while (0);
     __THREW__ = 0;
     $447 = invoke_iiii(25, $33 | 0, 36280, 2) | 0;
     $448 = __THREW__;
     __THREW__ = 0;
     if ($448 & 1) {
      label = 24;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(54, $15 | 0, HEAP32[$416 + 60 >> 2] | 0);
     $452 = __THREW__;
     __THREW__ = 0;
     if ($452 & 1) {
      label = 24;
      break L11;
     }
     $454 = HEAP8[$15 >> 0] | 0;
     if (!($454 & 1)) {
      $464 = $15 + 1 | 0;
      $465 = ($454 & 255) >>> 1;
     } else {
      $464 = HEAP32[$15 + 8 >> 2] | 0;
      $465 = HEAP32[$15 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $447 | 0, $464 | 0, $465 | 0) | 0;
     $466 = __THREW__;
     __THREW__ = 0;
     if (!($466 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
      break;
     }
     $468 = ___cxa_find_matching_catch() | 0;
     $469 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
     $$9 = $468;
     $$910 = $469;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$32 >> 2] = 772;
     HEAP32[$33 >> 2] = 752;
     HEAP32[$34 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $470 = ___dynamic_cast($ast_, 35776, 36296, 0) | 0;
    if ($470) {
     __THREW__ = 0;
     $472 = invoke_iiii(25, $33 | 0, 36312, 7) | 0;
     $473 = __THREW__;
     __THREW__ = 0;
     if ($473 & 1) {
      label = 24;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(55, $16 | 0, $470 + 48 | 0);
     $476 = __THREW__;
     __THREW__ = 0;
     if ($476 & 1) {
      label = 24;
      break L11;
     }
     $478 = HEAP8[$16 >> 0] | 0;
     if (!($478 & 1)) {
      $488 = $16 + 1 | 0;
      $489 = ($478 & 255) >>> 1;
     } else {
      $488 = HEAP32[$16 + 8 >> 2] | 0;
      $489 = HEAP32[$16 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $472 | 0, $488 | 0, $489 | 0) | 0;
     $490 = __THREW__;
     __THREW__ = 0;
     if (!($490 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
      break;
     }
     $492 = ___cxa_find_matching_catch() | 0;
     $493 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     $$9 = $492;
     $$910 = $493;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$32 >> 2] = 772;
     HEAP32[$33 >> 2] = 752;
     HEAP32[$34 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $494 = ___dynamic_cast($ast_, 35776, 36336, 0) | 0;
    if ($494) {
     __THREW__ = 0;
     $496 = invoke_iiii(25, $33 | 0, 36352, 10) | 0;
     $497 = __THREW__;
     __THREW__ = 0;
     if ($497 & 1) {
      label = 24;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(55, $17 | 0, $494 + 48 | 0);
     $500 = __THREW__;
     __THREW__ = 0;
     if ($500 & 1) {
      label = 24;
      break L11;
     }
     $502 = HEAP8[$17 >> 0] | 0;
     if (!($502 & 1)) {
      $512 = $17 + 1 | 0;
      $513 = ($502 & 255) >>> 1;
     } else {
      $512 = HEAP32[$17 + 8 >> 2] | 0;
      $513 = HEAP32[$17 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $496 | 0, $512 | 0, $513 | 0) | 0;
     $514 = __THREW__;
     __THREW__ = 0;
     if (!($514 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
      break;
     }
     $516 = ___cxa_find_matching_catch() | 0;
     $517 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
     $$9 = $516;
     $$910 = $517;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$32 >> 2] = 772;
     HEAP32[$33 >> 2] = 752;
     HEAP32[$34 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $518 = ___dynamic_cast($ast_, 35776, 36376, 0) | 0;
    if ($518) {
     __THREW__ = 0;
     invoke_vii(54, $18 | 0, HEAP32[$518 + 48 >> 2] | 0);
     $522 = __THREW__;
     __THREW__ = 0;
     if ($522 & 1) {
      label = 24;
      break L11;
     }
     $524 = HEAP8[$18 >> 0] | 0;
     if (!($524 & 1)) {
      $534 = $18 + 1 | 0;
      $535 = ($524 & 255) >>> 1;
     } else {
      $534 = HEAP32[$18 + 8 >> 2] | 0;
      $535 = HEAP32[$18 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $536 = invoke_iiii(25, $33 | 0, $534 | 0, $535 | 0) | 0;
     $537 = __THREW__;
     __THREW__ = 0;
     do if ($537 & 1) label = 196; else {
      __THREW__ = 0;
      $539 = invoke_iiii(25, $536 | 0, 39464, 1) | 0;
      $540 = __THREW__;
      __THREW__ = 0;
      if ($540 & 1) {
       label = 196;
       break;
      }
      __THREW__ = 0;
      invoke_vii(54, $19 | 0, HEAP32[$518 + 52 >> 2] | 0);
      $544 = __THREW__;
      __THREW__ = 0;
      if ($544 & 1) {
       label = 196;
       break;
      }
      $546 = HEAP8[$19 >> 0] | 0;
      if (!($546 & 1)) {
       $556 = $19 + 1 | 0;
       $557 = ($546 & 255) >>> 1;
      } else {
       $556 = HEAP32[$19 + 8 >> 2] | 0;
       $557 = HEAP32[$19 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $558 = invoke_iiii(25, $539 | 0, $556 | 0, $557 | 0) | 0;
      $559 = __THREW__;
      __THREW__ = 0;
      do if (!($559 & 1)) {
       __THREW__ = 0;
       invoke_iiii(25, $558 | 0, 39488, 1) | 0;
       $561 = __THREW__;
       __THREW__ = 0;
       if ($561 & 1) break;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
       break L13;
      } while (0);
      $565 = ___cxa_find_matching_catch() | 0;
      $566 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
      $$4 = $565;
      $$45 = $566;
     } while (0);
     if ((label | 0) == 196) {
      $563 = ___cxa_find_matching_catch() | 0;
      $$4 = $563;
      $$45 = tempRet0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
     $$9 = $$4;
     $$910 = $$45;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$32 >> 2] = 772;
     HEAP32[$33 >> 2] = 752;
     HEAP32[$34 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $567 = ___dynamic_cast($ast_, 35776, 35792, 0) | 0;
    if ($567) {
     $570 = HEAP32[$567 + 48 >> 2] | 0;
     $571 = $567 + 52 | 0;
     do if (($570 | 0) != ($571 | 0)) {
      $573 = $20 + 1 | 0;
      $574 = $20 + 8 | 0;
      $575 = $20 + 4 | 0;
      $581 = $570;
      $prefix19$0287 = 36392;
      while (1) {
       $576 = _strlen($prefix19$0287 | 0) | 0;
       __THREW__ = 0;
       $577 = invoke_iiii(25, $33 | 0, $prefix19$0287 | 0, $576 | 0) | 0;
       $578 = __THREW__;
       __THREW__ = 0;
       if ($578 & 1) {
        label = 20;
        break;
       }
       $582 = HEAP32[$581 + 16 >> 2] | 0;
       $583 = HEAP8[$582 >> 0] | 0;
       if (!($583 & 1)) {
        $593 = $582 + 1 | 0;
        $594 = ($583 & 255) >>> 1;
       } else {
        $593 = HEAP32[$582 + 8 >> 2] | 0;
        $594 = HEAP32[$582 + 4 >> 2] | 0;
       }
       __THREW__ = 0;
       $595 = invoke_iiii(25, $577 | 0, $593 | 0, $594 | 0) | 0;
       $596 = __THREW__;
       __THREW__ = 0;
       if ($596 & 1) {
        label = 20;
        break;
       }
       __THREW__ = 0;
       $598 = invoke_iiii(25, $595 | 0, 36400, 3) | 0;
       $599 = __THREW__;
       __THREW__ = 0;
       if ($599 & 1) {
        label = 20;
        break;
       }
       __THREW__ = 0;
       invoke_vii(54, $20 | 0, HEAP32[$581 + 20 >> 2] | 0);
       $603 = __THREW__;
       __THREW__ = 0;
       if ($603 & 1) {
        label = 20;
        break;
       }
       $605 = HEAP8[$20 >> 0] | 0;
       if (!($605 & 1)) {
        $612 = $573;
        $613 = ($605 & 255) >>> 1;
       } else {
        $612 = HEAP32[$574 >> 2] | 0;
        $613 = HEAP32[$575 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $598 | 0, $612 | 0, $613 | 0) | 0;
       $614 = __THREW__;
       __THREW__ = 0;
       if ($614 & 1) {
        label = 221;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
       $617 = HEAP32[$581 + 4 >> 2] | 0;
       if (!$617) {
        $$0$i$i$i = $581;
        while (1) {
         $622 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$622 >> 2] | 0) == ($$0$i$i$i | 0)) {
          $$cast$i$i$i$lcssa = $622;
          break;
         } else $$0$i$i$i = $622;
        }
        $$01$i$i$i = $$cast$i$i$i$lcssa;
       } else {
        $$0$i$i$i$i = $617;
        while (1) {
         $619 = HEAP32[$$0$i$i$i$i >> 2] | 0;
         if (!$619) {
          $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
          break;
         } else $$0$i$i$i$i = $619;
        }
        $$01$i$i$i = $$0$i$i$i$i$lcssa;
       }
       if (($$01$i$i$i | 0) == ($571 | 0)) {
        label = 222;
        break;
       } else {
        $581 = $$01$i$i$i;
        $prefix19$0287 = 38552;
       }
      }
      if ((label | 0) == 20) {
       $86 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body60$index15Z2D = tempRet0;
       $eh$lpad$body60$indexZ2D = $86;
       break L11;
      } else if ((label | 0) == 221) {
       $626 = ___cxa_find_matching_catch() | 0;
       $627 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
       $$9 = $626;
       $$910 = $627;
       HEAP32[$ss >> 2] = 732;
       HEAP32[$32 >> 2] = 772;
       HEAP32[$33 >> 2] = 752;
       HEAP32[$34 >> 2] = 1064;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
       __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
       ___resumeException($$9 | 0);
      } else if ((label | 0) == 222) break;
     } while (0);
     __THREW__ = 0;
     $628 = invoke_iiii(25, $33 | 0, 36408, 2) | 0;
     $629 = __THREW__;
     __THREW__ = 0;
     if ($629 & 1) {
      label = 24;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(54, $21 | 0, HEAP32[$567 + 60 >> 2] | 0);
     $633 = __THREW__;
     __THREW__ = 0;
     if ($633 & 1) {
      label = 24;
      break L11;
     }
     $635 = HEAP8[$21 >> 0] | 0;
     if (!($635 & 1)) {
      $645 = $21 + 1 | 0;
      $646 = ($635 & 255) >>> 1;
     } else {
      $645 = HEAP32[$21 + 8 >> 2] | 0;
      $646 = HEAP32[$21 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $628 | 0, $645 | 0, $646 | 0) | 0;
     $647 = __THREW__;
     __THREW__ = 0;
     if (!($647 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
      break;
     }
     $649 = ___cxa_find_matching_catch() | 0;
     $650 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
     $$9 = $649;
     $$910 = $650;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$32 >> 2] = 772;
     HEAP32[$33 >> 2] = 752;
     HEAP32[$34 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $651 = ___dynamic_cast($ast_, 35776, 36440, 0) | 0;
    if ($651) {
     $655 = (HEAP8[$651 + 48 >> 0] | 0) != 0;
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, ($655 ? 50448 : 50480) | 0, ($655 ? 4 : 5) | 0) | 0;
     $658 = __THREW__;
     __THREW__ = 0;
     if ($658 & 1) {
      label = 24;
      break L11;
     } else break;
    }
    $660 = ___dynamic_cast($ast_, 35776, 36472, 0) | 0;
    if ($660) {
     __THREW__ = 0;
     invoke_iid(1, $33 | 0, +(+HEAPF64[$660 + 48 >> 3])) | 0;
     $664 = __THREW__;
     __THREW__ = 0;
     if ($664 & 1) {
      label = 24;
      break L11;
     } else break;
    }
    $666 = ___dynamic_cast($ast_, 35776, 35912, 0) | 0;
    if ($666) {
     __THREW__ = 0;
     invoke_vii(55, $22 | 0, $666 + 48 | 0);
     $669 = __THREW__;
     __THREW__ = 0;
     if ($669 & 1) {
      label = 24;
      break L11;
     }
     $671 = HEAP8[$22 >> 0] | 0;
     if (!($671 & 1)) {
      $681 = $22 + 1 | 0;
      $682 = ($671 & 255) >>> 1;
     } else {
      $681 = HEAP32[$22 + 8 >> 2] | 0;
      $682 = HEAP32[$22 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, $681 | 0, $682 | 0) | 0;
     $683 = __THREW__;
     __THREW__ = 0;
     if (!($683 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
      break;
     }
     $685 = ___cxa_find_matching_catch() | 0;
     $686 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
     $$9 = $685;
     $$910 = $686;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$32 >> 2] = 772;
     HEAP32[$33 >> 2] = 752;
     HEAP32[$34 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    if (___dynamic_cast($ast_, 35776, 36504, 0) | 0) {
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 39280, 4) | 0;
     $689 = __THREW__;
     __THREW__ = 0;
     if ($689 & 1) {
      label = 24;
      break L11;
     } else break;
    }
    $691 = ___dynamic_cast($ast_, 35776, 36528, 0) | 0;
    if ($691) {
     if (!(HEAP32[$691 + 56 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_iiii(25, $33 | 0, 39544, 3) | 0;
      $696 = __THREW__;
      __THREW__ = 0;
      if ($696 & 1) {
       label = 24;
       break L11;
      } else break;
     }
     $698 = $691 + 48 | 0;
     $700 = HEAP32[$691 + 52 >> 2] | 0;
     do if (($700 | 0) != ($698 | 0)) {
      $702 = $23 + 1 | 0;
      $703 = $24 + 1 | 0;
      $704 = $24 + 8 | 0;
      $705 = $24 + 4 | 0;
      $706 = $23 + 8 | 0;
      $707 = $23 + 4 | 0;
      $712 = $700;
      $prefix27$0286 = 39560;
      while (1) {
       $708 = _strlen($prefix27$0286 | 0) | 0;
       __THREW__ = 0;
       invoke_iiii(25, $33 | 0, $prefix27$0286 | 0, $708 | 0) | 0;
       $709 = __THREW__;
       __THREW__ = 0;
       if ($709 & 1) {
        label = 19;
        break;
       }
       $711 = $712 + 12 | 0;
       $713 = HEAP32[$711 >> 2] | 0;
       if (!$713) $colons$0 = 42232; else if (($713 | 0) == 1) $colons$0 = 36544; else if (($713 | 0) == 2) $colons$0 = 36552; else {
        __THREW__ = 0;
        $714 = invoke_iiii(25, 45984, 36560, 35) | 0;
        $715 = __THREW__;
        __THREW__ = 0;
        if ($715 & 1) {
         label = 19;
         break;
        }
        __THREW__ = 0;
        $718 = invoke_iii(24, $714 | 0, HEAP32[$711 >> 2] | 0) | 0;
        $719 = __THREW__;
        __THREW__ = 0;
        if ($719 & 1) {
         label = 19;
         break;
        }
        __THREW__ = 0;
        invoke_vii(47, $0 | 0, $718 + (HEAP32[(HEAP32[$718 >> 2] | 0) + -12 >> 2] | 0) | 0);
        $725 = __THREW__;
        __THREW__ = 0;
        if ($725 & 1) {
         label = 19;
         break;
        }
        __THREW__ = 0;
        $727 = invoke_iii(22, $0 | 0, 50208) | 0;
        $728 = __THREW__;
        __THREW__ = 0;
        if ($728 & 1) {
         label = 259;
         break;
        }
        __THREW__ = 0;
        $733 = invoke_iii(HEAP32[(HEAP32[$727 >> 2] | 0) + 28 >> 2] | 0, $727 | 0, 10) | 0;
        $734 = __THREW__;
        __THREW__ = 0;
        if ($734 & 1) {
         label = 259;
         break;
        }
        __ZNSt3__16localeD2Ev($0);
        __THREW__ = 0;
        invoke_iii(25, $718 | 0, $733 | 0) | 0;
        $738 = __THREW__;
        __THREW__ = 0;
        if ($738 & 1) {
         label = 19;
         break;
        }
        __THREW__ = 0;
        invoke_ii(68, $718 | 0) | 0;
        $740 = __THREW__;
        __THREW__ = 0;
        if ($740 & 1) {
         label = 19;
         break;
        } else $colons$0 = 0;
       }
       __THREW__ = 0;
       $742 = invoke_iiii(25, $33 | 0, 39464, 1) | 0;
       $743 = __THREW__;
       __THREW__ = 0;
       if ($743 & 1) {
        label = 19;
        break;
       }
       __THREW__ = 0;
       invoke_vii(54, $23 | 0, HEAP32[$712 + 8 >> 2] | 0);
       $747 = __THREW__;
       __THREW__ = 0;
       if ($747 & 1) {
        label = 19;
        break;
       }
       $749 = HEAP8[$23 >> 0] | 0;
       if (!($749 & 1)) {
        $756 = $702;
        $757 = ($749 & 255) >>> 1;
       } else {
        $756 = HEAP32[$706 >> 2] | 0;
        $757 = HEAP32[$707 >> 2] | 0;
       }
       __THREW__ = 0;
       $758 = invoke_iiii(25, $742 | 0, $756 | 0, $757 | 0) | 0;
       $759 = __THREW__;
       __THREW__ = 0;
       if ($759 & 1) {
        label = 277;
        break;
       }
       __THREW__ = 0;
       $761 = invoke_iiii(25, $758 | 0, 39488, 1) | 0;
       $762 = __THREW__;
       __THREW__ = 0;
       if ($762 & 1) {
        label = 277;
        break;
       }
       $764 = _strlen($colons$0 | 0) | 0;
       __THREW__ = 0;
       $765 = invoke_iiii(25, $761 | 0, $colons$0 | 0, $764 | 0) | 0;
       $766 = __THREW__;
       __THREW__ = 0;
       if ($766 & 1) {
        label = 277;
        break;
       }
       __THREW__ = 0;
       $768 = invoke_iiii(25, $765 | 0, 42240, 1) | 0;
       $769 = __THREW__;
       __THREW__ = 0;
       if ($769 & 1) {
        label = 277;
        break;
       }
       __THREW__ = 0;
       invoke_vii(54, $24 | 0, HEAP32[$712 + 16 >> 2] | 0);
       $773 = __THREW__;
       __THREW__ = 0;
       if ($773 & 1) {
        label = 277;
        break;
       }
       $775 = HEAP8[$24 >> 0] | 0;
       if (!($775 & 1)) {
        $782 = $703;
        $783 = ($775 & 255) >>> 1;
       } else {
        $782 = HEAP32[$704 >> 2] | 0;
        $783 = HEAP32[$705 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $768 | 0, $782 | 0, $783 | 0) | 0;
       $784 = __THREW__;
       __THREW__ = 0;
       if ($784 & 1) {
        label = 278;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
       $712 = HEAP32[$712 + 4 >> 2] | 0;
       if (($712 | 0) == ($698 | 0)) {
        label = 280;
        break;
       } else $prefix27$0286 = 38552;
      }
      if ((label | 0) == 19) {
       $84 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body60$index15Z2D = tempRet0;
       $eh$lpad$body60$indexZ2D = $84;
       break L11;
      } else if ((label | 0) == 259) {
       $736 = ___cxa_find_matching_catch() | 0;
       $737 = tempRet0;
       __ZNSt3__16localeD2Ev($0);
       $eh$lpad$body60$index15Z2D = $737;
       $eh$lpad$body60$indexZ2D = $736;
       break L11;
      } else if ((label | 0) == 277) {
       $789 = ___cxa_find_matching_catch() | 0;
       $$5 = $789;
       $$56 = tempRet0;
      } else if ((label | 0) == 278) {
       $791 = ___cxa_find_matching_catch() | 0;
       $792 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
       $$5 = $791;
       $$56 = $792;
      } else if ((label | 0) == 280) break;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
      $$9 = $$5;
      $$910 = $$56;
      HEAP32[$ss >> 2] = 732;
      HEAP32[$32 >> 2] = 772;
      HEAP32[$33 >> 2] = 752;
      HEAP32[$34 >> 2] = 1064;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } while (0);
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 39584, 1) | 0;
     $793 = __THREW__;
     __THREW__ = 0;
     if ($793 & 1) {
      label = 24;
      break L11;
     } else break;
    }
    $795 = ___dynamic_cast($ast_, 35776, 36624, 0) | 0;
    if ($795) {
     __THREW__ = 0;
     $797 = invoke_iiii(25, $33 | 0, 36640, 2) | 0;
     $798 = __THREW__;
     __THREW__ = 0;
     if ($798 & 1) {
      label = 24;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(54, $25 | 0, HEAP32[$795 + 48 >> 2] | 0);
     $802 = __THREW__;
     __THREW__ = 0;
     if ($802 & 1) {
      label = 24;
      break L11;
     }
     $804 = HEAP8[$25 >> 0] | 0;
     if (!($804 & 1)) {
      $814 = $25 + 1 | 0;
      $815 = ($804 & 255) >>> 1;
     } else {
      $814 = HEAP32[$25 + 8 >> 2] | 0;
      $815 = HEAP32[$25 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $816 = invoke_iiii(25, $797 | 0, $814 | 0, $815 | 0) | 0;
     $817 = __THREW__;
     __THREW__ = 0;
     do if ($817 & 1) label = 307; else {
      __THREW__ = 0;
      $819 = invoke_iiii(25, $816 | 0, 36648, 3) | 0;
      $820 = __THREW__;
      __THREW__ = 0;
      if ($820 & 1) {
       label = 307;
       break;
      }
      __THREW__ = 0;
      invoke_vii(54, $26 | 0, HEAP32[$795 + 52 >> 2] | 0);
      $824 = __THREW__;
      __THREW__ = 0;
      if ($824 & 1) {
       label = 307;
       break;
      }
      $826 = HEAP8[$26 >> 0] | 0;
      if (!($826 & 1)) {
       $836 = $26 + 1 | 0;
       $837 = ($826 & 255) >>> 1;
      } else {
       $836 = HEAP32[$26 + 8 >> 2] | 0;
       $837 = HEAP32[$26 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $819 | 0, $836 | 0, $837 | 0) | 0;
      $838 = __THREW__;
      __THREW__ = 0;
      if ($838 & 1) {
       $885 = ___cxa_find_matching_catch() | 0;
       $886 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
       $$6 = $885;
       $$67 = $886;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
      __THREW__ = 0;
      $840 = invoke_iiii(25, $33 | 0, 36656, 5) | 0;
      $841 = __THREW__;
      __THREW__ = 0;
      if ($841 & 1) {
       label = 24;
       break L11;
      }
      $844 = HEAP32[$795 + 56 >> 2] | 0;
      $845 = HEAP8[$844 >> 0] | 0;
      if (!($845 & 1)) {
       $855 = $844 + 1 | 0;
       $856 = ($845 & 255) >>> 1;
      } else {
       $855 = HEAP32[$844 + 8 >> 2] | 0;
       $856 = HEAP32[$844 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $857 = invoke_iiii(25, $840 | 0, $855 | 0, $856 | 0) | 0;
      $858 = __THREW__;
      __THREW__ = 0;
      if ($858 & 1) {
       label = 24;
       break L11;
      }
      __THREW__ = 0;
      $860 = invoke_iiii(25, $857 | 0, 36664, 4) | 0;
      $861 = __THREW__;
      __THREW__ = 0;
      if ($861 & 1) {
       label = 24;
       break L11;
      }
      __THREW__ = 0;
      invoke_vii(54, $27 | 0, HEAP32[$795 + 60 >> 2] | 0);
      $865 = __THREW__;
      __THREW__ = 0;
      if ($865 & 1) {
       label = 24;
       break L11;
      }
      $867 = HEAP8[$27 >> 0] | 0;
      if (!($867 & 1)) {
       $877 = $27 + 1 | 0;
       $878 = ($867 & 255) >>> 1;
      } else {
       $877 = HEAP32[$27 + 8 >> 2] | 0;
       $878 = HEAP32[$27 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $860 | 0, $877 | 0, $878 | 0) | 0;
      $879 = __THREW__;
      __THREW__ = 0;
      if (!($879 & 1)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
       __THREW__ = 0;
       invoke_iiii(25, $33 | 0, 39584, 1) | 0;
       $881 = __THREW__;
       __THREW__ = 0;
       if ($881 & 1) {
        label = 24;
        break L11;
       } else break L13;
      }
      $887 = ___cxa_find_matching_catch() | 0;
      $888 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
      $$9 = $887;
      $$910 = $888;
      HEAP32[$ss >> 2] = 732;
      HEAP32[$32 >> 2] = 772;
      HEAP32[$33 >> 2] = 752;
      HEAP32[$34 >> 2] = 1064;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } while (0);
     if ((label | 0) == 307) {
      $883 = ___cxa_find_matching_catch() | 0;
      $$6 = $883;
      $$67 = tempRet0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
     $$9 = $$6;
     $$910 = $$67;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$32 >> 2] = 772;
     HEAP32[$33 >> 2] = 752;
     HEAP32[$34 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    if (___dynamic_cast($ast_, 35776, 36680, 0) | 0) {
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 36696, 4) | 0;
     $891 = __THREW__;
     __THREW__ = 0;
     if ($891 & 1) {
      label = 24;
      break L11;
     } else break;
    }
    if (___dynamic_cast($ast_, 35776, 36712, 0) | 0) {
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 36728, 5) | 0;
     $894 = __THREW__;
     __THREW__ = 0;
     if ($894 & 1) {
      label = 24;
      break L11;
     } else break;
    }
    $896 = ___dynamic_cast($ast_, 35776, 36744, 0) | 0;
    if (!$896) {
     $974 = ___dynamic_cast($ast_, 35776, 36768, 0) | 0;
     if (!$974) {
      label = 349;
      break L11;
     }
     $977 = HEAP32[$974 + 48 >> 2] | 0;
     $978 = HEAP8[$977 >> 0] | 0;
     if (!($978 & 1)) {
      $988 = $977 + 1 | 0;
      $989 = ($978 & 255) >>> 1;
     } else {
      $988 = HEAP32[$977 + 8 >> 2] | 0;
      $989 = HEAP32[$977 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, $988 | 0, $989 | 0) | 0;
     $990 = __THREW__;
     __THREW__ = 0;
     if ($990 & 1) {
      label = 24;
      break L11;
     } else break;
    }
    $899 = HEAP32[$896 + 48 >> 2] | 0;
    if (($899 | 0) == 2) {
     __THREW__ = 0;
     invoke_viii(3, $28 | 0, 41400, 1);
     $900 = __THREW__;
     __THREW__ = 0;
     if ($900 & 1) {
      label = 24;
      break L11;
     }
    } else if (($899 | 0) == 3) {
     __THREW__ = 0;
     invoke_viii(3, $28 | 0, 42248, 1);
     $902 = __THREW__;
     __THREW__ = 0;
     if ($902 & 1) {
      label = 24;
      break L11;
     }
    } else if (($899 | 0) == 1) {
     __THREW__ = 0;
     invoke_viii(3, $28 | 0, 41408, 1);
     $904 = __THREW__;
     __THREW__ = 0;
     if ($904 & 1) {
      label = 24;
      break L11;
     }
    } else if (!$899) {
     __THREW__ = 0;
     invoke_viii(3, $28 | 0, 41416, 1);
     $906 = __THREW__;
     __THREW__ = 0;
     if ($906 & 1) {
      label = 24;
      break L11;
     }
    } else {
     __THREW__ = 0;
     $908 = invoke_iiii(25, 45984, 41424, 45) | 0;
     $909 = __THREW__;
     __THREW__ = 0;
     if ($909 & 1) {
      label = 24;
      break L11;
     }
     __THREW__ = 0;
     $911 = invoke_iii(24, $908 | 0, $899 | 0) | 0;
     $912 = __THREW__;
     __THREW__ = 0;
     if ($912 & 1) {
      label = 24;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(47, $1 | 0, $911 + (HEAP32[(HEAP32[$911 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $918 = __THREW__;
     __THREW__ = 0;
     if ($918 & 1) {
      label = 24;
      break L11;
     }
     __THREW__ = 0;
     $920 = invoke_iii(22, $1 | 0, 50208) | 0;
     $921 = __THREW__;
     __THREW__ = 0;
     do if (!($921 & 1)) {
      __THREW__ = 0;
      $926 = invoke_iii(HEAP32[(HEAP32[$920 >> 2] | 0) + 28 >> 2] | 0, $920 | 0, 10) | 0;
      $927 = __THREW__;
      __THREW__ = 0;
      if ($927 & 1) break;
      __ZNSt3__16localeD2Ev($1);
      __THREW__ = 0;
      invoke_iii(25, $911 | 0, $926 | 0) | 0;
      $931 = __THREW__;
      __THREW__ = 0;
      if ($931 & 1) {
       label = 24;
       break L11;
      }
      __THREW__ = 0;
      invoke_ii(68, $911 | 0) | 0;
      $933 = __THREW__;
      __THREW__ = 0;
      if ($933 & 1) {
       label = 24;
       break L11;
      }
      __THREW__ = 0;
      invoke_v(3);
      $935 = __THREW__;
      __THREW__ = 0;
      if ($935 & 1) {
       label = 24;
       break L11;
      }
     } while (0);
     $929 = ___cxa_find_matching_catch() | 0;
     $930 = tempRet0;
     __ZNSt3__16localeD2Ev($1);
     $eh$lpad$body60$index15Z2D = $930;
     $eh$lpad$body60$indexZ2D = $929;
     break L11;
    }
    $937 = HEAP8[$28 >> 0] | 0;
    if (!($937 & 1)) {
     $947 = $28 + 1 | 0;
     $948 = ($937 & 255) >>> 1;
    } else {
     $947 = HEAP32[$28 + 8 >> 2] | 0;
     $948 = HEAP32[$28 + 4 >> 2] | 0;
    }
    __THREW__ = 0;
    $949 = invoke_iiii(25, $33 | 0, $947 | 0, $948 | 0) | 0;
    $950 = __THREW__;
    __THREW__ = 0;
    do if ($950 & 1) label = 341; else {
     __THREW__ = 0;
     invoke_vii(54, $29 | 0, HEAP32[$896 + 52 >> 2] | 0);
     $954 = __THREW__;
     __THREW__ = 0;
     if ($954 & 1) {
      label = 341;
      break;
     }
     $956 = HEAP8[$29 >> 0] | 0;
     if (!($956 & 1)) {
      $966 = $29 + 1 | 0;
      $967 = ($956 & 255) >>> 1;
     } else {
      $966 = HEAP32[$29 + 8 >> 2] | 0;
      $967 = HEAP32[$29 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $949 | 0, $966 | 0, $967 | 0) | 0;
     $968 = __THREW__;
     __THREW__ = 0;
     if ($968 & 1) {
      $972 = ___cxa_find_matching_catch() | 0;
      $973 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
      $$7 = $972;
      $$78 = $973;
      break;
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
      break L13;
     }
    } while (0);
    if ((label | 0) == 341) {
     $970 = ___cxa_find_matching_catch() | 0;
     $$7 = $970;
     $$78 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
    $$9 = $$7;
    $$910 = $$78;
    HEAP32[$ss >> 2] = 732;
    HEAP32[$32 >> 2] = 772;
    HEAP32[$33 >> 2] = 752;
    HEAP32[$34 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
    ___resumeException($$9 | 0);
   } else {
    __THREW__ = 0;
    invoke_vii(54, $5 | 0, HEAP32[$54 + 48 >> 2] | 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 24;
     break L11;
    }
    $60 = HEAP8[$5 >> 0] | 0;
    if (!($60 & 1)) {
     $70 = $5 + 1 | 0;
     $71 = ($60 & 255) >>> 1;
    } else {
     $70 = HEAP32[$5 + 8 >> 2] | 0;
     $71 = HEAP32[$5 + 4 >> 2] | 0;
    }
    __THREW__ = 0;
    invoke_iiii(25, $33 | 0, $70 | 0, $71 | 0) | 0;
    $72 = __THREW__;
    __THREW__ = 0;
    if ($72 & 1) {
     $96 = ___cxa_find_matching_catch() | 0;
     $97 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$9 = $96;
     $$910 = $97;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$32 >> 2] = 772;
     HEAP32[$33 >> 2] = 752;
     HEAP32[$34 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $76 = HEAP32[$54 + 56 >> 2] | 0;
    $77 = HEAP32[$54 + 52 >> 2] | 0;
    if (($76 | 0) == ($77 | 0)) {
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 36040, 2) | 0;
     $82 = __THREW__;
     __THREW__ = 0;
     if ($82 & 1) {
      label = 24;
      break L11;
     } else break;
    }
    $79 = $6 + 1 | 0;
    $80 = $6 + 8 | 0;
    $81 = $6 + 4 | 0;
    $99 = $77;
    $prefix$0299 = 42256;
    while (1) {
     $98 = HEAP32[$99 >> 2] | 0;
     $100 = _strlen($prefix$0299 | 0) | 0;
     __THREW__ = 0;
     $101 = invoke_iiii(25, $33 | 0, $prefix$0299 | 0, $100 | 0) | 0;
     $102 = __THREW__;
     __THREW__ = 0;
     if ($102 & 1) {
      label = 23;
      break;
     }
     __THREW__ = 0;
     invoke_vii(54, $6 | 0, $98 | 0);
     $104 = __THREW__;
     __THREW__ = 0;
     if ($104 & 1) {
      label = 23;
      break;
     }
     $106 = HEAP8[$6 >> 0] | 0;
     if (!($106 & 1)) {
      $113 = $79;
      $114 = ($106 & 255) >>> 1;
     } else {
      $113 = HEAP32[$80 >> 2] | 0;
      $114 = HEAP32[$81 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $101 | 0, $113 | 0, $114 | 0) | 0;
     $115 = __THREW__;
     __THREW__ = 0;
     if ($115 & 1) {
      label = 34;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $99 = $99 + 4 | 0;
     if (($99 | 0) == ($76 | 0)) {
      label = 35;
      break;
     } else $prefix$0299 = 38552;
    }
    if ((label | 0) == 23) {
     $92 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body60$index15Z2D = tempRet0;
     $eh$lpad$body60$indexZ2D = $92;
     break L11;
    } else if ((label | 0) == 34) {
     $119 = ___cxa_find_matching_catch() | 0;
     $120 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $$9 = $119;
     $$910 = $120;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$32 >> 2] = 772;
     HEAP32[$33 >> 2] = 752;
     HEAP32[$34 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    } else if ((label | 0) == 35) {
     __THREW__ = 0;
     invoke_iiii(25, $33 | 0, 42272, 1) | 0;
     $121 = __THREW__;
     __THREW__ = 0;
     if ($121 & 1) {
      label = 24;
      break L11;
     } else break;
    }
   } while (0);
   __THREW__ = 0;
   invoke_vii(43, $31 | 0, $34 | 0);
   $1021 = __THREW__;
   __THREW__ = 0;
   if ($1021 & 1) label = 24; else {
    __THREW__ = 0;
    $1023 = invoke_iiii(30, $31 | 0, 0, 42256) | 0;
    $1024 = __THREW__;
    __THREW__ = 0;
    do if ($1024 & 1) {
     $1029 = ___cxa_find_matching_catch() | 0;
     $$8 = $1029;
     $$89 = tempRet0;
    } else {
     HEAP32[$30 + 0 >> 2] = HEAP32[$1023 + 0 >> 2];
     HEAP32[$30 + 4 >> 2] = HEAP32[$1023 + 4 >> 2];
     HEAP32[$30 + 8 >> 2] = HEAP32[$1023 + 8 >> 2];
     HEAP32[$1023 + 0 >> 2] = 0;
     HEAP32[$1023 + 4 >> 2] = 0;
     HEAP32[$1023 + 8 >> 2] = 0;
     __THREW__ = 0;
     $1026 = invoke_iii(27, $30 | 0, 42272) | 0;
     $1027 = __THREW__;
     __THREW__ = 0;
     if ($1027 & 1) {
      $1031 = ___cxa_find_matching_catch() | 0;
      $1032 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
      $$8 = $1031;
      $$89 = $1032;
      break;
     } else {
      HEAP32[$agg$result + 0 >> 2] = HEAP32[$1026 + 0 >> 2];
      HEAP32[$agg$result + 4 >> 2] = HEAP32[$1026 + 4 >> 2];
      HEAP32[$agg$result + 8 >> 2] = HEAP32[$1026 + 8 >> 2];
      HEAP32[$1026 + 0 >> 2] = 0;
      HEAP32[$1026 + 4 >> 2] = 0;
      HEAP32[$1026 + 8 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
      HEAP32[$ss >> 2] = 732;
      HEAP32[$32 >> 2] = 772;
      HEAP32[$33 >> 2] = 752;
      HEAP32[$34 >> 2] = 1064;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      STACKTOP = sp;
      return;
     }
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
    $$9 = $$8;
    $$910 = $$89;
    HEAP32[$ss >> 2] = 732;
    HEAP32[$32 >> 2] = 772;
    HEAP32[$33 >> 2] = 752;
    HEAP32[$34 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
    ___resumeException($$9 | 0);
   }
  } while (0);
  do if ((label | 0) == 349) {
   __THREW__ = 0;
   $992 = invoke_iiii(25, 45984, 39728, 29) | 0;
   $993 = __THREW__;
   __THREW__ = 0;
   if ($993 & 1) label = 24; else {
    __THREW__ = 0;
    $995 = invoke_iii(26, $992 | 0, $ast_ | 0) | 0;
    $996 = __THREW__;
    __THREW__ = 0;
    if ($996 & 1) label = 24; else {
     __THREW__ = 0;
     invoke_vii(47, $2 | 0, $995 + (HEAP32[(HEAP32[$995 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $1002 = __THREW__;
     __THREW__ = 0;
     if ($1002 & 1) label = 24; else {
      __THREW__ = 0;
      $1004 = invoke_iii(22, $2 | 0, 50208) | 0;
      $1005 = __THREW__;
      __THREW__ = 0;
      if (!($1005 & 1)) {
       __THREW__ = 0;
       $1010 = invoke_iii(HEAP32[(HEAP32[$1004 >> 2] | 0) + 28 >> 2] | 0, $1004 | 0, 10) | 0;
       $1011 = __THREW__;
       __THREW__ = 0;
       if (!($1011 & 1)) {
        __ZNSt3__16localeD2Ev($2);
        __THREW__ = 0;
        invoke_iii(25, $995 | 0, $1010 | 0) | 0;
        $1015 = __THREW__;
        __THREW__ = 0;
        if ($1015 & 1) {
         label = 24;
         break;
        }
        __THREW__ = 0;
        invoke_ii(68, $995 | 0) | 0;
        $1017 = __THREW__;
        __THREW__ = 0;
        if ($1017 & 1) {
         label = 24;
         break;
        }
        __THREW__ = 0;
        invoke_v(3);
        $1019 = __THREW__;
        __THREW__ = 0;
        if ($1019 & 1) {
         label = 24;
         break;
        }
       }
      }
      $1013 = ___cxa_find_matching_catch() | 0;
      $1014 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $eh$lpad$body60$index15Z2D = $1014;
      $eh$lpad$body60$indexZ2D = $1013;
     }
    }
   }
  } while (0);
  if ((label | 0) == 24) {
   $94 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body60$index15Z2D = tempRet0;
   $eh$lpad$body60$indexZ2D = $94;
  }
  $$9 = $eh$lpad$body60$indexZ2D;
  $$910 = $eh$lpad$body60$index15Z2D;
  HEAP32[$ss >> 2] = 732;
  HEAP32[$32 >> 2] = 772;
  HEAP32[$33 >> 2] = 752;
  HEAP32[$34 >> 2] = 1064;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
  ___resumeException($$9 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
 ___resumeException($$01$i | 0);
}

function _malloc($bytes) {
 $bytes = $bytes | 0;
 var $$lcssa = 0, $$lcssa146 = 0, $$lcssa148 = 0, $$lcssa151 = 0, $$lcssa152 = 0, $$lcssa153 = 0, $$lcssa154 = 0, $$lcssa156 = 0, $$lcssa159 = 0, $$lcssa161 = 0, $$lcssa163 = 0, $$lcssa165 = 0, $$lcssa167 = 0, $$lcssa169 = 0, $$lcssa172 = 0, $$lcssa174 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0, $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi59$i$iZ2D = 0, $$pre$phiZ2D = 0, $$rsize$3$i = 0, $$rsize$3$i$lcssa = 0, $$sum$i19$i = 0, $$sum2$i21$i = 0, $$sum3132$i$i = 0, $$sum67$i$i = 0, $100 = 0, $1000 = 0, $1002 = 0, $1005 = 0, $1010 = 0, $1016 = 0, $1019 = 0, $1020 = 0, $1027 = 0, $1036 = 0, $1039 = 0, $1044 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $106 = 0, $1060 = 0, $1062 = 0, $1063 = 0, $110 = 0, $112 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $13 = 0, $132 = 0, $138 = 0, $14 = 0, $141 = 0, $144 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $151 = 0, $154 = 0, $156 = 0, $159 = 0, $16 = 0, $161 = 0, $164 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $18 = 0, $182 = 0, $183 = 0, $192 = 0, $197 = 0, $201 = 0, $207 = 0, $214 = 0, $217 = 0, $225 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $236 = 0, $237 = 0, $245 = 0, $246 = 0, $247 = 0, $249 = 0, $25 = 0, $250 = 0, $255 = 0, $256 = 0, $259 = 0, $261 = 0, $264 = 0, $269 = 0, $276 = 0, $28 = 0, $282 = 0, $285 = 0, $286 = 0, $290 = 0, $300 = 0, $303 = 0, $307 = 0, $309 = 0, $31 = 0, $310 = 0, $312 = 0, $314 = 0, $316 = 0, $318 = 0, $320 = 0, $322 = 0, $324 = 0, $334 = 0, $335 = 0, $337 = 0, $34 = 0, $340 = 0, $346 = 0, $348 = 0, $351 = 0, $353 = 0, $356 = 0, $358 = 0, $361 = 0, $364 = 0, $365 = 0, $367 = 0, $368 = 0, $370 = 0, $371 = 0, $373 = 0, $374 = 0, $379 = 0, $38 = 0, $380 = 0, $389 = 0, $394 = 0, $398 = 0, $4 = 0, $404 = 0, $41 = 0, $411 = 0, $414 = 0, $422 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $431 = 0, $432 = 0, $438 = 0, $44 = 0, $443 = 0, $444 = 0, $447 = 0, $449 = 0, $452 = 0, $457 = 0, $46 = 0, $463 = 0, $467 = 0, $468 = 0, $47 = 0, $475 = 0, $484 = 0, $487 = 0, $49 = 0, $492 = 0, $499 = 0, $5 = 0, $500 = 0, $501 = 0, $509 = 0, $51 = 0, $511 = 0, $512 = 0, $522 = 0, $526 = 0, $528 = 0, $529 = 0, $53 = 0, $538 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $552 = 0, $554 = 0, $555 = 0, $561 = 0, $563 = 0, $565 = 0, $57 = 0, $572 = 0, $574 = 0, $575 = 0, $576 = 0, $584 = 0, $585 = 0, $588 = 0, $59 = 0, $592 = 0, $596 = 0, $598 = 0, $6 = 0, $604 = 0, $608 = 0, $61 = 0, $612 = 0, $621 = 0, $622 = 0, $628 = 0, $630 = 0, $632 = 0, $635 = 0, $637 = 0, $64 = 0, $641 = 0, $642 = 0, $648 = 0, $65 = 0, $654 = 0, $655 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $67 = 0, $676 = 0, $678 = 0, $68 = 0, $684 = 0, $685 = 0, $69 = 0, $690 = 0, $692 = 0, $7 = 0, $70 = 0, $702 = 0, $706 = 0, $712 = 0, $714 = 0, $719 = 0, $720 = 0, $724 = 0, $725 = 0, $730 = 0, $736 = 0, $741 = 0, $744 = 0, $745 = 0, $748 = 0, $750 = 0, $752 = 0, $755 = 0, $766 = 0, $77 = 0, $771 = 0, $773 = 0, $776 = 0, $778 = 0, $781 = 0, $784 = 0, $785 = 0, $787 = 0, $788 = 0, $790 = 0, $791 = 0, $793 = 0, $794 = 0, $799 = 0, $80 = 0, $800 = 0, $809 = 0, $81 = 0, $814 = 0, $818 = 0, $824 = 0, $832 = 0, $838 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $847 = 0, $848 = 0, $854 = 0, $859 = 0, $860 = 0, $863 = 0, $865 = 0, $868 = 0, $873 = 0, $879 = 0, $88 = 0, $883 = 0, $884 = 0, $891 = 0, $90 = 0, $900 = 0, $903 = 0, $908 = 0, $91 = 0, $915 = 0, $916 = 0, $917 = 0, $92 = 0, $925 = 0, $928 = 0, $929 = 0, $93 = 0, $934 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $943 = 0, $944 = 0, $947 = 0, $95 = 0, $953 = 0, $954 = 0, $959 = 0, $960 = 0, $964 = 0, $970 = 0, $975 = 0, $977 = 0, $978 = 0, $979 = 0, $980 = 0, $984 = 0, $985 = 0, $99 = 0, $991 = 0, $996 = 0, $997 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$08$i$i = 0, $K8$053$i$i = 0, $R$0$i = 0, $R$0$i$be = 0, $R$0$i$i = 0, $R$0$i$i$be = 0, $R$0$i$i$lcssa = 0, $R$0$i$i$ph = 0, $R$0$i$lcssa = 0, $R$0$i$ph = 0, $R$0$i18 = 0, $R$0$i18$be = 0, $R$0$i18$lcssa = 0, $R$0$i18$ph = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$be = 0, $RP$0$i$i = 0, $RP$0$i$i$be = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$i$ph = 0, $RP$0$i$lcssa = 0, $RP$0$i$ph = 0, $RP$0$i17 = 0, $RP$0$i17$be = 0, $RP$0$i17$lcssa = 0, $RP$0$i17$ph = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$052$i$i = 0, $T$052$i$i$lcssa = 0, $T$07$i$i = 0, $T$07$i$i$lcssa = 0, $br$0$ph$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0, $oldfirst$0$i$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0, $rsize$1$i$lcssa = 0, $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rsize$331$i$ph = 0, $rst$0$i = 0, $rst$1$i = 0, $rst$1$i$lcssa = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$082$i = 0, $sp$082$i$lcssa = 0, $sp$181$i = 0, $sp$181$i$lcssa = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$0$i14$lcssa = 0, $t$1$i = 0, $t$2$ph$i = 0, $t$2$v$3$i = 0, $t$2$v$3$i$lcssa = 0, $t$230$i = 0, $t$230$i$be = 0, $t$230$i$ph = 0, $tbase$253$i = 0, $tsize$0313843$i = 0, $tsize$1$i = 0, $tsize$252$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$1$i$lcssa = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$332$i = 0, $v$332$i$ph = 0, label = 0, $964$looptemp = 0;
 do if ($bytes >>> 0 < 245) {
  if ($bytes >>> 0 < 11) $5 = 16; else $5 = $bytes + 11 & -8;
  $4 = $5 >>> 3;
  $6 = HEAP32[11076] | 0;
  $7 = $6 >>> $4;
  if ($7 & 3) {
   $12 = ($7 & 1 ^ 1) + $4 | 0;
   $13 = $12 << 1;
   $14 = 44344 + ($13 << 2) | 0;
   $15 = 44344 + ($13 + 2 << 2) | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   $17 = $16 + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   do if (($14 | 0) == ($18 | 0)) HEAP32[11076] = $6 & ~(1 << $12); else {
    if ($18 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
    $25 = $18 + 12 | 0;
    if ((HEAP32[$25 >> 2] | 0) == ($16 | 0)) {
     HEAP32[$25 >> 2] = $14;
     HEAP32[$15 >> 2] = $18;
     break;
    } else _abort();
   } while (0);
   $28 = $12 << 3;
   HEAP32[$16 + 4 >> 2] = $28 | 3;
   $31 = $16 + ($28 | 4) | 0;
   HEAP32[$31 >> 2] = HEAP32[$31 >> 2] | 1;
   $mem$0 = $17;
   return $mem$0 | 0;
  }
  $34 = HEAP32[11078] | 0;
  if ($5 >>> 0 > $34 >>> 0) {
   if ($7) {
    $38 = 2 << $4;
    $41 = $7 << $4 & ($38 | 0 - $38);
    $44 = ($41 & 0 - $41) + -1 | 0;
    $46 = $44 >>> 12 & 16;
    $47 = $44 >>> $46;
    $49 = $47 >>> 5 & 8;
    $51 = $47 >>> $49;
    $53 = $51 >>> 2 & 4;
    $55 = $51 >>> $53;
    $57 = $55 >>> 1 & 2;
    $59 = $55 >>> $57;
    $61 = $59 >>> 1 & 1;
    $64 = ($49 | $46 | $53 | $57 | $61) + ($59 >>> $61) | 0;
    $65 = $64 << 1;
    $66 = 44344 + ($65 << 2) | 0;
    $67 = 44344 + ($65 + 2 << 2) | 0;
    $68 = HEAP32[$67 >> 2] | 0;
    $69 = $68 + 8 | 0;
    $70 = HEAP32[$69 >> 2] | 0;
    do if (($66 | 0) == ($70 | 0)) {
     HEAP32[11076] = $6 & ~(1 << $64);
     $88 = $34;
    } else {
     if ($70 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
     $77 = $70 + 12 | 0;
     if ((HEAP32[$77 >> 2] | 0) == ($68 | 0)) {
      HEAP32[$77 >> 2] = $66;
      HEAP32[$67 >> 2] = $70;
      $88 = HEAP32[11078] | 0;
      break;
     } else _abort();
    } while (0);
    $80 = $64 << 3;
    $81 = $80 - $5 | 0;
    HEAP32[$68 + 4 >> 2] = $5 | 3;
    $84 = $68 + $5 | 0;
    HEAP32[$68 + ($5 | 4) >> 2] = $81 | 1;
    HEAP32[$68 + $80 >> 2] = $81;
    if ($88) {
     $90 = HEAP32[11081] | 0;
     $91 = $88 >>> 3;
     $92 = $91 << 1;
     $93 = 44344 + ($92 << 2) | 0;
     $94 = HEAP32[11076] | 0;
     $95 = 1 << $91;
     if (!($94 & $95)) {
      HEAP32[11076] = $94 | $95;
      $$pre$phiZ2D = 44344 + ($92 + 2 << 2) | 0;
      $F4$0 = $93;
     } else {
      $99 = 44344 + ($92 + 2 << 2) | 0;
      $100 = HEAP32[$99 >> 2] | 0;
      if ($100 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
       $$pre$phiZ2D = $99;
       $F4$0 = $100;
      }
     }
     HEAP32[$$pre$phiZ2D >> 2] = $90;
     HEAP32[$F4$0 + 12 >> 2] = $90;
     HEAP32[$90 + 8 >> 2] = $F4$0;
     HEAP32[$90 + 12 >> 2] = $93;
    }
    HEAP32[11078] = $81;
    HEAP32[11081] = $84;
    $mem$0 = $69;
    return $mem$0 | 0;
   }
   $106 = HEAP32[11077] | 0;
   if (!$106) $nb$0 = $5; else {
    $110 = ($106 & 0 - $106) + -1 | 0;
    $112 = $110 >>> 12 & 16;
    $113 = $110 >>> $112;
    $115 = $113 >>> 5 & 8;
    $117 = $113 >>> $115;
    $119 = $117 >>> 2 & 4;
    $121 = $117 >>> $119;
    $123 = $121 >>> 1 & 2;
    $125 = $121 >>> $123;
    $127 = $125 >>> 1 & 1;
    $132 = HEAP32[44608 + (($115 | $112 | $119 | $123 | $127) + ($125 >>> $127) << 2) >> 2] | 0;
    $rsize$0$i = (HEAP32[$132 + 4 >> 2] & -8) - $5 | 0;
    $t$0$i = $132;
    $v$0$i = $132;
    while (1) {
     $138 = HEAP32[$t$0$i + 16 >> 2] | 0;
     if (!$138) {
      $141 = HEAP32[$t$0$i + 20 >> 2] | 0;
      if (!$141) {
       $rsize$0$i$lcssa = $rsize$0$i;
       $v$0$i$lcssa = $v$0$i;
       break;
      } else $144 = $141;
     } else $144 = $138;
     $147 = (HEAP32[$144 + 4 >> 2] & -8) - $5 | 0;
     $148 = $147 >>> 0 < $rsize$0$i >>> 0;
     $rsize$0$i = $148 ? $147 : $rsize$0$i;
     $t$0$i = $144;
     $v$0$i = $148 ? $144 : $v$0$i;
    }
    $149 = HEAP32[11080] | 0;
    if ($v$0$i$lcssa >>> 0 < $149 >>> 0) _abort();
    $151 = $v$0$i$lcssa + $5 | 0;
    if ($v$0$i$lcssa >>> 0 >= $151 >>> 0) _abort();
    $154 = HEAP32[$v$0$i$lcssa + 24 >> 2] | 0;
    $156 = HEAP32[$v$0$i$lcssa + 12 >> 2] | 0;
    do if (($156 | 0) == ($v$0$i$lcssa | 0)) {
     $167 = $v$0$i$lcssa + 20 | 0;
     $168 = HEAP32[$167 >> 2] | 0;
     if (!$168) {
      $170 = $v$0$i$lcssa + 16 | 0;
      $171 = HEAP32[$170 >> 2] | 0;
      if (!$171) {
       $R$1$i = 0;
       break;
      } else {
       $R$0$i$ph = $171;
       $RP$0$i$ph = $170;
      }
     } else {
      $R$0$i$ph = $168;
      $RP$0$i$ph = $167;
     }
     $R$0$i = $R$0$i$ph;
     $RP$0$i = $RP$0$i$ph;
     while (1) {
      $173 = $R$0$i + 20 | 0;
      $174 = HEAP32[$173 >> 2] | 0;
      if (!$174) {
       $176 = $R$0$i + 16 | 0;
       $177 = HEAP32[$176 >> 2] | 0;
       if (!$177) {
        $R$0$i$lcssa = $R$0$i;
        $RP$0$i$lcssa = $RP$0$i;
        break;
       } else {
        $R$0$i$be = $177;
        $RP$0$i$be = $176;
       }
      } else {
       $R$0$i$be = $174;
       $RP$0$i$be = $173;
      }
      $R$0$i = $R$0$i$be;
      $RP$0$i = $RP$0$i$be;
     }
     if ($RP$0$i$lcssa >>> 0 < $149 >>> 0) _abort(); else {
      HEAP32[$RP$0$i$lcssa >> 2] = 0;
      $R$1$i = $R$0$i$lcssa;
      break;
     }
    } else {
     $159 = HEAP32[$v$0$i$lcssa + 8 >> 2] | 0;
     if ($159 >>> 0 < $149 >>> 0) _abort();
     $161 = $159 + 12 | 0;
     if ((HEAP32[$161 >> 2] | 0) != ($v$0$i$lcssa | 0)) _abort();
     $164 = $156 + 8 | 0;
     if ((HEAP32[$164 >> 2] | 0) == ($v$0$i$lcssa | 0)) {
      HEAP32[$161 >> 2] = $156;
      HEAP32[$164 >> 2] = $159;
      $R$1$i = $156;
      break;
     } else _abort();
    } while (0);
    do if ($154) {
     $182 = HEAP32[$v$0$i$lcssa + 28 >> 2] | 0;
     $183 = 44608 + ($182 << 2) | 0;
     if (($v$0$i$lcssa | 0) == (HEAP32[$183 >> 2] | 0)) {
      HEAP32[$183 >> 2] = $R$1$i;
      if (!$R$1$i) {
       HEAP32[11077] = HEAP32[11077] & ~(1 << $182);
       break;
      }
     } else {
      if ($154 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
      $192 = $154 + 16 | 0;
      if ((HEAP32[$192 >> 2] | 0) == ($v$0$i$lcssa | 0)) HEAP32[$192 >> 2] = $R$1$i; else HEAP32[$154 + 20 >> 2] = $R$1$i;
      if (!$R$1$i) break;
     }
     $197 = HEAP32[11080] | 0;
     if ($R$1$i >>> 0 < $197 >>> 0) _abort();
     HEAP32[$R$1$i + 24 >> 2] = $154;
     $201 = HEAP32[$v$0$i$lcssa + 16 >> 2] | 0;
     do if ($201) if ($201 >>> 0 < $197 >>> 0) _abort(); else {
      HEAP32[$R$1$i + 16 >> 2] = $201;
      HEAP32[$201 + 24 >> 2] = $R$1$i;
      break;
     } while (0);
     $207 = HEAP32[$v$0$i$lcssa + 20 >> 2] | 0;
     if ($207) if ($207 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
      HEAP32[$R$1$i + 20 >> 2] = $207;
      HEAP32[$207 + 24 >> 2] = $R$1$i;
      break;
     }
    } while (0);
    if ($rsize$0$i$lcssa >>> 0 < 16) {
     $214 = $rsize$0$i$lcssa + $5 | 0;
     HEAP32[$v$0$i$lcssa + 4 >> 2] = $214 | 3;
     $217 = $v$0$i$lcssa + ($214 + 4) | 0;
     HEAP32[$217 >> 2] = HEAP32[$217 >> 2] | 1;
    } else {
     HEAP32[$v$0$i$lcssa + 4 >> 2] = $5 | 3;
     HEAP32[$v$0$i$lcssa + ($5 | 4) >> 2] = $rsize$0$i$lcssa | 1;
     HEAP32[$v$0$i$lcssa + ($rsize$0$i$lcssa + $5) >> 2] = $rsize$0$i$lcssa;
     $225 = HEAP32[11078] | 0;
     if ($225) {
      $227 = HEAP32[11081] | 0;
      $228 = $225 >>> 3;
      $229 = $228 << 1;
      $230 = 44344 + ($229 << 2) | 0;
      $231 = HEAP32[11076] | 0;
      $232 = 1 << $228;
      if (!($231 & $232)) {
       HEAP32[11076] = $231 | $232;
       $$pre$phi$iZ2D = 44344 + ($229 + 2 << 2) | 0;
       $F1$0$i = $230;
      } else {
       $236 = 44344 + ($229 + 2 << 2) | 0;
       $237 = HEAP32[$236 >> 2] | 0;
       if ($237 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
        $$pre$phi$iZ2D = $236;
        $F1$0$i = $237;
       }
      }
      HEAP32[$$pre$phi$iZ2D >> 2] = $227;
      HEAP32[$F1$0$i + 12 >> 2] = $227;
      HEAP32[$227 + 8 >> 2] = $F1$0$i;
      HEAP32[$227 + 12 >> 2] = $230;
     }
     HEAP32[11078] = $rsize$0$i$lcssa;
     HEAP32[11081] = $151;
    }
    $mem$0 = $v$0$i$lcssa + 8 | 0;
    return $mem$0 | 0;
   }
  } else $nb$0 = $5;
 } else if ($bytes >>> 0 > 4294967231) $nb$0 = -1; else {
  $245 = $bytes + 11 | 0;
  $246 = $245 & -8;
  $247 = HEAP32[11077] | 0;
  if (!$247) $nb$0 = $246; else {
   $249 = 0 - $246 | 0;
   $250 = $245 >>> 8;
   if (!$250) $idx$0$i = 0; else if ($246 >>> 0 > 16777215) $idx$0$i = 31; else {
    $255 = ($250 + 1048320 | 0) >>> 16 & 8;
    $256 = $250 << $255;
    $259 = ($256 + 520192 | 0) >>> 16 & 4;
    $261 = $256 << $259;
    $264 = ($261 + 245760 | 0) >>> 16 & 2;
    $269 = 14 - ($259 | $255 | $264) + ($261 << $264 >>> 15) | 0;
    $idx$0$i = $246 >>> ($269 + 7 | 0) & 1 | $269 << 1;
   }
   $276 = HEAP32[44608 + ($idx$0$i << 2) >> 2] | 0;
   do if (!$276) {
    $rsize$2$i = $249;
    $t$1$i = 0;
    $v$2$i = 0;
    label = 93;
   } else {
    if (($idx$0$i | 0) == 31) $282 = 0; else $282 = 25 - ($idx$0$i >>> 1) | 0;
    $rsize$0$i15 = $249;
    $rst$0$i = 0;
    $sizebits$0$i = $246 << $282;
    $t$0$i14 = $276;
    $v$0$i16 = 0;
    while (1) {
     $285 = HEAP32[$t$0$i14 + 4 >> 2] & -8;
     $286 = $285 - $246 | 0;
     if ($286 >>> 0 < $rsize$0$i15 >>> 0) if (($285 | 0) == ($246 | 0)) {
      $$lcssa174 = $286;
      $t$0$i14$lcssa = $t$0$i14;
      label = 97;
      break;
     } else {
      $rsize$1$i = $286;
      $v$1$i = $t$0$i14;
     } else {
      $rsize$1$i = $rsize$0$i15;
      $v$1$i = $v$0$i16;
     }
     $290 = HEAP32[$t$0$i14 + 20 >> 2] | 0;
     $t$0$i14 = HEAP32[$t$0$i14 + ($sizebits$0$i >>> 31 << 2) + 16 >> 2] | 0;
     $rst$1$i = ($290 | 0) == 0 | ($290 | 0) == ($t$0$i14 | 0) ? $rst$0$i : $290;
     if (!$t$0$i14) {
      $rsize$1$i$lcssa = $rsize$1$i;
      $rst$1$i$lcssa = $rst$1$i;
      $v$1$i$lcssa = $v$1$i;
      label = 92;
      break;
     } else {
      $rsize$0$i15 = $rsize$1$i;
      $rst$0$i = $rst$1$i;
      $sizebits$0$i = $sizebits$0$i << 1;
      $v$0$i16 = $v$1$i;
     }
    }
    if ((label | 0) == 92) {
     $rsize$2$i = $rsize$1$i$lcssa;
     $t$1$i = $rst$1$i$lcssa;
     $v$2$i = $v$1$i$lcssa;
     label = 93;
     break;
    } else if ((label | 0) == 97) {
     $rsize$331$i$ph = $$lcssa174;
     $t$230$i$ph = $t$0$i14$lcssa;
     $v$332$i$ph = $t$0$i14$lcssa;
     label = 98;
     break;
    }
   } while (0);
   if ((label | 0) == 93) {
    if (($t$1$i | 0) == 0 & ($v$2$i | 0) == 0) {
     $300 = 2 << $idx$0$i;
     $303 = $247 & ($300 | 0 - $300);
     if (!$303) {
      $nb$0 = $246;
      break;
     }
     $307 = ($303 & 0 - $303) + -1 | 0;
     $309 = $307 >>> 12 & 16;
     $310 = $307 >>> $309;
     $312 = $310 >>> 5 & 8;
     $314 = $310 >>> $312;
     $316 = $314 >>> 2 & 4;
     $318 = $314 >>> $316;
     $320 = $318 >>> 1 & 2;
     $322 = $318 >>> $320;
     $324 = $322 >>> 1 & 1;
     $t$2$ph$i = HEAP32[44608 + (($312 | $309 | $316 | $320 | $324) + ($322 >>> $324) << 2) >> 2] | 0;
    } else $t$2$ph$i = $t$1$i;
    if (!$t$2$ph$i) {
     $rsize$3$lcssa$i = $rsize$2$i;
     $v$3$lcssa$i = $v$2$i;
    } else {
     $rsize$331$i$ph = $rsize$2$i;
     $t$230$i$ph = $t$2$ph$i;
     $v$332$i$ph = $v$2$i;
     label = 98;
    }
   }
   if ((label | 0) == 98) {
    $rsize$331$i = $rsize$331$i$ph;
    $t$230$i = $t$230$i$ph;
    $v$332$i = $v$332$i$ph;
    while (1) {
     $334 = (HEAP32[$t$230$i + 4 >> 2] & -8) - $246 | 0;
     $335 = $334 >>> 0 < $rsize$331$i >>> 0;
     $$rsize$3$i = $335 ? $334 : $rsize$331$i;
     $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
     $337 = HEAP32[$t$230$i + 16 >> 2] | 0;
     if (!$337) {
      $340 = HEAP32[$t$230$i + 20 >> 2] | 0;
      if (!$340) {
       $$rsize$3$i$lcssa = $$rsize$3$i;
       $t$2$v$3$i$lcssa = $t$2$v$3$i;
       break;
      } else $t$230$i$be = $340;
     } else $t$230$i$be = $337;
     $rsize$331$i = $$rsize$3$i;
     $t$230$i = $t$230$i$be;
     $v$332$i = $t$2$v$3$i;
    }
    $rsize$3$lcssa$i = $$rsize$3$i$lcssa;
    $v$3$lcssa$i = $t$2$v$3$i$lcssa;
   }
   if (!$v$3$lcssa$i) $nb$0 = $246; else if ($rsize$3$lcssa$i >>> 0 < ((HEAP32[11078] | 0) - $246 | 0) >>> 0) {
    $346 = HEAP32[11080] | 0;
    if ($v$3$lcssa$i >>> 0 < $346 >>> 0) _abort();
    $348 = $v$3$lcssa$i + $246 | 0;
    if ($v$3$lcssa$i >>> 0 >= $348 >>> 0) _abort();
    $351 = HEAP32[$v$3$lcssa$i + 24 >> 2] | 0;
    $353 = HEAP32[$v$3$lcssa$i + 12 >> 2] | 0;
    do if (($353 | 0) == ($v$3$lcssa$i | 0)) {
     $364 = $v$3$lcssa$i + 20 | 0;
     $365 = HEAP32[$364 >> 2] | 0;
     if (!$365) {
      $367 = $v$3$lcssa$i + 16 | 0;
      $368 = HEAP32[$367 >> 2] | 0;
      if (!$368) {
       $R$1$i20 = 0;
       break;
      } else {
       $R$0$i18$ph = $368;
       $RP$0$i17$ph = $367;
      }
     } else {
      $R$0$i18$ph = $365;
      $RP$0$i17$ph = $364;
     }
     $R$0$i18 = $R$0$i18$ph;
     $RP$0$i17 = $RP$0$i17$ph;
     while (1) {
      $370 = $R$0$i18 + 20 | 0;
      $371 = HEAP32[$370 >> 2] | 0;
      if (!$371) {
       $373 = $R$0$i18 + 16 | 0;
       $374 = HEAP32[$373 >> 2] | 0;
       if (!$374) {
        $R$0$i18$lcssa = $R$0$i18;
        $RP$0$i17$lcssa = $RP$0$i17;
        break;
       } else {
        $R$0$i18$be = $374;
        $RP$0$i17$be = $373;
       }
      } else {
       $R$0$i18$be = $371;
       $RP$0$i17$be = $370;
      }
      $R$0$i18 = $R$0$i18$be;
      $RP$0$i17 = $RP$0$i17$be;
     }
     if ($RP$0$i17$lcssa >>> 0 < $346 >>> 0) _abort(); else {
      HEAP32[$RP$0$i17$lcssa >> 2] = 0;
      $R$1$i20 = $R$0$i18$lcssa;
      break;
     }
    } else {
     $356 = HEAP32[$v$3$lcssa$i + 8 >> 2] | 0;
     if ($356 >>> 0 < $346 >>> 0) _abort();
     $358 = $356 + 12 | 0;
     if ((HEAP32[$358 >> 2] | 0) != ($v$3$lcssa$i | 0)) _abort();
     $361 = $353 + 8 | 0;
     if ((HEAP32[$361 >> 2] | 0) == ($v$3$lcssa$i | 0)) {
      HEAP32[$358 >> 2] = $353;
      HEAP32[$361 >> 2] = $356;
      $R$1$i20 = $353;
      break;
     } else _abort();
    } while (0);
    do if ($351) {
     $379 = HEAP32[$v$3$lcssa$i + 28 >> 2] | 0;
     $380 = 44608 + ($379 << 2) | 0;
     if (($v$3$lcssa$i | 0) == (HEAP32[$380 >> 2] | 0)) {
      HEAP32[$380 >> 2] = $R$1$i20;
      if (!$R$1$i20) {
       HEAP32[11077] = HEAP32[11077] & ~(1 << $379);
       break;
      }
     } else {
      if ($351 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
      $389 = $351 + 16 | 0;
      if ((HEAP32[$389 >> 2] | 0) == ($v$3$lcssa$i | 0)) HEAP32[$389 >> 2] = $R$1$i20; else HEAP32[$351 + 20 >> 2] = $R$1$i20;
      if (!$R$1$i20) break;
     }
     $394 = HEAP32[11080] | 0;
     if ($R$1$i20 >>> 0 < $394 >>> 0) _abort();
     HEAP32[$R$1$i20 + 24 >> 2] = $351;
     $398 = HEAP32[$v$3$lcssa$i + 16 >> 2] | 0;
     do if ($398) if ($398 >>> 0 < $394 >>> 0) _abort(); else {
      HEAP32[$R$1$i20 + 16 >> 2] = $398;
      HEAP32[$398 + 24 >> 2] = $R$1$i20;
      break;
     } while (0);
     $404 = HEAP32[$v$3$lcssa$i + 20 >> 2] | 0;
     if ($404) if ($404 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
      HEAP32[$R$1$i20 + 20 >> 2] = $404;
      HEAP32[$404 + 24 >> 2] = $R$1$i20;
      break;
     }
    } while (0);
    L98 : do if ($rsize$3$lcssa$i >>> 0 < 16) {
     $411 = $rsize$3$lcssa$i + $246 | 0;
     HEAP32[$v$3$lcssa$i + 4 >> 2] = $411 | 3;
     $414 = $v$3$lcssa$i + ($411 + 4) | 0;
     HEAP32[$414 >> 2] = HEAP32[$414 >> 2] | 1;
    } else {
     HEAP32[$v$3$lcssa$i + 4 >> 2] = $246 | 3;
     HEAP32[$v$3$lcssa$i + ($246 | 4) >> 2] = $rsize$3$lcssa$i | 1;
     HEAP32[$v$3$lcssa$i + ($rsize$3$lcssa$i + $246) >> 2] = $rsize$3$lcssa$i;
     $422 = $rsize$3$lcssa$i >>> 3;
     if ($rsize$3$lcssa$i >>> 0 < 256) {
      $424 = $422 << 1;
      $425 = 44344 + ($424 << 2) | 0;
      $426 = HEAP32[11076] | 0;
      $427 = 1 << $422;
      if (!($426 & $427)) {
       HEAP32[11076] = $426 | $427;
       $$pre$phi$i26Z2D = 44344 + ($424 + 2 << 2) | 0;
       $F5$0$i = $425;
      } else {
       $431 = 44344 + ($424 + 2 << 2) | 0;
       $432 = HEAP32[$431 >> 2] | 0;
       if ($432 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
        $$pre$phi$i26Z2D = $431;
        $F5$0$i = $432;
       }
      }
      HEAP32[$$pre$phi$i26Z2D >> 2] = $348;
      HEAP32[$F5$0$i + 12 >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $F5$0$i;
      HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $425;
      break;
     }
     $438 = $rsize$3$lcssa$i >>> 8;
     if (!$438) $I7$0$i = 0; else if ($rsize$3$lcssa$i >>> 0 > 16777215) $I7$0$i = 31; else {
      $443 = ($438 + 1048320 | 0) >>> 16 & 8;
      $444 = $438 << $443;
      $447 = ($444 + 520192 | 0) >>> 16 & 4;
      $449 = $444 << $447;
      $452 = ($449 + 245760 | 0) >>> 16 & 2;
      $457 = 14 - ($447 | $443 | $452) + ($449 << $452 >>> 15) | 0;
      $I7$0$i = $rsize$3$lcssa$i >>> ($457 + 7 | 0) & 1 | $457 << 1;
     }
     $463 = 44608 + ($I7$0$i << 2) | 0;
     HEAP32[$v$3$lcssa$i + ($246 + 28) >> 2] = $I7$0$i;
     HEAP32[$v$3$lcssa$i + ($246 + 20) >> 2] = 0;
     HEAP32[$v$3$lcssa$i + ($246 + 16) >> 2] = 0;
     $467 = HEAP32[11077] | 0;
     $468 = 1 << $I7$0$i;
     if (!($467 & $468)) {
      HEAP32[11077] = $467 | $468;
      HEAP32[$463 >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = $463;
      HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $348;
      break;
     }
     $475 = HEAP32[$463 >> 2] | 0;
     if (($I7$0$i | 0) == 31) $484 = 0; else $484 = 25 - ($I7$0$i >>> 1) | 0;
     do if ((HEAP32[$475 + 4 >> 2] & -8 | 0) == ($rsize$3$lcssa$i | 0)) $T$0$lcssa$i = $475; else {
      $K12$029$i = $rsize$3$lcssa$i << $484;
      $T$028$i = $475;
      while (1) {
       $492 = $T$028$i + ($K12$029$i >>> 31 << 2) + 16 | 0;
       $487 = HEAP32[$492 >> 2] | 0;
       if (!$487) {
        $$lcssa169 = $492;
        $T$028$i$lcssa = $T$028$i;
        break;
       }
       if ((HEAP32[$487 + 4 >> 2] & -8 | 0) == ($rsize$3$lcssa$i | 0)) {
        $$lcssa172 = $487;
        label = 164;
        break;
       } else {
        $K12$029$i = $K12$029$i << 1;
        $T$028$i = $487;
       }
      }
      if ((label | 0) == 164) {
       $T$0$lcssa$i = $$lcssa172;
       break;
      }
      if ($$lcssa169 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
       HEAP32[$$lcssa169 >> 2] = $348;
       HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = $T$028$i$lcssa;
       HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $348;
       HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $348;
       break L98;
      }
     } while (0);
     $499 = $T$0$lcssa$i + 8 | 0;
     $500 = HEAP32[$499 >> 2] | 0;
     $501 = HEAP32[11080] | 0;
     if ($T$0$lcssa$i >>> 0 >= $501 >>> 0 & $500 >>> 0 >= $501 >>> 0) {
      HEAP32[$500 + 12 >> 2] = $348;
      HEAP32[$499 >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $500;
      HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $T$0$lcssa$i;
      HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = 0;
      break;
     } else _abort();
    } while (0);
    $mem$0 = $v$3$lcssa$i + 8 | 0;
    return $mem$0 | 0;
   } else $nb$0 = $246;
  }
 } while (0);
 $509 = HEAP32[11078] | 0;
 if ($509 >>> 0 >= $nb$0 >>> 0) {
  $511 = $509 - $nb$0 | 0;
  $512 = HEAP32[11081] | 0;
  if ($511 >>> 0 > 15) {
   HEAP32[11081] = $512 + $nb$0;
   HEAP32[11078] = $511;
   HEAP32[$512 + ($nb$0 + 4) >> 2] = $511 | 1;
   HEAP32[$512 + $509 >> 2] = $511;
   HEAP32[$512 + 4 >> 2] = $nb$0 | 3;
  } else {
   HEAP32[11078] = 0;
   HEAP32[11081] = 0;
   HEAP32[$512 + 4 >> 2] = $509 | 3;
   $522 = $512 + ($509 + 4) | 0;
   HEAP32[$522 >> 2] = HEAP32[$522 >> 2] | 1;
  }
  $mem$0 = $512 + 8 | 0;
  return $mem$0 | 0;
 }
 $526 = HEAP32[11079] | 0;
 if ($526 >>> 0 > $nb$0 >>> 0) {
  $528 = $526 - $nb$0 | 0;
  HEAP32[11079] = $528;
  $529 = HEAP32[11082] | 0;
  HEAP32[11082] = $529 + $nb$0;
  HEAP32[$529 + ($nb$0 + 4) >> 2] = $528 | 1;
  HEAP32[$529 + 4 >> 2] = $nb$0 | 3;
  $mem$0 = $529 + 8 | 0;
  return $mem$0 | 0;
 }
 do if (!(HEAP32[11194] | 0)) {
  $538 = _sysconf(30) | 0;
  if (!($538 + -1 & $538)) {
   HEAP32[11196] = $538;
   HEAP32[11195] = $538;
   HEAP32[11197] = -1;
   HEAP32[11198] = -1;
   HEAP32[11199] = 0;
   HEAP32[11187] = 0;
   HEAP32[11194] = (_time(0) | 0) & -16 ^ 1431655768;
   break;
  } else _abort();
 } while (0);
 $545 = $nb$0 + 48 | 0;
 $546 = HEAP32[11196] | 0;
 $547 = $nb$0 + 47 | 0;
 $548 = $546 + $547 | 0;
 $549 = 0 - $546 | 0;
 $550 = $548 & $549;
 if ($550 >>> 0 <= $nb$0 >>> 0) {
  $mem$0 = 0;
  return $mem$0 | 0;
 }
 $552 = HEAP32[11186] | 0;
 if ($552) {
  $554 = HEAP32[11184] | 0;
  $555 = $554 + $550 | 0;
  if ($555 >>> 0 <= $554 >>> 0 | $555 >>> 0 > $552 >>> 0) {
   $mem$0 = 0;
   return $mem$0 | 0;
  }
 }
 L282 : do if (!(HEAP32[11187] & 4)) {
  $561 = HEAP32[11082] | 0;
  do if (!$561) label = 191; else {
   $sp$0$i$i = 44752 | 0;
   while (1) {
    $563 = HEAP32[$sp$0$i$i >> 2] | 0;
    if ($563 >>> 0 <= $561 >>> 0) {
     $565 = $sp$0$i$i + 4 | 0;
     if (($563 + (HEAP32[$565 >> 2] | 0) | 0) >>> 0 > $561 >>> 0) {
      $$lcssa165 = $sp$0$i$i;
      $$lcssa167 = $565;
      break;
     }
    }
    $sp$0$i$i = HEAP32[$sp$0$i$i + 8 >> 2] | 0;
    if (!$sp$0$i$i) {
     label = 190;
     break;
    }
   }
   if ((label | 0) == 190) {
    label = 191;
    break;
   }
   $596 = $548 - (HEAP32[11079] | 0) & $549;
   if ($596 >>> 0 < 2147483647) {
    $598 = _sbrk($596 | 0) | 0;
    if (($598 | 0) == ((HEAP32[$$lcssa165 >> 2] | 0) + (HEAP32[$$lcssa167 >> 2] | 0) | 0)) if (($598 | 0) == (-1 | 0)) $tsize$0313843$i = $596; else {
     $tbase$253$i = $598;
     $tsize$252$i = $596;
     label = 211;
     break L282;
    } else {
     $br$0$ph$i = $598;
     $ssize$1$ph$i = $596;
     label = 201;
    }
   } else $tsize$0313843$i = 0;
  } while (0);
  do if ((label | 0) == 191) {
   $572 = _sbrk(0) | 0;
   if (($572 | 0) == (-1 | 0)) $tsize$0313843$i = 0; else {
    $574 = $572;
    $575 = HEAP32[11195] | 0;
    $576 = $575 + -1 | 0;
    if (!($576 & $574)) $ssize$0$i = $550; else $ssize$0$i = $550 - $574 + ($576 + $574 & 0 - $575) | 0;
    $584 = HEAP32[11184] | 0;
    $585 = $584 + $ssize$0$i | 0;
    if ($ssize$0$i >>> 0 > $nb$0 >>> 0 & $ssize$0$i >>> 0 < 2147483647) {
     $588 = HEAP32[11186] | 0;
     if ($588) if ($585 >>> 0 <= $584 >>> 0 | $585 >>> 0 > $588 >>> 0) {
      $tsize$0313843$i = 0;
      break;
     }
     $592 = _sbrk($ssize$0$i | 0) | 0;
     if (($592 | 0) == ($572 | 0)) {
      $tbase$253$i = $572;
      $tsize$252$i = $ssize$0$i;
      label = 211;
      break L282;
     } else {
      $br$0$ph$i = $592;
      $ssize$1$ph$i = $ssize$0$i;
      label = 201;
     }
    } else $tsize$0313843$i = 0;
   }
  } while (0);
  L306 : do if ((label | 0) == 201) {
   $604 = 0 - $ssize$1$ph$i | 0;
   do if ($545 >>> 0 > $ssize$1$ph$i >>> 0 & ($ssize$1$ph$i >>> 0 < 2147483647 & ($br$0$ph$i | 0) != (-1 | 0))) {
    $608 = HEAP32[11196] | 0;
    $612 = $547 - $ssize$1$ph$i + $608 & 0 - $608;
    if ($612 >>> 0 < 2147483647) if ((_sbrk($612 | 0) | 0) == (-1 | 0)) {
     _sbrk($604 | 0) | 0;
     $tsize$0313843$i = 0;
     break L306;
    } else {
     $ssize$2$i = $612 + $ssize$1$ph$i | 0;
     break;
    } else $ssize$2$i = $ssize$1$ph$i;
   } else $ssize$2$i = $ssize$1$ph$i; while (0);
   if (($br$0$ph$i | 0) == (-1 | 0)) $tsize$0313843$i = 0; else {
    $tbase$253$i = $br$0$ph$i;
    $tsize$252$i = $ssize$2$i;
    label = 211;
    break L282;
   }
  } while (0);
  HEAP32[11187] = HEAP32[11187] | 4;
  $tsize$1$i = $tsize$0313843$i;
  label = 208;
 } else {
  $tsize$1$i = 0;
  label = 208;
 } while (0);
 if ((label | 0) == 208) if ($550 >>> 0 < 2147483647) {
  $621 = _sbrk($550 | 0) | 0;
  $622 = _sbrk(0) | 0;
  if ($621 >>> 0 < $622 >>> 0 & (($621 | 0) != (-1 | 0) & ($622 | 0) != (-1 | 0))) {
   $628 = $622 - $621 | 0;
   $630 = $628 >>> 0 > ($nb$0 + 40 | 0) >>> 0;
   if ($630) {
    $tbase$253$i = $621;
    $tsize$252$i = $630 ? $628 : $tsize$1$i;
    label = 211;
   }
  }
 }
 if ((label | 0) == 211) {
  $632 = (HEAP32[11184] | 0) + $tsize$252$i | 0;
  HEAP32[11184] = $632;
  if ($632 >>> 0 > (HEAP32[11185] | 0) >>> 0) HEAP32[11185] = $632;
  $635 = HEAP32[11082] | 0;
  L325 : do if (!$635) {
   $637 = HEAP32[11080] | 0;
   if (($637 | 0) == 0 | $tbase$253$i >>> 0 < $637 >>> 0) HEAP32[11080] = $tbase$253$i;
   HEAP32[11188] = $tbase$253$i;
   HEAP32[11189] = $tsize$252$i;
   HEAP32[11191] = 0;
   HEAP32[11085] = HEAP32[11194];
   HEAP32[11084] = -1;
   $i$02$i$i = 0;
   do {
    $641 = $i$02$i$i << 1;
    $642 = 44344 + ($641 << 2) | 0;
    HEAP32[44344 + ($641 + 3 << 2) >> 2] = $642;
    HEAP32[44344 + ($641 + 2 << 2) >> 2] = $642;
    $i$02$i$i = $i$02$i$i + 1 | 0;
   } while (($i$02$i$i | 0) != 32);
   $648 = $tbase$253$i + 8 | 0;
   if (!($648 & 7)) $654 = 0; else $654 = 0 - $648 & 7;
   $655 = $tsize$252$i + -40 - $654 | 0;
   HEAP32[11082] = $tbase$253$i + $654;
   HEAP32[11079] = $655;
   HEAP32[$tbase$253$i + ($654 + 4) >> 2] = $655 | 1;
   HEAP32[$tbase$253$i + ($tsize$252$i + -36) >> 2] = 40;
   HEAP32[11083] = HEAP32[11198];
  } else {
   $sp$082$i = 44752 | 0;
   while (1) {
    $660 = HEAP32[$sp$082$i >> 2] | 0;
    $661 = $sp$082$i + 4 | 0;
    $662 = HEAP32[$661 >> 2] | 0;
    if (($tbase$253$i | 0) == ($660 + $662 | 0)) {
     $$lcssa159 = $660;
     $$lcssa161 = $661;
     $$lcssa163 = $662;
     $sp$082$i$lcssa = $sp$082$i;
     label = 224;
     break;
    }
    $sp$082$i = HEAP32[$sp$082$i + 8 >> 2] | 0;
    if (!$sp$082$i) {
     label = 229;
     break;
    }
   }
   if ((label | 0) == 224) {
    if (!(HEAP32[$sp$082$i$lcssa + 12 >> 2] & 8)) if ($635 >>> 0 < $tbase$253$i >>> 0 & $635 >>> 0 >= $$lcssa159 >>> 0) {
     HEAP32[$$lcssa161 >> 2] = $$lcssa163 + $tsize$252$i;
     $676 = (HEAP32[11079] | 0) + $tsize$252$i | 0;
     $678 = $635 + 8 | 0;
     if (!($678 & 7)) $684 = 0; else $684 = 0 - $678 & 7;
     $685 = $676 - $684 | 0;
     HEAP32[11082] = $635 + $684;
     HEAP32[11079] = $685;
     HEAP32[$635 + ($684 + 4) >> 2] = $685 | 1;
     HEAP32[$635 + ($676 + 4) >> 2] = 40;
     HEAP32[11083] = HEAP32[11198];
     break;
    }
   } else if ((label | 0) == 229) {}
   $690 = HEAP32[11080] | 0;
   if ($tbase$253$i >>> 0 < $690 >>> 0) {
    HEAP32[11080] = $tbase$253$i;
    $755 = $tbase$253$i;
   } else $755 = $690;
   $692 = $tbase$253$i + $tsize$252$i | 0;
   $sp$181$i = 44752 | 0;
   while (1) {
    if ((HEAP32[$sp$181$i >> 2] | 0) == ($692 | 0)) {
     $$lcssa156 = $sp$181$i;
     $sp$181$i$lcssa = $sp$181$i;
     label = 235;
     break;
    }
    $sp$181$i = HEAP32[$sp$181$i + 8 >> 2] | 0;
    if (!$sp$181$i) {
     label = 236;
     break;
    }
   }
   if ((label | 0) == 235) {
    if (!(HEAP32[$sp$181$i$lcssa + 12 >> 2] & 8)) {
     HEAP32[$$lcssa156 >> 2] = $tbase$253$i;
     $702 = $sp$181$i$lcssa + 4 | 0;
     HEAP32[$702 >> 2] = (HEAP32[$702 >> 2] | 0) + $tsize$252$i;
     $706 = $tbase$253$i + 8 | 0;
     if (!($706 & 7)) $712 = 0; else $712 = 0 - $706 & 7;
     $714 = $tbase$253$i + ($tsize$252$i + 8) | 0;
     if (!($714 & 7)) $719 = 0; else $719 = 0 - $714 & 7;
     $720 = $tbase$253$i + ($719 + $tsize$252$i) | 0;
     $$sum$i19$i = $712 + $nb$0 | 0;
     $724 = $tbase$253$i + $$sum$i19$i | 0;
     $725 = $720 - ($tbase$253$i + $712) - $nb$0 | 0;
     HEAP32[$tbase$253$i + ($712 + 4) >> 2] = $nb$0 | 3;
     L354 : do if (($720 | 0) == ($635 | 0)) {
      $730 = (HEAP32[11079] | 0) + $725 | 0;
      HEAP32[11079] = $730;
      HEAP32[11082] = $724;
      HEAP32[$tbase$253$i + ($$sum$i19$i + 4) >> 2] = $730 | 1;
     } else {
      if (($720 | 0) == (HEAP32[11081] | 0)) {
       $736 = (HEAP32[11078] | 0) + $725 | 0;
       HEAP32[11078] = $736;
       HEAP32[11081] = $724;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 4) >> 2] = $736 | 1;
       HEAP32[$tbase$253$i + ($736 + $$sum$i19$i) >> 2] = $736;
       break;
      }
      $$sum2$i21$i = $tsize$252$i + 4 | 0;
      $741 = HEAP32[$tbase$253$i + ($$sum2$i21$i + $719) >> 2] | 0;
      if (($741 & 3 | 0) == 1) {
       $744 = $741 & -8;
       $745 = $741 >>> 3;
       L362 : do if ($741 >>> 0 < 256) {
        $748 = HEAP32[$tbase$253$i + (($719 | 8) + $tsize$252$i) >> 2] | 0;
        $750 = HEAP32[$tbase$253$i + ($tsize$252$i + 12 + $719) >> 2] | 0;
        $752 = 44344 + ($745 << 1 << 2) | 0;
        do if (($748 | 0) != ($752 | 0)) {
         if ($748 >>> 0 < $755 >>> 0) _abort();
         if ((HEAP32[$748 + 12 >> 2] | 0) == ($720 | 0)) break;
         _abort();
        } while (0);
        if (($750 | 0) == ($748 | 0)) {
         HEAP32[11076] = HEAP32[11076] & ~(1 << $745);
         break;
        }
        do if (($750 | 0) == ($752 | 0)) $$pre$phi59$i$iZ2D = $750 + 8 | 0; else {
         if ($750 >>> 0 < $755 >>> 0) _abort();
         $766 = $750 + 8 | 0;
         if ((HEAP32[$766 >> 2] | 0) == ($720 | 0)) {
          $$pre$phi59$i$iZ2D = $766;
          break;
         }
         _abort();
        } while (0);
        HEAP32[$748 + 12 >> 2] = $750;
        HEAP32[$$pre$phi59$i$iZ2D >> 2] = $748;
       } else {
        $771 = HEAP32[$tbase$253$i + (($719 | 24) + $tsize$252$i) >> 2] | 0;
        $773 = HEAP32[$tbase$253$i + ($tsize$252$i + 12 + $719) >> 2] | 0;
        do if (($773 | 0) == ($720 | 0)) {
         $$sum67$i$i = $719 | 16;
         $784 = $tbase$253$i + ($$sum2$i21$i + $$sum67$i$i) | 0;
         $785 = HEAP32[$784 >> 2] | 0;
         if (!$785) {
          $787 = $tbase$253$i + ($$sum67$i$i + $tsize$252$i) | 0;
          $788 = HEAP32[$787 >> 2] | 0;
          if (!$788) {
           $R$1$i$i = 0;
           break;
          } else {
           $R$0$i$i$ph = $788;
           $RP$0$i$i$ph = $787;
          }
         } else {
          $R$0$i$i$ph = $785;
          $RP$0$i$i$ph = $784;
         }
         $R$0$i$i = $R$0$i$i$ph;
         $RP$0$i$i = $RP$0$i$i$ph;
         while (1) {
          $790 = $R$0$i$i + 20 | 0;
          $791 = HEAP32[$790 >> 2] | 0;
          if (!$791) {
           $793 = $R$0$i$i + 16 | 0;
           $794 = HEAP32[$793 >> 2] | 0;
           if (!$794) {
            $R$0$i$i$lcssa = $R$0$i$i;
            $RP$0$i$i$lcssa = $RP$0$i$i;
            break;
           } else {
            $R$0$i$i$be = $794;
            $RP$0$i$i$be = $793;
           }
          } else {
           $R$0$i$i$be = $791;
           $RP$0$i$i$be = $790;
          }
          $R$0$i$i = $R$0$i$i$be;
          $RP$0$i$i = $RP$0$i$i$be;
         }
         if ($RP$0$i$i$lcssa >>> 0 < $755 >>> 0) _abort(); else {
          HEAP32[$RP$0$i$i$lcssa >> 2] = 0;
          $R$1$i$i = $R$0$i$i$lcssa;
          break;
         }
        } else {
         $776 = HEAP32[$tbase$253$i + (($719 | 8) + $tsize$252$i) >> 2] | 0;
         if ($776 >>> 0 < $755 >>> 0) _abort();
         $778 = $776 + 12 | 0;
         if ((HEAP32[$778 >> 2] | 0) != ($720 | 0)) _abort();
         $781 = $773 + 8 | 0;
         if ((HEAP32[$781 >> 2] | 0) == ($720 | 0)) {
          HEAP32[$778 >> 2] = $773;
          HEAP32[$781 >> 2] = $776;
          $R$1$i$i = $773;
          break;
         } else _abort();
        } while (0);
        if (!$771) break;
        $799 = HEAP32[$tbase$253$i + ($tsize$252$i + 28 + $719) >> 2] | 0;
        $800 = 44608 + ($799 << 2) | 0;
        do if (($720 | 0) == (HEAP32[$800 >> 2] | 0)) {
         HEAP32[$800 >> 2] = $R$1$i$i;
         if ($R$1$i$i) break;
         HEAP32[11077] = HEAP32[11077] & ~(1 << $799);
         break L362;
        } else {
         if ($771 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
         $809 = $771 + 16 | 0;
         if ((HEAP32[$809 >> 2] | 0) == ($720 | 0)) HEAP32[$809 >> 2] = $R$1$i$i; else HEAP32[$771 + 20 >> 2] = $R$1$i$i;
         if (!$R$1$i$i) break L362;
        } while (0);
        $814 = HEAP32[11080] | 0;
        if ($R$1$i$i >>> 0 < $814 >>> 0) _abort();
        HEAP32[$R$1$i$i + 24 >> 2] = $771;
        $$sum3132$i$i = $719 | 16;
        $818 = HEAP32[$tbase$253$i + ($$sum3132$i$i + $tsize$252$i) >> 2] | 0;
        do if ($818) if ($818 >>> 0 < $814 >>> 0) _abort(); else {
         HEAP32[$R$1$i$i + 16 >> 2] = $818;
         HEAP32[$818 + 24 >> 2] = $R$1$i$i;
         break;
        } while (0);
        $824 = HEAP32[$tbase$253$i + ($$sum2$i21$i + $$sum3132$i$i) >> 2] | 0;
        if (!$824) break;
        if ($824 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
         HEAP32[$R$1$i$i + 20 >> 2] = $824;
         HEAP32[$824 + 24 >> 2] = $R$1$i$i;
         break;
        }
       } while (0);
       $oldfirst$0$i$i = $tbase$253$i + (($744 | $719) + $tsize$252$i) | 0;
       $qsize$0$i$i = $744 + $725 | 0;
      } else {
       $oldfirst$0$i$i = $720;
       $qsize$0$i$i = $725;
      }
      $832 = $oldfirst$0$i$i + 4 | 0;
      HEAP32[$832 >> 2] = HEAP32[$832 >> 2] & -2;
      HEAP32[$tbase$253$i + ($$sum$i19$i + 4) >> 2] = $qsize$0$i$i | 1;
      HEAP32[$tbase$253$i + ($qsize$0$i$i + $$sum$i19$i) >> 2] = $qsize$0$i$i;
      $838 = $qsize$0$i$i >>> 3;
      if ($qsize$0$i$i >>> 0 < 256) {
       $840 = $838 << 1;
       $841 = 44344 + ($840 << 2) | 0;
       $842 = HEAP32[11076] | 0;
       $843 = 1 << $838;
       do if (!($842 & $843)) {
        HEAP32[11076] = $842 | $843;
        $$pre$phi$i23$iZ2D = 44344 + ($840 + 2 << 2) | 0;
        $F4$0$i$i = $841;
       } else {
        $847 = 44344 + ($840 + 2 << 2) | 0;
        $848 = HEAP32[$847 >> 2] | 0;
        if ($848 >>> 0 >= (HEAP32[11080] | 0) >>> 0) {
         $$pre$phi$i23$iZ2D = $847;
         $F4$0$i$i = $848;
         break;
        }
        _abort();
       } while (0);
       HEAP32[$$pre$phi$i23$iZ2D >> 2] = $724;
       HEAP32[$F4$0$i$i + 12 >> 2] = $724;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 8) >> 2] = $F4$0$i$i;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 12) >> 2] = $841;
       break;
      }
      $854 = $qsize$0$i$i >>> 8;
      do if (!$854) $I7$0$i$i = 0; else {
       if ($qsize$0$i$i >>> 0 > 16777215) {
        $I7$0$i$i = 31;
        break;
       }
       $859 = ($854 + 1048320 | 0) >>> 16 & 8;
       $860 = $854 << $859;
       $863 = ($860 + 520192 | 0) >>> 16 & 4;
       $865 = $860 << $863;
       $868 = ($865 + 245760 | 0) >>> 16 & 2;
       $873 = 14 - ($863 | $859 | $868) + ($865 << $868 >>> 15) | 0;
       $I7$0$i$i = $qsize$0$i$i >>> ($873 + 7 | 0) & 1 | $873 << 1;
      } while (0);
      $879 = 44608 + ($I7$0$i$i << 2) | 0;
      HEAP32[$tbase$253$i + ($$sum$i19$i + 28) >> 2] = $I7$0$i$i;
      HEAP32[$tbase$253$i + ($$sum$i19$i + 20) >> 2] = 0;
      HEAP32[$tbase$253$i + ($$sum$i19$i + 16) >> 2] = 0;
      $883 = HEAP32[11077] | 0;
      $884 = 1 << $I7$0$i$i;
      if (!($883 & $884)) {
       HEAP32[11077] = $883 | $884;
       HEAP32[$879 >> 2] = $724;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 24) >> 2] = $879;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 12) >> 2] = $724;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 8) >> 2] = $724;
       break;
      }
      $891 = HEAP32[$879 >> 2] | 0;
      if (($I7$0$i$i | 0) == 31) $900 = 0; else $900 = 25 - ($I7$0$i$i >>> 1) | 0;
      do if ((HEAP32[$891 + 4 >> 2] & -8 | 0) == ($qsize$0$i$i | 0)) $T$0$lcssa$i25$i = $891; else {
       $K8$053$i$i = $qsize$0$i$i << $900;
       $T$052$i$i = $891;
       while (1) {
        $908 = $T$052$i$i + ($K8$053$i$i >>> 31 << 2) + 16 | 0;
        $903 = HEAP32[$908 >> 2] | 0;
        if (!$903) {
         $$lcssa = $908;
         $T$052$i$i$lcssa = $T$052$i$i;
         break;
        }
        if ((HEAP32[$903 + 4 >> 2] & -8 | 0) == ($qsize$0$i$i | 0)) {
         $$lcssa146 = $903;
         label = 316;
         break;
        } else {
         $K8$053$i$i = $K8$053$i$i << 1;
         $T$052$i$i = $903;
        }
       }
       if ((label | 0) == 316) {
        $T$0$lcssa$i25$i = $$lcssa146;
        break;
       }
       if ($$lcssa >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
        HEAP32[$$lcssa >> 2] = $724;
        HEAP32[$tbase$253$i + ($$sum$i19$i + 24) >> 2] = $T$052$i$i$lcssa;
        HEAP32[$tbase$253$i + ($$sum$i19$i + 12) >> 2] = $724;
        HEAP32[$tbase$253$i + ($$sum$i19$i + 8) >> 2] = $724;
        break L354;
       }
      } while (0);
      $915 = $T$0$lcssa$i25$i + 8 | 0;
      $916 = HEAP32[$915 >> 2] | 0;
      $917 = HEAP32[11080] | 0;
      if ($T$0$lcssa$i25$i >>> 0 >= $917 >>> 0 & $916 >>> 0 >= $917 >>> 0) {
       HEAP32[$916 + 12 >> 2] = $724;
       HEAP32[$915 >> 2] = $724;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 8) >> 2] = $916;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 12) >> 2] = $T$0$lcssa$i25$i;
       HEAP32[$tbase$253$i + ($$sum$i19$i + 24) >> 2] = 0;
       break;
      } else _abort();
     } while (0);
     $mem$0 = $tbase$253$i + ($712 | 8) | 0;
     return $mem$0 | 0;
    }
   } else if ((label | 0) == 236) {}
   $sp$0$i$i$i = 44752 | 0;
   while (1) {
    $925 = HEAP32[$sp$0$i$i$i >> 2] | 0;
    if ($925 >>> 0 <= $635 >>> 0) {
     $928 = HEAP32[$sp$0$i$i$i + 4 >> 2] | 0;
     $929 = $925 + $928 | 0;
     if ($929 >>> 0 > $635 >>> 0) {
      $$lcssa152 = $925;
      $$lcssa153 = $928;
      $$lcssa154 = $929;
      break;
     }
    }
    $sp$0$i$i$i = HEAP32[$sp$0$i$i$i + 8 >> 2] | 0;
   }
   $934 = $$lcssa152 + ($$lcssa153 + -39) | 0;
   if (!($934 & 7)) $939 = 0; else $939 = 0 - $934 & 7;
   $940 = $$lcssa152 + ($$lcssa153 + -47 + $939) | 0;
   $941 = $635 + 16 | 0;
   $943 = $940 >>> 0 < $941 >>> 0 ? $635 : $940;
   $944 = $943 + 8 | 0;
   $947 = $tbase$253$i + 8 | 0;
   if (!($947 & 7)) $953 = 0; else $953 = 0 - $947 & 7;
   $954 = $tsize$252$i + -40 - $953 | 0;
   HEAP32[11082] = $tbase$253$i + $953;
   HEAP32[11079] = $954;
   HEAP32[$tbase$253$i + ($953 + 4) >> 2] = $954 | 1;
   HEAP32[$tbase$253$i + ($tsize$252$i + -36) >> 2] = 40;
   HEAP32[11083] = HEAP32[11198];
   $959 = $943 + 4 | 0;
   HEAP32[$959 >> 2] = 27;
   HEAP32[$944 + 0 >> 2] = HEAP32[11188];
   HEAP32[$944 + 4 >> 2] = HEAP32[11189];
   HEAP32[$944 + 8 >> 2] = HEAP32[11190];
   HEAP32[$944 + 12 >> 2] = HEAP32[11191];
   HEAP32[11188] = $tbase$253$i;
   HEAP32[11189] = $tsize$252$i;
   HEAP32[11191] = 0;
   HEAP32[11190] = $944;
   $960 = $943 + 28 | 0;
   HEAP32[$960 >> 2] = 7;
   if (($943 + 32 | 0) >>> 0 < $$lcssa154 >>> 0) {
    $964 = $960;
    do {
     $964$looptemp = $964;
     $964 = $964 + 4 | 0;
     HEAP32[$964 >> 2] = 7;
    } while (($964$looptemp + 8 | 0) >>> 0 < $$lcssa154 >>> 0);
   }
   if (($943 | 0) != ($635 | 0)) {
    $970 = $943 - $635 | 0;
    HEAP32[$959 >> 2] = HEAP32[$959 >> 2] & -2;
    HEAP32[$635 + 4 >> 2] = $970 | 1;
    HEAP32[$943 >> 2] = $970;
    $975 = $970 >>> 3;
    if ($970 >>> 0 < 256) {
     $977 = $975 << 1;
     $978 = 44344 + ($977 << 2) | 0;
     $979 = HEAP32[11076] | 0;
     $980 = 1 << $975;
     do if (!($979 & $980)) {
      HEAP32[11076] = $979 | $980;
      $$pre$phi$i$iZ2D = 44344 + ($977 + 2 << 2) | 0;
      $F$0$i$i = $978;
     } else {
      $984 = 44344 + ($977 + 2 << 2) | 0;
      $985 = HEAP32[$984 >> 2] | 0;
      if ($985 >>> 0 >= (HEAP32[11080] | 0) >>> 0) {
       $$pre$phi$i$iZ2D = $984;
       $F$0$i$i = $985;
       break;
      }
      _abort();
     } while (0);
     HEAP32[$$pre$phi$i$iZ2D >> 2] = $635;
     HEAP32[$F$0$i$i + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $F$0$i$i;
     HEAP32[$635 + 12 >> 2] = $978;
     break;
    }
    $991 = $970 >>> 8;
    if (!$991) $I1$0$i$i = 0; else if ($970 >>> 0 > 16777215) $I1$0$i$i = 31; else {
     $996 = ($991 + 1048320 | 0) >>> 16 & 8;
     $997 = $991 << $996;
     $1000 = ($997 + 520192 | 0) >>> 16 & 4;
     $1002 = $997 << $1000;
     $1005 = ($1002 + 245760 | 0) >>> 16 & 2;
     $1010 = 14 - ($1000 | $996 | $1005) + ($1002 << $1005 >>> 15) | 0;
     $I1$0$i$i = $970 >>> ($1010 + 7 | 0) & 1 | $1010 << 1;
    }
    $1016 = 44608 + ($I1$0$i$i << 2) | 0;
    HEAP32[$635 + 28 >> 2] = $I1$0$i$i;
    HEAP32[$635 + 20 >> 2] = 0;
    HEAP32[$941 >> 2] = 0;
    $1019 = HEAP32[11077] | 0;
    $1020 = 1 << $I1$0$i$i;
    if (!($1019 & $1020)) {
     HEAP32[11077] = $1019 | $1020;
     HEAP32[$1016 >> 2] = $635;
     HEAP32[$635 + 24 >> 2] = $1016;
     HEAP32[$635 + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $635;
     break;
    }
    $1027 = HEAP32[$1016 >> 2] | 0;
    if (($I1$0$i$i | 0) == 31) $1036 = 0; else $1036 = 25 - ($I1$0$i$i >>> 1) | 0;
    do if ((HEAP32[$1027 + 4 >> 2] & -8 | 0) == ($970 | 0)) $T$0$lcssa$i$i = $1027; else {
     $K2$08$i$i = $970 << $1036;
     $T$07$i$i = $1027;
     while (1) {
      $1044 = $T$07$i$i + ($K2$08$i$i >>> 31 << 2) + 16 | 0;
      $1039 = HEAP32[$1044 >> 2] | 0;
      if (!$1039) {
       $$lcssa148 = $1044;
       $T$07$i$i$lcssa = $T$07$i$i;
       break;
      }
      if ((HEAP32[$1039 + 4 >> 2] & -8 | 0) == ($970 | 0)) {
       $$lcssa151 = $1039;
       label = 353;
       break;
      } else {
       $K2$08$i$i = $K2$08$i$i << 1;
       $T$07$i$i = $1039;
      }
     }
     if ((label | 0) == 353) {
      $T$0$lcssa$i$i = $$lcssa151;
      break;
     }
     if ($$lcssa148 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
      HEAP32[$$lcssa148 >> 2] = $635;
      HEAP32[$635 + 24 >> 2] = $T$07$i$i$lcssa;
      HEAP32[$635 + 12 >> 2] = $635;
      HEAP32[$635 + 8 >> 2] = $635;
      break L325;
     }
    } while (0);
    $1051 = $T$0$lcssa$i$i + 8 | 0;
    $1052 = HEAP32[$1051 >> 2] | 0;
    $1053 = HEAP32[11080] | 0;
    if ($T$0$lcssa$i$i >>> 0 >= $1053 >>> 0 & $1052 >>> 0 >= $1053 >>> 0) {
     HEAP32[$1052 + 12 >> 2] = $635;
     HEAP32[$1051 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $1052;
     HEAP32[$635 + 12 >> 2] = $T$0$lcssa$i$i;
     HEAP32[$635 + 24 >> 2] = 0;
     break;
    } else _abort();
   }
  } while (0);
  $1060 = HEAP32[11079] | 0;
  if ($1060 >>> 0 > $nb$0 >>> 0) {
   $1062 = $1060 - $nb$0 | 0;
   HEAP32[11079] = $1062;
   $1063 = HEAP32[11082] | 0;
   HEAP32[11082] = $1063 + $nb$0;
   HEAP32[$1063 + ($nb$0 + 4) >> 2] = $1062 | 1;
   HEAP32[$1063 + 4 >> 2] = $nb$0 | 3;
   $mem$0 = $1063 + 8 | 0;
   return $mem$0 | 0;
  }
 }
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 $mem$0 = 0;
 return $mem$0 | 0;
}

function ___floatscan($f, $prec, $pok) {
 $f = $f | 0;
 $prec = $prec | 0;
 $pok = $pok | 0;
 var $$0 = 0.0, $$0$i27 = 0.0, $$012$i = 0, $$012$i$be = 0, $$012$i$lcssa = 0, $$013$i = 0, $$01335$i = 0, $$01336$i = 0, $$07$i = 0, $$0711$i = 0, $$0712$i = 0, $$1$be$i = 0, $$1$be$i$lcssa = 0, $$1$ph$i = 0, $$2$i = 0, $$21$i = 0, $$3$be$i = 0, $$3$be$i$lcssa = 0, $$3$lcssa$i = 0, $$3131$i = 0, $$in = 0, $$lcssa = 0, $$lcssa190 = 0, $$lcssa191 = 0, $$lcssa201 = 0, $$lcssa202 = 0, $$lcssa205 = 0, $$lcssa207 = 0, $$lcssa207$lcssa = 0, $$lcssa208 = 0, $$lcssa208$lcssa = 0, $$lcssa211 = 0, $$lcssa214 = 0, $$lcssa215 = 0, $$lcssa221 = 0, $$lcssa222 = 0, $$lcssa232 = 0, $$lcssa59$i = 0, $$old$i = 0, $$pn$i = 0.0, $$pre$i18 = 0, $$pre$phi$iZ2D = 0.0, $$sink$off0$us$i = 0, $$sink$off0$us102$i = 0, $0 = 0, $1 = 0, $109 = 0, $117 = 0, $119 = 0, $126 = 0, $133 = 0, $141 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $154 = 0, $156 = 0, $159 = 0, $16 = 0, $163 = 0, $165 = 0, $178 = 0.0, $185 = 0, $187 = 0, $196 = 0, $2 = 0, $200 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $218 = 0, $219 = 0, $220 = 0, $230 = 0, $231 = 0, $244 = 0, $246 = 0, $248 = 0, $249 = 0, $250 = 0, $251 = 0, $265 = 0, $267 = 0, $279 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $289 = 0, $29 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $304 = 0.0, $316 = 0.0, $324 = 0, $325 = 0, $332 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $352 = 0, $354 = 0, $355 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $364 = 0, $369 = 0, $370 = 0, $374 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $394 = 0, $395 = 0, $404 = 0, $405 = 0, $406 = 0, $414 = 0, $418 = 0, $42 = 0, $420 = 0, $421 = 0, $423 = 0, $436 = 0, $438 = 0, $448 = 0, $450 = 0, $462 = 0, $463 = 0, $464 = 0, $486 = 0, $498 = 0, $502 = 0, $505 = 0, $507 = 0, $508 = 0, $509 = 0, $512 = 0, $513 = 0, $526 = 0, $529 = 0, $531 = 0, $533 = 0, $534 = 0, $54 = 0, $540 = 0, $542 = 0, $547 = 0, $550 = 0, $555 = 0, $557 = 0, $559 = 0, $560 = 0, $566 = 0, $568 = 0, $573 = 0, $576 = 0, $580 = 0, $583 = 0, $588 = 0, $592 = 0, $593 = 0, $595 = 0, $599 = 0, $601 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $610 = 0, $611 = 0, $619 = 0, $625 = 0, $63 = 0, $632 = 0, $634 = 0.0, $636 = 0, $638 = 0, $643 = 0.0, $644 = 0.0, $647 = 0.0, $651 = 0, $654 = 0, $661 = 0.0, $679 = 0.0, $681 = 0, $697 = 0, $70 = 0, $707 = 0, $710 = 0, $719 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $84 = 0, $9 = 0, $93 = 0, $a$0$lcssa186$i = 0, $a$0110$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph47$i = 0, $a$2$ph47$i$lcssa = 0, $a$2$ph47$i$lcssa219 = 0, $a$2$ph47$i$ph = 0, $a$2$ph47$i220 = 0, $a$3$i = 0, $a$3$i$lcssa = 0, $a$3$i$lcssa198 = 0, $a$3$i$lcssa199 = 0, $a$3$i$ph = 0, $a$3$i200 = 0, $a$3$ph$i = 0, $a$487$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i24 = 0.0, $bits$0$ph = 0, $c$0 = 0, $c$0$i = 0, $c$0$i$be = 0, $c$0$i$lcssa = 0, $c$0$i$ph = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$186 = 0, $c$2 = 0, $c$2$i = 0, $c$2$i$be = 0, $c$2$i$ph = 0, $c$2$lcssa$i = 0, $c$4 = 0, $c$4$1 = 0, $c$6 = 0, $carry$0112$i = 0, $carry1$0$us$i = 0, $carry1$0$us98$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us$i$lcssa = 0, $carry1$1$us$i$lcssa$lcssa = 0, $carry1$1$us103$i = 0, $carry1$1$us103$i$lcssa = 0, $carry1$1$us103$i$lcssa$lcssa = 0, $carry3$090$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$033$i = 0, $denormal$034$i = 0, $denormal$2$i = 0, $e2$0$ph$i = 0, $e2$0$ph$i$lcssa = 0, $e2$0$us$i = 0, $e2$0$us93$i = 0, $e2$0$us93$i$lcssa = 0, $e2$1$i = 0, $e2$1$i$lcssa = 0, $e2$1$i$lcssa195 = 0, $e2$1$i$ph = 0, $e2$1$i197 = 0, $e2$1$ph$i = 0, $e2$1$ph$i$ph = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa = 0, $gotdig$0$i$lcssa193 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa = 0, $gotdig$0$i12$lcssa230 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i$ph = 0, $gotdig$2$i13 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3127$i = 0, $gotdig$3127$i$lcssa = 0, $gotdig$4$i = 0, $gotdig$4$i$lcssa = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i$ph = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1128$i = 0, $gotrad$2$i = 0, $gotrad$2$i$lcssa = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$085 = 0, $i$1 = 0, $i$4 = 0, $i$4$lcssa = 0, $j$0$lcssa$i = 0, $j$0130$i = 0, $j$0130$i$lcssa = 0, $j$076$i = 0, $j$077$i = 0, $j$078$i = 0, $j$2$i = 0, $j$2$i$lcssa = 0, $j$3119$i = 0, $k$0$lcssa$i = 0, $k$0129$i = 0, $k$0129$i$lcssa = 0, $k$072$i = 0, $k$073$i = 0, $k$074$i = 0, $k$2$i = 0, $k$2$i$lcssa = 0, $k$3$i = 0, $k$4111$i = 0, $k$5$in$us$i = 0, $k$5$in$us97$i = 0, $k$5$us$i = 0, $k$5$us99$i = 0, $k$688$i = 0, $lnz$0$lcssa$i = 0, $lnz$0126$i = 0, $lnz$0126$i$lcssa = 0, $lnz$066$i = 0, $lnz$067$i = 0, $lnz$068$i = 0, $lnz$2$i = 0, $lnz$2$i$lcssa = 0, $or$cond22$i = 0, $or$cond9$i = 0, $rp$0$lcssa187$i = 0, $rp$0109$i = 0, $rp$1$i19 = 0, $rp$1$i19$lcssa = 0, $rp$2$ph45$i = 0, $rp$2$ph45$i$lcssa = 0, $rp$2$ph45$i$ph = 0, $rp$3$i$ph = 0, $rp$3$ph43$i = 0, $rp$3$ph43$i$ph = 0, $rp$486$i = 0, $rp$5$i = 0, $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$325$i = 0, $x$4$lcssa$i = 0, $x$420$i = 0, $x$5$i = 0, $x$5$i$lcssa = 0, $x$i = 0, $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i23 = 0.0, $y$2$i = 0.0, $y$2$i25 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$321$i = 0.0, $y$4$i = 0.0, $y$4$i$lcssa = 0.0, $z$0$i = 0, $z$1$ph46$i = 0, $z$1$ph46$i$lcssa = 0, $z$1$ph46$i$ph = 0, $z$1$us$i = 0, $z$1$us94$i = 0, $z$1$us94$i$lcssa = 0, $z$2$us$i = 0, $z$2$us96$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us$i$lcssa = 0, $z$3$us$i$lcssa$lcssa = 0, $z$3$us106$i = 0, $z$3$us106$i$lcssa = 0, $z$3$us106$i$lcssa$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$5$ph$i$lcssa = 0, $z$5$ph$i$lcssa209 = 0, $z$5$ph$i$ph = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0, $k$4111$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $x$i = sp;
 if (!$prec) {
  $bits$0$ph = 24;
  $emin$0$ph = -149;
 } else if (($prec | 0) == 2) {
  $bits$0$ph = 53;
  $emin$0$ph = -1074;
 } else if (($prec | 0) == 1) {
  $bits$0$ph = 53;
  $emin$0$ph = -1074;
 } else {
  $$0 = 0.0;
  STACKTOP = sp;
  return +$$0;
 }
 $0 = $f + 4 | 0;
 $1 = $f + 100 | 0;
 do {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $2 + 1;
   $9 = HEAPU8[$2 >> 0] | 0;
  } else $9 = ___shgetc($f) | 0;
 } while ((_isspace($9) | 0) != 0);
 $$lcssa232 = $9;
 do if (($$lcssa232 | 0) == 43 | ($$lcssa232 | 0) == 45) {
  $15 = 1 - ((($$lcssa232 | 0) == 45 & 1) << 1) | 0;
  $16 = HEAP32[$0 >> 2] | 0;
  if ($16 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $16 + 1;
   $c$0 = HEAPU8[$16 >> 0] | 0;
   $sign$0 = $15;
   break;
  } else {
   $c$0 = ___shgetc($f) | 0;
   $sign$0 = $15;
   break;
  }
 } else {
  $c$0 = $$lcssa232;
  $sign$0 = 1;
 } while (0);
 $c$186 = $c$0;
 $i$085 = 0;
 while (1) {
  if (($c$186 | 32 | 0) != (HEAP8[45080 + $i$085 >> 0] | 0)) {
   $c$1$lcssa = $c$186;
   $i$0$lcssa = $i$085;
   break;
  }
  do if ($i$085 >>> 0 < 7) {
   $29 = HEAP32[$0 >> 2] | 0;
   if ($29 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $29 + 1;
    $c$2 = HEAPU8[$29 >> 0] | 0;
    break;
   } else {
    $c$2 = ___shgetc($f) | 0;
    break;
   }
  } else $c$2 = $c$186; while (0);
  $36 = $i$085 + 1 | 0;
  if ($36 >>> 0 < 8) {
   $c$186 = $c$2;
   $i$085 = $36;
  } else {
   $c$1$lcssa = $c$2;
   $i$0$lcssa = $36;
   break;
  }
 }
 do if (($i$0$lcssa | 0) == 3) label = 23; else if (($i$0$lcssa | 0) != 8) {
  $39 = ($pok | 0) != 0;
  if ($39 & $i$0$lcssa >>> 0 > 3) if (($i$0$lcssa | 0) == 8) break; else {
   label = 23;
   break;
  }
  do if (!$i$0$lcssa) {
   if (($c$1$lcssa | 32 | 0) == 110) {
    $54 = HEAP32[$0 >> 2] | 0;
    if ($54 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $54 + 1;
     $c$4 = HEAPU8[$54 >> 0] | 0;
    } else $c$4 = ___shgetc($f) | 0;
    if (($c$4 | 32 | 0) != 97) break;
    $710 = HEAP32[$0 >> 2] | 0;
    if ($710 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $710 + 1;
     $c$4$1 = HEAPU8[$710 >> 0] | 0;
    } else $c$4$1 = ___shgetc($f) | 0;
    if (($c$4$1 | 32 | 0) != 110) break;
    $63 = HEAP32[$0 >> 2] | 0;
    if ($63 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $63 + 1;
     $70 = HEAPU8[$63 >> 0] | 0;
    } else $70 = ___shgetc($f) | 0;
    if (($70 | 0) != 40) {
     if (!(HEAP32[$1 >> 2] | 0)) {
      $$0 = nan;
      STACKTOP = sp;
      return +$$0;
     }
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     $$0 = nan;
     STACKTOP = sp;
     return +$$0;
    }
    $i$4 = 1;
    while (1) {
     $76 = HEAP32[$0 >> 2] | 0;
     if ($76 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $76 + 1;
      $84 = HEAPU8[$76 >> 0] | 0;
     } else $84 = ___shgetc($f) | 0;
     if (!(($84 + -48 | 0) >>> 0 < 10 | ($84 + -65 | 0) >>> 0 < 26)) if (!(($84 | 0) == 95 | ($84 + -97 | 0) >>> 0 < 26)) {
      $$lcssa = $84;
      $i$4$lcssa = $i$4;
      break;
     }
     $i$4 = $i$4 + 1 | 0;
    }
    if (($$lcssa | 0) == 41) {
     $$0 = nan;
     STACKTOP = sp;
     return +$$0;
    }
    $93 = (HEAP32[$1 >> 2] | 0) == 0;
    if (!$93) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    if (!$39) {
     HEAP32[(___errno_location() | 0) >> 2] = 22;
     ___shlim($f, 0);
     $$0 = 0.0;
     STACKTOP = sp;
     return +$$0;
    }
    if (($i$4$lcssa | 0) == 0 | $93) {
     $$0 = nan;
     STACKTOP = sp;
     return +$$0;
    }
    $$in = $i$4$lcssa;
    do {
     $$in = $$in + -1 | 0;
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    } while (($$in | 0) != 0);
    $$0 = nan;
    STACKTOP = sp;
    return +$$0;
   }
   do if (($c$1$lcssa | 0) == 48) {
    $109 = HEAP32[$0 >> 2] | 0;
    if ($109 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $109 + 1;
     $117 = HEAPU8[$109 >> 0] | 0;
    } else $117 = ___shgetc($f) | 0;
    if (($117 | 32 | 0) != 120) {
     if (!(HEAP32[$1 >> 2] | 0)) {
      $c$6 = 48;
      break;
     }
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     $c$6 = 48;
     break;
    }
    $119 = HEAP32[$0 >> 2] | 0;
    if ($119 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $119 + 1;
     $c$0$i$ph = HEAPU8[$119 >> 0] | 0;
    } else $c$0$i$ph = ___shgetc($f) | 0;
    $c$0$i = $c$0$i$ph;
    $gotdig$0$i = 0;
    while (1) {
     if (($c$0$i | 0) == 46) {
      $gotdig$0$i$lcssa193 = $gotdig$0$i;
      label = 74;
      break;
     } else if (($c$0$i | 0) != 48) {
      $c$0$i$lcssa = $c$0$i;
      $gotdig$0$i$lcssa = $gotdig$0$i;
      label = 84;
      break;
     }
     $126 = HEAP32[$0 >> 2] | 0;
     if ($126 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $126 + 1;
      $c$0$i$be = HEAPU8[$126 >> 0] | 0;
     } else $c$0$i$be = ___shgetc($f) | 0;
     $c$0$i = $c$0$i$be;
     $gotdig$0$i = 1;
    }
    if ((label | 0) == 74) {
     $133 = HEAP32[$0 >> 2] | 0;
     if ($133 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $133 + 1;
      $c$1$ph$i = HEAPU8[$133 >> 0] | 0;
     } else $c$1$ph$i = ___shgetc($f) | 0;
     if (($c$1$ph$i | 0) == 48) {
      $148 = 0;
      $149 = 0;
      while (1) {
       $141 = HEAP32[$0 >> 2] | 0;
       if ($141 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $141 + 1;
        $152 = HEAPU8[$141 >> 0] | 0;
       } else $152 = ___shgetc($f) | 0;
       $150 = _i64Add($148 | 0, $149 | 0, -1, -1) | 0;
       $151 = tempRet0;
       if (($152 | 0) == 48) {
        $148 = $150;
        $149 = $151;
       } else {
        $$lcssa191 = $152;
        $721 = $150;
        $722 = $151;
        break;
       }
      }
      $719 = $721;
      $720 = $722;
      $c$2$i$ph = $$lcssa191;
      $gotdig$2$i$ph = 1;
      $gotrad$0$i$ph = 1;
     } else {
      $719 = 0;
      $720 = 0;
      $c$2$i$ph = $c$1$ph$i;
      $gotdig$2$i$ph = $gotdig$0$i$lcssa193;
      $gotrad$0$i$ph = 1;
     }
    } else if ((label | 0) == 84) {
     $719 = 0;
     $720 = 0;
     $c$2$i$ph = $c$0$i$lcssa;
     $gotdig$2$i$ph = $gotdig$0$i$lcssa;
     $gotrad$0$i$ph = 0;
    }
    $163 = 0;
    $165 = 0;
    $723 = $719;
    $724 = $720;
    $c$2$i = $c$2$i$ph;
    $gotdig$2$i = $gotdig$2$i$ph;
    $gotrad$0$i = $gotrad$0$i$ph;
    $gottail$0$i = 0;
    $scale$0$i = 1.0;
    $x$0$i = 0;
    $y$0$i = 0.0;
    L124 : while (1) {
     $154 = $c$2$i + -48 | 0;
     do if ($154 >>> 0 < 10) {
      $d$0$i = $154;
      label = 91;
     } else {
      $156 = $c$2$i | 32;
      $159 = ($c$2$i | 0) == 46;
      if (!($159 | ($156 + -97 | 0) >>> 0 < 6)) {
       $207 = $723;
       $208 = $165;
       $210 = $724;
       $211 = $163;
       $c$2$lcssa$i = $c$2$i;
       $gotdig$2$i$lcssa = $gotdig$2$i;
       $gotrad$0$i$lcssa = $gotrad$0$i;
       $x$0$i$lcssa = $x$0$i;
       $y$0$i$lcssa = $y$0$i;
       break L124;
      }
      if ($159) if (!$gotrad$0$i) {
       $725 = $165;
       $726 = $163;
       $727 = $165;
       $728 = $163;
       $gotdig$3$i = $gotdig$2$i;
       $gotrad$1$i = 1;
       $gottail$2$i = $gottail$0$i;
       $scale$2$i = $scale$0$i;
       $x$2$i = $x$0$i;
       $y$2$i = $y$0$i;
       break;
      } else {
       $207 = $723;
       $208 = $165;
       $210 = $724;
       $211 = $163;
       $c$2$lcssa$i = 46;
       $gotdig$2$i$lcssa = $gotdig$2$i;
       $gotrad$0$i$lcssa = $gotrad$0$i;
       $x$0$i$lcssa = $x$0$i;
       $y$0$i$lcssa = $y$0$i;
       break L124;
      } else {
       $d$0$i = ($c$2$i | 0) > 57 ? $156 + -87 | 0 : $154;
       label = 91;
       break;
      }
     } while (0);
     if ((label | 0) == 91) {
      label = 0;
      do if (($163 | 0) < 0 | ($163 | 0) == 0 & $165 >>> 0 < 8) {
       $gottail$1$i = $gottail$0$i;
       $scale$1$i = $scale$0$i;
       $x$1$i = $d$0$i + ($x$0$i << 4) | 0;
       $y$1$i = $y$0$i;
      } else {
       if (($163 | 0) < 0 | ($163 | 0) == 0 & $165 >>> 0 < 14) {
        $178 = $scale$0$i * .0625;
        $gottail$1$i = $gottail$0$i;
        $scale$1$i = $178;
        $x$1$i = $x$0$i;
        $y$1$i = $y$0$i + $178 * +($d$0$i | 0);
        break;
       }
       if (($gottail$0$i | 0) != 0 | ($d$0$i | 0) == 0) {
        $gottail$1$i = $gottail$0$i;
        $scale$1$i = $scale$0$i;
        $x$1$i = $x$0$i;
        $y$1$i = $y$0$i;
       } else {
        $gottail$1$i = 1;
        $scale$1$i = $scale$0$i;
        $x$1$i = $x$0$i;
        $y$1$i = $y$0$i + $scale$0$i * .5;
       }
      } while (0);
      $185 = _i64Add($165 | 0, $163 | 0, 1, 0) | 0;
      $725 = $723;
      $726 = $724;
      $727 = $185;
      $728 = tempRet0;
      $gotdig$3$i = 1;
      $gotrad$1$i = $gotrad$0$i;
      $gottail$2$i = $gottail$1$i;
      $scale$2$i = $scale$1$i;
      $x$2$i = $x$1$i;
      $y$2$i = $y$1$i;
     }
     $187 = HEAP32[$0 >> 2] | 0;
     if ($187 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $187 + 1;
      $c$2$i$be = HEAPU8[$187 >> 0] | 0;
     } else $c$2$i$be = ___shgetc($f) | 0;
     $163 = $728;
     $165 = $727;
     $723 = $725;
     $724 = $726;
     $c$2$i = $c$2$i$be;
     $gotdig$2$i = $gotdig$3$i;
     $gotrad$0$i = $gotrad$1$i;
     $gottail$0$i = $gottail$2$i;
     $scale$0$i = $scale$2$i;
     $x$0$i = $x$2$i;
     $y$0$i = $y$2$i;
    }
    if (!$gotdig$2$i$lcssa) {
     $196 = (HEAP32[$1 >> 2] | 0) == 0;
     if (!$196) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     if (!$pok) ___shlim($f, 0); else if (!$196) {
      $200 = HEAP32[$0 >> 2] | 0;
      HEAP32[$0 >> 2] = $200 + -1;
      if ($gotrad$0$i$lcssa) HEAP32[$0 >> 2] = $200 + -2;
     }
     $$0 = +($sign$0 | 0) * 0.0;
     STACKTOP = sp;
     return +$$0;
    }
    $206 = ($gotrad$0$i$lcssa | 0) == 0;
    $209 = $206 ? $208 : $207;
    $212 = $206 ? $211 : $210;
    if (($211 | 0) < 0 | ($211 | 0) == 0 & $208 >>> 0 < 8) {
     $219 = $208;
     $220 = $211;
     $x$325$i = $x$0$i$lcssa;
     while (1) {
      $218 = $x$325$i << 4;
      $219 = _i64Add($219 | 0, $220 | 0, 1, 0) | 0;
      $220 = tempRet0;
      if (!(($220 | 0) < 0 | ($220 | 0) == 0 & $219 >>> 0 < 8)) {
       $$lcssa190 = $218;
       break;
      } else $x$325$i = $218;
     }
     $x$3$lcssa$i = $$lcssa190;
    } else $x$3$lcssa$i = $x$0$i$lcssa;
    do if (($c$2$lcssa$i | 32 | 0) == 112) {
     $230 = _scanexp($f, $pok) | 0;
     $231 = tempRet0;
     if (($230 | 0) == 0 & ($231 | 0) == -2147483648) if (!$pok) {
      ___shlim($f, 0);
      $$0 = 0.0;
      STACKTOP = sp;
      return +$$0;
     } else {
      if (!(HEAP32[$1 >> 2] | 0)) {
       $248 = 0;
       $249 = 0;
       break;
      }
      HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      $248 = 0;
      $249 = 0;
      break;
     } else {
      $248 = $230;
      $249 = $231;
     }
    } else if (!(HEAP32[$1 >> 2] | 0)) {
     $248 = 0;
     $249 = 0;
    } else {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     $248 = 0;
     $249 = 0;
    } while (0);
    $244 = _bitshift64Shl($209 | 0, $212 | 0, 2) | 0;
    $246 = _i64Add($244 | 0, tempRet0 | 0, -32, -1) | 0;
    $250 = _i64Add($246 | 0, tempRet0 | 0, $248 | 0, $249 | 0) | 0;
    $251 = tempRet0;
    if (!$x$3$lcssa$i) {
     $$0 = +($sign$0 | 0) * 0.0;
     STACKTOP = sp;
     return +$$0;
    }
    if (($251 | 0) > 0 | ($251 | 0) == 0 & $250 >>> 0 > (0 - $emin$0$ph | 0) >>> 0) {
     HEAP32[(___errno_location() | 0) >> 2] = 34;
     $$0 = +($sign$0 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
     STACKTOP = sp;
     return +$$0;
    }
    $265 = $emin$0$ph + -106 | 0;
    $267 = (($265 | 0) < 0) << 31 >> 31;
    if (($251 | 0) < ($267 | 0) | ($251 | 0) == ($267 | 0) & $250 >>> 0 < $265 >>> 0) {
     HEAP32[(___errno_location() | 0) >> 2] = 34;
     $$0 = +($sign$0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
     STACKTOP = sp;
     return +$$0;
    }
    if (($x$3$lcssa$i | 0) > -1) {
     $282 = $250;
     $283 = $251;
     $x$420$i = $x$3$lcssa$i;
     $y$321$i = $y$0$i$lcssa;
     while (1) {
      $279 = $x$420$i << 1;
      if (!($y$321$i >= .5)) {
       $$pn$i = $y$321$i;
       $x$5$i = $279;
      } else {
       $$pn$i = $y$321$i + -1.0;
       $x$5$i = $279 | 1;
      }
      $y$4$i = $y$321$i + $$pn$i;
      $284 = _i64Add($282 | 0, $283 | 0, -1, -1) | 0;
      $285 = tempRet0;
      if (($x$5$i | 0) > -1) {
       $282 = $284;
       $283 = $285;
       $x$420$i = $x$5$i;
       $y$321$i = $y$4$i;
      } else {
       $729 = $284;
       $730 = $285;
       $x$5$i$lcssa = $x$5$i;
       $y$4$i$lcssa = $y$4$i;
       break;
      }
     }
     $291 = $729;
     $292 = $730;
     $x$4$lcssa$i = $x$5$i$lcssa;
     $y$3$lcssa$i = $y$4$i$lcssa;
    } else {
     $291 = $250;
     $292 = $251;
     $x$4$lcssa$i = $x$3$lcssa$i;
     $y$3$lcssa$i = $y$0$i$lcssa;
    }
    $289 = _i64Subtract(32, 0, $emin$0$ph | 0, (($emin$0$ph | 0) < 0) << 31 >> 31 | 0) | 0;
    $293 = _i64Add($291 | 0, $292 | 0, $289 | 0, tempRet0 | 0) | 0;
    $294 = tempRet0;
    if (0 > ($294 | 0) | 0 == ($294 | 0) & $bits$0$ph >>> 0 > $293 >>> 0) if (($293 | 0) < 0) {
     $$0711$i = 0;
     label = 139;
    } else {
     $$07$i = $293;
     label = 137;
    } else {
     $$07$i = $bits$0$ph;
     label = 137;
    }
    do if ((label | 0) == 137) {
     if (($$07$i | 0) < 53) {
      $$0711$i = $$07$i;
      label = 139;
      break;
     }
     $$0712$i = $$07$i;
     $$pre$phi$iZ2D = +($sign$0 | 0);
     $bias$0$i = 0.0;
    } while (0);
    if ((label | 0) == 139) {
     $304 = +($sign$0 | 0);
     $$0712$i = $$0711$i;
     $$pre$phi$iZ2D = $304;
     $bias$0$i = +_copysignl(+_scalbn(1.0, 84 - $$0711$i | 0), $304);
    }
    $or$cond9$i = ($x$4$lcssa$i & 1 | 0) == 0 & ($y$3$lcssa$i != 0.0 & ($$0712$i | 0) < 32);
    $316 = $$pre$phi$iZ2D * ($or$cond9$i ? 0.0 : $y$3$lcssa$i) + ($bias$0$i + $$pre$phi$iZ2D * +((($or$cond9$i & 1) + $x$4$lcssa$i | 0) >>> 0)) - $bias$0$i;
    if (!($316 != 0.0)) HEAP32[(___errno_location() | 0) >> 2] = 34;
    $$0 = +_scalbnl($316, $291);
    STACKTOP = sp;
    return +$$0;
   } else $c$6 = $c$1$lcssa; while (0);
   $sum$i = $emin$0$ph + $bits$0$ph | 0;
   $324 = 0 - $sum$i | 0;
   $$012$i = $c$6;
   $gotdig$0$i12 = 0;
   while (1) {
    if (($$012$i | 0) == 46) {
     $gotdig$0$i12$lcssa230 = $gotdig$0$i12;
     label = 151;
     break;
    } else if (($$012$i | 0) != 48) {
     $$012$i$lcssa = $$012$i;
     $gotdig$0$i12$lcssa = $gotdig$0$i12;
     label = 161;
     break;
    }
    $325 = HEAP32[$0 >> 2] | 0;
    if ($325 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $325 + 1;
     $$012$i$be = HEAPU8[$325 >> 0] | 0;
    } else $$012$i$be = ___shgetc($f) | 0;
    $$012$i = $$012$i$be;
    $gotdig$0$i12 = 1;
   }
   if ((label | 0) == 151) {
    $332 = HEAP32[$0 >> 2] | 0;
    if ($332 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $332 + 1;
     $$1$ph$i = HEAPU8[$332 >> 0] | 0;
    } else $$1$ph$i = ___shgetc($f) | 0;
    if (($$1$ph$i | 0) == 48) {
     $340 = 0;
     $341 = 0;
     while (1) {
      $342 = _i64Add($340 | 0, $341 | 0, -1, -1) | 0;
      $343 = tempRet0;
      $344 = HEAP32[$0 >> 2] | 0;
      if ($344 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
       HEAP32[$0 >> 2] = $344 + 1;
       $$1$be$i = HEAPU8[$344 >> 0] | 0;
      } else $$1$be$i = ___shgetc($f) | 0;
      if (($$1$be$i | 0) == 48) {
       $340 = $342;
       $341 = $343;
      } else {
       $$1$be$i$lcssa = $$1$be$i;
       $733 = $342;
       $734 = $343;
       break;
      }
     }
     $$2$i = $$1$be$i$lcssa;
     $731 = $733;
     $732 = $734;
     $gotdig$2$i13 = 1;
     $gotrad$0$i14 = 1;
    } else {
     $$2$i = $$1$ph$i;
     $731 = 0;
     $732 = 0;
     $gotdig$2$i13 = $gotdig$0$i12$lcssa230;
     $gotrad$0$i14 = 1;
    }
   } else if ((label | 0) == 161) {
    $$2$i = $$012$i$lcssa;
    $731 = 0;
    $732 = 0;
    $gotdig$2$i13 = $gotdig$0$i12$lcssa;
    $gotrad$0$i14 = 0;
   }
   HEAP32[$x$i >> 2] = 0;
   $352 = $$2$i + -48 | 0;
   $354 = ($$2$i | 0) == 46;
   do if ($354 | $352 >>> 0 < 10) {
    $355 = $x$i + 496 | 0;
    $$3131$i = $$2$i;
    $358 = 0;
    $359 = 0;
    $735 = $354;
    $736 = $352;
    $737 = $731;
    $738 = $732;
    $gotdig$3127$i = $gotdig$2$i13;
    $gotrad$1128$i = $gotrad$0$i14;
    $j$0130$i = 0;
    $k$0129$i = 0;
    $lnz$0126$i = 0;
    L237 : while (1) {
     do if ($735) if (!$gotrad$1128$i) {
      $739 = $358;
      $740 = $359;
      $741 = $358;
      $742 = $359;
      $gotdig$4$i = $gotdig$3127$i;
      $gotrad$2$i = 1;
      $j$2$i = $j$0130$i;
      $k$2$i = $k$0129$i;
      $lnz$2$i = $lnz$0126$i;
     } else {
      $743 = $737;
      $744 = $738;
      $745 = $358;
      $746 = $359;
      $gotdig$3127$i$lcssa = $gotdig$3127$i;
      $j$0130$i$lcssa = $j$0130$i;
      $k$0129$i$lcssa = $k$0129$i;
      $lnz$0126$i$lcssa = $lnz$0126$i;
      label = 166;
      break L237;
     } else {
      $360 = _i64Add($358 | 0, $359 | 0, 1, 0) | 0;
      $361 = tempRet0;
      $362 = ($$3131$i | 0) != 48;
      if (($k$0129$i | 0) >= 125) {
       if (!$362) {
        $739 = $737;
        $740 = $738;
        $741 = $360;
        $742 = $361;
        $gotdig$4$i = $gotdig$3127$i;
        $gotrad$2$i = $gotrad$1128$i;
        $j$2$i = $j$0130$i;
        $k$2$i = $k$0129$i;
        $lnz$2$i = $lnz$0126$i;
        break;
       }
       HEAP32[$355 >> 2] = HEAP32[$355 >> 2] | 1;
       $739 = $737;
       $740 = $738;
       $741 = $360;
       $742 = $361;
       $gotdig$4$i = $gotdig$3127$i;
       $gotrad$2$i = $gotrad$1128$i;
       $j$2$i = $j$0130$i;
       $k$2$i = $k$0129$i;
       $lnz$2$i = $lnz$0126$i;
       break;
      }
      $364 = $x$i + ($k$0129$i << 2) | 0;
      if (!$j$0130$i) $storemerge$i = $736; else $storemerge$i = $$3131$i + -48 + ((HEAP32[$364 >> 2] | 0) * 10 | 0) | 0;
      HEAP32[$364 >> 2] = $storemerge$i;
      $369 = $j$0130$i + 1 | 0;
      $370 = ($369 | 0) == 9;
      $739 = $737;
      $740 = $738;
      $741 = $360;
      $742 = $361;
      $gotdig$4$i = 1;
      $gotrad$2$i = $gotrad$1128$i;
      $j$2$i = $370 ? 0 : $369;
      $k$2$i = ($370 & 1) + $k$0129$i | 0;
      $lnz$2$i = $362 ? $360 : $lnz$0126$i;
     } while (0);
     $374 = HEAP32[$0 >> 2] | 0;
     if ($374 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $374 + 1;
      $$3$be$i = HEAPU8[$374 >> 0] | 0;
     } else $$3$be$i = ___shgetc($f) | 0;
     $736 = $$3$be$i + -48 | 0;
     $735 = ($$3$be$i | 0) == 46;
     if (!($735 | $736 >>> 0 < 10)) {
      $$3$be$i$lcssa = $$3$be$i;
      $752 = $741;
      $753 = $742;
      $754 = $739;
      $755 = $740;
      $gotdig$4$i$lcssa = $gotdig$4$i;
      $gotrad$2$i$lcssa = $gotrad$2$i;
      $j$2$i$lcssa = $j$2$i;
      $k$2$i$lcssa = $k$2$i;
      $lnz$2$i$lcssa = $lnz$2$i;
      label = 177;
      break;
     } else {
      $$3131$i = $$3$be$i;
      $358 = $741;
      $359 = $742;
      $737 = $739;
      $738 = $740;
      $gotdig$3127$i = $gotdig$4$i;
      $gotrad$1128$i = $gotrad$2$i;
      $j$0130$i = $j$2$i;
      $k$0129$i = $k$2$i;
      $lnz$0126$i = $lnz$2$i;
     }
    }
    if ((label | 0) == 166) {
     $747 = $745;
     $748 = $746;
     $749 = $743;
     $750 = $744;
     $751 = ($gotdig$3127$i$lcssa | 0) != 0;
     $j$078$i = $j$0130$i$lcssa;
     $k$074$i = $k$0129$i$lcssa;
     $lnz$068$i = $lnz$0126$i$lcssa;
     label = 186;
     break;
    } else if ((label | 0) == 177) {
     $$3$lcssa$i = $$3$be$i$lcssa;
     $385 = $754;
     $386 = $752;
     $388 = $755;
     $389 = $753;
     $gotdig$3$lcssa$i = $gotdig$4$i$lcssa;
     $gotrad$1$lcssa$i = $gotrad$2$i$lcssa;
     $j$0$lcssa$i = $j$2$i$lcssa;
     $k$0$lcssa$i = $k$2$i$lcssa;
     $lnz$0$lcssa$i = $lnz$2$i$lcssa;
     label = 178;
     break;
    }
   } else {
    $$3$lcssa$i = $$2$i;
    $385 = $731;
    $386 = 0;
    $388 = $732;
    $389 = 0;
    $gotdig$3$lcssa$i = $gotdig$2$i13;
    $gotrad$1$lcssa$i = $gotrad$0$i14;
    $j$0$lcssa$i = 0;
    $k$0$lcssa$i = 0;
    $lnz$0$lcssa$i = 0;
    label = 178;
   } while (0);
   do if ((label | 0) == 178) {
    $384 = ($gotrad$1$lcssa$i | 0) == 0;
    $387 = $384 ? $386 : $385;
    $390 = $384 ? $389 : $388;
    $391 = ($gotdig$3$lcssa$i | 0) != 0;
    if (!(($$3$lcssa$i | 32 | 0) == 101 & $391)) if (($$3$lcssa$i | 0) > -1) {
     $747 = $386;
     $748 = $389;
     $749 = $387;
     $750 = $390;
     $751 = $391;
     $j$078$i = $j$0$lcssa$i;
     $k$074$i = $k$0$lcssa$i;
     $lnz$068$i = $lnz$0$lcssa$i;
     label = 186;
     break;
    } else {
     $756 = $386;
     $757 = $389;
     $758 = $391;
     $759 = $387;
     $760 = $390;
     $j$077$i = $j$0$lcssa$i;
     $k$073$i = $k$0$lcssa$i;
     $lnz$067$i = $lnz$0$lcssa$i;
     label = 188;
     break;
    }
    $394 = _scanexp($f, $pok) | 0;
    $395 = tempRet0;
    if (($394 | 0) == 0 & ($395 | 0) == -2147483648) {
     if (!$pok) {
      ___shlim($f, 0);
      $$0$i27 = 0.0;
      break;
     }
     if (!(HEAP32[$1 >> 2] | 0)) {
      $404 = 0;
      $405 = 0;
     } else {
      HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      $404 = 0;
      $405 = 0;
     }
    } else {
     $404 = $394;
     $405 = $395;
    }
    $406 = _i64Add($404 | 0, $405 | 0, $387 | 0, $390 | 0) | 0;
    $418 = $406;
    $420 = $386;
    $421 = tempRet0;
    $423 = $389;
    $j$076$i = $j$0$lcssa$i;
    $k$072$i = $k$0$lcssa$i;
    $lnz$066$i = $lnz$0$lcssa$i;
    label = 190;
   } while (0);
   if ((label | 0) == 186) if (!(HEAP32[$1 >> 2] | 0)) {
    $756 = $747;
    $757 = $748;
    $758 = $751;
    $759 = $749;
    $760 = $750;
    $j$077$i = $j$078$i;
    $k$073$i = $k$074$i;
    $lnz$067$i = $lnz$068$i;
    label = 188;
   } else {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    if ($751) {
     $418 = $749;
     $420 = $747;
     $421 = $750;
     $423 = $748;
     $j$076$i = $j$078$i;
     $k$072$i = $k$074$i;
     $lnz$066$i = $lnz$068$i;
     label = 190;
    } else label = 189;
   }
   if ((label | 0) == 188) if ($758) {
    $418 = $759;
    $420 = $756;
    $421 = $760;
    $423 = $757;
    $j$076$i = $j$077$i;
    $k$072$i = $k$073$i;
    $lnz$066$i = $lnz$067$i;
    label = 190;
   } else label = 189;
   do if ((label | 0) == 189) {
    HEAP32[(___errno_location() | 0) >> 2] = 22;
    ___shlim($f, 0);
    $$0$i27 = 0.0;
   } else if ((label | 0) == 190) {
    $414 = HEAP32[$x$i >> 2] | 0;
    if (!$414) {
     $$0$i27 = +($sign$0 | 0) * 0.0;
     break;
    }
    if ((($423 | 0) < 0 | ($423 | 0) == 0 & $420 >>> 0 < 10) & (($418 | 0) == ($420 | 0) & ($421 | 0) == ($423 | 0))) if ($bits$0$ph >>> 0 > 30 | ($414 >>> $bits$0$ph | 0) == 0) {
     $$0$i27 = +($sign$0 | 0) * +($414 >>> 0);
     break;
    }
    $436 = ($emin$0$ph | 0) / -2 | 0;
    $438 = (($436 | 0) < 0) << 31 >> 31;
    if (($421 | 0) > ($438 | 0) | ($421 | 0) == ($438 | 0) & $418 >>> 0 > $436 >>> 0) {
     HEAP32[(___errno_location() | 0) >> 2] = 34;
     $$0$i27 = +($sign$0 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
     break;
    }
    $448 = $emin$0$ph + -106 | 0;
    $450 = (($448 | 0) < 0) << 31 >> 31;
    if (($421 | 0) < ($450 | 0) | ($421 | 0) == ($450 | 0) & $418 >>> 0 < $448 >>> 0) {
     HEAP32[(___errno_location() | 0) >> 2] = 34;
     $$0$i27 = +($sign$0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
     break;
    }
    if (!$j$076$i) $k$3$i = $k$072$i; else {
     if (($j$076$i | 0) < 9) {
      $462 = $x$i + ($k$072$i << 2) | 0;
      $464 = HEAP32[$462 >> 2] | 0;
      $j$3119$i = $j$076$i;
      while (1) {
       $463 = $464 * 10 | 0;
       if (($j$3119$i | 0) == 8) {
        $$lcssa222 = $463;
        break;
       } else {
        $464 = $463;
        $j$3119$i = $j$3119$i + 1 | 0;
       }
      }
      HEAP32[$462 >> 2] = $$lcssa222;
     }
     $k$3$i = $k$072$i + 1 | 0;
    }
    if (($lnz$066$i | 0) < 9) if (($lnz$066$i | 0) <= ($418 | 0) & ($418 | 0) < 18) {
     if (($418 | 0) == 9) {
      $$0$i27 = +($sign$0 | 0) * +((HEAP32[$x$i >> 2] | 0) >>> 0);
      break;
     }
     if (($418 | 0) < 9) {
      $$0$i27 = +($sign$0 | 0) * +((HEAP32[$x$i >> 2] | 0) >>> 0) / +(HEAP32[45096 + (8 - $418 << 2) >> 2] | 0);
      break;
     }
     $486 = $bits$0$ph + 27 + (Math_imul($418, -3) | 0) | 0;
     $$pre$i18 = HEAP32[$x$i >> 2] | 0;
     if (($486 | 0) > 30 | ($$pre$i18 >>> $486 | 0) == 0) {
      $$0$i27 = +($sign$0 | 0) * +($$pre$i18 >>> 0) * +(HEAP32[45096 + ($418 + -10 << 2) >> 2] | 0);
      break;
     }
    }
    $498 = ($418 | 0) % 9 | 0;
    if (!$498) {
     $a$2$ph47$i$ph = 0;
     $rp$2$ph45$i$ph = $418;
     $z$1$ph46$i$ph = $k$3$i;
    } else {
     $502 = ($418 | 0) > -1 ? $498 : $498 + 9 | 0;
     $505 = HEAP32[45096 + (8 - $502 << 2) >> 2] | 0;
     if (!$k$3$i) {
      $a$0$lcssa186$i = 0;
      $rp$0$lcssa187$i = $418;
      $z$0$i = 0;
     } else {
      $507 = 1e9 / ($505 | 0) | 0;
      $a$0110$i = 0;
      $carry$0112$i = 0;
      $k$4111$i = 0;
      $rp$0109$i = $418;
      while (1) {
       $508 = $x$i + ($k$4111$i << 2) | 0;
       $509 = HEAP32[$508 >> 2] | 0;
       $512 = (($509 >>> 0) / ($505 >>> 0) | 0) + $carry$0112$i | 0;
       HEAP32[$508 >> 2] = $512;
       $513 = Math_imul(($509 >>> 0) % ($505 >>> 0) | 0, $507) | 0;
       $k$4111$i$looptemp = $k$4111$i;
       $k$4111$i = $k$4111$i + 1 | 0;
       if (($k$4111$i$looptemp | 0) == ($a$0110$i | 0) & ($512 | 0) == 0) {
        $a$1$i = $k$4111$i & 127;
        $rp$1$i19 = $rp$0109$i + -9 | 0;
       } else {
        $a$1$i = $a$0110$i;
        $rp$1$i19 = $rp$0109$i;
       }
       if (($k$4111$i | 0) == ($k$3$i | 0)) {
        $$lcssa221 = $513;
        $a$1$i$lcssa = $a$1$i;
        $rp$1$i19$lcssa = $rp$1$i19;
        break;
       } else {
        $a$0110$i = $a$1$i;
        $carry$0112$i = $513;
        $rp$0109$i = $rp$1$i19;
       }
      }
      if (!$$lcssa221) {
       $a$0$lcssa186$i = $a$1$i$lcssa;
       $rp$0$lcssa187$i = $rp$1$i19$lcssa;
       $z$0$i = $k$3$i;
      } else {
       HEAP32[$x$i + ($k$3$i << 2) >> 2] = $$lcssa221;
       $a$0$lcssa186$i = $a$1$i$lcssa;
       $rp$0$lcssa187$i = $rp$1$i19$lcssa;
       $z$0$i = $k$3$i + 1 | 0;
      }
     }
     $a$2$ph47$i$ph = $a$0$lcssa186$i;
     $rp$2$ph45$i$ph = 9 - $502 + $rp$0$lcssa187$i | 0;
     $z$1$ph46$i$ph = $z$0$i;
    }
    $a$2$ph47$i = $a$2$ph47$i$ph;
    $e2$0$ph$i = 0;
    $rp$2$ph45$i = $rp$2$ph45$i$ph;
    $z$1$ph46$i = $z$1$ph46$i$ph;
    L322 : while (1) {
     $526 = $x$i + ($a$2$ph47$i << 2) | 0;
     if (($rp$2$ph45$i | 0) < 18) {
      $e2$0$us$i = $e2$0$ph$i;
      $z$1$us$i = $z$1$ph46$i;
      while (1) {
       $carry1$0$us$i = 0;
       $k$5$in$us$i = $z$1$us$i + 127 | 0;
       $z$2$us$i = $z$1$us$i;
       while (1) {
        $k$5$us$i = $k$5$in$us$i & 127;
        $529 = $x$i + ($k$5$us$i << 2) | 0;
        $531 = _bitshift64Shl(HEAP32[$529 >> 2] | 0, 0, 29) | 0;
        $533 = _i64Add($531 | 0, tempRet0 | 0, $carry1$0$us$i | 0, 0) | 0;
        $534 = tempRet0;
        if ($534 >>> 0 > 0 | ($534 | 0) == 0 & $533 >>> 0 > 1e9) {
         $540 = ___udivdi3($533 | 0, $534 | 0, 1e9, 0) | 0;
         $542 = ___uremdi3($533 | 0, $534 | 0, 1e9, 0) | 0;
         $$sink$off0$us$i = $542;
         $carry1$1$us$i = $540;
        } else {
         $$sink$off0$us$i = $533;
         $carry1$1$us$i = 0;
        }
        HEAP32[$529 >> 2] = $$sink$off0$us$i;
        $547 = ($k$5$us$i | 0) == ($a$2$ph47$i | 0);
        if (($k$5$us$i | 0) != ($z$2$us$i + 127 & 127 | 0) | $547) $z$3$us$i = $z$2$us$i; else $z$3$us$i = ($$sink$off0$us$i | 0) == 0 ? $k$5$us$i : $z$2$us$i;
        if ($547) {
         $carry1$1$us$i$lcssa = $carry1$1$us$i;
         $z$3$us$i$lcssa = $z$3$us$i;
         break;
        } else {
         $carry1$0$us$i = $carry1$1$us$i;
         $k$5$in$us$i = $k$5$us$i + -1 | 0;
         $z$2$us$i = $z$3$us$i;
        }
       }
       $550 = $e2$0$us$i + -29 | 0;
       if (!$carry1$1$us$i$lcssa) {
        $e2$0$us$i = $550;
        $z$1$us$i = $z$3$us$i$lcssa;
       } else {
        $$lcssa215 = $550;
        $carry1$1$us$i$lcssa$lcssa = $carry1$1$us$i$lcssa;
        $z$3$us$i$lcssa$lcssa = $z$3$us$i$lcssa;
        break;
       }
      }
      $$lcssa59$i = $$lcssa215;
      $carry1$1$lcssa$lcssa$i = $carry1$1$us$i$lcssa$lcssa;
      $z$3$lcssa$lcssa$i = $z$3$us$i$lcssa$lcssa;
     } else {
      if (($rp$2$ph45$i | 0) != 18) {
       $a$2$ph47$i$lcssa = $a$2$ph47$i;
       $e2$0$ph$i$lcssa = $e2$0$ph$i;
       $rp$2$ph45$i$lcssa = $rp$2$ph45$i;
       $z$1$ph46$i$lcssa = $z$1$ph46$i;
       label = 236;
       break;
      }
      $e2$0$us93$i = $e2$0$ph$i;
      $z$1$us94$i = $z$1$ph46$i;
      while (1) {
       if ((HEAP32[$526 >> 2] | 0) >>> 0 >= 9007199) {
        $a$2$ph47$i$lcssa219 = $a$2$ph47$i;
        $e2$0$us93$i$lcssa = $e2$0$us93$i;
        $z$1$us94$i$lcssa = $z$1$us94$i;
        label = 235;
        break L322;
       }
       $carry1$0$us98$i = 0;
       $k$5$in$us97$i = $z$1$us94$i + 127 | 0;
       $z$2$us96$i = $z$1$us94$i;
       while (1) {
        $k$5$us99$i = $k$5$in$us97$i & 127;
        $555 = $x$i + ($k$5$us99$i << 2) | 0;
        $557 = _bitshift64Shl(HEAP32[$555 >> 2] | 0, 0, 29) | 0;
        $559 = _i64Add($557 | 0, tempRet0 | 0, $carry1$0$us98$i | 0, 0) | 0;
        $560 = tempRet0;
        if ($560 >>> 0 > 0 | ($560 | 0) == 0 & $559 >>> 0 > 1e9) {
         $566 = ___udivdi3($559 | 0, $560 | 0, 1e9, 0) | 0;
         $568 = ___uremdi3($559 | 0, $560 | 0, 1e9, 0) | 0;
         $$sink$off0$us102$i = $568;
         $carry1$1$us103$i = $566;
        } else {
         $$sink$off0$us102$i = $559;
         $carry1$1$us103$i = 0;
        }
        HEAP32[$555 >> 2] = $$sink$off0$us102$i;
        $573 = ($k$5$us99$i | 0) == ($a$2$ph47$i | 0);
        if (($k$5$us99$i | 0) != ($z$2$us96$i + 127 & 127 | 0) | $573) $z$3$us106$i = $z$2$us96$i; else $z$3$us106$i = ($$sink$off0$us102$i | 0) == 0 ? $k$5$us99$i : $z$2$us96$i;
        if ($573) {
         $carry1$1$us103$i$lcssa = $carry1$1$us103$i;
         $z$3$us106$i$lcssa = $z$3$us106$i;
         break;
        } else {
         $carry1$0$us98$i = $carry1$1$us103$i;
         $k$5$in$us97$i = $k$5$us99$i + -1 | 0;
         $z$2$us96$i = $z$3$us106$i;
        }
       }
       $576 = $e2$0$us93$i + -29 | 0;
       if (!$carry1$1$us103$i$lcssa) {
        $e2$0$us93$i = $576;
        $z$1$us94$i = $z$3$us106$i$lcssa;
       } else {
        $$lcssa214 = $576;
        $carry1$1$us103$i$lcssa$lcssa = $carry1$1$us103$i$lcssa;
        $z$3$us106$i$lcssa$lcssa = $z$3$us106$i$lcssa;
        break;
       }
      }
      $$lcssa59$i = $$lcssa214;
      $carry1$1$lcssa$lcssa$i = $carry1$1$us103$i$lcssa$lcssa;
      $z$3$lcssa$lcssa$i = $z$3$us106$i$lcssa$lcssa;
     }
     $580 = $a$2$ph47$i + 127 & 127;
     if (($580 | 0) == ($z$3$lcssa$lcssa$i | 0)) {
      $583 = $z$3$lcssa$lcssa$i + 127 & 127;
      $588 = $x$i + (($z$3$lcssa$lcssa$i + 126 & 127) << 2) | 0;
      HEAP32[$588 >> 2] = HEAP32[$588 >> 2] | HEAP32[$x$i + ($583 << 2) >> 2];
      $z$4$i = $583;
     } else $z$4$i = $z$3$lcssa$lcssa$i;
     HEAP32[$x$i + ($580 << 2) >> 2] = $carry1$1$lcssa$lcssa$i;
     $a$2$ph47$i = $580;
     $e2$0$ph$i = $$lcssa59$i;
     $rp$2$ph45$i = $rp$2$ph45$i + 9 | 0;
     $z$1$ph46$i = $z$4$i;
    }
    if ((label | 0) == 235) {
     $a$2$ph47$i220 = $a$2$ph47$i$lcssa219;
     $e2$1$ph$i$ph = $e2$0$us93$i$lcssa;
     $rp$3$ph43$i$ph = 18;
     $z$5$ph$i$ph = $z$1$us94$i$lcssa;
    } else if ((label | 0) == 236) {
     $a$2$ph47$i220 = $a$2$ph47$i$lcssa;
     $e2$1$ph$i$ph = $e2$0$ph$i$lcssa;
     $rp$3$ph43$i$ph = $rp$2$ph45$i$lcssa;
     $z$5$ph$i$ph = $z$1$ph46$i$lcssa;
    }
    $a$3$ph$i = $a$2$ph47$i220;
    $e2$1$ph$i = $e2$1$ph$i$ph;
    $rp$3$ph43$i = $rp$3$ph43$i$ph;
    $z$5$ph$i = $z$5$ph$i$ph;
    L361 : while (1) {
     $619 = $z$5$ph$i + 1 & 127;
     $625 = $x$i + (($z$5$ph$i + 127 & 127) << 2) | 0;
     $a$3$i$ph = $a$3$ph$i;
     $e2$1$i$ph = $e2$1$ph$i;
     $rp$3$i$ph = $rp$3$ph43$i;
     while (1) {
      $$old$i = ($rp$3$i$ph | 0) == 18;
      $$21$i = ($rp$3$i$ph | 0) > 27 ? 9 : 1;
      $a$3$i = $a$3$i$ph;
      $e2$1$i = $e2$1$i$ph;
      while (1) {
       $592 = $a$3$i & 127;
       $593 = ($592 | 0) == ($z$5$ph$i | 0);
       do if ($593) label = 254; else {
        $595 = HEAP32[$x$i + ($592 << 2) >> 2] | 0;
        if ($595 >>> 0 < 9007199) {
         label = 254;
         break;
        }
        if ($595 >>> 0 > 9007199) break;
        $599 = $a$3$i + 1 & 127;
        if (($599 | 0) == ($z$5$ph$i | 0)) {
         label = 254;
         break;
        }
        $707 = HEAP32[$x$i + ($599 << 2) >> 2] | 0;
        if ($707 >>> 0 < 254740991) {
         label = 254;
         break;
        }
        if ($$old$i & $707 >>> 0 < 254740992) {
         $$lcssa201 = $592;
         $a$3$i$lcssa = $a$3$i;
         $e2$1$i$lcssa = $e2$1$i;
         $z$5$ph$i$lcssa = $z$5$ph$i;
         label = 267;
         break L361;
        }
       } while (0);
       if ((label | 0) == 254) {
        label = 0;
        if ($$old$i) {
         $$lcssa202 = $592;
         $$lcssa205 = $593;
         $$lcssa211 = $619;
         $a$3$i$lcssa198 = $a$3$i;
         $e2$1$i$lcssa195 = $e2$1$i;
         $z$5$ph$i$lcssa209 = $z$5$ph$i;
         label = 255;
         break L361;
        }
       }
       $601 = $$21$i + $e2$1$i | 0;
       if (($a$3$i | 0) == ($z$5$ph$i | 0)) {
        $a$3$i = $z$5$ph$i;
        $e2$1$i = $601;
       } else {
        $$lcssa207 = $601;
        $a$3$i$lcssa199 = $a$3$i;
        break;
       }
      }
      $604 = (1 << $$21$i) + -1 | 0;
      $605 = 1e9 >>> $$21$i;
      $a$487$i = $a$3$i$lcssa199;
      $carry3$090$i = 0;
      $k$688$i = $a$3$i$lcssa199;
      $rp$486$i = $rp$3$i$ph;
      while (1) {
       $606 = $x$i + ($k$688$i << 2) | 0;
       $607 = HEAP32[$606 >> 2] | 0;
       $610 = ($607 >>> $$21$i) + $carry3$090$i | 0;
       HEAP32[$606 >> 2] = $610;
       $611 = Math_imul($607 & $604, $605) | 0;
       $or$cond22$i = ($k$688$i | 0) == ($a$487$i | 0) & ($610 | 0) == 0;
       $k$688$i = $k$688$i + 1 & 127;
       $rp$5$i = $or$cond22$i ? $rp$486$i + -9 | 0 : $rp$486$i;
       $a$5$i = $or$cond22$i ? $k$688$i : $a$487$i;
       if (($k$688$i | 0) == ($z$5$ph$i | 0)) {
        $$lcssa208 = $611;
        $a$5$i$lcssa = $a$5$i;
        $rp$5$i$lcssa = $rp$5$i;
        break;
       } else {
        $a$487$i = $a$5$i;
        $carry3$090$i = $611;
        $rp$486$i = $rp$5$i;
       }
      }
      if ($$lcssa208) {
       if (($619 | 0) != ($a$5$i$lcssa | 0)) {
        $$lcssa207$lcssa = $$lcssa207;
        $$lcssa208$lcssa = $$lcssa208;
        $a$5$i$lcssa$lcssa = $a$5$i$lcssa;
        $rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
        break;
       }
       HEAP32[$625 >> 2] = HEAP32[$625 >> 2] | 1;
      }
      $a$3$i$ph = $a$5$i$lcssa;
      $e2$1$i$ph = $$lcssa207;
      $rp$3$i$ph = $rp$5$i$lcssa;
     }
     HEAP32[$x$i + ($z$5$ph$i << 2) >> 2] = $$lcssa208$lcssa;
     $a$3$ph$i = $a$5$i$lcssa$lcssa;
     $e2$1$ph$i = $$lcssa207$lcssa;
     $rp$3$ph43$i = $rp$5$i$lcssa$lcssa;
     $z$5$ph$i = $619;
    }
    if ((label | 0) == 255) if ($$lcssa205) {
     HEAP32[$x$i + ($$lcssa211 + -1 << 2) >> 2] = 0;
     $632 = $z$5$ph$i$lcssa209;
     $a$3$i200 = $a$3$i$lcssa198;
     $e2$1$i197 = $e2$1$i$lcssa195;
     $z$7$i = $$lcssa211;
    } else {
     $632 = $$lcssa202;
     $a$3$i200 = $a$3$i$lcssa198;
     $e2$1$i197 = $e2$1$i$lcssa195;
     $z$7$i = $z$5$ph$i$lcssa209;
    } else if ((label | 0) == 267) {
     $632 = $$lcssa201;
     $a$3$i200 = $a$3$i$lcssa;
     $e2$1$i197 = $e2$1$i$lcssa;
     $z$7$i = $z$5$ph$i$lcssa;
    }
    $634 = +((HEAP32[$x$i + ($632 << 2) >> 2] | 0) >>> 0);
    $636 = $a$3$i200 + 1 & 127;
    if (($636 | 0) == ($z$7$i | 0)) {
     $697 = $z$7$i + 1 & 127;
     HEAP32[$x$i + ($697 + -1 << 2) >> 2] = 0;
     $z$7$1$i = $697;
    } else $z$7$1$i = $z$7$i;
    $661 = +($sign$0 | 0);
    $643 = $661 * ($634 * 1.0e9 + +((HEAP32[$x$i + ($636 << 2) >> 2] | 0) >>> 0));
    $681 = $e2$1$i197 + 53 | 0;
    $638 = $681 - $emin$0$ph | 0;
    if (($638 | 0) < ($bits$0$ph | 0)) if (($638 | 0) < 0) {
     $$01335$i = 0;
     $denormal$034$i = 1;
     label = 271;
    } else {
     $$013$i = $638;
     $denormal$0$i = 1;
     label = 270;
    } else {
     $$013$i = $bits$0$ph;
     $denormal$0$i = 0;
     label = 270;
    }
    if ((label | 0) == 270) if (($$013$i | 0) < 53) {
     $$01335$i = $$013$i;
     $denormal$034$i = $denormal$0$i;
     label = 271;
    } else {
     $$01336$i = $$013$i;
     $bias$0$i24 = 0.0;
     $denormal$033$i = $denormal$0$i;
     $frac$0$i = 0.0;
     $y$1$i23 = $643;
    }
    if ((label | 0) == 271) {
     $644 = +_copysignl(+_scalbn(1.0, 105 - $$01335$i | 0), $643);
     $647 = +_fmodl($643, +_scalbn(1.0, 53 - $$01335$i | 0));
     $$01336$i = $$01335$i;
     $bias$0$i24 = $644;
     $denormal$033$i = $denormal$034$i;
     $frac$0$i = $647;
     $y$1$i23 = $644 + ($643 - $647);
    }
    $651 = $a$3$i200 + 2 & 127;
    do if (($651 | 0) == ($z$7$1$i | 0)) $frac$2$i = $frac$0$i; else {
     $654 = HEAP32[$x$i + ($651 << 2) >> 2] | 0;
     do if ($654 >>> 0 < 5e8) {
      if (!$654) if (($a$3$i200 + 3 & 127 | 0) == ($z$7$1$i | 0)) {
       $frac$1$i = $frac$0$i;
       break;
      }
      $frac$1$i = $661 * .25 + $frac$0$i;
     } else {
      if ($654 >>> 0 > 5e8) {
       $frac$1$i = $661 * .75 + $frac$0$i;
       break;
      }
      if (($a$3$i200 + 3 & 127 | 0) == ($z$7$1$i | 0)) {
       $frac$1$i = $661 * .5 + $frac$0$i;
       break;
      } else {
       $frac$1$i = $661 * .75 + $frac$0$i;
       break;
      }
     } while (0);
     if ((53 - $$01336$i | 0) <= 1) {
      $frac$2$i = $frac$1$i;
      break;
     }
     if (+_fmodl($frac$1$i, 1.0) != 0.0) {
      $frac$2$i = $frac$1$i;
      break;
     }
     $frac$2$i = $frac$1$i + 1.0;
    } while (0);
    $679 = $y$1$i23 + $frac$2$i - $bias$0$i24;
    do if (($681 & 2147483647 | 0) > (-2 - $sum$i | 0)) {
     if (!(+Math_abs(+$679) >= 9007199254740992.0)) {
      $denormal$2$i = $denormal$033$i;
      $e2$2$i = $e2$1$i197;
      $y$2$i25 = $679;
     } else {
      $denormal$2$i = ($$01336$i | 0) == ($638 | 0) & ($denormal$033$i | 0) != 0 ? 0 : $denormal$033$i;
      $e2$2$i = $e2$1$i197 + 1 | 0;
      $y$2$i25 = $679 * .5;
     }
     if (($e2$2$i + 50 | 0) <= ($324 | 0)) if (!($frac$2$i != 0.0 & ($denormal$2$i | 0) != 0)) {
      $e2$3$i = $e2$2$i;
      $y$3$i = $y$2$i25;
      break;
     }
     HEAP32[(___errno_location() | 0) >> 2] = 34;
     $e2$3$i = $e2$2$i;
     $y$3$i = $y$2$i25;
    } else {
     $e2$3$i = $e2$1$i197;
     $y$3$i = $679;
    } while (0);
    $$0$i27 = +_scalbnl($y$3$i, $e2$3$i);
   } while (0);
   $$0 = $$0$i27;
   STACKTOP = sp;
   return +$$0;
  } while (0);
  if (HEAP32[$1 >> 2] | 0) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  ___shlim($f, 0);
  $$0 = 0.0;
  STACKTOP = sp;
  return +$$0;
 } while (0);
 if ((label | 0) == 23) {
  $42 = (HEAP32[$1 >> 2] | 0) == 0;
  if (!$42) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  if (!($i$0$lcssa >>> 0 < 4 | ($pok | 0) == 0 | $42)) {
   $i$1 = $i$0$lcssa;
   do {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    $i$1 = $i$1 + -1 | 0;
   } while ($i$1 >>> 0 > 3);
  }
 }
 $$0 = +($sign$0 | 0) * inf;
 STACKTOP = sp;
 return +$$0;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, $__e, $__intl, $__loc, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i125 = 0, $$0$i$i$i$i157 = 0, $$0$i$i$i$i182 = 0, $$0$i$i$i$i30 = 0, $$0$i$i$i$i51 = 0, $$0$i$i$i$i91 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i131 = 0, $$0$i$i1$i$i163 = 0, $$0$i$i1$i$i188 = 0, $$0$i$i1$i$i36 = 0, $$0$i$i1$i$i57 = 0, $$0$i$i1$i$i97 = 0, $$0$i$i109 = 0, $$0$i$i118 = 0, $$0$i$i121 = 0, $$0$i$i143 = 0, $$0$i$i154 = 0, $$0$i$i178 = 0, $$0$i$i45 = 0, $$0$i$i49 = 0, $$0$i$i66 = 0, $$0$i$i72 = 0, $$0$i$i77 = 0, $$0$i$i85 = 0, $$0$i$i88 = 0, $$302 = 0, $$lcssa = 0, $$lcssa342 = 0, $$lcssa346 = 0, $$lcssa348 = 0, $$lcssa349 = 0, $$lcssa351 = 0, $$ph = 0, $$ph341 = 0, $$pre$i3$i$i133 = 0, $$pre$i3$i$i165 = 0, $$pre$i3$i$i190 = 0, $$pre$i3$i$i190281 = 0, $$pre$i3$i$i190282 = 0, $$pre$i3$i$i59 = 0, $$pre$i3$i$i59275 = 0, $$pre$i3$i$i59277 = 0, $$pre$i3$i$i99 = 0, $$pre$i3$i$i99287$ph = 0, $$pre$i3$i$i99287297 = 0, $0 = 0, $1 = 0, $102 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $114 = 0, $115 = 0, $119 = 0, $124 = 0, $127 = 0, $13 = 0, $134 = 0, $135 = 0, $139 = 0, $142 = 0, $149 = 0, $150 = 0, $154 = 0, $155 = 0, $157 = 0, $16 = 0, $164 = 0, $165 = 0, $17 = 0, $171 = 0, $172 = 0, $174 = 0, $175 = 0, $176 = 0, $18 = 0, $183 = 0, $184 = 0, $188 = 0, $19 = 0, $190 = 0, $192 = 0, $196 = 0, $198 = 0, $203 = 0, $204 = 0, $209 = 0, $21 = 0, $214 = 0, $219 = 0, $22 = 0, $221 = 0, $223 = 0, $226 = 0, $23 = 0, $230 = 0, $231 = 0, $235 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $249 = 0, $25 = 0, $252 = 0, $258 = 0, $26 = 0, $263 = 0, $264 = 0, $268 = 0, $27 = 0, $273 = 0, $274 = 0, $275 = 0, $282 = 0, $285 = 0, $29 = 0, $291 = 0, $293 = 0, $295 = 0, $302 = 0, $303 = 0, $307 = 0, $312 = 0, $313 = 0, $314 = 0, $317 = 0, $32 = 0, $321 = 0, $324 = 0, $330 = 0, $335 = 0, $336 = 0, $345 = 0, $346 = 0, $347 = 0, $354 = 0, $357 = 0, $363 = 0, $372 = 0, $373 = 0, $382 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $397 = 0, $398 = 0, $40 = 0, $402 = 0, $403 = 0, $405 = 0, $409 = 0, $410 = 0, $412 = 0, $417 = 0, $418 = 0, $419 = 0, $426 = 0, $427 = 0, $428 = 0, $430 = 0, $434 = 0, $44 = 0, $440 = 0, $447 = 0, $448 = 0, $449 = 0, $451 = 0, $454 = 0, $461 = 0, $462 = 0, $466 = 0, $469 = 0, $47 = 0, $476 = 0, $477 = 0, $481 = 0, $482 = 0, $484 = 0, $491 = 0, $492 = 0, $497 = 0, $498 = 0, $499 = 0, $506 = 0, $510 = 0, $518 = 0, $519 = 0, $523 = 0, $526 = 0, $533 = 0, $534 = 0, $538 = 0, $54 = 0, $541 = 0, $548 = 0, $549 = 0, $55 = 0, $553 = 0, $554 = 0, $556 = 0, $563 = 0, $564 = 0, $570 = 0, $571 = 0, $573 = 0, $576 = 0, $579 = 0, $581 = 0, $587 = 0, $592 = 0, $594 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $600 = 0, $607 = 0, $615 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $621 = 0, $624 = 0, $63 = 0, $631 = 0, $632 = 0, $638 = 0, $645 = 0, $646 = 0, $650 = 0, $652 = 0, $659 = 0, $660 = 0, $667 = 0, $668 = 0, $669 = 0, $676 = 0, $679 = 0, $681 = 0, $684 = 0, $691 = 0, $692 = 0, $696 = 0, $699 = 0, $706 = 0, $707 = 0, $711 = 0, $712 = 0, $714 = 0, $721 = 0, $722 = 0, $728 = 0, $729 = 0, $736 = 0, $738 = 0, $740 = 0, $747 = 0, $748 = 0, $751 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $763 = 0, $77 = 0, $773 = 0, $774 = 0, $775 = 0, $782 = 0, $783 = 0, $786 = 0, $79 = 0, $793 = 0, $794 = 0, $798 = 0, $801 = 0, $808 = 0, $809 = 0, $813 = 0, $815 = 0, $82 = 0, $822 = 0, $823 = 0, $831 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $846 = 0, $849 = 0, $855 = 0, $858 = 0, $86 = 0, $860 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $88 = 0, $95 = 0, $96 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__i$0$i$i = 0, $__i$0$i$i14 = 0, $__i$0$i$i16 = 0, $__i$0$i$i20 = 0, $__i$0$i$i25 = 0, $__ng$0 = 0, $__ng$0$lcssa343 = 0, $__ng$1 = 0, $__nsn = 0, $__p$0 = 0, $__pat = 0, $__psn = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0 = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$1 = 0, $__ts = 0, $lpad$phi$index = 0, $lpad$phi$index8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $0 = sp + 496 | 0;
 $__gbuf = sp + 96 | 0;
 $__gb = sp + 88 | 0;
 $__gn = sp + 80 | 0;
 $__ge = sp + 76 | 0;
 $__pat = sp + 500 | 0;
 $__dp = sp + 72 | 0;
 $__ts = sp + 68 | 0;
 $__grp = sp + 56 | 0;
 $__sym = sp + 44 | 0;
 $__psn = sp + 32 | 0;
 $__nsn = sp + 20 | 0;
 $__spaces = sp + 8 | 0;
 $__fd = sp + 4 | 0;
 $__et = sp;
 HEAP32[$0 >> 2] = $__we;
 HEAP32[$__gb >> 2] = $__gbuf;
 $1 = $__gb + 4 | 0;
 HEAP32[$1 >> 2] = 189;
 HEAP32[$__gn >> 2] = $__gbuf;
 HEAP32[$__ge >> 2] = $__gbuf + 400;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__grp + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 $__i$0$i$i14 = 0;
 while (1) {
  if (($__i$0$i$i14 | 0) == 3) break;
  HEAP32[$__sym + ($__i$0$i$i14 << 2) >> 2] = 0;
  $__i$0$i$i14 = $__i$0$i$i14 + 1 | 0;
 }
 $__i$0$i$i16 = 0;
 while (1) {
  if (($__i$0$i$i16 | 0) == 3) break;
  HEAP32[$__psn + ($__i$0$i$i16 << 2) >> 2] = 0;
  $__i$0$i$i16 = $__i$0$i$i16 + 1 | 0;
 }
 $__i$0$i$i20 = 0;
 while (1) {
  if (($__i$0$i$i20 | 0) == 3) break;
  HEAP32[$__nsn + ($__i$0$i$i20 << 2) >> 2] = 0;
  $__i$0$i$i20 = $__i$0$i$i20 + 1 | 0;
 }
 $__i$0$i$i25 = 0;
 while (1) {
  if (($__i$0$i$i25 | 0) == 3) break;
  HEAP32[$__spaces + ($__i$0$i$i25 << 2) >> 2] = 0;
  $__i$0$i$i25 = $__i$0$i$i25 + 1 | 0;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(2, $__intl | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__psn | 0, $__nsn | 0, $__fd | 0);
 $13 = __THREW__;
 __THREW__ = 0;
 L21 : do if ($13 & 1) {
  $77 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $77;
  $lpad$phi$index8 = tempRet0;
 } else {
  HEAP32[$__wn >> 2] = HEAP32[$__wb >> 2];
  $16 = $__nsn + 4 | 0;
  $17 = $__nsn + 8 | 0;
  $18 = $__psn + 4 | 0;
  $19 = $__psn + 8 | 0;
  $21 = ($__flags & 512 | 0) != 0;
  $22 = $__sym + 4 | 0;
  $23 = $__sym + 8 | 0;
  $24 = $__spaces + 4 | 0;
  $25 = $__spaces + 8 | 0;
  $26 = $__pat + 3 | 0;
  $27 = $__grp + 4 | 0;
  $862 = $__gbuf;
  $__p$0 = 0;
  $__trailing_sign$0 = 0;
  L24 : while (1) {
   if ($__p$0 >>> 0 >= 4) {
    $$lcssa351 = $862;
    $__trailing_sign$0$lcssa = $__trailing_sign$0;
    label = 319;
    break;
   }
   $29 = HEAP32[$__b >> 2] | 0;
   do if (!$29) $863 = 1; else {
    $32 = HEAP32[$29 + 12 >> 2] | 0;
    if (($32 | 0) == (HEAP32[$29 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $39 = invoke_ii(HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] | 0, $29 | 0) | 0;
     $40 = __THREW__;
     __THREW__ = 0;
     if ($40 & 1) {
      label = 42;
      break L24;
     } else $$0$i$i$i$i30 = $39;
    } else $$0$i$i$i$i30 = HEAP32[$32 >> 2] | 0;
    if (($$0$i$i$i$i30 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $863 = 1;
     break;
    } else {
     $863 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   $44 = HEAP32[$__e >> 2] | 0;
   do if (!$44) label = 32; else {
    $47 = HEAP32[$44 + 12 >> 2] | 0;
    if (($47 | 0) == (HEAP32[$44 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $54 = invoke_ii(HEAP32[(HEAP32[$44 >> 2] | 0) + 36 >> 2] | 0, $44 | 0) | 0;
     $55 = __THREW__;
     __THREW__ = 0;
     if ($55 & 1) {
      label = 42;
      break L24;
     } else $$0$i$i1$i$i36 = $54;
    } else $$0$i$i1$i$i36 = HEAP32[$47 >> 2] | 0;
    if (($$0$i$i1$i$i36 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 32;
     break;
    } else if ($863) {
     $864 = $44;
     break;
    } else {
     $$lcssa351 = $862;
     $__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 319;
     break L24;
    }
   } while (0);
   if ((label | 0) == 32) {
    label = 0;
    if ($863) {
     $$lcssa351 = $862;
     $__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 319;
     break;
    } else $864 = 0;
   }
   L49 : do switch (HEAP8[$__pat + $__p$0 >> 0] | 0) {
   case 1:
    {
     if (($__p$0 | 0) == 3) {
      $865 = $862;
      $__trailing_sign$1 = $__trailing_sign$0;
     } else {
      $86 = HEAP32[$__b >> 2] | 0;
      $88 = HEAP32[$86 + 12 >> 2] | 0;
      if (($88 | 0) == (HEAP32[$86 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $95 = invoke_ii(HEAP32[(HEAP32[$86 >> 2] | 0) + 36 >> 2] | 0, $86 | 0) | 0;
       $96 = __THREW__;
       __THREW__ = 0;
       if ($96 & 1) {
        label = 42;
        break L24;
       } else $$0$i$i45 = $95;
      } else $$0$i$i45 = HEAP32[$88 >> 2] | 0;
      __THREW__ = 0;
      $102 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 8192, $$0$i$i45 | 0) | 0;
      $103 = __THREW__;
      __THREW__ = 0;
      if ($103 & 1) {
       label = 42;
       break L24;
      }
      if (!$102) {
       label = 58;
       break L24;
      }
      $105 = HEAP32[$__b >> 2] | 0;
      $106 = $105 + 12 | 0;
      $107 = HEAP32[$106 >> 2] | 0;
      if (($107 | 0) == (HEAP32[$105 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $114 = invoke_ii(HEAP32[(HEAP32[$105 >> 2] | 0) + 40 >> 2] | 0, $105 | 0) | 0;
       $115 = __THREW__;
       __THREW__ = 0;
       if ($115 & 1) {
        label = 42;
        break L24;
       } else $$0$i$i49 = $114;
      } else {
       HEAP32[$106 >> 2] = $107 + 4;
       $$0$i$i49 = HEAP32[$107 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_vii(75, $__spaces | 0, $$0$i$i49 | 0);
      $119 = __THREW__;
      __THREW__ = 0;
      if ($119 & 1) {
       label = 42;
       break L24;
      } else label = 60;
     }
     break;
    }
   case 3:
    {
     $190 = HEAP8[$__psn >> 0] | 0;
     $192 = ($190 & 1) == 0;
     if ($192) $204 = ($190 & 255) >>> 1; else $204 = HEAP32[$18 >> 2] | 0;
     $196 = HEAP8[$__nsn >> 0] | 0;
     $198 = ($196 & 1) == 0;
     if ($198) $203 = ($196 & 255) >>> 1; else $203 = HEAP32[$16 >> 2] | 0;
     if (($204 | 0) == (0 - $203 | 0)) {
      $865 = $862;
      $__trailing_sign$1 = $__trailing_sign$0;
     } else {
      if ($192) $209 = ($190 & 255) >>> 1; else $209 = HEAP32[$18 >> 2] | 0;
      if ($209) {
       if ($198) $214 = ($196 & 255) >>> 1; else $214 = HEAP32[$16 >> 2] | 0;
       if ($214) {
        $293 = HEAP32[$__b >> 2] | 0;
        $295 = HEAP32[$293 + 12 >> 2] | 0;
        if (($295 | 0) == (HEAP32[$293 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $302 = invoke_ii(HEAP32[(HEAP32[$293 >> 2] | 0) + 36 >> 2] | 0, $293 | 0) | 0;
         $303 = __THREW__;
         __THREW__ = 0;
         if ($303 & 1) {
          label = 42;
          break L24;
         }
         $$0$i$i121 = $302;
         $307 = HEAP8[$__psn >> 0] | 0;
        } else {
         $$0$i$i121 = HEAP32[$295 >> 2] | 0;
         $307 = $190;
        }
        $312 = HEAP32[$__b >> 2] | 0;
        $313 = $312 + 12 | 0;
        $314 = HEAP32[$313 >> 2] | 0;
        $317 = ($314 | 0) == (HEAP32[$312 + 16 >> 2] | 0);
        if (($$0$i$i121 | 0) == (HEAP32[(($307 & 1) == 0 ? $18 : HEAP32[$19 >> 2] | 0) >> 2] | 0)) {
         if ($317) {
          __THREW__ = 0;
          invoke_ii(HEAP32[(HEAP32[$312 >> 2] | 0) + 40 >> 2] | 0, $312 | 0) | 0;
          $321 = __THREW__;
          __THREW__ = 0;
          if ($321 & 1) {
           label = 42;
           break L24;
          }
         } else HEAP32[$313 >> 2] = $314 + 4;
         $324 = HEAP8[$__psn >> 0] | 0;
         if (!($324 & 1)) $330 = ($324 & 255) >>> 1; else $330 = HEAP32[$18 >> 2] | 0;
         $865 = $862;
         $__trailing_sign$1 = $330 >>> 0 > 1 ? $__psn : $__trailing_sign$0;
         break L49;
        }
        if ($317) {
         __THREW__ = 0;
         $335 = invoke_ii(HEAP32[(HEAP32[$312 >> 2] | 0) + 36 >> 2] | 0, $312 | 0) | 0;
         $336 = __THREW__;
         __THREW__ = 0;
         if ($336 & 1) {
          label = 42;
          break L24;
         } else $$0$i$i143 = $335;
        } else $$0$i$i143 = HEAP32[$314 >> 2] | 0;
        if (($$0$i$i143 | 0) != (HEAP32[((HEAP8[$__nsn >> 0] & 1) == 0 ? $16 : HEAP32[$17 >> 2] | 0) >> 2] | 0)) {
         label = 152;
         break L24;
        }
        $345 = HEAP32[$__b >> 2] | 0;
        $346 = $345 + 12 | 0;
        $347 = HEAP32[$346 >> 2] | 0;
        if (($347 | 0) == (HEAP32[$345 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         invoke_ii(HEAP32[(HEAP32[$345 >> 2] | 0) + 40 >> 2] | 0, $345 | 0) | 0;
         $354 = __THREW__;
         __THREW__ = 0;
         if ($354 & 1) {
          label = 42;
          break L24;
         }
        } else HEAP32[$346 >> 2] = $347 + 4;
        HEAP8[$__neg >> 0] = 1;
        $357 = HEAP8[$__nsn >> 0] | 0;
        if (!($357 & 1)) $363 = ($357 & 255) >>> 1; else $363 = HEAP32[$16 >> 2] | 0;
        $865 = $862;
        $__trailing_sign$1 = $363 >>> 0 > 1 ? $__nsn : $__trailing_sign$0;
        break L49;
       }
      }
      if ($192) $219 = ($190 & 255) >>> 1; else $219 = HEAP32[$18 >> 2] | 0;
      $221 = HEAP32[$__b >> 2] | 0;
      $223 = HEAP32[$221 + 12 >> 2] | 0;
      $226 = ($223 | 0) == (HEAP32[$221 + 16 >> 2] | 0);
      if (!$219) {
       if ($226) {
        __THREW__ = 0;
        $263 = invoke_ii(HEAP32[(HEAP32[$221 >> 2] | 0) + 36 >> 2] | 0, $221 | 0) | 0;
        $264 = __THREW__;
        __THREW__ = 0;
        if ($264 & 1) {
         label = 42;
         break L24;
        }
        $$0$i$i109 = $263;
        $268 = HEAP8[$__nsn >> 0] | 0;
       } else {
        $$0$i$i109 = HEAP32[$223 >> 2] | 0;
        $268 = $196;
       }
       if (($$0$i$i109 | 0) != (HEAP32[(($268 & 1) == 0 ? $16 : HEAP32[$17 >> 2] | 0) >> 2] | 0)) {
        $865 = $862;
        $__trailing_sign$1 = $__trailing_sign$0;
        break L49;
       }
       $273 = HEAP32[$__b >> 2] | 0;
       $274 = $273 + 12 | 0;
       $275 = HEAP32[$274 >> 2] | 0;
       if (($275 | 0) == (HEAP32[$273 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$273 >> 2] | 0) + 40 >> 2] | 0, $273 | 0) | 0;
        $282 = __THREW__;
        __THREW__ = 0;
        if ($282 & 1) {
         label = 42;
         break L24;
        }
       } else HEAP32[$274 >> 2] = $275 + 4;
       HEAP8[$__neg >> 0] = 1;
       $285 = HEAP8[$__nsn >> 0] | 0;
       if (!($285 & 1)) $291 = ($285 & 255) >>> 1; else $291 = HEAP32[$16 >> 2] | 0;
       $865 = $862;
       $__trailing_sign$1 = $291 >>> 0 > 1 ? $__nsn : $__trailing_sign$0;
       break L49;
      }
      if ($226) {
       __THREW__ = 0;
       $230 = invoke_ii(HEAP32[(HEAP32[$221 >> 2] | 0) + 36 >> 2] | 0, $221 | 0) | 0;
       $231 = __THREW__;
       __THREW__ = 0;
       if ($231 & 1) {
        label = 42;
        break L24;
       }
       $$0$i$i88 = $230;
       $235 = HEAP8[$__psn >> 0] | 0;
      } else {
       $$0$i$i88 = HEAP32[$223 >> 2] | 0;
       $235 = $190;
      }
      if (($$0$i$i88 | 0) != (HEAP32[(($235 & 1) == 0 ? $18 : HEAP32[$19 >> 2] | 0) >> 2] | 0)) {
       HEAP8[$__neg >> 0] = 1;
       $865 = $862;
       $__trailing_sign$1 = $__trailing_sign$0;
       break L49;
      }
      $240 = HEAP32[$__b >> 2] | 0;
      $241 = $240 + 12 | 0;
      $242 = HEAP32[$241 >> 2] | 0;
      if (($242 | 0) == (HEAP32[$240 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$240 >> 2] | 0) + 40 >> 2] | 0, $240 | 0) | 0;
       $249 = __THREW__;
       __THREW__ = 0;
       if ($249 & 1) {
        label = 42;
        break L24;
       }
      } else HEAP32[$241 >> 2] = $242 + 4;
      $252 = HEAP8[$__psn >> 0] | 0;
      if (!($252 & 1)) $258 = ($252 & 255) >>> 1; else $258 = HEAP32[$18 >> 2] | 0;
      $865 = $862;
      $__trailing_sign$1 = $258 >>> 0 > 1 ? $__psn : $__trailing_sign$0;
     }
     break;
    }
   case 0:
    {
     if (($__p$0 | 0) == 3) {
      $865 = $862;
      $__trailing_sign$1 = $__trailing_sign$0;
     } else label = 60;
     break;
    }
   case 2:
    {
     if (!($__p$0 >>> 0 < 2 | ($__trailing_sign$0 | 0) != 0)) {
      if (($__p$0 | 0) == 2) $372 = (HEAP8[$26 >> 0] | 0) != 0; else $372 = 0;
      if (!($21 | $372)) {
       $865 = $862;
       $__trailing_sign$1 = 0;
       break L49;
      }
     }
     $373 = HEAP8[$__sym >> 0] | 0;
     $$302 = ($373 & 1) == 0 ? $22 : HEAP32[$23 >> 2] | 0;
     L158 : do if (!$__p$0) {
      $$ph = $373;
      $$ph341 = $$302;
     } else if ((HEAPU8[$__pat + ($__p$0 + -1) >> 0] | 0) < 2) {
      $382 = $373;
      $391 = $$302;
      while (1) {
       if (!($382 & 1)) {
        $389 = $22;
        $390 = ($382 & 255) >>> 1;
       } else {
        $389 = HEAP32[$23 >> 2] | 0;
        $390 = HEAP32[$22 >> 2] | 0;
       }
       if (($391 | 0) == ($389 + ($390 << 2) | 0)) {
        $$lcssa = $382;
        $$lcssa346 = $391;
        label = 168;
        break;
       }
       __THREW__ = 0;
       $397 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 8192, HEAP32[$391 >> 2] | 0) | 0;
       $398 = __THREW__;
       __THREW__ = 0;
       if ($398 & 1) {
        label = 39;
        break L24;
       }
       if (!$397) {
        $$lcssa348 = $391;
        label = 166;
        break;
       }
       $382 = HEAP8[$__sym >> 0] | 0;
       $391 = $391 + 4 | 0;
      }
      if ((label | 0) == 166) {
       label = 0;
       $402 = HEAP8[$__sym >> 0] | 0;
       $405 = $$lcssa348;
      } else if ((label | 0) == 168) {
       label = 0;
       $402 = $$lcssa;
       $405 = $$lcssa346;
      }
      $403 = ($402 & 1) == 0;
      $409 = $405 - ($403 ? $22 : HEAP32[$23 >> 2] | 0) >> 2;
      $410 = HEAP8[$__spaces >> 0] | 0;
      $412 = ($410 & 1) == 0;
      if ($412) $417 = ($410 & 255) >>> 1; else $417 = HEAP32[$24 >> 2] | 0;
      do if ($409 >>> 0 <= $417 >>> 0) {
       if ($412) {
        $427 = $24;
        $428 = ($410 & 255) >>> 1;
        $867 = $24 + ((($410 & 255) >>> 1) - $409 << 2) | 0;
       } else {
        $418 = HEAP32[$25 >> 2] | 0;
        $419 = HEAP32[$24 >> 2] | 0;
        $427 = $418;
        $428 = $419;
        $867 = $418 + ($419 - $409 << 2) | 0;
       }
       $426 = $427 + ($428 << 2) | 0;
       $430 = $867;
       $434 = $403 ? $22 : HEAP32[$23 >> 2] | 0;
       while (1) {
        if (($430 | 0) == ($426 | 0)) {
         label = 182;
         break;
        }
        if ((HEAP32[$430 >> 2] | 0) != (HEAP32[$434 >> 2] | 0)) {
         label = 180;
         break;
        }
        $430 = $430 + 4 | 0;
        $434 = $434 + 4 | 0;
       }
       if ((label | 0) == 180) {
        label = 0;
        break;
       } else if ((label | 0) == 182) {
        label = 0;
        $$ph = $402;
        $$ph341 = $405;
        break L158;
       }
      } while (0);
      $$ph = $402;
      $$ph341 = $403 ? $22 : HEAP32[$23 >> 2] | 0;
     } else {
      $$ph = $373;
      $$ph341 = $$302;
     } while (0);
     $$pre$i3$i$i190 = $864;
     $440 = $$ph;
     $449 = $$ph341;
     $466 = $864;
     L193 : while (1) {
      if (!($440 & 1)) {
       $447 = $22;
       $448 = ($440 & 255) >>> 1;
      } else {
       $447 = HEAP32[$23 >> 2] | 0;
       $448 = HEAP32[$22 >> 2] | 0;
      }
      if (($449 | 0) == ($447 + ($448 << 2) | 0)) {
       $$lcssa349 = $449;
       break;
      }
      $451 = HEAP32[$__b >> 2] | 0;
      do if (!$451) $481 = 1; else {
       $454 = HEAP32[$451 + 12 >> 2] | 0;
       if (($454 | 0) == (HEAP32[$451 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $461 = invoke_ii(HEAP32[(HEAP32[$451 >> 2] | 0) + 36 >> 2] | 0, $451 | 0) | 0;
        $462 = __THREW__;
        __THREW__ = 0;
        if ($462 & 1) {
         label = 38;
         break L24;
        } else $$0$i$i$i$i182 = $461;
       } else $$0$i$i$i$i182 = HEAP32[$454 >> 2] | 0;
       if (($$0$i$i$i$i182 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $481 = 1;
        break;
       } else {
        $481 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$466) {
       $$pre$i3$i$i190282 = $$pre$i3$i$i190;
       label = 201;
      } else {
       $469 = HEAP32[$466 + 12 >> 2] | 0;
       if (($469 | 0) == (HEAP32[$466 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $476 = invoke_ii(HEAP32[(HEAP32[$466 >> 2] | 0) + 36 >> 2] | 0, $466 | 0) | 0;
        $477 = __THREW__;
        __THREW__ = 0;
        if ($477 & 1) {
         label = 38;
         break L24;
        } else $$0$i$i1$i$i188 = $476;
       } else $$0$i$i1$i$i188 = HEAP32[$469 >> 2] | 0;
       if (($$0$i$i1$i$i188 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $$pre$i3$i$i190282 = 0;
        label = 201;
        break;
       } else if ($481 ^ ($$pre$i3$i$i190 | 0) == 0) {
        $$pre$i3$i$i190281 = $$pre$i3$i$i190;
        $868 = $$pre$i3$i$i190;
        break;
       } else {
        $$lcssa349 = $449;
        break L193;
       }
      } while (0);
      if ((label | 0) == 201) {
       label = 0;
       if ($481) {
        $$lcssa349 = $449;
        break;
       } else {
        $$pre$i3$i$i190281 = $$pre$i3$i$i190282;
        $868 = 0;
       }
      }
      $482 = HEAP32[$__b >> 2] | 0;
      $484 = HEAP32[$482 + 12 >> 2] | 0;
      if (($484 | 0) == (HEAP32[$482 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $491 = invoke_ii(HEAP32[(HEAP32[$482 >> 2] | 0) + 36 >> 2] | 0, $482 | 0) | 0;
       $492 = __THREW__;
       __THREW__ = 0;
       if ($492 & 1) {
        label = 38;
        break L24;
       } else $$0$i$i178 = $491;
      } else $$0$i$i178 = HEAP32[$484 >> 2] | 0;
      if (($$0$i$i178 | 0) != (HEAP32[$449 >> 2] | 0)) {
       $$lcssa349 = $449;
       break;
      }
      $497 = HEAP32[$__b >> 2] | 0;
      $498 = $497 + 12 | 0;
      $499 = HEAP32[$498 >> 2] | 0;
      if (($499 | 0) == (HEAP32[$497 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$497 >> 2] | 0) + 40 >> 2] | 0, $497 | 0) | 0;
       $506 = __THREW__;
       __THREW__ = 0;
       if ($506 & 1) {
        label = 38;
        break L24;
       }
      } else HEAP32[$498 >> 2] = $499 + 4;
      $$pre$i3$i$i190 = $$pre$i3$i$i190281;
      $440 = HEAP8[$__sym >> 0] | 0;
      $449 = $449 + 4 | 0;
      $466 = $868;
     }
     if ($21) {
      $510 = HEAP8[$__sym >> 0] | 0;
      if (!($510 & 1)) {
       $518 = $22;
       $519 = ($510 & 255) >>> 1;
      } else {
       $518 = HEAP32[$23 >> 2] | 0;
       $519 = HEAP32[$22 >> 2] | 0;
      }
      if (($$lcssa349 | 0) == ($518 + ($519 << 2) | 0)) {
       $865 = $862;
       $__trailing_sign$1 = $__trailing_sign$0;
      } else {
       label = 216;
       break L24;
      }
     } else {
      $865 = $862;
      $__trailing_sign$1 = $__trailing_sign$0;
     }
     break;
    }
   case 4:
    {
     $62 = HEAP32[$__ts >> 2] | 0;
     $$pre$i3$i$i165 = $864;
     $538 = $864;
     $592 = $862;
     $__ng$0 = 0;
     L238 : while (1) {
      $523 = HEAP32[$__b >> 2] | 0;
      do if (!$523) $553 = 1; else {
       $526 = HEAP32[$523 + 12 >> 2] | 0;
       if (($526 | 0) == (HEAP32[$523 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $533 = invoke_ii(HEAP32[(HEAP32[$523 >> 2] | 0) + 36 >> 2] | 0, $523 | 0) | 0;
        $534 = __THREW__;
        __THREW__ = 0;
        if ($534 & 1) {
         label = 41;
         break L24;
        } else $$0$i$i$i$i157 = $533;
       } else $$0$i$i$i$i157 = HEAP32[$526 >> 2] | 0;
       if (($$0$i$i$i$i157 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $553 = 1;
        break;
       } else {
        $553 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$538) {
       $869 = $$pre$i3$i$i165;
       label = 230;
      } else {
       $541 = HEAP32[$538 + 12 >> 2] | 0;
       if (($541 | 0) == (HEAP32[$538 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $548 = invoke_ii(HEAP32[(HEAP32[$538 >> 2] | 0) + 36 >> 2] | 0, $538 | 0) | 0;
        $549 = __THREW__;
        __THREW__ = 0;
        if ($549 & 1) {
         label = 41;
         break L24;
        } else $$0$i$i1$i$i163 = $548;
       } else $$0$i$i1$i$i163 = HEAP32[$541 >> 2] | 0;
       if (($$0$i$i1$i$i163 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $869 = 0;
        label = 230;
        break;
       } else if ($553 ^ ($$pre$i3$i$i165 | 0) == 0) {
        $870 = $$pre$i3$i$i165;
        $871 = $$pre$i3$i$i165;
        break;
       } else {
        $$lcssa342 = $592;
        $$pre$i3$i$i133 = $$pre$i3$i$i165;
        $__ng$0$lcssa343 = $__ng$0;
        break L238;
       }
      } while (0);
      if ((label | 0) == 230) {
       label = 0;
       if ($553) {
        $$lcssa342 = $592;
        $$pre$i3$i$i133 = $869;
        $__ng$0$lcssa343 = $__ng$0;
        break;
       } else {
        $870 = $869;
        $871 = 0;
       }
      }
      $554 = HEAP32[$__b >> 2] | 0;
      $556 = HEAP32[$554 + 12 >> 2] | 0;
      if (($556 | 0) == (HEAP32[$554 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $563 = invoke_ii(HEAP32[(HEAP32[$554 >> 2] | 0) + 36 >> 2] | 0, $554 | 0) | 0;
       $564 = __THREW__;
       __THREW__ = 0;
       if ($564 & 1) {
        label = 41;
        break L24;
       } else $$0$i$i154 = $563;
      } else $$0$i$i154 = HEAP32[$556 >> 2] | 0;
      __THREW__ = 0;
      $570 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 2048, $$0$i$i154 | 0) | 0;
      $571 = __THREW__;
      __THREW__ = 0;
      if ($571 & 1) {
       label = 41;
       break L24;
      }
      if ($570) {
       $573 = HEAP32[$__wn >> 2] | 0;
       if (($573 | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(18, $__wb | 0, $__wn | 0, $0 | 0);
        $576 = __THREW__;
        __THREW__ = 0;
        if ($576 & 1) {
         label = 41;
         break L24;
        }
        $579 = HEAP32[$__wn >> 2] | 0;
       } else $579 = $573;
       HEAP32[$__wn >> 2] = $579 + 4;
       HEAP32[$579 >> 2] = $$0$i$i154;
       $872 = $592;
       $__ng$1 = $__ng$0 + 1 | 0;
      } else {
       $581 = HEAP8[$__grp >> 0] | 0;
       if (!($581 & 1)) $587 = ($581 & 255) >>> 1; else $587 = HEAP32[$27 >> 2] | 0;
       if (!(($__ng$0 | 0) != 0 & ($587 | 0) != 0 & ($$0$i$i154 | 0) == ($62 | 0))) {
        $$lcssa342 = $592;
        $$pre$i3$i$i133 = $870;
        $__ng$0$lcssa343 = $__ng$0;
        break;
       }
       if (($592 | 0) == (HEAP32[$__ge >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(17, $__gb | 0, $__gn | 0, $__ge | 0);
        $594 = __THREW__;
        __THREW__ = 0;
        if ($594 & 1) {
         label = 41;
         break L24;
        }
        $597 = HEAP32[$__gn >> 2] | 0;
       } else $597 = $592;
       $596 = $597 + 4 | 0;
       HEAP32[$__gn >> 2] = $596;
       HEAP32[$597 >> 2] = $__ng$0;
       $872 = $596;
       $__ng$1 = 0;
      }
      $598 = HEAP32[$__b >> 2] | 0;
      $599 = $598 + 12 | 0;
      $600 = HEAP32[$599 >> 2] | 0;
      if (($600 | 0) == (HEAP32[$598 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$598 >> 2] | 0) + 40 >> 2] | 0, $598 | 0) | 0;
       $607 = __THREW__;
       __THREW__ = 0;
       if ($607 & 1) {
        label = 41;
        break L24;
       }
      } else HEAP32[$599 >> 2] = $600 + 4;
      $$pre$i3$i$i165 = $870;
      $538 = $871;
      $592 = $872;
      $__ng$0 = $__ng$1;
     }
     if (($__ng$0$lcssa343 | 0) != 0 ? (HEAP32[$__gb >> 2] | 0) != ($$lcssa342 | 0) : 0) {
      if (($$lcssa342 | 0) == (HEAP32[$__ge >> 2] | 0)) {
       __THREW__ = 0;
       invoke_viii(17, $__gb | 0, $__gn | 0, $__ge | 0);
       $615 = __THREW__;
       __THREW__ = 0;
       if ($615 & 1) {
        label = 42;
        break L24;
       }
       $618 = HEAP32[$__gn >> 2] | 0;
      } else $618 = $$lcssa342;
      $617 = $618 + 4 | 0;
      HEAP32[$__gn >> 2] = $617;
      HEAP32[$618 >> 2] = $__ng$0$lcssa343;
      $873 = $617;
     } else $873 = $$lcssa342;
     $619 = HEAP32[$__fd >> 2] | 0;
     if (($619 | 0) > 0) {
      $621 = HEAP32[$__b >> 2] | 0;
      do if (!$621) $874 = 1; else {
       $624 = HEAP32[$621 + 12 >> 2] | 0;
       if (($624 | 0) == (HEAP32[$621 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $631 = invoke_ii(HEAP32[(HEAP32[$621 >> 2] | 0) + 36 >> 2] | 0, $621 | 0) | 0;
        $632 = __THREW__;
        __THREW__ = 0;
        if ($632 & 1) {
         label = 42;
         break L24;
        } else $$0$i$i$i$i125 = $631;
       } else $$0$i$i$i$i125 = HEAP32[$624 >> 2] | 0;
       if (($$0$i$i$i$i125 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $874 = 1;
        break;
       } else {
        $874 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$$pre$i3$i$i133) label = 272; else {
       $638 = HEAP32[$$pre$i3$i$i133 + 12 >> 2] | 0;
       if (($638 | 0) == (HEAP32[$$pre$i3$i$i133 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $645 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i133 >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i133 | 0) | 0;
        $646 = __THREW__;
        __THREW__ = 0;
        if ($646 & 1) {
         label = 42;
         break L24;
        } else $$0$i$i1$i$i131 = $645;
       } else $$0$i$i1$i$i131 = HEAP32[$638 >> 2] | 0;
       if (($$0$i$i1$i$i131 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 272;
        break;
       } else if ($874) {
        $875 = $$pre$i3$i$i133;
        break;
       } else {
        label = 278;
        break L24;
       }
      } while (0);
      if ((label | 0) == 272) {
       label = 0;
       if ($874) {
        label = 278;
        break L24;
       } else $875 = 0;
      }
      $650 = HEAP32[$__b >> 2] | 0;
      $652 = HEAP32[$650 + 12 >> 2] | 0;
      if (($652 | 0) == (HEAP32[$650 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $659 = invoke_ii(HEAP32[(HEAP32[$650 >> 2] | 0) + 36 >> 2] | 0, $650 | 0) | 0;
       $660 = __THREW__;
       __THREW__ = 0;
       if ($660 & 1) {
        label = 42;
        break L24;
       } else $$0$i$i118 = $659;
      } else $$0$i$i118 = HEAP32[$652 >> 2] | 0;
      if (($$0$i$i118 | 0) != (HEAP32[$__dp >> 2] | 0)) {
       label = 278;
       break L24;
      }
      $667 = HEAP32[$__b >> 2] | 0;
      $668 = $667 + 12 | 0;
      $669 = HEAP32[$668 >> 2] | 0;
      if (($669 | 0) == (HEAP32[$667 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$667 >> 2] | 0) + 40 >> 2] | 0, $667 | 0) | 0;
       $676 = __THREW__;
       __THREW__ = 0;
       if ($676 & 1) {
        label = 42;
        break L24;
       }
      } else HEAP32[$668 >> 2] = $669 + 4;
      $$pre$i3$i$i99 = $875;
      $679 = $619;
      $696 = $875;
      while (1) {
       if (($679 | 0) <= 0) break;
       $681 = HEAP32[$__b >> 2] | 0;
       do if (!$681) $711 = 1; else {
        $684 = HEAP32[$681 + 12 >> 2] | 0;
        if (($684 | 0) == (HEAP32[$681 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $691 = invoke_ii(HEAP32[(HEAP32[$681 >> 2] | 0) + 36 >> 2] | 0, $681 | 0) | 0;
         $692 = __THREW__;
         __THREW__ = 0;
         if ($692 & 1) {
          label = 40;
          break L24;
         } else $$0$i$i$i$i91 = $691;
        } else $$0$i$i$i$i91 = HEAP32[$684 >> 2] | 0;
        if (($$0$i$i$i$i91 | 0) == -1) {
         HEAP32[$__b >> 2] = 0;
         $711 = 1;
         break;
        } else {
         $711 = (HEAP32[$__b >> 2] | 0) == 0;
         break;
        }
       } while (0);
       do if (!$696) {
        $$pre$i3$i$i99287$ph = $$pre$i3$i$i99;
        label = 297;
       } else {
        $699 = HEAP32[$696 + 12 >> 2] | 0;
        if (($699 | 0) == (HEAP32[$696 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $706 = invoke_ii(HEAP32[(HEAP32[$696 >> 2] | 0) + 36 >> 2] | 0, $696 | 0) | 0;
         $707 = __THREW__;
         __THREW__ = 0;
         if ($707 & 1) {
          label = 40;
          break L24;
         } else $$0$i$i1$i$i97 = $706;
        } else $$0$i$i1$i$i97 = HEAP32[$699 >> 2] | 0;
        if (($$0$i$i1$i$i97 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         $$pre$i3$i$i99287$ph = 0;
         label = 297;
         break;
        } else if ($711 ^ ($$pre$i3$i$i99 | 0) == 0) {
         $$pre$i3$i$i99287297 = $$pre$i3$i$i99;
         $876 = $$pre$i3$i$i99;
         break;
        } else {
         label = 304;
         break L24;
        }
       } while (0);
       if ((label | 0) == 297) {
        label = 0;
        if ($711) {
         label = 304;
         break L24;
        } else {
         $$pre$i3$i$i99287297 = $$pre$i3$i$i99287$ph;
         $876 = 0;
        }
       }
       $712 = HEAP32[$__b >> 2] | 0;
       $714 = HEAP32[$712 + 12 >> 2] | 0;
       if (($714 | 0) == (HEAP32[$712 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $721 = invoke_ii(HEAP32[(HEAP32[$712 >> 2] | 0) + 36 >> 2] | 0, $712 | 0) | 0;
        $722 = __THREW__;
        __THREW__ = 0;
        if ($722 & 1) {
         label = 40;
         break L24;
        } else $$0$i$i85 = $721;
       } else $$0$i$i85 = HEAP32[$714 >> 2] | 0;
       __THREW__ = 0;
       $728 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 2048, $$0$i$i85 | 0) | 0;
       $729 = __THREW__;
       __THREW__ = 0;
       if ($729 & 1) {
        label = 40;
        break L24;
       }
       if (!$728) {
        label = 304;
        break L24;
       }
       if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(18, $__wb | 0, $__wn | 0, $0 | 0);
        $736 = __THREW__;
        __THREW__ = 0;
        if ($736 & 1) {
         label = 40;
         break L24;
        }
       }
       $738 = HEAP32[$__b >> 2] | 0;
       $740 = HEAP32[$738 + 12 >> 2] | 0;
       if (($740 | 0) == (HEAP32[$738 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $747 = invoke_ii(HEAP32[(HEAP32[$738 >> 2] | 0) + 36 >> 2] | 0, $738 | 0) | 0;
        $748 = __THREW__;
        __THREW__ = 0;
        if ($748 & 1) {
         label = 40;
         break L24;
        } else $$0$i$i77 = $747;
       } else $$0$i$i77 = HEAP32[$740 >> 2] | 0;
       $751 = HEAP32[$__wn >> 2] | 0;
       HEAP32[$__wn >> 2] = $751 + 4;
       HEAP32[$751 >> 2] = $$0$i$i77;
       $753 = $679 + -1 | 0;
       HEAP32[$__fd >> 2] = $753;
       $754 = HEAP32[$__b >> 2] | 0;
       $755 = $754 + 12 | 0;
       $756 = HEAP32[$755 >> 2] | 0;
       if (($756 | 0) == (HEAP32[$754 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$754 >> 2] | 0) + 40 >> 2] | 0, $754 | 0) | 0;
        $763 = __THREW__;
        __THREW__ = 0;
        if ($763 & 1) {
         label = 40;
         break L24;
        }
       } else HEAP32[$755 >> 2] = $756 + 4;
       $$pre$i3$i$i99 = $$pre$i3$i$i99287297;
       $679 = $753;
       $696 = $876;
      }
     }
     if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__wb >> 2] | 0)) {
      label = 316;
      break L24;
     } else {
      $865 = $873;
      $__trailing_sign$1 = $__trailing_sign$0;
     }
     break;
    }
   default:
    {
     $865 = $862;
     $__trailing_sign$1 = $__trailing_sign$0;
    }
   } while (0);
   if ((label | 0) == 60) {
    label = 0;
    $$pre$i3$i$i59 = $864;
    $139 = $864;
    L375 : while (1) {
     $124 = HEAP32[$__b >> 2] | 0;
     do if (!$124) $154 = 1; else {
      $127 = HEAP32[$124 + 12 >> 2] | 0;
      if (($127 | 0) == (HEAP32[$124 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $134 = invoke_ii(HEAP32[(HEAP32[$124 >> 2] | 0) + 36 >> 2] | 0, $124 | 0) | 0;
       $135 = __THREW__;
       __THREW__ = 0;
       if ($135 & 1) {
        label = 37;
        break L24;
       } else $$0$i$i$i$i51 = $134;
      } else $$0$i$i$i$i51 = HEAP32[$127 >> 2] | 0;
      if (($$0$i$i$i$i51 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $154 = 1;
       break;
      } else {
       $154 = (HEAP32[$__b >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$139) {
      $$pre$i3$i$i59275 = $$pre$i3$i$i59;
      label = 74;
     } else {
      $142 = HEAP32[$139 + 12 >> 2] | 0;
      if (($142 | 0) == (HEAP32[$139 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $149 = invoke_ii(HEAP32[(HEAP32[$139 >> 2] | 0) + 36 >> 2] | 0, $139 | 0) | 0;
       $150 = __THREW__;
       __THREW__ = 0;
       if ($150 & 1) {
        label = 37;
        break L24;
       } else $$0$i$i1$i$i57 = $149;
      } else $$0$i$i1$i$i57 = HEAP32[$142 >> 2] | 0;
      if (($$0$i$i1$i$i57 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       $$pre$i3$i$i59275 = 0;
       label = 74;
       break;
      } else if ($154 ^ ($$pre$i3$i$i59 | 0) == 0) {
       $$pre$i3$i$i59277 = $$pre$i3$i$i59;
       $866 = $$pre$i3$i$i59;
       break;
      } else break L375;
     } while (0);
     if ((label | 0) == 74) {
      label = 0;
      if ($154) break; else {
       $$pre$i3$i$i59277 = $$pre$i3$i$i59275;
       $866 = 0;
      }
     }
     $155 = HEAP32[$__b >> 2] | 0;
     $157 = HEAP32[$155 + 12 >> 2] | 0;
     if (($157 | 0) == (HEAP32[$155 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $164 = invoke_ii(HEAP32[(HEAP32[$155 >> 2] | 0) + 36 >> 2] | 0, $155 | 0) | 0;
      $165 = __THREW__;
      __THREW__ = 0;
      if ($165 & 1) {
       label = 37;
       break L24;
      } else $$0$i$i66 = $164;
     } else $$0$i$i66 = HEAP32[$157 >> 2] | 0;
     __THREW__ = 0;
     $171 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 8192, $$0$i$i66 | 0) | 0;
     $172 = __THREW__;
     __THREW__ = 0;
     if ($172 & 1) {
      label = 37;
      break L24;
     }
     if (!$171) break;
     $174 = HEAP32[$__b >> 2] | 0;
     $175 = $174 + 12 | 0;
     $176 = HEAP32[$175 >> 2] | 0;
     if (($176 | 0) == (HEAP32[$174 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $183 = invoke_ii(HEAP32[(HEAP32[$174 >> 2] | 0) + 40 >> 2] | 0, $174 | 0) | 0;
      $184 = __THREW__;
      __THREW__ = 0;
      if ($184 & 1) {
       label = 37;
       break L24;
      } else $$0$i$i72 = $183;
     } else {
      HEAP32[$175 >> 2] = $176 + 4;
      $$0$i$i72 = HEAP32[$176 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_vii(75, $__spaces | 0, $$0$i$i72 | 0);
     $188 = __THREW__;
     __THREW__ = 0;
     if ($188 & 1) {
      label = 37;
      break L24;
     } else {
      $$pre$i3$i$i59 = $$pre$i3$i$i59277;
      $139 = $866;
     }
    }
    $865 = $862;
    $__trailing_sign$1 = $__trailing_sign$0;
   }
   $862 = $865;
   $__p$0 = $__p$0 + 1 | 0;
   $__trailing_sign$0 = $__trailing_sign$1;
  }
  L411 : switch (label | 0) {
  case 37:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L21;
    break;
   }
  case 38:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L21;
    break;
   }
  case 39:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L21;
    break;
   }
  case 40:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L21;
    break;
   }
  case 41:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L21;
    break;
   }
  case 42:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L21;
    break;
   }
  case 58:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 152:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 216:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 278:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 304:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 316:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 319:
   {
    do if ($__trailing_sign$0$lcssa) {
     $773 = $__trailing_sign$0$lcssa + 4 | 0;
     $774 = $__trailing_sign$0$lcssa + 8 | 0;
     $__i$0 = 1;
     L426 : while (1) {
      $775 = HEAP8[$__trailing_sign$0$lcssa >> 0] | 0;
      if (!($775 & 1)) $782 = ($775 & 255) >>> 1; else $782 = HEAP32[$773 >> 2] | 0;
      if ($__i$0 >>> 0 >= $782 >>> 0) {
       label = 351;
       break;
      }
      $783 = HEAP32[$__b >> 2] | 0;
      do if (!$783) $877 = 1; else {
       $786 = HEAP32[$783 + 12 >> 2] | 0;
       if (($786 | 0) == (HEAP32[$783 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $793 = invoke_ii(HEAP32[(HEAP32[$783 >> 2] | 0) + 36 >> 2] | 0, $783 | 0) | 0;
        $794 = __THREW__;
        __THREW__ = 0;
        if ($794 & 1) {
         label = 36;
         break L426;
        } else $$0$i$i$i$i = $793;
       } else $$0$i$i$i$i = HEAP32[$786 >> 2] | 0;
       if (($$0$i$i$i$i | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $877 = 1;
        break;
       } else {
        $877 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      $798 = HEAP32[$__e >> 2] | 0;
      do if (!$798) label = 338; else {
       $801 = HEAP32[$798 + 12 >> 2] | 0;
       if (($801 | 0) == (HEAP32[$798 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $808 = invoke_ii(HEAP32[(HEAP32[$798 >> 2] | 0) + 36 >> 2] | 0, $798 | 0) | 0;
        $809 = __THREW__;
        __THREW__ = 0;
        if ($809 & 1) {
         label = 36;
         break L426;
        } else $$0$i$i1$i$i = $808;
       } else $$0$i$i1$i$i = HEAP32[$801 >> 2] | 0;
       if (($$0$i$i1$i$i | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 338;
        break;
       } else if ($877) break; else {
        label = 346;
        break L426;
       }
      } while (0);
      if ((label | 0) == 338) {
       label = 0;
       if ($877) {
        label = 346;
        break;
       }
      }
      $813 = HEAP32[$__b >> 2] | 0;
      $815 = HEAP32[$813 + 12 >> 2] | 0;
      if (($815 | 0) == (HEAP32[$813 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $822 = invoke_ii(HEAP32[(HEAP32[$813 >> 2] | 0) + 36 >> 2] | 0, $813 | 0) | 0;
       $823 = __THREW__;
       __THREW__ = 0;
       if ($823 & 1) {
        label = 36;
        break;
       } else $$0$i$i = $822;
      } else $$0$i$i = HEAP32[$815 >> 2] | 0;
      if (!(HEAP8[$__trailing_sign$0$lcssa >> 0] & 1)) $831 = $773; else $831 = HEAP32[$774 >> 2] | 0;
      if (($$0$i$i | 0) != (HEAP32[$831 + ($__i$0 << 2) >> 2] | 0)) {
       label = 346;
       break;
      }
      $836 = $__i$0 + 1 | 0;
      $837 = HEAP32[$__b >> 2] | 0;
      $838 = $837 + 12 | 0;
      $839 = HEAP32[$838 >> 2] | 0;
      if (($839 | 0) == (HEAP32[$837 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$837 >> 2] | 0) + 40 >> 2] | 0, $837 | 0) | 0;
       $846 = __THREW__;
       __THREW__ = 0;
       if ($846 & 1) {
        label = 36;
        break;
       }
      } else HEAP32[$838 >> 2] = $839 + 4;
      $__i$0 = $836;
     }
     if ((label | 0) == 36) {
      $63 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $63;
      $lpad$phi$index8 = tempRet0;
      break L21;
     } else if ((label | 0) == 346) {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
      break L411;
     } else if ((label | 0) == 351) break;
    } while (0);
    $849 = HEAP32[$__gb >> 2] | 0;
    if (($849 | 0) == ($$lcssa351 | 0)) $$0 = 1; else {
     HEAP32[$__et >> 2] = 0;
     __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp, $849, $$lcssa351, $__et);
     if (!(HEAP32[$__et >> 2] | 0)) $$0 = 1; else {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
     }
    }
    break;
   }
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
  $855 = HEAP32[$__gb >> 2] | 0;
  HEAP32[$__gb >> 2] = 0;
  if ($855) {
   __THREW__ = 0;
   invoke_vi(HEAP32[$1 >> 2] | 0, $855 | 0);
   $858 = __THREW__;
   __THREW__ = 0;
   if ($858 & 1) {
    $860 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($860);
   }
  }
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $79 = HEAP32[$__gb >> 2] | 0;
 HEAP32[$__gb >> 2] = 0;
 if ($79) {
  __THREW__ = 0;
  invoke_vi(HEAP32[$1 >> 2] | 0, $79 | 0);
  $82 = __THREW__;
  __THREW__ = 0;
  if ($82 & 1) {
   $84 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($84);
  }
 }
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, $__e, $__intl, $__loc, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i113 = 0, $$0$i$i120 = 0, $$0$i$i129 = 0, $$0$i$i139 = 0, $$0$i$i156 = 0, $$0$i$i42 = 0, $$0$i$i45 = 0, $$0$i$i58 = 0, $$0$i$i64 = 0, $$0$i$i67 = 0, $$0$i$i74 = 0, $$0$i$i93 = 0, $$0$i$i96 = 0, $$lcssa = 0, $$lcssa322 = 0, $$lcssa324 = 0, $$lcssa326 = 0, $$ph = 0, $$pre = 0, $$pre$i2$i$i107 = 0, $$pre$i2$i$i147 = 0, $$pre$i2$i$i164 = 0, $$pre$i2$i$i164269 = 0, $$pre$i2$i$i164270 = 0, $$pre$i2$i$i52 = 0, $$pre$i2$i$i52256 = 0, $$pre$i2$i$i52258 = 0, $$pre$i2$i$i83 = 0, $$pre$i2$i$i83274$ph = 0, $$pre$i2$i$i83274287 = 0, $$pre262 = 0, $$pre265 = 0, $0 = 0, $1 = 0, $108 = 0, $109 = 0, $110 = 0, $117 = 0, $118 = 0, $124 = 0, $129 = 0, $13 = 0, $139 = 0, $140 = 0, $143 = 0, $144 = 0, $145 = 0, $155 = 0, $156 = 0, $16 = 0, $160 = 0, $162 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $181 = 0, $182 = 0, $183 = 0, $19 = 0, $190 = 0, $191 = 0, $197 = 0, $199 = 0, $20 = 0, $200 = 0, $202 = 0, $204 = 0, $208 = 0, $209 = 0, $211 = 0, $213 = 0, $218 = 0, $219 = 0, $22 = 0, $224 = 0, $229 = 0, $23 = 0, $234 = 0, $236 = 0, $238 = 0, $24 = 0, $241 = 0, $245 = 0, $246 = 0, $25 = 0, $255 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $269 = 0, $27 = 0, $272 = 0, $278 = 0, $28 = 0, $283 = 0, $284 = 0, $29 = 0, $293 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $307 = 0, $310 = 0, $316 = 0, $318 = 0, $32 = 0, $320 = 0, $327 = 0, $328 = 0, $337 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $347 = 0, $351 = 0, $354 = 0, $360 = 0, $365 = 0, $366 = 0, $371 = 0, $378 = 0, $379 = 0, $380 = 0, $381 = 0, $388 = 0, $391 = 0, $397 = 0, $406 = 0, $407 = 0, $409 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $421 = 0, $423 = 0, $43 = 0, $432 = 0, $433 = 0, $435 = 0, $440 = 0, $441 = 0, $442 = 0, $449 = 0, $450 = 0, $451 = 0, $452 = 0, $456 = 0, $46 = 0, $461 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $472 = 0, $48 = 0, $482 = 0, $483 = 0, $486 = 0, $487 = 0, $488 = 0, $498 = 0, $499 = 0, $503 = 0, $505 = 0, $512 = 0, $513 = 0, $520 = 0, $521 = 0, $522 = 0, $529 = 0, $533 = 0, $541 = 0, $542 = 0, $546 = 0, $556 = 0, $557 = 0, $560 = 0, $561 = 0, $562 = 0, $572 = 0, $573 = 0, $577 = 0, $579 = 0, $58 = 0, $586 = 0, $587 = 0, $59 = 0, $591 = 0, $598 = 0, $601 = 0, $604 = 0, $606 = 0, $612 = 0, $617 = 0, $619 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $632 = 0, $640 = 0, $642 = 0, $643 = 0, $644 = 0, $646 = 0, $65 = 0, $656 = 0, $657 = 0, $66 = 0, $660 = 0, $661 = 0, $671 = 0, $672 = 0, $675 = 0, $677 = 0, $684 = 0, $685 = 0, $694 = 0, $695 = 0, $696 = 0, $703 = 0, $706 = 0, $708 = 0, $718 = 0, $719 = 0, $722 = 0, $723 = 0, $724 = 0, $734 = 0, $735 = 0, $739 = 0, $741 = 0, $748 = 0, $749 = 0, $765 = 0, $767 = 0, $769 = 0, $776 = 0, $777 = 0, $78 = 0, $782 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $794 = 0, $80 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $814 = 0, $815 = 0, $825 = 0, $826 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $841 = 0, $842 = 0, $845 = 0, $847 = 0, $85 = 0, $854 = 0, $855 = 0, $865 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $880 = 0, $883 = 0, $889 = 0, $89 = 0, $892 = 0, $894 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $910 = 0, $911 = 0, $96 = 0, $97 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__i$0$i$i = 0, $__i$0$i$i14 = 0, $__i$0$i$i17 = 0, $__i$0$i$i21 = 0, $__i$0$i$i26 = 0, $__ng$0 = 0, $__ng$0$lcssa323 = 0, $__ng$1 = 0, $__nsn = 0, $__p$0 = 0, $__pat = 0, $__psn = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0 = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$1 = 0, $__ts = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $0 = sp + 488 | 0;
 $__gbuf = sp + 88 | 0;
 $__gb = sp + 80 | 0;
 $__gn = sp + 72 | 0;
 $__ge = sp + 68 | 0;
 $__pat = sp + 496 | 0;
 $__dp = sp + 493 | 0;
 $__ts = sp + 492 | 0;
 $__grp = sp + 56 | 0;
 $__sym = sp + 44 | 0;
 $__psn = sp + 32 | 0;
 $__nsn = sp + 20 | 0;
 $__spaces = sp + 8 | 0;
 $__fd = sp + 4 | 0;
 $__et = sp;
 HEAP32[$0 >> 2] = $__we;
 HEAP32[$__gb >> 2] = $__gbuf;
 $1 = $__gb + 4 | 0;
 HEAP32[$1 >> 2] = 189;
 HEAP32[$__gn >> 2] = $__gbuf;
 HEAP32[$__ge >> 2] = $__gbuf + 400;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__grp + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 $__i$0$i$i14 = 0;
 while (1) {
  if (($__i$0$i$i14 | 0) == 3) break;
  HEAP32[$__sym + ($__i$0$i$i14 << 2) >> 2] = 0;
  $__i$0$i$i14 = $__i$0$i$i14 + 1 | 0;
 }
 $__i$0$i$i17 = 0;
 while (1) {
  if (($__i$0$i$i17 | 0) == 3) break;
  HEAP32[$__psn + ($__i$0$i$i17 << 2) >> 2] = 0;
  $__i$0$i$i17 = $__i$0$i$i17 + 1 | 0;
 }
 $__i$0$i$i21 = 0;
 while (1) {
  if (($__i$0$i$i21 | 0) == 3) break;
  HEAP32[$__nsn + ($__i$0$i$i21 << 2) >> 2] = 0;
  $__i$0$i$i21 = $__i$0$i$i21 + 1 | 0;
 }
 $__i$0$i$i26 = 0;
 while (1) {
  if (($__i$0$i$i26 | 0) == 3) break;
  HEAP32[$__spaces + ($__i$0$i$i26 << 2) >> 2] = 0;
  $__i$0$i$i26 = $__i$0$i$i26 + 1 | 0;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(1, $__intl | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__psn | 0, $__nsn | 0, $__fd | 0);
 $13 = __THREW__;
 __THREW__ = 0;
 L21 : do if ($13 & 1) {
  $78 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $78;
  $lpad$phi$index7 = tempRet0;
 } else {
  HEAP32[$__wn >> 2] = HEAP32[$__wb >> 2];
  $16 = $__ct + 8 | 0;
  $17 = $__nsn + 4 | 0;
  $18 = $__nsn + 8 | 0;
  $19 = $__psn + 4 | 0;
  $20 = $__psn + 8 | 0;
  $22 = ($__flags & 512 | 0) != 0;
  $23 = $__sym + 1 | 0;
  $24 = $__sym + 8 | 0;
  $25 = $__sym + 4 | 0;
  $26 = $__spaces + 1 | 0;
  $27 = $__spaces + 8 | 0;
  $28 = $__spaces + 4 | 0;
  $29 = $__pat + 3 | 0;
  $30 = $__grp + 4 | 0;
  $896 = $__gbuf;
  $__p$0 = 0;
  $__trailing_sign$0 = 0;
  L23 : while (1) {
   if ($__p$0 >>> 0 >= 4) {
    $$lcssa326 = $896;
    $__trailing_sign$0$lcssa = $__trailing_sign$0;
    label = 315;
    break;
   }
   $32 = HEAP32[$__b >> 2] | 0;
   do if (!$32) $46 = 0; else if ((HEAP32[$32 + 12 >> 2] | 0) == (HEAP32[$32 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $42 = invoke_ii(HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] | 0, $32 | 0) | 0;
    $43 = __THREW__;
    __THREW__ = 0;
    if ($43 & 1) {
     label = 40;
     break L23;
    }
    if (($42 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $46 = 0;
     break;
    } else {
     $46 = HEAP32[$__b >> 2] | 0;
     break;
    }
   } else $46 = $32; while (0);
   $47 = ($46 | 0) == 0;
   $48 = HEAP32[$__e >> 2] | 0;
   do if (!$48) label = 31; else {
    if ((HEAP32[$48 + 12 >> 2] | 0) != (HEAP32[$48 + 16 >> 2] | 0)) if ($47) {
     $897 = $48;
     break;
    } else {
     $$lcssa326 = $896;
     $__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 315;
     break L23;
    }
    __THREW__ = 0;
    $58 = invoke_ii(HEAP32[(HEAP32[$48 >> 2] | 0) + 36 >> 2] | 0, $48 | 0) | 0;
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     label = 40;
     break L23;
    }
    if (($58 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 31;
     break;
    } else if ($47) {
     $897 = $48;
     break;
    } else {
     $$lcssa326 = $896;
     $__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 315;
     break L23;
    }
   } while (0);
   if ((label | 0) == 31) {
    label = 0;
    if ($47) {
     $$lcssa326 = $896;
     $__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 315;
     break;
    } else $897 = 0;
   }
   L46 : do switch (HEAP8[$__pat + $__p$0 >> 0] | 0) {
   case 1:
    {
     if (($__p$0 | 0) == 3) {
      $898 = $896;
      $__trailing_sign$1 = $__trailing_sign$0;
     } else {
      $87 = HEAP32[$__b >> 2] | 0;
      $89 = HEAP32[$87 + 12 >> 2] | 0;
      if (($89 | 0) == (HEAP32[$87 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $96 = invoke_ii(HEAP32[(HEAP32[$87 >> 2] | 0) + 36 >> 2] | 0, $87 | 0) | 0;
       $97 = __THREW__;
       __THREW__ = 0;
       if ($97 & 1) {
        label = 40;
        break L23;
       } else $$0$i$i42 = $96;
      } else $$0$i$i42 = HEAPU8[$89 >> 0] | 0;
      if (($$0$i$i42 & 255) << 24 >> 24 <= -1) {
       label = 56;
       break L23;
      }
      if (!(HEAP16[(HEAP32[$16 >> 2] | 0) + ($$0$i$i42 << 24 >> 24 << 1) >> 1] & 8192)) {
       label = 56;
       break L23;
      }
      $108 = HEAP32[$__b >> 2] | 0;
      $109 = $108 + 12 | 0;
      $110 = HEAP32[$109 >> 2] | 0;
      if (($110 | 0) == (HEAP32[$108 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $117 = invoke_ii(HEAP32[(HEAP32[$108 >> 2] | 0) + 40 >> 2] | 0, $108 | 0) | 0;
       $118 = __THREW__;
       __THREW__ = 0;
       if ($118 & 1) {
        label = 40;
        break L23;
       } else $$0$i$i45 = $117;
      } else {
       HEAP32[$109 >> 2] = $110 + 1;
       $$0$i$i45 = HEAPU8[$110 >> 0] | 0;
      }
      __THREW__ = 0;
      invoke_vii(44, $__spaces | 0, $$0$i$i45 & 255 | 0);
      $124 = __THREW__;
      __THREW__ = 0;
      if ($124 & 1) {
       label = 40;
       break L23;
      } else label = 58;
     }
     break;
    }
   case 4:
    {
     $65 = HEAP8[$__ts >> 0] | 0;
     $$pre$i2$i$i147 = $897;
     $562 = $897;
     $617 = $896;
     $__ng$0 = 0;
     L60 : while (1) {
      $546 = HEAP32[$__b >> 2] | 0;
      do if (!$546) $560 = 0; else if ((HEAP32[$546 + 12 >> 2] | 0) == (HEAP32[$546 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $556 = invoke_ii(HEAP32[(HEAP32[$546 >> 2] | 0) + 36 >> 2] | 0, $546 | 0) | 0;
       $557 = __THREW__;
       __THREW__ = 0;
       if ($557 & 1) {
        label = 39;
        break L23;
       }
       if (($556 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $560 = 0;
        break;
       } else {
        $560 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $560 = $546; while (0);
      $561 = ($560 | 0) == 0;
      do if (!$562) {
       $905 = $$pre$i2$i$i147;
       label = 229;
      } else {
       if ((HEAP32[$562 + 12 >> 2] | 0) != (HEAP32[$562 + 16 >> 2] | 0)) if ($561) {
        $906 = $$pre$i2$i$i147;
        $907 = $562;
        break;
       } else {
        $$lcssa322 = $617;
        $$pre$i2$i$i107 = $$pre$i2$i$i147;
        $__ng$0$lcssa323 = $__ng$0;
        break L60;
       }
       __THREW__ = 0;
       $572 = invoke_ii(HEAP32[(HEAP32[$562 >> 2] | 0) + 36 >> 2] | 0, $562 | 0) | 0;
       $573 = __THREW__;
       __THREW__ = 0;
       if ($573 & 1) {
        label = 39;
        break L23;
       }
       if (($572 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $905 = 0;
        label = 229;
        break;
       } else if ($561 ^ ($$pre$i2$i$i147 | 0) == 0) {
        $906 = $$pre$i2$i$i147;
        $907 = $$pre$i2$i$i147;
        break;
       } else {
        $$lcssa322 = $617;
        $$pre$i2$i$i107 = $$pre$i2$i$i147;
        $__ng$0$lcssa323 = $__ng$0;
        break L60;
       }
      } while (0);
      if ((label | 0) == 229) {
       label = 0;
       if ($561) {
        $$lcssa322 = $617;
        $$pre$i2$i$i107 = $905;
        $__ng$0$lcssa323 = $__ng$0;
        break;
       } else {
        $906 = $905;
        $907 = 0;
       }
      }
      $577 = HEAP32[$__b >> 2] | 0;
      $579 = HEAP32[$577 + 12 >> 2] | 0;
      if (($579 | 0) == (HEAP32[$577 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $586 = invoke_ii(HEAP32[(HEAP32[$577 >> 2] | 0) + 36 >> 2] | 0, $577 | 0) | 0;
       $587 = __THREW__;
       __THREW__ = 0;
       if ($587 & 1) {
        label = 39;
        break L23;
       } else $$0$i$i139 = $586;
      } else $$0$i$i139 = HEAPU8[$579 >> 0] | 0;
      $591 = $$0$i$i139 & 255;
      if ($591 << 24 >> 24 > -1) if (!(HEAP16[(HEAP32[$16 >> 2] | 0) + ($$0$i$i139 << 24 >> 24 << 1) >> 1] & 2048)) label = 240; else {
       $598 = HEAP32[$__wn >> 2] | 0;
       if (($598 | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(16, $__wb | 0, $__wn | 0, $0 | 0);
        $601 = __THREW__;
        __THREW__ = 0;
        if ($601 & 1) {
         label = 39;
         break L23;
        }
        $604 = HEAP32[$__wn >> 2] | 0;
       } else $604 = $598;
       HEAP32[$__wn >> 2] = $604 + 1;
       HEAP8[$604 >> 0] = $591;
       $908 = $617;
       $__ng$1 = $__ng$0 + 1 | 0;
      } else label = 240;
      if ((label | 0) == 240) {
       label = 0;
       $606 = HEAP8[$__grp >> 0] | 0;
       if (!($606 & 1)) $612 = ($606 & 255) >>> 1; else $612 = HEAP32[$30 >> 2] | 0;
       if (!(($__ng$0 | 0) != 0 & ($612 | 0) != 0 & $591 << 24 >> 24 == $65 << 24 >> 24)) {
        $$lcssa322 = $617;
        $$pre$i2$i$i107 = $906;
        $__ng$0$lcssa323 = $__ng$0;
        break;
       }
       if (($617 | 0) == (HEAP32[$__ge >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(17, $__gb | 0, $__gn | 0, $__ge | 0);
        $619 = __THREW__;
        __THREW__ = 0;
        if ($619 & 1) {
         label = 39;
         break L23;
        }
        $622 = HEAP32[$__gn >> 2] | 0;
       } else $622 = $617;
       $621 = $622 + 4 | 0;
       HEAP32[$__gn >> 2] = $621;
       HEAP32[$622 >> 2] = $__ng$0;
       $908 = $621;
       $__ng$1 = 0;
      }
      $623 = HEAP32[$__b >> 2] | 0;
      $624 = $623 + 12 | 0;
      $625 = HEAP32[$624 >> 2] | 0;
      if (($625 | 0) == (HEAP32[$623 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$623 >> 2] | 0) + 40 >> 2] | 0, $623 | 0) | 0;
       $632 = __THREW__;
       __THREW__ = 0;
       if ($632 & 1) {
        label = 39;
        break L23;
       }
      } else HEAP32[$624 >> 2] = $625 + 1;
      $$pre$i2$i$i147 = $906;
      $562 = $907;
      $617 = $908;
      $__ng$0 = $__ng$1;
     }
     if (($__ng$0$lcssa323 | 0) != 0 ? (HEAP32[$__gb >> 2] | 0) != ($$lcssa322 | 0) : 0) {
      if (($$lcssa322 | 0) == (HEAP32[$__ge >> 2] | 0)) {
       __THREW__ = 0;
       invoke_viii(17, $__gb | 0, $__gn | 0, $__ge | 0);
       $640 = __THREW__;
       __THREW__ = 0;
       if ($640 & 1) {
        label = 40;
        break L23;
       }
       $643 = HEAP32[$__gn >> 2] | 0;
      } else $643 = $$lcssa322;
      $642 = $643 + 4 | 0;
      HEAP32[$__gn >> 2] = $642;
      HEAP32[$643 >> 2] = $__ng$0$lcssa323;
      $909 = $642;
     } else $909 = $$lcssa322;
     $644 = HEAP32[$__fd >> 2] | 0;
     if (($644 | 0) > 0) {
      $646 = HEAP32[$__b >> 2] | 0;
      do if (!$646) $660 = 0; else if ((HEAP32[$646 + 12 >> 2] | 0) == (HEAP32[$646 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $656 = invoke_ii(HEAP32[(HEAP32[$646 >> 2] | 0) + 36 >> 2] | 0, $646 | 0) | 0;
       $657 = __THREW__;
       __THREW__ = 0;
       if ($657 & 1) {
        label = 40;
        break L23;
       }
       if (($656 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $660 = 0;
        break;
       } else {
        $660 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $660 = $646; while (0);
      $661 = ($660 | 0) == 0;
      do if (!$$pre$i2$i$i107) label = 270; else {
       if ((HEAP32[$$pre$i2$i$i107 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i107 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $671 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i107 >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i107 | 0) | 0;
        $672 = __THREW__;
        __THREW__ = 0;
        if ($672 & 1) {
         label = 40;
         break L23;
        }
        if (($671 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         label = 270;
         break;
        }
       }
       if ($661) $910 = $$pre$i2$i$i107; else {
        label = 275;
        break L23;
       }
      } while (0);
      if ((label | 0) == 270) {
       label = 0;
       if ($661) {
        label = 275;
        break L23;
       } else $910 = 0;
      }
      $675 = HEAP32[$__b >> 2] | 0;
      $677 = HEAP32[$675 + 12 >> 2] | 0;
      if (($677 | 0) == (HEAP32[$675 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $684 = invoke_ii(HEAP32[(HEAP32[$675 >> 2] | 0) + 36 >> 2] | 0, $675 | 0) | 0;
       $685 = __THREW__;
       __THREW__ = 0;
       if ($685 & 1) {
        label = 40;
        break L23;
       } else $$0$i$i96 = $684;
      } else $$0$i$i96 = HEAPU8[$677 >> 0] | 0;
      if (($$0$i$i96 & 255) << 24 >> 24 != (HEAP8[$__dp >> 0] | 0)) {
       label = 275;
       break L23;
      }
      $694 = HEAP32[$__b >> 2] | 0;
      $695 = $694 + 12 | 0;
      $696 = HEAP32[$695 >> 2] | 0;
      if (($696 | 0) == (HEAP32[$694 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$694 >> 2] | 0) + 40 >> 2] | 0, $694 | 0) | 0;
       $703 = __THREW__;
       __THREW__ = 0;
       if ($703 & 1) {
        label = 40;
        break L23;
       }
      } else HEAP32[$695 >> 2] = $696 + 1;
      $$pre$i2$i$i83 = $910;
      $706 = $644;
      $724 = $910;
      while (1) {
       if (($706 | 0) <= 0) break;
       $708 = HEAP32[$__b >> 2] | 0;
       do if (!$708) $722 = 0; else if ((HEAP32[$708 + 12 >> 2] | 0) == (HEAP32[$708 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $718 = invoke_ii(HEAP32[(HEAP32[$708 >> 2] | 0) + 36 >> 2] | 0, $708 | 0) | 0;
        $719 = __THREW__;
        __THREW__ = 0;
        if ($719 & 1) {
         label = 38;
         break L23;
        }
        if (($718 | 0) == -1) {
         HEAP32[$__b >> 2] = 0;
         $722 = 0;
         break;
        } else {
         $722 = HEAP32[$__b >> 2] | 0;
         break;
        }
       } else $722 = $708; while (0);
       $723 = ($722 | 0) == 0;
       do if (!$724) {
        $$pre$i2$i$i83274$ph = $$pre$i2$i$i83;
        label = 293;
       } else {
        if ((HEAP32[$724 + 12 >> 2] | 0) != (HEAP32[$724 + 16 >> 2] | 0)) if ($723) {
         $$pre$i2$i$i83274287 = $$pre$i2$i$i83;
         $911 = $724;
         break;
        } else {
         label = 300;
         break L23;
        }
        __THREW__ = 0;
        $734 = invoke_ii(HEAP32[(HEAP32[$724 >> 2] | 0) + 36 >> 2] | 0, $724 | 0) | 0;
        $735 = __THREW__;
        __THREW__ = 0;
        if ($735 & 1) {
         label = 38;
         break L23;
        }
        if (($734 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         $$pre$i2$i$i83274$ph = 0;
         label = 293;
         break;
        } else if ($723 ^ ($$pre$i2$i$i83 | 0) == 0) {
         $$pre$i2$i$i83274287 = $$pre$i2$i$i83;
         $911 = $$pre$i2$i$i83;
         break;
        } else {
         label = 300;
         break L23;
        }
       } while (0);
       if ((label | 0) == 293) {
        label = 0;
        if ($723) {
         label = 300;
         break L23;
        } else {
         $$pre$i2$i$i83274287 = $$pre$i2$i$i83274$ph;
         $911 = 0;
        }
       }
       $739 = HEAP32[$__b >> 2] | 0;
       $741 = HEAP32[$739 + 12 >> 2] | 0;
       if (($741 | 0) == (HEAP32[$739 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $748 = invoke_ii(HEAP32[(HEAP32[$739 >> 2] | 0) + 36 >> 2] | 0, $739 | 0) | 0;
        $749 = __THREW__;
        __THREW__ = 0;
        if ($749 & 1) {
         label = 38;
         break L23;
        } else $$0$i$i74 = $748;
       } else $$0$i$i74 = HEAPU8[$741 >> 0] | 0;
       if (($$0$i$i74 & 255) << 24 >> 24 <= -1) {
        label = 300;
        break L23;
       }
       if (!(HEAP16[(HEAP32[$16 >> 2] | 0) + ($$0$i$i74 << 24 >> 24 << 1) >> 1] & 2048)) {
        label = 300;
        break L23;
       }
       if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(16, $__wb | 0, $__wn | 0, $0 | 0);
        $765 = __THREW__;
        __THREW__ = 0;
        if ($765 & 1) {
         label = 38;
         break L23;
        }
       }
       $767 = HEAP32[$__b >> 2] | 0;
       $769 = HEAP32[$767 + 12 >> 2] | 0;
       if (($769 | 0) == (HEAP32[$767 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $776 = invoke_ii(HEAP32[(HEAP32[$767 >> 2] | 0) + 36 >> 2] | 0, $767 | 0) | 0;
        $777 = __THREW__;
        __THREW__ = 0;
        if ($777 & 1) {
         label = 38;
         break L23;
        } else $$0$i$i67 = $776;
       } else $$0$i$i67 = HEAPU8[$769 >> 0] | 0;
       $782 = HEAP32[$__wn >> 2] | 0;
       HEAP32[$__wn >> 2] = $782 + 1;
       HEAP8[$782 >> 0] = $$0$i$i67;
       $784 = $706 + -1 | 0;
       HEAP32[$__fd >> 2] = $784;
       $785 = HEAP32[$__b >> 2] | 0;
       $786 = $785 + 12 | 0;
       $787 = HEAP32[$786 >> 2] | 0;
       if (($787 | 0) == (HEAP32[$785 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$785 >> 2] | 0) + 40 >> 2] | 0, $785 | 0) | 0;
        $794 = __THREW__;
        __THREW__ = 0;
        if ($794 & 1) {
         label = 38;
         break L23;
        }
       } else HEAP32[$786 >> 2] = $787 + 1;
       $$pre$i2$i$i83 = $$pre$i2$i$i83274287;
       $706 = $784;
       $724 = $911;
      }
     }
     if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__wb >> 2] | 0)) {
      label = 312;
      break L23;
     } else {
      $898 = $909;
      $__trailing_sign$1 = $__trailing_sign$0;
     }
     break;
    }
   case 2:
    {
     if (!($__p$0 >>> 0 < 2 | ($__trailing_sign$0 | 0) != 0)) {
      if (($__p$0 | 0) == 2) $406 = (HEAP8[$29 >> 0] | 0) != 0; else $406 = 0;
      if (!($22 | $406)) {
       $898 = $896;
       $__trailing_sign$1 = 0;
       break L46;
      }
     }
     $407 = HEAP8[$__sym >> 0] | 0;
     $409 = ($407 & 1) == 0;
     $$ = $409 ? $23 : HEAP32[$24 >> 2] | 0;
     L195 : do if (!$__p$0) $$ph = $$; else if ((HEAPU8[$__pat + ($__p$0 + -1) >> 0] | 0) < 2) {
      $416 = ($407 & 255) >>> 1;
      $417 = HEAP32[$16 >> 2] | 0;
      $418 = HEAP32[$24 >> 2] | 0;
      $419 = HEAP32[$25 >> 2] | 0;
      $421 = $$;
      while (1) {
       if (($421 | 0) == (($409 ? $23 : $418) + ($409 ? $416 : $419) | 0)) {
        $$lcssa = $421;
        break;
       }
       $423 = HEAP8[$421 >> 0] | 0;
       if ($423 << 24 >> 24 <= -1) {
        $$lcssa = $421;
        break;
       }
       if (!(HEAP16[$417 + ($423 << 24 >> 24 << 1) >> 1] & 8192)) {
        $$lcssa = $421;
        break;
       }
       $421 = $421 + 1 | 0;
      }
      $432 = $$lcssa - ($409 ? $23 : $418) | 0;
      $433 = HEAP8[$__spaces >> 0] | 0;
      $435 = ($433 & 1) == 0;
      if ($435) $440 = ($433 & 255) >>> 1; else $440 = HEAP32[$28 >> 2] | 0;
      do if ($432 >>> 0 <= $440 >>> 0) {
       if ($435) {
        $450 = $26;
        $451 = ($433 & 255) >>> 1;
        $903 = $__spaces + ((($433 & 255) >>> 1) - $432) + 1 | 0;
       } else {
        $441 = HEAP32[$27 >> 2] | 0;
        $442 = HEAP32[$28 >> 2] | 0;
        $450 = $441;
        $451 = $442;
        $903 = $441 + ($442 - $432) | 0;
       }
       $449 = $450 + $451 | 0;
       $452 = $903;
       $456 = $409 ? $23 : $418;
       while (1) {
        if (($452 | 0) == ($449 | 0)) {
         label = 183;
         break;
        }
        if ((HEAP8[$452 >> 0] | 0) != (HEAP8[$456 >> 0] | 0)) {
         label = 181;
         break;
        }
        $452 = $452 + 1 | 0;
        $456 = $456 + 1 | 0;
       }
       if ((label | 0) == 181) {
        label = 0;
        break;
       } else if ((label | 0) == 183) {
        label = 0;
        $$ph = $$lcssa;
        break L195;
       }
      } while (0);
      $$ph = $409 ? $23 : $418;
     } else $$ph = $$; while (0);
     $$pre$i2$i$i164 = $897;
     $461 = $407;
     $470 = $$ph;
     $488 = $897;
     L223 : while (1) {
      if (!($461 & 1)) {
       $468 = $23;
       $469 = ($461 & 255) >>> 1;
      } else {
       $468 = HEAP32[$24 >> 2] | 0;
       $469 = HEAP32[$25 >> 2] | 0;
      }
      if (($470 | 0) == ($468 + $469 | 0)) {
       $$lcssa324 = $470;
       break;
      }
      $472 = HEAP32[$__b >> 2] | 0;
      do if (!$472) $486 = 0; else if ((HEAP32[$472 + 12 >> 2] | 0) == (HEAP32[$472 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $482 = invoke_ii(HEAP32[(HEAP32[$472 >> 2] | 0) + 36 >> 2] | 0, $472 | 0) | 0;
       $483 = __THREW__;
       __THREW__ = 0;
       if ($483 & 1) {
        label = 37;
        break L23;
       }
       if (($482 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $486 = 0;
        break;
       } else {
        $486 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $486 = $472; while (0);
      $487 = ($486 | 0) == 0;
      do if (!$488) {
       $$pre$i2$i$i164270 = $$pre$i2$i$i164;
       label = 201;
      } else {
       if ((HEAP32[$488 + 12 >> 2] | 0) != (HEAP32[$488 + 16 >> 2] | 0)) if ($487) {
        $$pre$i2$i$i164269 = $$pre$i2$i$i164;
        $904 = $488;
        break;
       } else {
        $$lcssa324 = $470;
        break L223;
       }
       __THREW__ = 0;
       $498 = invoke_ii(HEAP32[(HEAP32[$488 >> 2] | 0) + 36 >> 2] | 0, $488 | 0) | 0;
       $499 = __THREW__;
       __THREW__ = 0;
       if ($499 & 1) {
        label = 37;
        break L23;
       }
       if (($498 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $$pre$i2$i$i164270 = 0;
        label = 201;
        break;
       } else if ($487 ^ ($$pre$i2$i$i164 | 0) == 0) {
        $$pre$i2$i$i164269 = $$pre$i2$i$i164;
        $904 = $$pre$i2$i$i164;
        break;
       } else {
        $$lcssa324 = $470;
        break L223;
       }
      } while (0);
      if ((label | 0) == 201) {
       label = 0;
       if ($487) {
        $$lcssa324 = $470;
        break;
       } else {
        $$pre$i2$i$i164269 = $$pre$i2$i$i164270;
        $904 = 0;
       }
      }
      $503 = HEAP32[$__b >> 2] | 0;
      $505 = HEAP32[$503 + 12 >> 2] | 0;
      if (($505 | 0) == (HEAP32[$503 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $512 = invoke_ii(HEAP32[(HEAP32[$503 >> 2] | 0) + 36 >> 2] | 0, $503 | 0) | 0;
       $513 = __THREW__;
       __THREW__ = 0;
       if ($513 & 1) {
        label = 37;
        break L23;
       } else $$0$i$i156 = $512;
      } else $$0$i$i156 = HEAPU8[$505 >> 0] | 0;
      if (($$0$i$i156 & 255) << 24 >> 24 != (HEAP8[$470 >> 0] | 0)) {
       $$lcssa324 = $470;
       break;
      }
      $520 = HEAP32[$__b >> 2] | 0;
      $521 = $520 + 12 | 0;
      $522 = HEAP32[$521 >> 2] | 0;
      if (($522 | 0) == (HEAP32[$520 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$520 >> 2] | 0) + 40 >> 2] | 0, $520 | 0) | 0;
       $529 = __THREW__;
       __THREW__ = 0;
       if ($529 & 1) {
        label = 37;
        break L23;
       }
      } else HEAP32[$521 >> 2] = $522 + 1;
      $$pre$i2$i$i164 = $$pre$i2$i$i164269;
      $461 = HEAP8[$__sym >> 0] | 0;
      $470 = $470 + 1 | 0;
      $488 = $904;
     }
     if ($22) {
      $533 = HEAP8[$__sym >> 0] | 0;
      if (!($533 & 1)) {
       $541 = $23;
       $542 = ($533 & 255) >>> 1;
      } else {
       $541 = HEAP32[$24 >> 2] | 0;
       $542 = HEAP32[$25 >> 2] | 0;
      }
      if (($$lcssa324 | 0) == ($541 + $542 | 0)) {
       $898 = $896;
       $__trailing_sign$1 = $__trailing_sign$0;
      } else {
       label = 216;
       break L23;
      }
     } else {
      $898 = $896;
      $__trailing_sign$1 = $__trailing_sign$0;
     }
     break;
    }
   case 3:
    {
     $199 = HEAP16[$__psn >> 1] | 0;
     $200 = $199 & 255;
     $202 = ($200 & 1) == 0;
     $204 = ($199 & 65535) >>> 8 & 255;
     if ($202) $219 = ($199 & 254) >>> 1; else $219 = HEAP32[$19 >> 2] | 0;
     $208 = HEAP16[$__nsn >> 1] | 0;
     $209 = $208 & 255;
     $211 = ($209 & 1) == 0;
     $213 = ($208 & 65535) >>> 8 & 255;
     if ($211) $218 = ($208 & 254) >>> 1; else $218 = HEAP32[$17 >> 2] | 0;
     if (($219 | 0) == (0 - $218 | 0)) {
      $898 = $896;
      $__trailing_sign$1 = $__trailing_sign$0;
     } else {
      if ($202) $224 = ($199 & 254) >>> 1; else $224 = HEAP32[$19 >> 2] | 0;
      if ($224) {
       if ($211) $229 = ($208 & 254) >>> 1; else $229 = HEAP32[$17 >> 2] | 0;
       if ($229) {
        $318 = HEAP32[$__b >> 2] | 0;
        $320 = HEAP32[$318 + 12 >> 2] | 0;
        if (($320 | 0) == (HEAP32[$318 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $327 = invoke_ii(HEAP32[(HEAP32[$318 >> 2] | 0) + 36 >> 2] | 0, $318 | 0) | 0;
         $328 = __THREW__;
         __THREW__ = 0;
         if ($328 & 1) {
          label = 40;
          break L23;
         }
         $$pre265 = HEAP16[$__psn >> 1] | 0;
         $$0$i$i120 = $327;
         $337 = $$pre265 & 255;
         $902 = ($$pre265 & 65535) >>> 8 & 255;
        } else {
         $$0$i$i120 = HEAPU8[$320 >> 0] | 0;
         $337 = $200;
         $902 = $204;
        }
        if (!($337 & 1)) $341 = $902; else $341 = HEAP8[HEAP32[$20 >> 2] >> 0] | 0;
        $342 = HEAP32[$__b >> 2] | 0;
        $343 = $342 + 12 | 0;
        $344 = HEAP32[$343 >> 2] | 0;
        $347 = ($344 | 0) == (HEAP32[$342 + 16 >> 2] | 0);
        if (($$0$i$i120 & 255) << 24 >> 24 == $341 << 24 >> 24) {
         if ($347) {
          __THREW__ = 0;
          invoke_ii(HEAP32[(HEAP32[$342 >> 2] | 0) + 40 >> 2] | 0, $342 | 0) | 0;
          $351 = __THREW__;
          __THREW__ = 0;
          if ($351 & 1) {
           label = 40;
           break L23;
          }
         } else HEAP32[$343 >> 2] = $344 + 1;
         $354 = HEAP8[$__psn >> 0] | 0;
         if (!($354 & 1)) $360 = ($354 & 255) >>> 1; else $360 = HEAP32[$19 >> 2] | 0;
         $898 = $896;
         $__trailing_sign$1 = $360 >>> 0 > 1 ? $__psn : $__trailing_sign$0;
         break L46;
        }
        if ($347) {
         __THREW__ = 0;
         $365 = invoke_ii(HEAP32[(HEAP32[$342 >> 2] | 0) + 36 >> 2] | 0, $342 | 0) | 0;
         $366 = __THREW__;
         __THREW__ = 0;
         if ($366 & 1) {
          label = 40;
          break L23;
         } else $$0$i$i129 = $365;
        } else $$0$i$i129 = HEAPU8[$344 >> 0] | 0;
        $371 = HEAP16[$__nsn >> 1] | 0;
        if (!($371 & 1)) $378 = ($371 & 65535) >>> 8 & 255; else $378 = HEAP8[HEAP32[$18 >> 2] >> 0] | 0;
        if (($$0$i$i129 & 255) << 24 >> 24 != $378 << 24 >> 24) {
         label = 158;
         break L23;
        }
        $379 = HEAP32[$__b >> 2] | 0;
        $380 = $379 + 12 | 0;
        $381 = HEAP32[$380 >> 2] | 0;
        if (($381 | 0) == (HEAP32[$379 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         invoke_ii(HEAP32[(HEAP32[$379 >> 2] | 0) + 40 >> 2] | 0, $379 | 0) | 0;
         $388 = __THREW__;
         __THREW__ = 0;
         if ($388 & 1) {
          label = 40;
          break L23;
         }
        } else HEAP32[$380 >> 2] = $381 + 1;
        HEAP8[$__neg >> 0] = 1;
        $391 = HEAP8[$__nsn >> 0] | 0;
        if (!($391 & 1)) $397 = ($391 & 255) >>> 1; else $397 = HEAP32[$17 >> 2] | 0;
        $898 = $896;
        $__trailing_sign$1 = $397 >>> 0 > 1 ? $__nsn : $__trailing_sign$0;
        break L46;
       }
      }
      if ($202) $234 = ($199 & 254) >>> 1; else $234 = HEAP32[$19 >> 2] | 0;
      $236 = HEAP32[$__b >> 2] | 0;
      $238 = HEAP32[$236 + 12 >> 2] | 0;
      $241 = ($238 | 0) == (HEAP32[$236 + 16 >> 2] | 0);
      if (!$234) {
       if ($241) {
        __THREW__ = 0;
        $283 = invoke_ii(HEAP32[(HEAP32[$236 >> 2] | 0) + 36 >> 2] | 0, $236 | 0) | 0;
        $284 = __THREW__;
        __THREW__ = 0;
        if ($284 & 1) {
         label = 40;
         break L23;
        }
        $$pre = HEAP16[$__nsn >> 1] | 0;
        $$0$i$i113 = $283;
        $293 = $$pre & 255;
        $901 = ($$pre & 65535) >>> 8 & 255;
       } else {
        $$0$i$i113 = HEAPU8[$238 >> 0] | 0;
        $293 = $209;
        $901 = $213;
       }
       if (!($293 & 1)) $297 = $901; else $297 = HEAP8[HEAP32[$18 >> 2] >> 0] | 0;
       if (($$0$i$i113 & 255) << 24 >> 24 != $297 << 24 >> 24) {
        $898 = $896;
        $__trailing_sign$1 = $__trailing_sign$0;
        break L46;
       }
       $298 = HEAP32[$__b >> 2] | 0;
       $299 = $298 + 12 | 0;
       $300 = HEAP32[$299 >> 2] | 0;
       if (($300 | 0) == (HEAP32[$298 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$298 >> 2] | 0) + 40 >> 2] | 0, $298 | 0) | 0;
        $307 = __THREW__;
        __THREW__ = 0;
        if ($307 & 1) {
         label = 40;
         break L23;
        }
       } else HEAP32[$299 >> 2] = $300 + 1;
       HEAP8[$__neg >> 0] = 1;
       $310 = HEAP8[$__nsn >> 0] | 0;
       if (!($310 & 1)) $316 = ($310 & 255) >>> 1; else $316 = HEAP32[$17 >> 2] | 0;
       $898 = $896;
       $__trailing_sign$1 = $316 >>> 0 > 1 ? $__nsn : $__trailing_sign$0;
       break L46;
      }
      if ($241) {
       __THREW__ = 0;
       $245 = invoke_ii(HEAP32[(HEAP32[$236 >> 2] | 0) + 36 >> 2] | 0, $236 | 0) | 0;
       $246 = __THREW__;
       __THREW__ = 0;
       if ($246 & 1) {
        label = 40;
        break L23;
       }
       $$pre262 = HEAP16[$__psn >> 1] | 0;
       $$0$i$i93 = $245;
       $255 = $$pre262 & 255;
       $900 = ($$pre262 & 65535) >>> 8 & 255;
      } else {
       $$0$i$i93 = HEAPU8[$238 >> 0] | 0;
       $255 = $200;
       $900 = $204;
      }
      if (!($255 & 1)) $259 = $900; else $259 = HEAP8[HEAP32[$20 >> 2] >> 0] | 0;
      if (($$0$i$i93 & 255) << 24 >> 24 != $259 << 24 >> 24) {
       HEAP8[$__neg >> 0] = 1;
       $898 = $896;
       $__trailing_sign$1 = $__trailing_sign$0;
       break L46;
      }
      $260 = HEAP32[$__b >> 2] | 0;
      $261 = $260 + 12 | 0;
      $262 = HEAP32[$261 >> 2] | 0;
      if (($262 | 0) == (HEAP32[$260 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$260 >> 2] | 0) + 40 >> 2] | 0, $260 | 0) | 0;
       $269 = __THREW__;
       __THREW__ = 0;
       if ($269 & 1) {
        label = 40;
        break L23;
       }
      } else HEAP32[$261 >> 2] = $262 + 1;
      $272 = HEAP8[$__psn >> 0] | 0;
      if (!($272 & 1)) $278 = ($272 & 255) >>> 1; else $278 = HEAP32[$19 >> 2] | 0;
      $898 = $896;
      $__trailing_sign$1 = $278 >>> 0 > 1 ? $__psn : $__trailing_sign$0;
     }
     break;
    }
   case 0:
    {
     if (($__p$0 | 0) == 3) {
      $898 = $896;
      $__trailing_sign$1 = $__trailing_sign$0;
     } else label = 58;
     break;
    }
   default:
    {
     $898 = $896;
     $__trailing_sign$1 = $__trailing_sign$0;
    }
   } while (0);
   if ((label | 0) == 58) {
    label = 0;
    $$pre$i2$i$i52 = $897;
    $145 = $897;
    L369 : while (1) {
     $129 = HEAP32[$__b >> 2] | 0;
     do if (!$129) $143 = 0; else if ((HEAP32[$129 + 12 >> 2] | 0) == (HEAP32[$129 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $139 = invoke_ii(HEAP32[(HEAP32[$129 >> 2] | 0) + 36 >> 2] | 0, $129 | 0) | 0;
      $140 = __THREW__;
      __THREW__ = 0;
      if ($140 & 1) {
       label = 36;
       break L23;
      }
      if (($139 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $143 = 0;
       break;
      } else {
       $143 = HEAP32[$__b >> 2] | 0;
       break;
      }
     } else $143 = $129; while (0);
     $144 = ($143 | 0) == 0;
     do if (!$145) {
      $$pre$i2$i$i52256 = $$pre$i2$i$i52;
      label = 71;
     } else {
      if ((HEAP32[$145 + 12 >> 2] | 0) != (HEAP32[$145 + 16 >> 2] | 0)) if ($144) {
       $$pre$i2$i$i52258 = $$pre$i2$i$i52;
       $899 = $145;
       break;
      } else break L369;
      __THREW__ = 0;
      $155 = invoke_ii(HEAP32[(HEAP32[$145 >> 2] | 0) + 36 >> 2] | 0, $145 | 0) | 0;
      $156 = __THREW__;
      __THREW__ = 0;
      if ($156 & 1) {
       label = 36;
       break L23;
      }
      if (($155 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       $$pre$i2$i$i52256 = 0;
       label = 71;
       break;
      } else if ($144 ^ ($$pre$i2$i$i52 | 0) == 0) {
       $$pre$i2$i$i52258 = $$pre$i2$i$i52;
       $899 = $$pre$i2$i$i52;
       break;
      } else break L369;
     } while (0);
     if ((label | 0) == 71) {
      label = 0;
      if ($144) break; else {
       $$pre$i2$i$i52258 = $$pre$i2$i$i52256;
       $899 = 0;
      }
     }
     $160 = HEAP32[$__b >> 2] | 0;
     $162 = HEAP32[$160 + 12 >> 2] | 0;
     if (($162 | 0) == (HEAP32[$160 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $169 = invoke_ii(HEAP32[(HEAP32[$160 >> 2] | 0) + 36 >> 2] | 0, $160 | 0) | 0;
      $170 = __THREW__;
      __THREW__ = 0;
      if ($170 & 1) {
       label = 36;
       break L23;
      } else $$0$i$i58 = $169;
     } else $$0$i$i58 = HEAPU8[$162 >> 0] | 0;
     if (($$0$i$i58 & 255) << 24 >> 24 <= -1) break;
     if (!(HEAP16[(HEAP32[$16 >> 2] | 0) + ($$0$i$i58 << 24 >> 24 << 1) >> 1] & 8192)) break;
     $181 = HEAP32[$__b >> 2] | 0;
     $182 = $181 + 12 | 0;
     $183 = HEAP32[$182 >> 2] | 0;
     if (($183 | 0) == (HEAP32[$181 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $190 = invoke_ii(HEAP32[(HEAP32[$181 >> 2] | 0) + 40 >> 2] | 0, $181 | 0) | 0;
      $191 = __THREW__;
      __THREW__ = 0;
      if ($191 & 1) {
       label = 36;
       break L23;
      } else $$0$i$i64 = $190;
     } else {
      HEAP32[$182 >> 2] = $183 + 1;
      $$0$i$i64 = HEAPU8[$183 >> 0] | 0;
     }
     __THREW__ = 0;
     invoke_vii(44, $__spaces | 0, $$0$i$i64 & 255 | 0);
     $197 = __THREW__;
     __THREW__ = 0;
     if ($197 & 1) {
      label = 36;
      break L23;
     } else {
      $$pre$i2$i$i52 = $$pre$i2$i$i52258;
      $145 = $899;
     }
    }
    $898 = $896;
    $__trailing_sign$1 = $__trailing_sign$0;
   }
   $896 = $898;
   $__p$0 = $__p$0 + 1 | 0;
   $__trailing_sign$0 = $__trailing_sign$1;
  }
  L403 : switch (label | 0) {
  case 36:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L21;
    break;
   }
  case 37:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L21;
    break;
   }
  case 38:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L21;
    break;
   }
  case 39:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L21;
    break;
   }
  case 40:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L21;
    break;
   }
  case 56:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 158:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 216:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 275:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 300:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 312:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 315:
   {
    do if ($__trailing_sign$0$lcssa) {
     $804 = $__trailing_sign$0$lcssa + 1 | 0;
     $805 = $__trailing_sign$0$lcssa + 8 | 0;
     $806 = $__trailing_sign$0$lcssa + 4 | 0;
     $__i$0 = 1;
     L417 : while (1) {
      $807 = HEAP8[$__trailing_sign$0$lcssa >> 0] | 0;
      if (!($807 & 1)) $814 = ($807 & 255) >>> 1; else $814 = HEAP32[$806 >> 2] | 0;
      if ($__i$0 >>> 0 >= $814 >>> 0) {
       label = 345;
       break;
      }
      $815 = HEAP32[$__b >> 2] | 0;
      do if (!$815) $829 = 0; else if ((HEAP32[$815 + 12 >> 2] | 0) == (HEAP32[$815 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $825 = invoke_ii(HEAP32[(HEAP32[$815 >> 2] | 0) + 36 >> 2] | 0, $815 | 0) | 0;
       $826 = __THREW__;
       __THREW__ = 0;
       if ($826 & 1) {
        label = 35;
        break L417;
       }
       if (($825 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $829 = 0;
        break;
       } else {
        $829 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $829 = $815; while (0);
      $830 = ($829 | 0) == 0;
      $831 = HEAP32[$__e >> 2] | 0;
      do if (!$831) label = 333; else {
       if ((HEAP32[$831 + 12 >> 2] | 0) == (HEAP32[$831 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $841 = invoke_ii(HEAP32[(HEAP32[$831 >> 2] | 0) + 36 >> 2] | 0, $831 | 0) | 0;
        $842 = __THREW__;
        __THREW__ = 0;
        if ($842 & 1) {
         label = 35;
         break L417;
        }
        if (($841 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         label = 333;
         break;
        }
       }
       if (!$830) {
        label = 340;
        break L417;
       }
      } while (0);
      if ((label | 0) == 333) {
       label = 0;
       if ($830) {
        label = 340;
        break;
       }
      }
      $845 = HEAP32[$__b >> 2] | 0;
      $847 = HEAP32[$845 + 12 >> 2] | 0;
      if (($847 | 0) == (HEAP32[$845 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $854 = invoke_ii(HEAP32[(HEAP32[$845 >> 2] | 0) + 36 >> 2] | 0, $845 | 0) | 0;
       $855 = __THREW__;
       __THREW__ = 0;
       if ($855 & 1) {
        label = 35;
        break;
       } else $$0$i$i = $854;
      } else $$0$i$i = HEAPU8[$847 >> 0] | 0;
      if (!(HEAP8[$__trailing_sign$0$lcssa >> 0] & 1)) $865 = $804; else $865 = HEAP32[$805 >> 2] | 0;
      if (($$0$i$i & 255) << 24 >> 24 != (HEAP8[$865 + $__i$0 >> 0] | 0)) {
       label = 340;
       break;
      }
      $870 = $__i$0 + 1 | 0;
      $871 = HEAP32[$__b >> 2] | 0;
      $872 = $871 + 12 | 0;
      $873 = HEAP32[$872 >> 2] | 0;
      if (($873 | 0) == (HEAP32[$871 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$871 >> 2] | 0) + 40 >> 2] | 0, $871 | 0) | 0;
       $880 = __THREW__;
       __THREW__ = 0;
       if ($880 & 1) {
        label = 35;
        break;
       }
      } else HEAP32[$872 >> 2] = $873 + 1;
      $__i$0 = $870;
     }
     if ((label | 0) == 35) {
      $66 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $66;
      $lpad$phi$index7 = tempRet0;
      break L21;
     } else if ((label | 0) == 340) {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
      break L403;
     } else if ((label | 0) == 345) break;
    } while (0);
    $883 = HEAP32[$__gb >> 2] | 0;
    if (($883 | 0) == ($$lcssa326 | 0)) $$0 = 1; else {
     HEAP32[$__et >> 2] = 0;
     __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp, $883, $$lcssa326, $__et);
     if (!(HEAP32[$__et >> 2] | 0)) $$0 = 1; else {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
     }
    }
    break;
   }
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
  $889 = HEAP32[$__gb >> 2] | 0;
  HEAP32[$__gb >> 2] = 0;
  if ($889) {
   __THREW__ = 0;
   invoke_vi(HEAP32[$1 >> 2] | 0, $889 | 0);
   $892 = __THREW__;
   __THREW__ = 0;
   if ($892 & 1) {
    $894 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($894);
   }
  }
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $80 = HEAP32[$__gb >> 2] | 0;
 HEAP32[$__gb >> 2] = 0;
 if ($80) {
  __THREW__ = 0;
  invoke_vi(HEAP32[$1 >> 2] | 0, $80 | 0);
  $83 = __THREW__;
  __THREW__ = 0;
  if ($83 & 1) {
   $85 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($85);
  }
 }
 ___resumeException($lpad$phi$index | 0);
 return 0;
}
function __ZL28jsonnet_evaluate_snippet_auxP9JsonnetVmPKcS2_Pib($vm, $filename, $snippet, $error, $multi) {
 $vm = $vm | 0;
 $filename = $filename | 0;
 $snippet = $snippet | 0;
 $error = $error | 0;
 $multi = $multi | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i$i18 = 0, $$0$i$i$i$i18$lcssa = 0, $$0$i$i$i20 = 0, $$0$i$i28 = 0, $$0$i$i46 = 0, $$0$i54 = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i = 0, $$01$i$i$i23 = 0, $$01$i53 = 0, $$03 = 0, $$1 = 0, $$12 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$47 = 0, $$5 = 0, $$58 = 0, $$cast$i$i$i$lcssa = 0, $$cast$i$i$i21$lcssa = 0, $$lcssa = 0, $$lcssa123 = 0, $$pre$phi116Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $103 = 0, $11 = 0, $112 = 0, $113 = 0, $114 = 0, $116 = 0, $118 = 0, $121 = 0, $125 = 0, $128 = 0, $130 = 0, $131 = 0, $133 = 0, $144 = 0, $145 = 0, $146 = 0, $154 = 0, $155 = 0, $157 = 0, $158 = 0, $168 = 0, $169 = 0, $170 = 0, $177 = 0, $178 = 0, $18 = 0, $182 = 0, $184 = 0, $186 = 0, $189 = 0, $19 = 0, $194 = 0, $196 = 0, $198 = 0, $2 = 0, $203 = 0, $204 = 0, $206 = 0, $208 = 0, $21 = 0, $213 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $223 = 0, $227 = 0, $229 = 0, $231 = 0, $233 = 0, $234 = 0, $235 = 0, $237 = 0, $239 = 0, $24 = 0, $240 = 0, $245 = 0, $246 = 0, $248 = 0, $25 = 0, $250 = 0, $251 = 0, $254 = 0, $26 = 0, $264 = 0, $265 = 0, $266 = 0, $272 = 0, $274 = 0, $275 = 0, $280 = 0, $281 = 0, $283 = 0, $284 = 0, $285 = 0, $287 = 0, $289 = 0, $291 = 0, $293 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $301 = 0, $303 = 0, $308 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $317 = 0, $321 = 0, $323 = 0, $325 = 0, $327 = 0, $328 = 0, $329 = 0, $331 = 0, $333 = 0, $334 = 0, $337 = 0, $347 = 0, $348 = 0, $349 = 0, $350 = 0, $356 = 0, $358 = 0, $359 = 0, $364 = 0, $365 = 0, $367 = 0, $368 = 0, $369 = 0, $371 = 0, $373 = 0, $374 = 0, $375 = 0, $378 = 0, $381 = 0, $382 = 0, $385 = 0, $386 = 0, $389 = 0, $39 = 0, $390 = 0, $396 = 0, $398 = 0, $399 = 0, $4 = 0, $404 = 0, $405 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $411 = 0, $413 = 0, $415 = 0, $417 = 0, $418 = 0, $421 = 0, $422 = 0, $423 = 0, $425 = 0, $426 = 0, $428 = 0, $429 = 0, $43 = 0, $439 = 0, $440 = 0, $441 = 0, $442 = 0, $448 = 0, $45 = 0, $450 = 0, $451 = 0, $456 = 0, $457 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $463 = 0, $465 = 0, $467 = 0, $469 = 0, $47 = 0, $471 = 0, $476 = 0, $477 = 0, $479 = 0, $48 = 0, $481 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $491 = 0, $493 = 0, $494 = 0, $495 = 0, $497 = 0, $498 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $57 = 0.0, $58 = 0.0, $6 = 0, $60 = 0, $62 = 0, $65 = 0, $66 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $94 = 0, $95 = 0, $alloc = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i51$index7Z2D = 0, $eh$lpad$body$i51$indexZ2D = 0, $eh$lpad$body40$index23Z2D = 0, $eh$lpad$body40$indexZ2D = 0, $eh$lpad$body66$index15Z2D = 0, $eh$lpad$body66$indexZ2D = 0, $files = 0, $i$0$lcssa = 0, $i$0102 = 0, $i6$0100 = 0, $json_str = 0, $ss = 0, $ss8 = 0, $sz$0$lcssa = 0, $sz$0106 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464 | 0;
 $0 = sp + 452 | 0;
 $1 = sp + 448 | 0;
 $2 = sp + 444 | 0;
 $3 = sp + 432 | 0;
 $4 = sp + 428 | 0;
 $5 = sp + 416 | 0;
 $alloc = sp + 392 | 0;
 $6 = sp + 380 | 0;
 $json_str = sp + 368 | 0;
 $files = sp + 356 | 0;
 $7 = sp + 344 | 0;
 $8 = sp + 332 | 0;
 $9 = sp + 320 | 0;
 $ss = sp + 176 | 0;
 $10 = sp + 160 | 0;
 $ss8 = sp + 16 | 0;
 $11 = sp;
 HEAP32[$alloc + 4 >> 2] = 0;
 HEAP32[$alloc + 8 >> 2] = 0;
 HEAP32[$alloc >> 2] = $alloc + 4;
 HEAP32[$alloc + 12 >> 2] = 0;
 HEAP32[$alloc + 16 >> 2] = 0;
 HEAP32[$alloc + 20 >> 2] = 0;
 $18 = _strlen($filename | 0) | 0;
 __THREW__ = 0;
 invoke_viii(3, $6 | 0, $filename | 0, $18 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 do if ($19 & 1) {
  $43 = ___cxa_find_matching_catch(48, 38664) | 0;
  $$01 = $43;
  $$03 = tempRet0;
 } else {
  __THREW__ = 0;
  $21 = invoke_iiii(36, $alloc | 0, $6 | 0, $snippet | 0) | 0;
  $22 = __THREW__;
  __THREW__ = 0;
  if ($22 & 1) {
   $45 = ___cxa_find_matching_catch(48, 38664) | 0;
   $46 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $$01 = $45;
   $$03 = $46;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  HEAP32[$json_str + 0 >> 2] = 0;
  HEAP32[$json_str + 4 >> 2] = 0;
  HEAP32[$json_str + 8 >> 2] = 0;
  $24 = $files + 4 | 0;
  HEAP32[$24 >> 2] = 0;
  $25 = $files + 8 | 0;
  HEAP32[$25 >> 2] = 0;
  $26 = $files + 4 | 0;
  HEAP32[$files >> 2] = $26;
  do if (!(HEAP8[$vm + 16 >> 0] | 0)) {
   __THREW__ = 0;
   invoke_vi(184, $21 | 0);
   $50 = __THREW__;
   __THREW__ = 0;
   if ($50 & 1) label = 12; else {
    $52 = $vm + 24 | 0;
    $54 = HEAP32[$vm + 8 >> 2] | 0;
    $57 = +((HEAP32[$vm + 12 >> 2] | 0) >>> 0);
    $58 = +HEAPF64[$vm >> 3];
    $60 = HEAP32[$vm + 36 >> 2] | 0;
    $62 = HEAP32[$vm + 40 >> 2] | 0;
    $65 = (HEAP8[$vm + 44 >> 0] | 0) != 0;
    if ($multi) {
     __THREW__ = 0;
     invoke_viiiiiddiii(1, $8 | 0, $alloc | 0, $21 | 0, $52 | 0, $54 | 0, +$57, +$58, $60 | 0, $62 | 0, $65 | 0);
     $66 = __THREW__;
     __THREW__ = 0;
     if ($66 & 1) {
      label = 12;
      break;
     }
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($files, HEAP32[$26 >> 2] | 0);
     HEAP32[$files >> 2] = HEAP32[$8 >> 2];
     $71 = HEAP32[$8 + 4 >> 2] | 0;
     HEAP32[$24 >> 2] = $71;
     $72 = $8 + 8 | 0;
     $73 = HEAP32[$72 >> 2] | 0;
     HEAP32[$25 >> 2] = $73;
     if (!$73) {
      HEAP32[$files >> 2] = $26;
      $77 = $71;
     } else {
      HEAP32[$71 + 8 >> 2] = $26;
      $76 = $8 + 4 | 0;
      HEAP32[$8 >> 2] = $76;
      HEAP32[$76 >> 2] = 0;
      HEAP32[$72 >> 2] = 0;
      $77 = 0;
     }
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($8, $77);
     $$pre$phi116Z2D = $files;
     label = 29;
     break;
    }
    __THREW__ = 0;
    invoke_viiiiiddiii(2, $9 | 0, $alloc | 0, $21 | 0, $52 | 0, $54 | 0, +$57, +$58, $60 | 0, $62 | 0, $65 | 0);
    $78 = __THREW__;
    __THREW__ = 0;
    if ($78 & 1) label = 12; else {
     if (!(HEAP8[$json_str >> 0] & 1)) {
      HEAP8[$json_str + 1 >> 0] = 0;
      HEAP8[$json_str >> 0] = 0;
     } else {
      HEAP8[HEAP32[$json_str + 8 >> 2] >> 0] = 0;
      HEAP32[$json_str + 4 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $json_str | 0, 0);
     $87 = __THREW__;
     __THREW__ = 0;
     if ($87 & 1) {
      $89 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($89);
     } else {
      HEAP32[$json_str + 0 >> 2] = HEAP32[$9 + 0 >> 2];
      HEAP32[$json_str + 4 >> 2] = HEAP32[$9 + 4 >> 2];
      HEAP32[$json_str + 8 >> 2] = HEAP32[$9 + 8 >> 2];
      HEAP32[$9 + 0 >> 2] = 0;
      HEAP32[$9 + 4 >> 2] = 0;
      HEAP32[$9 + 8 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      label = 73;
      break;
     }
    }
   }
  } else {
   __THREW__ = 0;
   invoke_vii(69, $7 | 0, $21 | 0);
   $30 = __THREW__;
   __THREW__ = 0;
   if ($30 & 1) label = 12; else {
    if (!(HEAP8[$json_str >> 0] & 1)) {
     HEAP8[$json_str + 1 >> 0] = 0;
     HEAP8[$json_str >> 0] = 0;
    } else {
     HEAP8[HEAP32[$json_str + 8 >> 2] >> 0] = 0;
     HEAP32[$json_str + 4 >> 2] = 0;
    }
    __THREW__ = 0;
    invoke_vii(45, $json_str | 0, 0);
    $39 = __THREW__;
    __THREW__ = 0;
    if ($39 & 1) {
     $41 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($41);
    };
    HEAP32[$json_str + 0 >> 2] = HEAP32[$7 + 0 >> 2];
    HEAP32[$json_str + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$json_str + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    HEAP32[$7 + 0 >> 2] = 0;
    HEAP32[$7 + 4 >> 2] = 0;
    HEAP32[$7 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
    if ($multi) {
     $$pre$phi116Z2D = $files;
     label = 29;
    } else label = 73;
   }
  } while (0);
  do if ((label | 0) == 29) {
   $91 = HEAP32[$$pre$phi116Z2D >> 2] | 0;
   $92 = ($91 | 0) == ($26 | 0);
   if ($92) $sz$0$lcssa = 1; else {
    $94 = $91;
    $sz$0106 = 1;
    while (1) {
     $95 = HEAP8[$94 + 16 >> 0] | 0;
     if (!($95 & 1)) $112 = ($95 & 255) >>> 1; else $112 = HEAP32[$94 + 20 >> 2] | 0;
     $103 = HEAP8[$94 + 28 >> 0] | 0;
     if (!($103 & 1)) $114 = ($103 & 255) >>> 1; else $114 = HEAP32[$94 + 32 >> 2] | 0;
     $113 = $sz$0106 + 3 + $112 + $114 | 0;
     $116 = HEAP32[$94 + 4 >> 2] | 0;
     if (!$116) {
      $$0$i$i$i = $94;
      while (1) {
       $121 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$121 >> 2] | 0) == ($$0$i$i$i | 0)) {
        $$cast$i$i$i$lcssa = $121;
        break;
       } else $$0$i$i$i = $121;
      }
      $$01$i$i$i = $$cast$i$i$i$lcssa;
     } else {
      $$0$i$i$i$i = $116;
      while (1) {
       $118 = HEAP32[$$0$i$i$i$i >> 2] | 0;
       if (!$118) {
        $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
        break;
       } else $$0$i$i$i$i = $118;
      }
      $$01$i$i$i = $$0$i$i$i$i$lcssa;
     }
     if (($$01$i$i$i | 0) == ($26 | 0)) {
      $$lcssa123 = $113;
      break;
     } else {
      $94 = $$01$i$i$i;
      $sz$0106 = $113;
     }
    }
    $sz$0$lcssa = $$lcssa123;
   }
   $125 = _malloc($sz$0$lcssa) | 0;
   if (!$125) {
    _fwrite(42576, 49, 1, HEAP32[_stderr >> 2] | 0) | 0;
    __THREW__ = 0;
    invoke_v(3);
    $128 = __THREW__;
    __THREW__ = 0;
    if ($128 & 1) {
     label = 12;
     break;
    }
   }
   if ($92) $i$0$lcssa = 0; else {
    $131 = $91;
    $i$0102 = 0;
    while (1) {
     $130 = $131 + 16 | 0;
     $133 = HEAP8[$130 >> 0] | 0;
     if (!($133 & 1)) {
      $144 = ($133 & 255) >>> 1;
      $145 = $130 + 1 | 0;
     } else {
      $144 = HEAP32[$131 + 20 >> 2] | 0;
      $145 = HEAP32[$131 + 24 >> 2] | 0;
     }
     _memcpy($125 + $i$0102 | 0, $145 | 0, $144 + 1 | 0) | 0;
     $146 = HEAP8[$130 >> 0] | 0;
     if (!($146 & 1)) $155 = ($146 & 255) >>> 1; else $155 = HEAP32[$131 + 20 >> 2] | 0;
     $154 = $i$0102 + 1 + $155 | 0;
     $157 = $131 + 28 | 0;
     $158 = HEAP8[$157 >> 0] | 0;
     if (!($158 & 1)) {
      $168 = $157 + 1 | 0;
      $169 = ($158 & 255) >>> 1;
     } else {
      $168 = HEAP32[$131 + 36 >> 2] | 0;
      $169 = HEAP32[$131 + 32 >> 2] | 0;
     }
     _memcpy($125 + $154 | 0, $168 | 0, $169 | 0) | 0;
     $170 = HEAP8[$157 >> 0] | 0;
     if (!($170 & 1)) $178 = ($170 & 255) >>> 1; else $178 = HEAP32[$131 + 32 >> 2] | 0;
     $177 = $178 + $154 | 0;
     HEAP8[$125 + $177 >> 0] = 10;
     HEAP8[$125 + ($177 + 1) >> 0] = 0;
     $182 = $177 + 2 | 0;
     $184 = HEAP32[$131 + 4 >> 2] | 0;
     if (!$184) {
      $$0$i$i$i20 = $131;
      while (1) {
       $189 = HEAP32[$$0$i$i$i20 + 8 >> 2] | 0;
       if ((HEAP32[$189 >> 2] | 0) == ($$0$i$i$i20 | 0)) {
        $$cast$i$i$i21$lcssa = $189;
        break;
       } else $$0$i$i$i20 = $189;
      }
      $$01$i$i$i23 = $$cast$i$i$i21$lcssa;
     } else {
      $$0$i$i$i$i18 = $184;
      while (1) {
       $186 = HEAP32[$$0$i$i$i$i18 >> 2] | 0;
       if (!$186) {
        $$0$i$i$i$i18$lcssa = $$0$i$i$i$i18;
        break;
       } else $$0$i$i$i$i18 = $186;
      }
      $$01$i$i$i23 = $$0$i$i$i$i18$lcssa;
     }
     if (($$01$i$i$i23 | 0) == ($26 | 0)) {
      $$lcssa = $182;
      break;
     } else {
      $131 = $$01$i$i$i23;
      $i$0102 = $182;
     }
    }
    $i$0$lcssa = $$lcssa;
   }
   HEAP8[$125 + $i$0$lcssa >> 0] = 0;
   HEAP32[$error >> 2] = 0;
   $$0 = $125;
  } else if ((label | 0) == 73) {
   __THREW__ = 0;
   invoke_iii(27, $json_str | 0, 42176) | 0;
   $194 = __THREW__;
   __THREW__ = 0;
   if ($194 & 1) label = 12; else {
    HEAP32[$error >> 2] = 0;
    $196 = HEAP8[$json_str >> 0] | 0;
    $198 = ($196 & 1) == 0;
    if ($198) $204 = ($196 & 255) >>> 1; else $204 = HEAP32[$json_str + 4 >> 2] | 0;
    $203 = $204 + 1 | 0;
    if (!$203) $$0$i$i28 = 0; else {
     $206 = _malloc($203) | 0;
     if (!$206) {
      __THREW__ = 0;
      invoke_v(5);
      $208 = __THREW__;
      __THREW__ = 0;
      if ($208 & 1) {
       label = 12;
       break;
      }
     } else $$0$i$i28 = $206;
    }
    if ($198) $213 = $json_str + 1 | 0; else $213 = HEAP32[$json_str + 8 >> 2] | 0;
    _strcpy($$0$i$i28 | 0, $213 | 0) | 0;
    $$0 = $$0$i$i28;
   }
  } while (0);
  if ((label | 0) == 12) {
   $47 = ___cxa_find_matching_catch(48, 38664) | 0;
   $48 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($files, HEAP32[$26 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($json_str);
   $$01 = $47;
   $$03 = $48;
   break;
  }
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($files, HEAP32[$26 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($json_str);
  __ZN9AllocatorD2Ev($alloc);
  $$1 = $$0;
  STACKTOP = sp;
  return $$1 | 0;
 } while (0);
 __ZN9AllocatorD2Ev($alloc);
 if (($$03 | 0) == (_llvm_eh_typeid_for(48) | 0)) {
  $217 = ___cxa_begin_catch($$01 | 0) | 0;
  $218 = $ss8 + 64 | 0;
  $219 = $ss8 + 8 | 0;
  HEAP32[$219 >> 2] = 752;
  $220 = $ss8 + 12 | 0;
  HEAP32[$ss8 >> 2] = 900;
  HEAP32[$218 >> 2] = 920;
  HEAP32[$ss8 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss8 + 64 | 0, $220 | 0);
  $223 = __THREW__;
  __THREW__ = 0;
  L120 : do if ($223 & 1) {
   $235 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $235;
   label = 186;
  } else {
   HEAP32[$ss8 + 136 >> 2] = 0;
   HEAP32[$ss8 + 140 >> 2] = -1;
   HEAP32[$ss8 >> 2] = 732;
   HEAP32[$218 >> 2] = 772;
   HEAP32[$219 >> 2] = 752;
   __THREW__ = 0;
   invoke_vi(177, $220 | 0);
   $227 = __THREW__;
   __THREW__ = 0;
   do if ($227 & 1) {
    $237 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $237;
   } else {
    HEAP32[$220 >> 2] = 1064;
    $229 = $ss8 + 44 | 0;
    HEAP32[$229 + 0 >> 2] = 0;
    HEAP32[$229 + 4 >> 2] = 0;
    HEAP32[$229 + 8 >> 2] = 0;
    HEAP32[$229 + 12 >> 2] = 0;
    HEAP32[$ss8 + 60 >> 2] = 24;
    HEAP32[$5 + 0 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $220 | 0, $5 | 0);
    $231 = __THREW__;
    __THREW__ = 0;
    if ($231 & 1) {
     $233 = ___cxa_find_matching_catch() | 0;
     $234 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($229);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($220);
     $eh$lpad$body$i$index2Z2D = $234;
     $eh$lpad$body$i$indexZ2D = $233;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    __THREW__ = 0;
    $239 = invoke_iiii(25, $219 | 0, 42216, 14) | 0;
    $240 = __THREW__;
    __THREW__ = 0;
    L128 : do if ($240 & 1) label = 187; else {
     if (HEAP32[$217 + 12 >> 2] | 0) {
      __THREW__ = 0;
      $245 = invoke_iii(34, $239 | 0, $217 | 0) | 0;
      $246 = __THREW__;
      __THREW__ = 0;
      if ($246 & 1) {
       label = 187;
       break;
      }
      __THREW__ = 0;
      invoke_iiii(25, $245 | 0, 42232, 1) | 0;
      $248 = __THREW__;
      __THREW__ = 0;
      if ($248 & 1) {
       label = 187;
       break;
      }
     }
     __THREW__ = 0;
     $250 = invoke_iiii(25, $239 | 0, 42240, 1) | 0;
     $251 = __THREW__;
     __THREW__ = 0;
     if ($251 & 1) label = 187; else {
      $254 = HEAP8[$217 + 28 >> 0] | 0;
      if (!($254 & 1)) {
       $264 = $217 + 29 | 0;
       $265 = ($254 & 255) >>> 1;
      } else {
       $264 = HEAP32[$217 + 36 >> 2] | 0;
       $265 = HEAP32[$217 + 32 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $250 | 0, $264 | 0, $265 | 0) | 0;
      $266 = __THREW__;
      __THREW__ = 0;
      if ($266 & 1) label = 187; else {
       __THREW__ = 0;
       invoke_vii(47, $4 | 0, $239 + (HEAP32[(HEAP32[$239 >> 2] | 0) + -12 >> 2] | 0) | 0);
       $272 = __THREW__;
       __THREW__ = 0;
       if ($272 & 1) label = 187; else {
        __THREW__ = 0;
        $274 = invoke_iii(22, $4 | 0, 50208) | 0;
        $275 = __THREW__;
        __THREW__ = 0;
        if (!($275 & 1)) {
         __THREW__ = 0;
         $280 = invoke_iii(HEAP32[(HEAP32[$274 >> 2] | 0) + 28 >> 2] | 0, $274 | 0, 10) | 0;
         $281 = __THREW__;
         __THREW__ = 0;
         if (!($281 & 1)) {
          __ZNSt3__16localeD2Ev($4);
          __THREW__ = 0;
          invoke_iii(25, $239 | 0, $280 | 0) | 0;
          $285 = __THREW__;
          __THREW__ = 0;
          if ($285 & 1) {
           label = 187;
           break;
          }
          __THREW__ = 0;
          invoke_ii(68, $239 | 0) | 0;
          $287 = __THREW__;
          __THREW__ = 0;
          if ($287 & 1) {
           label = 187;
           break;
          }
          HEAP32[$error >> 2] = 1;
          __THREW__ = 0;
          invoke_vii(43, $11 | 0, $220 | 0);
          $289 = __THREW__;
          __THREW__ = 0;
          if ($289 & 1) {
           label = 187;
           break;
          }
          $291 = HEAP8[$11 >> 0] | 0;
          $293 = ($291 & 1) == 0;
          if ($293) $299 = ($291 & 255) >>> 1; else $299 = HEAP32[$11 + 4 >> 2] | 0;
          $298 = $299 + 1 | 0;
          do if (!$298) $$0$i$i46 = 0; else {
           $301 = _malloc($298) | 0;
           if ($301) {
            $$0$i$i46 = $301;
            break;
           }
           __THREW__ = 0;
           invoke_v(5);
           $303 = __THREW__;
           __THREW__ = 0;
           if ($303 & 1) {
            $493 = ___cxa_find_matching_catch() | 0;
            $494 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
            $$3 = $493;
            $$36 = $494;
            break L128;
           } else {}
          } while (0);
          if ($293) $308 = $11 + 1 | 0; else $308 = HEAP32[$11 + 8 >> 2] | 0;
          _strcpy($$0$i$i46 | 0, $308 | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
          HEAP32[$ss8 >> 2] = 732;
          HEAP32[$218 >> 2] = 772;
          HEAP32[$219 >> 2] = 752;
          HEAP32[$220 >> 2] = 1064;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($229);
          __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($220);
          __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($218);
          ___cxa_end_catch();
          $$1 = $$0$i$i46;
          STACKTOP = sp;
          return $$1 | 0;
         }
        }
        $283 = ___cxa_find_matching_catch() | 0;
        $284 = tempRet0;
        __ZNSt3__16localeD2Ev($4);
        $eh$lpad$body40$index23Z2D = $284;
        $eh$lpad$body40$indexZ2D = $283;
        label = 188;
       }
      }
     }
    } while (0);
    if ((label | 0) == 187) {
     $491 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body40$index23Z2D = tempRet0;
     $eh$lpad$body40$indexZ2D = $491;
     label = 188;
    }
    if ((label | 0) == 188) {
     $$3 = $eh$lpad$body40$indexZ2D;
     $$36 = $eh$lpad$body40$index23Z2D;
    }
    HEAP32[$ss8 >> 2] = 732;
    HEAP32[$218 >> 2] = 772;
    HEAP32[$219 >> 2] = 752;
    HEAP32[$220 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($229);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($220);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($218);
    $$4 = $$3;
    $$47 = $$36;
    break L120;
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
   label = 186;
  } while (0);
  if ((label | 0) == 186) {
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($218);
   $$4 = $$01$i;
   $$47 = $$0$i;
  }
  __THREW__ = 0;
  invoke_v(2);
  $495 = __THREW__;
  __THREW__ = 0;
  if ($495 & 1) {
   $497 = ___cxa_find_matching_catch(0) | 0;
   $498 = tempRet0;
   ___clang_call_terminate($497);
  } else {
   $$5 = $$4;
   $$58 = $$47;
   ___resumeException($$5 | 0);
  }
 }
 if (($$03 | 0) != (_llvm_eh_typeid_for(38664) | 0)) {
  $$5 = $$01;
  $$58 = $$03;
  ___resumeException($$5 | 0);
 }
 $311 = ___cxa_begin_catch($$01 | 0) | 0;
 $312 = $ss + 64 | 0;
 $313 = $ss + 8 | 0;
 HEAP32[$313 >> 2] = 752;
 $314 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 900;
 HEAP32[$312 >> 2] = 920;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $314 | 0);
 $317 = __THREW__;
 __THREW__ = 0;
 L181 : do if ($317 & 1) {
  $329 = ___cxa_find_matching_catch() | 0;
  $$0$i54 = tempRet0;
  $$01$i53 = $329;
  label = 151;
 } else {
  HEAP32[$ss + 136 >> 2] = 0;
  HEAP32[$ss + 140 >> 2] = -1;
  HEAP32[$ss >> 2] = 732;
  HEAP32[$312 >> 2] = 772;
  HEAP32[$313 >> 2] = 752;
  __THREW__ = 0;
  invoke_vi(177, $314 | 0);
  $321 = __THREW__;
  __THREW__ = 0;
  do if ($321 & 1) {
   $331 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i51$index7Z2D = tempRet0;
   $eh$lpad$body$i51$indexZ2D = $331;
  } else {
   HEAP32[$314 >> 2] = 1064;
   $323 = $ss + 44 | 0;
   HEAP32[$323 + 0 >> 2] = 0;
   HEAP32[$323 + 4 >> 2] = 0;
   HEAP32[$323 + 8 >> 2] = 0;
   HEAP32[$323 + 12 >> 2] = 0;
   HEAP32[$ss + 60 >> 2] = 24;
   HEAP32[$3 + 0 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(42, $314 | 0, $3 | 0);
   $325 = __THREW__;
   __THREW__ = 0;
   if ($325 & 1) {
    $327 = ___cxa_find_matching_catch() | 0;
    $328 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($323);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($314);
    $eh$lpad$body$i51$index7Z2D = $328;
    $eh$lpad$body$i51$indexZ2D = $327;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   __THREW__ = 0;
   $333 = invoke_iiii(25, $313 | 0, 42184, 15) | 0;
   $334 = __THREW__;
   __THREW__ = 0;
   L189 : do if ($334 & 1) label = 153; else {
    $337 = HEAP8[$311 + 12 >> 0] | 0;
    if (!($337 & 1)) {
     $347 = $311 + 13 | 0;
     $348 = ($337 & 255) >>> 1;
    } else {
     $347 = HEAP32[$311 + 20 >> 2] | 0;
     $348 = HEAP32[$311 + 16 >> 2] | 0;
    }
    __THREW__ = 0;
    $349 = invoke_iiii(25, $333 | 0, $347 | 0, $348 | 0) | 0;
    $350 = __THREW__;
    __THREW__ = 0;
    if ($350 & 1) label = 153; else {
     __THREW__ = 0;
     invoke_vii(47, $2 | 0, $349 + (HEAP32[(HEAP32[$349 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $356 = __THREW__;
     __THREW__ = 0;
     if ($356 & 1) label = 153; else {
      __THREW__ = 0;
      $358 = invoke_iii(22, $2 | 0, 50208) | 0;
      $359 = __THREW__;
      __THREW__ = 0;
      if (!($359 & 1)) {
       __THREW__ = 0;
       $364 = invoke_iii(HEAP32[(HEAP32[$358 >> 2] | 0) + 28 >> 2] | 0, $358 | 0, 10) | 0;
       $365 = __THREW__;
       __THREW__ = 0;
       if (!($365 & 1)) {
        __ZNSt3__16localeD2Ev($2);
        __THREW__ = 0;
        invoke_iii(25, $349 | 0, $364 | 0) | 0;
        $369 = __THREW__;
        __THREW__ = 0;
        if ($369 & 1) {
         label = 153;
         break;
        }
        __THREW__ = 0;
        invoke_ii(68, $349 | 0) | 0;
        $371 = __THREW__;
        __THREW__ = 0;
        if ($371 & 1) {
         label = 153;
         break;
        }
        $373 = $vm + 20 | 0;
        $374 = HEAP32[$373 >> 2] | 0;
        $375 = $374 >>> 1;
        $378 = HEAP32[$311 >> 2] | 0;
        $381 = (HEAP32[$311 + 4 >> 2] | 0) - $378 | 0;
        $382 = ($381 | 0) / 40 | 0;
        do if (($381 | 0) > 0) {
         $385 = $375 - $374 + $382 | 0;
         $386 = $374;
         $421 = $378;
         $i6$0100 = 0;
         L204 : while (1) {
          do if (($386 | 0) != 0 & ($i6$0100 | 0) >= ($375 | 0) & ($i6$0100 | 0) < ($385 | 0)) {
           if (($i6$0100 | 0) != ($375 | 0)) break;
           __THREW__ = 0;
           $389 = invoke_iiii(25, $313 | 0, 42200, 4) | 0;
           $390 = __THREW__;
           __THREW__ = 0;
           if ($390 & 1) {
            label = 152;
            break L204;
           }
           __THREW__ = 0;
           invoke_vii(47, $1 | 0, $389 + (HEAP32[(HEAP32[$389 >> 2] | 0) + -12 >> 2] | 0) | 0);
           $396 = __THREW__;
           __THREW__ = 0;
           if ($396 & 1) {
            label = 152;
            break L204;
           }
           __THREW__ = 0;
           $398 = invoke_iii(22, $1 | 0, 50208) | 0;
           $399 = __THREW__;
           __THREW__ = 0;
           if ($399 & 1) {
            label = 148;
            break L204;
           }
           __THREW__ = 0;
           $404 = invoke_iii(HEAP32[(HEAP32[$398 >> 2] | 0) + 28 >> 2] | 0, $398 | 0, 10) | 0;
           $405 = __THREW__;
           __THREW__ = 0;
           if ($405 & 1) {
            label = 148;
            break L204;
           }
           __ZNSt3__16localeD2Ev($1);
           __THREW__ = 0;
           invoke_iii(25, $389 | 0, $404 | 0) | 0;
           $409 = __THREW__;
           __THREW__ = 0;
           if ($409 & 1) {
            label = 152;
            break L204;
           }
           __THREW__ = 0;
           invoke_ii(68, $389 | 0) | 0;
           $411 = __THREW__;
           __THREW__ = 0;
           if ($411 & 1) {
            label = 152;
            break L204;
           }
          } else {
           __THREW__ = 0;
           $417 = invoke_iiii(25, $313 | 0, 42208, 1) | 0;
           $418 = __THREW__;
           __THREW__ = 0;
           if ($418 & 1) {
            label = 152;
            break L204;
           }
           __THREW__ = 0;
           $422 = invoke_iii(34, $417 | 0, $421 + ($i6$0100 * 40 | 0) | 0) | 0;
           $423 = __THREW__;
           __THREW__ = 0;
           if ($423 & 1) {
            label = 152;
            break L204;
           }
           __THREW__ = 0;
           $425 = invoke_iiii(25, $422 | 0, 42208, 1) | 0;
           $426 = __THREW__;
           __THREW__ = 0;
           if ($426 & 1) {
            label = 152;
            break L204;
           }
           $428 = $421 + ($i6$0100 * 40 | 0) + 28 | 0;
           $429 = HEAP8[$428 >> 0] | 0;
           if (!($429 & 1)) {
            $439 = $428 + 1 | 0;
            $440 = ($429 & 255) >>> 1;
           } else {
            $439 = HEAP32[$421 + ($i6$0100 * 40 | 0) + 36 >> 2] | 0;
            $440 = HEAP32[$421 + ($i6$0100 * 40 | 0) + 32 >> 2] | 0;
           }
           __THREW__ = 0;
           $441 = invoke_iiii(25, $425 | 0, $439 | 0, $440 | 0) | 0;
           $442 = __THREW__;
           __THREW__ = 0;
           if ($442 & 1) {
            label = 152;
            break L204;
           }
           __THREW__ = 0;
           invoke_vii(47, $0 | 0, $441 + (HEAP32[(HEAP32[$441 >> 2] | 0) + -12 >> 2] | 0) | 0);
           $448 = __THREW__;
           __THREW__ = 0;
           if ($448 & 1) {
            label = 152;
            break L204;
           }
           __THREW__ = 0;
           $450 = invoke_iii(22, $0 | 0, 50208) | 0;
           $451 = __THREW__;
           __THREW__ = 0;
           if ($451 & 1) {
            label = 165;
            break L204;
           }
           __THREW__ = 0;
           $456 = invoke_iii(HEAP32[(HEAP32[$450 >> 2] | 0) + 28 >> 2] | 0, $450 | 0, 10) | 0;
           $457 = __THREW__;
           __THREW__ = 0;
           if ($457 & 1) {
            label = 165;
            break L204;
           }
           __ZNSt3__16localeD2Ev($0);
           __THREW__ = 0;
           invoke_iii(25, $441 | 0, $456 | 0) | 0;
           $461 = __THREW__;
           __THREW__ = 0;
           if ($461 & 1) {
            label = 152;
            break L204;
           }
           __THREW__ = 0;
           invoke_ii(68, $441 | 0) | 0;
           $463 = __THREW__;
           __THREW__ = 0;
           if ($463 & 1) {
            label = 152;
            break L204;
           }
          } while (0);
          $465 = $i6$0100 + 1 | 0;
          if (($465 | 0) >= ($382 | 0)) {
           label = 170;
           break;
          }
          $386 = HEAP32[$373 >> 2] | 0;
          $421 = HEAP32[$311 >> 2] | 0;
          $i6$0100 = $465;
         }
         if ((label | 0) == 148) {
          $407 = ___cxa_find_matching_catch() | 0;
          $408 = tempRet0;
          __ZNSt3__16localeD2Ev($1);
          $eh$lpad$body66$index15Z2D = $408;
          $eh$lpad$body66$indexZ2D = $407;
          label = 154;
          break L189;
         } else if ((label | 0) == 152) {
          $413 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body66$index15Z2D = tempRet0;
          $eh$lpad$body66$indexZ2D = $413;
          label = 154;
          break L189;
         } else if ((label | 0) == 165) {
          $459 = ___cxa_find_matching_catch() | 0;
          $460 = tempRet0;
          __ZNSt3__16localeD2Ev($0);
          $eh$lpad$body66$index15Z2D = $460;
          $eh$lpad$body66$indexZ2D = $459;
          label = 154;
          break L189;
         } else if ((label | 0) == 170) break;
        } while (0);
        HEAP32[$error >> 2] = 1;
        __THREW__ = 0;
        invoke_vii(43, $10 | 0, $314 | 0);
        $467 = __THREW__;
        __THREW__ = 0;
        if ($467 & 1) {
         label = 153;
         break;
        }
        $469 = HEAP8[$10 >> 0] | 0;
        $471 = ($469 & 1) == 0;
        if ($471) $477 = ($469 & 255) >>> 1; else $477 = HEAP32[$10 + 4 >> 2] | 0;
        $476 = $477 + 1 | 0;
        do if (!$476) $$0$i$i = 0; else {
         $479 = _malloc($476) | 0;
         if ($479) {
          $$0$i$i = $479;
          break;
         }
         __THREW__ = 0;
         invoke_v(5);
         $481 = __THREW__;
         __THREW__ = 0;
         if ($481 & 1) {
          $487 = ___cxa_find_matching_catch() | 0;
          $488 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
          $$12 = $487;
          $$14 = $488;
          break L189;
         } else {}
        } while (0);
        if ($471) $486 = $10 + 1 | 0; else $486 = HEAP32[$10 + 8 >> 2] | 0;
        _strcpy($$0$i$i | 0, $486 | 0) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
        HEAP32[$ss >> 2] = 732;
        HEAP32[$312 >> 2] = 772;
        HEAP32[$313 >> 2] = 752;
        HEAP32[$314 >> 2] = 1064;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($323);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($314);
        __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($312);
        ___cxa_end_catch();
        $$1 = $$0$i$i;
        STACKTOP = sp;
        return $$1 | 0;
       }
      }
      $367 = ___cxa_find_matching_catch() | 0;
      $368 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $eh$lpad$body66$index15Z2D = $368;
      $eh$lpad$body66$indexZ2D = $367;
      label = 154;
     }
    }
   } while (0);
   if ((label | 0) == 153) {
    $415 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body66$index15Z2D = tempRet0;
    $eh$lpad$body66$indexZ2D = $415;
    label = 154;
   }
   if ((label | 0) == 154) {
    $$12 = $eh$lpad$body66$indexZ2D;
    $$14 = $eh$lpad$body66$index15Z2D;
   }
   HEAP32[$ss >> 2] = 732;
   HEAP32[$312 >> 2] = 772;
   HEAP32[$313 >> 2] = 752;
   HEAP32[$314 >> 2] = 1064;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($323);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($314);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($312);
   $$2 = $$12;
   $$25 = $$14;
   break L181;
  } while (0);
  $$0$i54 = $eh$lpad$body$i51$index7Z2D;
  $$01$i53 = $eh$lpad$body$i51$indexZ2D;
  label = 151;
 } while (0);
 if ((label | 0) == 151) {
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($312);
  $$2 = $$01$i53;
  $$25 = $$0$i54;
 }
 __THREW__ = 0;
 invoke_v(2);
 $489 = __THREW__;
 __THREW__ = 0;
 if ($489 & 1) {
  $497 = ___cxa_find_matching_catch(0) | 0;
  $498 = tempRet0;
  ___clang_call_terminate($497);
 } else {
  $$5 = $$2;
  $$58 = $$25;
  ___resumeException($$5 | 0);
 }
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter12manifestJsonERK13LocationRangebRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($agg$result, $this, $loc, $multiline, $indent) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 $multiline = $multiline | 0;
 $indent = $indent | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i$lcssa = 0, $$0$i$i$i48 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$02 = 0, $$08 = 0, $$1 = 0, $$13 = 0, $$2455 = 0, $$256 = 0, $$3 = 0, $$35 = 0, $$4 = 0, $$46 = 0, $$5 = 0, $$57 = 0, $$cast$i$i$i$lcssa = 0, $$cast$i$i$lcssa = 0, $$idx = 0, $$idx$i14 = 0, $$idx$i35 = 0, $$idx10 = 0, $$idx11$val = 0, $$idx12$val = 0, $$pre$phi75Z2D = 0, $$pre$phiZ2D = 0, $$str36$$str3 = 0, $$str36$$str31 = 0, $0 = 0, $1 = 0, $102 = 0, $104 = 0, $106 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $115 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $127 = 0, $134 = 0, $135 = 0, $136 = 0, $138 = 0, $140 = 0, $141 = 0, $144 = 0, $145 = 0, $147 = 0, $15 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $162 = 0, $166 = 0, $169 = 0, $17 = 0, $173 = 0, $175 = 0, $185 = 0, $186 = 0, $187 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $195 = 0, $197 = 0, $199 = 0, $2 = 0, $201 = 0, $202 = 0, $203 = 0, $206 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $212 = 0, $213 = 0, $218 = 0, $22 = 0, $220 = 0, $221 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $23 = 0, $230 = 0, $232 = 0, $235 = 0, $239 = 0, $241 = 0, $25 = 0, $252 = 0, $253 = 0, $254 = 0, $256 = 0, $258 = 0, $259 = 0, $260 = 0, $262 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $273 = 0, $275 = 0, $276 = 0, $278 = 0, $279 = 0, $282 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $289 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $301 = 0, $302 = 0, $304 = 0, $305 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $32 = 0, $320 = 0, $321 = 0, $323 = 0, $330 = 0, $331 = 0, $332 = 0, $335 = 0, $337 = 0, $34 = 0, $340 = 0, $344 = 0, $346 = 0, $348 = 0, $349 = 0, $352 = 0, $353 = 0, $355 = 0, $36 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $37 = 0, $370 = 0, $377 = 0, $379 = 0, $389 = 0, $390 = 0, $391 = 0, $393 = 0, $394 = 0, $395 = 0, $4 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $77 = 0, $79 = 0, $8 = 0, $83 = 0, $86 = 0, $87 = 0, $88 = 0, $90 = 0, $92 = 0, $93 = 0, $95 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body33$index17Z2D = 0, $eh$lpad$body33$indexZ2D = 0, $element = 0, $fields = 0, $indent2 = 0, $indent24 = 0, $lpad$phi$index = 0, $lpad$phi$index12 = 0, $lpad$phi62$index = 0, $lpad$phi62$index22 = 0, $prefix$067 = 0, $prefix5$068 = 0, $ss = 0, $tloc = 0, $vstr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $0 = sp + 296 | 0;
 $ss = sp + 152 | 0;
 $indent2 = sp + 136 | 0;
 $tloc = sp + 108 | 0;
 $1 = sp + 96 | 0;
 $element = sp + 84 | 0;
 $2 = sp + 72 | 0;
 $3 = sp + 60 | 0;
 $fields = sp + 48 | 0;
 $4 = sp + 36 | 0;
 $indent24 = sp + 24 | 0;
 $vstr = sp + 12 | 0;
 $5 = sp;
 $6 = $ss + 64 | 0;
 $7 = $ss + 8 | 0;
 HEAP32[$7 >> 2] = 752;
 $8 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 900;
 HEAP32[$6 >> 2] = 920;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $8 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $23 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $23;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 732;
 HEAP32[$6 >> 2] = 772;
 HEAP32[$7 >> 2] = 752;
 __THREW__ = 0;
 invoke_vi(177, $8 | 0);
 $15 = __THREW__;
 __THREW__ = 0;
 do if ($15 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $25;
 } else {
  HEAP32[$8 >> 2] = 1064;
  $17 = $ss + 44 | 0;
  HEAP32[$17 + 0 >> 2] = 0;
  HEAP32[$17 + 4 >> 2] = 0;
  HEAP32[$17 + 8 >> 2] = 0;
  HEAP32[$17 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $8 | 0, $0 | 0);
  $19 = __THREW__;
  __THREW__ = 0;
  if ($19 & 1) {
   $21 = ___cxa_find_matching_catch() | 0;
   $22 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
   $eh$lpad$body$i$index2Z2D = $22;
   $eh$lpad$body$i$indexZ2D = $21;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $27 = $this + 40 | 0;
  L10 : do switch (HEAP32[$27 >> 2] | 0) {
  case 2:
   {
    __THREW__ = 0;
    invoke_vid(1, $2 | 0, +(+HEAPF64[$this + 48 >> 3]));
    $173 = __THREW__;
    __THREW__ = 0;
    if ($173 & 1) label = 12; else {
     $175 = HEAP8[$2 >> 0] | 0;
     if (!($175 & 1)) {
      $185 = $2 + 1 | 0;
      $186 = ($175 & 255) >>> 1;
     } else {
      $185 = HEAP32[$2 + 8 >> 2] | 0;
      $186 = HEAP32[$2 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $7 | 0, $185 | 0, $186 | 0) | 0;
     $187 = __THREW__;
     __THREW__ = 0;
     if (!($187 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
      label = 150;
      break L10;
     }
     $189 = ___cxa_find_matching_catch() | 0;
     $190 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     $$5 = $189;
     $$57 = $190;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$6 >> 2] = 772;
     HEAP32[$7 >> 2] = 752;
     HEAP32[$8 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
     ___resumeException($$5 | 0);
    }
    break;
   }
  case 0:
   {
    __THREW__ = 0;
    invoke_iiii(25, $7 | 0, 39280, 4) | 0;
    $203 = __THREW__;
    __THREW__ = 0;
    if ($203 & 1) label = 12; else label = 150;
    break;
   }
  case 16:
   {
    $30 = HEAP32[$this + 48 >> 2] | 0;
    $$idx = $30 + 8 | 0;
    $$idx10 = $30 + 12 | 0;
    if ((HEAP32[$$idx10 >> 2] | 0) == (HEAP32[$$idx >> 2] | 0)) {
     __THREW__ = 0;
     invoke_iiii(25, $7 | 0, 39448, 3) | 0;
     $32 = __THREW__;
     __THREW__ = 0;
     if ($32 & 1) {
      label = 12;
      break L10;
     } else {
      label = 150;
      break L10;
     }
    }
    $36 = $multiline ? 39456 : 39464;
    do if ($multiline) {
     HEAP32[$indent2 + 0 >> 2] = 0;
     HEAP32[$indent2 + 4 >> 2] = 0;
     HEAP32[$indent2 + 8 >> 2] = 0;
     $37 = HEAP8[$indent >> 0] | 0;
     if (!($37 & 1)) {
      $48 = ($37 & 255) >>> 1;
      $49 = $indent + 1 | 0;
     } else {
      $48 = HEAP32[$indent + 4 >> 2] | 0;
      $49 = HEAP32[$indent + 8 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_viiii(14, $indent2 | 0, $49 | 0, $48 | 0, $48 + 3 | 0);
     $50 = __THREW__;
     __THREW__ = 0;
     if (!($50 & 1)) {
      __THREW__ = 0;
      invoke_iiii(33, $indent2 | 0, 39472, 3) | 0;
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $54 = ___cxa_find_matching_catch() | 0;
     $55 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent2);
     $eh$lpad$body$index7Z2D = $55;
     $eh$lpad$body$indexZ2D = $54;
     break L10;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $indent2 | 0, $indent | 0);
     $56 = __THREW__;
     __THREW__ = 0;
     if ($56 & 1) {
      label = 12;
      break L10;
     }
    } while (0);
    $$idx11$val = HEAP32[$$idx >> 2] | 0;
    $$idx12$val = HEAP32[$$idx10 >> 2] | 0;
    do if (($$idx11$val | 0) == ($$idx12$val | 0)) {
     $$pre$phiZ2D = $7;
     label = 50;
    } else {
     $59 = $tloc + 12 | 0;
     $60 = $this + 56 | 0;
     $$idx$i14 = $this + 72 | 0;
     $61 = $indent2 + 1 | 0;
     $62 = $element + 1 | 0;
     $$str36$$str3 = $multiline ? 39480 : 38552;
     $63 = $element + 8 | 0;
     $64 = $element + 4 | 0;
     $65 = $indent2 + 8 | 0;
     $66 = $indent2 + 4 | 0;
     $67 = $1 + 4 | 0;
     $68 = $1 + 8 | 0;
     $69 = $1 + 4 | 0;
     $71 = $$idx11$val;
     $prefix$067 = $36;
     while (1) {
      $70 = HEAP32[$71 >> 2] | 0;
      $72 = $70 + 48 | 0;
      $73 = HEAP32[$72 >> 2] | 0;
      $76 = ($73 | 0) == 0 ? $loc : $73 + 4 | 0;
      __THREW__ = 0;
      invoke_vii(40, $tloc | 0, $76 | 0);
      $77 = __THREW__;
      __THREW__ = 0;
      if ($77 & 1) {
       label = 29;
       break;
      }
      $79 = $76 + 12 | 0;
      HEAP32[$59 + 0 >> 2] = HEAP32[$79 + 0 >> 2];
      HEAP32[$59 + 4 >> 2] = HEAP32[$79 + 4 >> 2];
      HEAP32[$59 + 8 >> 2] = HEAP32[$79 + 8 >> 2];
      HEAP32[$59 + 12 >> 2] = HEAP32[$79 + 12 >> 2];
      if (!(HEAP8[$70 + 5 >> 0] | 0)) {
       __THREW__ = 0;
       invoke_viiiiii(19, $60 | 0, $loc | 0, $70 | 0, HEAP32[$70 + 40 >> 2] | 0, HEAP32[$70 + 44 >> 2] | 0, $70 + 28 | 0);
       $102 = __THREW__;
       __THREW__ = 0;
       if ($102 & 1) {
        label = 33;
        break;
       }
       $104 = (HEAP32[$$idx$i14 >> 2] | 0) + -104 | 0;
       HEAP32[$104 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
       HEAP32[$104 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
       HEAP32[$104 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
       HEAP32[$104 + 12 >> 2] = HEAP32[$27 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(60, $this | 0, HEAP32[$72 >> 2] | 0);
       $106 = __THREW__;
       __THREW__ = 0;
       if ($106 & 1) {
        label = 33;
        break;
       }
      } else {
       HEAP32[$67 >> 2] = 0;
       HEAP32[$68 >> 2] = 0;
       HEAP32[$1 >> 2] = $69;
       __THREW__ = 0;
       invoke_viiiiii(19, $60 | 0, $loc | 0, $70 | 0, 0, 0, $1 | 0);
       $83 = __THREW__;
       __THREW__ = 0;
       if ($83 & 1) {
        label = 32;
        break;
       }
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$69 >> 2] | 0);
       $86 = (HEAP32[$$idx$i14 >> 2] | 0) + -104 | 0;
       HEAP32[$86 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
       HEAP32[$86 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
       HEAP32[$86 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
       HEAP32[$86 + 12 >> 2] = HEAP32[$27 + 12 >> 2];
       $87 = $70 + 8 | 0;
       HEAP32[$27 + 0 >> 2] = HEAP32[$87 + 0 >> 2];
       HEAP32[$27 + 4 >> 2] = HEAP32[$87 + 4 >> 2];
       HEAP32[$27 + 8 >> 2] = HEAP32[$87 + 8 >> 2];
       HEAP32[$27 + 12 >> 2] = HEAP32[$87 + 12 >> 2];
      }
      __THREW__ = 0;
      invoke_viiiii(6, $element | 0, $this | 0, $tloc | 0, $multiline | 0, $indent2 | 0);
      $108 = __THREW__;
      __THREW__ = 0;
      if ($108 & 1) {
       label = 33;
       break;
      }
      $110 = (HEAP32[$$idx$i14 >> 2] | 0) + -104 | 0;
      HEAP32[$27 + 0 >> 2] = HEAP32[$110 + 0 >> 2];
      HEAP32[$27 + 4 >> 2] = HEAP32[$110 + 4 >> 2];
      HEAP32[$27 + 8 >> 2] = HEAP32[$110 + 8 >> 2];
      HEAP32[$27 + 12 >> 2] = HEAP32[$110 + 12 >> 2];
      __ZN12_GLOBAL__N_15Stack3popEv($60);
      $111 = _strlen($prefix$067 | 0) | 0;
      __THREW__ = 0;
      $112 = invoke_iiii(25, $7 | 0, $prefix$067 | 0, $111 | 0) | 0;
      $113 = __THREW__;
      __THREW__ = 0;
      if ($113 & 1) {
       label = 47;
       break;
      }
      $115 = HEAP8[$indent2 >> 0] | 0;
      if (!($115 & 1)) {
       $122 = $61;
       $123 = ($115 & 255) >>> 1;
      } else {
       $122 = HEAP32[$65 >> 2] | 0;
       $123 = HEAP32[$66 >> 2] | 0;
      }
      __THREW__ = 0;
      $124 = invoke_iiii(25, $112 | 0, $122 | 0, $123 | 0) | 0;
      $125 = __THREW__;
      __THREW__ = 0;
      if ($125 & 1) {
       label = 47;
       break;
      }
      $127 = HEAP8[$element >> 0] | 0;
      if (!($127 & 1)) {
       $134 = $62;
       $135 = ($127 & 255) >>> 1;
      } else {
       $134 = HEAP32[$63 >> 2] | 0;
       $135 = HEAP32[$64 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $124 | 0, $134 | 0, $135 | 0) | 0;
      $136 = __THREW__;
      __THREW__ = 0;
      if ($136 & 1) {
       label = 47;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($element);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($tloc);
      $138 = $71 + 4 | 0;
      if (($138 | 0) == ($$idx12$val | 0)) {
       label = 49;
       break;
      } else {
       $71 = $138;
       $prefix$067 = $$str36$$str3;
      }
     }
     if ((label | 0) == 29) {
      $88 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $88;
      $lpad$phi$index12 = tempRet0;
      label = 31;
      break;
     } else if ((label | 0) == 32) {
      $92 = ___cxa_find_matching_catch() | 0;
      $93 = tempRet0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$69 >> 2] | 0);
      $$0 = $92;
      $$02 = $93;
     } else if ((label | 0) == 33) {
      $95 = ___cxa_find_matching_catch() | 0;
      $$0 = $95;
      $$02 = tempRet0;
     } else if ((label | 0) == 47) {
      $140 = ___cxa_find_matching_catch() | 0;
      $141 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($element);
      $$0 = $140;
      $$02 = $141;
     } else if ((label | 0) == 49) {
      $$pre$phiZ2D = $7;
      label = 50;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($tloc);
     $$1 = $$0;
     $$13 = $$02;
    } while (0);
    if ((label | 0) == 50) {
     __THREW__ = 0;
     $144 = invoke_iiii(25, $$pre$phiZ2D | 0, ($multiline ? 42176 : 48920) | 0, $multiline & 1 | 0) | 0;
     $145 = __THREW__;
     __THREW__ = 0;
     if (!($145 & 1)) {
      $147 = HEAP8[$indent >> 0] | 0;
      if (!($147 & 1)) {
       $157 = $indent + 1 | 0;
       $158 = ($147 & 255) >>> 1;
      } else {
       $157 = HEAP32[$indent + 8 >> 2] | 0;
       $158 = HEAP32[$indent + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $159 = invoke_iiii(25, $144 | 0, $157 | 0, $158 | 0) | 0;
      $160 = __THREW__;
      __THREW__ = 0;
      if (!($160 & 1)) {
       __THREW__ = 0;
       invoke_iiii(25, $159 | 0, 39488, 1) | 0;
       $162 = __THREW__;
       __THREW__ = 0;
       if (!($162 & 1)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent2);
        label = 150;
        break L10;
       }
      }
     }
     $90 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $90;
     $lpad$phi$index12 = tempRet0;
     label = 31;
    }
    if ((label | 0) == 31) {
     $$1 = $lpad$phi$index;
     $$13 = $lpad$phi$index12;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent2);
    $$5 = $$1;
    $$57 = $$13;
    HEAP32[$ss >> 2] = 732;
    HEAP32[$6 >> 2] = 772;
    HEAP32[$7 >> 2] = 752;
    HEAP32[$8 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    ___resumeException($$5 | 0);
    break;
   }
  case 18:
   {
    $206 = HEAP32[$this + 48 >> 2] | 0;
    HEAP32[$fields + 4 >> 2] = 0;
    $208 = $fields + 8 | 0;
    HEAP32[$208 >> 2] = 0;
    $209 = $fields + 4 | 0;
    HEAP32[$fields >> 2] = $209;
    __THREW__ = 0;
    invoke_viii(11, $4 | 0, $206 | 0, 1);
    $210 = __THREW__;
    __THREW__ = 0;
    L84 : do if ($210 & 1) label = 78; else {
     $212 = HEAP32[$4 >> 2] | 0;
     $213 = $4 + 4 | 0;
     do if (($212 | 0) != ($213 | 0)) {
      $224 = $212;
      while (1) {
       $225 = HEAP32[$224 + 16 >> 2] | 0;
       __THREW__ = 0;
       $226 = invoke_iii(29, $fields | 0, $225 | 0) | 0;
       $227 = __THREW__;
       __THREW__ = 0;
       if ($227 & 1) {
        label = 80;
        break;
       }
       HEAP32[$226 >> 2] = $225;
       $230 = HEAP32[$224 + 4 >> 2] | 0;
       if (!$230) {
        $$0$i$i = $224;
        while (1) {
         $235 = HEAP32[$$0$i$i + 8 >> 2] | 0;
         if ((HEAP32[$235 >> 2] | 0) == ($$0$i$i | 0)) {
          $$cast$i$i$lcssa = $235;
          break;
         } else $$0$i$i = $235;
        }
        $$01$i$i = $$cast$i$i$lcssa;
       } else {
        $$0$i$i$i = $230;
        while (1) {
         $232 = HEAP32[$$0$i$i$i >> 2] | 0;
         if (!$232) {
          $$0$i$i$i$lcssa = $$0$i$i$i;
          break;
         } else $$0$i$i$i = $232;
        }
        $$01$i$i = $$0$i$i$i$lcssa;
       }
       if (($$01$i$i | 0) == ($213 | 0)) {
        label = 76;
        break;
       } else $224 = $$01$i$i;
      }
      if ((label | 0) == 76) break; else if ((label | 0) == 80) {
       $220 = ___cxa_find_matching_catch() | 0;
       $221 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$213 >> 2] | 0);
       $$4 = $220;
       $$46 = $221;
       break L84;
      }
     } while (0);
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$213 >> 2] | 0);
     do if (!(HEAP32[$208 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_iiii(25, $7 | 0, 39544, 3) | 0;
      $239 = __THREW__;
      __THREW__ = 0;
      if ($239 & 1) {
       label = 78;
       break L84;
      }
     } else {
      do if ($multiline) {
       HEAP32[$indent24 + 0 >> 2] = 0;
       HEAP32[$indent24 + 4 >> 2] = 0;
       HEAP32[$indent24 + 8 >> 2] = 0;
       $241 = HEAP8[$indent >> 0] | 0;
       if (!($241 & 1)) {
        $252 = ($241 & 255) >>> 1;
        $253 = $indent + 1 | 0;
       } else {
        $252 = HEAP32[$indent + 4 >> 2] | 0;
        $253 = HEAP32[$indent + 8 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_viiii(14, $indent24 | 0, $253 | 0, $252 | 0, $252 + 3 | 0);
       $254 = __THREW__;
       __THREW__ = 0;
       if (!($254 & 1)) {
        __THREW__ = 0;
        invoke_iiii(33, $indent24 | 0, 39472, 3) | 0;
        $256 = __THREW__;
        __THREW__ = 0;
        if (!($256 & 1)) break;
       }
       $258 = ___cxa_find_matching_catch() | 0;
       $259 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent24);
       $eh$lpad$body33$index17Z2D = $259;
       $eh$lpad$body33$indexZ2D = $258;
       label = 79;
       break L84;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $indent24 | 0, $indent | 0);
       $260 = __THREW__;
       __THREW__ = 0;
       if ($260 & 1) {
        label = 78;
        break L84;
       }
      } while (0);
      $262 = HEAP32[$fields >> 2] | 0;
      do if (($262 | 0) == ($209 | 0)) {
       $$pre$phi75Z2D = $7;
       label = 133;
      } else {
       $265 = $this + 56 | 0;
       $$idx$i35 = $this + 72 | 0;
       $266 = $indent24 + 1 | 0;
       $267 = $vstr + 1 | 0;
       $$str36$$str31 = $multiline ? 39480 : 38552;
       $268 = $vstr + 8 | 0;
       $269 = $vstr + 4 | 0;
       $270 = $indent24 + 8 | 0;
       $271 = $indent24 + 4 | 0;
       $273 = $262;
       $prefix5$068 = $multiline ? 39552 : 39560;
       while (1) {
        __THREW__ = 0;
        $275 = invoke_iiiii(9, $this | 0, $loc | 0, $206 | 0, HEAP32[$273 + 28 >> 2] | 0) | 0;
        $276 = __THREW__;
        __THREW__ = 0;
        if ($276 & 1) {
         label = 128;
         break;
        }
        $278 = (HEAP32[$$idx$i35 >> 2] | 0) + -104 | 0;
        HEAP32[$278 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
        HEAP32[$278 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
        HEAP32[$278 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
        HEAP32[$278 + 12 >> 2] = HEAP32[$27 + 12 >> 2];
        __THREW__ = 0;
        invoke_vii(60, $this | 0, $275 | 0);
        $279 = __THREW__;
        __THREW__ = 0;
        if ($279 & 1) {
         label = 128;
         break;
        }
        __THREW__ = 0;
        invoke_viiiii(6, $vstr | 0, $this | 0, $275 + 4 | 0, $multiline | 0, $indent24 | 0);
        $282 = __THREW__;
        __THREW__ = 0;
        if ($282 & 1) {
         label = 128;
         break;
        }
        $284 = (HEAP32[$$idx$i35 >> 2] | 0) + -104 | 0;
        HEAP32[$27 + 0 >> 2] = HEAP32[$284 + 0 >> 2];
        HEAP32[$27 + 4 >> 2] = HEAP32[$284 + 4 >> 2];
        HEAP32[$27 + 8 >> 2] = HEAP32[$284 + 8 >> 2];
        HEAP32[$27 + 12 >> 2] = HEAP32[$284 + 12 >> 2];
        __ZN12_GLOBAL__N_15Stack3popEv($265);
        $285 = _strlen($prefix5$068 | 0) | 0;
        __THREW__ = 0;
        $286 = invoke_iiii(25, $7 | 0, $prefix5$068 | 0, $285 | 0) | 0;
        $287 = __THREW__;
        __THREW__ = 0;
        if ($287 & 1) {
         label = 131;
         break;
        }
        $289 = HEAP8[$indent24 >> 0] | 0;
        if (!($289 & 1)) {
         $296 = $266;
         $297 = ($289 & 255) >>> 1;
        } else {
         $296 = HEAP32[$270 >> 2] | 0;
         $297 = HEAP32[$271 >> 2] | 0;
        }
        __THREW__ = 0;
        $298 = invoke_iiii(25, $286 | 0, $296 | 0, $297 | 0) | 0;
        $299 = __THREW__;
        __THREW__ = 0;
        if ($299 & 1) {
         label = 131;
         break;
        }
        __THREW__ = 0;
        $301 = invoke_iiii(25, $298 | 0, 39568, 1) | 0;
        $302 = __THREW__;
        __THREW__ = 0;
        if ($302 & 1) {
         label = 131;
         break;
        }
        $304 = $273 + 16 | 0;
        $305 = HEAP8[$304 >> 0] | 0;
        if (!($305 & 1)) {
         $315 = $304 + 1 | 0;
         $316 = ($305 & 255) >>> 1;
        } else {
         $315 = HEAP32[$273 + 24 >> 2] | 0;
         $316 = HEAP32[$273 + 20 >> 2] | 0;
        }
        __THREW__ = 0;
        $317 = invoke_iiii(25, $301 | 0, $315 | 0, $316 | 0) | 0;
        $318 = __THREW__;
        __THREW__ = 0;
        if ($318 & 1) {
         label = 131;
         break;
        }
        __THREW__ = 0;
        $320 = invoke_iiii(25, $317 | 0, 39576, 3) | 0;
        $321 = __THREW__;
        __THREW__ = 0;
        if ($321 & 1) {
         label = 131;
         break;
        }
        $323 = HEAP8[$vstr >> 0] | 0;
        if (!($323 & 1)) {
         $330 = $267;
         $331 = ($323 & 255) >>> 1;
        } else {
         $330 = HEAP32[$268 >> 2] | 0;
         $331 = HEAP32[$269 >> 2] | 0;
        }
        __THREW__ = 0;
        invoke_iiii(25, $320 | 0, $330 | 0, $331 | 0) | 0;
        $332 = __THREW__;
        __THREW__ = 0;
        if ($332 & 1) {
         label = 131;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vstr);
        $335 = HEAP32[$273 + 4 >> 2] | 0;
        if (!$335) {
         $$0$i$i$i48 = $273;
         while (1) {
          $340 = HEAP32[$$0$i$i$i48 + 8 >> 2] | 0;
          if ((HEAP32[$340 >> 2] | 0) == ($$0$i$i$i48 | 0)) {
           $$cast$i$i$i$lcssa = $340;
           break;
          } else $$0$i$i$i48 = $340;
         }
         $$01$i$i$i = $$cast$i$i$i$lcssa;
        } else {
         $$0$i$i$i$i = $335;
         while (1) {
          $337 = HEAP32[$$0$i$i$i$i >> 2] | 0;
          if (!$337) {
           $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
           break;
          } else $$0$i$i$i$i = $337;
         }
         $$01$i$i$i = $$0$i$i$i$i$lcssa;
        }
        if (($$01$i$i$i | 0) == ($209 | 0)) {
         label = 132;
         break;
        } else {
         $273 = $$01$i$i$i;
         $prefix5$068 = $$str36$$str31;
        }
       }
       if ((label | 0) == 128) {
        $344 = ___cxa_find_matching_catch() | 0;
        $lpad$phi62$index = $344;
        $lpad$phi62$index22 = tempRet0;
        label = 130;
        break;
       } else if ((label | 0) == 131) {
        $348 = ___cxa_find_matching_catch() | 0;
        $349 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vstr);
        $$3 = $348;
        $$35 = $349;
        break;
       } else if ((label | 0) == 132) {
        $$pre$phi75Z2D = $7;
        label = 133;
        break;
       }
      } while (0);
      if ((label | 0) == 133) {
       __THREW__ = 0;
       $352 = invoke_iiii(25, $$pre$phi75Z2D | 0, ($multiline ? 42176 : 48920) | 0, $multiline & 1 | 0) | 0;
       $353 = __THREW__;
       __THREW__ = 0;
       if (!($353 & 1)) {
        $355 = HEAP8[$indent >> 0] | 0;
        if (!($355 & 1)) {
         $365 = $indent + 1 | 0;
         $366 = ($355 & 255) >>> 1;
        } else {
         $365 = HEAP32[$indent + 8 >> 2] | 0;
         $366 = HEAP32[$indent + 4 >> 2] | 0;
        }
        __THREW__ = 0;
        $367 = invoke_iiii(25, $352 | 0, $365 | 0, $366 | 0) | 0;
        $368 = __THREW__;
        __THREW__ = 0;
        if (!($368 & 1)) {
         __THREW__ = 0;
         invoke_iiii(25, $367 | 0, 39584, 1) | 0;
         $370 = __THREW__;
         __THREW__ = 0;
         if (!($370 & 1)) {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent24);
          break;
         }
        }
       }
       $346 = ___cxa_find_matching_catch() | 0;
       $lpad$phi62$index = $346;
       $lpad$phi62$index22 = tempRet0;
       label = 130;
      }
      if ((label | 0) == 130) {
       $$3 = $lpad$phi62$index;
       $$35 = $lpad$phi62$index22;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent24);
      $$4 = $$3;
      $$46 = $$35;
      break L84;
     } while (0);
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields, HEAP32[$209 >> 2] | 0);
     label = 150;
     break L10;
    } while (0);
    if ((label | 0) == 78) {
     $218 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body33$index17Z2D = tempRet0;
     $eh$lpad$body33$indexZ2D = $218;
     label = 79;
    }
    if ((label | 0) == 79) {
     $$4 = $eh$lpad$body33$indexZ2D;
     $$46 = $eh$lpad$body33$index17Z2D;
    }
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields, HEAP32[$209 >> 2] | 0);
    $$5 = $$4;
    $$57 = $$46;
    HEAP32[$ss >> 2] = 732;
    HEAP32[$6 >> 2] = 772;
    HEAP32[$7 >> 2] = 752;
    HEAP32[$8 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    ___resumeException($$5 | 0);
    break;
   }
  case 1:
   {
    $166 = (HEAP8[$this + 48 >> 0] | 0) != 0;
    __THREW__ = 0;
    invoke_iiii(25, $7 | 0, ($166 ? 50448 : 50480) | 0, ($166 ? 4 : 5) | 0) | 0;
    $169 = __THREW__;
    __THREW__ = 0;
    if ($169 & 1) label = 12; else label = 150;
    break;
   }
  case 19:
   {
    __THREW__ = 0;
    invoke_vii(55, $5 | 0, (HEAP32[$this + 48 >> 2] | 0) + 8 | 0);
    $377 = __THREW__;
    __THREW__ = 0;
    if ($377 & 1) label = 12; else {
     $379 = HEAP8[$5 >> 0] | 0;
     if (!($379 & 1)) {
      $389 = $5 + 1 | 0;
      $390 = ($379 & 255) >>> 1;
     } else {
      $389 = HEAP32[$5 + 8 >> 2] | 0;
      $390 = HEAP32[$5 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $7 | 0, $389 | 0, $390 | 0) | 0;
     $391 = __THREW__;
     __THREW__ = 0;
     if (!($391 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      label = 150;
      break L10;
     }
     $393 = ___cxa_find_matching_catch() | 0;
     $394 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$5 = $393;
     $$57 = $394;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$6 >> 2] = 772;
     HEAP32[$7 >> 2] = 752;
     HEAP32[$8 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
     ___resumeException($$5 | 0);
    }
    break;
   }
  case 17:
   {
    $191 = ___cxa_allocate_exception(24) | 0;
    __THREW__ = 0;
    invoke_viii(3, $3 | 0, 39496, 42);
    $192 = __THREW__;
    __THREW__ = 0;
    if ($192 & 1) {
     $199 = ___cxa_find_matching_catch() | 0;
     $$2455 = tempRet0;
     $$256 = $199;
    } else {
     __THREW__ = 0;
     invoke_viiii(17, $191 | 0, $this + 56 | 0, $loc | 0, $3 | 0);
     $195 = __THREW__;
     __THREW__ = 0;
     if ($195 & 1) $$08 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $191 | 0, 38664, 183);
      $197 = __THREW__;
      __THREW__ = 0;
      if ($197 & 1) $$08 = 0; else {}
     }
     $201 = ___cxa_find_matching_catch() | 0;
     $202 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     if ($$08) {
      $$2455 = $202;
      $$256 = $201;
     } else {
      $$5 = $201;
      $$57 = $202;
      HEAP32[$ss >> 2] = 732;
      HEAP32[$6 >> 2] = 772;
      HEAP32[$7 >> 2] = 752;
      HEAP32[$8 >> 2] = 1064;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
      ___resumeException($$5 | 0);
     }
    }
    ___cxa_free_exception($191 | 0);
    $$5 = $$256;
    $$57 = $$2455;
    HEAP32[$ss >> 2] = 732;
    HEAP32[$6 >> 2] = 772;
    HEAP32[$7 >> 2] = 752;
    HEAP32[$8 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    ___resumeException($$5 | 0);
    break;
   }
  default:
   label = 150;
  } while (0);
  if ((label | 0) == 150) {
   __THREW__ = 0;
   invoke_vii(43, $agg$result | 0, $8 | 0);
   $395 = __THREW__;
   __THREW__ = 0;
   if ($395 & 1) label = 12; else {
    HEAP32[$ss >> 2] = 732;
    HEAP32[$6 >> 2] = 772;
    HEAP32[$7 >> 2] = 752;
    HEAP32[$8 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    STACKTOP = sp;
    return;
   }
  }
  if ((label | 0) == 12) {
   $34 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index7Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $34;
  }
  $$5 = $eh$lpad$body$indexZ2D;
  $$57 = $eh$lpad$body$index7Z2D;
  HEAP32[$ss >> 2] = 732;
  HEAP32[$6 >> 2] = 772;
  HEAP32[$7 >> 2] = 752;
  HEAP32[$8 >> 2] = 1064;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$5 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
 ___resumeException($$01$i | 0);
}

function _MUSL_vfscanf($f, $fmt, $ap) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$ = 0, $$8 = 0, $$lcssa = 0, $$lcssa317 = 0, $$lcssa318 = 0, $$lcssa319 = 0, $$lcssa320 = 0, $$lcssa366 = 0, $$lcssa39 = 0, $$pre$phi223Z2D = 0, $$pre209 = 0, $$pre215 = 0, $$pre220 = 0, $$size$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $103 = 0, $105 = 0, $108 = 0, $11 = 0, $111 = 0, $113 = 0, $121 = 0, $125 = 0, $13 = 0, $132 = 0, $137 = 0, $140 = 0, $146 = 0, $147 = 0, $152 = 0, $156 = 0, $16 = 0, $160 = 0, $162 = 0, $164 = 0, $166 = 0, $169 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $177 = 0, $182 = 0, $186 = 0, $191 = 0, $192 = 0, $194 = 0, $199 = 0, $203 = 0, $208 = 0, $21 = 0, $214 = 0, $218 = 0, $223 = 0, $230 = 0, $238 = 0, $243 = 0, $247 = 0, $249 = 0, $253 = 0, $255 = 0, $263 = 0, $271 = 0, $272 = 0, $275 = 0, $277 = 0, $28 = 0, $283 = 0, $290 = 0, $292 = 0, $298 = 0, $3 = 0, $304 = 0, $307 = 0, $311 = 0, $318 = 0, $33 = 0, $333 = 0, $337 = 0.0, $36 = 0, $4 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $57 = 0, $6 = 0, $7 = 0, $77 = 0, $78 = 0, $8 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $alloc$0 = 0, $alloc$0$lcssa = 0, $alloc$0$lcssa381 = 0, $alloc$0$lcssa382 = 0, $alloc$0$lcssa383 = 0, $alloc$0$lcssa385 = 0, $alloc$0$lcssa386 = 0, $alloc$0$lcssa387 = 0, $alloc$0204 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $base$0 = 0, $c$0101 = 0, $dest$0 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph$lcssa = 0, $i$0$ph$lcssa333 = 0, $i$0$ph21 = 0, $i$0$ph21$lcssa = 0, $i$0$ph21$lcssa336 = 0, $i$0$ph21$us106 = 0, $i$0$ph21$us106$lcssa = 0, $i$1$lcssa = 0, $i$2 = 0, $i$2$lcssa = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$3$lcssa = 0, $i$4 = 0, $invert$0 = 0, $isdigittmp = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0111 = 0, $matches$0111$lcssa = 0, $matches$0111$lcssa338 = 0, $matches$0111$lcssa339 = 0, $matches$0111$lcssa340 = 0, $matches$0111$lcssa341 = 0, $matches$0111$lcssa342 = 0, $matches$0111$lcssa343 = 0, $matches$0111$lcssa344 = 0, $matches$0111$lcssa345 = 0, $matches$0111347 = 0, $matches$1 = 0, $matches$1$lcssa = 0, $matches$2 = 0, $matches$3 = 0, $p$0117 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$397 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$lcssa = 0, $p$7$ph = 0, $p$8 = 0, $p$9 = 0, $pos$0116 = 0, $pos$1 = 0, $pos$2 = 0, $s$0109 = 0, $s$0109$lcssa = 0, $s$1 = 0, $s$1$lcssa368 = 0, $s$2$ph = 0, $s$2$ph$lcssa = 0, $s$2$ph$lcssa323 = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$6$ph = 0, $s$7 = 0, $s$8 = 0, $s$8$ph = 0, $scanset = 0, $size$0 = 0, $st = 0, $wc = 0, $wcs$0110 = 0, $wcs$0110$lcssa = 0, $wcs$1 = 0, $wcs$1$lcssa375 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$3$ph$lcssa$lcssa = 0, $wcs$3$ph$lcssa326 = 0, $wcs$3$ph$lcssa327 = 0, $wcs$3$ph$lcssa330 = 0, $wcs$3$ph139 = 0, $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$7$ph = 0, $wcs$8 = 0, $wcs$9 = 0, $wcs$9$ph = 0, $width$0$lcssa = 0, $width$098 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $ap2$i = sp + 16 | 0;
 $st = sp + 8 | 0;
 $scanset = sp + 33 | 0;
 $wc = sp;
 $0 = sp + 32 | 0;
 $1 = HEAP8[$fmt >> 0] | 0;
 if (!($1 << 24 >> 24)) {
  $matches$3 = 0;
  STACKTOP = sp;
  return $matches$3 | 0;
 }
 $3 = $f + 4 | 0;
 $4 = $f + 100 | 0;
 $5 = $f + 108 | 0;
 $6 = $f + 8 | 0;
 $7 = $scanset + 10 | 0;
 $8 = $scanset + 33 | 0;
 $9 = $st + 4 | 0;
 $10 = $scanset + 46 | 0;
 $11 = $scanset + 94 | 0;
 $13 = $1;
 $matches$0111 = 0;
 $p$0117 = $fmt;
 $pos$0116 = 0;
 $s$0109 = 0;
 $wcs$0110 = 0;
 L4 : while (1) {
  L6 : do if (!(_isspace($13 & 255) | 0)) {
   $43 = (HEAP8[$p$0117 >> 0] | 0) == 37;
   L22 : do if ($43) {
    $44 = $p$0117 + 1 | 0;
    $45 = HEAP8[$44 >> 0] | 0;
    do if ($45 << 24 >> 24 == 37) break L22; else if ($45 << 24 >> 24 == 42) {
     $dest$0 = 0;
     $p$2 = $p$0117 + 2 | 0;
    } else {
     $isdigittmp = ($45 & 255) + -48 | 0;
     if ($isdigittmp >>> 0 < 10) if ((HEAP8[$p$0117 + 2 >> 0] | 0) == 36) {
      HEAP32[$ap2$i >> 2] = HEAP32[$ap >> 2];
      $i$0$i = $isdigittmp;
      while (1) {
       $77 = (HEAP32[$ap2$i >> 2] | 0) + (4 - 1) & ~(4 - 1);
       $78 = HEAP32[$77 >> 2] | 0;
       HEAP32[$ap2$i >> 2] = $77 + 4;
       if ($i$0$i >>> 0 > 1) $i$0$i = $i$0$i + -1 | 0; else {
        $$lcssa = $78;
        break;
       }
      }
      $dest$0 = $$lcssa;
      $p$2 = $p$0117 + 3 | 0;
      break;
     }
     $86 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $87 = HEAP32[$86 >> 2] | 0;
     HEAP32[$ap >> 2] = $86 + 4;
     $dest$0 = $87;
     $p$2 = $44;
    } while (0);
    $88 = HEAP8[$p$2 >> 0] | 0;
    $89 = $88 & 255;
    if (($89 + -48 | 0) >>> 0 < 10) {
     $93 = $89;
     $p$397 = $p$2;
     $width$098 = 0;
     while (1) {
      $92 = ($width$098 * 10 | 0) + -48 + $93 | 0;
      $94 = $p$397 + 1 | 0;
      $95 = HEAP8[$94 >> 0] | 0;
      $93 = $95 & 255;
      if (($93 + -48 | 0) >>> 0 >= 10) {
       $$lcssa317 = $92;
       $$lcssa318 = $94;
       $$lcssa319 = $95;
       break;
      } else {
       $p$397 = $94;
       $width$098 = $92;
      }
     }
     $$lcssa39 = $$lcssa319;
     $p$3$lcssa = $$lcssa318;
     $width$0$lcssa = $$lcssa317;
    } else {
     $$lcssa39 = $88;
     $p$3$lcssa = $p$2;
     $width$0$lcssa = 0;
    }
    if ($$lcssa39 << 24 >> 24 == 109) {
     $100 = $p$3$lcssa + 1 | 0;
     $103 = HEAP8[$100 >> 0] | 0;
     $alloc$0 = ($dest$0 | 0) != 0 & 1;
     $p$4 = $100;
     $s$1 = 0;
     $wcs$1 = 0;
    } else {
     $103 = $$lcssa39;
     $alloc$0 = 0;
     $p$4 = $p$3$lcssa;
     $s$1 = $s$0109;
     $wcs$1 = $wcs$0110;
    }
    $101 = $p$4 + 1 | 0;
    switch ($103 & 255 | 0) {
    case 110:
    case 112:
    case 67:
    case 83:
    case 91:
    case 99:
    case 115:
    case 88:
    case 71:
    case 70:
    case 69:
    case 65:
    case 103:
    case 102:
    case 101:
    case 97:
    case 120:
    case 117:
    case 111:
    case 105:
    case 100:
     {
      $p$5 = $p$4;
      $size$0 = 0;
      break;
     }
    case 76:
     {
      $p$5 = $101;
      $size$0 = 2;
      break;
     }
    case 116:
    case 122:
     {
      $p$5 = $101;
      $size$0 = 1;
      break;
     }
    case 106:
     {
      $p$5 = $101;
      $size$0 = 3;
      break;
     }
    case 104:
     {
      $105 = (HEAP8[$101 >> 0] | 0) == 104;
      $p$5 = $105 ? $p$4 + 2 | 0 : $101;
      $size$0 = $105 ? -2 : -1;
      break;
     }
    case 108:
     {
      $108 = (HEAP8[$101 >> 0] | 0) == 108;
      $p$5 = $108 ? $p$4 + 2 | 0 : $101;
      $size$0 = $108 ? 3 : 1;
      break;
     }
    default:
     {
      $alloc$0$lcssa = $alloc$0;
      $matches$0111$lcssa338 = $matches$0111;
      $s$6$ph = $s$1;
      $wcs$7$ph = $wcs$1;
      label = 188;
      break L4;
     }
    }
    $111 = HEAPU8[$p$5 >> 0] | 0;
    $113 = ($111 & 47 | 0) == 3;
    $$ = $113 ? $111 | 32 : $111;
    $$size$0 = $113 ? 1 : $size$0;
    if (($$ | 0) == 110) {
     if (!$dest$0) {
      $matches$1 = $matches$0111;
      $p$11 = $p$5;
      $pos$2 = $pos$0116;
      $s$5 = $s$1;
      $wcs$6 = $wcs$1;
      break L6;
     }
     switch ($$size$0 | 0) {
     case 1:
      {
       HEAP32[$dest$0 >> 2] = $pos$0116;
       $matches$1 = $matches$0111;
       $p$11 = $p$5;
       $pos$2 = $pos$0116;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     case 0:
      {
       HEAP32[$dest$0 >> 2] = $pos$0116;
       $matches$1 = $matches$0111;
       $p$11 = $p$5;
       $pos$2 = $pos$0116;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     case 3:
      {
       $121 = $dest$0;
       HEAP32[$121 >> 2] = $pos$0116;
       HEAP32[$121 + 4 >> 2] = (($pos$0116 | 0) < 0) << 31 >> 31;
       $matches$1 = $matches$0111;
       $p$11 = $p$5;
       $pos$2 = $pos$0116;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     case -1:
      {
       HEAP16[$dest$0 >> 1] = $pos$0116;
       $matches$1 = $matches$0111;
       $p$11 = $p$5;
       $pos$2 = $pos$0116;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     case -2:
      {
       HEAP8[$dest$0 >> 0] = $pos$0116;
       $matches$1 = $matches$0111;
       $p$11 = $p$5;
       $pos$2 = $pos$0116;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     default:
      {
       $matches$1 = $matches$0111;
       $p$11 = $p$5;
       $pos$2 = $pos$0116;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
      }
     }
    } else if (($$ | 0) == 99) {
     $pos$1 = $pos$0116;
     $width$1 = ($width$0$lcssa | 0) < 1 ? 1 : $width$0$lcssa;
    } else if (($$ | 0) == 91) {
     $pos$1 = $pos$0116;
     $width$1 = $width$0$lcssa;
    } else {
     ___shlim($f, 0);
     do {
      $125 = HEAP32[$3 >> 2] | 0;
      if ($125 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
       HEAP32[$3 >> 2] = $125 + 1;
       $132 = HEAPU8[$125 >> 0] | 0;
      } else $132 = ___shgetc($f) | 0;
     } while ((_isspace($132) | 0) != 0);
     $$pre209 = HEAP32[$3 >> 2] | 0;
     if (!(HEAP32[$4 >> 2] | 0)) $140 = $$pre209; else {
      $137 = $$pre209 + -1 | 0;
      HEAP32[$3 >> 2] = $137;
      $140 = $137;
     }
     $pos$1 = (HEAP32[$5 >> 2] | 0) + $pos$0116 + $140 - (HEAP32[$6 >> 2] | 0) | 0;
     $width$1 = $width$0$lcssa;
    }
    ___shlim($f, $width$1);
    $146 = HEAP32[$3 >> 2] | 0;
    $147 = HEAP32[$4 >> 2] | 0;
    if ($146 >>> 0 < $147 >>> 0) {
     HEAP32[$3 >> 2] = $146 + 1;
     $152 = $147;
    } else {
     if ((___shgetc($f) | 0) < 0) {
      $alloc$0$lcssa = $alloc$0;
      $matches$0111$lcssa338 = $matches$0111;
      $s$6$ph = $s$1;
      $wcs$7$ph = $wcs$1;
      label = 188;
      break L4;
     }
     $152 = HEAP32[$4 >> 2] | 0;
    }
    if ($152) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
    L81 : do switch ($$ | 0) {
    case 111:
     {
      $base$0 = 8;
      label = 164;
      break;
     }
    case 117:
    case 100:
     {
      $base$0 = 10;
      label = 164;
      break;
     }
    case 105:
     {
      $base$0 = 0;
      label = 164;
      break;
     }
    case 71:
    case 103:
    case 70:
    case 102:
    case 69:
    case 101:
    case 65:
    case 97:
     {
      $337 = +___floatscan($f, $$size$0, 0);
      if ((HEAP32[$5 >> 2] | 0) == ((HEAP32[$6 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0)) {
       $alloc$0$lcssa381 = $alloc$0;
       $matches$0111$lcssa339 = $matches$0111;
       $s$8$ph = $s$1;
       $wcs$9$ph = $wcs$1;
       label = 191;
       break L4;
      }
      if (!$dest$0) {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
      } else if (!$$size$0) {
       HEAPF32[$dest$0 >> 2] = $337;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L81;
      } else if (($$size$0 | 0) == 1) {
       HEAPF64[$dest$0 >> 3] = $337;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L81;
      } else if (($$size$0 | 0) == 2) {
       HEAPF64[$dest$0 >> 3] = $337;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L81;
      } else {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L81;
      }
      break;
     }
    case 91:
    case 99:
    case 115:
     {
      $156 = ($$ | 0) == 99;
      if (($$ & 239 | 0) == 99) {
       _memset($scanset | 0, -1, 257) | 0;
       HEAP8[$scanset >> 0] = 0;
       if (($$ | 0) == 115) {
        HEAP8[$8 >> 0] = 0;
        HEAP8[$7 + 0 >> 0] = 0;
        HEAP8[$7 + 1 >> 0] = 0;
        HEAP8[$7 + 2 >> 0] = 0;
        HEAP8[$7 + 3 >> 0] = 0;
        HEAP8[$7 + 4 >> 0] = 0;
        $p$9 = $p$5;
       } else $p$9 = $p$5;
      } else {
       $160 = $p$5 + 1 | 0;
       $162 = (HEAP8[$160 >> 0] | 0) == 94;
       $invert$0 = $162 & 1;
       $164 = $162 ? $160 : $p$5;
       $p$6 = $162 ? $p$5 + 2 | 0 : $160;
       _memset($scanset | 0, $162 & 1 | 0, 257) | 0;
       HEAP8[$scanset >> 0] = 0;
       $166 = HEAP8[$p$6 >> 0] | 0;
       if ($166 << 24 >> 24 == 93) {
        $172 = ($invert$0 ^ 1) & 255;
        HEAP8[$11 >> 0] = $172;
        $$pre$phi223Z2D = $172;
        $p$7$ph = $164 + 2 | 0;
       } else if ($166 << 24 >> 24 == 45) {
        $169 = ($invert$0 ^ 1) & 255;
        HEAP8[$10 >> 0] = $169;
        $$pre$phi223Z2D = $169;
        $p$7$ph = $164 + 2 | 0;
       } else {
        $$pre$phi223Z2D = ($invert$0 ^ 1) & 255;
        $p$7$ph = $p$6;
       }
       $p$7 = $p$7$ph;
       while (1) {
        $173 = HEAP8[$p$7 >> 0] | 0;
        if (!($173 << 24 >> 24)) {
         $alloc$0$lcssa382 = $alloc$0;
         $matches$0111$lcssa340 = $matches$0111;
         $s$1$lcssa368 = $s$1;
         $wcs$1$lcssa375 = $wcs$1;
         label = 187;
         break L4;
        } else if ($173 << 24 >> 24 == 45) {
         $174 = $p$7 + 1 | 0;
         $175 = HEAP8[$174 >> 0] | 0;
         if ($175 << 24 >> 24 == 93 | $175 << 24 >> 24 == 0) {
          $186 = 45;
          $p$8 = $p$7;
         } else {
          $177 = HEAP8[$p$7 + -1 >> 0] | 0;
          if (($177 & 255) < ($175 & 255)) {
           $c$0101 = $177 & 255;
           do {
            $c$0101 = $c$0101 + 1 | 0;
            HEAP8[$scanset + $c$0101 >> 0] = $$pre$phi223Z2D;
            $182 = HEAP8[$174 >> 0] | 0;
           } while (($c$0101 | 0) < ($182 & 255 | 0));
           $$lcssa320 = $182;
           $186 = $$lcssa320;
           $p$8 = $174;
          } else {
           $186 = $175;
           $p$8 = $174;
          }
         }
        } else if ($173 << 24 >> 24 == 93) {
         $p$7$lcssa = $p$7;
         break;
        } else {
         $186 = $173;
         $p$8 = $p$7;
        }
        HEAP8[$scanset + (($186 & 255) + 1) >> 0] = $$pre$phi223Z2D;
        $p$7 = $p$8 + 1 | 0;
       }
       $p$9 = $p$7$lcssa;
      }
      $$8 = $156 ? $width$1 + 1 | 0 : 31;
      $191 = ($$size$0 | 0) == 1;
      $192 = ($alloc$0 | 0) != 0;
      do if ($191) {
       if ($192) {
        $194 = _malloc($$8 << 2) | 0;
        if (!$194) {
         $alloc$0$lcssa = $alloc$0;
         $matches$0111$lcssa338 = $matches$0111;
         $s$6$ph = 0;
         $wcs$7$ph = $194;
         label = 188;
         break L4;
        } else $wcs$2 = $194;
       } else $wcs$2 = $dest$0;
       HEAP32[$st >> 2] = 0;
       HEAP32[$9 >> 2] = 0;
       $i$0$ph = 0;
       $k$0$ph = $$8;
       $wcs$3$ph = $wcs$2;
       L120 : while (1) {
        if (!$wcs$3$ph) {
         while (1) {
          $199 = HEAP32[$3 >> 2] | 0;
          if ($199 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
           HEAP32[$3 >> 2] = $199 + 1;
           $203 = HEAPU8[$199 >> 0] | 0;
          } else $203 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($203 + 1) >> 0] | 0)) {
           $i$0$ph$lcssa333 = $i$0$ph;
           label = 120;
           break L120;
          }
          HEAP8[$0 >> 0] = $203;
          $208 = _mbrtowc($wc, $0, 1, $st) | 0;
          if (($208 | 0) == -1) {
           $alloc$0$lcssa386 = $alloc$0;
           $matches$0111$lcssa344 = $matches$0111;
           label = 184;
           break L4;
          } else if (($208 | 0) != -2) if ($192 & ($i$0$ph | 0) == ($k$0$ph | 0)) break;
         }
         $i$1$lcssa = $i$0$ph;
        } else {
         if (!$192) {
          $i$0$ph$lcssa = $i$0$ph;
          $wcs$3$ph$lcssa = $wcs$3$ph;
          label = 91;
          break;
         }
         $i$0$ph21$us106 = $i$0$ph;
         do {
          while (1) {
           $214 = HEAP32[$3 >> 2] | 0;
           if ($214 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
            HEAP32[$3 >> 2] = $214 + 1;
            $218 = HEAPU8[$214 >> 0] | 0;
           } else $218 = ___shgetc($f) | 0;
           if (!(HEAP8[$scanset + ($218 + 1) >> 0] | 0)) {
            $i$0$ph21$us106$lcssa = $i$0$ph21$us106;
            $wcs$3$ph$lcssa326 = $wcs$3$ph;
            label = 118;
            break L120;
           }
           HEAP8[$0 >> 0] = $218;
           $223 = _mbrtowc($wc, $0, 1, $st) | 0;
           if (($223 | 0) == -1) {
            $alloc$0$lcssa385 = $alloc$0;
            $matches$0111$lcssa343 = $matches$0111;
            $wcs$3$ph$lcssa327 = $wcs$3$ph;
            label = 182;
            break L4;
           } else if (($223 | 0) != -2) break;
          }
          HEAP32[$wcs$3$ph + ($i$0$ph21$us106 << 2) >> 2] = HEAP32[$wc >> 2];
          $i$0$ph21$us106 = $i$0$ph21$us106 + 1 | 0;
         } while (($i$0$ph21$us106 | 0) != ($k$0$ph | 0));
         $i$1$lcssa = $k$0$ph;
        }
        $247 = $k$0$ph << 1 | 1;
        $249 = _realloc($wcs$3$ph, $247 << 2) | 0;
        if (!$249) {
         $alloc$0$lcssa387 = $alloc$0;
         $matches$0111$lcssa345 = $matches$0111;
         $wcs$3$ph$lcssa330 = $wcs$3$ph;
         label = 185;
         break L4;
        }
        $i$0$ph = $i$1$lcssa;
        $k$0$ph = $247;
        $wcs$3$ph = $249;
       }
       if ((label | 0) == 91) {
        label = 0;
        $i$0$ph21 = $i$0$ph$lcssa;
        L152 : while (1) {
         while (1) {
          $230 = HEAP32[$3 >> 2] | 0;
          if ($230 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
           HEAP32[$3 >> 2] = $230 + 1;
           $238 = HEAPU8[$230 >> 0] | 0;
          } else $238 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($238 + 1) >> 0] | 0)) {
           $i$0$ph21$lcssa336 = $i$0$ph21;
           break L152;
          }
          HEAP8[$0 >> 0] = $238;
          $243 = _mbrtowc($wc, $0, 1, $st) | 0;
          if (($243 | 0) == -1) {
           $matches$0111$lcssa342 = $matches$0111;
           $wcs$3$ph$lcssa$lcssa = $wcs$3$ph$lcssa;
           label = 183;
           break L4;
          } else if (($243 | 0) != -2) break;
         }
         HEAP32[$wcs$3$ph$lcssa + ($i$0$ph21 << 2) >> 2] = HEAP32[$wc >> 2];
         $i$0$ph21 = $i$0$ph21 + 1 | 0;
        }
        $i$0$ph21$lcssa = $i$0$ph21$lcssa336;
        $wcs$3$ph139 = $wcs$3$ph$lcssa;
       } else if ((label | 0) == 118) {
        label = 0;
        $i$0$ph21$lcssa = $i$0$ph21$us106$lcssa;
        $wcs$3$ph139 = $wcs$3$ph$lcssa326;
       } else if ((label | 0) == 120) {
        label = 0;
        $i$0$ph21$lcssa = $i$0$ph$lcssa333;
        $wcs$3$ph139 = 0;
       }
       if (!(_mbsinit($st) | 0)) {
        $alloc$0$lcssa = $alloc$0;
        $matches$0111$lcssa338 = $matches$0111;
        $s$6$ph = 0;
        $wcs$7$ph = $wcs$3$ph139;
        label = 188;
        break L4;
       } else {
        $i$4 = $i$0$ph21$lcssa;
        $s$3 = 0;
        $wcs$4 = $wcs$3$ph139;
       }
      } else {
       if ($192) {
        $253 = _malloc($$8) | 0;
        if (!$253) {
         $alloc$0$lcssa = $alloc$0;
         $matches$0111$lcssa338 = $matches$0111;
         $s$6$ph = 0;
         $wcs$7$ph = 0;
         label = 188;
         break L4;
        }
        $i$2$ph = 0;
        $k$1$ph = $$8;
        $s$2$ph = $253;
        L170 : while (1) {
         $i$2 = $i$2$ph;
         do {
          $255 = HEAP32[$3 >> 2] | 0;
          if ($255 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
           HEAP32[$3 >> 2] = $255 + 1;
           $263 = HEAPU8[$255 >> 0] | 0;
          } else $263 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($263 + 1) >> 0] | 0)) {
           $i$2$lcssa = $i$2;
           $s$2$ph$lcssa = $s$2$ph;
           break L170;
          }
          HEAP8[$s$2$ph + $i$2 >> 0] = $263;
          $i$2 = $i$2 + 1 | 0;
         } while (($i$2 | 0) != ($k$1$ph | 0));
         $271 = $k$1$ph << 1 | 1;
         $272 = _realloc($s$2$ph, $271) | 0;
         if (!$272) {
          $alloc$0$lcssa383 = $alloc$0;
          $matches$0111$lcssa341 = $matches$0111;
          $s$2$ph$lcssa323 = $s$2$ph;
          label = 186;
          break L4;
         } else {
          $i$2$ph$phi = $k$1$ph;
          $k$1$ph = $271;
          $s$2$ph = $272;
          $i$2$ph = $i$2$ph$phi;
         }
        }
        $i$4 = $i$2$lcssa;
        $s$3 = $s$2$ph$lcssa;
        $wcs$4 = 0;
        break;
       }
       if (!$dest$0) {
        $292 = $152;
        while (1) {
         $290 = HEAP32[$3 >> 2] | 0;
         if ($290 >>> 0 < $292 >>> 0) {
          HEAP32[$3 >> 2] = $290 + 1;
          $298 = HEAPU8[$290 >> 0] | 0;
         } else $298 = ___shgetc($f) | 0;
         if (!(HEAP8[$scanset + ($298 + 1) >> 0] | 0)) break;
         $292 = HEAP32[$4 >> 2] | 0;
        }
        $i$4 = 0;
        $s$3 = 0;
        $wcs$4 = 0;
        break;
       } else {
        $277 = $152;
        $i$3 = 0;
        while (1) {
         $275 = HEAP32[$3 >> 2] | 0;
         if ($275 >>> 0 < $277 >>> 0) {
          HEAP32[$3 >> 2] = $275 + 1;
          $283 = HEAPU8[$275 >> 0] | 0;
         } else $283 = ___shgetc($f) | 0;
         if (!(HEAP8[$scanset + ($283 + 1) >> 0] | 0)) {
          $i$3$lcssa = $i$3;
          break;
         }
         HEAP8[$dest$0 + $i$3 >> 0] = $283;
         $277 = HEAP32[$4 >> 2] | 0;
         $i$3 = $i$3 + 1 | 0;
        }
        $i$4 = $i$3$lcssa;
        $s$3 = $dest$0;
        $wcs$4 = 0;
        break;
       }
      } while (0);
      $$pre215 = HEAP32[$3 >> 2] | 0;
      if (!(HEAP32[$4 >> 2] | 0)) $307 = $$pre215; else {
       $304 = $$pre215 + -1 | 0;
       HEAP32[$3 >> 2] = $304;
       $307 = $304;
      }
      $311 = $307 - (HEAP32[$6 >> 2] | 0) + (HEAP32[$5 >> 2] | 0) | 0;
      if (!$311) {
       $alloc$0$lcssa381 = $alloc$0;
       $matches$0111$lcssa339 = $matches$0111;
       $s$8$ph = $s$3;
       $wcs$9$ph = $wcs$4;
       label = 191;
       break L4;
      }
      if (!(($311 | 0) == ($width$1 | 0) | $156 ^ 1)) {
       $alloc$0$lcssa381 = $alloc$0;
       $matches$0111$lcssa339 = $matches$0111;
       $s$8$ph = $s$3;
       $wcs$9$ph = $wcs$4;
       label = 191;
       break L4;
      }
      do if ($192) if ($191) {
       HEAP32[$dest$0 >> 2] = $wcs$4;
       break;
      } else {
       HEAP32[$dest$0 >> 2] = $s$3;
       break;
      } while (0);
      if ($156) {
       $p$10 = $p$9;
       $s$4 = $s$3;
       $wcs$5 = $wcs$4;
      } else {
       if ($wcs$4) HEAP32[$wcs$4 + ($i$4 << 2) >> 2] = 0;
       if (!$s$3) {
        $p$10 = $p$9;
        $s$4 = 0;
        $wcs$5 = $wcs$4;
       } else {
        HEAP8[$s$3 + $i$4 >> 0] = 0;
        $p$10 = $p$9;
        $s$4 = $s$3;
        $wcs$5 = $wcs$4;
       }
      }
      break;
     }
    case 120:
    case 88:
    case 112:
     {
      $base$0 = 16;
      label = 164;
      break;
     }
    default:
     {
      $p$10 = $p$5;
      $s$4 = $s$1;
      $wcs$5 = $wcs$1;
     }
    } while (0);
    L218 : do if ((label | 0) == 164) {
     label = 0;
     $318 = ___intscan($f, $base$0, 0, -1, -1) | 0;
     if ((HEAP32[$5 >> 2] | 0) == ((HEAP32[$6 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0)) {
      $alloc$0$lcssa381 = $alloc$0;
      $matches$0111$lcssa339 = $matches$0111;
      $s$8$ph = $s$1;
      $wcs$9$ph = $wcs$1;
      label = 191;
      break L4;
     }
     if (($dest$0 | 0) != 0 & ($$ | 0) == 112) {
      HEAP32[$dest$0 >> 2] = $318;
      $p$10 = $p$5;
      $s$4 = $s$1;
      $wcs$5 = $wcs$1;
      break;
     }
     if (!$dest$0) {
      $p$10 = $p$5;
      $s$4 = $s$1;
      $wcs$5 = $wcs$1;
     } else switch ($$size$0 | 0) {
     case -2:
      {
       HEAP8[$dest$0 >> 0] = $318;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L218;
       break;
      }
     case 3:
      {
       $333 = $dest$0;
       HEAP32[$333 >> 2] = $318;
       HEAP32[$333 + 4 >> 2] = tempRet0;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L218;
       break;
      }
     case -1:
      {
       HEAP16[$dest$0 >> 1] = $318;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L218;
       break;
      }
     case 0:
      {
       HEAP32[$dest$0 >> 2] = $318;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L218;
       break;
      }
     case 1:
      {
       HEAP32[$dest$0 >> 2] = $318;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L218;
       break;
      }
     default:
      {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L218;
      }
     }
    } while (0);
    $matches$1 = (($dest$0 | 0) != 0 & 1) + $matches$0111 | 0;
    $p$11 = $p$10;
    $pos$2 = (HEAP32[$5 >> 2] | 0) + $pos$1 + (HEAP32[$3 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
    $s$5 = $s$4;
    $wcs$6 = $wcs$5;
    break L6;
   } while (0);
   $47 = $p$0117 + ($43 & 1) | 0;
   ___shlim($f, 0);
   $48 = HEAP32[$3 >> 2] | 0;
   if ($48 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $48 + 1;
    $57 = HEAPU8[$48 >> 0] | 0;
   } else $57 = ___shgetc($f) | 0;
   if (($57 | 0) != (HEAPU8[$47 >> 0] | 0)) {
    $$lcssa366 = $57;
    $matches$0111$lcssa = $matches$0111;
    $s$0109$lcssa = $s$0109;
    $wcs$0110$lcssa = $wcs$0110;
    label = 20;
    break L4;
   }
   $matches$1 = $matches$0111;
   $p$11 = $47;
   $pos$2 = $pos$0116 + 1 | 0;
   $s$5 = $s$0109;
   $wcs$6 = $wcs$0110;
  } else {
   $p$1 = $p$0117;
   while (1) {
    $16 = $p$1 + 1 | 0;
    if (!(_isspace(HEAPU8[$16 >> 0] | 0) | 0)) {
     $p$1$lcssa = $p$1;
     break;
    } else $p$1 = $16;
   }
   ___shlim($f, 0);
   do {
    $21 = HEAP32[$3 >> 2] | 0;
    if ($21 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $21 + 1;
     $28 = HEAPU8[$21 >> 0] | 0;
    } else $28 = ___shgetc($f) | 0;
   } while ((_isspace($28) | 0) != 0);
   $$pre220 = HEAP32[$3 >> 2] | 0;
   if (!(HEAP32[$4 >> 2] | 0)) $36 = $$pre220; else {
    $33 = $$pre220 + -1 | 0;
    HEAP32[$3 >> 2] = $33;
    $36 = $33;
   }
   $matches$1 = $matches$0111;
   $p$11 = $p$1$lcssa;
   $pos$2 = (HEAP32[$5 >> 2] | 0) + $pos$0116 + $36 - (HEAP32[$6 >> 2] | 0) | 0;
   $s$5 = $s$0109;
   $wcs$6 = $wcs$0110;
  } while (0);
  $p$0117 = $p$11 + 1 | 0;
  $13 = HEAP8[$p$0117 >> 0] | 0;
  if (!($13 << 24 >> 24)) {
   $matches$1$lcssa = $matches$1;
   label = 194;
   break;
  } else {
   $matches$0111 = $matches$1;
   $pos$0116 = $pos$2;
   $s$0109 = $s$5;
   $wcs$0110 = $wcs$6;
  }
 }
 switch (label | 0) {
 case 20:
  {
   if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   if (($matches$0111$lcssa | 0) != 0 | ($$lcssa366 | 0) > -1) {
    $matches$3 = $matches$0111$lcssa;
    STACKTOP = sp;
    return $matches$3 | 0;
   } else {
    $alloc$1 = 0;
    $s$7 = $s$0109$lcssa;
    $wcs$8 = $wcs$0110$lcssa;
    label = 190;
   }
   break;
  }
 case 182:
  {
   $alloc$0204 = $alloc$0$lcssa385;
   $matches$0111347 = $matches$0111$lcssa343;
   $s$6 = 0;
   $wcs$7 = $wcs$3$ph$lcssa327;
   label = 189;
   break;
  }
 case 183:
  {
   $alloc$0204 = 0;
   $matches$0111347 = $matches$0111$lcssa342;
   $s$6 = 0;
   $wcs$7 = $wcs$3$ph$lcssa$lcssa;
   label = 189;
   break;
  }
 case 184:
  {
   $alloc$0204 = $alloc$0$lcssa386;
   $matches$0111347 = $matches$0111$lcssa344;
   $s$6 = 0;
   $wcs$7 = 0;
   label = 189;
   break;
  }
 case 185:
  {
   $alloc$0204 = $alloc$0$lcssa387;
   $matches$0111347 = $matches$0111$lcssa345;
   $s$6 = 0;
   $wcs$7 = $wcs$3$ph$lcssa330;
   label = 189;
   break;
  }
 case 186:
  {
   $alloc$0204 = $alloc$0$lcssa383;
   $matches$0111347 = $matches$0111$lcssa341;
   $s$6 = $s$2$ph$lcssa323;
   $wcs$7 = 0;
   label = 189;
   break;
  }
 case 187:
  {
   $alloc$0204 = $alloc$0$lcssa382;
   $matches$0111347 = $matches$0111$lcssa340;
   $s$6 = $s$1$lcssa368;
   $wcs$7 = $wcs$1$lcssa375;
   label = 189;
   break;
  }
 case 188:
  {
   $alloc$0204 = $alloc$0$lcssa;
   $matches$0111347 = $matches$0111$lcssa338;
   $s$6 = $s$6$ph;
   $wcs$7 = $wcs$7$ph;
   label = 189;
   break;
  }
 case 191:
  {
   $alloc$2 = $alloc$0$lcssa381;
   $matches$2 = $matches$0111$lcssa339;
   $s$8 = $s$8$ph;
   $wcs$9 = $wcs$9$ph;
   break;
  }
 case 194:
  {
   $matches$3 = $matches$1$lcssa;
   STACKTOP = sp;
   return $matches$3 | 0;
  }
 }
 if ((label | 0) == 189) if (!$matches$0111347) {
  $alloc$1 = $alloc$0204;
  $s$7 = $s$6;
  $wcs$8 = $wcs$7;
  label = 190;
 } else {
  $alloc$2 = $alloc$0204;
  $matches$2 = $matches$0111347;
  $s$8 = $s$6;
  $wcs$9 = $wcs$7;
 }
 if ((label | 0) == 190) {
  $alloc$2 = $alloc$1;
  $matches$2 = -1;
  $s$8 = $s$7;
  $wcs$9 = $wcs$8;
 }
 if (!$alloc$2) {
  $matches$3 = $matches$2;
  STACKTOP = sp;
  return $matches$3 | 0;
 }
 _free($s$8);
 _free($wcs$9);
 $matches$3 = $matches$2;
 STACKTOP = sp;
 return $matches$3 | 0;
}

function __ZN12_GLOBAL__N_111Interpreter10makeObjectINS_16HeapSimpleObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEENS4_IS7_NS2_5FieldESB_NSC_INSD_ISE_SI_EEEEEEEEENS_5ValueEDpT0_($agg$result, $this, $args, $args1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i10$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i10$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i3$i$i = 0, $$0$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i12$i$i$i = 0, $$0$i$i$i$i$i$i27$i$i$i = 0, $$0$i$i$i$i$i$i27$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i4$i$i = 0, $$0$i$i$i$i$i29$i$i$i = 0, $$0$i$i$i$i119$i$i$i$i = 0, $$0$i$i$i$i119$i$i$i$i$i = 0, $$0$i$i$i$i119$i$i$i$i$i$ph = 0, $$0$i$i$i$i119$i$i$i$i$ph = 0, $$0$i$i$i$i119$i$i24$i$i$i = 0, $$0$i$i$i$i119$i$i24$i$i$i$ph = 0, $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i15$i$i$i = 0, $$01$i$i$i$i$i32$i$i$i = 0, $$cast$i$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i13$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i30$i$i$i$lcssa = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i$i$i = 0, $$idx$val$i$i3$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx2$val$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i21$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa = 0, $$lcssa$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i8$i$i$i = 0, $$pre$i$i23$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $104 = 0, $106 = 0, $109 = 0, $11 = 0, $112 = 0, $115 = 0, $116 = 0, $118 = 0, $12 = 0, $121 = 0, $125 = 0, $126 = 0, $127 = 0, $129 = 0, $130 = 0, $132 = 0, $133 = 0, $134 = 0, $136 = 0, $138 = 0, $14 = 0, $141 = 0, $148 = 0, $151 = 0, $152 = 0, $154 = 0, $155 = 0, $159 = 0, $16 = 0, $161 = 0, $164 = 0, $167 = 0, $170 = 0, $171 = 0, $173 = 0, $176 = 0, $180 = 0, $181 = 0, $183 = 0, $184 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $195 = 0, $196 = 0, $2 = 0, $201 = 0, $204 = 0, $205 = 0, $206 = 0, $210 = 0, $212 = 0, $214 = 0, $216 = 0, $217 = 0, $221 = 0, $222 = 0, $223 = 0, $226 = 0, $227 = 0, $229 = 0, $230 = 0, $233 = 0, $239 = 0, $240 = 0, $246 = 0, $259 = 0, $26 = 0, $262 = 0, $266 = 0, $275 = 0, $280 = 0, $282 = 0, $286 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $45 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $54 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $74 = 0, $75 = 0, $79 = 0, $8 = 0, $81 = 0, $83 = 0, $86 = 0, $93 = 0, $96 = 0, $97 = 0, $99 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa29 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa30 = 0, $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa28 = 0, $__v$idx14$val$i$i$i$i$i$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i$i$i$i = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[$agg$result >> 2] = 18;
 $1 = __Znwj(32) | 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 8 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $0 + 4 | 0;
 HEAP32[$0 >> 2] = $4;
 $$idx$val$i$i$i$i = HEAP32[$args1 >> 2] | 0;
 $5 = $args1 + 4 | 0;
 do if (($$idx$val$i$i$i$i | 0) != ($5 | 0)) {
  $11 = $$idx$val$i$i$i$i;
  $289 = $$idx$val$i$i$i$i;
  while (1) {
   __THREW__ = 0;
   $7 = invoke_ii(67, 28) | 0;
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) break;
   $10 = $11 + 16 | 0;
   $12 = $7 + 16 | 0;
   HEAP32[$12 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
   HEAP32[$12 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
   HEAP32[$12 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
   $$pre$i$i$i$i$i$i$i$i = HEAP32[$4 >> 2] | 0;
   do if ((HEAP32[$0 >> 2] | 0) == ($4 | 0)) {
    $33 = $4;
    label = 13;
   } else {
    $14 = ($$pre$i$i$i$i$i$i$i$i | 0) == 0;
    if ($14) {
     $$0$i$i$i$i$i$i$i$i$i$i = $4;
     while (1) {
      $19 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$19 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i$i = $19; else {
       $$cast$i$i$i$i$i$i$i$i$i$i$lcssa = $19;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
     while (1) {
      $16 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$16) {
       $$0$i$i$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i$i$i = $16;
     }
     $$01$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i$lcssa;
    }
    $__v$idx14$val$i$i$i$i$i$i$i$i = HEAP32[$12 >> 2] | 0;
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i$i$i >>> 0) {
     $33 = $$01$i$i$i$i$i$i$i$i$i$i;
     label = 13;
    } else if ($14) {
     $$0$i$i$i$i119$i$i$i$i = $4;
     $37 = $4;
     label = 23;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i$i$i >>> 0 > $__v$idx14$val$i$i$i$i$i$i$i$i >>> 0) {
       $26 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i >> 2] | 0;
       if (!$26) {
        $$0$i$i$i$i119$i$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa30 = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
        label = 22;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$be = $26;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i$i$i >>> 0 >= $__v$idx14$val$i$i$i$i$i$i$i$i >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
        label = 26;
        break;
       }
       $29 = $__nd$0$i20$i$i$i$i$in$i$i$i$i + 4 | 0;
       $30 = HEAP32[$29 >> 2] | 0;
       if (!$30) {
        $$0$i$i$i$i119$i$i$i$i$ph = $29;
        $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa30 = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
        label = 22;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$be = $30;
      }
      $__nd$0$i20$i$i$i$i$in$i$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i$i$i$be;
     }
     if ((label | 0) == 22) {
      label = 0;
      $$0$i$i$i$i119$i$i$i$i = $$0$i$i$i$i119$i$i$i$i$ph;
      $37 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa30;
      label = 23;
      break;
     } else if ((label | 0) == 26) {
      label = 0;
      $45 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa;
      label = 27;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 13) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i$i$i) {
     $$0$i$i$i$i119$i$i$i$i = $4;
     $37 = $4;
     label = 23;
    } else {
     $32 = $33 + 4 | 0;
     $$pre$i$i$i$i = HEAP32[$32 >> 2] | 0;
     if (!$$pre$i$i$i$i) {
      $$0$i$i$i$i119$i$i$i$i = $32;
      $37 = $33;
      label = 23;
     } else {
      $45 = $$pre$i$i$i$i;
      label = 27;
     }
    }
   }
   if ((label | 0) == 23) {
    label = 0;
    HEAP32[$7 >> 2] = 0;
    HEAP32[$7 + 4 >> 2] = 0;
    HEAP32[$7 + 8 >> 2] = $37;
    HEAP32[$$0$i$i$i$i119$i$i$i$i >> 2] = $7;
    $39 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
    if (!$39) $42 = $7; else {
     HEAP32[$0 >> 2] = $39;
     $42 = HEAP32[$$0$i$i$i$i119$i$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $42);
    HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
    $48 = $11;
   } else if ((label | 0) == 27) {
    label = 0;
    if (($45 | 0) == ($7 | 0)) $48 = $289; else {
     __ZdlPv($7);
     $48 = $289;
    }
   }
   $49 = HEAP32[$48 + 4 >> 2] | 0;
   if (!$49) {
    $$0$i$i$i$i$i$i$i = $48;
    while (1) {
     $54 = HEAP32[$$0$i$i$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$54 >> 2] | 0) == ($$0$i$i$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$i$i$lcssa = $54;
      break;
     } else $$0$i$i$i$i$i$i$i = $54;
    }
    $$01$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i$i$i = $49;
    while (1) {
     $51 = HEAP32[$$0$i$i$i$i$i$i$i$i >> 2] | 0;
     if (!$51) {
      $$0$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i$i$i = $51;
    }
    $$01$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i$i$i | 0) == ($5 | 0)) {
    label = 37;
    break;
   } else {
    $11 = $$01$i$i$i$i$i$i$i;
    $289 = $$01$i$i$i$i$i$i$i;
   }
  }
  if ((label | 0) == 37) break;
  $229 = ___cxa_find_matching_catch() | 0;
  $230 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$4 >> 2] | 0);
  $$0$i$i = $230;
  $$01$i$i = $229;
  __ZdlPv($1);
  ___resumeException($$01$i$i | 0);
 } while (0);
 HEAP32[$1 >> 2] = 41856;
 $58 = $1 + 8 | 0;
 $59 = $1 + 12 | 0;
 HEAP32[$59 >> 2] = 0;
 $60 = $1 + 16 | 0;
 HEAP32[$60 >> 2] = 0;
 HEAP32[$58 >> 2] = $59;
 $$idx$val$i$i$i$i$i = HEAP32[$args >> 2] | 0;
 $61 = $args + 4 | 0;
 do if (($$idx$val$i$i$i$i$i | 0) == ($61 | 0)) label = 75; else {
  $290 = $$idx$val$i$i$i$i$i;
  $67 = $$idx$val$i$i$i$i$i;
  while (1) {
   __THREW__ = 0;
   $63 = invoke_ii(67, 24) | 0;
   $64 = __THREW__;
   __THREW__ = 0;
   if ($64 & 1) {
    label = 111;
    break;
   }
   $69 = $67 + 16 | 0;
   $71 = HEAP32[$69 >> 2] | 0;
   $74 = HEAP32[$69 + 4 >> 2] | 0;
   $75 = $63 + 16 | 0;
   HEAP32[$75 >> 2] = $71;
   HEAP32[$75 + 4 >> 2] = $74;
   $79 = $71;
   $$pre$i$i$i$i$i$i$i$i$i = HEAP32[$59 >> 2] | 0;
   do if ((HEAP32[$58 >> 2] | 0) == ($59 | 0)) {
    $100 = $59;
    label = 50;
   } else {
    $81 = ($$pre$i$i$i$i$i$i$i$i$i | 0) == 0;
    if ($81) {
     $$0$i$i$i$i$i$i$i$i$i3$i$i = $59;
     while (1) {
      $86 = HEAP32[$$0$i$i$i$i$i$i$i$i$i3$i$i + 8 >> 2] | 0;
      if ((HEAP32[$86 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i3$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i3$i$i = $86; else {
       $$cast$i$i$i$i$i$i$i$i$i$i$i$lcssa = $86;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
     while (1) {
      $83 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$83) {
       $$0$i$i$i$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i$i$i$i = $83;
     }
     $$01$i$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i$i$lcssa;
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $79 >>> 0) {
     $100 = $$01$i$i$i$i$i$i$i$i$i$i$i;
     label = 50;
    } else if ($81) {
     $$0$i$i$i$i119$i$i$i$i$i = $59;
     $104 = $59;
     label = 60;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i$i$i$i >>> 0 > $79 >>> 0) {
       $93 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i$i >> 2] | 0;
       if (!$93) {
        $$0$i$i$i$i119$i$i$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa29 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
        label = 59;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be = $93;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i$i$i$i >>> 0 >= $79 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
        label = 63;
        break;
       }
       $96 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i + 4 | 0;
       $97 = HEAP32[$96 >> 2] | 0;
       if (!$97) {
        $$0$i$i$i$i119$i$i$i$i$i$ph = $96;
        $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa29 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
        label = 59;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be = $97;
      }
      $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be;
     }
     if ((label | 0) == 59) {
      label = 0;
      $$0$i$i$i$i119$i$i$i$i$i = $$0$i$i$i$i119$i$i$i$i$i$ph;
      $104 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa29;
      label = 60;
      break;
     } else if ((label | 0) == 63) {
      label = 0;
      $112 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa;
      label = 64;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 50) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i$i$i$i) {
     $$0$i$i$i$i119$i$i$i$i$i = $59;
     $104 = $59;
     label = 60;
    } else {
     $99 = $100 + 4 | 0;
     $$pre$i$i$i$i$i = HEAP32[$99 >> 2] | 0;
     if (!$$pre$i$i$i$i$i) {
      $$0$i$i$i$i119$i$i$i$i$i = $99;
      $104 = $100;
      label = 60;
     } else {
      $112 = $$pre$i$i$i$i$i;
      label = 64;
     }
    }
   }
   if ((label | 0) == 60) {
    label = 0;
    HEAP32[$63 >> 2] = 0;
    HEAP32[$63 + 4 >> 2] = 0;
    HEAP32[$63 + 8 >> 2] = $104;
    HEAP32[$$0$i$i$i$i119$i$i$i$i$i >> 2] = $63;
    $106 = HEAP32[HEAP32[$58 >> 2] >> 2] | 0;
    if (!$106) $109 = $63; else {
     HEAP32[$58 >> 2] = $106;
     $109 = HEAP32[$$0$i$i$i$i119$i$i$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$59 >> 2] | 0, $109);
    HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 1;
    $115 = $67;
   } else if ((label | 0) == 64) {
    label = 0;
    if (($112 | 0) == ($63 | 0)) $115 = $290; else {
     __ZdlPv($63);
     $115 = $290;
    }
   }
   $116 = HEAP32[$115 + 4 >> 2] | 0;
   if (!$116) {
    $$0$i$i$i$i$i$i4$i$i = $115;
    while (1) {
     $121 = HEAP32[$$0$i$i$i$i$i$i4$i$i + 8 >> 2] | 0;
     if ((HEAP32[$121 >> 2] | 0) == ($$0$i$i$i$i$i$i4$i$i | 0)) {
      $$cast$i$i$i$i$i$i$i$i$lcssa = $121;
      break;
     } else $$0$i$i$i$i$i$i4$i$i = $121;
    }
    $$01$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i$i$i$i = $116;
    while (1) {
     $118 = HEAP32[$$0$i$i$i$i$i$i$i$i$i >> 2] | 0;
     if (!$118) {
      $$0$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i$i$i$i = $118;
    }
    $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i$i$i$i | 0) == ($61 | 0)) {
    label = 74;
    break;
   } else {
    $290 = $$01$i$i$i$i$i$i$i$i;
    $67 = $$01$i$i$i$i$i$i$i$i;
   }
  }
  if ((label | 0) == 74) {
   label = 75;
   break;
  } else if ((label | 0) == 111) {
   $180 = ___cxa_find_matching_catch() | 0;
   $181 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($58, HEAP32[$59 >> 2] | 0);
   $$0$i$i$i = $181;
   $$01$i$i$i = $180;
   break;
  }
 } while (0);
 L109 : do if ((label | 0) == 75) {
  $125 = $1 + 20 | 0;
  $126 = $1 + 24 | 0;
  HEAP32[$126 >> 2] = 0;
  $127 = $1 + 28 | 0;
  HEAP32[$127 >> 2] = 0;
  HEAP32[$125 >> 2] = $126;
  $$idx$val$i$i3$i$i$i = HEAP32[$0 >> 2] | 0;
  do if (($$idx$val$i$i3$i$i$i | 0) != ($4 | 0)) {
   $133 = $$idx$val$i$i3$i$i$i;
   $291 = $$idx$val$i$i3$i$i$i;
   while (1) {
    __THREW__ = 0;
    $129 = invoke_ii(67, 28) | 0;
    $130 = __THREW__;
    __THREW__ = 0;
    if ($130 & 1) {
     label = 112;
     break;
    }
    $132 = $133 + 16 | 0;
    $134 = $129 + 16 | 0;
    HEAP32[$134 + 0 >> 2] = HEAP32[$132 + 0 >> 2];
    HEAP32[$134 + 4 >> 2] = HEAP32[$132 + 4 >> 2];
    HEAP32[$134 + 8 >> 2] = HEAP32[$132 + 8 >> 2];
    $$pre$i$i$i$i$i$i8$i$i$i = HEAP32[$126 >> 2] | 0;
    do if ((HEAP32[$125 >> 2] | 0) == ($126 | 0)) {
     $155 = $126;
     label = 87;
    } else {
     $136 = ($$pre$i$i$i$i$i$i8$i$i$i | 0) == 0;
     if ($136) {
      $$0$i$i$i$i$i$i$i$i12$i$i$i = $126;
      while (1) {
       $141 = HEAP32[$$0$i$i$i$i$i$i$i$i12$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$141 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i12$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i12$i$i$i = $141; else {
        $$cast$i$i$i$i$i$i$i$i13$i$i$i$lcssa = $141;
        break;
       }
      }
      $$01$i$i$i$i$i$i$i$i15$i$i$i = $$cast$i$i$i$i$i$i$i$i13$i$i$i$lcssa;
     } else {
      $$0$i$i$i$i$i$i$i$i$i10$i$i$i = $$pre$i$i$i$i$i$i8$i$i$i;
      while (1) {
       $138 = HEAP32[$$0$i$i$i$i$i$i$i$i$i10$i$i$i + 4 >> 2] | 0;
       if (!$138) {
        $$0$i$i$i$i$i$i$i$i$i10$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i10$i$i$i;
        break;
       } else $$0$i$i$i$i$i$i$i$i$i10$i$i$i = $138;
      }
      $$01$i$i$i$i$i$i$i$i15$i$i$i = $$0$i$i$i$i$i$i$i$i$i10$i$i$i$lcssa;
     }
     $__v$idx14$val$i$i$i$i$i$i$i$i$i = HEAP32[$134 >> 2] | 0;
     if ((HEAP32[$$01$i$i$i$i$i$i$i$i15$i$i$i + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i$i$i$i >>> 0) {
      $155 = $$01$i$i$i$i$i$i$i$i15$i$i$i;
      label = 87;
     } else if ($136) {
      $$0$i$i$i$i119$i$i24$i$i$i = $126;
      $159 = $126;
      label = 97;
     } else {
      $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i = $$pre$i$i$i$i$i$i8$i$i$i;
      while (1) {
       $$idx2$val$i22$i$i$i$i$i$i21$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i19$i$i$i + 16 >> 2] | 0;
       if ($$idx2$val$i22$i$i$i$i$i$i21$i$i$i >>> 0 > $__v$idx14$val$i$i$i$i$i$i$i$i$i >>> 0) {
        $148 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i19$i$i$i >> 2] | 0;
        if (!$148) {
         $$0$i$i$i$i119$i$i24$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i;
         $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa28 = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i;
         label = 96;
         break;
        } else $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$be = $148;
       } else {
        if ($$idx2$val$i22$i$i$i$i$i$i21$i$i$i >>> 0 >= $__v$idx14$val$i$i$i$i$i$i$i$i$i >>> 0) {
         $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i;
         label = 100;
         break;
        }
        $151 = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i + 4 | 0;
        $152 = HEAP32[$151 >> 2] | 0;
        if (!$152) {
         $$0$i$i$i$i119$i$i24$i$i$i$ph = $151;
         $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa28 = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i;
         label = 96;
         break;
        } else $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$be = $152;
       }
       $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$be;
      }
      if ((label | 0) == 96) {
       label = 0;
       $$0$i$i$i$i119$i$i24$i$i$i = $$0$i$i$i$i119$i$i24$i$i$i$ph;
       $159 = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa28;
       label = 97;
       break;
      } else if ((label | 0) == 100) {
       label = 0;
       $167 = $__nd$0$i20$i$i$i$i$in$i$i19$i$i$i$lcssa;
       label = 101;
       break;
      }
     }
    } while (0);
    if ((label | 0) == 87) {
     label = 0;
     if (!$$pre$i$i$i$i$i$i8$i$i$i) {
      $$0$i$i$i$i119$i$i24$i$i$i = $126;
      $159 = $126;
      label = 97;
     } else {
      $154 = $155 + 4 | 0;
      $$pre$i$i23$i$i$i = HEAP32[$154 >> 2] | 0;
      if (!$$pre$i$i23$i$i$i) {
       $$0$i$i$i$i119$i$i24$i$i$i = $154;
       $159 = $155;
       label = 97;
      } else {
       $167 = $$pre$i$i23$i$i$i;
       label = 101;
      }
     }
    }
    if ((label | 0) == 97) {
     label = 0;
     HEAP32[$129 >> 2] = 0;
     HEAP32[$129 + 4 >> 2] = 0;
     HEAP32[$129 + 8 >> 2] = $159;
     HEAP32[$$0$i$i$i$i119$i$i24$i$i$i >> 2] = $129;
     $161 = HEAP32[HEAP32[$125 >> 2] >> 2] | 0;
     if (!$161) $164 = $129; else {
      HEAP32[$125 >> 2] = $161;
      $164 = HEAP32[$$0$i$i$i$i119$i$i24$i$i$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$126 >> 2] | 0, $164);
     HEAP32[$127 >> 2] = (HEAP32[$127 >> 2] | 0) + 1;
     $170 = $133;
    } else if ((label | 0) == 101) {
     label = 0;
     if (($167 | 0) == ($129 | 0)) $170 = $291; else {
      __ZdlPv($129);
      $170 = $291;
     }
    }
    $171 = HEAP32[$170 + 4 >> 2] | 0;
    if (!$171) {
     $$0$i$i$i$i$i29$i$i$i = $170;
     while (1) {
      $176 = HEAP32[$$0$i$i$i$i$i29$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$176 >> 2] | 0) == ($$0$i$i$i$i$i29$i$i$i | 0)) {
       $$cast$i$i$i$i$i30$i$i$i$lcssa = $176;
       break;
      } else $$0$i$i$i$i$i29$i$i$i = $176;
     }
     $$01$i$i$i$i$i32$i$i$i = $$cast$i$i$i$i$i30$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i27$i$i$i = $171;
     while (1) {
      $173 = HEAP32[$$0$i$i$i$i$i$i27$i$i$i >> 2] | 0;
      if (!$173) {
       $$0$i$i$i$i$i$i27$i$i$i$lcssa = $$0$i$i$i$i$i$i27$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i27$i$i$i = $173;
     }
     $$01$i$i$i$i$i32$i$i$i = $$0$i$i$i$i$i$i27$i$i$i$lcssa;
    }
    if (($$01$i$i$i$i$i32$i$i$i | 0) == ($4 | 0)) {
     label = 113;
     break;
    } else {
     $133 = $$01$i$i$i$i$i32$i$i$i;
     $291 = $$01$i$i$i$i$i32$i$i$i;
    }
   }
   if ((label | 0) == 112) {
    $183 = ___cxa_find_matching_catch() | 0;
    $184 = tempRet0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($125, HEAP32[$126 >> 2] | 0);
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($58, HEAP32[$59 >> 2] | 0);
    $$0$i$i$i = $184;
    $$01$i$i$i = $183;
    break L109;
   } else if ((label | 0) == 113) break;
  } while (0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$4 >> 2] | 0);
  $188 = $this + 20 | 0;
  $189 = $this + 24 | 0;
  $190 = HEAP32[$189 >> 2] | 0;
  $191 = $this + 28 | 0;
  $192 = HEAP32[$191 >> 2] | 0;
  if ($190 >>> 0 < $192 >>> 0) {
   if (!$190) $196 = 0; else {
    HEAP32[$190 >> 2] = $1;
    $196 = HEAP32[$189 >> 2] | 0;
   }
   $195 = $196 + 4 | 0;
   HEAP32[$189 >> 2] = $195;
   $$idx$pre$phi$i$iZZ2D = $188;
   $$idx2$val$i$i = $195;
  } else {
   $this$idx2$val$i$i$i$i = HEAP32[$188 >> 2] | 0;
   $201 = ($190 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
   if ($201 >>> 0 > 1073741823) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($188);
    $$idx1$val$i$i$i$i$i$i = HEAP32[$191 >> 2] | 0;
    $204 = HEAP32[$188 >> 2] | 0;
   } else {
    $$idx1$val$i$i$i$i$i$i = $192;
    $204 = $this$idx2$val$i$i$i$i;
   }
   $205 = $204;
   $206 = $$idx1$val$i$i$i$i$i$i - $205 | 0;
   if ($206 >> 2 >>> 0 < 536870911) {
    $212 = $206 >> 1;
    $214 = $212 >>> 0 < $201 >>> 0 ? $201 : $212;
    $216 = (HEAP32[$189 >> 2] | 0) - $205 | 0;
    $217 = $216 >> 2;
    if (!$214) {
     $$0$i8$i$i$i$i = 0;
     $222 = 0;
     $223 = $217;
     $227 = $216;
    } else {
     $$0$i7$i$i$i$i = $214;
     $292 = $217;
     $293 = $216;
     label = 123;
    }
   } else {
    $210 = (HEAP32[$189 >> 2] | 0) - $205 | 0;
    $$0$i7$i$i$i$i = 1073741823;
    $292 = $210 >> 2;
    $293 = $210;
    label = 123;
   }
   if ((label | 0) == 123) {
    $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
    $222 = __Znwj($$0$i7$i$i$i$i << 2) | 0;
    $223 = $292;
    $227 = $293;
   }
   $221 = $222 + ($223 << 2) | 0;
   if ($221) HEAP32[$221 >> 2] = $1;
   $226 = $222 + ($223 + 1 << 2) | 0;
   _memcpy($222 | 0, $204 | 0, $227 | 0) | 0;
   HEAP32[$188 >> 2] = $222;
   HEAP32[$189 >> 2] = $226;
   HEAP32[$191 >> 2] = $222 + ($$0$i8$i$i$i$i << 2);
   if (!$204) {
    $$idx$pre$phi$i$iZZ2D = $188;
    $$idx2$val$i$i = $226;
   } else {
    __ZdlPv($204);
    $$idx$pre$phi$i$iZZ2D = $188;
    $$idx2$val$i$i = HEAP32[$189 >> 2] | 0;
   }
  }
  $233 = $this + 16 | 0;
  HEAP8[$1 + 4 >> 0] = HEAP8[$233 >> 0] | 0;
  $239 = $$idx2$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
  $240 = $this + 36 | 0;
  HEAP32[$240 >> 2] = $239;
  if ($239 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
   $288 = $agg$result + 8 | 0;
   HEAP32[$288 >> 2] = $1;
   STACKTOP = sp;
   return;
  }
  $246 = $this + 32 | 0;
  if (!(+($239 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$246 >> 2] | 0) >>> 0))) {
   $288 = $agg$result + 8 | 0;
   HEAP32[$288 >> 2] = $1;
   STACKTOP = sp;
   return;
  }
  __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $1);
  __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this + 56 | 0, $this);
  if (HEAP32[$this + 40 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$this + 48 >> 2] | 0);
  $259 = (HEAP8[$233 >> 0] | 0) + 1 << 24 >> 24;
  HEAP8[$233 >> 0] = $259;
  $$idx6$i$i = $this + 20 | 0;
  $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
  $$idx7$val12$i$i = HEAP32[$189 >> 2] | 0;
  if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
   $$idx6$val14$i$i = $$idx6$val11$i$i;
   $$idx7$val18$i$i = $$idx7$val12$i$i;
   $266 = $259;
   $i$013$i$i = 0;
   while (1) {
    $262 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
    if ((HEAP8[$262 + 4 >> 0] | 0) == $266 << 24 >> 24) {
     $$idx6$val$i$i = $$idx6$val14$i$i;
     $$idx7$val$i$i = $$idx7$val18$i$i;
     $i$1$i$i = $i$013$i$i;
    } else {
     if (!$262) {
      $$idx4$val$i$i = $$idx6$val14$i$i;
      $$idx5$val$i$i = $$idx7$val18$i$i;
     } else {
      FUNCTION_TABLE_vi[HEAP32[(HEAP32[$262 >> 2] | 0) + 4 >> 2] & 255]($262);
      $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
      $$idx5$val$i$i = HEAP32[$189 >> 2] | 0;
     }
     $275 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
     if (($i$013$i$i | 0) == ($275 | 0)) {
      $$idx6$val$pre$i$i = $$idx4$val$i$i;
      $280 = $$idx5$val$i$i;
     } else {
      HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($275 << 2) >> 2];
      $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
      $280 = HEAP32[$189 >> 2] | 0;
     }
     $scevgep4$i$i$i$i$i = $280 + -4 | 0;
     HEAP32[$189 >> 2] = $scevgep4$i$i$i$i$i;
     $$idx6$val$i$i = $$idx6$val$pre$i$i;
     $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
     $i$1$i$i = $i$013$i$i + -1 | 0;
    }
    $282 = $i$1$i$i + 1 | 0;
    $286 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
    if ($282 >>> 0 >= $286 >>> 0) {
     $$lcssa = $286;
     break;
    }
    $$idx6$val14$i$i = $$idx6$val$i$i;
    $$idx7$val18$i$i = $$idx7$val$i$i;
    $266 = HEAP8[$233 >> 0] | 0;
    $i$013$i$i = $282;
   }
   $$lcssa$i$i = $$lcssa;
  }
  HEAP32[$240 >> 2] = $$lcssa$i$i;
  HEAP32[$246 >> 2] = $$lcssa$i$i;
  $288 = $agg$result + 8 | 0;
  HEAP32[$288 >> 2] = $1;
  STACKTOP = sp;
  return;
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$4 >> 2] | 0);
 $$0$i$i = $$0$i$i$i;
 $$01$i$i = $$01$i$i$i;
 __ZdlPv($1);
 ___resumeException($$01$i$i | 0);
}

function __ZN12_GLOBAL__N_15Stack9makeErrorERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($agg$result, $this, $loc, $msg) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 $msg = $msg | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$lcssa = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i$i = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$cast$i$i$i$i$lcssa = 0, $$idx = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i3032$i = 0, $$idx5$val = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $103 = 0, $109 = 0, $11 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $121 = 0, $122 = 0, $13 = 0, $130 = 0, $131 = 0, $139 = 0, $140 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $147 = 0, $148 = 0, $15 = 0, $154 = 0, $160 = 0, $164 = 0, $166 = 0, $168 = 0, $169 = 0, $17 = 0, $172 = 0, $173 = 0, $18 = 0, $180 = 0, $181 = 0, $187 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $194 = 0, $195 = 0, $196 = 0, $2 = 0, $20 = 0, $203 = 0, $204 = 0, $210 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $227 = 0, $23 = 0, $231 = 0, $233 = 0, $235 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $242 = 0, $244 = 0, $245 = 0, $247 = 0, $248 = 0, $249 = 0, $253 = 0, $254 = 0, $256 = 0, $257 = 0, $259 = 0, $261 = 0, $262 = 0, $263 = 0, $265 = 0, $268 = 0, $270 = 0, $271 = 0, $272 = 0, $274 = 0, $275 = 0, $277 = 0, $278 = 0, $28 = 0, $282 = 0, $283 = 0, $285 = 0, $286 = 0, $288 = 0, $289 = 0, $29 = 0, $293 = 0, $294 = 0, $296 = 0, $298 = 0, $299 = 0, $3 = 0, $303 = 0, $304 = 0, $306 = 0, $308 = 0, $309 = 0, $31 = 0, $311 = 0, $312 = 0, $316 = 0, $317 = 0, $319 = 0, $32 = 0, $321 = 0, $322 = 0, $326 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $52 = 0, $57 = 0, $59 = 0, $6 = 0, $62 = 0, $66 = 0, $68 = 0, $7 = 0, $77 = 0, $8 = 0, $80 = 0, $82 = 0, $85 = 0, $9 = 0, $92 = 0, $95 = 0, $eh$lpad$body$i$index6Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index22Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body10$index16Z2D = 0, $eh$lpad$body10$indexZ2D = 0, $eh$lpad$body15$index27Z2D = 0, $eh$lpad$body15$indexZ2D = 0, $eh$lpad$body23$index33Z2D = 0, $eh$lpad$body23$indexZ2D = 0, $i$0 = 0, $i$0$in$i = 0, $i$046 = 0, $i$047 = 0, $name$i = 0, $stack_trace = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $name$i = sp + 216 | 0;
 $0 = sp + 204 | 0;
 $1 = sp + 192 | 0;
 $2 = sp + 168 | 0;
 $3 = sp + 152 | 0;
 $4 = sp + 140 | 0;
 $stack_trace = sp + 128 | 0;
 $5 = sp + 88 | 0;
 $6 = sp + 76 | 0;
 $7 = sp + 64 | 0;
 $8 = sp + 24 | 0;
 $9 = sp + 12 | 0;
 $10 = sp;
 HEAP32[$stack_trace >> 2] = 0;
 $11 = $stack_trace + 4 | 0;
 HEAP32[$11 >> 2] = 0;
 $12 = $stack_trace + 8 | 0;
 HEAP32[$12 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(3, $6 | 0, 48920, 0);
 $13 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($13 & 1) label = 101; else {
  __THREW__ = 0;
  invoke_vii(40, $5 | 0, $loc | 0);
  $15 = __THREW__;
  __THREW__ = 0;
  do if ($15 & 1) {
   $235 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index22Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $235;
   label = 104;
  } else {
   $17 = $5 + 12 | 0;
   $18 = $loc + 12 | 0;
   HEAP32[$17 + 0 >> 2] = HEAP32[$18 + 0 >> 2];
   HEAP32[$17 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
   HEAP32[$17 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
   HEAP32[$17 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
   $19 = $5 + 28 | 0;
   __THREW__ = 0;
   invoke_vii(40, $19 | 0, $6 | 0);
   $20 = __THREW__;
   __THREW__ = 0;
   if ($20 & 1) {
    $22 = ___cxa_find_matching_catch() | 0;
    $23 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $eh$lpad$body$index22Z2D = $23;
    $eh$lpad$body$indexZ2D = $22;
    label = 104;
    break;
   }
   $24 = HEAP32[$11 >> 2] | 0;
   if ($24 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
    if (!$24) $31 = 0; else {
     HEAP32[$24 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     HEAP32[$24 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$24 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     HEAP32[$5 + 0 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     $28 = $24 + 12 | 0;
     HEAP32[$28 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
     HEAP32[$28 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
     HEAP32[$28 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
     HEAP32[$28 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
     $29 = $24 + 28 | 0;
     HEAP32[$29 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
     HEAP32[$29 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
     HEAP32[$29 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
     HEAP32[$19 + 0 >> 2] = 0;
     HEAP32[$19 + 4 >> 2] = 0;
     HEAP32[$19 + 8 >> 2] = 0;
     $31 = HEAP32[$11 >> 2] | 0;
    }
    HEAP32[$11 >> 2] = $31 + 40;
   } else {
    __THREW__ = 0;
    invoke_vii(66, $stack_trace | 0, $5 | 0);
    $32 = __THREW__;
    __THREW__ = 0;
    if ($32 & 1) {
     $237 = ___cxa_find_matching_catch() | 0;
     $238 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$0 = $237;
     $$01 = $238;
     break;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $$idx = $this + 12 | 0;
   $$idx$val = HEAP32[$$idx >> 2] | 0;
   $i$046 = (((HEAP32[$this + 16 >> 2] | 0) - $$idx$val | 0) / 144 | 0) + -1 | 0;
   L16 : do if (($i$046 | 0) > -1) {
    $39 = $8 + 12 | 0;
    $40 = $8 + 28 | 0;
    $41 = $name$i + 1 | 0;
    $42 = $2 + 12 | 0;
    $43 = $name$i + 8 | 0;
    $44 = $name$i + 4 | 0;
    $45 = $2 + 16 | 0;
    $$idx5$val = $$idx$val;
    $i$047 = $i$046;
    L18 : while (1) {
     if ((HEAP32[$$idx5$val + ($i$047 * 144 | 0) >> 2] | 0) == 6) {
      $49 = HEAP32[$$idx5$val + ($i$047 * 144 | 0) + 116 >> 2] | 0;
      if ($49) {
       $52 = HEAP32[$stack_trace >> 2] | 0;
       $57 = (((HEAP32[$11 >> 2] | 0) - $52 | 0) / 40 | 0) + -1 | 0;
       HEAP32[$name$i + 0 >> 2] = 0;
       HEAP32[$name$i + 4 >> 2] = 0;
       HEAP32[$name$i + 8 >> 2] = 0;
       $i$0$in$i = $i$047;
       do {
        $i$0$in$i = $i$0$in$i + -1 | 0;
        if (($i$0$in$i | 0) <= -1) break;
        $$idx$val$i = HEAP32[$$idx >> 2] | 0;
        $$idx$val$i$i = HEAP32[$$idx$val$i + ($i$0$in$i * 144 | 0) + 128 >> 2] | 0;
        $59 = $$idx$val$i + ($i$0$in$i * 144 | 0) + 132 | 0;
        if (($$idx$val$i$i | 0) != ($59 | 0)) {
         $$idx$val$i3032$i = $$idx$val$i$i;
         while (1) {
          $62 = HEAP32[$$idx$val$i3032$i + 20 >> 2] | 0;
          do if (HEAP8[$62 + 5 >> 0] | 0) {
           if (!(HEAP32[$62 + 8 >> 2] & 16)) break;
           if ((HEAP32[$62 + 16 >> 2] | 0) != ($49 | 0)) break;
           __THREW__ = 0;
           invoke_iii(20, $name$i | 0, HEAP32[$$idx$val$i3032$i + 16 >> 2] | 0) | 0;
           $77 = __THREW__;
           __THREW__ = 0;
           if ($77 & 1) {
            label = 21;
            break L18;
           }
          } while (0);
          $80 = HEAP32[$$idx$val$i3032$i + 4 >> 2] | 0;
          if (!$80) {
           $$0$i$i$i$i = $$idx$val$i3032$i;
           while (1) {
            $85 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
            if ((HEAP32[$85 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
             $$cast$i$i$i$i$lcssa = $85;
             break;
            } else $$0$i$i$i$i = $85;
           }
           $$01$i$i$i$i = $$cast$i$i$i$i$lcssa;
          } else {
           $$0$i$i$i$i$i = $80;
           while (1) {
            $82 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
            if (!$82) {
             $$0$i$i$i$i$i$lcssa = $$0$i$i$i$i$i;
             break;
            } else $$0$i$i$i$i$i = $82;
           }
           $$01$i$i$i$i = $$0$i$i$i$i$i$lcssa;
          }
          if (($$01$i$i$i$i | 0) == ($59 | 0)) break; else $$idx$val$i3032$i = $$01$i$i$i$i;
         }
        }
       } while ((HEAP32[$$idx$val$i + ($i$0$in$i * 144 | 0) >> 2] | 0) != 6);
       if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($name$i, 48920) | 0)) {
        __THREW__ = 0;
        invoke_iii(19, $name$i | 0, 38968) | 0;
        $92 = __THREW__;
        __THREW__ = 0;
        if ($92 & 1) {
         label = 22;
         break;
        }
       }
       do if (!(___dynamic_cast($49, 38800, 38808, 0) | 0)) {
        $118 = ___dynamic_cast($49, 38800, 39040, 0) | 0;
        if ($118) {
         $121 = HEAP32[$118 + 24 >> 2] | 0;
         HEAP32[$1 + 0 >> 2] = 0;
         HEAP32[$1 + 4 >> 2] = 0;
         HEAP32[$1 + 8 >> 2] = 0;
         $122 = HEAP8[$121 >> 0] | 0;
         if (!($122 & 1)) $130 = ($122 & 255) >>> 1; else $130 = HEAP32[$121 + 4 >> 2] | 0;
         __THREW__ = 0;
         invoke_viiii(14, $1 | 0, 39056, 7, $130 + 7 | 0);
         $131 = __THREW__;
         __THREW__ = 0;
         if ($131 & 1) {
          label = 58;
          break L18;
         }
         if (!(HEAP8[$121 >> 0] & 1)) $139 = $121 + 1 | 0; else $139 = HEAP32[$121 + 8 >> 2] | 0;
         __THREW__ = 0;
         invoke_iiii(33, $1 | 0, $139 | 0, $130 | 0) | 0;
         $140 = __THREW__;
         __THREW__ = 0;
         if ($140 & 1) {
          label = 58;
          break L18;
         }
         __THREW__ = 0;
         $144 = invoke_iii(27, $1 | 0, 39e3) | 0;
         $145 = __THREW__;
         __THREW__ = 0;
         if ($145 & 1) {
          label = 61;
          break L18;
         };
         HEAP32[$7 + 0 >> 2] = HEAP32[$144 + 0 >> 2];
         HEAP32[$7 + 4 >> 2] = HEAP32[$144 + 4 >> 2];
         HEAP32[$7 + 8 >> 2] = HEAP32[$144 + 8 >> 2];
         HEAP32[$144 + 0 >> 2] = 0;
         HEAP32[$144 + 4 >> 2] = 0;
         HEAP32[$144 + 8 >> 2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
         break;
        }
        if (HEAP32[$49 + 40 >> 2] | 0) {
         HEAP32[$4 + 0 >> 2] = 0;
         HEAP32[$4 + 4 >> 2] = 0;
         HEAP32[$4 + 8 >> 2] = 0;
         $196 = HEAP8[$name$i >> 0] | 0;
         if (!($196 & 1)) $203 = ($196 & 255) >>> 1; else $203 = HEAP32[$44 >> 2] | 0;
         __THREW__ = 0;
         invoke_viiii(14, $4 | 0, 39088, 10, $203 + 10 | 0);
         $204 = __THREW__;
         __THREW__ = 0;
         if ($204 & 1) {
          label = 89;
          break L18;
         }
         __THREW__ = 0;
         invoke_iiii(33, $4 | 0, ((HEAP8[$name$i >> 0] & 1) == 0 ? $41 : HEAP32[$43 >> 2] | 0) | 0, $203 | 0) | 0;
         $210 = __THREW__;
         __THREW__ = 0;
         if ($210 & 1) {
          label = 89;
          break L18;
         }
         __THREW__ = 0;
         $214 = invoke_iii(27, $4 | 0, 39e3) | 0;
         $215 = __THREW__;
         __THREW__ = 0;
         if ($215 & 1) {
          label = 92;
          break L18;
         };
         HEAP32[$7 + 0 >> 2] = HEAP32[$214 + 0 >> 2];
         HEAP32[$7 + 4 >> 2] = HEAP32[$214 + 4 >> 2];
         HEAP32[$7 + 8 >> 2] = HEAP32[$214 + 8 >> 2];
         HEAP32[$214 + 0 >> 2] = 0;
         HEAP32[$214 + 4 >> 2] = 0;
         HEAP32[$214 + 8 >> 2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
         break;
        }
        __THREW__ = 0;
        invoke_vii(49, $2 | 0, HEAP32[$49 + 44 >> 2] | 0);
        $154 = __THREW__;
        __THREW__ = 0;
        if ($154 & 1) {
         label = 22;
         break L18;
        }
        if (!(HEAP8[$name$i >> 0] & 1)) {
         HEAP8[$41 >> 0] = 0;
         HEAP8[$name$i >> 0] = 0;
        } else {
         HEAP8[HEAP32[$43 >> 2] >> 0] = 0;
         HEAP32[$44 >> 2] = 0;
        }
        __THREW__ = 0;
        invoke_vii(45, $name$i | 0, 0);
        $160 = __THREW__;
        __THREW__ = 0;
        if ($160 & 1) {
         label = 68;
         break L18;
        };
        HEAP32[$name$i + 0 >> 2] = HEAP32[$2 + 0 >> 2];
        HEAP32[$name$i + 4 >> 2] = HEAP32[$2 + 4 >> 2];
        HEAP32[$name$i + 8 >> 2] = HEAP32[$2 + 8 >> 2];
        HEAP32[$2 + 0 >> 2] = 0;
        HEAP32[$2 + 4 >> 2] = 0;
        HEAP32[$2 + 8 >> 2] = 0;
        $164 = HEAP32[$42 >> 2] | 0;
        if ($164) {
         $166 = HEAP32[$45 >> 2] | 0;
         if (($166 | 0) == ($164 | 0)) $172 = $164; else {
          $169 = $166;
          do {
           $168 = $169 + -12 | 0;
           HEAP32[$45 >> 2] = $168;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($168);
           $169 = HEAP32[$45 >> 2] | 0;
          } while (($169 | 0) != ($164 | 0));
          $172 = HEAP32[$42 >> 2] | 0;
         }
         __ZdlPv($172);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        HEAP32[$3 + 0 >> 2] = 0;
        HEAP32[$3 + 4 >> 2] = 0;
        HEAP32[$3 + 8 >> 2] = 0;
        $173 = HEAP8[$name$i >> 0] | 0;
        if (!($173 & 1)) $180 = ($173 & 255) >>> 1; else $180 = HEAP32[$44 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(14, $3 | 0, 39064, 18, $180 + 18 | 0);
        $181 = __THREW__;
        __THREW__ = 0;
        if ($181 & 1) {
         label = 80;
         break L18;
        }
        __THREW__ = 0;
        invoke_iiii(33, $3 | 0, ((HEAP8[$name$i >> 0] & 1) == 0 ? $41 : HEAP32[$43 >> 2] | 0) | 0, $180 | 0) | 0;
        $187 = __THREW__;
        __THREW__ = 0;
        if ($187 & 1) {
         label = 80;
         break L18;
        }
        __THREW__ = 0;
        $191 = invoke_iii(27, $3 | 0, 39e3) | 0;
        $192 = __THREW__;
        __THREW__ = 0;
        if ($192 & 1) {
         label = 83;
         break L18;
        };
        HEAP32[$7 + 0 >> 2] = HEAP32[$191 + 0 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$191 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$191 + 8 >> 2];
        HEAP32[$191 + 0 >> 2] = 0;
        HEAP32[$191 + 4 >> 2] = 0;
        HEAP32[$191 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
       } else {
        HEAP32[$0 + 0 >> 2] = 0;
        HEAP32[$0 + 4 >> 2] = 0;
        HEAP32[$0 + 8 >> 2] = 0;
        $95 = HEAP8[$name$i >> 0] | 0;
        if (!($95 & 1)) $102 = ($95 & 255) >>> 1; else $102 = HEAP32[$44 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(14, $0 | 0, 38984, 8, $102 + 8 | 0);
        $103 = __THREW__;
        __THREW__ = 0;
        if ($103 & 1) {
         label = 45;
         break L18;
        }
        __THREW__ = 0;
        invoke_iiii(33, $0 | 0, ((HEAP8[$name$i >> 0] & 1) == 0 ? $41 : HEAP32[$43 >> 2] | 0) | 0, $102 | 0) | 0;
        $109 = __THREW__;
        __THREW__ = 0;
        if ($109 & 1) {
         label = 45;
         break L18;
        }
        __THREW__ = 0;
        $113 = invoke_iii(27, $0 | 0, 39e3) | 0;
        $114 = __THREW__;
        __THREW__ = 0;
        if ($114 & 1) {
         label = 48;
         break L18;
        };
        HEAP32[$7 + 0 >> 2] = HEAP32[$113 + 0 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$113 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$113 + 8 >> 2];
        HEAP32[$113 + 0 >> 2] = 0;
        HEAP32[$113 + 4 >> 2] = 0;
        HEAP32[$113 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
       } while (0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name$i);
       $219 = $52 + ($57 * 40 | 0) + 28 | 0;
       if (!(HEAP8[$219 >> 0] & 1)) {
        HEAP8[$219 + 1 >> 0] = 0;
        HEAP8[$219 >> 0] = 0;
       } else {
        HEAP8[HEAP32[$52 + ($57 * 40 | 0) + 36 >> 2] >> 0] = 0;
        HEAP32[$52 + ($57 * 40 | 0) + 32 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $219 | 0, 0);
       $227 = __THREW__;
       __THREW__ = 0;
       if ($227 & 1) {
        label = 98;
        break;
       };
       HEAP32[$219 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
       HEAP32[$219 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
       HEAP32[$219 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
       HEAP32[$7 + 0 >> 2] = 0;
       HEAP32[$7 + 4 >> 2] = 0;
       HEAP32[$7 + 8 >> 2] = 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      }
      __THREW__ = 0;
      invoke_viii(3, $9 | 0, 48920, 0);
      $239 = __THREW__;
      __THREW__ = 0;
      if ($239 & 1) {
       label = 100;
       break;
      }
      __THREW__ = 0;
      invoke_vii(40, $8 | 0, $$idx5$val + ($i$047 * 144 | 0) + 8 | 0);
      $242 = __THREW__;
      __THREW__ = 0;
      if ($242 & 1) {
       label = 117;
       break;
      }
      $244 = $$idx5$val + ($i$047 * 144 | 0) + 20 | 0;
      HEAP32[$39 + 0 >> 2] = HEAP32[$244 + 0 >> 2];
      HEAP32[$39 + 4 >> 2] = HEAP32[$244 + 4 >> 2];
      HEAP32[$39 + 8 >> 2] = HEAP32[$244 + 8 >> 2];
      HEAP32[$39 + 12 >> 2] = HEAP32[$244 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $40 | 0, $9 | 0);
      $245 = __THREW__;
      __THREW__ = 0;
      if ($245 & 1) {
       label = 110;
       break;
      }
      $249 = HEAP32[$11 >> 2] | 0;
      if ($249 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
       if (!$249) $256 = 0; else {
        HEAP32[$249 + 0 >> 2] = HEAP32[$8 + 0 >> 2];
        HEAP32[$249 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
        HEAP32[$249 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
        HEAP32[$8 + 0 >> 2] = 0;
        HEAP32[$8 + 4 >> 2] = 0;
        HEAP32[$8 + 8 >> 2] = 0;
        $253 = $249 + 12 | 0;
        HEAP32[$253 + 0 >> 2] = HEAP32[$39 + 0 >> 2];
        HEAP32[$253 + 4 >> 2] = HEAP32[$39 + 4 >> 2];
        HEAP32[$253 + 8 >> 2] = HEAP32[$39 + 8 >> 2];
        HEAP32[$253 + 12 >> 2] = HEAP32[$39 + 12 >> 2];
        $254 = $249 + 28 | 0;
        HEAP32[$254 + 0 >> 2] = HEAP32[$40 + 0 >> 2];
        HEAP32[$254 + 4 >> 2] = HEAP32[$40 + 4 >> 2];
        HEAP32[$254 + 8 >> 2] = HEAP32[$40 + 8 >> 2];
        HEAP32[$40 + 0 >> 2] = 0;
        HEAP32[$40 + 4 >> 2] = 0;
        HEAP32[$40 + 8 >> 2] = 0;
        $256 = HEAP32[$11 >> 2] | 0;
       }
       HEAP32[$11 >> 2] = $256 + 40;
      } else {
       __THREW__ = 0;
       invoke_vii(66, $stack_trace | 0, $8 | 0);
       $257 = __THREW__;
       __THREW__ = 0;
       if ($257 & 1) {
        label = 119;
        break;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     }
     $i$0 = $i$047 + -1 | 0;
     if (($i$0 | 0) <= -1) {
      label = 121;
      break;
     }
     $$idx5$val = HEAP32[$$idx >> 2] | 0;
     $i$047 = $i$0;
    }
    switch (label | 0) {
    case 21:
     {
      $66 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index6Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $66;
      label = 23;
      break;
     }
    case 22:
     {
      $68 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index6Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $68;
      label = 23;
      break;
     }
    case 45:
     {
      $111 = ___cxa_find_matching_catch() | 0;
      $112 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $eh$lpad$body$i$index6Z2D = $112;
      $eh$lpad$body$i$indexZ2D = $111;
      label = 23;
      break;
     }
    case 48:
     {
      $116 = ___cxa_find_matching_catch() | 0;
      $117 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $$0$i = $116;
      $$01$i = $117;
      label = 93;
      break;
     }
    case 58:
     {
      $142 = ___cxa_find_matching_catch() | 0;
      $143 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $eh$lpad$body$i$index6Z2D = $143;
      $eh$lpad$body$i$indexZ2D = $142;
      label = 23;
      break;
     }
    case 61:
     {
      $147 = ___cxa_find_matching_catch() | 0;
      $148 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $$0$i = $147;
      $$01$i = $148;
      label = 93;
      break;
     }
    case 68:
     {
      ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
      break;
     }
    case 80:
     {
      $189 = ___cxa_find_matching_catch() | 0;
      $190 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $eh$lpad$body$i$index6Z2D = $190;
      $eh$lpad$body$i$indexZ2D = $189;
      label = 23;
      break;
     }
    case 83:
     {
      $194 = ___cxa_find_matching_catch() | 0;
      $195 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $$0$i = $194;
      $$01$i = $195;
      label = 93;
      break;
     }
    case 89:
     {
      $212 = ___cxa_find_matching_catch() | 0;
      $213 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $eh$lpad$body$i$index6Z2D = $213;
      $eh$lpad$body$i$indexZ2D = $212;
      label = 23;
      break;
     }
    case 92:
     {
      $217 = ___cxa_find_matching_catch() | 0;
      $218 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $$0$i = $217;
      $$01$i = $218;
      label = 93;
      break;
     }
    case 98:
     {
      ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
      break;
     }
    case 100:
     {
      $231 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body10$index16Z2D = tempRet0;
      $eh$lpad$body10$indexZ2D = $231;
      label = 102;
      break L1;
      break;
     }
    case 110:
     {
      $247 = ___cxa_find_matching_catch() | 0;
      $248 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      $eh$lpad$body15$index27Z2D = $248;
      $eh$lpad$body15$indexZ2D = $247;
      label = 118;
      break;
     }
    case 117:
     {
      $259 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body15$index27Z2D = tempRet0;
      $eh$lpad$body15$indexZ2D = $259;
      label = 118;
      break;
     }
    case 119:
     {
      $261 = ___cxa_find_matching_catch() | 0;
      $262 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      $$1 = $261;
      $$12 = $262;
      label = 120;
      break;
     }
    case 121:
     {
      break L16;
      break;
     }
    }
    if ((label | 0) == 23) {
     $$0$i = $eh$lpad$body$i$indexZ2D;
     $$01$i = $eh$lpad$body$i$index6Z2D;
     label = 93;
    } else if ((label | 0) == 118) {
     $$1 = $eh$lpad$body15$indexZ2D;
     $$12 = $eh$lpad$body15$index27Z2D;
     label = 120;
    }
    if ((label | 0) == 93) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name$i);
     $eh$lpad$body10$index16Z2D = $$01$i;
     $eh$lpad$body10$indexZ2D = $$0$i;
     label = 102;
     break L1;
    } else if ((label | 0) == 120) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     $$2 = $$1;
     $$23 = $$12;
     break L1;
    }
   } while (0);
   __THREW__ = 0;
   invoke_vii(67, $10 | 0, $stack_trace | 0);
   $263 = __THREW__;
   __THREW__ = 0;
   if ($263 & 1) {
    label = 101;
    break L1;
   }
   __THREW__ = 0;
   invoke_vii(67, $agg$result | 0, $10 | 0);
   $265 = __THREW__;
   __THREW__ = 0;
   do if ($265 & 1) {
    $304 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body23$index33Z2D = tempRet0;
    $eh$lpad$body23$indexZ2D = $304;
   } else {
    __THREW__ = 0;
    invoke_vii(40, $agg$result + 12 | 0, $msg | 0);
    $268 = __THREW__;
    __THREW__ = 0;
    if ($268 & 1) {
     $270 = ___cxa_find_matching_catch() | 0;
     $271 = tempRet0;
     $272 = HEAP32[$agg$result >> 2] | 0;
     if (!$272) {
      $eh$lpad$body23$index33Z2D = $271;
      $eh$lpad$body23$indexZ2D = $270;
      break;
     }
     $274 = $agg$result + 4 | 0;
     $275 = HEAP32[$274 >> 2] | 0;
     if (($275 | 0) == ($272 | 0)) $282 = $272; else {
      $278 = $275;
      do {
       $277 = $278 + -40 | 0;
       HEAP32[$274 >> 2] = $277;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($278 + -12 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($277);
       $278 = HEAP32[$274 >> 2] | 0;
      } while (($278 | 0) != ($272 | 0));
      $282 = HEAP32[$agg$result >> 2] | 0;
     }
     __ZdlPv($282);
     $eh$lpad$body23$index33Z2D = $271;
     $eh$lpad$body23$indexZ2D = $270;
     break;
    }
    $283 = HEAP32[$10 >> 2] | 0;
    if ($283) {
     $285 = $10 + 4 | 0;
     $286 = HEAP32[$285 >> 2] | 0;
     if (($286 | 0) == ($283 | 0)) $293 = $283; else {
      $289 = $286;
      do {
       $288 = $289 + -40 | 0;
       HEAP32[$285 >> 2] = $288;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($289 + -12 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($288);
       $289 = HEAP32[$285 >> 2] | 0;
      } while (($289 | 0) != ($283 | 0));
      $293 = HEAP32[$10 >> 2] | 0;
     }
     __ZdlPv($293);
    }
    $294 = HEAP32[$stack_trace >> 2] | 0;
    if (!$294) {
     STACKTOP = sp;
     return;
    }
    $296 = HEAP32[$11 >> 2] | 0;
    if (($296 | 0) == ($294 | 0)) $303 = $294; else {
     $299 = $296;
     do {
      $298 = $299 + -40 | 0;
      HEAP32[$11 >> 2] = $298;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($299 + -12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($298);
      $299 = HEAP32[$11 >> 2] | 0;
     } while (($299 | 0) != ($294 | 0));
     $303 = HEAP32[$stack_trace >> 2] | 0;
    }
    __ZdlPv($303);
    STACKTOP = sp;
    return;
   } while (0);
   $306 = HEAP32[$10 >> 2] | 0;
   if (!$306) {
    $$2 = $eh$lpad$body23$indexZ2D;
    $$23 = $eh$lpad$body23$index33Z2D;
    break L1;
   }
   $308 = $10 + 4 | 0;
   $309 = HEAP32[$308 >> 2] | 0;
   if (($309 | 0) == ($306 | 0)) $316 = $306; else {
    $312 = $309;
    do {
     $311 = $312 + -40 | 0;
     HEAP32[$308 >> 2] = $311;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($312 + -12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($311);
     $312 = HEAP32[$308 >> 2] | 0;
    } while (($312 | 0) != ($306 | 0));
    $316 = HEAP32[$10 >> 2] | 0;
   }
   __ZdlPv($316);
   $$2 = $eh$lpad$body23$indexZ2D;
   $$23 = $eh$lpad$body23$index33Z2D;
   break L1;
  } while (0);
  if ((label | 0) == 104) {
   $$0 = $eh$lpad$body$indexZ2D;
   $$01 = $eh$lpad$body$index22Z2D;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $$2 = $$0;
  $$23 = $$01;
 } while (0);
 if ((label | 0) == 101) {
  $233 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body10$index16Z2D = tempRet0;
  $eh$lpad$body10$indexZ2D = $233;
  label = 102;
 }
 if ((label | 0) == 102) {
  $$2 = $eh$lpad$body10$indexZ2D;
  $$23 = $eh$lpad$body10$index16Z2D;
 }
 $317 = HEAP32[$stack_trace >> 2] | 0;
 if (!$317) ___resumeException($$2 | 0);
 $319 = HEAP32[$11 >> 2] | 0;
 if (($319 | 0) == ($317 | 0)) $326 = $317; else {
  $322 = $319;
  do {
   $321 = $322 + -40 | 0;
   HEAP32[$11 >> 2] = $321;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($322 + -12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($321);
   $322 = HEAP32[$11 >> 2] | 0;
  } while (($322 | 0) != ($317 | 0));
  $326 = HEAP32[$stack_trace >> 2] | 0;
 }
 __ZdlPv($326);
 ___resumeException($$2 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectERjjb($agg$result, $obj_, $counter, $skip, $manifesting) {
 $agg$result = $agg$result | 0;
 $obj_ = $obj_ | 0;
 $counter = $counter | 0;
 $skip = $skip | 0;
 $manifesting = $manifesting | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i$i15 = 0, $$0$i$i$i$i15$lcssa = 0, $$0$i$i$i$i51 = 0, $$0$i$i$i$i51$lcssa = 0, $$0$i$i$i17 = 0, $$0$i$i$i53 = 0, $$0$i7$i = 0, $$0$i7$i29 = 0, $$0$i7$i44 = 0, $$0$i7$i65 = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$lcssa162 = 0, $$01 = 0, $$01$i$i$i = 0, $$01$i$i$i20 = 0, $$01$i$i$i56 = 0, $$01$ph5$i$i$i = 0, $$013$i$i$i = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i$lcssa$lcssa = 0, $$cast$i$i$i$lcssa = 0, $$cast$i$i$i18$lcssa = 0, $$cast$i$i$i54$lcssa = 0, $$idx$val$i = 0, $$idx$val$i12 = 0, $$idx$val$i72105 = 0, $$lcssa = 0, $$lcssa160 = 0, $$lcssa165 = 0, $$lcssa166 = 0, $$lcssa169 = 0, $$lcssa170 = 0, $$lcssa173 = 0, $$lcssa174 = 0, $$pre$phi128Z2D = 0, $$pre$phiZ2D = 0, $$pre127$pre$phiZZ2D = 0, $0 = 0, $1 = 0, $100 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $122 = 0, $123 = 0, $126 = 0, $127 = 0, $134 = 0, $136 = 0, $139 = 0, $143 = 0, $148 = 0, $15 = 0, $150 = 0, $152 = 0, $155 = 0, $156 = 0, $159 = 0, $160 = 0, $167 = 0, $169 = 0, $172 = 0, $177 = 0, $179 = 0, $182 = 0, $186 = 0, $19 = 0, $192 = 0, $194 = 0, $197 = 0, $2 = 0, $20 = 0, $203 = 0, $205 = 0, $206 = 0, $207 = 0, $209 = 0, $211 = 0, $213 = 0, $216 = 0, $217 = 0, $22 = 0, $220 = 0, $221 = 0, $228 = 0, $230 = 0, $233 = 0, $238 = 0, $24 = 0, $240 = 0, $243 = 0, $249 = 0, $251 = 0, $253 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $4 = 0, $41 = 0, $43 = 0, $46 = 0, $50 = 0, $52 = 0, $54 = 0, $57 = 0, $6 = 0, $61 = 0, $63 = 0, $65 = 0, $67 = 0, $71 = 0, $76 = 0, $77 = 0, $78 = 0, $81 = 0, $82 = 0, $85 = 0, $87 = 0, $88 = 0, $9 = 0, $91 = 0, $92 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$be$in$i$i24 = 0, $__nd$0$be$in$i$i39 = 0, $__nd$0$be$in$i$i60 = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa158 = 0, $__nd$0$i$i$lcssa159 = 0, $__nd$0$i$i23 = 0, $__nd$0$i$i23$lcssa = 0, $__nd$0$i$i23$lcssa163 = 0, $__nd$0$i$i23$lcssa164 = 0, $__nd$0$i$i38 = 0, $__nd$0$i$i38$lcssa = 0, $__nd$0$i$i38$lcssa171 = 0, $__nd$0$i$i38$lcssa172 = 0, $__nd$0$i$i59 = 0, $__nd$0$i$i59$lcssa = 0, $__nd$0$i$i59$lcssa167 = 0, $__nd$0$i$i59$lcssa168 = 0, $__parent$i = 0, $__parent$i21 = 0, $__parent$i36 = 0, $__parent$i57 = 0, $__r$0$i = 0, $__r$0$i33 = 0, $__r$0$i48 = 0, $__r$0$i69 = 0, $counter2 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $__parent$i57 = sp + 52 | 0;
 $__parent$i36 = sp + 48 | 0;
 $__parent$i21 = sp + 44 | 0;
 $__parent$i = sp + 40 | 0;
 $r = sp + 28 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 4 | 0;
 $counter2 = sp;
 $2 = $r + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $r + 8 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $r + 4 | 0;
 HEAP32[$r >> 2] = $4;
 L1 : do if ($obj_) {
  $6 = ___dynamic_cast($obj_, 38808, 38880, 0) | 0;
  L3 : do if (!$6) {
   $67 = ___dynamic_cast($obj_, 38808, 39144, 0) | 0;
   do if (!$67) {
    $186 = ___dynamic_cast($obj_, 38808, 39200, 0) | 0;
    if ($186) {
     HEAP32[$counter2 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiiii(8, $agg$result | 0, HEAP32[$186 + 8 >> 2] | 0, $counter2 | 0, HEAP32[$186 + 12 >> 2] | 0, $manifesting | 0);
     $192 = __THREW__;
     __THREW__ = 0;
     if ($192 & 1) break;
     $255 = HEAP32[$4 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $255);
     STACKTOP = sp;
     return;
    }
    $194 = ___dynamic_cast($obj_, 38808, 39264, 0) | 0;
    if (!$194) break L1;
    $197 = (HEAP32[$counter >> 2] | 0) + 1 | 0;
    HEAP32[$counter >> 2] = $197;
    if ($197 >>> 0 <= $skip >>> 0) {
     HEAP32[$agg$result + 4 >> 2] = 0;
     HEAP32[$agg$result + 8 >> 2] = 0;
     HEAP32[$agg$result >> 2] = $agg$result + 4;
     $255 = 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $255);
     STACKTOP = sp;
     return;
    }
    $$idx$val$i12 = HEAP32[$194 + 28 >> 2] | 0;
    $203 = $194 + 32 | 0;
    if (($$idx$val$i12 | 0) == ($203 | 0)) break L1;
    $206 = $$idx$val$i12;
    $207 = 0;
    while (1) {
     $205 = $206 + 16 | 0;
     do if (!$207) {
      HEAP32[$__parent$i >> 2] = $4;
      $$0$i7$i = $4;
      $228 = $4;
      label = 116;
     } else {
      $209 = HEAP32[$205 >> 2] | 0;
      $__nd$0$i$i = $207;
      while (1) {
       $211 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
       if ($209 >>> 0 < $211 >>> 0) {
        $213 = HEAP32[$__nd$0$i$i >> 2] | 0;
        if (!$213) {
         $$lcssa160 = $__nd$0$i$i;
         $__nd$0$i$i$lcssa159 = $__nd$0$i$i;
         label = 109;
         break;
        } else $__nd$0$be$in$i$i = $213;
       } else {
        if ($211 >>> 0 >= $209 >>> 0) {
         $__nd$0$i$i$lcssa = $__nd$0$i$i;
         label = 115;
         break;
        }
        $216 = $__nd$0$i$i + 4 | 0;
        $217 = HEAP32[$216 >> 2] | 0;
        if (!$217) {
         $$lcssa = $216;
         $__nd$0$i$i$lcssa158 = $__nd$0$i$i;
         label = 113;
         break;
        } else $__nd$0$be$in$i$i = $217;
       }
       $__nd$0$i$i = $__nd$0$be$in$i$i;
      }
      if ((label | 0) == 109) {
       label = 0;
       HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa159;
       $$0$i7$i = $$lcssa160;
       $228 = $__nd$0$i$i$lcssa159;
       label = 116;
       break;
      } else if ((label | 0) == 113) {
       label = 0;
       HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa158;
       $$0$i7$i = $$lcssa;
       $228 = $__nd$0$i$i$lcssa158;
       label = 116;
       break;
      } else if ((label | 0) == 115) {
       label = 0;
       HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
       if (!$__nd$0$i$i$lcssa) {
        $$0$i7$i = $__parent$i;
        $228 = 0;
        label = 116;
        break;
       } else {
        $__r$0$i = $__nd$0$i$i$lcssa;
        break;
       }
      }
     } while (0);
     if ((label | 0) == 116) {
      label = 0;
      __THREW__ = 0;
      $220 = invoke_ii(67, 24) | 0;
      $221 = __THREW__;
      __THREW__ = 0;
      if ($221 & 1) {
       label = 32;
       break;
      }
      HEAP32[$220 + 16 >> 2] = HEAP32[$205 >> 2];
      HEAP32[$220 + 20 >> 2] = 0;
      HEAP32[$220 >> 2] = 0;
      HEAP32[$220 + 4 >> 2] = 0;
      HEAP32[$220 + 8 >> 2] = $228;
      HEAP32[$$0$i7$i >> 2] = $220;
      $230 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
      if (!$230) $233 = $220; else {
       HEAP32[$r >> 2] = $230;
       $233 = HEAP32[$$0$i7$i >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $233);
      HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
      $__r$0$i = $220;
     }
     HEAP32[$__r$0$i + 20 >> 2] = 2;
     $238 = HEAP32[$206 + 4 >> 2] | 0;
     if (!$238) {
      $$0$i$i$i = $206;
      while (1) {
       $243 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$243 >> 2] | 0) == ($$0$i$i$i | 0)) {
        $$cast$i$i$i$lcssa = $243;
        break;
       } else $$0$i$i$i = $243;
      }
      $$01$i$i$i = $$cast$i$i$i$lcssa;
     } else {
      $$0$i$i$i$i = $238;
      while (1) {
       $240 = HEAP32[$$0$i$i$i$i >> 2] | 0;
       if (!$240) {
        $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
        break;
       } else $$0$i$i$i$i = $240;
      }
      $$01$i$i$i = $$0$i$i$i$i$lcssa;
     }
     if (($$01$i$i$i | 0) == ($203 | 0)) {
      label = 129;
      break;
     }
     $206 = $$01$i$i$i;
     $207 = HEAP32[$4 >> 2] | 0;
    }
    if ((label | 0) == 32) {
     $61 = ___cxa_find_matching_catch() | 0;
     $$pre127$pre$phiZZ2D = $4;
     $lpad$phi$index = $61;
     $lpad$phi$index3 = tempRet0;
     break L3;
    } else if ((label | 0) == 129) break L1;
   } else {
    __THREW__ = 0;
    invoke_viiiii(8, $0 | 0, HEAP32[$67 + 12 >> 2] | 0, $counter | 0, $skip | 0, $manifesting | 0);
    $71 = __THREW__;
    __THREW__ = 0;
    if (!($71 & 1)) {
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, HEAP32[$4 >> 2] | 0);
     HEAP32[$r >> 2] = HEAP32[$0 >> 2];
     $76 = HEAP32[$0 + 4 >> 2] | 0;
     HEAP32[$2 >> 2] = $76;
     $77 = $0 + 8 | 0;
     $78 = HEAP32[$77 >> 2] | 0;
     HEAP32[$3 >> 2] = $78;
     if (!$78) {
      HEAP32[$r >> 2] = $4;
      $82 = $76;
     } else {
      HEAP32[$76 + 8 >> 2] = $4;
      $81 = $0 + 4 | 0;
      HEAP32[$0 >> 2] = $81;
      HEAP32[$81 >> 2] = 0;
      HEAP32[$77 >> 2] = 0;
      $82 = 0;
     }
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $82);
     __THREW__ = 0;
     invoke_viiiii(8, $1 | 0, HEAP32[$67 + 8 >> 2] | 0, $counter | 0, $skip | 0, $manifesting | 0);
     $85 = __THREW__;
     __THREW__ = 0;
     if (!($85 & 1)) {
      $87 = HEAP32[$1 >> 2] | 0;
      $88 = $1 + 4 | 0;
      do if (($87 | 0) != ($88 | 0)) {
       $95 = $87;
       L60 : while (1) {
        $94 = $95 + 16 | 0;
        $96 = HEAP32[$4 >> 2] | 0;
        $97 = ($96 | 0) == 0;
        do if ($97) {
         $257 = HEAP32[$95 + 20 >> 2] | 0;
         label = 67;
        } else {
         $100 = HEAP32[$94 >> 2] | 0;
         $$0$ph6$i$i$i = $4;
         $$01$ph5$i$i$i = $96;
         L65 : while (1) {
          $$013$i$i$i = $$01$ph5$i$i$i;
          while (1) {
           if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $100 >>> 0) {
            $$013$i$i$i$lcssa = $$013$i$i$i;
            break;
           }
           $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
           if (!$$013$i$i$i) {
            $$0$ph6$i$i$i$lcssa162 = $$0$ph6$i$i$i;
            label = 54;
            break L65;
           }
          }
          $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
          if (!$$01$ph5$i$i$i) {
           $$013$i$i$i$lcssa$lcssa = $$013$i$i$i$lcssa;
           label = 55;
           break;
          } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
         }
         if ((label | 0) == 54) {
          label = 0;
          $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i$lcssa162;
         } else if ((label | 0) == 55) {
          label = 0;
          $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa$lcssa;
         }
         if (($$0$ph$lcssa$i$i$i | 0) != ($4 | 0)) if ($100 >>> 0 >= (HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0) {
          if (HEAP32[$$0$ph$lcssa$i$i$i + 20 >> 2] | 0) break;
          $148 = HEAP32[$95 + 20 >> 2] | 0;
          $__nd$0$i$i23 = $96;
          while (1) {
           $150 = HEAP32[$__nd$0$i$i23 + 16 >> 2] | 0;
           if ($100 >>> 0 < $150 >>> 0) {
            $152 = HEAP32[$__nd$0$i$i23 >> 2] | 0;
            if (!$152) {
             $$lcssa166 = $__nd$0$i$i23;
             $__nd$0$i$i23$lcssa164 = $__nd$0$i$i23;
             label = 78;
             break;
            } else $__nd$0$be$in$i$i24 = $152;
           } else {
            if ($150 >>> 0 >= $100 >>> 0) {
             $__nd$0$i$i23$lcssa = $__nd$0$i$i23;
             label = 83;
             break;
            }
            $155 = $__nd$0$i$i23 + 4 | 0;
            $156 = HEAP32[$155 >> 2] | 0;
            if (!$156) {
             $$lcssa165 = $155;
             $__nd$0$i$i23$lcssa163 = $__nd$0$i$i23;
             label = 82;
             break;
            } else $__nd$0$be$in$i$i24 = $156;
           }
           $__nd$0$i$i23 = $__nd$0$be$in$i$i24;
          }
          if ((label | 0) == 78) {
           label = 0;
           HEAP32[$__parent$i21 >> 2] = $__nd$0$i$i23$lcssa164;
           $$0$i7$i29 = $$lcssa166;
           $167 = $__nd$0$i$i23$lcssa164;
           label = 84;
          } else if ((label | 0) == 82) {
           label = 0;
           HEAP32[$__parent$i21 >> 2] = $__nd$0$i$i23$lcssa163;
           $$0$i7$i29 = $$lcssa165;
           $167 = $__nd$0$i$i23$lcssa163;
           label = 84;
          } else if ((label | 0) == 83) {
           label = 0;
           HEAP32[$__parent$i21 >> 2] = $__nd$0$i$i23$lcssa;
           if (!$__nd$0$i$i23$lcssa) {
            $$0$i7$i29 = $__parent$i21;
            $167 = 0;
            label = 84;
           } else $__r$0$i33 = $__nd$0$i$i23$lcssa;
          }
          if ((label | 0) == 84) {
           label = 0;
           __THREW__ = 0;
           $159 = invoke_ii(67, 24) | 0;
           $160 = __THREW__;
           __THREW__ = 0;
           if ($160 & 1) break L60;
           HEAP32[$159 + 16 >> 2] = HEAP32[$94 >> 2];
           HEAP32[$159 + 20 >> 2] = 0;
           HEAP32[$159 >> 2] = 0;
           HEAP32[$159 + 4 >> 2] = 0;
           HEAP32[$159 + 8 >> 2] = $167;
           HEAP32[$$0$i7$i29 >> 2] = $159;
           $169 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
           if (!$169) $172 = $159; else {
            HEAP32[$r >> 2] = $169;
            $172 = HEAP32[$$0$i7$i29 >> 2] | 0;
           }
           __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $172);
           HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
           $__r$0$i33 = $159;
          }
          HEAP32[$__r$0$i33 + 20 >> 2] = $148;
          break;
         }
         $114 = HEAP32[$95 + 20 >> 2] | 0;
         if ($97) {
          $257 = $114;
          label = 67;
         } else {
          $115 = HEAP32[$94 >> 2] | 0;
          $__nd$0$i$i59 = $96;
          while (1) {
           $117 = HEAP32[$__nd$0$i$i59 + 16 >> 2] | 0;
           if ($115 >>> 0 < $117 >>> 0) {
            $119 = HEAP32[$__nd$0$i$i59 >> 2] | 0;
            if (!$119) {
             $$lcssa170 = $__nd$0$i$i59;
             $__nd$0$i$i59$lcssa168 = $__nd$0$i$i59;
             label = 62;
             break;
            } else $__nd$0$be$in$i$i60 = $119;
           } else {
            if ($117 >>> 0 >= $115 >>> 0) {
             $__nd$0$i$i59$lcssa = $__nd$0$i$i59;
             label = 68;
             break;
            }
            $122 = $__nd$0$i$i59 + 4 | 0;
            $123 = HEAP32[$122 >> 2] | 0;
            if (!$123) {
             $$lcssa169 = $122;
             $__nd$0$i$i59$lcssa167 = $__nd$0$i$i59;
             label = 66;
             break;
            } else $__nd$0$be$in$i$i60 = $123;
           }
           $__nd$0$i$i59 = $__nd$0$be$in$i$i60;
          }
          if ((label | 0) == 62) {
           label = 0;
           HEAP32[$__parent$i57 >> 2] = $__nd$0$i$i59$lcssa168;
           $$0$i7$i65 = $$lcssa170;
           $134 = $__nd$0$i$i59$lcssa168;
           $258 = $114;
           label = 69;
           break;
          } else if ((label | 0) == 66) {
           label = 0;
           HEAP32[$__parent$i57 >> 2] = $__nd$0$i$i59$lcssa167;
           $$0$i7$i65 = $$lcssa169;
           $134 = $__nd$0$i$i59$lcssa167;
           $258 = $114;
           label = 69;
           break;
          } else if ((label | 0) == 68) {
           label = 0;
           HEAP32[$__parent$i57 >> 2] = $__nd$0$i$i59$lcssa;
           if (!$__nd$0$i$i59$lcssa) {
            $$0$i7$i65 = $__parent$i57;
            $134 = 0;
            $258 = $114;
            label = 69;
            break;
           } else {
            $143 = $114;
            $__r$0$i69 = $__nd$0$i$i59$lcssa;
            label = 73;
            break;
           }
          }
         }
        } while (0);
        if ((label | 0) == 67) {
         label = 0;
         HEAP32[$__parent$i57 >> 2] = $4;
         $$0$i7$i65 = $4;
         $134 = $4;
         $258 = $257;
         label = 69;
        }
        if ((label | 0) == 69) {
         label = 0;
         __THREW__ = 0;
         $126 = invoke_ii(67, 24) | 0;
         $127 = __THREW__;
         __THREW__ = 0;
         if ($127 & 1) break;
         HEAP32[$126 + 16 >> 2] = HEAP32[$94 >> 2];
         HEAP32[$126 + 20 >> 2] = 0;
         HEAP32[$126 >> 2] = 0;
         HEAP32[$126 + 4 >> 2] = 0;
         HEAP32[$126 + 8 >> 2] = $134;
         HEAP32[$$0$i7$i65 >> 2] = $126;
         $136 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
         if (!$136) $139 = $126; else {
          HEAP32[$r >> 2] = $136;
          $139 = HEAP32[$$0$i7$i65 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $139);
         HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
         $143 = $258;
         $__r$0$i69 = $126;
         label = 73;
        }
        if ((label | 0) == 73) {
         label = 0;
         HEAP32[$__r$0$i69 + 20 >> 2] = $143;
        }
        $177 = HEAP32[$95 + 4 >> 2] | 0;
        if (!$177) {
         $$0$i$i$i17 = $95;
         while (1) {
          $182 = HEAP32[$$0$i$i$i17 + 8 >> 2] | 0;
          if ((HEAP32[$182 >> 2] | 0) == ($$0$i$i$i17 | 0)) {
           $$cast$i$i$i18$lcssa = $182;
           break;
          } else $$0$i$i$i17 = $182;
         }
         $$01$i$i$i20 = $$cast$i$i$i18$lcssa;
        } else {
         $$0$i$i$i$i15 = $177;
         while (1) {
          $179 = HEAP32[$$0$i$i$i$i15 >> 2] | 0;
          if (!$179) {
           $$0$i$i$i$i15$lcssa = $$0$i$i$i$i15;
           break;
          } else $$0$i$i$i$i15 = $179;
         }
         $$01$i$i$i20 = $$0$i$i$i$i15$lcssa;
        }
        if (($$01$i$i$i20 | 0) == ($88 | 0)) {
         label = 44;
         break;
        } else $95 = $$01$i$i$i20;
       }
       if ((label | 0) == 44) break;
       $91 = ___cxa_find_matching_catch() | 0;
       $92 = tempRet0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$88 >> 2] | 0);
       $$0 = $91;
       $$01 = $92;
       $$pre$phi128Z2D = $4;
       $$pre$phiZ2D = $r;
       $256 = HEAP32[$$pre$phi128Z2D >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($$pre$phiZ2D, $256);
       ___resumeException($$0 | 0);
      } while (0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$88 >> 2] | 0);
      break L1;
     }
    }
   } while (0);
   $65 = ___cxa_find_matching_catch() | 0;
   $$pre127$pre$phiZZ2D = $4;
   $lpad$phi$index = $65;
   $lpad$phi$index3 = tempRet0;
  } else {
   $9 = (HEAP32[$counter >> 2] | 0) + 1 | 0;
   HEAP32[$counter >> 2] = $9;
   if ($9 >>> 0 <= $skip >>> 0) {
    HEAP32[$agg$result + 4 >> 2] = 0;
    HEAP32[$agg$result + 8 >> 2] = 0;
    HEAP32[$agg$result >> 2] = $agg$result + 4;
    $255 = 0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $255);
    STACKTOP = sp;
    return;
   }
   $$idx$val$i = HEAP32[$6 + 20 >> 2] | 0;
   $15 = $6 + 24 | 0;
   if (($$idx$val$i | 0) == ($15 | 0)) break L1;
   $$idx$val$i72105 = $$idx$val$i;
   while (1) {
    if ($manifesting) $50 = HEAP32[$$idx$val$i72105 + 20 >> 2] | 0; else $50 = 2;
    $19 = $$idx$val$i72105 + 16 | 0;
    $20 = HEAP32[$4 >> 2] | 0;
    do if (!$20) {
     HEAP32[$__parent$i36 >> 2] = $4;
     $$0$i7$i44 = $4;
     $41 = $4;
     label = 20;
    } else {
     $22 = HEAP32[$19 >> 2] | 0;
     $__nd$0$i$i38 = $20;
     while (1) {
      $24 = HEAP32[$__nd$0$i$i38 + 16 >> 2] | 0;
      if ($22 >>> 0 < $24 >>> 0) {
       $26 = HEAP32[$__nd$0$i$i38 >> 2] | 0;
       if (!$26) {
        $$lcssa174 = $__nd$0$i$i38;
        $__nd$0$i$i38$lcssa172 = $__nd$0$i$i38;
        label = 13;
        break;
       } else $__nd$0$be$in$i$i39 = $26;
      } else {
       if ($24 >>> 0 >= $22 >>> 0) {
        $__nd$0$i$i38$lcssa = $__nd$0$i$i38;
        label = 19;
        break;
       }
       $29 = $__nd$0$i$i38 + 4 | 0;
       $30 = HEAP32[$29 >> 2] | 0;
       if (!$30) {
        $$lcssa173 = $29;
        $__nd$0$i$i38$lcssa171 = $__nd$0$i$i38;
        label = 17;
        break;
       } else $__nd$0$be$in$i$i39 = $30;
      }
      $__nd$0$i$i38 = $__nd$0$be$in$i$i39;
     }
     if ((label | 0) == 13) {
      label = 0;
      HEAP32[$__parent$i36 >> 2] = $__nd$0$i$i38$lcssa172;
      $$0$i7$i44 = $$lcssa174;
      $41 = $__nd$0$i$i38$lcssa172;
      label = 20;
      break;
     } else if ((label | 0) == 17) {
      label = 0;
      HEAP32[$__parent$i36 >> 2] = $__nd$0$i$i38$lcssa171;
      $$0$i7$i44 = $$lcssa173;
      $41 = $__nd$0$i$i38$lcssa171;
      label = 20;
      break;
     } else if ((label | 0) == 19) {
      label = 0;
      HEAP32[$__parent$i36 >> 2] = $__nd$0$i$i38$lcssa;
      if (!$__nd$0$i$i38$lcssa) {
       $$0$i7$i44 = $__parent$i36;
       $41 = 0;
       label = 20;
       break;
      } else {
       $__r$0$i48 = $__nd$0$i$i38$lcssa;
       break;
      }
     }
    } while (0);
    if ((label | 0) == 20) {
     label = 0;
     __THREW__ = 0;
     $33 = invoke_ii(67, 24) | 0;
     $34 = __THREW__;
     __THREW__ = 0;
     if ($34 & 1) {
      label = 33;
      break;
     }
     HEAP32[$33 + 16 >> 2] = HEAP32[$19 >> 2];
     HEAP32[$33 + 20 >> 2] = 0;
     HEAP32[$33 >> 2] = 0;
     HEAP32[$33 + 4 >> 2] = 0;
     HEAP32[$33 + 8 >> 2] = $41;
     HEAP32[$$0$i7$i44 >> 2] = $33;
     $43 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
     if (!$43) $46 = $33; else {
      HEAP32[$r >> 2] = $43;
      $46 = HEAP32[$$0$i7$i44 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $46);
     HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
     $__r$0$i48 = $33;
    }
    HEAP32[$__r$0$i48 + 20 >> 2] = $50;
    $52 = HEAP32[$$idx$val$i72105 + 4 >> 2] | 0;
    if (!$52) {
     $$0$i$i$i53 = $$idx$val$i72105;
     while (1) {
      $57 = HEAP32[$$0$i$i$i53 + 8 >> 2] | 0;
      if ((HEAP32[$57 >> 2] | 0) == ($$0$i$i$i53 | 0)) {
       $$cast$i$i$i54$lcssa = $57;
       break;
      } else $$0$i$i$i53 = $57;
     }
     $$01$i$i$i56 = $$cast$i$i$i54$lcssa;
    } else {
     $$0$i$i$i$i51 = $52;
     while (1) {
      $54 = HEAP32[$$0$i$i$i$i51 >> 2] | 0;
      if (!$54) {
       $$0$i$i$i$i51$lcssa = $$0$i$i$i$i51;
       break;
      } else $$0$i$i$i$i51 = $54;
     }
     $$01$i$i$i56 = $$0$i$i$i$i51$lcssa;
    }
    if (($$01$i$i$i56 | 0) == ($15 | 0)) {
     label = 130;
     break;
    } else $$idx$val$i72105 = $$01$i$i$i56;
   }
   if ((label | 0) == 33) {
    $63 = ___cxa_find_matching_catch() | 0;
    $$pre127$pre$phiZZ2D = $4;
    $lpad$phi$index = $63;
    $lpad$phi$index3 = tempRet0;
    break;
   } else if ((label | 0) == 130) break L1;
  } while (0);
  $$0 = $lpad$phi$index;
  $$01 = $lpad$phi$index3;
  $$pre$phi128Z2D = $$pre127$pre$phiZZ2D;
  $$pre$phiZ2D = $r;
  $256 = HEAP32[$$pre$phi128Z2D >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($$pre$phiZ2D, $256);
  ___resumeException($$0 | 0);
 } while (0);
 HEAP32[$agg$result >> 2] = HEAP32[$r >> 2];
 $249 = HEAP32[$2 >> 2] | 0;
 HEAP32[$agg$result + 4 >> 2] = $249;
 $251 = HEAP32[$3 >> 2] | 0;
 HEAP32[$agg$result + 8 >> 2] = $251;
 $253 = $agg$result + 4 | 0;
 if (!$251) {
  HEAP32[$agg$result >> 2] = $253;
  $255 = $249;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $255);
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$249 + 8 >> 2] = $253;
  HEAP32[$r >> 2] = $4;
  HEAP32[$4 >> 2] = 0;
  HEAP32[$3 >> 2] = 0;
  $255 = 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $255);
  STACKTOP = sp;
  return;
 }
}

function __Z10lex_numberRPKcRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERK8Location($agg$result, $c, $filename, $begin) {
 $agg$result = $agg$result | 0;
 $c = $c | 0;
 $filename = $filename | 0;
 $begin = $begin | 0;
 var $$0 = 0, $$0$i = 0, $$0$i34 = 0, $$0$i52 = 0, $$01$i = 0, $$01$i33 = 0, $$01$i51 = 0, $$01167 = 0, $$01366 = 0, $$05 = 0, $$07 = 0, $$09 = 0, $$11271 = 0, $$11470 = 0, $$2 = 0, $$215 = 0, $$31674 = 0, $$375 = 0, $$4 = 0, $$417 = 0, $$51878 = 0, $$579 = 0, $$6 = 0, $$619 = 0, $$7 = 0, $$720 = 0, $0 = 0, $1 = 0, $100 = 0, $105 = 0, $11 = 0, $110 = 0, $111 = 0, $116 = 0, $118 = 0, $119 = 0, $120 = 0, $122 = 0, $124 = 0, $126 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $134 = 0, $136 = 0, $137 = 0, $138 = 0, $14 = 0, $141 = 0, $145 = 0, $147 = 0, $149 = 0, $151 = 0, $152 = 0, $153 = 0, $155 = 0, $157 = 0, $158 = 0, $16 = 0, $162 = 0, $164 = 0, $165 = 0, $167 = 0, $170 = 0, $175 = 0, $176 = 0, $181 = 0, $186 = 0, $187 = 0, $19 = 0, $192 = 0, $194 = 0, $195 = 0, $196 = 0, $198 = 0, $2 = 0, $200 = 0, $202 = 0, $203 = 0, $205 = 0, $207 = 0, $208 = 0, $209 = 0, $212 = 0, $216 = 0, $218 = 0, $220 = 0, $222 = 0, $223 = 0, $224 = 0, $226 = 0, $228 = 0, $229 = 0, $233 = 0, $235 = 0, $236 = 0, $238 = 0, $24 = 0, $241 = 0, $246 = 0, $247 = 0, $25 = 0, $252 = 0, $257 = 0, $258 = 0, $263 = 0, $265 = 0, $266 = 0, $267 = 0, $269 = 0, $271 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $278 = 0, $279 = 0, $284 = 0, $3 = 0, $30 = 0, $35 = 0, $36 = 0, $4 = 0, $41 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $94 = 0, $99 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i31$index16Z2D = 0, $eh$lpad$body$i31$indexZ2D = 0, $eh$lpad$body$i49$index21Z2D = 0, $eh$lpad$body$i49$indexZ2D = 0, $eh$lpad$body22$index9Z2D = 0, $eh$lpad$body22$indexZ2D = 0, $ss = 0, $ss1 = 0, $ss2 = 0, $state$0 = 0, $state$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 544 | 0;
 $0 = sp + 530 | 0;
 $1 = sp + 516 | 0;
 $2 = sp + 529 | 0;
 $3 = sp + 504 | 0;
 $4 = sp + 528 | 0;
 $5 = sp + 492 | 0;
 $6 = sp + 480 | 0;
 $ss = sp + 336 | 0;
 $7 = sp + 320 | 0;
 $ss1 = sp + 176 | 0;
 $8 = sp + 160 | 0;
 $ss2 = sp + 16 | 0;
 $9 = sp;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 $state$0 = 0;
 L1 : while (1) {
  L3 : do switch ($state$0 | 0) {
  case 0:
   {
    $11 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    switch ($11 << 24 >> 24 | 0) {
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
     break;
    case 48:
     {
      $278 = $11;
      $state$1 = 1;
      break L3;
      break;
     }
    default:
     {
      label = 6;
      break L1;
     }
    }
    $278 = $11;
    $state$1 = 2;
    break;
   }
  case 2:
   {
    $54 = HEAP32[$c >> 2] | 0;
    $55 = HEAP8[$54 >> 0] | 0;
    switch ($55 << 24 >> 24 | 0) {
    case 69:
    case 101:
     {
      $278 = $55;
      $state$1 = 5;
      break L3;
      break;
     }
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
    case 48:
     {
      $278 = $55;
      $state$1 = 2;
      break L3;
      break;
     }
    case 46:
     {
      $278 = $55;
      $state$1 = 3;
      break L3;
      break;
     }
    default:
     {
      $284 = $54;
      label = 90;
      break L1;
     }
    }
    break;
   }
  case 3:
   {
    $58 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    if ((($58 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
     $278 = $58;
     $state$1 = 4;
    } else {
     label = 20;
     break L1;
    }
    break;
   }
  case 1:
   {
    $51 = HEAP32[$c >> 2] | 0;
    $52 = HEAP8[$51 >> 0] | 0;
    $53 = $52 << 24 >> 24;
    if (($53 | 0) == 46) {
     $278 = $52;
     $state$1 = 3;
     break L3;
    } else if (!(($53 | 0) == 69 | ($53 | 0) == 101)) {
     $284 = $51;
     label = 90;
     break L1;
    }
    $278 = $52;
    $state$1 = 5;
    break;
   }
  case 4:
   {
    $130 = HEAP32[$c >> 2] | 0;
    $131 = HEAP8[$130 >> 0] | 0;
    switch ($131 << 24 >> 24 | 0) {
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
    case 48:
     break;
    case 69:
    case 101:
     {
      $278 = $131;
      $state$1 = 5;
      break L3;
      break;
     }
    default:
     {
      $284 = $130;
      label = 90;
      break L1;
     }
    }
    $278 = $131;
    $state$1 = 4;
    break;
   }
  case 5:
   {
    $134 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    switch ($134 << 24 >> 24 | 0) {
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
    case 48:
     break;
    case 45:
    case 43:
     {
      $278 = $134;
      $state$1 = 6;
      break L3;
      break;
     }
    default:
     {
      label = 46;
      break L1;
     }
    }
    $278 = $134;
    $state$1 = 7;
    break;
   }
  case 6:
   {
    $205 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    if ((($205 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
     $278 = $205;
     $state$1 = 7;
    } else {
     label = 67;
     break L1;
    }
    break;
   }
  case 7:
   {
    $275 = HEAP32[$c >> 2] | 0;
    $276 = HEAP8[$275 >> 0] | 0;
    if ((($276 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
     $278 = $276;
     $state$1 = 7;
    } else {
     $284 = $275;
     label = 90;
     break L1;
    }
    break;
   }
  default:
   {
    $278 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    $state$1 = $state$0;
   }
  } while (0);
  __THREW__ = 0;
  invoke_vii(44, $agg$result | 0, $278 | 0);
  $279 = __THREW__;
  __THREW__ = 0;
  if ($279 & 1) {
   label = 35;
   break;
  }
  HEAP32[$c >> 2] = (HEAP32[$c >> 2] | 0) + 1;
  $state$0 = $state$1;
 }
 if ((label | 0) == 6) {
  $13 = ___cxa_allocate_exception(40) | 0;
  __THREW__ = 0;
  invoke_viii(3, $6 | 0, 8, 19);
  $14 = __THREW__;
  __THREW__ = 0;
  do if ($14 & 1) {
   $47 = ___cxa_find_matching_catch() | 0;
   $$01167 = tempRet0;
   $$01366 = $47;
  } else {
   __THREW__ = 0;
   invoke_vii(40, $13 | 0, $filename | 0);
   $16 = __THREW__;
   __THREW__ = 0;
   if ($16 & 1) $$09 = 1; else {
    $19 = $begin;
    $24 = HEAP32[$19 + 4 >> 2] | 0;
    $25 = $13 + 12 | 0;
    HEAP32[$25 >> 2] = HEAP32[$19 >> 2];
    HEAP32[$25 + 4 >> 2] = $24;
    $30 = $begin;
    $35 = HEAP32[$30 + 4 >> 2] | 0;
    $36 = $13 + 20 | 0;
    HEAP32[$36 >> 2] = HEAP32[$30 >> 2];
    HEAP32[$36 + 4 >> 2] = $35;
    __THREW__ = 0;
    invoke_vii(40, $13 + 28 | 0, $6 | 0);
    $41 = __THREW__;
    __THREW__ = 0;
    if ($41 & 1) {
     $43 = ___cxa_find_matching_catch() | 0;
     $44 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $$01167 = $44;
     $$01366 = $43;
     break;
    }
    __THREW__ = 0;
    invoke_viii(4, $13 | 0, 48, 176);
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) $$09 = 0; else {}
   }
   $49 = ___cxa_find_matching_catch() | 0;
   $50 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   if ($$09) {
    $$01167 = $50;
    $$01366 = $49;
   } else {
    $$7 = $50;
    $$720 = $49;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    ___resumeException($$720 | 0);
   }
  } while (0);
  ___cxa_free_exception($13 | 0);
  $$7 = $$01167;
  $$720 = $$01366;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
  ___resumeException($$720 | 0);
 } else if ((label | 0) == 20) {
  $60 = $ss + 64 | 0;
  $61 = $ss + 8 | 0;
  HEAP32[$61 >> 2] = 752;
  $62 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 900;
  HEAP32[$60 >> 2] = 920;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $62 | 0);
  $65 = __THREW__;
  __THREW__ = 0;
  if ($65 & 1) {
   $77 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $77;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 732;
   HEAP32[$60 >> 2] = 772;
   HEAP32[$61 >> 2] = 752;
   __THREW__ = 0;
   invoke_vi(177, $62 | 0);
   $69 = __THREW__;
   __THREW__ = 0;
   do if ($69 & 1) {
    $79 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $79;
   } else {
    HEAP32[$62 >> 2] = 1064;
    $71 = $ss + 44 | 0;
    HEAP32[$71 + 0 >> 2] = 0;
    HEAP32[$71 + 4 >> 2] = 0;
    HEAP32[$71 + 8 >> 2] = 0;
    HEAP32[$71 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$5 + 0 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $62 | 0, $5 | 0);
    $73 = __THREW__;
    __THREW__ = 0;
    if ($73 & 1) {
     $75 = ___cxa_find_matching_catch() | 0;
     $76 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($62);
     $eh$lpad$body$i$index2Z2D = $76;
     $eh$lpad$body$i$indexZ2D = $75;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    __THREW__ = 0;
    $81 = invoke_iiii(25, $61 | 0, 56, 47) | 0;
    $82 = __THREW__;
    __THREW__ = 0;
    L31 : do if ($82 & 1) label = 37; else {
     HEAP8[$4 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
     __THREW__ = 0;
     invoke_iiii(25, $81 | 0, $4 | 0, 1) | 0;
     $86 = __THREW__;
     __THREW__ = 0;
     if ($86 & 1) label = 37; else {
      $88 = ___cxa_allocate_exception(40) | 0;
      __THREW__ = 0;
      invoke_vii(43, $7 | 0, $62 | 0);
      $89 = __THREW__;
      __THREW__ = 0;
      do if ($89 & 1) {
       $126 = ___cxa_find_matching_catch() | 0;
       $$11271 = tempRet0;
       $$11470 = $126;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $88 | 0, $filename | 0);
       $91 = __THREW__;
       __THREW__ = 0;
       if ($91 & 1) $$07 = 1; else {
        $94 = $begin;
        $99 = HEAP32[$94 + 4 >> 2] | 0;
        $100 = $88 + 12 | 0;
        HEAP32[$100 >> 2] = HEAP32[$94 >> 2];
        HEAP32[$100 + 4 >> 2] = $99;
        $105 = $begin;
        $110 = HEAP32[$105 + 4 >> 2] | 0;
        $111 = $88 + 20 | 0;
        HEAP32[$111 >> 2] = HEAP32[$105 >> 2];
        HEAP32[$111 + 4 >> 2] = $110;
        __THREW__ = 0;
        invoke_vii(40, $88 + 28 | 0, $7 | 0);
        $116 = __THREW__;
        __THREW__ = 0;
        if ($116 & 1) {
         $118 = ___cxa_find_matching_catch() | 0;
         $119 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($88);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
         $$11271 = $119;
         $$11470 = $118;
         break;
        }
        __THREW__ = 0;
        invoke_viii(4, $88 | 0, 48, 176);
        $120 = __THREW__;
        __THREW__ = 0;
        if ($120 & 1) $$07 = 0; else {}
       }
       $128 = ___cxa_find_matching_catch() | 0;
       $129 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
       if ($$07) {
        $$11271 = $129;
        $$11470 = $128;
       } else {
        $$2 = $129;
        $$215 = $128;
        break L31;
       }
      } while (0);
      ___cxa_free_exception($88 | 0);
      $$2 = $$11271;
      $$215 = $$11470;
     }
    } while (0);
    if ((label | 0) == 37) {
     $124 = ___cxa_find_matching_catch() | 0;
     $$2 = tempRet0;
     $$215 = $124;
    }
    HEAP32[$ss >> 2] = 732;
    HEAP32[$60 >> 2] = 772;
    HEAP32[$61 >> 2] = 752;
    HEAP32[$62 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($62);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($60);
    $$7 = $$2;
    $$720 = $$215;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    ___resumeException($$720 | 0);
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($60);
  $eh$lpad$body22$index9Z2D = $$0$i;
  $eh$lpad$body22$indexZ2D = $$01$i;
 } else if ((label | 0) == 35) {
  $122 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body22$index9Z2D = tempRet0;
  $eh$lpad$body22$indexZ2D = $122;
 } else if ((label | 0) == 46) {
  $136 = $ss1 + 64 | 0;
  $137 = $ss1 + 8 | 0;
  HEAP32[$137 >> 2] = 752;
  $138 = $ss1 + 12 | 0;
  HEAP32[$ss1 >> 2] = 900;
  HEAP32[$136 >> 2] = 920;
  HEAP32[$ss1 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss1 + 64 | 0, $138 | 0);
  $141 = __THREW__;
  __THREW__ = 0;
  if ($141 & 1) {
   $153 = ___cxa_find_matching_catch() | 0;
   $$0$i34 = tempRet0;
   $$01$i33 = $153;
  } else {
   HEAP32[$ss1 + 136 >> 2] = 0;
   HEAP32[$ss1 + 140 >> 2] = -1;
   HEAP32[$ss1 >> 2] = 732;
   HEAP32[$136 >> 2] = 772;
   HEAP32[$137 >> 2] = 752;
   __THREW__ = 0;
   invoke_vi(177, $138 | 0);
   $145 = __THREW__;
   __THREW__ = 0;
   do if ($145 & 1) {
    $155 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i31$index16Z2D = tempRet0;
    $eh$lpad$body$i31$indexZ2D = $155;
   } else {
    HEAP32[$138 >> 2] = 1064;
    $147 = $ss1 + 44 | 0;
    HEAP32[$147 + 0 >> 2] = 0;
    HEAP32[$147 + 4 >> 2] = 0;
    HEAP32[$147 + 8 >> 2] = 0;
    HEAP32[$147 + 12 >> 2] = 0;
    HEAP32[$ss1 + 60 >> 2] = 24;
    HEAP32[$3 + 0 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $138 | 0, $3 | 0);
    $149 = __THREW__;
    __THREW__ = 0;
    if ($149 & 1) {
     $151 = ___cxa_find_matching_catch() | 0;
     $152 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($147);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($138);
     $eh$lpad$body$i31$index16Z2D = $152;
     $eh$lpad$body$i31$indexZ2D = $151;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __THREW__ = 0;
    $157 = invoke_iiii(25, $137 | 0, 104, 37) | 0;
    $158 = __THREW__;
    __THREW__ = 0;
    L76 : do if ($158 & 1) label = 61; else {
     HEAP8[$2 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
     __THREW__ = 0;
     invoke_iiii(25, $157 | 0, $2 | 0, 1) | 0;
     $162 = __THREW__;
     __THREW__ = 0;
     if ($162 & 1) label = 61; else {
      $164 = ___cxa_allocate_exception(40) | 0;
      __THREW__ = 0;
      invoke_vii(43, $8 | 0, $138 | 0);
      $165 = __THREW__;
      __THREW__ = 0;
      do if ($165 & 1) {
       $200 = ___cxa_find_matching_catch() | 0;
       $$31674 = $200;
       $$375 = tempRet0;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $164 | 0, $filename | 0);
       $167 = __THREW__;
       __THREW__ = 0;
       if ($167 & 1) $$05 = 1; else {
        $170 = $begin;
        $175 = HEAP32[$170 + 4 >> 2] | 0;
        $176 = $164 + 12 | 0;
        HEAP32[$176 >> 2] = HEAP32[$170 >> 2];
        HEAP32[$176 + 4 >> 2] = $175;
        $181 = $begin;
        $186 = HEAP32[$181 + 4 >> 2] | 0;
        $187 = $164 + 20 | 0;
        HEAP32[$187 >> 2] = HEAP32[$181 >> 2];
        HEAP32[$187 + 4 >> 2] = $186;
        __THREW__ = 0;
        invoke_vii(40, $164 + 28 | 0, $8 | 0);
        $192 = __THREW__;
        __THREW__ = 0;
        if ($192 & 1) {
         $194 = ___cxa_find_matching_catch() | 0;
         $195 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($164);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
         $$31674 = $194;
         $$375 = $195;
         break;
        }
        __THREW__ = 0;
        invoke_viii(4, $164 | 0, 48, 176);
        $196 = __THREW__;
        __THREW__ = 0;
        if ($196 & 1) $$05 = 0; else {}
       }
       $202 = ___cxa_find_matching_catch() | 0;
       $203 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
       if ($$05) {
        $$31674 = $202;
        $$375 = $203;
       } else {
        $$4 = $203;
        $$417 = $202;
        break L76;
       }
      } while (0);
      ___cxa_free_exception($164 | 0);
      $$4 = $$375;
      $$417 = $$31674;
     }
    } while (0);
    if ((label | 0) == 61) {
     $198 = ___cxa_find_matching_catch() | 0;
     $$4 = tempRet0;
     $$417 = $198;
    }
    HEAP32[$ss1 >> 2] = 732;
    HEAP32[$136 >> 2] = 772;
    HEAP32[$137 >> 2] = 752;
    HEAP32[$138 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($147);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($138);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($136);
    $$7 = $$4;
    $$720 = $$417;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    ___resumeException($$720 | 0);
   } while (0);
   $$0$i34 = $eh$lpad$body$i31$index16Z2D;
   $$01$i33 = $eh$lpad$body$i31$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($136);
  $eh$lpad$body22$index9Z2D = $$0$i34;
  $eh$lpad$body22$indexZ2D = $$01$i33;
 } else if ((label | 0) == 67) {
  $207 = $ss2 + 64 | 0;
  $208 = $ss2 + 8 | 0;
  HEAP32[$208 >> 2] = 752;
  $209 = $ss2 + 12 | 0;
  HEAP32[$ss2 >> 2] = 900;
  HEAP32[$207 >> 2] = 920;
  HEAP32[$ss2 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss2 + 64 | 0, $209 | 0);
  $212 = __THREW__;
  __THREW__ = 0;
  if ($212 & 1) {
   $224 = ___cxa_find_matching_catch() | 0;
   $$0$i52 = tempRet0;
   $$01$i51 = $224;
  } else {
   HEAP32[$ss2 + 136 >> 2] = 0;
   HEAP32[$ss2 + 140 >> 2] = -1;
   HEAP32[$ss2 >> 2] = 732;
   HEAP32[$207 >> 2] = 772;
   HEAP32[$208 >> 2] = 752;
   __THREW__ = 0;
   invoke_vi(177, $209 | 0);
   $216 = __THREW__;
   __THREW__ = 0;
   do if ($216 & 1) {
    $226 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i49$index21Z2D = tempRet0;
    $eh$lpad$body$i49$indexZ2D = $226;
   } else {
    HEAP32[$209 >> 2] = 1064;
    $218 = $ss2 + 44 | 0;
    HEAP32[$218 + 0 >> 2] = 0;
    HEAP32[$218 + 4 >> 2] = 0;
    HEAP32[$218 + 8 >> 2] = 0;
    HEAP32[$218 + 12 >> 2] = 0;
    HEAP32[$ss2 + 60 >> 2] = 24;
    HEAP32[$1 + 0 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $209 | 0, $1 | 0);
    $220 = __THREW__;
    __THREW__ = 0;
    if ($220 & 1) {
     $222 = ___cxa_find_matching_catch() | 0;
     $223 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($218);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($209);
     $eh$lpad$body$i49$index21Z2D = $223;
     $eh$lpad$body$i49$indexZ2D = $222;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    __THREW__ = 0;
    $228 = invoke_iiii(25, $208 | 0, 144, 47) | 0;
    $229 = __THREW__;
    __THREW__ = 0;
    L106 : do if ($229 & 1) label = 82; else {
     HEAP8[$0 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
     __THREW__ = 0;
     invoke_iiii(25, $228 | 0, $0 | 0, 1) | 0;
     $233 = __THREW__;
     __THREW__ = 0;
     if ($233 & 1) label = 82; else {
      $235 = ___cxa_allocate_exception(40) | 0;
      __THREW__ = 0;
      invoke_vii(43, $9 | 0, $209 | 0);
      $236 = __THREW__;
      __THREW__ = 0;
      do if ($236 & 1) {
       $271 = ___cxa_find_matching_catch() | 0;
       $$51878 = $271;
       $$579 = tempRet0;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $235 | 0, $filename | 0);
       $238 = __THREW__;
       __THREW__ = 0;
       if ($238 & 1) $$0 = 1; else {
        $241 = $begin;
        $246 = HEAP32[$241 + 4 >> 2] | 0;
        $247 = $235 + 12 | 0;
        HEAP32[$247 >> 2] = HEAP32[$241 >> 2];
        HEAP32[$247 + 4 >> 2] = $246;
        $252 = $begin;
        $257 = HEAP32[$252 + 4 >> 2] | 0;
        $258 = $235 + 20 | 0;
        HEAP32[$258 >> 2] = HEAP32[$252 >> 2];
        HEAP32[$258 + 4 >> 2] = $257;
        __THREW__ = 0;
        invoke_vii(40, $235 + 28 | 0, $9 | 0);
        $263 = __THREW__;
        __THREW__ = 0;
        if ($263 & 1) {
         $265 = ___cxa_find_matching_catch() | 0;
         $266 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($235);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
         $$51878 = $265;
         $$579 = $266;
         break;
        }
        __THREW__ = 0;
        invoke_viii(4, $235 | 0, 48, 176);
        $267 = __THREW__;
        __THREW__ = 0;
        if ($267 & 1) $$0 = 0; else {}
       }
       $273 = ___cxa_find_matching_catch() | 0;
       $274 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
       if ($$0) {
        $$51878 = $273;
        $$579 = $274;
       } else {
        $$6 = $274;
        $$619 = $273;
        break L106;
       }
      } while (0);
      ___cxa_free_exception($235 | 0);
      $$6 = $$579;
      $$619 = $$51878;
     }
    } while (0);
    if ((label | 0) == 82) {
     $269 = ___cxa_find_matching_catch() | 0;
     $$6 = tempRet0;
     $$619 = $269;
    }
    HEAP32[$ss2 >> 2] = 732;
    HEAP32[$207 >> 2] = 772;
    HEAP32[$208 >> 2] = 752;
    HEAP32[$209 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($218);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($209);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($207);
    $$7 = $$6;
    $$720 = $$619;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    ___resumeException($$720 | 0);
   } while (0);
   $$0$i52 = $eh$lpad$body$i49$index21Z2D;
   $$01$i51 = $eh$lpad$body$i49$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($207);
  $eh$lpad$body22$index9Z2D = $$0$i52;
  $eh$lpad$body22$indexZ2D = $$01$i51;
 } else if ((label | 0) == 90) {
  HEAP32[$c >> 2] = $284 + -1;
  STACKTOP = sp;
  return;
 }
 $$7 = $eh$lpad$body22$index9Z2D;
 $$720 = $eh$lpad$body22$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
 ___resumeException($$720 | 0);
}

function __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($this, $loc, $context, $self, $offset, $up_values) {
 $this = $this | 0;
 $loc = $loc | 0;
 $context = $context | 0;
 $self = $self | 0;
 $offset = $offset | 0;
 $up_values = $up_values | 0;
 var $$$i$i$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i18 = 0, $$0$i$i$i$i18$lcssa = 0, $$0$i$i$i10$i$i$i = 0, $$0$i$i$i10$i$i$i$lcssa = 0, $$0$i$i$i19 = 0, $$0$i$i12$i$i$i = 0, $$0$i$i26$i$i$i = 0, $$0$i$i7$i$i$i = 0, $$0$i$i8$i$i$i = 0, $$0$i$i8$i$i$i$be = 0, $$0$i$i8$i$i$i$lcssa = 0, $$0$i1$i$i$i$i = 0, $$0$i1$i$i$i$i$be = 0, $$0$i1$i$i$i$i$lcssa = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i15$i$i$i = 0, $$0121 = 0, $$0122 = 0, $$02 = 0, $$023 = 0, $$024 = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$lcssa = 0, $$cast$i$i13$i$i$i$lcssa = 0, $$idx$val$i = 0, $$idx$val$i$lcssa = 0, $$idx$val$i13 = 0, $$idx$val$i132037 = 0, $$idx$val$i9 = 0, $$idx1$val$i$i$i$i = 0, $$idx2$i = 0, $$idx2$val$i = 0, $$idx3$i = 0, $$idx3$val$i = 0, $$lcssa = 0, $$lcssa69 = 0, $$lcssa70 = 0, $$lcssa72 = 0, $$lcssa73 = 0, $$lcssa75 = 0, $$lcssa76 = 0, $$pre = 0, $$pre$phi51Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $102 = 0, $104 = 0, $106 = 0, $111 = 0, $112 = 0, $117 = 0, $118 = 0, $119 = 0, $125 = 0, $127 = 0, $128 = 0, $13 = 0, $140 = 0, $147 = 0, $155 = 0, $157 = 0, $158 = 0, $161 = 0, $162 = 0, $166 = 0, $169 = 0, $172 = 0, $176 = 0, $180 = 0, $181 = 0, $183 = 0, $186 = 0, $188 = 0, $19 = 0, $191 = 0, $195 = 0, $198 = 0, $200 = 0, $203 = 0, $205 = 0, $206 = 0, $209 = 0, $21 = 0, $211 = 0, $214 = 0, $218 = 0, $220 = 0, $223 = 0, $228 = 0, $229 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $238 = 0, $240 = 0, $241 = 0, $243 = 0, $245 = 0, $250 = 0, $251 = 0, $257 = 0, $259 = 0, $26 = 0, $262 = 0, $266 = 0, $268 = 0, $271 = 0, $28 = 0, $281 = 0, $283 = 0, $286 = 0, $29 = 0, $290 = 0, $30 = 0, $4 = 0, $45 = 0, $48 = 0, $53 = 0, $54 = 0, $56 = 0, $58 = 0, $60 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $72 = 0, $73 = 0, $85 = 0, $92 = 0, $93 = 0, $99 = 0, $__cache$017$i$i$i = 0, $__cache$017$i$i$i$lcssa = 0, $__cache$2$lcssa$i$i$i = 0, $__first$0316$i$i$i = 0, $__first$04$ph$i$i$i = 0, $__first$0414$i$i$i = 0, $__nd$0$be$in$i$i$i$i$i = 0, $__nd$0$be$in$i$i23$i$i$i = 0, $__nd$0$i$i$i$i$i = 0, $__nd$0$i$i$i$i$i$lcssa = 0, $__nd$0$i$i$i$i$i$lcssa68 = 0, $__nd$0$i$i20$i$i$i = 0, $__nd$0$i$i20$i$i$i$lcssa = 0, $__nd$0$i$i20$i$i$i$lcssa71 = 0, $__t$idx$val$i$i = 0, $__v$i$i = 0, $__v$idx$val$i$i$i$i$i = 0, $__v$idx$val$i$i18$i$i$i = 0, $i$0$i = 0, $i$0$i$lcssa77 = 0, $i$0$in$i = 0, $this$idx$val$i$i = 0, $this$idx2$val$i$i = 0, $this$idx2$val$i$i49 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v$i$i = sp + 12 | 0;
 $0 = sp;
 $$idx2$i = $this + 12 | 0;
 $$idx2$val$i = HEAP32[$$idx2$i >> 2] | 0;
 $$idx3$i = $this + 16 | 0;
 $$idx3$val$i = HEAP32[$$idx3$i >> 2] | 0;
 $4 = ($$idx3$val$i - $$idx2$val$i | 0) / 144 | 0;
 $i$0$in$i = $4;
 while (1) {
  $i$0$i = $i$0$in$i + -1 | 0;
  if (($i$0$i | 0) <= -1) {
   label = 17;
   break;
  }
  $7 = HEAP32[$$idx2$val$i + ($i$0$i * 144 | 0) >> 2] | 0;
  if (($7 | 0) == 6) {
   $i$0$i$lcssa77 = $i$0$i;
   label = 4;
   break;
  } else if (($7 | 0) == 12) $i$0$in$i = $i$0$i; else {
   label = 17;
   break;
  }
 }
 if ((label | 0) == 4) if (!(HEAP8[$$idx2$val$i + ($i$0$i$lcssa77 * 144 | 0) + 36 >> 0] | 0)) {
  $67 = $$idx3$val$i;
  $this$idx2$val$i$i = $$idx2$val$i;
 } else if ((HEAP32[$$idx2$val$i + ($i$0$i$lcssa77 * 144 | 0) + 108 >> 2] | 0) == (HEAP32[$$idx2$val$i + ($i$0$i$lcssa77 * 144 | 0) + 104 >> 2] | 0)) {
  if ($4 >>> 0 > $i$0$i$lcssa77 >>> 0) {
   $19 = $$idx3$val$i;
   while (1) {
    $13 = $19 + -144 | 0;
    $21 = $19;
    do {
     HEAP32[$$idx3$i >> 2] = $21 + -144;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($21 + -16 | 0, HEAP32[$21 + -12 >> 2] | 0);
     $26 = HEAP32[$21 + -40 >> 2] | 0;
     $28 = $26;
     if ($26) {
      $29 = $21 + -36 | 0;
      $30 = HEAP32[$29 >> 2] | 0;
      if (($30 | 0) != ($26 | 0)) HEAP32[$29 >> 2] = $30 + (~(($30 + -4 - $28 | 0) >>> 2) << 2);
      __ZdlPv($26);
     }
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($21 + -52 | 0, HEAP32[$21 + -48 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($21 + -68 | 0, HEAP32[$21 + -64 >> 2] | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21 + -136 | 0);
     $21 = HEAP32[$$idx3$i >> 2] | 0;
    } while (($21 | 0) != ($13 | 0));
    $$idx$val$i = HEAP32[$$idx2$i >> 2] | 0;
    if ((($13 - $$idx$val$i | 0) / 144 | 0) >>> 0 > $i$0$i$lcssa77 >>> 0) $19 = $13; else {
     $$idx$val$i$lcssa = $$idx$val$i;
     $$lcssa76 = $13;
     break;
    }
   }
   $290 = $$lcssa76;
   $this$idx2$val$i$i49 = $$idx$val$i$lcssa;
  } else {
   $290 = $$idx3$val$i;
   $this$idx2$val$i$i49 = $$idx2$val$i;
  }
  $45 = $this + 4 | 0;
  HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + -1;
  $67 = $290;
  $this$idx2$val$i$i = $this$idx2$val$i$i49;
 } else {
  $67 = $$idx3$val$i;
  $this$idx2$val$i$i = $$idx2$val$i;
 } else if ((label | 0) == 17) {
  $67 = $$idx3$val$i;
  $this$idx2$val$i$i = $$idx2$val$i;
 }
 $48 = $this + 4 | 0;
 if ((HEAP32[$48 >> 2] | 0) >>> 0 >= (HEAP32[$this + 8 >> 2] | 0) >>> 0) {
  $53 = ___cxa_allocate_exception(24) | 0;
  __THREW__ = 0;
  invoke_viii(3, $0 | 0, 38896, 26);
  $54 = __THREW__;
  __THREW__ = 0;
  if ($54 & 1) {
   $60 = ___cxa_find_matching_catch() | 0;
   $$0122 = tempRet0;
   $$024 = $60;
  } else {
   __THREW__ = 0;
   invoke_viiii(17, $53 | 0, $this | 0, $loc | 0, $0 | 0);
   $56 = __THREW__;
   __THREW__ = 0;
   if ($56 & 1) $$02 = 1; else {
    __THREW__ = 0;
    invoke_viii(4, $53 | 0, 38664, 183);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) $$02 = 0; else {}
   }
   $62 = ___cxa_find_matching_catch() | 0;
   $63 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   if ($$02) {
    $$0122 = $63;
    $$024 = $62;
   } else {
    $$0121 = $63;
    $$023 = $62;
    ___resumeException($$023 | 0);
   }
  }
  ___cxa_free_exception($53 | 0);
  $$0121 = $$0122;
  $$023 = $$024;
  ___resumeException($$023 | 0);
 }
 $64 = $this + 12 | 0;
 $65 = $this + 20 | 0;
 $66 = HEAP32[$65 >> 2] | 0;
 if ($67 >>> 0 < $66 >>> 0) {
  if (!$67) $93 = 0; else {
   HEAP32[$67 >> 2] = 6;
   HEAP32[$67 + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($67 + 8 | 0, $loc);
   $72 = $67 + 20 | 0;
   $73 = $loc + 12 | 0;
   HEAP32[$72 + 0 >> 2] = HEAP32[$73 + 0 >> 2];
   HEAP32[$72 + 4 >> 2] = HEAP32[$73 + 4 >> 2];
   HEAP32[$72 + 8 >> 2] = HEAP32[$73 + 8 >> 2];
   HEAP32[$72 + 12 >> 2] = HEAP32[$73 + 12 >> 2];
   HEAP8[$67 + 36 >> 0] = 0;
   HEAP32[$67 + 72 >> 2] = 0;
   HEAP32[$67 + 80 >> 2] = 0;
   HEAP32[$67 + 84 >> 2] = 0;
   HEAP32[$67 + 76 >> 2] = $67 + 80;
   HEAP32[$67 + 88 >> 2] = 0;
   HEAP32[$67 + 96 >> 2] = 0;
   HEAP32[$67 + 100 >> 2] = 0;
   HEAP32[$67 + 92 >> 2] = $67 + 96;
   $85 = $67 + 104 | 0;
   HEAP32[$67 + 132 >> 2] = 0;
   HEAP32[$67 + 136 >> 2] = 0;
   HEAP32[$85 + 0 >> 2] = 0;
   HEAP32[$85 + 4 >> 2] = 0;
   HEAP32[$85 + 8 >> 2] = 0;
   HEAP32[$85 + 12 >> 2] = 0;
   HEAP32[$85 + 16 >> 2] = 0;
   HEAP32[$85 + 20 >> 2] = 0;
   HEAP32[$67 + 128 >> 2] = $67 + 132;
   HEAP32[$67 + 40 >> 2] = 0;
   HEAP32[$67 + 56 >> 2] = 0;
   $93 = HEAP32[$$idx3$i >> 2] | 0;
  }
  $92 = $93 + 144 | 0;
  HEAP32[$$idx3$i >> 2] = $92;
  $$idx$val$i9 = $92;
 } else {
  $99 = (($67 - $this$idx2$val$i$i | 0) / 144 | 0) + 1 | 0;
  if ($99 >>> 0 > 29826161) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($64);
   $$idx1$val$i$i$i$i = HEAP32[$65 >> 2] | 0;
   $this$idx$val$i$i = HEAP32[$64 >> 2] | 0;
  } else {
   $$idx1$val$i$i$i$i = $66;
   $this$idx$val$i$i = $this$idx2$val$i$i;
  }
  $102 = $this$idx$val$i$i;
  $104 = ($$idx1$val$i$i$i$i - $102 | 0) / 144 | 0;
  if ($104 >>> 0 < 14913080) {
   $106 = $104 << 1;
   $$0$i$i$i = $106 >>> 0 < $99 >>> 0 ? $99 : $106;
  } else $$0$i$i$i = 29826161;
  $111 = ((HEAP32[$$idx3$i >> 2] | 0) - $102 | 0) / 144 | 0;
  $112 = $__v$i$i + 12 | 0;
  HEAP32[$112 >> 2] = 0;
  HEAP32[$__v$i$i + 16 >> 2] = $this + 20;
  if (!$$0$i$i$i) $117 = 0; else $117 = __Znwj($$0$i$i$i * 144 | 0) | 0;
  HEAP32[$__v$i$i >> 2] = $117;
  $118 = $117 + ($111 * 144 | 0) | 0;
  $119 = $__v$i$i + 8 | 0;
  HEAP32[$119 >> 2] = $118;
  HEAP32[$__v$i$i + 4 >> 2] = $118;
  HEAP32[$112 >> 2] = $117 + ($$0$i$i$i * 144 | 0);
  do if ($118) {
   HEAP32[$118 >> 2] = 6;
   HEAP32[$117 + ($111 * 144 | 0) + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(40, $117 + ($111 * 144 | 0) + 8 | 0, $loc | 0);
   $125 = __THREW__;
   __THREW__ = 0;
   if ($125 & 1) {
    $147 = ___cxa_find_matching_catch() | 0;
    __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
    ___resumeException($147 | 0);
   } else {
    $127 = $117 + ($111 * 144 | 0) + 20 | 0;
    $128 = $loc + 12 | 0;
    HEAP32[$127 + 0 >> 2] = HEAP32[$128 + 0 >> 2];
    HEAP32[$127 + 4 >> 2] = HEAP32[$128 + 4 >> 2];
    HEAP32[$127 + 8 >> 2] = HEAP32[$128 + 8 >> 2];
    HEAP32[$127 + 12 >> 2] = HEAP32[$128 + 12 >> 2];
    HEAP8[$117 + ($111 * 144 | 0) + 36 >> 0] = 0;
    HEAP32[$117 + ($111 * 144 | 0) + 72 >> 2] = 0;
    HEAP32[$117 + ($111 * 144 | 0) + 80 >> 2] = 0;
    HEAP32[$117 + ($111 * 144 | 0) + 84 >> 2] = 0;
    HEAP32[$117 + ($111 * 144 | 0) + 76 >> 2] = $117 + ($111 * 144 | 0) + 80;
    HEAP32[$117 + ($111 * 144 | 0) + 88 >> 2] = 0;
    HEAP32[$117 + ($111 * 144 | 0) + 96 >> 2] = 0;
    HEAP32[$117 + ($111 * 144 | 0) + 100 >> 2] = 0;
    HEAP32[$117 + ($111 * 144 | 0) + 92 >> 2] = $117 + ($111 * 144 | 0) + 96;
    $140 = $117 + ($111 * 144 | 0) + 104 | 0;
    HEAP32[$117 + ($111 * 144 | 0) + 132 >> 2] = 0;
    HEAP32[$117 + ($111 * 144 | 0) + 136 >> 2] = 0;
    HEAP32[$140 + 0 >> 2] = 0;
    HEAP32[$140 + 4 >> 2] = 0;
    HEAP32[$140 + 8 >> 2] = 0;
    HEAP32[$140 + 12 >> 2] = 0;
    HEAP32[$140 + 16 >> 2] = 0;
    HEAP32[$140 + 20 >> 2] = 0;
    HEAP32[$117 + ($111 * 144 | 0) + 128 >> 2] = $117 + ($111 * 144 | 0) + 132;
    HEAP32[$117 + ($111 * 144 | 0) + 40 >> 2] = 0;
    HEAP32[$117 + ($111 * 144 | 0) + 56 >> 2] = 0;
    break;
   }
  } while (0);
  HEAP32[$119 >> 2] = $117 + (($111 + 1 | 0) * 144 | 0);
  __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($64, $__v$i$i);
  __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
  $$idx$val$i9 = HEAP32[$$idx3$i >> 2] | 0;
 }
 HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 1;
 HEAP32[$$idx$val$i9 + -28 >> 2] = $context;
 HEAP32[$$idx$val$i9 + -24 >> 2] = $self;
 HEAP32[$$idx$val$i9 + -20 >> 2] = $offset;
 $155 = $$idx$val$i9 + -16 | 0;
 L60 : do if (($155 | 0) == ($up_values | 0)) {
  $$pre = $up_values + 4 | 0;
  $$pre$phi51Z2D = $$pre;
  $$pre$phiZ2D = $$pre;
 } else {
  $__t$idx$val$i$i = HEAP32[$up_values >> 2] | 0;
  $157 = $up_values + 4 | 0;
  $158 = $$idx$val$i9 + -8 | 0;
  do if (!(HEAP32[$158 >> 2] | 0)) $__first$04$ph$i$i$i = $__t$idx$val$i$i; else {
   $161 = HEAP32[$155 >> 2] | 0;
   $162 = $$idx$val$i9 + -12 | 0;
   HEAP32[$155 >> 2] = $162;
   HEAP32[(HEAP32[$162 >> 2] | 0) + 8 >> 2] = 0;
   HEAP32[$162 >> 2] = 0;
   HEAP32[$158 >> 2] = 0;
   $166 = HEAP32[$161 + 4 >> 2] | 0;
   $$$i$i$i$i = ($166 | 0) == 0 ? $161 : $166;
   if (!$$$i$i$i$i) $__first$04$ph$i$i$i = $__t$idx$val$i$i; else {
    $169 = $$idx$val$i9 + -12 | 0;
    $__cache$017$i$i$i = $$$i$i$i$i;
    $__first$0316$i$i$i = $__t$idx$val$i$i;
    while (1) {
     if (($__first$0316$i$i$i | 0) == ($157 | 0)) {
      $__cache$017$i$i$i$lcssa = $__cache$017$i$i$i;
      break;
     }
     $176 = $__cache$017$i$i$i + 16 | 0;
     HEAP32[$176 >> 2] = HEAP32[$__first$0316$i$i$i + 16 >> 2];
     HEAP32[$__cache$017$i$i$i + 20 >> 2] = HEAP32[$__first$0316$i$i$i + 20 >> 2];
     $180 = $__cache$017$i$i$i + 8 | 0;
     $181 = HEAP32[$180 >> 2] | 0;
     do if (!$181) $$0$i$i$i$i = 0; else {
      $183 = HEAP32[$181 >> 2] | 0;
      if (($183 | 0) == ($__cache$017$i$i$i | 0)) {
       HEAP32[$181 >> 2] = 0;
       $186 = HEAP32[$181 + 4 >> 2] | 0;
       if (!$186) {
        $$0$i$i$i$i = $181;
        break;
       }
       $$0$i1$i$i$i$i = $186;
       while (1) {
        $188 = HEAP32[$$0$i1$i$i$i$i >> 2] | 0;
        if (!$188) {
         $191 = HEAP32[$$0$i1$i$i$i$i + 4 >> 2] | 0;
         if (!$191) {
          $$0$i1$i$i$i$i$lcssa = $$0$i1$i$i$i$i;
          break;
         } else $$0$i1$i$i$i$i$be = $191;
        } else $$0$i1$i$i$i$i$be = $188;
        $$0$i1$i$i$i$i = $$0$i1$i$i$i$i$be;
       }
       $$0$i$i$i$i = $$0$i1$i$i$i$i$lcssa;
       break;
      } else {
       HEAP32[$181 + 4 >> 2] = 0;
       if (!$183) {
        $$0$i$i$i$i = $181;
        break;
       }
       $$0$i$i8$i$i$i = $183;
       while (1) {
        $195 = HEAP32[$$0$i$i8$i$i$i >> 2] | 0;
        if (!$195) {
         $198 = HEAP32[$$0$i$i8$i$i$i + 4 >> 2] | 0;
         if (!$198) {
          $$0$i$i8$i$i$i$lcssa = $$0$i$i8$i$i$i;
          break;
         } else $$0$i$i8$i$i$i$be = $198;
        } else $$0$i$i8$i$i$i$be = $195;
        $$0$i$i8$i$i$i = $$0$i$i8$i$i$i$be;
       }
       $$0$i$i$i$i = $$0$i$i8$i$i$i$lcssa;
       break;
      }
     } while (0);
     $200 = HEAP32[$162 >> 2] | 0;
     do if (!$200) {
      $$0$i$i26$i$i$i = $162;
      $209 = $162;
     } else {
      $__v$idx$val$i$i18$i$i$i = HEAP32[$176 >> 2] | 0;
      $__nd$0$i$i20$i$i$i = $200;
      while (1) {
       if ($__v$idx$val$i$i18$i$i$i >>> 0 < (HEAP32[$__nd$0$i$i20$i$i$i + 16 >> 2] | 0) >>> 0) {
        $203 = HEAP32[$__nd$0$i$i20$i$i$i >> 2] | 0;
        if (!$203) {
         $$lcssa73 = $__nd$0$i$i20$i$i$i;
         $__nd$0$i$i20$i$i$i$lcssa71 = $__nd$0$i$i20$i$i$i;
         label = 66;
         break;
        } else $__nd$0$be$in$i$i23$i$i$i = $203;
       } else {
        $205 = $__nd$0$i$i20$i$i$i + 4 | 0;
        $206 = HEAP32[$205 >> 2] | 0;
        if (!$206) {
         $$lcssa72 = $205;
         $__nd$0$i$i20$i$i$i$lcssa = $__nd$0$i$i20$i$i$i;
         label = 69;
         break;
        } else $__nd$0$be$in$i$i23$i$i$i = $206;
       }
       $__nd$0$i$i20$i$i$i = $__nd$0$be$in$i$i23$i$i$i;
      }
      if ((label | 0) == 66) {
       label = 0;
       $$0$i$i26$i$i$i = $$lcssa73;
       $209 = $__nd$0$i$i20$i$i$i$lcssa71;
       break;
      } else if ((label | 0) == 69) {
       label = 0;
       $$0$i$i26$i$i$i = $$lcssa72;
       $209 = $__nd$0$i$i20$i$i$i$lcssa;
       break;
      }
     } while (0);
     HEAP32[$__cache$017$i$i$i >> 2] = 0;
     HEAP32[$__cache$017$i$i$i + 4 >> 2] = 0;
     HEAP32[$180 >> 2] = $209;
     HEAP32[$$0$i$i26$i$i$i >> 2] = $__cache$017$i$i$i;
     $211 = HEAP32[HEAP32[$155 >> 2] >> 2] | 0;
     if (!$211) $214 = $__cache$017$i$i$i; else {
      HEAP32[$155 >> 2] = $211;
      $214 = HEAP32[$$0$i$i26$i$i$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$169 >> 2] | 0, $214);
     HEAP32[$158 >> 2] = (HEAP32[$158 >> 2] | 0) + 1;
     $218 = HEAP32[$__first$0316$i$i$i + 4 >> 2] | 0;
     if (!$218) {
      $$0$i$i12$i$i$i = $__first$0316$i$i$i;
      while (1) {
       $223 = HEAP32[$$0$i$i12$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$223 >> 2] | 0) == ($$0$i$i12$i$i$i | 0)) {
        $$cast$i$i13$i$i$i$lcssa = $223;
        break;
       } else $$0$i$i12$i$i$i = $223;
      }
      $$01$i$i15$i$i$i = $$cast$i$i13$i$i$i$lcssa;
     } else {
      $$0$i$i$i10$i$i$i = $218;
      while (1) {
       $220 = HEAP32[$$0$i$i$i10$i$i$i >> 2] | 0;
       if (!$220) {
        $$0$i$i$i10$i$i$i$lcssa = $$0$i$i$i10$i$i$i;
        break;
       } else $$0$i$i$i10$i$i$i = $220;
      }
      $$01$i$i15$i$i$i = $$0$i$i$i10$i$i$i$lcssa;
     }
     if (!$$0$i$i$i$i) {
      $$lcssa75 = $$01$i$i15$i$i$i;
      label = 83;
      break;
     } else {
      $__cache$017$i$i$i = $$0$i$i$i$i;
      $__first$0316$i$i$i = $$01$i$i15$i$i$i;
     }
    }
    if ((label | 0) == 83) {
     $__first$04$ph$i$i$i = $$lcssa75;
     break;
    }
    $172 = HEAP32[$__cache$017$i$i$i$lcssa + 8 >> 2] | 0;
    if (!$172) $__cache$2$lcssa$i$i$i = $__cache$017$i$i$i$lcssa; else {
     $228 = $172;
     while (1) {
      $229 = HEAP32[$228 + 8 >> 2] | 0;
      if (!$229) {
       $$lcssa70 = $228;
       break;
      } else $228 = $229;
     }
     $__cache$2$lcssa$i$i$i = $$lcssa70;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($155, $__cache$2$lcssa$i$i$i);
    $$pre$phi51Z2D = $157;
    $$pre$phiZ2D = $157;
    break L60;
   }
  } while (0);
  if (($__first$04$ph$i$i$i | 0) == ($157 | 0)) {
   $$pre$phi51Z2D = $157;
   $$pre$phiZ2D = $157;
  } else {
   $232 = $$idx$val$i9 + -12 | 0;
   $233 = $$idx$val$i9 + -12 | 0;
   $__first$0414$i$i$i = $__first$04$ph$i$i$i;
   while (1) {
    $234 = $__first$0414$i$i$i + 16 | 0;
    $235 = HEAP32[$232 >> 2] | 0;
    do if (!$235) {
     $$0$i$i7$i$i$i = $232;
     $257 = $232;
    } else {
     $__v$idx$val$i$i$i$i$i = HEAP32[$234 >> 2] | 0;
     $__nd$0$i$i$i$i$i = $235;
     while (1) {
      if ($__v$idx$val$i$i$i$i$i >>> 0 < (HEAP32[$__nd$0$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
       $238 = HEAP32[$__nd$0$i$i$i$i$i >> 2] | 0;
       if (!$238) {
        $$lcssa69 = $__nd$0$i$i$i$i$i;
        $__nd$0$i$i$i$i$i$lcssa68 = $__nd$0$i$i$i$i$i;
        label = 90;
        break;
       } else $__nd$0$be$in$i$i$i$i$i = $238;
      } else {
       $240 = $__nd$0$i$i$i$i$i + 4 | 0;
       $241 = HEAP32[$240 >> 2] | 0;
       if (!$241) {
        $$lcssa = $240;
        $__nd$0$i$i$i$i$i$lcssa = $__nd$0$i$i$i$i$i;
        label = 93;
        break;
       } else $__nd$0$be$in$i$i$i$i$i = $241;
      }
      $__nd$0$i$i$i$i$i = $__nd$0$be$in$i$i$i$i$i;
     }
     if ((label | 0) == 90) {
      label = 0;
      $$0$i$i7$i$i$i = $$lcssa69;
      $257 = $__nd$0$i$i$i$i$i$lcssa68;
      break;
     } else if ((label | 0) == 93) {
      label = 0;
      $$0$i$i7$i$i$i = $$lcssa;
      $257 = $__nd$0$i$i$i$i$i$lcssa;
      break;
     }
    } while (0);
    $243 = __Znwj(24) | 0;
    $245 = $234;
    $250 = HEAP32[$245 + 4 >> 2] | 0;
    $251 = $243 + 16 | 0;
    HEAP32[$251 >> 2] = HEAP32[$245 >> 2];
    HEAP32[$251 + 4 >> 2] = $250;
    HEAP32[$243 >> 2] = 0;
    HEAP32[$243 + 4 >> 2] = 0;
    HEAP32[$243 + 8 >> 2] = $257;
    HEAP32[$$0$i$i7$i$i$i >> 2] = $243;
    $259 = HEAP32[HEAP32[$155 >> 2] >> 2] | 0;
    if (!$259) $262 = $243; else {
     HEAP32[$155 >> 2] = $259;
     $262 = HEAP32[$$0$i$i7$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$233 >> 2] | 0, $262);
    HEAP32[$158 >> 2] = (HEAP32[$158 >> 2] | 0) + 1;
    $266 = HEAP32[$__first$0414$i$i$i + 4 >> 2] | 0;
    if (!$266) {
     $$0$i$i$i$i$i = $__first$0414$i$i$i;
     while (1) {
      $271 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$271 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
       $$cast$i$i$i$i$i$lcssa = $271;
       break;
      } else $$0$i$i$i$i$i = $271;
     }
     $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i = $266;
     while (1) {
      $268 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
      if (!$268) {
       $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i = $268;
     }
     $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
    }
    if (($$01$i$i$i$i$i | 0) == ($157 | 0)) break; else $__first$0414$i$i$i = $$01$i$i$i$i$i;
   }
   $$pre$phi51Z2D = $157;
   $$pre$phiZ2D = $157;
  }
 } while (0);
 HEAP8[(HEAP32[$$idx3$i >> 2] | 0) + -108 >> 0] = 0;
 $$idx$val$i13 = HEAP32[$up_values >> 2] | 0;
 if (($$idx$val$i13 | 0) == ($$pre$phi51Z2D | 0)) {
  STACKTOP = sp;
  return;
 }
 $$idx$val$i132037 = $$idx$val$i13;
 while (1) {
  if (!(HEAP32[$$idx$val$i132037 + 20 >> 2] | 0)) {
   label = 108;
   break;
  }
  $281 = HEAP32[$$idx$val$i132037 + 4 >> 2] | 0;
  if (!$281) {
   $$0$i$i$i19 = $$idx$val$i132037;
   while (1) {
    $286 = HEAP32[$$0$i$i$i19 + 8 >> 2] | 0;
    if ((HEAP32[$286 >> 2] | 0) == ($$0$i$i$i19 | 0)) {
     $$cast$i$i$i$lcssa = $286;
     break;
    } else $$0$i$i$i19 = $286;
   }
   $$01$i$i$i = $$cast$i$i$i$lcssa;
  } else {
   $$0$i$i$i$i18 = $281;
   while (1) {
    $283 = HEAP32[$$0$i$i$i$i18 >> 2] | 0;
    if (!$283) {
     $$0$i$i$i$i18$lcssa = $$0$i$i$i$i18;
     break;
    } else $$0$i$i$i$i18 = $283;
   }
   $$01$i$i$i = $$0$i$i$i$i18$lcssa;
  }
  if (($$01$i$i$i | 0) == ($$pre$phiZ2D | 0)) break; else $$idx$val$i132037 = $$01$i$i$i;
 }
 if ((label | 0) == 108) ___assert_fail(38928, 38952, 363, 38960);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_($this, $loc, $a, $b) {
 $this = $this | 0;
 $loc = $loc | 0;
 $a = $a | 0;
 $b = $b | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$lcssa = 0, $$0$i$i$i1$i$i$i$i = 0, $$0$i$i$i1$i$i$i$i$lcssa = 0, $$0$i$i3$i$i$i$i = 0, $$01 = 0, $$01$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i6$i$i$i$i = 0, $$03 = 0, $$1 = 0, $$1$ph = 0, $$1$ph46 = 0, $$12 = 0, $$14 = 0, $$cast$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$lcssa = 0, $$cast$i$i4$i$i$i$i$lcssa = 0, $$idx$val$i17 = 0, $$idx$val28 = 0, $$idx1$val$i$i$i$i$i = 0, $$idx6 = 0, $$idx8 = 0, $$idx8$val = 0, $$idx9 = 0, $$idx9$val = 0, $$pre$phi37Z2D = 0, $$pre$phi39Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $101 = 0, $102 = 0, $104 = 0, $107 = 0, $111 = 0, $113 = 0, $115 = 0, $117 = 0, $118 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $131 = 0, $133 = 0, $145 = 0, $153 = 0, $154 = 0, $159 = 0, $16 = 0, $161 = 0, $164 = 0, $166 = 0, $168 = 0, $17 = 0, $173 = 0, $174 = 0, $178 = 0, $179 = 0, $181 = 0, $182 = 0, $183 = 0, $189 = 0, $191 = 0, $203 = 0, $210 = 0, $211 = 0, $213 = 0, $215 = 0, $216 = 0, $217 = 0, $219 = 0, $220 = 0, $222 = 0, $224 = 0, $226 = 0, $227 = 0, $229 = 0, $231 = 0, $234 = 0, $235 = 0, $237 = 0, $240 = 0, $242 = 0, $245 = 0, $25 = 0, $254 = 0, $256 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $263 = 0, $268 = 0, $270 = 0, $275 = 0, $277 = 0, $285 = 0, $286 = 0, $29 = 0, $33 = 0, $36 = 0, $37 = 0, $41 = 0, $42 = 0, $45 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $69 = 0, $7 = 0, $71 = 0, $72 = 0, $79 = 0, $80 = 0, $81 = 0, $84 = 0, $86 = 0, $91 = 0, $92 = 0, $94 = 0, $97 = 0, $__lhs_sz$03$i = 0, $__lp$04$i = 0, $__rp$05$i = 0, $__v$i$i$i = 0, $different$0$off0 = 0, $different$0$off0$ph = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $fields_a = 0, $fields_b = 0, $i$027 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $this$idx$val$i$i$i = 0, $this$idx2$val$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $__v$i$i$i = sp + 52 | 0;
 $fields_a = sp + 40 | 0;
 $fields_b = sp + 28 | 0;
 $0 = sp;
 $1 = HEAP32[$a >> 2] | 0;
 if (($1 | 0) != (HEAP32[$b >> 2] | 0)) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 switch ($1 | 0) {
 case 0:
  {
   $$1 = 1;
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 2:
  {
   $$1 = +HEAPF64[$a + 8 >> 3] == +HEAPF64[$b + 8 >> 3];
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 1:
  {
   $$1 = (HEAP8[$a + 8 >> 0] | 0) == (HEAP8[$b + 8 >> 0] | 0);
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 16:
  {
   $5 = HEAP32[$a + 8 >> 2] | 0;
   $7 = HEAP32[$b + 8 >> 2] | 0;
   $$idx8 = $5 + 8 | 0;
   $$idx8$val = HEAP32[$$idx8 >> 2] | 0;
   $$idx9 = $5 + 12 | 0;
   $$idx9$val = HEAP32[$$idx9 >> 2] | 0;
   $$idx6 = $7 + 8 | 0;
   if (($$idx9$val - $$idx8$val | 0) != ((HEAP32[$7 + 12 >> 2] | 0) - (HEAP32[$$idx6 >> 2] | 0) | 0)) {
    $$1 = 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
   if (($$idx9$val | 0) == ($$idx8$val | 0)) {
    $$1 = 1;
    STACKTOP = sp;
    return $$1 | 0;
   }
   $16 = $this + 56 | 0;
   $17 = $this + 40 | 0;
   $$idx$val28 = $$idx8$val;
   $i$027 = 0;
   while (1) {
    $25 = HEAP32[$$idx$val28 + ($i$027 << 2) >> 2] | 0;
    $26 = $25 + 5 | 0;
    if (!(HEAP8[$26 >> 0] | 0)) {
     $29 = $25 + 40 | 0;
     $33 = $25 + 28 | 0;
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($16, $loc, $25, HEAP32[$29 >> 2] | 0, HEAP32[$25 + 44 >> 2] | 0, $33);
     __ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST($this, HEAP32[$25 + 48 >> 2] | 0);
     __ZN12_GLOBAL__N_15Stack3popEv($16);
     $36 = $25 + 8 | 0;
     HEAP32[$36 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
     HEAP32[$36 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
     HEAP32[$36 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
     HEAP32[$36 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
     HEAP8[$26 >> 0] = 1;
     HEAP32[$29 >> 2] = 0;
     $37 = $25 + 32 | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($33, HEAP32[$37 >> 2] | 0);
     HEAP32[$25 + 36 >> 2] = 0;
     HEAP32[$33 >> 2] = $37;
     HEAP32[$37 >> 2] = 0;
    }
    $41 = HEAP32[(HEAP32[$$idx6 >> 2] | 0) + ($i$027 << 2) >> 2] | 0;
    $42 = $41 + 5 | 0;
    if (!(HEAP8[$42 >> 0] | 0)) {
     $45 = $41 + 40 | 0;
     $49 = $41 + 28 | 0;
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($16, $loc, $41, HEAP32[$45 >> 2] | 0, HEAP32[$41 + 44 >> 2] | 0, $49);
     __ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST($this, HEAP32[$41 + 48 >> 2] | 0);
     __ZN12_GLOBAL__N_15Stack3popEv($16);
     $52 = $41 + 8 | 0;
     HEAP32[$52 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
     HEAP32[$52 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
     HEAP32[$52 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
     HEAP32[$52 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
     HEAP8[$42 >> 0] = 1;
     HEAP32[$45 >> 2] = 0;
     $53 = $41 + 32 | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($49, HEAP32[$53 >> 2] | 0);
     HEAP32[$41 + 36 >> 2] = 0;
     HEAP32[$49 >> 2] = $53;
     HEAP32[$53 >> 2] = 0;
     $$pre$phi37Z2D = $52;
    } else $$pre$phi37Z2D = $41 + 8 | 0;
    $i$027 = $i$027 + 1 | 0;
    if (!(__ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_($this, $loc, $25 + 8 | 0, $$pre$phi37Z2D) | 0)) {
     $$1$ph = 0;
     break;
    }
    $$idx$val28 = HEAP32[$$idx8 >> 2] | 0;
    if ($i$027 >>> 0 >= (HEAP32[$$idx9 >> 2] | 0) - $$idx$val28 >> 2 >>> 0) {
     $$1$ph = 1;
     break;
    }
   }
   $$1 = $$1$ph;
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 18:
  {
   $69 = HEAP32[$a + 8 >> 2] | 0;
   $71 = HEAP32[$b + 8 >> 2] | 0;
   __ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectEb($fields_a, $69, 1);
   __THREW__ = 0;
   invoke_viii(11, $fields_b | 0, $71 | 0, 1);
   $72 = __THREW__;
   __THREW__ = 0;
   if ($72 & 1) {
    $111 = ___cxa_find_matching_catch() | 0;
    $$12 = $111;
    $$14 = tempRet0;
    $$pre$phiZ2D = $fields_a + 4 | 0;
    $254 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_a, $254);
    ___resumeException($$12 | 0);
   }
   L36 : do if ((HEAP32[$fields_a + 8 >> 2] | 0) == (HEAP32[$fields_b + 8 >> 2] | 0)) {
    $79 = HEAP32[$fields_a >> 2] | 0;
    $80 = $fields_a + 4 | 0;
    $81 = HEAP32[$fields_b >> 2] | 0;
    do if (($79 | 0) != ($80 | 0)) {
     $101 = $81;
     $84 = $79;
     $86 = $81;
     $91 = $79;
     while (1) {
      if ((HEAP32[$84 + 16 >> 2] | 0) != (HEAP32[$86 + 16 >> 2] | 0)) {
       label = 81;
       break;
      }
      $92 = HEAP32[$91 + 4 >> 2] | 0;
      if (!$92) {
       $$0$i$i3$i$i$i$i = $91;
       while (1) {
        $97 = HEAP32[$$0$i$i3$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$97 >> 2] | 0) == ($$0$i$i3$i$i$i$i | 0)) {
         $$cast$i$i4$i$i$i$i$lcssa = $97;
         break;
        } else $$0$i$i3$i$i$i$i = $97;
       }
       $$01$i$i6$i$i$i$i = $$cast$i$i4$i$i$i$i$lcssa;
      } else {
       $$0$i$i$i1$i$i$i$i = $92;
       while (1) {
        $94 = HEAP32[$$0$i$i$i1$i$i$i$i >> 2] | 0;
        if (!$94) {
         $$0$i$i$i1$i$i$i$i$lcssa = $$0$i$i$i1$i$i$i$i;
         break;
        } else $$0$i$i$i1$i$i$i$i = $94;
       }
       $$01$i$i6$i$i$i$i = $$0$i$i$i1$i$i$i$i$lcssa;
      }
      $102 = HEAP32[$101 + 4 >> 2] | 0;
      if (!$102) {
       $$0$i$i$i$i$i$i = $101;
       while (1) {
        $107 = HEAP32[$$0$i$i$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$107 >> 2] | 0) == ($$0$i$i$i$i$i$i | 0)) {
         $$cast$i$i$i$i$i$i$lcssa = $107;
         break;
        } else $$0$i$i$i$i$i$i = $107;
       }
       $$01$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$lcssa;
      } else {
       $$0$i$i$i$i$i$i$i = $102;
       while (1) {
        $104 = HEAP32[$$0$i$i$i$i$i$i$i >> 2] | 0;
        if (!$104) {
         $$0$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i;
         break;
        } else $$0$i$i$i$i$i$i$i = $104;
       }
       $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$lcssa;
      }
      if (($$01$i$i6$i$i$i$i | 0) == ($80 | 0)) {
       label = 41;
       break;
      } else {
       $101 = $$01$i$i$i$i$i$i;
       $84 = $$01$i$i6$i$i$i$i;
       $86 = $$01$i$i$i$i$i$i;
       $91 = $$01$i$i6$i$i$i$i;
      }
     }
     if ((label | 0) == 41) break; else if ((label | 0) == 81) {
      $$0 = 0;
      $$pre$phi39Z2D = $80;
      break L36;
     }
    } while (0);
    $117 = $this + 56 | 0;
    __THREW__ = 0;
    invoke_vii(40, $0 | 0, $loc | 0);
    $118 = __THREW__;
    __THREW__ = 0;
    L67 : do if ($118 & 1) {
     $115 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $115;
     $lpad$phi$index2 = tempRet0;
     label = 40;
    } else {
     $120 = $0 + 12 | 0;
     $121 = $loc + 12 | 0;
     HEAP32[$120 + 0 >> 2] = HEAP32[$121 + 0 >> 2];
     HEAP32[$120 + 4 >> 2] = HEAP32[$121 + 4 >> 2];
     HEAP32[$120 + 8 >> 2] = HEAP32[$121 + 8 >> 2];
     HEAP32[$120 + 12 >> 2] = HEAP32[$121 + 12 >> 2];
     $122 = $this + 68 | 0;
     $123 = $this + 72 | 0;
     $124 = HEAP32[$123 >> 2] | 0;
     $125 = $this + 76 | 0;
     $126 = HEAP32[$125 >> 2] | 0;
     L69 : do if ($124 >>> 0 < $126 >>> 0) {
      if (!$124) $153 = 0; else {
       HEAP32[$124 >> 2] = 8;
       HEAP32[$124 + 4 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(40, $124 + 8 | 0, $0 | 0);
       $131 = __THREW__;
       __THREW__ = 0;
       if ($131 & 1) {
        label = 69;
        break;
       }
       $133 = $124 + 20 | 0;
       HEAP32[$133 + 0 >> 2] = HEAP32[$120 + 0 >> 2];
       HEAP32[$133 + 4 >> 2] = HEAP32[$120 + 4 >> 2];
       HEAP32[$133 + 8 >> 2] = HEAP32[$120 + 8 >> 2];
       HEAP32[$133 + 12 >> 2] = HEAP32[$120 + 12 >> 2];
       HEAP8[$124 + 36 >> 0] = 0;
       HEAP32[$124 + 72 >> 2] = 0;
       HEAP32[$124 + 80 >> 2] = 0;
       HEAP32[$124 + 84 >> 2] = 0;
       HEAP32[$124 + 76 >> 2] = $124 + 80;
       HEAP32[$124 + 88 >> 2] = 0;
       HEAP32[$124 + 96 >> 2] = 0;
       HEAP32[$124 + 100 >> 2] = 0;
       HEAP32[$124 + 92 >> 2] = $124 + 96;
       $145 = $124 + 104 | 0;
       HEAP32[$124 + 132 >> 2] = 0;
       HEAP32[$124 + 136 >> 2] = 0;
       HEAP32[$145 + 0 >> 2] = 0;
       HEAP32[$145 + 4 >> 2] = 0;
       HEAP32[$145 + 8 >> 2] = 0;
       HEAP32[$145 + 12 >> 2] = 0;
       HEAP32[$145 + 16 >> 2] = 0;
       HEAP32[$145 + 20 >> 2] = 0;
       HEAP32[$124 + 128 >> 2] = $124 + 132;
       HEAP32[$124 + 40 >> 2] = 0;
       HEAP32[$124 + 56 >> 2] = 0;
       $153 = HEAP32[$123 >> 2] | 0;
      }
      HEAP32[$123 >> 2] = $153 + 144;
      label = 61;
     } else {
      $154 = $this + 76 | 0;
      $this$idx2$val$i$i$i = HEAP32[$122 >> 2] | 0;
      $159 = (($124 - $this$idx2$val$i$i$i | 0) / 144 | 0) + 1 | 0;
      if ($159 >>> 0 > 29826161) {
       __THREW__ = 0;
       invoke_vi(182, $122 | 0);
       $161 = __THREW__;
       __THREW__ = 0;
       if ($161 & 1) {
        label = 69;
        break;
       }
       $$idx1$val$i$i$i$i$i = HEAP32[$125 >> 2] | 0;
       $this$idx$val$i$i$i = HEAP32[$122 >> 2] | 0;
      } else {
       $$idx1$val$i$i$i$i$i = $126;
       $this$idx$val$i$i$i = $this$idx2$val$i$i$i;
      }
      $164 = $this$idx$val$i$i$i;
      $166 = ($$idx1$val$i$i$i$i$i - $164 | 0) / 144 | 0;
      if ($166 >>> 0 < 14913080) {
       $168 = $166 << 1;
       $$0$i$i$i$i = $168 >>> 0 < $159 >>> 0 ? $159 : $168;
      } else $$0$i$i$i$i = 29826161;
      $173 = ((HEAP32[$123 >> 2] | 0) - $164 | 0) / 144 | 0;
      $174 = $__v$i$i$i + 12 | 0;
      HEAP32[$174 >> 2] = 0;
      HEAP32[$__v$i$i$i + 16 >> 2] = $154;
      if (!$$0$i$i$i$i) $181 = 0; else {
       __THREW__ = 0;
       $178 = invoke_ii(67, $$0$i$i$i$i * 144 | 0) | 0;
       $179 = __THREW__;
       __THREW__ = 0;
       if ($179 & 1) {
        label = 69;
        break;
       }
       $181 = $178;
      }
      HEAP32[$__v$i$i$i >> 2] = $181;
      $182 = $181 + ($173 * 144 | 0) | 0;
      $183 = $__v$i$i$i + 8 | 0;
      HEAP32[$183 >> 2] = $182;
      HEAP32[$__v$i$i$i + 4 >> 2] = $182;
      HEAP32[$174 >> 2] = $181 + ($$0$i$i$i$i * 144 | 0);
      do if ($182) {
       HEAP32[$182 >> 2] = 8;
       HEAP32[$181 + ($173 * 144 | 0) + 4 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(40, $181 + ($173 * 144 | 0) + 8 | 0, $0 | 0);
       $189 = __THREW__;
       __THREW__ = 0;
       if ($189 & 1) {
        $210 = ___cxa_find_matching_catch() | 0;
        $211 = tempRet0;
        __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i$i);
        $eh$lpad$body$index7Z2D = $211;
        $eh$lpad$body$indexZ2D = $210;
        break L69;
       } else {
        $191 = $181 + ($173 * 144 | 0) + 20 | 0;
        HEAP32[$191 + 0 >> 2] = HEAP32[$120 + 0 >> 2];
        HEAP32[$191 + 4 >> 2] = HEAP32[$120 + 4 >> 2];
        HEAP32[$191 + 8 >> 2] = HEAP32[$120 + 8 >> 2];
        HEAP32[$191 + 12 >> 2] = HEAP32[$120 + 12 >> 2];
        HEAP8[$181 + ($173 * 144 | 0) + 36 >> 0] = 0;
        HEAP32[$181 + ($173 * 144 | 0) + 72 >> 2] = 0;
        HEAP32[$181 + ($173 * 144 | 0) + 80 >> 2] = 0;
        HEAP32[$181 + ($173 * 144 | 0) + 84 >> 2] = 0;
        HEAP32[$181 + ($173 * 144 | 0) + 76 >> 2] = $181 + ($173 * 144 | 0) + 80;
        HEAP32[$181 + ($173 * 144 | 0) + 88 >> 2] = 0;
        HEAP32[$181 + ($173 * 144 | 0) + 96 >> 2] = 0;
        HEAP32[$181 + ($173 * 144 | 0) + 100 >> 2] = 0;
        HEAP32[$181 + ($173 * 144 | 0) + 92 >> 2] = $181 + ($173 * 144 | 0) + 96;
        $203 = $181 + ($173 * 144 | 0) + 104 | 0;
        HEAP32[$181 + ($173 * 144 | 0) + 132 >> 2] = 0;
        HEAP32[$181 + ($173 * 144 | 0) + 136 >> 2] = 0;
        HEAP32[$203 + 0 >> 2] = 0;
        HEAP32[$203 + 4 >> 2] = 0;
        HEAP32[$203 + 8 >> 2] = 0;
        HEAP32[$203 + 12 >> 2] = 0;
        HEAP32[$203 + 16 >> 2] = 0;
        HEAP32[$203 + 20 >> 2] = 0;
        HEAP32[$181 + ($173 * 144 | 0) + 128 >> 2] = $181 + ($173 * 144 | 0) + 132;
        HEAP32[$181 + ($173 * 144 | 0) + 40 >> 2] = 0;
        HEAP32[$181 + ($173 * 144 | 0) + 56 >> 2] = 0;
        break;
       }
      } while (0);
      HEAP32[$183 >> 2] = $181 + (($173 + 1 | 0) * 144 | 0);
      __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($122, $__v$i$i$i);
      __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i$i);
      label = 61;
     } while (0);
     if ((label | 0) == 61) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $213 = HEAP32[$fields_a >> 2] | 0;
      do if (($213 | 0) == ($80 | 0)) $different$0$off0 = 1; else {
       $215 = $this + 40 | 0;
       $217 = $213;
       while (1) {
        $216 = $217 + 16 | 0;
        __THREW__ = 0;
        $219 = invoke_iiiii(9, $this | 0, $loc | 0, $69 | 0, HEAP32[$216 >> 2] | 0) | 0;
        $220 = __THREW__;
        __THREW__ = 0;
        if ($220 & 1) {
         label = 38;
         break;
        }
        __THREW__ = 0;
        invoke_vii(60, $this | 0, $219 | 0);
        $222 = __THREW__;
        __THREW__ = 0;
        if ($222 & 1) {
         label = 38;
         break;
        }
        __ZN12_GLOBAL__N_15Stack3popEv($117);
        $224 = (HEAP32[$123 >> 2] | 0) + -104 | 0;
        HEAP32[$224 + 0 >> 2] = HEAP32[$215 + 0 >> 2];
        HEAP32[$224 + 4 >> 2] = HEAP32[$215 + 4 >> 2];
        HEAP32[$224 + 8 >> 2] = HEAP32[$215 + 8 >> 2];
        HEAP32[$224 + 12 >> 2] = HEAP32[$215 + 12 >> 2];
        __THREW__ = 0;
        $226 = invoke_iiiii(9, $this | 0, $loc | 0, $71 | 0, HEAP32[$216 >> 2] | 0) | 0;
        $227 = __THREW__;
        __THREW__ = 0;
        if ($227 & 1) {
         label = 38;
         break;
        }
        __THREW__ = 0;
        invoke_vii(60, $this | 0, $226 | 0);
        $229 = __THREW__;
        __THREW__ = 0;
        if ($229 & 1) {
         label = 38;
         break;
        }
        __ZN12_GLOBAL__N_15Stack3popEv($117);
        $231 = (HEAP32[$123 >> 2] | 0) + -88 | 0;
        HEAP32[$231 + 0 >> 2] = HEAP32[$215 + 0 >> 2];
        HEAP32[$231 + 4 >> 2] = HEAP32[$215 + 4 >> 2];
        HEAP32[$231 + 8 >> 2] = HEAP32[$215 + 8 >> 2];
        HEAP32[$231 + 12 >> 2] = HEAP32[$215 + 12 >> 2];
        $$idx$val$i17 = HEAP32[$123 >> 2] | 0;
        __THREW__ = 0;
        $234 = invoke_iiiii(10, $this | 0, $loc | 0, $$idx$val$i17 + -104 | 0, $$idx$val$i17 + -88 | 0) | 0;
        $235 = __THREW__;
        __THREW__ = 0;
        if ($235 & 1) {
         label = 38;
         break;
        }
        if (!$234) {
         $different$0$off0$ph = 0;
         label = 79;
         break;
        }
        $240 = HEAP32[$217 + 4 >> 2] | 0;
        if (!$240) {
         $$0$i$i = $217;
         while (1) {
          $245 = HEAP32[$$0$i$i + 8 >> 2] | 0;
          if ((HEAP32[$245 >> 2] | 0) == ($$0$i$i | 0)) {
           $$cast$i$i$lcssa = $245;
           break;
          } else $$0$i$i = $245;
         }
         $$01$i$i = $$cast$i$i$lcssa;
        } else {
         $$0$i$i$i = $240;
         while (1) {
          $242 = HEAP32[$$0$i$i$i >> 2] | 0;
          if (!$242) {
           $$0$i$i$i$lcssa = $$0$i$i$i;
           break;
          } else $$0$i$i$i = $242;
         }
         $$01$i$i = $$0$i$i$i$lcssa;
        }
        if (($$01$i$i | 0) == ($80 | 0)) {
         $different$0$off0$ph = 1;
         label = 79;
         break;
        } else $217 = $$01$i$i;
       }
       if ((label | 0) == 38) {
        $113 = ___cxa_find_matching_catch() | 0;
        $lpad$phi$index = $113;
        $lpad$phi$index2 = tempRet0;
        label = 40;
        break L67;
       } else if ((label | 0) == 79) {
        $different$0$off0 = $different$0$off0$ph;
        break;
       }
      } while (0);
      __ZN12_GLOBAL__N_15Stack3popEv($117);
      $$0 = $different$0$off0;
      $$pre$phi39Z2D = $80;
      break L36;
     } else if ((label | 0) == 69) {
      $237 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$index7Z2D = tempRet0;
      $eh$lpad$body$indexZ2D = $237;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     $$01 = $eh$lpad$body$indexZ2D;
     $$03 = $eh$lpad$body$index7Z2D;
    } while (0);
    if ((label | 0) == 40) {
     $$01 = $lpad$phi$index;
     $$03 = $lpad$phi$index2;
    }
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_b, HEAP32[$fields_b + 4 >> 2] | 0);
    $$12 = $$01;
    $$14 = $$03;
    $$pre$phiZ2D = $80;
    $254 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_a, $254);
    ___resumeException($$12 | 0);
   } else {
    $$0 = 0;
    $$pre$phi39Z2D = $fields_a + 4 | 0;
   } while (0);
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_b, HEAP32[$fields_b + 4 >> 2] | 0);
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_a, HEAP32[$$pre$phi39Z2D >> 2] | 0);
   $$1 = $$0;
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 19:
  {
   $256 = HEAP32[$a + 8 >> 2] | 0;
   $258 = HEAP32[$b + 8 >> 2] | 0;
   $259 = $256 + 8 | 0;
   $260 = $258 + 8 | 0;
   $261 = HEAP8[$259 >> 0] | 0;
   $263 = ($261 & 1) == 0;
   if ($263) $275 = ($261 & 255) >>> 1; else $275 = HEAP32[$256 + 12 >> 2] | 0;
   $268 = HEAP8[$260 >> 0] | 0;
   $270 = ($268 & 1) == 0;
   if ($270) $277 = ($268 & 255) >>> 1; else $277 = HEAP32[$258 + 12 >> 2] | 0;
   if (($275 | 0) != ($277 | 0)) {
    $$1 = 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
   if ($263) $285 = $259 + 1 | 0; else $285 = HEAP32[$256 + 16 >> 2] | 0;
   if ($270) $286 = $260 + 1 | 0; else $286 = HEAP32[$258 + 16 >> 2] | 0;
   if (!$263) {
    $$1 = (_memcmp($285, $286, $275) | 0) == 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
   if (!$275) {
    $$1 = 1;
    STACKTOP = sp;
    return $$1 | 0;
   }
   $__lhs_sz$03$i = $275;
   $__lp$04$i = $285;
   $__rp$05$i = $286;
   while (1) {
    if ((HEAP8[$__lp$04$i >> 0] | 0) != (HEAP8[$__rp$05$i >> 0] | 0)) {
     $$1$ph46 = 0;
     break;
    }
    $__lhs_sz$03$i = $__lhs_sz$03$i + -1 | 0;
    if (!$__lhs_sz$03$i) {
     $$1$ph46 = 1;
     break;
    } else {
     $__lp$04$i = $__lp$04$i + 1 | 0;
     $__rp$05$i = $__rp$05$i + 1 | 0;
    }
   }
   $$1 = $$1$ph46;
   STACKTOP = sp;
   return $$1 | 0;
  }
 default:
  {
   $$1 = 0;
   STACKTOP = sp;
   return $$1 | 0;
  }
 }
 return 0;
}

function __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $from) {
 $this = $this | 0;
 $from = $from | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i$i106 = 0, $$0$i$i$i$i106$lcssa = 0, $$0$i$i$i$i127 = 0, $$0$i$i$i$i127$lcssa = 0, $$0$i$i$i$i83 = 0, $$0$i$i$i$i83$lcssa = 0, $$0$i$i$i$i89 = 0, $$0$i$i$i$i89$lcssa = 0, $$0$i$i$i108 = 0, $$0$i$i$i129 = 0, $$0$i$i$i85 = 0, $$0$i$i$i91 = 0, $$0$i10$i$i52 = 0, $$0$i9$i$i50 = 0, $$01$i$i$i = 0, $$01$i$i$i$i60 = 0, $$01$i$i$i111 = 0, $$01$i$i$i132 = 0, $$01$i$i$i88 = 0, $$01$i$i$i94 = 0, $$cast$i$i$i$lcssa = 0, $$cast$i$i$i109$lcssa = 0, $$cast$i$i$i130$lcssa = 0, $$cast$i$i$i86$lcssa = 0, $$cast$i$i$i92$lcssa = 0, $$idx$val$i = 0, $$idx$val$i103 = 0, $$idx$val$i105 = 0, $$idx$val$i105134175 = 0, $$idx$val$i124 = 0, $$idx$val$i136172 = 0, $$idx$val$i76 = 0, $$idx$val$i76135173 = 0, $$idx1$val$i$i$i$i44 = 0, $$idx10$val = 0, $$idx2$val = 0, $$idx3 = 0, $$idx3$val = 0, $$idx9$val = 0, $$pre$i$i$i63 = 0, $$pre$i$i64 = 0, $101 = 0, $103 = 0, $106 = 0, $11 = 0, $111 = 0, $113 = 0, $116 = 0, $119 = 0, $121 = 0, $124 = 0, $128 = 0, $133 = 0, $135 = 0, $139 = 0, $141 = 0, $142 = 0, $146 = 0, $149 = 0, $15 = 0, $151 = 0, $153 = 0, $155 = 0, $158 = 0, $16 = 0, $160 = 0, $163 = 0, $168 = 0, $171 = 0, $173 = 0, $18 = 0, $184 = 0, $187 = 0, $189 = 0, $19 = 0, $191 = 0, $193 = 0, $196 = 0, $198 = 0, $201 = 0, $206 = 0, $209 = 0, $214 = 0, $218 = 0, $219 = 0, $220 = 0, $23 = 0, $236 = 0, $238 = 0, $241 = 0, $242 = 0, $243 = 0, $249 = 0, $25 = 0, $251 = 0, $254 = 0, $257 = 0, $258 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $268 = 0, $27 = 0, $271 = 0, $273 = 0, $274 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $281 = 0, $283 = 0, $29 = 0, $293 = 0, $295 = 0, $297 = 0, $299 = 0, $300 = 0, $306 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $313 = 0, $315 = 0, $316 = 0, $318 = 0, $319 = 0, $327 = 0, $328 = 0, $33 = 0, $330 = 0, $332 = 0, $333 = 0, $335 = 0, $336 = 0, $342 = 0, $343 = 0, $35 = 0, $37 = 0, $39 = 0, $41 = 0, $43 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $64 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $75 = 0, $79 = 0, $8 = 0, $83 = 0, $84 = 0, $88 = 0, $9 = 0, $90 = 0, $93 = 0, $95 = 0, $98 = 0, $lpad$phi$index = 0, $lpad$phi$index8 = 0, $stack = 0, $stack$idx6$val = 0, $stack$idx6$val$lcssa = 0, $stack$idx6$val188 = 0, $stack$idx7$val = 0, $stack$idx7$val$lcssa = 0, $this$idx1$val$i$i47 = 0, $this$idx1$val11$i$i49 = 0, $this$idx1$val12$i$i51 = 0, $this$idx1$val8$i$i45 = 0, $this$idx2$val$i$i41 = 0, label = 0, sp = 0, $$01$i$i$i$i60$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $stack = sp;
 if (!$from) ___assert_fail(41472, 41488, 328, 41504);
 $5 = (HEAPU8[$this + 16 >> 0] | 0) + 1 & 255;
 HEAP32[$stack >> 2] = 0;
 $6 = $stack + 4 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $stack + 8 | 0;
 HEAP32[$7 >> 2] = 0;
 __THREW__ = 0;
 $8 = invoke_ii(67, 16) | 0;
 $9 = __THREW__;
 __THREW__ = 0;
 do if ($9 & 1) {
  $37 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $37;
  $lpad$phi$index8 = tempRet0;
 } else {
  $11 = $8 + 16 | 0;
  HEAP32[$8 >> 2] = $from;
  HEAP32[$8 + 4 >> 2] = 0;
  HEAP32[$8 + 8 >> 2] = 0;
  HEAP32[$8 + 12 >> 2] = 0;
  HEAP32[$stack >> 2] = $8;
  HEAP32[$6 >> 2] = $11;
  HEAP32[$7 >> 2] = $11;
  $16 = 1;
  $stack$idx6$val188 = $8;
  L7 : while (1) {
   $15 = $16 + -1 | 0;
   $18 = HEAP32[$stack$idx6$val188 + ($15 << 4) >> 2] | 0;
   $19 = $18 + 4 | 0;
   do if ((HEAP8[$19 >> 0] | 0) != $5 << 24 >> 24) {
    HEAP8[$19 >> 0] = $5;
    if ($18) {
     $59 = ___dynamic_cast($18, 38800, 38880, 0) | 0;
     if ($59) {
      $$idx$val$i = HEAP32[$59 + 8 >> 2] | 0;
      $62 = $59 + 12 | 0;
      if (($$idx$val$i | 0) == ($62 | 0)) break;
      $64 = $stack$idx6$val188 + ($15 << 4) + 4 | 0;
      $$idx$val$i136172 = $$idx$val$i;
      while (1) {
       __THREW__ = 0;
       invoke_vii(68, HEAP32[$$idx$val$i136172 + 20 >> 2] | 0, $64 | 0);
       $67 = __THREW__;
       __THREW__ = 0;
       if ($67 & 1) {
        label = 12;
        break L7;
       }
       $70 = HEAP32[$$idx$val$i136172 + 4 >> 2] | 0;
       if (!$70) {
        $$0$i$i$i = $$idx$val$i136172;
        while (1) {
         $75 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$75 >> 2] | 0) == ($$0$i$i$i | 0)) {
          $$cast$i$i$i$lcssa = $75;
          break;
         } else $$0$i$i$i = $75;
        }
        $$01$i$i$i = $$cast$i$i$i$lcssa;
       } else {
        $$0$i$i$i$i = $70;
        while (1) {
         $72 = HEAP32[$$0$i$i$i$i >> 2] | 0;
         if (!$72) {
          $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
          break;
         } else $$0$i$i$i$i = $72;
        }
        $$01$i$i$i = $$0$i$i$i$i$lcssa;
       }
       if (($$01$i$i$i | 0) == ($62 | 0)) break; else $$idx$val$i136172 = $$01$i$i$i;
      }
      break;
     }
     $79 = ___dynamic_cast($18, 38800, 39144, 0) | 0;
     if ($79) {
      $83 = $stack$idx6$val188 + ($15 << 4) + 4 | 0;
      __THREW__ = 0;
      invoke_vii(68, HEAP32[$79 + 8 >> 2] | 0, $83 | 0);
      $84 = __THREW__;
      __THREW__ = 0;
      if ($84 & 1) {
       label = 13;
       break L7;
      }
      __THREW__ = 0;
      invoke_vii(68, HEAP32[$79 + 12 >> 2] | 0, $83 | 0);
      $88 = __THREW__;
      __THREW__ = 0;
      if ($88 & 1) {
       label = 13;
       break L7;
      } else break;
     }
     $90 = ___dynamic_cast($18, 38800, 39264, 0) | 0;
     if ($90) {
      $$idx$val$i76 = HEAP32[$90 + 8 >> 2] | 0;
      $93 = $90 + 12 | 0;
      if (($$idx$val$i76 | 0) != ($93 | 0)) {
       $95 = $stack$idx6$val188 + ($15 << 4) + 4 | 0;
       $$idx$val$i76135173 = $$idx$val$i76;
       while (1) {
        __THREW__ = 0;
        invoke_vii(68, HEAP32[$$idx$val$i76135173 + 20 >> 2] | 0, $95 | 0);
        $98 = __THREW__;
        __THREW__ = 0;
        if ($98 & 1) {
         label = 11;
         break L7;
        }
        $101 = HEAP32[$$idx$val$i76135173 + 4 >> 2] | 0;
        if (!$101) {
         $$0$i$i$i91 = $$idx$val$i76135173;
         while (1) {
          $106 = HEAP32[$$0$i$i$i91 + 8 >> 2] | 0;
          if ((HEAP32[$106 >> 2] | 0) == ($$0$i$i$i91 | 0)) {
           $$cast$i$i$i92$lcssa = $106;
           break;
          } else $$0$i$i$i91 = $106;
         }
         $$01$i$i$i94 = $$cast$i$i$i92$lcssa;
        } else {
         $$0$i$i$i$i89 = $101;
         while (1) {
          $103 = HEAP32[$$0$i$i$i$i89 >> 2] | 0;
          if (!$103) {
           $$0$i$i$i$i89$lcssa = $$0$i$i$i$i89;
           break;
          } else $$0$i$i$i$i89 = $103;
         }
         $$01$i$i$i94 = $$0$i$i$i$i89$lcssa;
        }
        if (($$01$i$i$i94 | 0) == ($93 | 0)) break; else $$idx$val$i76135173 = $$01$i$i$i94;
       }
      }
      $$idx$val$i105 = HEAP32[$90 + 28 >> 2] | 0;
      $111 = $90 + 32 | 0;
      if (($$idx$val$i105 | 0) == ($111 | 0)) break;
      $113 = $stack$idx6$val188 + ($15 << 4) + 4 | 0;
      $$idx$val$i105134175 = $$idx$val$i105;
      while (1) {
       __THREW__ = 0;
       invoke_vii(68, HEAP32[$$idx$val$i105134175 + 20 >> 2] | 0, $113 | 0);
       $116 = __THREW__;
       __THREW__ = 0;
       if ($116 & 1) {
        label = 10;
        break L7;
       }
       $119 = HEAP32[$$idx$val$i105134175 + 4 >> 2] | 0;
       if (!$119) {
        $$0$i$i$i129 = $$idx$val$i105134175;
        while (1) {
         $124 = HEAP32[$$0$i$i$i129 + 8 >> 2] | 0;
         if ((HEAP32[$124 >> 2] | 0) == ($$0$i$i$i129 | 0)) {
          $$cast$i$i$i130$lcssa = $124;
          break;
         } else $$0$i$i$i129 = $124;
        }
        $$01$i$i$i132 = $$cast$i$i$i130$lcssa;
       } else {
        $$0$i$i$i$i127 = $119;
        while (1) {
         $121 = HEAP32[$$0$i$i$i$i127 >> 2] | 0;
         if (!$121) {
          $$0$i$i$i$i127$lcssa = $$0$i$i$i$i127;
          break;
         } else $$0$i$i$i$i127 = $121;
        }
        $$01$i$i$i132 = $$0$i$i$i$i127$lcssa;
       }
       if (($$01$i$i$i132 | 0) == ($111 | 0)) break; else $$idx$val$i105134175 = $$01$i$i$i132;
      }
      break;
     }
     $128 = ___dynamic_cast($18, 38800, 39200, 0) | 0;
     if ($128) {
      __THREW__ = 0;
      invoke_vii(68, HEAP32[$128 + 8 >> 2] | 0, $stack$idx6$val188 + ($15 << 4) + 4 | 0);
      $133 = __THREW__;
      __THREW__ = 0;
      if ($133 & 1) {
       label = 13;
       break L7;
      } else break;
     }
     $135 = ___dynamic_cast($18, 38800, 41552, 0) | 0;
     if ($135) {
      $$idx9$val = HEAP32[$135 + 8 >> 2] | 0;
      $$idx10$val = HEAP32[$135 + 12 >> 2] | 0;
      if (($$idx9$val | 0) == ($$idx10$val | 0)) break;
      $139 = $stack$idx6$val188 + ($15 << 4) + 4 | 0;
      $141 = $$idx9$val;
      do {
       __THREW__ = 0;
       invoke_vii(68, HEAP32[$141 >> 2] | 0, $139 | 0);
       $142 = __THREW__;
       __THREW__ = 0;
       if ($142 & 1) {
        label = 9;
        break L7;
       }
       $141 = $141 + 4 | 0;
      } while (($141 | 0) != ($$idx10$val | 0));
      break;
     }
     $146 = ___dynamic_cast($18, 38800, 40760, 0) | 0;
     if ($146) {
      $$idx$val$i124 = HEAP32[$146 + 8 >> 2] | 0;
      $149 = $146 + 12 | 0;
      if (($$idx$val$i124 | 0) != ($149 | 0)) {
       $151 = $stack$idx6$val188 + ($15 << 4) + 4 | 0;
       $153 = $$idx$val$i124;
       while (1) {
        __THREW__ = 0;
        invoke_vii(68, HEAP32[$153 + 20 >> 2] | 0, $151 | 0);
        $155 = __THREW__;
        __THREW__ = 0;
        if ($155 & 1) {
         label = 8;
         break L7;
        }
        $158 = HEAP32[$153 + 4 >> 2] | 0;
        if (!$158) {
         $$0$i$i$i108 = $153;
         while (1) {
          $163 = HEAP32[$$0$i$i$i108 + 8 >> 2] | 0;
          if ((HEAP32[$163 >> 2] | 0) == ($$0$i$i$i108 | 0)) {
           $$cast$i$i$i109$lcssa = $163;
           break;
          } else $$0$i$i$i108 = $163;
         }
         $$01$i$i$i111 = $$cast$i$i$i109$lcssa;
        } else {
         $$0$i$i$i$i106 = $158;
         while (1) {
          $160 = HEAP32[$$0$i$i$i$i106 >> 2] | 0;
          if (!$160) {
           $$0$i$i$i$i106$lcssa = $$0$i$i$i$i106;
           break;
          } else $$0$i$i$i$i106 = $160;
         }
         $$01$i$i$i111 = $$0$i$i$i$i106$lcssa;
        }
        if (($$01$i$i$i111 | 0) == ($149 | 0)) break; else $153 = $$01$i$i$i111;
       }
      }
      $168 = HEAP32[$146 + 20 >> 2] | 0;
      if (!$168) break;
      __THREW__ = 0;
      invoke_vii(68, $168 | 0, $stack$idx6$val188 + ($15 << 4) + 4 | 0);
      $171 = __THREW__;
      __THREW__ = 0;
      if ($171 & 1) {
       label = 13;
       break L7;
      } else break;
     }
     $173 = ___dynamic_cast($18, 38800, 39040, 0) | 0;
     if ($173) {
      if (HEAP8[$173 + 5 >> 0] | 0) {
       if (!(HEAP32[$173 + 8 >> 2] & 16)) break;
       __THREW__ = 0;
       invoke_vii(68, HEAP32[$173 + 16 >> 2] | 0, $stack$idx6$val188 + ($15 << 4) + 4 | 0);
       $184 = __THREW__;
       __THREW__ = 0;
       if ($184 & 1) {
        label = 13;
        break L7;
       } else break;
      }
      $$idx$val$i103 = HEAP32[$173 + 28 >> 2] | 0;
      $187 = $173 + 32 | 0;
      if (($$idx$val$i103 | 0) != ($187 | 0)) {
       $189 = $stack$idx6$val188 + ($15 << 4) + 4 | 0;
       $191 = $$idx$val$i103;
       while (1) {
        __THREW__ = 0;
        invoke_vii(68, HEAP32[$191 + 20 >> 2] | 0, $189 | 0);
        $193 = __THREW__;
        __THREW__ = 0;
        if ($193 & 1) {
         label = 7;
         break L7;
        }
        $196 = HEAP32[$191 + 4 >> 2] | 0;
        if (!$196) {
         $$0$i$i$i85 = $191;
         while (1) {
          $201 = HEAP32[$$0$i$i$i85 + 8 >> 2] | 0;
          if ((HEAP32[$201 >> 2] | 0) == ($$0$i$i$i85 | 0)) {
           $$cast$i$i$i86$lcssa = $201;
           break;
          } else $$0$i$i$i85 = $201;
         }
         $$01$i$i$i88 = $$cast$i$i$i86$lcssa;
        } else {
         $$0$i$i$i$i83 = $196;
         while (1) {
          $198 = HEAP32[$$0$i$i$i$i83 >> 2] | 0;
          if (!$198) {
           $$0$i$i$i$i83$lcssa = $$0$i$i$i$i83;
           break;
          } else $$0$i$i$i$i83 = $198;
         }
         $$01$i$i$i88 = $$0$i$i$i$i83$lcssa;
        }
        if (($$01$i$i$i88 | 0) == ($187 | 0)) break; else $191 = $$01$i$i$i88;
       }
      }
      $206 = HEAP32[$173 + 40 >> 2] | 0;
      if ($206) {
       __THREW__ = 0;
       invoke_vii(68, $206 | 0, $stack$idx6$val188 + ($15 << 4) + 4 | 0);
       $209 = __THREW__;
       __THREW__ = 0;
       if ($209 & 1) {
        label = 13;
        break L7;
       }
      }
     }
    }
   } while (0);
   $$idx2$val = HEAP32[$stack$idx6$val188 + ($15 << 4) + 4 >> 2] | 0;
   $$idx3 = $stack$idx6$val188 + ($15 << 4) + 8 | 0;
   $$idx3$val = HEAP32[$$idx3 >> 2] | 0;
   $214 = $$idx3$val - $$idx2$val >> 2;
   do if (!$214) {
    $308 = HEAP32[$6 >> 2] | 0;
    $309 = $308 + -16 | 0;
    $311 = $308;
    while (1) {
     $310 = $311 + -16 | 0;
     HEAP32[$6 >> 2] = $310;
     $313 = HEAP32[$311 + -12 >> 2] | 0;
     $315 = $313;
     if (!$313) $316 = $310; else {
      $318 = $311 + -8 | 0;
      $319 = HEAP32[$318 >> 2] | 0;
      if (($319 | 0) != ($313 | 0)) HEAP32[$318 >> 2] = $319 + (~(($319 + -4 - $315 | 0) >>> 2) << 2);
      __ZdlPv($313);
      $316 = HEAP32[$6 >> 2] | 0;
     }
     if (($316 | 0) == ($309 | 0)) break; else $311 = $316;
    }
   } else {
    $218 = HEAP32[$$idx2$val + ($214 + -1 << 2) >> 2] | 0;
    HEAP32[$$idx3 >> 2] = $$idx3$val + -4;
    $219 = HEAP32[$6 >> 2] | 0;
    $220 = HEAP32[$7 >> 2] | 0;
    if ($219 >>> 0 < $220 >>> 0) {
     if ($219) {
      HEAP32[$219 >> 2] = $218;
      HEAP32[$219 + 4 >> 2] = 0;
      HEAP32[$219 + 8 >> 2] = 0;
      HEAP32[$219 + 12 >> 2] = 0;
     }
     HEAP32[$6 >> 2] = $219 + 16;
     break;
    }
    $this$idx2$val$i$i41 = HEAP32[$stack >> 2] | 0;
    $236 = ($219 - $this$idx2$val$i$i41 >> 4) + 1 | 0;
    if ($236 >>> 0 > 268435455) {
     __THREW__ = 0;
     invoke_vi(182, $stack | 0);
     $238 = __THREW__;
     __THREW__ = 0;
     if ($238 & 1) {
      label = 13;
      break L7;
     }
     $$idx1$val$i$i$i$i44 = HEAP32[$7 >> 2] | 0;
     $241 = HEAP32[$stack >> 2] | 0;
    } else {
     $$idx1$val$i$i$i$i44 = $220;
     $241 = $this$idx2$val$i$i41;
    }
    $242 = $241;
    $243 = $$idx1$val$i$i$i$i44 - $242 | 0;
    if ($243 >> 4 >>> 0 < 134217727) {
     $249 = $243 >> 3;
     $251 = $249 >>> 0 < $236 >>> 0 ? $236 : $249;
     $this$idx1$val$i$i47 = HEAP32[$6 >> 2] | 0;
     $254 = $this$idx1$val$i$i47 - $242 >> 4;
     if (!$251) {
      $$0$i10$i$i52 = 0;
      $261 = 0;
      $262 = $254;
      $this$idx1$val12$i$i51 = $this$idx1$val$i$i47;
     } else {
      $$0$i9$i$i50 = $251;
      $343 = $254;
      $this$idx1$val11$i$i49 = $this$idx1$val$i$i47;
      label = 121;
     }
    } else {
     $this$idx1$val8$i$i45 = HEAP32[$6 >> 2] | 0;
     $$0$i9$i$i50 = 268435455;
     $343 = $this$idx1$val8$i$i45 - $242 >> 4;
     $this$idx1$val11$i$i49 = $this$idx1$val8$i$i45;
     label = 121;
    }
    if ((label | 0) == 121) {
     label = 0;
     __THREW__ = 0;
     $257 = invoke_ii(67, $$0$i9$i$i50 << 4 | 0) | 0;
     $258 = __THREW__;
     __THREW__ = 0;
     if ($258 & 1) {
      label = 13;
      break L7;
     }
     $$0$i10$i$i52 = $$0$i9$i$i50;
     $261 = $257;
     $262 = $343;
     $this$idx1$val12$i$i51 = $this$idx1$val11$i$i49;
    }
    $260 = $261 + ($262 << 4) | 0;
    $263 = $261 + ($$0$i10$i$i52 << 4) | 0;
    if ($260) {
     HEAP32[$260 >> 2] = $218;
     HEAP32[$261 + ($262 << 4) + 4 >> 2] = 0;
     HEAP32[$261 + ($262 << 4) + 8 >> 2] = 0;
     HEAP32[$261 + ($262 << 4) + 12 >> 2] = 0;
    }
    $268 = $261 + ($262 + 1 << 4) | 0;
    if (($this$idx1$val12$i$i51 | 0) == ($241 | 0)) {
     HEAP32[$stack >> 2] = $260;
     HEAP32[$6 >> 2] = $268;
     HEAP32[$7 >> 2] = $263;
     $306 = $241;
    } else {
     $271 = $this$idx1$val12$i$i51 + -16 - $242 | 0;
     $$01$i$i$i$i60 = $this$idx1$val12$i$i51;
     $274 = $260;
     while (1) {
      $$01$i$i$i$i60$looptemp = $$01$i$i$i$i60;
      $$01$i$i$i$i60 = $$01$i$i$i$i60 + -16 | 0;
      $273 = $274 + -16 | 0;
      HEAP32[$273 >> 2] = HEAP32[$$01$i$i$i$i60 >> 2];
      $276 = $274 + -12 | 0;
      HEAP32[$276 >> 2] = 0;
      $277 = $274 + -8 | 0;
      HEAP32[$277 >> 2] = 0;
      $278 = $274 + -4 | 0;
      HEAP32[$278 >> 2] = 0;
      $279 = $$01$i$i$i$i60$looptemp + -12 | 0;
      HEAP32[$276 >> 2] = HEAP32[$279 >> 2];
      $281 = $$01$i$i$i$i60$looptemp + -8 | 0;
      HEAP32[$277 >> 2] = HEAP32[$281 >> 2];
      $283 = $$01$i$i$i$i60$looptemp + -4 | 0;
      HEAP32[$278 >> 2] = HEAP32[$283 >> 2];
      HEAP32[$283 >> 2] = 0;
      HEAP32[$281 >> 2] = 0;
      HEAP32[$279 >> 2] = 0;
      HEAP32[$273 >> 2] = HEAP32[$$01$i$i$i$i60 >> 2];
      if (($$01$i$i$i$i60 | 0) == ($241 | 0)) break; else $274 = $274 + -16 | 0;
     }
     $$pre$i$i$i63 = HEAP32[$stack >> 2] | 0;
     $$pre$i$i64 = HEAP32[$6 >> 2] | 0;
     HEAP32[$stack >> 2] = $261 + ($262 + -1 - ($271 >>> 4) << 4);
     HEAP32[$6 >> 2] = $268;
     HEAP32[$7 >> 2] = $263;
     if (($$pre$i$i64 | 0) == ($$pre$i$i$i63 | 0)) $306 = $$pre$i$i$i63; else {
      $293 = $$pre$i$i64;
      do {
       $295 = HEAP32[$293 + -12 >> 2] | 0;
       $297 = $295;
       if ($295) {
        $299 = $293 + -8 | 0;
        $300 = HEAP32[$299 >> 2] | 0;
        if (($300 | 0) != ($295 | 0)) HEAP32[$299 >> 2] = $300 + (~(($300 + -4 - $297 | 0) >>> 2) << 2);
        __ZdlPv($295);
       }
       $293 = $293 + -16 | 0;
      } while (($293 | 0) != ($$pre$i$i$i63 | 0));
      $306 = $$pre$i$i$i63;
     }
    }
    if ($306) __ZdlPv($306);
   } while (0);
   $stack$idx6$val = HEAP32[$stack >> 2] | 0;
   $stack$idx7$val = HEAP32[$6 >> 2] | 0;
   $16 = $stack$idx7$val - $stack$idx6$val >> 4;
   if (!$16) {
    $stack$idx6$val$lcssa = $stack$idx6$val;
    $stack$idx7$val$lcssa = $stack$idx7$val;
    label = 145;
    break;
   } else $stack$idx6$val188 = $stack$idx6$val;
  }
  if ((label | 0) == 7) {
   $23 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $23;
   $lpad$phi$index8 = tempRet0;
   break;
  } else if ((label | 0) == 8) {
   $25 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $25;
   $lpad$phi$index8 = tempRet0;
   break;
  } else if ((label | 0) == 9) {
   $27 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $27;
   $lpad$phi$index8 = tempRet0;
   break;
  } else if ((label | 0) == 10) {
   $29 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $29;
   $lpad$phi$index8 = tempRet0;
   break;
  } else if ((label | 0) == 11) {
   $31 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $31;
   $lpad$phi$index8 = tempRet0;
   break;
  } else if ((label | 0) == 12) {
   $33 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $33;
   $lpad$phi$index8 = tempRet0;
   break;
  } else if ((label | 0) == 13) {
   $35 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $35;
   $lpad$phi$index8 = tempRet0;
   break;
  } else if ((label | 0) == 145) {
   if (!$stack$idx6$val$lcssa) {
    STACKTOP = sp;
    return;
   }
   if (($stack$idx7$val$lcssa | 0) == ($stack$idx6$val$lcssa | 0)) $342 = $stack$idx6$val$lcssa; else {
    $328 = $stack$idx7$val$lcssa;
    while (1) {
     $327 = $328 + -16 | 0;
     HEAP32[$6 >> 2] = $327;
     $330 = HEAP32[$328 + -12 >> 2] | 0;
     $332 = $330;
     if (!$330) $333 = $327; else {
      $335 = $328 + -8 | 0;
      $336 = HEAP32[$335 >> 2] | 0;
      if (($336 | 0) != ($330 | 0)) HEAP32[$335 >> 2] = $336 + (~(($336 + -4 - $332 | 0) >>> 2) << 2);
      __ZdlPv($330);
      $333 = HEAP32[$6 >> 2] | 0;
     }
     if (($333 | 0) == ($stack$idx6$val$lcssa | 0)) break; else $328 = $333;
    }
    $342 = HEAP32[$stack >> 2] | 0;
   }
   __ZdlPv($342);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $39 = HEAP32[$stack >> 2] | 0;
 if (!$39) ___resumeException($lpad$phi$index | 0);
 $41 = HEAP32[$6 >> 2] | 0;
 if (($41 | 0) == ($39 | 0)) $58 = $39; else {
  $44 = $41;
  while (1) {
   $43 = $44 + -16 | 0;
   HEAP32[$6 >> 2] = $43;
   $46 = HEAP32[$44 + -12 >> 2] | 0;
   $48 = $46;
   if (!$46) $49 = $43; else {
    $51 = $44 + -8 | 0;
    $52 = HEAP32[$51 >> 2] | 0;
    if (($52 | 0) != ($46 | 0)) HEAP32[$51 >> 2] = $52 + (~(($52 + -4 - $48 | 0) >>> 2) << 2);
    __ZdlPv($46);
    $49 = HEAP32[$6 >> 2] | 0;
   }
   if (($49 | 0) == ($39 | 0)) break; else $44 = $49;
  }
  $58 = HEAP32[$stack >> 2] | 0;
 }
 __ZdlPv($58);
 ___resumeException($lpad$phi$index | 0);
}

function __ZN12_GLOBAL__N_111Interpreter10makeObjectINS_23HeapComprehensionObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEEP3ASTS7_SH_EEENS_5ValueEDpT0_($agg$result, $this, $args, $args1, $args2, $args3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 $args3 = $args3 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i$i10$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i10$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$i$i12$i$i$i = 0, $$0$i$i$i$i$i$i33$i$i$i = 0, $$0$i$i$i$i$i$i33$i$i$i$lcssa = 0, $$0$i$i$i$i$i35$i$i$i = 0, $$0$i$i$i$i119$i$i$i$i$i = 0, $$0$i$i$i$i119$i$i$i$i$i$ph = 0, $$0$i$i$i$i119$i$i26$i$i$i = 0, $$0$i$i$i$i119$i$i26$i$i$i$ph = 0, $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i15$i$i$i = 0, $$01$i$i$i$i$i38$i$i$i = 0, $$cast$i$i$i$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$i$i$i13$i$i$i$lcssa = 0, $$cast$i$i$i$i$i36$i$i$i$lcssa = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx$val$i$i$i$i$i = 0, $$idx$val$i$i3$i$i$i = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i22$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa = 0, $$lcssa$i$i = 0, $$pre$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i8$i$i$i = 0, $$pre$i$i24$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $105 = 0, $108 = 0, $109 = 0, $111 = 0, $112 = 0, $116 = 0, $118 = 0, $12 = 0, $121 = 0, $124 = 0, $127 = 0, $128 = 0, $130 = 0, $133 = 0, $137 = 0, $138 = 0, $14 = 0, $140 = 0, $141 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $151 = 0, $152 = 0, $157 = 0, $160 = 0, $161 = 0, $162 = 0, $166 = 0, $168 = 0, $17 = 0, $170 = 0, $172 = 0, $173 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $182 = 0, $183 = 0, $185 = 0, $191 = 0, $192 = 0, $198 = 0, $2 = 0, $211 = 0, $214 = 0, $218 = 0, $22 = 0, $227 = 0, $232 = 0, $234 = 0, $238 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $26 = 0, $29 = 0, $3 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $47 = 0, $49 = 0, $52 = 0, $55 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $75 = 0, $76 = 0, $79 = 0, $81 = 0, $83 = 0, $86 = 0, $87 = 0, $91 = 0, $93 = 0, $95 = 0, $98 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa20 = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa19 = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0;
 HEAP32[$agg$result >> 2] = 18;
 $0 = __Znwj(40) | 0;
 HEAP32[$0 >> 2] = 41576;
 $1 = $0 + 8 | 0;
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 16 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$1 >> 2] = $2;
 $$idx$val$i$i$i$i$i = HEAP32[$args >> 2] | 0;
 $4 = $args + 4 | 0;
 do if (($$idx$val$i$i$i$i$i | 0) != ($4 | 0)) {
  $10 = $$idx$val$i$i$i$i$i;
  $241 = $$idx$val$i$i$i$i$i;
  while (1) {
   __THREW__ = 0;
   $6 = invoke_ii(67, 24) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) break;
   $12 = $10 + 16 | 0;
   $14 = HEAP32[$12 >> 2] | 0;
   $17 = HEAP32[$12 + 4 >> 2] | 0;
   $18 = $6 + 16 | 0;
   HEAP32[$18 >> 2] = $14;
   HEAP32[$18 + 4 >> 2] = $17;
   $22 = $14;
   $$pre$i$i$i$i$i$i$i$i$i = HEAP32[$2 >> 2] | 0;
   do if ((HEAP32[$1 >> 2] | 0) == ($2 | 0)) {
    $43 = $2;
    label = 13;
   } else {
    $24 = ($$pre$i$i$i$i$i$i$i$i$i | 0) == 0;
    if ($24) {
     $$0$i$i$i$i$i$i$i$i$i$i$i = $2;
     while (1) {
      $29 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$29 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i$i$i = $29; else {
       $$cast$i$i$i$i$i$i$i$i$i$i$i$lcssa = $29;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
     while (1) {
      $26 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$26) {
       $$0$i$i$i$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i$i$i$i = $26;
     }
     $$01$i$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i$i$lcssa;
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $22 >>> 0) {
     $43 = $$01$i$i$i$i$i$i$i$i$i$i$i;
     label = 13;
    } else if ($24) {
     $$0$i$i$i$i119$i$i$i$i$i = $2;
     $47 = $2;
     label = 23;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i$i$i$i >>> 0 > $22 >>> 0) {
       $36 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i$i >> 2] | 0;
       if (!$36) {
        $$0$i$i$i$i119$i$i$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa20 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
        label = 22;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be = $36;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i$i$i$i >>> 0 >= $22 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
        label = 26;
        break;
       }
       $39 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i + 4 | 0;
       $40 = HEAP32[$39 >> 2] | 0;
       if (!$40) {
        $$0$i$i$i$i119$i$i$i$i$i$ph = $39;
        $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa20 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
        label = 22;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be = $40;
      }
      $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$be;
     }
     if ((label | 0) == 22) {
      label = 0;
      $$0$i$i$i$i119$i$i$i$i$i = $$0$i$i$i$i119$i$i$i$i$i$ph;
      $47 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa20;
      label = 23;
      break;
     } else if ((label | 0) == 26) {
      label = 0;
      $55 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa;
      label = 27;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 13) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i$i$i$i) {
     $$0$i$i$i$i119$i$i$i$i$i = $2;
     $47 = $2;
     label = 23;
    } else {
     $42 = $43 + 4 | 0;
     $$pre$i$i$i$i$i = HEAP32[$42 >> 2] | 0;
     if (!$$pre$i$i$i$i$i) {
      $$0$i$i$i$i119$i$i$i$i$i = $42;
      $47 = $43;
      label = 23;
     } else {
      $55 = $$pre$i$i$i$i$i;
      label = 27;
     }
    }
   }
   if ((label | 0) == 23) {
    label = 0;
    HEAP32[$6 >> 2] = 0;
    HEAP32[$6 + 4 >> 2] = 0;
    HEAP32[$6 + 8 >> 2] = $47;
    HEAP32[$$0$i$i$i$i119$i$i$i$i$i >> 2] = $6;
    $49 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
    if (!$49) $52 = $6; else {
     HEAP32[$1 >> 2] = $49;
     $52 = HEAP32[$$0$i$i$i$i119$i$i$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $52);
    HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
    $58 = $10;
   } else if ((label | 0) == 27) {
    label = 0;
    if (($55 | 0) == ($6 | 0)) $58 = $241; else {
     __ZdlPv($6);
     $58 = $241;
    }
   }
   $59 = HEAP32[$58 + 4 >> 2] | 0;
   if (!$59) {
    $$0$i$i$i$i$i$i$i$i = $58;
    while (1) {
     $64 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$64 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$i$i$i$lcssa = $64;
      break;
     } else $$0$i$i$i$i$i$i$i$i = $64;
    }
    $$01$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i$i$i$i = $59;
    while (1) {
     $61 = HEAP32[$$0$i$i$i$i$i$i$i$i$i >> 2] | 0;
     if (!$61) {
      $$0$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i$i$i$i = $61;
    }
    $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i$i$i$i | 0) == ($4 | 0)) {
    label = 37;
    break;
   } else {
    $10 = $$01$i$i$i$i$i$i$i$i;
    $241 = $$01$i$i$i$i$i$i$i$i;
   }
  }
  if ((label | 0) == 37) break;
  $137 = ___cxa_find_matching_catch() | 0;
  $138 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$2 >> 2] | 0);
  $$0$i$i$i = $138;
  $$01$i$i$i = $137;
  __ZdlPv($0);
  ___resumeException($$01$i$i$i | 0);
 } while (0);
 HEAP32[$0 + 20 >> 2] = $args1;
 HEAP32[$0 + 24 >> 2] = $args2;
 $70 = $0 + 28 | 0;
 $71 = $0 + 32 | 0;
 HEAP32[$71 >> 2] = 0;
 $72 = $0 + 36 | 0;
 HEAP32[$72 >> 2] = 0;
 HEAP32[$70 >> 2] = $71;
 $$idx$val$i$i3$i$i$i = HEAP32[$args3 >> 2] | 0;
 $73 = $args3 + 4 | 0;
 do if (($$idx$val$i$i3$i$i$i | 0) != ($73 | 0)) {
  $242 = $$idx$val$i$i3$i$i$i;
  $79 = $$idx$val$i$i3$i$i$i;
  while (1) {
   __THREW__ = 0;
   $75 = invoke_ii(67, 24) | 0;
   $76 = __THREW__;
   __THREW__ = 0;
   if ($76 & 1) break;
   $81 = $79 + 16 | 0;
   $83 = HEAP32[$81 >> 2] | 0;
   $86 = HEAP32[$81 + 4 >> 2] | 0;
   $87 = $75 + 16 | 0;
   HEAP32[$87 >> 2] = $83;
   HEAP32[$87 + 4 >> 2] = $86;
   $91 = $83;
   $$pre$i$i$i$i$i$i8$i$i$i = HEAP32[$71 >> 2] | 0;
   do if ((HEAP32[$70 >> 2] | 0) == ($71 | 0)) {
    $112 = $71;
    label = 50;
   } else {
    $93 = ($$pre$i$i$i$i$i$i8$i$i$i | 0) == 0;
    if ($93) {
     $$0$i$i$i$i$i$i$i$i12$i$i$i = $71;
     while (1) {
      $98 = HEAP32[$$0$i$i$i$i$i$i$i$i12$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$98 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i12$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i12$i$i$i = $98; else {
       $$cast$i$i$i$i$i$i$i$i13$i$i$i$lcssa = $98;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i15$i$i$i = $$cast$i$i$i$i$i$i$i$i13$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i10$i$i$i = $$pre$i$i$i$i$i$i8$i$i$i;
     while (1) {
      $95 = HEAP32[$$0$i$i$i$i$i$i$i$i$i10$i$i$i + 4 >> 2] | 0;
      if (!$95) {
       $$0$i$i$i$i$i$i$i$i$i10$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i10$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i10$i$i$i = $95;
     }
     $$01$i$i$i$i$i$i$i$i15$i$i$i = $$0$i$i$i$i$i$i$i$i$i10$i$i$i$lcssa;
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i15$i$i$i + 16 >> 2] | 0) >>> 0 < $91 >>> 0) {
     $112 = $$01$i$i$i$i$i$i$i$i15$i$i$i;
     label = 50;
    } else if ($93) {
     $$0$i$i$i$i119$i$i26$i$i$i = $71;
     $116 = $71;
     label = 60;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i = $$pre$i$i$i$i$i$i8$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i22$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20$i$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i22$i$i$i >>> 0 > $91 >>> 0) {
       $105 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20$i$i$i >> 2] | 0;
       if (!$105) {
        $$0$i$i$i$i119$i$i26$i$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa19 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i;
        label = 59;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$be = $105;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i22$i$i$i >>> 0 >= $91 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i;
        label = 63;
        break;
       }
       $108 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i + 4 | 0;
       $109 = HEAP32[$108 >> 2] | 0;
       if (!$109) {
        $$0$i$i$i$i119$i$i26$i$i$i$ph = $108;
        $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa19 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i;
        label = 59;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$be = $109;
      }
      $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$be;
     }
     if ((label | 0) == 59) {
      label = 0;
      $$0$i$i$i$i119$i$i26$i$i$i = $$0$i$i$i$i119$i$i26$i$i$i$ph;
      $116 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa19;
      label = 60;
      break;
     } else if ((label | 0) == 63) {
      label = 0;
      $124 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa;
      label = 64;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 50) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i8$i$i$i) {
     $$0$i$i$i$i119$i$i26$i$i$i = $71;
     $116 = $71;
     label = 60;
    } else {
     $111 = $112 + 4 | 0;
     $$pre$i$i24$i$i$i = HEAP32[$111 >> 2] | 0;
     if (!$$pre$i$i24$i$i$i) {
      $$0$i$i$i$i119$i$i26$i$i$i = $111;
      $116 = $112;
      label = 60;
     } else {
      $124 = $$pre$i$i24$i$i$i;
      label = 64;
     }
    }
   }
   if ((label | 0) == 60) {
    label = 0;
    HEAP32[$75 >> 2] = 0;
    HEAP32[$75 + 4 >> 2] = 0;
    HEAP32[$75 + 8 >> 2] = $116;
    HEAP32[$$0$i$i$i$i119$i$i26$i$i$i >> 2] = $75;
    $118 = HEAP32[HEAP32[$70 >> 2] >> 2] | 0;
    if (!$118) $121 = $75; else {
     HEAP32[$70 >> 2] = $118;
     $121 = HEAP32[$$0$i$i$i$i119$i$i26$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$71 >> 2] | 0, $121);
    HEAP32[$72 >> 2] = (HEAP32[$72 >> 2] | 0) + 1;
    $127 = $79;
   } else if ((label | 0) == 64) {
    label = 0;
    if (($124 | 0) == ($75 | 0)) $127 = $242; else {
     __ZdlPv($75);
     $127 = $242;
    }
   }
   $128 = HEAP32[$127 + 4 >> 2] | 0;
   if (!$128) {
    $$0$i$i$i$i$i35$i$i$i = $127;
    while (1) {
     $133 = HEAP32[$$0$i$i$i$i$i35$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$133 >> 2] | 0) == ($$0$i$i$i$i$i35$i$i$i | 0)) {
      $$cast$i$i$i$i$i36$i$i$i$lcssa = $133;
      break;
     } else $$0$i$i$i$i$i35$i$i$i = $133;
    }
    $$01$i$i$i$i$i38$i$i$i = $$cast$i$i$i$i$i36$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i33$i$i$i = $128;
    while (1) {
     $130 = HEAP32[$$0$i$i$i$i$i$i33$i$i$i >> 2] | 0;
     if (!$130) {
      $$0$i$i$i$i$i$i33$i$i$i$lcssa = $$0$i$i$i$i$i$i33$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i33$i$i$i = $130;
    }
    $$01$i$i$i$i$i38$i$i$i = $$0$i$i$i$i$i$i33$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i38$i$i$i | 0) == ($73 | 0)) {
    label = 76;
    break;
   } else {
    $242 = $$01$i$i$i$i$i38$i$i$i;
    $79 = $$01$i$i$i$i$i38$i$i$i;
   }
  }
  if ((label | 0) == 76) break;
  $140 = ___cxa_find_matching_catch() | 0;
  $141 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($70, HEAP32[$71 >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$2 >> 2] | 0);
  $$0$i$i$i = $141;
  $$01$i$i$i = $140;
  __ZdlPv($0);
  ___resumeException($$01$i$i$i | 0);
 } while (0);
 $144 = $this + 20 | 0;
 $145 = $this + 24 | 0;
 $146 = HEAP32[$145 >> 2] | 0;
 $147 = $this + 28 | 0;
 $148 = HEAP32[$147 >> 2] | 0;
 if ($146 >>> 0 < $148 >>> 0) {
  if (!$146) $152 = 0; else {
   HEAP32[$146 >> 2] = $0;
   $152 = HEAP32[$145 >> 2] | 0;
  }
  $151 = $152 + 4 | 0;
  HEAP32[$145 >> 2] = $151;
  $$idx$pre$phi$i$iZZ2D = $144;
  $$idx1$val$i$i = $151;
 } else {
  $this$idx2$val$i$i$i$i = HEAP32[$144 >> 2] | 0;
  $157 = ($146 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
  if ($157 >>> 0 > 1073741823) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($144);
   $$idx1$val$i$i$i$i$i$i = HEAP32[$147 >> 2] | 0;
   $160 = HEAP32[$144 >> 2] | 0;
  } else {
   $$idx1$val$i$i$i$i$i$i = $148;
   $160 = $this$idx2$val$i$i$i$i;
  }
  $161 = $160;
  $162 = $$idx1$val$i$i$i$i$i$i - $161 | 0;
  if ($162 >> 2 >>> 0 < 536870911) {
   $168 = $162 >> 1;
   $170 = $168 >>> 0 < $157 >>> 0 ? $157 : $168;
   $172 = (HEAP32[$145 >> 2] | 0) - $161 | 0;
   $173 = $172 >> 2;
   if (!$170) {
    $$0$i8$i$i$i$i = 0;
    $178 = 0;
    $179 = $173;
    $183 = $172;
   } else {
    $$0$i7$i$i$i$i = $170;
    $243 = $173;
    $244 = $172;
    label = 86;
   }
  } else {
   $166 = (HEAP32[$145 >> 2] | 0) - $161 | 0;
   $$0$i7$i$i$i$i = 1073741823;
   $243 = $166 >> 2;
   $244 = $166;
   label = 86;
  }
  if ((label | 0) == 86) {
   $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
   $178 = __Znwj($$0$i7$i$i$i$i << 2) | 0;
   $179 = $243;
   $183 = $244;
  }
  $177 = $178 + ($179 << 2) | 0;
  if ($177) HEAP32[$177 >> 2] = $0;
  $182 = $178 + ($179 + 1 << 2) | 0;
  _memcpy($178 | 0, $160 | 0, $183 | 0) | 0;
  HEAP32[$144 >> 2] = $178;
  HEAP32[$145 >> 2] = $182;
  HEAP32[$147 >> 2] = $178 + ($$0$i8$i$i$i$i << 2);
  if (!$160) {
   $$idx$pre$phi$i$iZZ2D = $144;
   $$idx1$val$i$i = $182;
  } else {
   __ZdlPv($160);
   $$idx$pre$phi$i$iZZ2D = $144;
   $$idx1$val$i$i = HEAP32[$145 >> 2] | 0;
  }
 }
 $185 = $this + 16 | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[$185 >> 0] | 0;
 $191 = $$idx1$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
 $192 = $this + 36 | 0;
 HEAP32[$192 >> 2] = $191;
 if ($191 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
  $240 = $agg$result + 8 | 0;
  HEAP32[$240 >> 2] = $0;
  return;
 }
 $198 = $this + 32 | 0;
 if (!(+($191 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$198 >> 2] | 0) >>> 0))) {
  $240 = $agg$result + 8 | 0;
  HEAP32[$240 >> 2] = $0;
  return;
 }
 __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $0);
 __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this + 56 | 0, $this);
 if (HEAP32[$this + 40 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$this + 48 >> 2] | 0);
 $211 = (HEAP8[$185 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$185 >> 0] = $211;
 $$idx6$i$i = $this + 20 | 0;
 $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
 $$idx7$val12$i$i = HEAP32[$145 >> 2] | 0;
 if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
  $$idx6$val14$i$i = $$idx6$val11$i$i;
  $$idx7$val18$i$i = $$idx7$val12$i$i;
  $218 = $211;
  $i$013$i$i = 0;
  while (1) {
   $214 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
   if ((HEAP8[$214 + 4 >> 0] | 0) == $218 << 24 >> 24) {
    $$idx6$val$i$i = $$idx6$val14$i$i;
    $$idx7$val$i$i = $$idx7$val18$i$i;
    $i$1$i$i = $i$013$i$i;
   } else {
    if (!$214) {
     $$idx4$val$i$i = $$idx6$val14$i$i;
     $$idx5$val$i$i = $$idx7$val18$i$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$214 >> 2] | 0) + 4 >> 2] & 255]($214);
     $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $$idx5$val$i$i = HEAP32[$145 >> 2] | 0;
    }
    $227 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
    if (($i$013$i$i | 0) == ($227 | 0)) {
     $$idx6$val$pre$i$i = $$idx4$val$i$i;
     $232 = $$idx5$val$i$i;
    } else {
     HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($227 << 2) >> 2];
     $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $232 = HEAP32[$145 >> 2] | 0;
    }
    $scevgep4$i$i$i$i$i = $232 + -4 | 0;
    HEAP32[$145 >> 2] = $scevgep4$i$i$i$i$i;
    $$idx6$val$i$i = $$idx6$val$pre$i$i;
    $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
    $i$1$i$i = $i$013$i$i + -1 | 0;
   }
   $234 = $i$1$i$i + 1 | 0;
   $238 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
   if ($234 >>> 0 >= $238 >>> 0) {
    $$lcssa = $238;
    break;
   }
   $$idx6$val14$i$i = $$idx6$val$i$i;
   $$idx7$val18$i$i = $$idx7$val$i$i;
   $218 = HEAP8[$185 >> 0] | 0;
   $i$013$i$i = $234;
  }
  $$lcssa$i$i = $$lcssa;
 }
 HEAP32[$192 >> 2] = $$lcssa$i$i;
 HEAP32[$198 >> 2] = $$lcssa$i$i;
 $240 = $agg$result + 8 | 0;
 HEAP32[$240 >> 2] = $0;
 return;
}

function __Z24jsonnet_vm_execute_multiP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE5VmExtNS4_4lessISB_EENS9_INS4_4pairIKSB_SC_EEEEEEjddPFPcPvPKcSP_PSM_PiESN_b($agg$result, $alloc, $ast, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx, $string_output) {
 $agg$result = $agg$result | 0;
 $alloc = $alloc | 0;
 $ast = $ast | 0;
 $ext_vars = $ext_vars | 0;
 $max_stack = $max_stack | 0;
 $gc_min_objects = +$gc_min_objects;
 $gc_growth_trigger = +$gc_growth_trigger;
 $import_callback = $import_callback | 0;
 $ctx = $ctx | 0;
 $string_output = $string_output | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i15$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i = 0, $$0117$i = 0, $$0216$i = 0, $$07$i = 0, $$1$i = 0, $$13$i = 0, $$2$i = 0, $$24$i = 0, $$3$i = 0, $$35$i = 0, $$4$i = 0, $$46$i = 0, $$cast$i$i$i$i$lcssa = 0, $$cast$i$i$i$lcssa = 0, $$idx$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $103 = 0, $105 = 0, $107 = 0, $108 = 0, $11 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $117 = 0, $119 = 0, $122 = 0, $127 = 0, $129 = 0, $13 = 0, $130 = 0, $132 = 0, $133 = 0, $135 = 0, $136 = 0, $138 = 0, $140 = 0, $142 = 0, $144 = 0, $145 = 0, $147 = 0, $15 = 0, $150 = 0, $152 = 0, $155 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $165 = 0, $166 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $5 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $67 = 0, $69 = 0, $70 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $80 = 0, $81 = 0, $83 = 0, $84 = 0, $85 = 0, $87 = 0, $88 = 0, $90 = 0, $93 = 0, $94 = 0, $96 = 0, $97 = 0, $eh$lpad$body$i$i$index2Z2D = 0, $eh$lpad$body$i$i$indexZ2D = 0, $eh$lpad$body$index12Z2D = 0, $eh$lpad$body$indexZ2D = 0, $fields$i = 0, $loc$i = 0, $lpad$phi$i$index = 0, $lpad$phi$i$index7 = 0, $ss$i = 0, $vm = 0, $vstr$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400 | 0;
 $0 = sp + 376 | 0;
 $loc$i = sp + 348 | 0;
 $1 = sp + 336 | 0;
 $ss$i = sp + 192 | 0;
 $2 = sp + 180 | 0;
 $3 = sp + 168 | 0;
 $fields$i = sp + 156 | 0;
 $4 = sp + 144 | 0;
 $vstr$i = sp + 132 | 0;
 $5 = sp + 120 | 0;
 $vm = sp;
 __ZN12_GLOBAL__N_111InterpreterC2EP9AllocatorRKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE5VmExtNS3_4lessISA_EENS8_INS3_4pairIKSA_SB_EEEEEEjddPFPcPvPKcSO_PSL_PiESM_($vm, $alloc, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx);
 __THREW__ = 0;
 invoke_vii(60, $vm | 0, $ast | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $166 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index12Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $166;
  __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 $10 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $10;
 __THREW__ = 0;
 invoke_viii(3, $1 | 0, 38488, 20);
 $11 = __THREW__;
 __THREW__ = 0;
 do if ($11 & 1) {
  $77 = ___cxa_find_matching_catch() | 0;
  $$4$i = $77;
  $$46$i = tempRet0;
 } else {
  __THREW__ = 0;
  invoke_vii(40, $loc$i | 0, $1 | 0);
  $13 = __THREW__;
  __THREW__ = 0;
  if ($13 & 1) {
   $79 = ___cxa_find_matching_catch() | 0;
   $80 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$4$i = $79;
   $$46$i = $80;
   break;
  }
  $15 = $loc$i + 12 | 0;
  HEAP32[$15 + 0 >> 2] = 0;
  HEAP32[$15 + 4 >> 2] = 0;
  HEAP32[$15 + 8 >> 2] = 0;
  HEAP32[$15 + 12 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $16 = $vm + 40 | 0;
  L10 : do if ((HEAP32[$16 >> 2] | 0) == 18) {
   $90 = HEAP32[$vm + 48 >> 2] | 0;
   HEAP32[$fields$i + 4 >> 2] = 0;
   HEAP32[$fields$i + 8 >> 2] = 0;
   $93 = $fields$i + 4 | 0;
   HEAP32[$fields$i >> 2] = $93;
   __THREW__ = 0;
   invoke_viii(11, $4 | 0, $90 | 0, 1);
   $94 = __THREW__;
   __THREW__ = 0;
   L12 : do if ($94 & 1) {
    $105 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$i$index = $105;
    $lpad$phi$i$index7 = tempRet0;
    label = 41;
   } else {
    $96 = HEAP32[$4 >> 2] | 0;
    $97 = $4 + 4 | 0;
    do if (($96 | 0) != ($97 | 0)) {
     $111 = $96;
     while (1) {
      $112 = HEAP32[$111 + 16 >> 2] | 0;
      __THREW__ = 0;
      $113 = invoke_iii(29, $fields$i | 0, $112 | 0) | 0;
      $114 = __THREW__;
      __THREW__ = 0;
      if ($114 & 1) {
       label = 42;
       break;
      }
      HEAP32[$113 >> 2] = $112;
      $117 = HEAP32[$111 + 4 >> 2] | 0;
      if (!$117) {
       $$0$i$i$i = $111;
       while (1) {
        $122 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$122 >> 2] | 0) == ($$0$i$i$i | 0)) {
         $$cast$i$i$i$lcssa = $122;
         break;
        } else $$0$i$i$i = $122;
       }
       $$01$i$i$i = $$cast$i$i$i$lcssa;
      } else {
       $$0$i$i$i$i = $117;
       while (1) {
        $119 = HEAP32[$$0$i$i$i$i >> 2] | 0;
        if (!$119) {
         $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
         break;
        } else $$0$i$i$i$i = $119;
       }
       $$01$i$i$i = $$0$i$i$i$i$lcssa;
      }
      if (($$01$i$i$i | 0) == ($97 | 0)) {
       label = 36;
       break;
      } else $111 = $$01$i$i$i;
     }
     if ((label | 0) == 36) break; else if ((label | 0) == 42) {
      $107 = ___cxa_find_matching_catch() | 0;
      $108 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$97 >> 2] | 0);
      $$2$i = $107;
      $$24$i = $108;
      break L12;
     }
    } while (0);
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$97 >> 2] | 0);
    $100 = HEAP32[$fields$i >> 2] | 0;
    if (($100 | 0) == ($93 | 0)) {
     $165 = HEAP32[$93 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields$i, $165);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($loc$i);
     __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
     STACKTOP = sp;
     return;
    }
    $102 = $vm + 56 | 0;
    $$idx$i$i = $vm + 72 | 0;
    $127 = $100;
    while (1) {
     __THREW__ = 0;
     $129 = invoke_iiiii(9, $vm | 0, $loc$i | 0, $90 | 0, HEAP32[$127 + 28 >> 2] | 0) | 0;
     $130 = __THREW__;
     __THREW__ = 0;
     if ($130 & 1) {
      label = 39;
      break;
     }
     $132 = (HEAP32[$$idx$i$i >> 2] | 0) + -104 | 0;
     HEAP32[$132 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
     HEAP32[$132 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
     HEAP32[$132 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
     HEAP32[$132 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
     __THREW__ = 0;
     invoke_vii(60, $vm | 0, $129 | 0);
     $133 = __THREW__;
     __THREW__ = 0;
     if ($133 & 1) {
      label = 39;
      break;
     }
     $135 = $129 + 4 | 0;
     if ($string_output) {
      __THREW__ = 0;
      invoke_viii(10, $vstr$i | 0, $vm | 0, $135 | 0);
      $136 = __THREW__;
      __THREW__ = 0;
      if ($136 & 1) {
       label = 39;
       break;
      }
     } else {
      __THREW__ = 0;
      invoke_viii(3, $5 | 0, 48920, 0);
      $138 = __THREW__;
      __THREW__ = 0;
      if ($138 & 1) {
       label = 39;
       break;
      }
      __THREW__ = 0;
      invoke_viiiii(6, $vstr$i | 0, $vm | 0, $135 | 0, 1, $5 | 0);
      $140 = __THREW__;
      __THREW__ = 0;
      if ($140 & 1) {
       label = 69;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     }
     $142 = (HEAP32[$$idx$i$i >> 2] | 0) + -104 | 0;
     HEAP32[$16 + 0 >> 2] = HEAP32[$142 + 0 >> 2];
     HEAP32[$16 + 4 >> 2] = HEAP32[$142 + 4 >> 2];
     HEAP32[$16 + 8 >> 2] = HEAP32[$142 + 8 >> 2];
     HEAP32[$16 + 12 >> 2] = HEAP32[$142 + 12 >> 2];
     __ZN12_GLOBAL__N_15Stack3popEv($102);
     __THREW__ = 0;
     $144 = invoke_iii(30, $agg$result | 0, $127 + 16 | 0) | 0;
     $145 = __THREW__;
     __THREW__ = 0;
     if ($145 & 1) {
      label = 70;
      break;
     }
     __THREW__ = 0;
     invoke_iii(20, $144 | 0, $vstr$i | 0) | 0;
     $147 = __THREW__;
     __THREW__ = 0;
     if ($147 & 1) {
      label = 70;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vstr$i);
     $150 = HEAP32[$127 + 4 >> 2] | 0;
     if (!$150) {
      $$0$i$i$i15$i = $127;
      while (1) {
       $155 = HEAP32[$$0$i$i$i15$i + 8 >> 2] | 0;
       if ((HEAP32[$155 >> 2] | 0) == ($$0$i$i$i15$i | 0)) {
        $$cast$i$i$i$i$lcssa = $155;
        break;
       } else $$0$i$i$i15$i = $155;
      }
      $$01$i$i$i$i = $$cast$i$i$i$i$lcssa;
     } else {
      $$0$i$i$i$i$i = $150;
      while (1) {
       $152 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
       if (!$152) {
        $$0$i$i$i$i$i$lcssa = $$0$i$i$i$i$i;
        break;
       } else $$0$i$i$i$i$i = $152;
      }
      $$01$i$i$i$i = $$0$i$i$i$i$i$lcssa;
     }
     if (($$01$i$i$i$i | 0) == ($93 | 0)) {
      label = 75;
      break;
     } else $127 = $$01$i$i$i$i;
    }
    if ((label | 0) == 39) {
     $103 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i$index = $103;
     $lpad$phi$i$index7 = tempRet0;
     label = 41;
     break;
    } else if ((label | 0) == 69) {
     $159 = ___cxa_find_matching_catch() | 0;
     $160 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$2$i = $159;
     $$24$i = $160;
     break;
    } else if ((label | 0) == 70) {
     $161 = ___cxa_find_matching_catch() | 0;
     $162 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vstr$i);
     $$2$i = $161;
     $$24$i = $162;
     break;
    } else if ((label | 0) == 75) {
     $165 = HEAP32[$93 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields$i, $165);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($loc$i);
     __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 41) {
    $$2$i = $lpad$phi$i$index;
    $$24$i = $lpad$phi$i$index7;
   }
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields$i, HEAP32[$93 >> 2] | 0);
   $$3$i = $$2$i;
   $$35$i = $$24$i;
  } else {
   $19 = $ss$i + 64 | 0;
   $20 = $ss$i + 8 | 0;
   HEAP32[$20 >> 2] = 752;
   $21 = $ss$i + 12 | 0;
   HEAP32[$ss$i >> 2] = 900;
   HEAP32[$19 >> 2] = 920;
   HEAP32[$ss$i + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss$i + 64 | 0, $21 | 0);
   $24 = __THREW__;
   __THREW__ = 0;
   if ($24 & 1) {
    $36 = ___cxa_find_matching_catch() | 0;
    $$0$i$i = tempRet0;
    $$01$i$i = $36;
   } else {
    HEAP32[$ss$i + 136 >> 2] = 0;
    HEAP32[$ss$i + 140 >> 2] = -1;
    HEAP32[$ss$i >> 2] = 732;
    HEAP32[$19 >> 2] = 772;
    HEAP32[$20 >> 2] = 752;
    __THREW__ = 0;
    invoke_vi(177, $21 | 0);
    $28 = __THREW__;
    __THREW__ = 0;
    do if ($28 & 1) {
     $38 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i$i$index2Z2D = tempRet0;
     $eh$lpad$body$i$i$indexZ2D = $38;
    } else {
     HEAP32[$21 >> 2] = 1064;
     $30 = $ss$i + 44 | 0;
     HEAP32[$30 + 0 >> 2] = 0;
     HEAP32[$30 + 4 >> 2] = 0;
     HEAP32[$30 + 8 >> 2] = 0;
     HEAP32[$30 + 12 >> 2] = 0;
     HEAP32[$ss$i + 60 >> 2] = 24;
     HEAP32[$0 + 0 >> 2] = 0;
     HEAP32[$0 + 4 >> 2] = 0;
     HEAP32[$0 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $21 | 0, $0 | 0);
     $32 = __THREW__;
     __THREW__ = 0;
     if ($32 & 1) {
      $34 = ___cxa_find_matching_catch() | 0;
      $35 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($21);
      $eh$lpad$body$i$i$index2Z2D = $35;
      $eh$lpad$body$i$i$indexZ2D = $34;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __THREW__ = 0;
     $40 = invoke_iiii(25, $20 | 0, 38512, 35) | 0;
     $41 = __THREW__;
     __THREW__ = 0;
     do if ($41 & 1) label = 27; else {
      __THREW__ = 0;
      invoke_vii(61, $2 | 0, HEAP32[$16 >> 2] | 0);
      $44 = __THREW__;
      __THREW__ = 0;
      if ($44 & 1) label = 27; else {
       $46 = HEAP8[$2 >> 0] | 0;
       if (!($46 & 1)) {
        $56 = $2 + 1 | 0;
        $57 = ($46 & 255) >>> 1;
       } else {
        $56 = HEAP32[$2 + 8 >> 2] | 0;
        $57 = HEAP32[$2 + 4 >> 2] | 0;
       }
       __THREW__ = 0;
       $58 = invoke_iiii(25, $40 | 0, $56 | 0, $57 | 0) | 0;
       $59 = __THREW__;
       __THREW__ = 0;
       if (!($59 & 1)) {
        __THREW__ = 0;
        $61 = invoke_iiii(25, $58 | 0, 38552, 2) | 0;
        $62 = __THREW__;
        __THREW__ = 0;
        if (!($62 & 1)) {
         __THREW__ = 0;
         $64 = invoke_iiii(25, $61 | 0, 38560, 61) | 0;
         $65 = __THREW__;
         __THREW__ = 0;
         if (!($65 & 1)) {
          __THREW__ = 0;
          invoke_iiii(25, $64 | 0, 38624, 23) | 0;
          $67 = __THREW__;
          __THREW__ = 0;
          if (!($67 & 1)) {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
           $69 = ___cxa_allocate_exception(24) | 0;
           __THREW__ = 0;
           invoke_vii(43, $3 | 0, $21 | 0);
           $70 = __THREW__;
           __THREW__ = 0;
           if ($70 & 1) {
            $85 = ___cxa_find_matching_catch() | 0;
            $$0117$i = $85;
            $$0216$i = tempRet0;
           } else {
            __THREW__ = 0;
            invoke_viiii(17, $69 | 0, $vm + 56 | 0, $loc$i | 0, $3 | 0);
            $73 = __THREW__;
            __THREW__ = 0;
            do if ($73 & 1) $$07$i = 1; else {
             __THREW__ = 0;
             invoke_viii(4, $69 | 0, 38664, 183);
             $75 = __THREW__;
             __THREW__ = 0;
             if ($75 & 1) {
              $$07$i = 0;
              break;
             }
            } while (0);
            $87 = ___cxa_find_matching_catch() | 0;
            $88 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
            if ($$07$i) {
             $$0117$i = $87;
             $$0216$i = $88;
            } else {
             $$1$i = $87;
             $$13$i = $88;
             break;
            }
           }
           ___cxa_free_exception($69 | 0);
           $$1$i = $$0117$i;
           $$13$i = $$0216$i;
           break;
          }
         }
        }
       }
       $83 = ___cxa_find_matching_catch() | 0;
       $84 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
       $$1$i = $83;
       $$13$i = $84;
      }
     } while (0);
     if ((label | 0) == 27) {
      $81 = ___cxa_find_matching_catch() | 0;
      $$1$i = $81;
      $$13$i = tempRet0;
     }
     HEAP32[$ss$i >> 2] = 732;
     HEAP32[$19 >> 2] = 772;
     HEAP32[$20 >> 2] = 752;
     HEAP32[$21 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($21);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($19);
     $$3$i = $$1$i;
     $$35$i = $$13$i;
     break L10;
    } while (0);
    $$0$i$i = $eh$lpad$body$i$i$index2Z2D;
    $$01$i$i = $eh$lpad$body$i$i$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($19);
   $$3$i = $$01$i$i;
   $$35$i = $$0$i$i;
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($loc$i);
  $$4$i = $$3$i;
  $$46$i = $$35$i;
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($agg$result, HEAP32[$10 >> 2] | 0);
 $eh$lpad$body$index12Z2D = $$46$i;
 $eh$lpad$body$indexZ2D = $$4$i;
 __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function __ZN12_GLOBAL__N_16Parser9parseBindERNSt3__13mapIPK10IdentifierP3ASTNS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEj($this, $binds, $obj_level) {
 $this = $this | 0;
 $binds = $binds | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i7$i = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$lcssa50 = 0, $$01$ph5$i$i$i = 0, $$0126 = 0, $$013$i$i$i = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i$lcssa$lcssa = 0, $$0325 = 0, $$12 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$lcssa = 0, $$lcssa48 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $103 = 0, $105 = 0, $108 = 0, $11 = 0, $113 = 0, $115 = 0, $117 = 0, $121 = 0, $122 = 0, $124 = 0, $126 = 0, $13 = 0, $131 = 0, $136 = 0, $137 = 0, $14 = 0, $142 = 0, $147 = 0, $148 = 0, $152 = 0, $153 = 0, $155 = 0, $158 = 0, $159 = 0, $165 = 0, $166 = 0, $167 = 0, $169 = 0, $170 = 0, $171 = 0, $174 = 0, $175 = 0, $181 = 0, $185 = 0, $186 = 0, $188 = 0, $191 = 0, $193 = 0, $196 = 0, $197 = 0, $2 = 0, $200 = 0, $201 = 0, $207 = 0, $209 = 0, $213 = 0, $214 = 0, $217 = 0, $218 = 0, $219 = 0, $28 = 0, $29 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $46 = 0, $47 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $55 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $74 = 0, $76 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $84 = 0, $86 = 0, $88 = 0, $9 = 0, $91 = 0, $93 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa46 = 0, $__nd$0$i$i$lcssa47 = 0, $__parent$i = 0, $__r$0$i = 0, $body = 0, $eh$lpad$body10$index3Z2D = 0, $eh$lpad$body10$indexZ2D = 0, $init$0 = 0, $params = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $var_id = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__parent$i = sp + 288 | 0;
 $var_id = sp + 244 | 0;
 $0 = sp + 232 | 0;
 $1 = sp + 188 | 0;
 $2 = sp + 144 | 0;
 $params = sp + 132 | 0;
 $3 = sp + 120 | 0;
 $4 = sp + 76 | 0;
 $body = sp + 72 | 0;
 $5 = sp + 44 | 0;
 $6 = sp;
 __ZN12_GLOBAL__N_16Parser9popExpectEN5Token4KindEPKc($var_id, $this, 11, 0);
 $7 = $this + 4 | 0;
 $9 = $var_id + 4 | 0;
 __THREW__ = 0;
 $10 = invoke_iii(23, HEAP32[$7 >> 2] | 0, $9 | 0) | 0;
 $11 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($11 & 1) label = 24; else {
  $13 = $binds + 4 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  if ($14) {
   $$0$ph6$i$i$i = $13;
   $$01$ph5$i$i$i = $14;
   L5 : while (1) {
    $$013$i$i$i = $$01$ph5$i$i$i;
    while (1) {
     if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $10 >>> 0) {
      $$013$i$i$i$lcssa = $$013$i$i$i;
      break;
     }
     $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
     if (!$$013$i$i$i) {
      $$0$ph6$i$i$i$lcssa50 = $$0$ph6$i$i$i;
      label = 8;
      break L5;
     }
    }
    $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
    if (!$$01$ph5$i$i$i) {
     $$013$i$i$i$lcssa$lcssa = $$013$i$i$i$lcssa;
     label = 9;
     break;
    } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
   }
   if ((label | 0) == 8) $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i$lcssa50; else if ((label | 0) == 9) $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa$lcssa;
   if (($$0$ph$lcssa$i$i$i | 0) != ($13 | 0)) if ($10 >>> 0 >= (HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0) {
    $28 = ___cxa_allocate_exception(40) | 0;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    $29 = HEAP8[$9 >> 0] | 0;
    if (!($29 & 1)) $37 = ($29 & 255) >>> 1; else $37 = HEAP32[$var_id + 8 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiii(14, $0 | 0, 38184, 21, $37 + 21 | 0);
    $38 = __THREW__;
    __THREW__ = 0;
    do if ($38 & 1) label = 26; else {
     if (!(HEAP8[$9 >> 0] & 1)) $46 = $9 + 1 | 0; else $46 = HEAP32[$var_id + 12 >> 2] | 0;
     __THREW__ = 0;
     invoke_iiii(33, $0 | 0, $46 | 0, $37 | 0) | 0;
     $47 = __THREW__;
     __THREW__ = 0;
     if ($47 & 1) label = 26; else {
      __THREW__ = 0;
      invoke_vii(40, $28 | 0, $var_id + 16 | 0);
      $50 = __THREW__;
      __THREW__ = 0;
      if ($50 & 1) $$0 = 1; else {
       $52 = $28 + 12 | 0;
       $53 = $var_id + 28 | 0;
       HEAP32[$52 + 0 >> 2] = HEAP32[$53 + 0 >> 2];
       HEAP32[$52 + 4 >> 2] = HEAP32[$53 + 4 >> 2];
       HEAP32[$52 + 8 >> 2] = HEAP32[$53 + 8 >> 2];
       HEAP32[$52 + 12 >> 2] = HEAP32[$53 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $28 + 28 | 0, $0 | 0);
       $55 = __THREW__;
       __THREW__ = 0;
       if ($55 & 1) {
        $57 = ___cxa_find_matching_catch() | 0;
        $58 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
        $$0126 = $58;
        $$0325 = $57;
        break;
       }
       __THREW__ = 0;
       invoke_viii(4, $28 | 0, 48, 176);
       $59 = __THREW__;
       __THREW__ = 0;
       if ($59 & 1) $$0 = 0; else {}
      }
      $65 = ___cxa_find_matching_catch() | 0;
      $66 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      if ($$0) {
       $$0126 = $66;
       $$0325 = $65;
      } else {
       $$2 = $66;
       $$25 = $65;
       $219 = $var_id + 16 | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($219);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
       ___resumeException($$25 | 0);
      }
     }
    } while (0);
    if ((label | 0) == 26) {
     $63 = ___cxa_find_matching_catch() | 0;
     $64 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     $$0126 = $64;
     $$0325 = $63;
    }
    ___cxa_free_exception($28 | 0);
    $$2 = $$0126;
    $$25 = $$0325;
    $219 = $var_id + 16 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($219);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    ___resumeException($$25 | 0);
   }
  }
  $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
  $67 = $this$idx$val$idx$val + 8 | 0;
  HEAP32[$1 >> 2] = HEAP32[$67 >> 2];
  $69 = $1 + 4 | 0;
  __THREW__ = 0;
  invoke_vii(40, $69 | 0, $this$idx$val$idx$val + 12 | 0);
  $71 = __THREW__;
  __THREW__ = 0;
  if ($71 & 1) label = 24; else {
   HEAP32[$1 >> 2] = HEAP32[$67 >> 2];
   $74 = $1 + 16 | 0;
   __THREW__ = 0;
   invoke_vii(40, $74 | 0, $this$idx$val$idx$val + 24 | 0);
   $76 = __THREW__;
   __THREW__ = 0;
   if ($76 & 1) {
    $78 = ___cxa_find_matching_catch() | 0;
    $79 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69);
    $eh$lpad$body10$index3Z2D = $79;
    $eh$lpad$body10$indexZ2D = $78;
    break;
   }
   $80 = $1 + 28 | 0;
   $81 = $this$idx$val$idx$val + 36 | 0;
   HEAP32[$80 + 0 >> 2] = HEAP32[$81 + 0 >> 2];
   HEAP32[$80 + 4 >> 2] = HEAP32[$81 + 4 >> 2];
   HEAP32[$80 + 8 >> 2] = HEAP32[$81 + 8 >> 2];
   HEAP32[$80 + 12 >> 2] = HEAP32[$81 + 12 >> 2];
   $82 = HEAP32[$67 >> 2] | 0;
   HEAP32[$1 >> 2] = $82;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69);
   L45 : do if (($82 | 0) == 8) {
    $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $84 = $this$idx$val$idx$val$i + 8 | 0;
    HEAP32[$2 >> 2] = HEAP32[$84 >> 2];
    $86 = $2 + 4 | 0;
    __THREW__ = 0;
    invoke_vii(40, $86 | 0, $this$idx$val$idx$val$i + 12 | 0);
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 24;
     break L1;
    }
    HEAP32[$2 >> 2] = HEAP32[$84 >> 2];
    $91 = $2 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $91 | 0, $this$idx$val$idx$val$i + 24 | 0);
    $93 = __THREW__;
    __THREW__ = 0;
    if ($93 & 1) {
     $95 = ___cxa_find_matching_catch() | 0;
     $96 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($86);
     $eh$lpad$body10$index3Z2D = $96;
     $eh$lpad$body10$indexZ2D = $95;
     break L1;
    }
    $97 = $2 + 28 | 0;
    $98 = $this$idx$val$idx$val$i + 36 | 0;
    HEAP32[$97 + 0 >> 2] = HEAP32[$98 + 0 >> 2];
    HEAP32[$97 + 4 >> 2] = HEAP32[$98 + 4 >> 2];
    HEAP32[$97 + 8 >> 2] = HEAP32[$98 + 8 >> 2];
    HEAP32[$97 + 12 >> 2] = HEAP32[$98 + 12 >> 2];
    HEAP32[$2 >> 2] = HEAP32[$84 >> 2];
    $100 = HEAP32[$this >> 2] | 0;
    $102 = HEAP32[$100 + 4 >> 2] | 0;
    $103 = $102 + 4 | 0;
    $105 = HEAP32[$102 >> 2] | 0;
    HEAP32[$105 + 4 >> 2] = HEAP32[$103 >> 2];
    HEAP32[HEAP32[$103 >> 2] >> 2] = $105;
    $108 = $100 + 8 | 0;
    HEAP32[$108 >> 2] = (HEAP32[$108 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($102 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($102 + 12 | 0);
    __ZdlPv($102);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($91);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($86);
    __THREW__ = 0;
    invoke_viii(3, $3 | 0, 37112, 18);
    $113 = __THREW__;
    __THREW__ = 0;
    if ($113 & 1) {
     label = 24;
     break L1;
    }
    __THREW__ = 0;
    invoke_viiii(15, $params | 0, $this | 0, $3 | 0, $obj_level | 0);
    $115 = __THREW__;
    __THREW__ = 0;
    if ($115 & 1) {
     $165 = ___cxa_find_matching_catch() | 0;
     $166 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $$2 = $166;
     $$25 = $165;
     $219 = $var_id + 16 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($219);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     ___resumeException($$25 | 0);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __THREW__ = 0;
    invoke_viiii(13, $4 | 0, $this | 0, 13, 38208);
    $117 = __THREW__;
    __THREW__ = 0;
    do if ($117 & 1) label = 47; else {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 16 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 4 | 0);
     __THREW__ = 0;
     $121 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
     $122 = __THREW__;
     __THREW__ = 0;
     if ($122 & 1) label = 47; else {
      HEAP32[$body >> 2] = $121;
      $124 = HEAP32[$7 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $5 | 0, $var_id + 16 | 0);
      $126 = __THREW__;
      __THREW__ = 0;
      if ($126 & 1) label = 47; else {
       $131 = $var_id + 28 | 0;
       $136 = HEAP32[$131 + 4 >> 2] | 0;
       $137 = $5 + 12 | 0;
       HEAP32[$137 >> 2] = HEAP32[$131 >> 2];
       HEAP32[$137 + 4 >> 2] = $136;
       $142 = $121 + 24 | 0;
       $147 = HEAP32[$142 + 4 >> 2] | 0;
       $148 = $5 + 20 | 0;
       HEAP32[$148 >> 2] = HEAP32[$142 >> 2];
       HEAP32[$148 + 4 >> 2] = $147;
       __THREW__ = 0;
       $152 = invoke_iiiii(7, $124 | 0, $5 | 0, $params | 0, $body | 0) | 0;
       $153 = __THREW__;
       __THREW__ = 0;
       if ($153 & 1) {
        $169 = ___cxa_find_matching_catch() | 0;
        $170 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
        $$12 = $170;
        $$14 = $169;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
       $155 = HEAP32[$params >> 2] | 0;
       if (!$155) {
        $init$0 = $152;
        break L45;
       }
       $158 = $params + 4 | 0;
       $159 = HEAP32[$158 >> 2] | 0;
       if (($159 | 0) != ($155 | 0)) HEAP32[$158 >> 2] = $159 + (~(($159 + -4 - $155 | 0) >>> 2) << 2);
       __ZdlPv($155);
       $init$0 = $152;
       break L45;
      }
     }
    } while (0);
    if ((label | 0) == 47) {
     $167 = ___cxa_find_matching_catch() | 0;
     $$12 = tempRet0;
     $$14 = $167;
    }
    $171 = HEAP32[$params >> 2] | 0;
    if (!$171) {
     $$2 = $$12;
     $$25 = $$14;
     $219 = $var_id + 16 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($219);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     ___resumeException($$25 | 0);
    }
    $174 = $params + 4 | 0;
    $175 = HEAP32[$174 >> 2] | 0;
    if (($175 | 0) != ($171 | 0)) HEAP32[$174 >> 2] = $175 + (~(($175 + -4 - $171 | 0) >>> 2) << 2);
    __ZdlPv($171);
    $$2 = $$12;
    $$25 = $$14;
    $219 = $var_id + 16 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($219);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    ___resumeException($$25 | 0);
   } else {
    __THREW__ = 0;
    invoke_viiii(13, $6 | 0, $this | 0, 13, 38208);
    $181 = __THREW__;
    __THREW__ = 0;
    if ($181 & 1) {
     label = 24;
     break L1;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6 + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6 + 4 | 0);
    __THREW__ = 0;
    $185 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
    $186 = __THREW__;
    __THREW__ = 0;
    if ($186 & 1) {
     label = 24;
     break L1;
    } else $init$0 = $185;
   } while (0);
   $188 = HEAP32[$13 >> 2] | 0;
   do if (!$188) {
    HEAP32[$__parent$i >> 2] = $13;
    $$0$i7$i = $13;
    $207 = $13;
   } else {
    $__nd$0$i$i = $188;
    while (1) {
     $191 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
     if ($10 >>> 0 < $191 >>> 0) {
      $193 = HEAP32[$__nd$0$i$i >> 2] | 0;
      if (!$193) {
       $$lcssa48 = $__nd$0$i$i;
       $__nd$0$i$i$lcssa47 = $__nd$0$i$i;
       label = 59;
       break;
      } else $__nd$0$be$in$i$i = $193;
     } else {
      if ($191 >>> 0 >= $10 >>> 0) {
       $__nd$0$i$i$lcssa = $__nd$0$i$i;
       label = 65;
       break;
      }
      $196 = $__nd$0$i$i + 4 | 0;
      $197 = HEAP32[$196 >> 2] | 0;
      if (!$197) {
       $$lcssa = $196;
       $__nd$0$i$i$lcssa46 = $__nd$0$i$i;
       label = 63;
       break;
      } else $__nd$0$be$in$i$i = $197;
     }
     $__nd$0$i$i = $__nd$0$be$in$i$i;
    }
    if ((label | 0) == 59) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa47;
     $$0$i7$i = $$lcssa48;
     $207 = $__nd$0$i$i$lcssa47;
     break;
    } else if ((label | 0) == 63) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa46;
     $$0$i7$i = $$lcssa;
     $207 = $__nd$0$i$i$lcssa46;
     break;
    } else if ((label | 0) == 65) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
     if (!$__nd$0$i$i$lcssa) {
      $$0$i7$i = $__parent$i;
      $207 = 0;
      break;
     } else $__r$0$i = $__nd$0$i$i$lcssa;
     $217 = $__r$0$i + 20 | 0;
     HEAP32[$217 >> 2] = $init$0;
     $218 = $var_id + 16 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($218);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     STACKTOP = sp;
     return;
    }
   } while (0);
   __THREW__ = 0;
   $200 = invoke_ii(67, 24) | 0;
   $201 = __THREW__;
   __THREW__ = 0;
   if ($201 & 1) label = 24; else {
    HEAP32[$200 + 16 >> 2] = $10;
    HEAP32[$200 + 20 >> 2] = 0;
    HEAP32[$200 >> 2] = 0;
    HEAP32[$200 + 4 >> 2] = 0;
    HEAP32[$200 + 8 >> 2] = $207;
    HEAP32[$$0$i7$i >> 2] = $200;
    $209 = HEAP32[HEAP32[$binds >> 2] >> 2] | 0;
    if (!$209) $213 = $200; else {
     HEAP32[$binds >> 2] = $209;
     $213 = HEAP32[$$0$i7$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$binds + 4 >> 2] | 0, $213);
    $214 = $binds + 8 | 0;
    HEAP32[$214 >> 2] = (HEAP32[$214 >> 2] | 0) + 1;
    $__r$0$i = $200;
    $217 = $__r$0$i + 20 | 0;
    HEAP32[$217 >> 2] = $init$0;
    $218 = $var_id + 16 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($218);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 if ((label | 0) == 24) {
  $61 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body10$index3Z2D = tempRet0;
  $eh$lpad$body10$indexZ2D = $61;
 }
 $$2 = $eh$lpad$body10$index3Z2D;
 $$25 = $eh$lpad$body10$indexZ2D;
 $219 = $var_id + 16 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($219);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 ___resumeException($$25 | 0);
}

function __ZN12_GLOBAL__N_16Parser14parseCommaListERNSt3__16vectorIP3ASTNS1_9allocatorIS4_EEEEN5Token4KindERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEEj($agg$result, $this, $exprs, $element_kind, $obj_level) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $exprs = $exprs | 0;
 $element_kind = $element_kind | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$01$i = 0, $$0229 = 0, $$0428 = 0, $$13 = 0, $$15 = 0, $$2 = 0, $$26 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $105 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $111 = 0, $113 = 0, $114 = 0, $116 = 0, $119 = 0, $12 = 0, $124 = 0, $125 = 0, $126 = 0, $129 = 0, $13 = 0, $133 = 0, $135 = 0, $137 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $143 = 0, $145 = 0, $146 = 0, $148 = 0, $15 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $163 = 0, $165 = 0, $166 = 0, $168 = 0, $17 = 0, $170 = 0, $172 = 0, $174 = 0, $175 = 0, $176 = 0, $178 = 0, $18 = 0, $180 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $187 = 0, $19 = 0, $192 = 0, $193 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $57 = 0, $6 = 0, $60 = 0, $65 = 0, $68 = 0, $7 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $82 = 0, $84 = 0, $9 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $98 = 0, $eh$lpad$body$i$index13Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index5Z2D = 0, $eh$lpad$body$indexZ2D = 0, $got_comma$0$off0 = 0, $got_comma$1$off0 = 0, $got_comma$2$off0 = 0, $next = 0, $ss = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i12 = 0, $this$idx4$val$idx$val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $0 = sp + 292 | 0;
 $next = sp + 248 | 0;
 $1 = sp + 204 | 0;
 $2 = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $3 = sp + 4 | 0;
 $4 = sp;
 $5 = $next + 4 | 0;
 $6 = $next + 16 | 0;
 $7 = $next + 28 | 0;
 $8 = $agg$result + 4 | 0;
 $9 = $agg$result + 16 | 0;
 $10 = $agg$result + 28 | 0;
 $11 = $exprs + 4 | 0;
 $12 = $exprs + 8 | 0;
 $13 = $1 + 4 | 0;
 $14 = $1 + 16 | 0;
 $15 = $1 + 28 | 0;
 $16 = $2 + 4 | 0;
 $17 = $2 + 16 | 0;
 $18 = $2 + 28 | 0;
 $19 = $5 + 1 | 0;
 $20 = $next + 16 | 0;
 $21 = $2 + 16 | 0;
 $22 = $20 + 1 | 0;
 $23 = $next + 24 | 0;
 $24 = $next + 20 | 0;
 $25 = $next + 12 | 0;
 $26 = $next + 8 | 0;
 $got_comma$0$off0 = 1;
 L1 : while (1) {
  $this$idx4$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
  $27 = $this$idx4$val$idx$val + 8 | 0;
  HEAP32[$next >> 2] = HEAP32[$27 >> 2];
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($5, $this$idx4$val$idx$val + 12 | 0);
  HEAP32[$next >> 2] = HEAP32[$27 >> 2];
  __THREW__ = 0;
  invoke_vii(40, $6 | 0, $this$idx4$val$idx$val + 24 | 0);
  $32 = __THREW__;
  __THREW__ = 0;
  if ($32 & 1) {
   label = 3;
   break;
  }
  $36 = $this$idx4$val$idx$val + 36 | 0;
  HEAP32[$7 + 0 >> 2] = HEAP32[$36 + 0 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$36 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$36 + 8 >> 2];
  HEAP32[$7 + 12 >> 2] = HEAP32[$36 + 12 >> 2];
  $37 = HEAP32[$27 >> 2] | 0;
  HEAP32[$next >> 2] = $37;
  if ($got_comma$0$off0) {
   $96 = $37;
   $got_comma$1$off0 = 1;
  } else if (($37 | 0) == 5) {
   $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $39 = $this$idx$val$idx$val$i + 8 | 0;
   HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $13 | 0, $this$idx$val$idx$val$i + 12 | 0);
   $42 = __THREW__;
   __THREW__ = 0;
   if ($42 & 1) {
    label = 23;
    break;
   }
   HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $14 | 0, $this$idx$val$idx$val$i + 24 | 0);
   $46 = __THREW__;
   __THREW__ = 0;
   if ($46 & 1) {
    label = 8;
    break;
   }
   $50 = $this$idx$val$idx$val$i + 36 | 0;
   HEAP32[$15 + 0 >> 2] = HEAP32[$50 + 0 >> 2];
   HEAP32[$15 + 4 >> 2] = HEAP32[$50 + 4 >> 2];
   HEAP32[$15 + 8 >> 2] = HEAP32[$50 + 8 >> 2];
   HEAP32[$15 + 12 >> 2] = HEAP32[$50 + 12 >> 2];
   HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
   $52 = HEAP32[$this >> 2] | 0;
   $54 = HEAP32[$52 + 4 >> 2] | 0;
   $55 = $54 + 4 | 0;
   $57 = HEAP32[$54 >> 2] | 0;
   HEAP32[$57 + 4 >> 2] = HEAP32[$55 >> 2];
   HEAP32[HEAP32[$55 >> 2] >> 2] = $57;
   $60 = $52 + 8 | 0;
   HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54 + 24 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54 + 12 | 0);
   __ZdlPv($54);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
   $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $65 = $this$idx$val$idx$val + 8 | 0;
   HEAP32[$2 >> 2] = HEAP32[$65 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $16 | 0, $this$idx$val$idx$val + 12 | 0);
   $68 = __THREW__;
   __THREW__ = 0;
   if ($68 & 1) {
    label = 23;
    break;
   }
   HEAP32[$2 >> 2] = HEAP32[$65 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $17 | 0, $this$idx$val$idx$val + 24 | 0);
   $72 = __THREW__;
   __THREW__ = 0;
   if ($72 & 1) {
    label = 11;
    break;
   }
   $76 = $this$idx$val$idx$val + 36 | 0;
   HEAP32[$18 + 0 >> 2] = HEAP32[$76 + 0 >> 2];
   HEAP32[$18 + 4 >> 2] = HEAP32[$76 + 4 >> 2];
   HEAP32[$18 + 8 >> 2] = HEAP32[$76 + 8 >> 2];
   HEAP32[$18 + 12 >> 2] = HEAP32[$76 + 12 >> 2];
   $77 = HEAP32[$65 >> 2] | 0;
   HEAP32[$2 >> 2] = $77;
   HEAP32[$next >> 2] = $77;
   if (!(HEAP8[$5 >> 0] & 1)) {
    HEAP8[$19 >> 0] = 0;
    HEAP8[$5 >> 0] = 0;
   } else {
    HEAP8[HEAP32[$25 >> 2] >> 0] = 0;
    HEAP32[$26 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $5 | 0, 0);
   $82 = __THREW__;
   __THREW__ = 0;
   if ($82 & 1) {
    label = 16;
    break;
   };
   HEAP32[$5 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
   HEAP32[$16 + 0 >> 2] = 0;
   HEAP32[$16 + 4 >> 2] = 0;
   HEAP32[$16 + 8 >> 2] = 0;
   if (!(HEAP8[$20 >> 0] & 1)) {
    HEAP8[$22 >> 0] = 0;
    HEAP8[$20 >> 0] = 0;
   } else {
    HEAP8[HEAP32[$23 >> 2] >> 0] = 0;
    HEAP32[$24 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $20 | 0, 0);
   $90 = __THREW__;
   __THREW__ = 0;
   if ($90 & 1) {
    label = 21;
    break;
   };
   HEAP32[$20 + 0 >> 2] = HEAP32[$21 + 0 >> 2];
   HEAP32[$20 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
   HEAP32[$20 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
   HEAP32[$21 + 0 >> 2] = 0;
   HEAP32[$21 + 4 >> 2] = 0;
   HEAP32[$21 + 8 >> 2] = 0;
   HEAP32[$7 + 0 >> 2] = HEAP32[$18 + 0 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
   HEAP32[$7 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
   $96 = HEAP32[$next >> 2] | 0;
   $got_comma$1$off0 = 1;
  } else {
   $96 = $37;
   $got_comma$1$off0 = 0;
  }
  do if (($96 | 0) == 9) {
   $this$idx$val$idx$val$i12 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $98 = $this$idx$val$idx$val$i12 + 8 | 0;
   HEAP32[$agg$result >> 2] = HEAP32[$98 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $8 | 0, $this$idx$val$idx$val$i12 + 12 | 0);
   $101 = __THREW__;
   __THREW__ = 0;
   if ($101 & 1) {
    label = 23;
    break L1;
   }
   HEAP32[$agg$result >> 2] = HEAP32[$98 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $9 | 0, $this$idx$val$idx$val$i12 + 24 | 0);
   $105 = __THREW__;
   __THREW__ = 0;
   if ($105 & 1) {
    label = 28;
    break L1;
   }
   $109 = $this$idx$val$idx$val$i12 + 36 | 0;
   HEAP32[$10 + 0 >> 2] = HEAP32[$109 + 0 >> 2];
   HEAP32[$10 + 4 >> 2] = HEAP32[$109 + 4 >> 2];
   HEAP32[$10 + 8 >> 2] = HEAP32[$109 + 8 >> 2];
   HEAP32[$10 + 12 >> 2] = HEAP32[$109 + 12 >> 2];
   HEAP32[$agg$result >> 2] = HEAP32[$98 >> 2];
   $111 = HEAP32[$this >> 2] | 0;
   $113 = HEAP32[$111 + 4 >> 2] | 0;
   $114 = $113 + 4 | 0;
   $116 = HEAP32[$113 >> 2] | 0;
   HEAP32[$116 + 4 >> 2] = HEAP32[$114 >> 2];
   HEAP32[HEAP32[$114 >> 2] >> 2] = $116;
   $119 = $111 + 8 | 0;
   HEAP32[$119 >> 2] = (HEAP32[$119 >> 2] | 0) + -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($113 + 24 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($113 + 12 | 0);
   __ZdlPv($113);
   $$01 = 1;
   $got_comma$2$off0 = $got_comma$1$off0;
  } else {
   if (!$got_comma$1$off0) {
    label = 31;
    break L1;
   }
   __THREW__ = 0;
   $184 = invoke_iiii(29, $this | 0, 15, $obj_level | 0) | 0;
   $185 = __THREW__;
   __THREW__ = 0;
   if ($185 & 1) {
    label = 23;
    break L1;
   }
   HEAP32[$4 >> 2] = $184;
   $187 = HEAP32[$11 >> 2] | 0;
   if ($187 >>> 0 >= (HEAP32[$12 >> 2] | 0) >>> 0) {
    __THREW__ = 0;
    invoke_vii(51, $exprs | 0, $4 | 0);
    $193 = __THREW__;
    __THREW__ = 0;
    if ($193 & 1) {
     label = 23;
     break L1;
    } else {
     $$01 = 0;
     $got_comma$2$off0 = 0;
     break;
    }
   }
   if (!$187) $192 = 0; else {
    HEAP32[$187 >> 2] = $184;
    $192 = HEAP32[$11 >> 2] | 0;
   }
   HEAP32[$11 >> 2] = $192 + 4;
   $$01 = 0;
   $got_comma$2$off0 = 0;
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  if ($$01) {
   label = 63;
   break;
  } else $got_comma$0$off0 = $got_comma$2$off0;
 }
 if ((label | 0) == 3) {
  $34 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  ___resumeException($34 | 0);
 } else if ((label | 0) == 8) {
  $48 = ___cxa_find_matching_catch() | 0;
  $49 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
  $eh$lpad$body$index5Z2D = $49;
  $eh$lpad$body$indexZ2D = $48;
 } else if ((label | 0) == 11) {
  $74 = ___cxa_find_matching_catch() | 0;
  $75 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
  $eh$lpad$body$index5Z2D = $75;
  $eh$lpad$body$indexZ2D = $74;
 } else if ((label | 0) == 16) {
  $84 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($84);
 } else if ((label | 0) == 21) {
  $92 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($92);
 } else if ((label | 0) == 23) {
  $94 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index5Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $94;
 } else if ((label | 0) == 28) {
  $107 = ___cxa_find_matching_catch() | 0;
  $108 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $eh$lpad$body$index5Z2D = $108;
  $eh$lpad$body$indexZ2D = $107;
 } else if ((label | 0) == 31) {
  $124 = $ss + 64 | 0;
  $125 = $ss + 8 | 0;
  HEAP32[$125 >> 2] = 752;
  $126 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 900;
  HEAP32[$124 >> 2] = 920;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $126 | 0);
  $129 = __THREW__;
  __THREW__ = 0;
  if ($129 & 1) {
   $141 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $141;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 732;
   HEAP32[$124 >> 2] = 772;
   HEAP32[$125 >> 2] = 752;
   __THREW__ = 0;
   invoke_vi(177, $126 | 0);
   $133 = __THREW__;
   __THREW__ = 0;
   do if ($133 & 1) {
    $143 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index13Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $143;
   } else {
    HEAP32[$126 >> 2] = 1064;
    $135 = $ss + 44 | 0;
    HEAP32[$135 + 0 >> 2] = 0;
    HEAP32[$135 + 4 >> 2] = 0;
    HEAP32[$135 + 8 >> 2] = 0;
    HEAP32[$135 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $126 | 0, $0 | 0);
    $137 = __THREW__;
    __THREW__ = 0;
    if ($137 & 1) {
     $139 = ___cxa_find_matching_catch() | 0;
     $140 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($126);
     $eh$lpad$body$i$index13Z2D = $140;
     $eh$lpad$body$i$indexZ2D = $139;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $145 = invoke_iiii(25, $125 | 0, 38216, 29) | 0;
    $146 = __THREW__;
    __THREW__ = 0;
    L52 : do if ($146 & 1) label = 50; else {
     $148 = HEAP8[$element_kind >> 0] | 0;
     if (!($148 & 1)) {
      $158 = $element_kind + 1 | 0;
      $159 = ($148 & 255) >>> 1;
     } else {
      $158 = HEAP32[$element_kind + 8 >> 2] | 0;
      $159 = HEAP32[$element_kind + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $160 = invoke_iiii(25, $145 | 0, $158 | 0, $159 | 0) | 0;
     $161 = __THREW__;
     __THREW__ = 0;
     if ($161 & 1) label = 50; else {
      __THREW__ = 0;
      invoke_iiii(25, $160 | 0, 45688, 1) | 0;
      $163 = __THREW__;
      __THREW__ = 0;
      if ($163 & 1) label = 50; else {
       $165 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_vii(43, $3 | 0, $126 | 0);
       $166 = __THREW__;
       __THREW__ = 0;
       do if ($166 & 1) {
        $180 = ___cxa_find_matching_catch() | 0;
        $$0229 = tempRet0;
        $$0428 = $180;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $165 | 0, $6 | 0);
        $168 = __THREW__;
        __THREW__ = 0;
        if ($168 & 1) $$0 = 1; else {
         $170 = $165 + 12 | 0;
         HEAP32[$170 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
         HEAP32[$170 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
         HEAP32[$170 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
         HEAP32[$170 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $165 + 28 | 0, $3 | 0);
         $172 = __THREW__;
         __THREW__ = 0;
         if ($172 & 1) {
          $174 = ___cxa_find_matching_catch() | 0;
          $175 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($165);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
          $$0229 = $175;
          $$0428 = $174;
          break;
         }
         __THREW__ = 0;
         invoke_viii(4, $165 | 0, 48, 176);
         $176 = __THREW__;
         __THREW__ = 0;
         if ($176 & 1) $$0 = 0; else {}
        }
        $182 = ___cxa_find_matching_catch() | 0;
        $183 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
        if ($$0) {
         $$0229 = $183;
         $$0428 = $182;
        } else {
         $$13 = $183;
         $$15 = $182;
         break L52;
        }
       } while (0);
       ___cxa_free_exception($165 | 0);
       $$13 = $$0229;
       $$15 = $$0428;
      }
     }
    } while (0);
    if ((label | 0) == 50) {
     $178 = ___cxa_find_matching_catch() | 0;
     $$13 = tempRet0;
     $$15 = $178;
    }
    HEAP32[$ss >> 2] = 732;
    HEAP32[$124 >> 2] = 772;
    HEAP32[$125 >> 2] = 752;
    HEAP32[$126 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($126);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($124);
    $$2 = $$13;
    $$26 = $$15;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    ___resumeException($$26 | 0);
   } while (0);
   $$0$i = $eh$lpad$body$i$index13Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($124);
  $eh$lpad$body$index5Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
 } else if ((label | 0) == 63) {
  STACKTOP = sp;
  return;
 }
 $$2 = $eh$lpad$body$index5Z2D;
 $$26 = $eh$lpad$body$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 ___resumeException($$26 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter11objectIndexERK13LocationRangePNS_10HeapObjectEPK10Identifier($this, $loc, $obj, $f) {
 $this = $this | 0;
 $loc = $loc | 0;
 $obj = $obj | 0;
 $f = $f | 0;
 var $$0 = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i119$i$i = 0, $$0$i$i$i$i119$i$i$ph = 0, $$0$i7$i = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i14 = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$lcssa75 = 0, $$0$ph6$i$i$i7 = 0, $$0$ph6$i$i$i7$lcssa73 = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$01$ph5$i$i$i = 0, $$01$ph5$i$i$i8 = 0, $$0121 = 0, $$013$i$i$i = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i$lcssa$lcssa = 0, $$013$i$i$i10 = 0, $$013$i$i$i10$lcssa = 0, $$013$i$i$i10$lcssa$lcssa = 0, $$0220 = 0, $$04 = 0, $$1 = 0, $$13 = 0, $$cast$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$lcssa = 0, $$idx$val$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i = 0, $$lcssa = 0, $$lcssa70 = 0, $$pre = 0, $$pre$i$i = 0, $$pre$i$i$i$i$i$i = 0, $$pre$phi44Z2D = 0, $$pre$phi45Z2D = 0, $$pre$phi46Z2D = 0, $$pre$phi48Z2D = 0, $0 = 0, $1 = 0, $105 = 0, $108 = 0, $109 = 0, $111 = 0, $112 = 0, $116 = 0, $118 = 0, $12 = 0, $121 = 0, $124 = 0, $127 = 0, $128 = 0, $13 = 0, $130 = 0, $133 = 0, $137 = 0, $143 = 0, $145 = 0, $148 = 0, $149 = 0, $152 = 0, $153 = 0, $159 = 0, $161 = 0, $164 = 0, $171 = 0, $174 = 0, $176 = 0, $177 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $21 = 0, $22 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $47 = 0, $48 = 0, $54 = 0, $55 = 0, $66 = 0, $67 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $75 = 0, $76 = 0, $79 = 0, $81 = 0, $83 = 0, $86 = 0, $87 = 0, $91 = 0, $93 = 0, $95 = 0, $98 = 0, $__k$val$i = 0, $__k$val$i49 = 0, $__k$val$i51 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa68 = 0, $__nd$0$i$i$lcssa69 = 0, $__nd$0$i20$i$i$i$i$in$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa71 = 0, $__parent$i = 0, $__r$0$i = 0, $binds = 0, $found_at = 0, $self = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__parent$i = sp + 32 | 0;
 $found_at = sp + 28 | 0;
 $self = sp + 24 | 0;
 $0 = sp + 12 | 0;
 $binds = sp;
 HEAP32[$found_at >> 2] = 0;
 HEAP32[$self >> 2] = 0;
 $1 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $obj, $obj, 0, $found_at, $self) | 0;
 if (!$1) {
  $3 = ___cxa_allocate_exception(24) | 0;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  $4 = HEAP8[$f >> 0] | 0;
  if (!($4 & 1)) $12 = ($4 & 255) >>> 1; else $12 = HEAP32[$f + 4 >> 2] | 0;
  __THREW__ = 0;
  invoke_viiii(14, $0 | 0, 38672, 22, $12 + 22 | 0);
  $13 = __THREW__;
  __THREW__ = 0;
  if ($13 & 1) label = 12; else {
   if (!(HEAP8[$f >> 0] & 1)) $21 = $f + 1 | 0; else $21 = HEAP32[$f + 8 >> 2] | 0;
   __THREW__ = 0;
   invoke_iiii(33, $0 | 0, $21 | 0, $12 | 0) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) label = 12; else {
    __THREW__ = 0;
    invoke_viiii(17, $3 | 0, $this + 56 | 0, $loc | 0, $0 | 0);
    $25 = __THREW__;
    __THREW__ = 0;
    if ($25 & 1) $$04 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3 | 0, 38664, 183);
     $27 = __THREW__;
     __THREW__ = 0;
     if ($27 & 1) $$04 = 0; else {}
    }
    $31 = ___cxa_find_matching_catch() | 0;
    $32 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    if ($$04) {
     $$0121 = $31;
     $$0220 = $32;
    } else {
     $$1 = $31;
     $$13 = $32;
     ___resumeException($$1 | 0);
    }
   }
  }
  if ((label | 0) == 12) {
   $29 = ___cxa_find_matching_catch() | 0;
   $30 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $$0121 = $29;
   $$0220 = $30;
  }
  ___cxa_free_exception($3 | 0);
  $$1 = $$0121;
  $$13 = $$0220;
  ___resumeException($$1 | 0);
 }
 $33 = ___dynamic_cast($1, 38824, 38880, 0) | 0;
 if ($33) {
  $35 = $33 + 24 | 0;
  $36 = HEAP32[$35 >> 2] | 0;
  if (!$36) label = 26; else {
   $$0$ph6$i$i$i = $35;
   $$01$ph5$i$i$i = $36;
   L28 : while (1) {
    $$013$i$i$i = $$01$ph5$i$i$i;
    while (1) {
     if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $f >>> 0) {
      $$013$i$i$i$lcssa = $$013$i$i$i;
      break;
     }
     $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
     if (!$$013$i$i$i) {
      $$0$ph6$i$i$i$lcssa75 = $$0$ph6$i$i$i;
      label = 22;
      break L28;
     }
    }
    $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
    if (!$$01$ph5$i$i$i) {
     $$013$i$i$i$lcssa$lcssa = $$013$i$i$i$lcssa;
     label = 23;
     break;
    } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
   }
   if ((label | 0) == 22) $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i$lcssa75; else if ((label | 0) == 23) $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa$lcssa;
   if (($$0$ph$lcssa$i$i$i | 0) == ($35 | 0)) label = 26; else if ((HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0 > $f >>> 0) label = 26; else $47 = $$0$ph$lcssa$i$i$i;
  }
  if ((label | 0) == 26) $47 = $35;
  $48 = HEAP32[$47 + 24 >> 2] | 0;
  __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($this + 56 | 0, $loc, $33, HEAP32[$self >> 2] | 0, HEAP32[$found_at >> 2] | 0, $33 + 8 | 0);
  $$0 = $48;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $54 = $1 + 32 | 0;
 $55 = HEAP32[$54 >> 2] | 0;
 if (!$55) label = 38; else {
  $$0$ph6$i$i$i7 = $54;
  $$01$ph5$i$i$i8 = $55;
  L46 : while (1) {
   $$013$i$i$i10 = $$01$ph5$i$i$i8;
   while (1) {
    if ((HEAP32[$$013$i$i$i10 + 16 >> 2] | 0) >>> 0 >= $f >>> 0) {
     $$013$i$i$i10$lcssa = $$013$i$i$i10;
     break;
    }
    $$013$i$i$i10 = HEAP32[$$013$i$i$i10 + 4 >> 2] | 0;
    if (!$$013$i$i$i10) {
     $$0$ph6$i$i$i7$lcssa73 = $$0$ph6$i$i$i7;
     label = 34;
     break L46;
    }
   }
   $$01$ph5$i$i$i8 = HEAP32[$$013$i$i$i10$lcssa >> 2] | 0;
   if (!$$01$ph5$i$i$i8) {
    $$013$i$i$i10$lcssa$lcssa = $$013$i$i$i10$lcssa;
    label = 35;
    break;
   } else $$0$ph6$i$i$i7 = $$013$i$i$i10$lcssa;
  }
  if ((label | 0) == 34) $$0$ph$lcssa$i$i$i14 = $$0$ph6$i$i$i7$lcssa73; else if ((label | 0) == 35) $$0$ph$lcssa$i$i$i14 = $$013$i$i$i10$lcssa$lcssa;
  if (($$0$ph$lcssa$i$i$i14 | 0) == ($54 | 0)) label = 38; else if ((HEAP32[$$0$ph$lcssa$i$i$i14 + 16 >> 2] | 0) >>> 0 > $f >>> 0) label = 38; else $66 = $$0$ph$lcssa$i$i$i14;
 }
 if ((label | 0) == 38) $66 = $54;
 $67 = HEAP32[$66 + 20 >> 2] | 0;
 $69 = $binds + 4 | 0;
 HEAP32[$69 >> 2] = 0;
 $70 = $binds + 8 | 0;
 HEAP32[$70 >> 2] = 0;
 $71 = $binds + 4 | 0;
 HEAP32[$binds >> 2] = $71;
 $$idx$val$i$i = HEAP32[$1 + 8 >> 2] | 0;
 $72 = $1 + 12 | 0;
 do if (($$idx$val$i$i | 0) == ($72 | 0)) {
  $$pre$phi48Z2D = $71;
  $179 = $__parent$i;
  $__k$val$i51 = HEAP32[$1 + 24 >> 2] | 0;
  label = 86;
 } else {
  $180 = $$idx$val$i$i;
  $79 = $$idx$val$i$i;
  while (1) {
   __THREW__ = 0;
   $75 = invoke_ii(67, 24) | 0;
   $76 = __THREW__;
   __THREW__ = 0;
   if ($76 & 1) {
    label = 76;
    break;
   }
   $81 = $79 + 16 | 0;
   $83 = HEAP32[$81 >> 2] | 0;
   $86 = HEAP32[$81 + 4 >> 2] | 0;
   $87 = $75 + 16 | 0;
   HEAP32[$87 >> 2] = $83;
   HEAP32[$87 + 4 >> 2] = $86;
   $91 = $83;
   $$pre$i$i$i$i$i$i = HEAP32[$71 >> 2] | 0;
   do if ((HEAP32[$binds >> 2] | 0) == ($71 | 0)) {
    $112 = $71;
    label = 52;
   } else {
    $93 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($93) {
     $$0$i$i$i$i$i$i$i$i = $71;
     while (1) {
      $98 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$98 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $98; else {
       $$cast$i$i$i$i$i$i$i$i$lcssa = $98;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $95 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$95) {
       $$0$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $95;
     }
     $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$lcssa;
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $91 >>> 0) {
     $112 = $$01$i$i$i$i$i$i$i$i;
     label = 52;
    } else if ($93) {
     $$0$i$i$i$i119$i$i = $71;
     $116 = $71;
     label = 62;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 > $91 >>> 0) {
       $105 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i >> 2] | 0;
       if (!$105) {
        $$0$i$i$i$i119$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa71 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 61;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$be = $105;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 >= $91 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 65;
        break;
       }
       $108 = $__nd$0$i20$i$i$i$i$in$i$i + 4 | 0;
       $109 = HEAP32[$108 >> 2] | 0;
       if (!$109) {
        $$0$i$i$i$i119$i$i$ph = $108;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa71 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 61;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$be = $109;
      }
      $__nd$0$i20$i$i$i$i$in$i$i = $__nd$0$i20$i$i$i$i$in$i$i$be;
     }
     if ((label | 0) == 61) {
      label = 0;
      $$0$i$i$i$i119$i$i = $$0$i$i$i$i119$i$i$ph;
      $116 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa71;
      label = 62;
      break;
     } else if ((label | 0) == 65) {
      label = 0;
      $124 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa;
      label = 66;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 52) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     $$0$i$i$i$i119$i$i = $71;
     $116 = $71;
     label = 62;
    } else {
     $111 = $112 + 4 | 0;
     $$pre$i$i = HEAP32[$111 >> 2] | 0;
     if (!$$pre$i$i) {
      $$0$i$i$i$i119$i$i = $111;
      $116 = $112;
      label = 62;
     } else {
      $124 = $$pre$i$i;
      label = 66;
     }
    }
   }
   if ((label | 0) == 62) {
    label = 0;
    HEAP32[$75 >> 2] = 0;
    HEAP32[$75 + 4 >> 2] = 0;
    HEAP32[$75 + 8 >> 2] = $116;
    HEAP32[$$0$i$i$i$i119$i$i >> 2] = $75;
    $118 = HEAP32[HEAP32[$binds >> 2] >> 2] | 0;
    if (!$118) $121 = $75; else {
     HEAP32[$binds >> 2] = $118;
     $121 = HEAP32[$$0$i$i$i$i119$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$69 >> 2] | 0, $121);
    HEAP32[$70 >> 2] = (HEAP32[$70 >> 2] | 0) + 1;
    $127 = $79;
   } else if ((label | 0) == 66) {
    label = 0;
    if (($124 | 0) == ($75 | 0)) $127 = $180; else {
     __ZdlPv($75);
     $127 = $180;
    }
   }
   $128 = HEAP32[$127 + 4 >> 2] | 0;
   if (!$128) {
    $$0$i$i$i$i$i = $127;
    while (1) {
     $133 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$133 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$lcssa = $133;
      break;
     } else $$0$i$i$i$i$i = $133;
    }
    $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i = $128;
    while (1) {
     $130 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$130) {
      $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $130;
    }
    $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i | 0) == ($72 | 0)) break; else {
    $180 = $$01$i$i$i$i$i;
    $79 = $$01$i$i$i$i$i;
   }
  }
  if ((label | 0) == 76) {
   $137 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($binds, HEAP32[$71 >> 2] | 0);
   ___resumeException($137 | 0);
  }
  $$pre = HEAP32[$71 >> 2] | 0;
  $__k$val$i = HEAP32[$1 + 24 >> 2] | 0;
  if (!$$pre) {
   $$pre$phi48Z2D = $71;
   $179 = $__parent$i;
   $__k$val$i51 = $__k$val$i;
   label = 86;
  } else {
   $__nd$0$i$i = $$pre;
   while (1) {
    $143 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
    if ($143 >>> 0 > $__k$val$i >>> 0) {
     $145 = HEAP32[$__nd$0$i$i >> 2] | 0;
     if (!$145) {
      $$lcssa70 = $__nd$0$i$i;
      $__nd$0$i$i$lcssa69 = $__nd$0$i$i;
      label = 81;
      break;
     } else $__nd$0$be$in$i$i = $145;
    } else {
     if ($143 >>> 0 >= $__k$val$i >>> 0) {
      $__nd$0$i$i$lcssa = $__nd$0$i$i;
      label = 87;
      break;
     }
     $148 = $__nd$0$i$i + 4 | 0;
     $149 = HEAP32[$148 >> 2] | 0;
     if (!$149) {
      $$lcssa = $148;
      $__nd$0$i$i$lcssa68 = $__nd$0$i$i;
      label = 85;
      break;
     } else $__nd$0$be$in$i$i = $149;
    }
    $__nd$0$i$i = $__nd$0$be$in$i$i;
   }
   if ((label | 0) == 81) {
    HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa69;
    $$0$i7$i = $$lcssa70;
    $$pre$phi46Z2D = $71;
    $159 = $__nd$0$i$i$lcssa69;
    $181 = $__parent$i;
    $__k$val$i49 = $__k$val$i;
    label = 88;
    break;
   } else if ((label | 0) == 85) {
    HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa68;
    $$0$i7$i = $$lcssa;
    $$pre$phi46Z2D = $71;
    $159 = $__nd$0$i$i$lcssa68;
    $181 = $__parent$i;
    $__k$val$i49 = $__k$val$i;
    label = 88;
    break;
   } else if ((label | 0) == 87) {
    HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
    if (!$__nd$0$i$i$lcssa) {
     $$0$i7$i = $__parent$i;
     $$pre$phi46Z2D = $71;
     $159 = 0;
     $181 = $__parent$i;
     $__k$val$i49 = $__k$val$i;
     label = 88;
     break;
    } else {
     $$pre$phi45Z2D = $71;
     $182 = $__parent$i;
     $__r$0$i = $__nd$0$i$i$lcssa;
     label = 92;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 86) {
  HEAP32[$__parent$i >> 2] = $71;
  $$0$i7$i = $71;
  $$pre$phi46Z2D = $$pre$phi48Z2D;
  $159 = $71;
  $181 = $179;
  $__k$val$i49 = $__k$val$i51;
  label = 88;
 }
 if ((label | 0) == 88) {
  __THREW__ = 0;
  $152 = invoke_ii(67, 24) | 0;
  $153 = __THREW__;
  __THREW__ = 0;
  if ($153 & 1) $$pre$phi44Z2D = $$pre$phi46Z2D; else {
   HEAP32[$152 + 16 >> 2] = $__k$val$i49;
   HEAP32[$152 + 20 >> 2] = 0;
   HEAP32[$152 >> 2] = 0;
   HEAP32[$152 + 4 >> 2] = 0;
   HEAP32[$152 + 8 >> 2] = $159;
   HEAP32[$$0$i7$i >> 2] = $152;
   $161 = HEAP32[HEAP32[$binds >> 2] >> 2] | 0;
   if (!$161) $164 = $152; else {
    HEAP32[$binds >> 2] = $161;
    $164 = HEAP32[$$0$i7$i >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$69 >> 2] | 0, $164);
   HEAP32[$70 >> 2] = (HEAP32[$70 >> 2] | 0) + 1;
   $$pre$phi45Z2D = $$pre$phi46Z2D;
   $182 = $181;
   $__r$0$i = $152;
   label = 92;
  }
 }
 if ((label | 0) == 92) {
  HEAP32[$__r$0$i + 20 >> 2] = $67;
  __THREW__ = 0;
  invoke_viiiiii(19, $this + 56 | 0, $loc | 0, $1 | 0, HEAP32[$self >> 2] | 0, HEAP32[$found_at >> 2] | 0, $binds | 0);
  $171 = __THREW__;
  __THREW__ = 0;
  if ($171 & 1) $$pre$phi44Z2D = $$pre$phi45Z2D; else {
   $174 = HEAP32[$1 + 20 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($binds, HEAP32[$$pre$phi45Z2D >> 2] | 0);
   $$0 = $174;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 $176 = ___cxa_find_matching_catch() | 0;
 $177 = tempRet0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($binds, HEAP32[$$pre$phi44Z2D >> 2] | 0);
 $$1 = $176;
 $$13 = $177;
 ___resumeException($$1 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_16Parser9popExpectEN5Token4KindEPKc($agg$result, $this, $k, $data) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $k = $k | 0;
 $data = $data | 0;
 var $$0 = 0, $$0$i = 0, $$0$i21 = 0, $$01 = 0, $$01$i = 0, $$01$i20 = 0, $$0339 = 0, $$0538 = 0, $$14 = 0, $$16 = 0, $$243 = 0, $$2742 = 0, $$3 = 0, $$38 = 0, $$4 = 0, $$49 = 0, $0 = 0, $1 = 0, $101 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $111 = 0, $112 = 0, $114 = 0, $115 = 0, $116 = 0, $118 = 0, $119 = 0, $121 = 0, $13 = 0, $131 = 0, $132 = 0, $133 = 0, $135 = 0, $136 = 0, $138 = 0, $140 = 0, $142 = 0, $144 = 0, $145 = 0, $146 = 0, $148 = 0, $15 = 0, $150 = 0, $152 = 0, $153 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $26 = 0, $3 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $4 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $66 = 0, $68 = 0, $69 = 0, $71 = 0, $73 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $81 = 0, $82 = 0, $84 = 0, $86 = 0, $87 = 0, $9 = 0, $91 = 0, $92 = 0, $95 = 0, $99 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i18$index12Z2D = 0, $eh$lpad$body$i18$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $ss = 0, $ss1 = 0, $this$idx$val$idx$val$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $0 = sp + 332 | 0;
 $1 = sp + 320 | 0;
 $ss = sp + 176 | 0;
 $2 = sp + 160 | 0;
 $ss1 = sp + 16 | 0;
 $3 = sp;
 $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
 $4 = $this$idx$val$idx$val$i + 8 | 0;
 HEAP32[$agg$result >> 2] = HEAP32[$4 >> 2];
 $6 = $agg$result + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($6, $this$idx$val$idx$val$i + 12 | 0);
 HEAP32[$agg$result >> 2] = HEAP32[$4 >> 2];
 $9 = $agg$result + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $9 | 0, $this$idx$val$idx$val$i + 24 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $13 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  ___resumeException($13 | 0);
 }
 $15 = $agg$result + 28 | 0;
 $16 = $this$idx$val$idx$val$i + 36 | 0;
 HEAP32[$15 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
 HEAP32[$15 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
 HEAP32[$15 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
 HEAP32[$15 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
 HEAP32[$agg$result >> 2] = HEAP32[$4 >> 2];
 $18 = HEAP32[$this >> 2] | 0;
 $20 = HEAP32[$18 + 4 >> 2] | 0;
 $21 = $20 + 4 | 0;
 $23 = HEAP32[$20 >> 2] | 0;
 HEAP32[$23 + 4 >> 2] = HEAP32[$21 >> 2];
 HEAP32[HEAP32[$21 >> 2] >> 2] = $23;
 $26 = $18 + 8 | 0;
 HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + -1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20 + 24 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20 + 12 | 0);
 __ZdlPv($20);
 if ((HEAP32[$agg$result >> 2] | 0) == ($k | 0)) {
  if (!$data) {
   STACKTOP = sp;
   return;
  }
  if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($6, $data) | 0)) {
   STACKTOP = sp;
   return;
  }
  $81 = $ss1 + 64 | 0;
  $91 = $ss1 + 8 | 0;
  HEAP32[$91 >> 2] = 752;
  $92 = $ss1 + 12 | 0;
  HEAP32[$ss1 >> 2] = 900;
  HEAP32[$81 >> 2] = 920;
  HEAP32[$ss1 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss1 + 64 | 0, $92 | 0);
  $95 = __THREW__;
  __THREW__ = 0;
  if ($95 & 1) {
   $107 = ___cxa_find_matching_catch() | 0;
   $$0$i21 = tempRet0;
   $$01$i20 = $107;
  } else {
   HEAP32[$ss1 + 136 >> 2] = 0;
   HEAP32[$ss1 + 140 >> 2] = -1;
   HEAP32[$ss1 >> 2] = 732;
   HEAP32[$81 >> 2] = 772;
   HEAP32[$91 >> 2] = 752;
   __THREW__ = 0;
   invoke_vi(177, $92 | 0);
   $99 = __THREW__;
   __THREW__ = 0;
   do if ($99 & 1) {
    $109 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i18$index12Z2D = tempRet0;
    $eh$lpad$body$i18$indexZ2D = $109;
   } else {
    HEAP32[$92 >> 2] = 1064;
    $101 = $ss1 + 44 | 0;
    HEAP32[$101 + 0 >> 2] = 0;
    HEAP32[$101 + 4 >> 2] = 0;
    HEAP32[$101 + 8 >> 2] = 0;
    HEAP32[$101 + 12 >> 2] = 0;
    HEAP32[$ss1 + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $92 | 0, $0 | 0);
    $103 = __THREW__;
    __THREW__ = 0;
    if ($103 & 1) {
     $105 = ___cxa_find_matching_catch() | 0;
     $106 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($101);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($92);
     $eh$lpad$body$i18$index12Z2D = $106;
     $eh$lpad$body$i18$indexZ2D = $105;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $111 = invoke_iiii(25, $91 | 0, 38312, 18) | 0;
    $112 = __THREW__;
    __THREW__ = 0;
    L19 : do if ($112 & 1) label = 50; else {
     $114 = _strlen($data | 0) | 0;
     __THREW__ = 0;
     $115 = invoke_iiii(25, $111 | 0, $data | 0, $114 | 0) | 0;
     $116 = __THREW__;
     __THREW__ = 0;
     if ($116 & 1) label = 50; else {
      __THREW__ = 0;
      $118 = invoke_iiii(25, $115 | 0, 38296, 9) | 0;
      $119 = __THREW__;
      __THREW__ = 0;
      if ($119 & 1) label = 50; else {
       $121 = HEAP8[$6 >> 0] | 0;
       if (!($121 & 1)) {
        $131 = $6 + 1 | 0;
        $132 = ($121 & 255) >>> 1;
       } else {
        $131 = HEAP32[$agg$result + 12 >> 2] | 0;
        $132 = HEAP32[$agg$result + 8 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $118 | 0, $131 | 0, $132 | 0) | 0;
       $133 = __THREW__;
       __THREW__ = 0;
       if ($133 & 1) label = 50; else {
        $135 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_vii(43, $3 | 0, $92 | 0);
        $136 = __THREW__;
        __THREW__ = 0;
        L28 : do if ($136 & 1) {
         $150 = ___cxa_find_matching_catch() | 0;
         $$243 = tempRet0;
         $$2742 = $150;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $135 | 0, $9 | 0);
         $138 = __THREW__;
         __THREW__ = 0;
         do if ($138 & 1) $$0 = 1; else {
          $140 = $135 + 12 | 0;
          HEAP32[$140 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
          HEAP32[$140 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
          HEAP32[$140 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
          HEAP32[$140 + 12 >> 2] = HEAP32[$15 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $135 + 28 | 0, $3 | 0);
          $142 = __THREW__;
          __THREW__ = 0;
          if ($142 & 1) {
           $144 = ___cxa_find_matching_catch() | 0;
           $145 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
           $$243 = $145;
           $$2742 = $144;
           break L28;
          }
          __THREW__ = 0;
          invoke_viii(4, $135 | 0, 48, 176);
          $146 = __THREW__;
          __THREW__ = 0;
          if ($146 & 1) {
           $$0 = 0;
           break;
          }
         } while (0);
         $152 = ___cxa_find_matching_catch() | 0;
         $153 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
         if ($$0) {
          $$243 = $153;
          $$2742 = $152;
         } else {
          $$3 = $153;
          $$38 = $152;
          break L19;
         }
        } while (0);
        ___cxa_free_exception($135 | 0);
        $$3 = $$243;
        $$38 = $$2742;
       }
      }
     }
    } while (0);
    if ((label | 0) == 50) {
     $148 = ___cxa_find_matching_catch() | 0;
     $$3 = tempRet0;
     $$38 = $148;
    }
    HEAP32[$ss1 >> 2] = 732;
    HEAP32[$81 >> 2] = 772;
    HEAP32[$91 >> 2] = 752;
    HEAP32[$92 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($101);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($92);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($81);
    $$4 = $$3;
    $$49 = $$38;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    ___resumeException($$49 | 0);
   } while (0);
   $$0$i21 = $eh$lpad$body$i18$index12Z2D;
   $$01$i20 = $eh$lpad$body$i18$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($81);
  $eh$lpad$body$index7Z2D = $$0$i21;
  $eh$lpad$body$indexZ2D = $$01$i20;
 } else {
  $33 = $ss + 64 | 0;
  $34 = $ss + 8 | 0;
  HEAP32[$34 >> 2] = 752;
  $35 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 900;
  HEAP32[$33 >> 2] = 920;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $35 | 0);
  $38 = __THREW__;
  __THREW__ = 0;
  if ($38 & 1) {
   $50 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $50;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 732;
   HEAP32[$33 >> 2] = 772;
   HEAP32[$34 >> 2] = 752;
   __THREW__ = 0;
   invoke_vi(177, $35 | 0);
   $42 = __THREW__;
   __THREW__ = 0;
   do if ($42 & 1) {
    $52 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $52;
   } else {
    HEAP32[$35 >> 2] = 1064;
    $44 = $ss + 44 | 0;
    HEAP32[$44 + 0 >> 2] = 0;
    HEAP32[$44 + 4 >> 2] = 0;
    HEAP32[$44 + 8 >> 2] = 0;
    HEAP32[$44 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$1 + 0 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $35 | 0, $1 | 0);
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     $48 = ___cxa_find_matching_catch() | 0;
     $49 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($35);
     $eh$lpad$body$i$index2Z2D = $49;
     $eh$lpad$body$i$indexZ2D = $48;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    __THREW__ = 0;
    $54 = invoke_iiii(25, $34 | 0, 38280, 15) | 0;
    $55 = __THREW__;
    __THREW__ = 0;
    L55 : do if ($55 & 1) label = 24; else {
     __THREW__ = 0;
     $57 = invoke_ii(69, $k | 0) | 0;
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) label = 24; else {
      $60 = _strlen($57 | 0) | 0;
      __THREW__ = 0;
      invoke_iiii(25, $54 | 0, $57 | 0, $60 | 0) | 0;
      $61 = __THREW__;
      __THREW__ = 0;
      if ($61 & 1) label = 24; else {
       __THREW__ = 0;
       $63 = invoke_iiii(25, $54 | 0, 38296, 9) | 0;
       $64 = __THREW__;
       __THREW__ = 0;
       if ($64 & 1) label = 24; else {
        __THREW__ = 0;
        invoke_vii(52, $63 | 0, $agg$result | 0);
        $66 = __THREW__;
        __THREW__ = 0;
        if ($66 & 1) label = 24; else {
         $68 = ___cxa_allocate_exception(40) | 0;
         __THREW__ = 0;
         invoke_vii(43, $2 | 0, $35 | 0);
         $69 = __THREW__;
         __THREW__ = 0;
         do if ($69 & 1) {
          $84 = ___cxa_find_matching_catch() | 0;
          $$0339 = tempRet0;
          $$0538 = $84;
         } else {
          __THREW__ = 0;
          invoke_vii(40, $68 | 0, $9 | 0);
          $71 = __THREW__;
          __THREW__ = 0;
          if ($71 & 1) $$01 = 1; else {
           $73 = $68 + 12 | 0;
           HEAP32[$73 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
           HEAP32[$73 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
           HEAP32[$73 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
           HEAP32[$73 + 12 >> 2] = HEAP32[$15 + 12 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $68 + 28 | 0, $2 | 0);
           $75 = __THREW__;
           __THREW__ = 0;
           if ($75 & 1) {
            $77 = ___cxa_find_matching_catch() | 0;
            $78 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
            $$0339 = $78;
            $$0538 = $77;
            break;
           }
           __THREW__ = 0;
           invoke_viii(4, $68 | 0, 48, 176);
           $79 = __THREW__;
           __THREW__ = 0;
           if ($79 & 1) $$01 = 0; else {}
          }
          $86 = ___cxa_find_matching_catch() | 0;
          $87 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
          if ($$01) {
           $$0339 = $87;
           $$0538 = $86;
          } else {
           $$14 = $87;
           $$16 = $86;
           break L55;
          }
         } while (0);
         ___cxa_free_exception($68 | 0);
         $$14 = $$0339;
         $$16 = $$0538;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 24) {
     $82 = ___cxa_find_matching_catch() | 0;
     $$14 = tempRet0;
     $$16 = $82;
    }
    HEAP32[$ss >> 2] = 732;
    HEAP32[$33 >> 2] = 772;
    HEAP32[$34 >> 2] = 752;
    HEAP32[$35 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($35);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($33);
    $$4 = $$14;
    $$49 = $$16;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    ___resumeException($$49 | 0);
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($33);
  $eh$lpad$body$index7Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
 }
 $$4 = $eh$lpad$body$index7Z2D;
 $$49 = $eh$lpad$body$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 ___resumeException($$49 | 0);
}

function __ZL23default_import_callbackPvPKcS1_PPcPi($ctx, $base, $file, $found_here_cptr, $success) {
 $ctx = $ctx | 0;
 $base = $base | 0;
 $file = $file | 0;
 $found_here_cptr = $found_here_cptr | 0;
 $success = $success | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i20 = 0, $$0$i$i27 = 0, $$0$i$i32 = 0, $$0$i$i39 = 0, $$0$i$i8 = 0, $$01 = 0, $$01$i = 0, $$03 = 0, $$1 = 0, $$12 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$byval_copy = 0, $$byval_copy6 = 0, $0 = 0, $1 = 0, $101 = 0, $102 = 0, $109 = 0, $11 = 0, $113 = 0, $118 = 0, $121 = 0, $127 = 0, $128 = 0, $129 = 0, $131 = 0, $132 = 0, $134 = 0, $136 = 0, $141 = 0, $142 = 0, $144 = 0, $146 = 0, $151 = 0, $152 = 0, $154 = 0, $155 = 0, $159 = 0, $16 = 0, $161 = 0, $163 = 0, $168 = 0, $169 = 0, $17 = 0, $171 = 0, $173 = 0, $178 = 0, $179 = 0, $181 = 0, $186 = 0, $187 = 0, $189 = 0, $19 = 0, $191 = 0, $196 = 0, $197 = 0, $198 = 0, $2 = 0, $201 = 0, $205 = 0, $206 = 0, $207 = 0, $209 = 0, $21 = 0, $211 = 0, $216 = 0, $217 = 0, $219 = 0, $221 = 0, $226 = 0, $227 = 0, $229 = 0, $231 = 0, $232 = 0, $233 = 0, $235 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $34 = 0, $36 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $46 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $7 = 0, $72 = 0, $74 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $82 = 0, $86 = 0, $88 = 0, $9 = 0, $90 = 0, $98 = 0, $abs_path = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $f = 0, $input = 0, $strlenfirst = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $$byval_copy6 = sp + 296 | 0;
 $$byval_copy = sp + 292 | 0;
 $0 = sp + 280 | 0;
 $1 = sp + 268 | 0;
 $abs_path = sp + 256 | 0;
 $2 = sp + 244 | 0;
 $3 = sp + 232 | 0;
 $f = sp + 44 | 0;
 $4 = sp + 32 | 0;
 $input = sp + 20 | 0;
 $5 = sp + 16 | 0;
 $6 = sp + 12 | 0;
 $7 = sp;
 $strlenfirst = HEAP8[$file >> 0] | 0;
 if (!($strlenfirst << 24 >> 24)) {
  HEAP32[$success >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 42632, 40);
  $9 = HEAP8[$0 >> 0] | 0;
  $11 = ($9 & 1) == 0;
  if ($11) $17 = ($9 & 255) >>> 1; else $17 = HEAP32[$0 + 4 >> 2] | 0;
  $16 = $17 + 1 | 0;
  if (!$16) $$0$i$i = 0; else {
   $19 = _malloc($16) | 0;
   if (!$19) {
    __THREW__ = 0;
    invoke_v(5);
    $21 = __THREW__;
    __THREW__ = 0;
    if (!($21 & 1)) {}
    $27 = ___cxa_find_matching_catch() | 0;
    $28 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $$3 = $28;
    $$36 = $27;
    ___resumeException($$36 | 0);
   } else $$0$i$i = $19;
  }
  if ($11) $26 = $0 + 1 | 0; else $26 = HEAP32[$0 + 8 >> 2] | 0;
  _strcpy($$0$i$i | 0, $26 | 0) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $$1 = $$0$i$i;
  STACKTOP = sp;
  return $$1 | 0;
 }
 if ((HEAP8[$file + ((_strlen($file | 0) | 0) + -1) >> 0] | 0) == 47) {
  HEAP32[$success >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 42680, 31);
  $34 = HEAP8[$1 >> 0] | 0;
  $36 = ($34 & 1) == 0;
  if ($36) $42 = ($34 & 255) >>> 1; else $42 = HEAP32[$1 + 4 >> 2] | 0;
  $41 = $42 + 1 | 0;
  if (!$41) $$0$i$i8 = 0; else {
   $44 = _malloc($41) | 0;
   if (!$44) {
    __THREW__ = 0;
    invoke_v(5);
    $46 = __THREW__;
    __THREW__ = 0;
    if (!($46 & 1)) {}
    $52 = ___cxa_find_matching_catch() | 0;
    $53 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    $$3 = $53;
    $$36 = $52;
    ___resumeException($$36 | 0);
   } else $$0$i$i8 = $44;
  }
  if ($36) $51 = $1 + 1 | 0; else $51 = HEAP32[$1 + 8 >> 2] | 0;
  _strcpy($$0$i$i8 | 0, $51 | 0) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $$1 = $$0$i$i8;
  STACKTOP = sp;
  return $$1 | 0;
 };
 HEAP32[$abs_path + 0 >> 2] = 0;
 HEAP32[$abs_path + 4 >> 2] = 0;
 HEAP32[$abs_path + 8 >> 2] = 0;
 do if ($strlenfirst << 24 >> 24 == 47) {
  __THREW__ = 0;
  invoke_iii(19, $abs_path | 0, $file | 0) | 0;
  $55 = __THREW__;
  __THREW__ = 0;
  if ($55 & 1) label = 29; else label = 40;
 } else {
  $59 = _strlen($base | 0) | 0;
  __THREW__ = 0;
  invoke_viii(3, $3 | 0, $base | 0, $59 | 0);
  $60 = __THREW__;
  __THREW__ = 0;
  if ($60 & 1) label = 29; else {
   __THREW__ = 0;
   $62 = invoke_iii(27, $3 | 0, $file | 0) | 0;
   $63 = __THREW__;
   __THREW__ = 0;
   if ($63 & 1) {
    $76 = ___cxa_find_matching_catch() | 0;
    $77 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $$2 = $77;
    $$25 = $76;
    break;
   };
   HEAP32[$2 + 0 >> 2] = HEAP32[$62 + 0 >> 2];
   HEAP32[$2 + 4 >> 2] = HEAP32[$62 + 4 >> 2];
   HEAP32[$2 + 8 >> 2] = HEAP32[$62 + 8 >> 2];
   HEAP32[$62 + 0 >> 2] = 0;
   HEAP32[$62 + 4 >> 2] = 0;
   HEAP32[$62 + 8 >> 2] = 0;
   if (!(HEAP8[$abs_path >> 0] & 1)) {
    HEAP8[$abs_path + 1 >> 0] = 0;
    HEAP8[$abs_path >> 0] = 0;
   } else {
    HEAP8[HEAP32[$abs_path + 8 >> 2] >> 0] = 0;
    HEAP32[$abs_path + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $abs_path | 0, 0);
   $72 = __THREW__;
   __THREW__ = 0;
   if ($72 & 1) {
    $74 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($74);
   } else {
    HEAP32[$abs_path + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    HEAP32[$abs_path + 4 >> 2] = HEAP32[$2 + 4 >> 2];
    HEAP32[$abs_path + 8 >> 2] = HEAP32[$2 + 8 >> 2];
    HEAP32[$2 + 0 >> 2] = 0;
    HEAP32[$2 + 4 >> 2] = 0;
    HEAP32[$2 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    label = 40;
    break;
   }
  }
 } while (0);
 L55 : do if ((label | 0) == 29) {
  $57 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $57;
  label = 30;
 } else if ((label | 0) == 40) {
  $78 = $f + 108 | 0;
  $79 = $f + 8 | 0;
  HEAP32[$f >> 2] = 42348;
  HEAP32[$78 >> 2] = 42368;
  HEAP32[$f + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $f + 108 | 0, $79 | 0);
  $82 = __THREW__;
  __THREW__ = 0;
  do if ($82 & 1) {
   $88 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $88;
  } else {
   HEAP32[$f + 180 >> 2] = 0;
   HEAP32[$f + 184 >> 2] = -1;
   HEAP32[$f >> 2] = 42292;
   HEAP32[$78 >> 2] = 42312;
   __THREW__ = 0;
   invoke_vi(185, $79 | 0);
   $86 = __THREW__;
   __THREW__ = 0;
   if ($86 & 1) {
    $90 = ___cxa_find_matching_catch() | 0;
    $$0$i = tempRet0;
    $$01$i = $90;
    break;
   }
   if (!(HEAP8[$abs_path >> 0] & 1)) $101 = $abs_path + 1 | 0; else $101 = HEAP32[$abs_path + 8 >> 2] | 0;
   $98 = $f + 72 | 0;
   if (!(HEAP32[$98 >> 2] | 0)) {
    $102 = _fopen($101 | 0, 42568) | 0;
    HEAP32[$98 >> 2] = $102;
    if (!$102) label = 51; else {
     HEAP32[$f + 96 >> 2] = 8;
     __THREW__ = 0;
     invoke_vii(48, $f + (HEAP32[(HEAP32[$f >> 2] | 0) + -12 >> 2] | 0) | 0, 0);
     $109 = __THREW__;
     __THREW__ = 0;
     if ($109 & 1) label = 66; else label = 52;
    }
   } else label = 51;
   if ((label | 0) == 51) {
    $113 = HEAP32[(HEAP32[$f >> 2] | 0) + -12 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(48, $f + $113 | 0, HEAP32[$f + ($113 + 16) >> 2] | 4 | 0);
    $118 = __THREW__;
    __THREW__ = 0;
    if ($118 & 1) label = 66; else label = 52;
   }
   L72 : do if ((label | 0) == 52) {
    $121 = (HEAP32[$f >> 2] | 0) + -12 | 0;
    L74 : do if (!(HEAP32[$f + ((HEAP32[$121 >> 2] | 0) + 16) >> 2] | 0)) {
     HEAP32[$input + 0 >> 2] = 0;
     HEAP32[$input + 4 >> 2] = 0;
     HEAP32[$input + 8 >> 2] = 0;
     HEAP32[$5 >> 2] = HEAP32[$f + ((HEAP32[$121 >> 2] | 0) + 24) >> 2];
     HEAP32[$6 >> 2] = 0;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     HEAP32[$$byval_copy6 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
     invoke_iiii(37, $input | 0, $$byval_copy | 0, $$byval_copy6 | 0) | 0;
     $159 = __THREW__;
     __THREW__ = 0;
     L76 : do if (!($159 & 1)) {
      HEAP32[$success >> 2] = 1;
      $161 = HEAP8[$abs_path >> 0] | 0;
      $163 = ($161 & 1) == 0;
      if ($163) $169 = ($161 & 255) >>> 1; else $169 = HEAP32[$abs_path + 4 >> 2] | 0;
      $168 = $169 + 1 | 0;
      if (!$168) $$0$i$i27 = 0; else {
       $171 = _malloc($168) | 0;
       if (!$171) {
        __THREW__ = 0;
        invoke_v(5);
        $173 = __THREW__;
        __THREW__ = 0;
        if ($173 & 1) break;
       } else $$0$i$i27 = $171;
      }
      if ($163) $178 = $abs_path + 1 | 0; else $178 = HEAP32[$abs_path + 8 >> 2] | 0;
      _strcpy($$0$i$i27 | 0, $178 | 0) | 0;
      HEAP32[$found_here_cptr >> 2] = $$0$i$i27;
      $179 = HEAP8[$input >> 0] | 0;
      $181 = ($179 & 1) == 0;
      if ($181) $187 = ($179 & 255) >>> 1; else $187 = HEAP32[$input + 4 >> 2] | 0;
      $186 = $187 + 1 | 0;
      do if (!$186) $$0$i$i32 = 0; else {
       $189 = _malloc($186) | 0;
       if ($189) {
        $$0$i$i32 = $189;
        break;
       }
       __THREW__ = 0;
       invoke_v(5);
       $191 = __THREW__;
       __THREW__ = 0;
       if ($191 & 1) break L76;
      } while (0);
      if ($181) $196 = $input + 1 | 0; else $196 = HEAP32[$input + 8 >> 2] | 0;
      _strcpy($$0$i$i32 | 0, $196 | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($input);
      $$0 = $$0$i$i32;
      break L74;
     } while (0);
     $197 = ___cxa_find_matching_catch(47808) | 0;
     $198 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($input);
     if (($198 | 0) != (_llvm_eh_typeid_for(47808) | 0)) {
      $$12 = $198;
      $$14 = $197;
      break L72;
     }
     $201 = ___cxa_begin_catch($197 | 0) | 0;
     HEAP32[$success >> 2] = 0;
     $205 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$201 >> 2] | 0) + 8 >> 2] & 127]($201) | 0;
     $206 = _strlen($205 | 0) | 0;
     __THREW__ = 0;
     invoke_viii(3, $7 | 0, $205 | 0, $206 | 0);
     $207 = __THREW__;
     __THREW__ = 0;
     do if ($207 & 1) {
      $229 = ___cxa_find_matching_catch() | 0;
      $$01 = tempRet0;
      $$03 = $229;
     } else {
      $209 = HEAP8[$7 >> 0] | 0;
      $211 = ($209 & 1) == 0;
      if ($211) $217 = ($209 & 255) >>> 1; else $217 = HEAP32[$7 + 4 >> 2] | 0;
      $216 = $217 + 1 | 0;
      if (!$216) $$0$i$i39 = 0; else {
       $219 = _malloc($216) | 0;
       if (!$219) {
        __THREW__ = 0;
        invoke_v(5);
        $221 = __THREW__;
        __THREW__ = 0;
        if ($221 & 1) {
         $231 = ___cxa_find_matching_catch() | 0;
         $232 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
         $$01 = $232;
         $$03 = $231;
         break;
        } else {}
       } else $$0$i$i39 = $219;
      }
      if ($211) $226 = $7 + 1 | 0; else $226 = HEAP32[$7 + 8 >> 2] | 0;
      _strcpy($$0$i$i39 | 0, $226 | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      __THREW__ = 0;
      invoke_v(2);
      $227 = __THREW__;
      __THREW__ = 0;
      if ($227 & 1) {
       label = 66;
       break L72;
      } else {
       $$0 = $$0$i$i39;
       break L74;
      }
     } while (0);
     __THREW__ = 0;
     invoke_v(2);
     $233 = __THREW__;
     __THREW__ = 0;
     if (!($233 & 1)) {
      $$12 = $$01;
      $$14 = $$03;
      break L72;
     }
     $235 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($235);
    } else {
     HEAP32[$success >> 2] = 0;
     $127 = HEAP32[(___errno_location() | 0) >> 2] | 0;
     __THREW__ = 0;
     $128 = invoke_ii(70, $127 | 0) | 0;
     $129 = __THREW__;
     __THREW__ = 0;
     if ($129 & 1) {
      label = 66;
      break L72;
     }
     $131 = _strlen($128 | 0) | 0;
     __THREW__ = 0;
     invoke_viii(3, $4 | 0, $128 | 0, $131 | 0);
     $132 = __THREW__;
     __THREW__ = 0;
     if ($132 & 1) {
      label = 66;
      break L72;
     }
     $134 = HEAP8[$4 >> 0] | 0;
     $136 = ($134 & 1) == 0;
     if ($136) $142 = ($134 & 255) >>> 1; else $142 = HEAP32[$4 + 4 >> 2] | 0;
     $141 = $142 + 1 | 0;
     if (!$141) $$0$i$i20 = 0; else {
      $144 = _malloc($141) | 0;
      if (!$144) {
       __THREW__ = 0;
       invoke_v(5);
       $146 = __THREW__;
       __THREW__ = 0;
       if ($146 & 1) {
        $154 = ___cxa_find_matching_catch() | 0;
        $155 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        $$12 = $155;
        $$14 = $154;
        break L72;
       } else {}
      } else $$0$i$i20 = $144;
     }
     if ($136) $151 = $4 + 1 | 0; else $151 = HEAP32[$4 + 8 >> 2] | 0;
     _strcpy($$0$i$i20 | 0, $151 | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     $$0 = $$0$i$i20;
    } while (0);
    HEAP32[$f >> 2] = 42292;
    HEAP32[$78 >> 2] = 42312;
    __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($79);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($78);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($abs_path);
    $$1 = $$0;
    STACKTOP = sp;
    return $$1 | 0;
   } while (0);
   if ((label | 0) == 66) {
    $152 = ___cxa_find_matching_catch() | 0;
    $$12 = tempRet0;
    $$14 = $152;
   }
   HEAP32[$f >> 2] = 42292;
   HEAP32[$78 >> 2] = 42312;
   __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($79);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($78);
   $$2 = $$12;
   $$25 = $$14;
   break L55;
  } while (0);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($78);
  $eh$lpad$body$index2Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
  label = 30;
 } while (0);
 if ((label | 0) == 30) {
  $$2 = $eh$lpad$body$index2Z2D;
  $$25 = $eh$lpad$body$indexZ2D;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($abs_path);
 $$3 = $$2;
 $$36 = $$25;
 ___resumeException($$36 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter19validateBuiltinArgsERK13LocationRangemRKNSt3__16vectorINS_5ValueENS4_9allocatorIS6_EEEENS5_INS6_4TypeENS7_ISC_EEEE($this, $loc, $builtin, $args, $params) {
 $this = $this | 0;
 $loc = $loc | 0;
 $builtin = $builtin | 0;
 $args = $args | 0;
 $params = $params | 0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$01$i = 0, $$03 = 0, $$1230 = 0, $$1429 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $0 = 0, $1 = 0, $10 = 0, $103 = 0, $104 = 0, $105 = 0, $109 = 0, $111 = 0, $113 = 0, $115 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $133 = 0, $135 = 0, $142 = 0, $143 = 0, $144 = 0, $148 = 0, $149 = 0, $150 = 0, $152 = 0, $153 = 0, $156 = 0, $158 = 0, $160 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $167 = 0, $168 = 0, $170 = 0, $171 = 0, $174 = 0, $2 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $43 = 0, $45 = 0, $5 = 0, $53 = 0, $54 = 0, $6 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $70 = 0, $80 = 0, $81 = 0, $82 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $94 = 0, $96 = 0, $args$idx16$val = 0, $args$idx17$val = 0, $args$idx8$val = 0, $args$idx9 = 0, $args$idx9$val = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body20$index9Z2D = 0, $eh$lpad$body20$indexZ2D = 0, $i$041 = 0, $params$idx$val = 0, $params$idx10 = 0, $params$idx13$val = 0, $params$idx14$val = 0, $prefix$036 = 0, $prefix$135 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $0 = sp + 232 | 0;
 $1 = sp + 208 | 0;
 $ss = sp + 64 | 0;
 $2 = sp + 48 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 $args$idx8$val = HEAP32[$args >> 2] | 0;
 $args$idx9 = $args + 4 | 0;
 $args$idx9$val = HEAP32[$args$idx9 >> 2] | 0;
 $10 = $args$idx9$val - $args$idx8$val >> 4;
 $params$idx$val = HEAP32[$params >> 2] | 0;
 $params$idx10 = $params + 4 | 0;
 do if (($10 | 0) == ((HEAP32[$params$idx10 >> 2] | 0) - $params$idx$val >> 2 | 0)) {
  if (($args$idx9$val | 0) == ($args$idx8$val | 0)) {
   STACKTOP = sp;
   return;
  }
  $i$041 = 0;
  do {
   if ((HEAP32[$args$idx8$val + ($i$041 << 4) >> 2] | 0) != (HEAP32[$params$idx$val + ($i$041 << 2) >> 2] | 0)) {
    label = 8;
    break;
   }
   $i$041 = $i$041 + 1 | 0;
  } while ($i$041 >>> 0 < $10 >>> 0);
  if ((label | 0) == 8) break;
  STACKTOP = sp;
  return;
 } while (0);
 __Z20jsonnet_builtin_declm($1, $builtin);
 $24 = $ss + 64 | 0;
 $25 = $ss + 8 | 0;
 HEAP32[$25 >> 2] = 752;
 $26 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 900;
 HEAP32[$24 >> 2] = 920;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $26 | 0);
 $29 = __THREW__;
 __THREW__ = 0;
 L14 : do if ($29 & 1) {
  $41 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $41;
  label = 39;
 } else {
  HEAP32[$ss + 136 >> 2] = 0;
  HEAP32[$ss + 140 >> 2] = -1;
  HEAP32[$ss >> 2] = 732;
  HEAP32[$24 >> 2] = 772;
  HEAP32[$25 >> 2] = 752;
  __THREW__ = 0;
  invoke_vi(177, $26 | 0);
  $33 = __THREW__;
  __THREW__ = 0;
  do if ($33 & 1) {
   $43 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $43;
  } else {
   HEAP32[$26 >> 2] = 1064;
   $35 = $ss + 44 | 0;
   HEAP32[$35 + 0 >> 2] = 0;
   HEAP32[$35 + 4 >> 2] = 0;
   HEAP32[$35 + 8 >> 2] = 0;
   HEAP32[$35 + 12 >> 2] = 0;
   HEAP32[$ss + 60 >> 2] = 24;
   HEAP32[$0 + 0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(42, $26 | 0, $0 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if ($37 & 1) {
    $39 = ___cxa_find_matching_catch() | 0;
    $40 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($26);
    $eh$lpad$body$i$index2Z2D = $40;
    $eh$lpad$body$i$indexZ2D = $39;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   HEAP32[$3 + 0 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   $45 = HEAP8[$1 >> 0] | 0;
   if (!($45 & 1)) $53 = ($45 & 255) >>> 1; else $53 = HEAP32[$1 + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(14, $3 | 0, 41600, 17, $53 + 17 | 0);
   $54 = __THREW__;
   __THREW__ = 0;
   L26 : do if ($54 & 1) label = 24; else {
    if (!(HEAP8[$1 >> 0] & 1)) $62 = $1 + 1 | 0; else $62 = HEAP32[$1 + 8 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiii(33, $3 | 0, $62 | 0, $53 | 0) | 0;
    $63 = __THREW__;
    __THREW__ = 0;
    if ($63 & 1) label = 24; else {
     __THREW__ = 0;
     $67 = invoke_iii(27, $3 | 0, 41624) | 0;
     $68 = __THREW__;
     __THREW__ = 0;
     do if ($68 & 1) {
      $115 = ___cxa_find_matching_catch() | 0;
      $$01 = $115;
      $$03 = tempRet0;
     } else {
      HEAP32[$2 + 0 >> 2] = HEAP32[$67 + 0 >> 2];
      HEAP32[$2 + 4 >> 2] = HEAP32[$67 + 4 >> 2];
      HEAP32[$2 + 8 >> 2] = HEAP32[$67 + 8 >> 2];
      HEAP32[$67 + 0 >> 2] = 0;
      HEAP32[$67 + 4 >> 2] = 0;
      HEAP32[$67 + 8 >> 2] = 0;
      $70 = HEAP8[$2 >> 0] | 0;
      if (!($70 & 1)) {
       $80 = $2 + 1 | 0;
       $81 = ($70 & 255) >>> 1;
      } else {
       $80 = HEAP32[$2 + 8 >> 2] | 0;
       $81 = HEAP32[$2 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $25 | 0, $80 | 0, $81 | 0) | 0;
      $82 = __THREW__;
      __THREW__ = 0;
      if ($82 & 1) {
       $117 = ___cxa_find_matching_catch() | 0;
       $118 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
       $$01 = $117;
       $$03 = $118;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $params$idx13$val = HEAP32[$params >> 2] | 0;
      $params$idx14$val = HEAP32[$params$idx10 >> 2] | 0;
      do if (($params$idx13$val | 0) != ($params$idx14$val | 0)) {
       $85 = $4 + 1 | 0;
       $86 = $4 + 8 | 0;
       $87 = $4 + 4 | 0;
       $89 = $params$idx13$val;
       $prefix$036 = 48920;
       while (1) {
        $88 = HEAP32[$89 >> 2] | 0;
        $90 = _strlen($prefix$036 | 0) | 0;
        __THREW__ = 0;
        $91 = invoke_iiii(25, $25 | 0, $prefix$036 | 0, $90 | 0) | 0;
        $92 = __THREW__;
        __THREW__ = 0;
        if ($92 & 1) {
         label = 41;
         break;
        }
        __THREW__ = 0;
        invoke_vii(61, $4 | 0, $88 | 0);
        $94 = __THREW__;
        __THREW__ = 0;
        if ($94 & 1) {
         label = 41;
         break;
        }
        $96 = HEAP8[$4 >> 0] | 0;
        if (!($96 & 1)) {
         $103 = $85;
         $104 = ($96 & 255) >>> 1;
        } else {
         $103 = HEAP32[$86 >> 2] | 0;
         $104 = HEAP32[$87 >> 2] | 0;
        }
        __THREW__ = 0;
        invoke_iiii(25, $91 | 0, $103 | 0, $104 | 0) | 0;
        $105 = __THREW__;
        __THREW__ = 0;
        if ($105 & 1) {
         label = 47;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        $89 = $89 + 4 | 0;
        if (($89 | 0) == ($params$idx14$val | 0)) {
         label = 48;
         break;
        } else $prefix$036 = 38552;
       }
       if ((label | 0) == 41) {
        $111 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body20$index9Z2D = tempRet0;
        $eh$lpad$body20$indexZ2D = $111;
        label = 43;
        break L26;
       } else if ((label | 0) == 47) {
        $119 = ___cxa_find_matching_catch() | 0;
        $120 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        $$2 = $119;
        $$25 = $120;
        break L26;
       } else if ((label | 0) == 48) break;
      } while (0);
      __THREW__ = 0;
      invoke_iiii(25, $25 | 0, 41640, 11) | 0;
      $121 = __THREW__;
      __THREW__ = 0;
      if (!($121 & 1)) {
       $args$idx16$val = HEAP32[$args >> 2] | 0;
       $args$idx17$val = HEAP32[$args$idx9 >> 2] | 0;
       do if (($args$idx16$val | 0) != ($args$idx17$val | 0)) {
        $124 = $5 + 1 | 0;
        $125 = $5 + 8 | 0;
        $126 = $5 + 4 | 0;
        $128 = $args$idx16$val;
        $prefix$135 = 48920;
        while (1) {
         $127 = HEAP32[$128 >> 2] | 0;
         $129 = _strlen($prefix$135 | 0) | 0;
         __THREW__ = 0;
         $130 = invoke_iiii(25, $25 | 0, $prefix$135 | 0, $129 | 0) | 0;
         $131 = __THREW__;
         __THREW__ = 0;
         if ($131 & 1) {
          label = 40;
          break;
         }
         __THREW__ = 0;
         invoke_vii(61, $5 | 0, $127 | 0);
         $133 = __THREW__;
         __THREW__ = 0;
         if ($133 & 1) {
          label = 40;
          break;
         }
         $135 = HEAP8[$5 >> 0] | 0;
         if (!($135 & 1)) {
          $142 = $124;
          $143 = ($135 & 255) >>> 1;
         } else {
          $142 = HEAP32[$125 >> 2] | 0;
          $143 = HEAP32[$126 >> 2] | 0;
         }
         __THREW__ = 0;
         invoke_iiii(25, $130 | 0, $142 | 0, $143 | 0) | 0;
         $144 = __THREW__;
         __THREW__ = 0;
         if ($144 & 1) {
          label = 59;
          break;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
         $128 = $128 + 16 | 0;
         if (($128 | 0) == ($args$idx17$val | 0)) {
          label = 60;
          break;
         } else $prefix$135 = 38552;
        }
        if ((label | 0) == 40) {
         $109 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body20$index9Z2D = tempRet0;
         $eh$lpad$body20$indexZ2D = $109;
         label = 43;
         break L26;
        } else if ((label | 0) == 59) {
         $148 = ___cxa_find_matching_catch() | 0;
         $149 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
         $$2 = $148;
         $$25 = $149;
         break L26;
        } else if ((label | 0) == 60) break;
       } while (0);
       __THREW__ = 0;
       invoke_iiii(25, $25 | 0, 42272, 1) | 0;
       $150 = __THREW__;
       __THREW__ = 0;
       if (!($150 & 1)) {
        $152 = ___cxa_allocate_exception(24) | 0;
        __THREW__ = 0;
        invoke_vii(43, $6 | 0, $26 | 0);
        $153 = __THREW__;
        __THREW__ = 0;
        if ($153 & 1) {
         $160 = ___cxa_find_matching_catch() | 0;
         $$1230 = $160;
         $$1429 = tempRet0;
        } else {
         __THREW__ = 0;
         invoke_viiii(17, $152 | 0, $this + 56 | 0, $loc | 0, $6 | 0);
         $156 = __THREW__;
         __THREW__ = 0;
         do if ($156 & 1) $$0 = 1; else {
          __THREW__ = 0;
          invoke_viii(4, $152 | 0, 38664, 183);
          $158 = __THREW__;
          __THREW__ = 0;
          if ($158 & 1) {
           $$0 = 0;
           break;
          }
         } while (0);
         $162 = ___cxa_find_matching_catch() | 0;
         $163 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
         if ($$0) {
          $$1230 = $162;
          $$1429 = $163;
         } else {
          $$2 = $162;
          $$25 = $163;
          break L26;
         }
        }
        ___cxa_free_exception($152 | 0);
        $$2 = $$1230;
        $$25 = $$1429;
        break L26;
       }
      }
      $113 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body20$index9Z2D = tempRet0;
      $eh$lpad$body20$indexZ2D = $113;
      label = 43;
      break L26;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $$2 = $$01;
     $$25 = $$03;
    }
   } while (0);
   if ((label | 0) == 24) {
    $65 = ___cxa_find_matching_catch() | 0;
    $66 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $eh$lpad$body20$index9Z2D = $66;
    $eh$lpad$body20$indexZ2D = $65;
    label = 43;
   }
   if ((label | 0) == 43) {
    $$2 = $eh$lpad$body20$indexZ2D;
    $$25 = $eh$lpad$body20$index9Z2D;
   }
   HEAP32[$ss >> 2] = 732;
   HEAP32[$24 >> 2] = 772;
   HEAP32[$25 >> 2] = 752;
   HEAP32[$26 >> 2] = 1064;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($26);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($24);
   $$3 = $$2;
   $$36 = $$25;
   break L14;
  } while (0);
  $$0$i = $eh$lpad$body$i$index2Z2D;
  $$01$i = $eh$lpad$body$i$indexZ2D;
  label = 39;
 } while (0);
 if ((label | 0) == 39) {
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($24);
  $$3 = $$01$i;
  $$36 = $$0$i;
 }
 $164 = $1 + 12 | 0;
 $165 = HEAP32[$164 >> 2] | 0;
 if (!$165) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  ___resumeException($$3 | 0);
 }
 $167 = $1 + 16 | 0;
 $168 = HEAP32[$167 >> 2] | 0;
 if (($168 | 0) == ($165 | 0)) $174 = $165; else {
  $171 = $168;
  do {
   $170 = $171 + -12 | 0;
   HEAP32[$167 >> 2] = $170;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($170);
   $171 = HEAP32[$167 >> 2] | 0;
  } while (($171 | 0) != ($165 | 0));
  $174 = HEAP32[$164 >> 2] | 0;
 }
 __ZdlPv($174);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($$3 | 0);
}

function __Z13jsonnet_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc($alloc, $file, $input) {
 $alloc = $alloc | 0;
 $file = $file | 0;
 $input = $input | 0;
 var $$0 = 0, $$0$i7$i = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$lcssa = 0, $$lcssa40 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $102 = 0, $104 = 0, $105 = 0, $107 = 0, $108 = 0, $11 = 0, $114 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $123 = 0, $124 = 0, $126 = 0, $129 = 0, $13 = 0, $131 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $14 = 0, $145 = 0, $147 = 0, $15 = 0, $150 = 0, $154 = 0, $155 = 0, $158 = 0, $16 = 0, $160 = 0, $161 = 0, $167 = 0, $169 = 0, $17 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $55 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $63 = 0, $64 = 0, $65 = 0, $67 = 0, $68 = 0, $7 = 0, $70 = 0, $71 = 0, $77 = 0, $81 = 0, $83 = 0, $84 = 0, $9 = 0, $90 = 0, $92 = 0, $94 = 0, $95 = 0, $98 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa38 = 0, $__nd$0$i$i$lcssa39 = 0, $__parent$i = 0, $__r$0$i = 0, $c = 0, $eh$lpad$body$index12Z2D = 0, $eh$lpad$body$indexZ2D = 0, $l = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, $lpad$phi27$index = 0, $lpad$phi27$index2 = 0, $params = 0, $std_binds = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $__parent$i = sp + 112 | 0;
 $0 = sp + 108 | 0;
 $1 = sp + 96 | 0;
 $l = sp + 68 | 0;
 $c = sp + 64 | 0;
 $2 = sp + 40 | 0;
 $params = sp + 28 | 0;
 $3 = sp + 24 | 0;
 $std_binds = sp + 12 | 0;
 $4 = sp;
 $5 = __ZL8do_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc($alloc, $file, $input) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 1640, 11);
 __THREW__ = 0;
 $6 = invoke_iiii(26, $alloc | 0, $1 | 0, 1656) | 0;
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $36 = ___cxa_find_matching_catch() | 0;
  $37 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $$2 = $36;
  $$23 = $37;
  ___resumeException($$2 | 0);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$l + 0 >> 2] = 0;
 HEAP32[$l + 4 >> 2] = 0;
 HEAP32[$l + 8 >> 2] = 0;
 HEAP32[$l + 12 >> 2] = 0;
 HEAP32[$l + 16 >> 2] = 0;
 HEAP32[$l + 20 >> 2] = 0;
 HEAP32[$l + 24 >> 2] = 0;
 $9 = $6 + 48 | 0;
 HEAP32[$c >> 2] = 0;
 $10 = $params + 4 | 0;
 $11 = $params + 8 | 0;
 $12 = $2 + 12 | 0;
 $13 = $2 + 16 | 0;
 $14 = $6 + 56 | 0;
 $15 = $2 + 12 | 0;
 $16 = 0;
 L5 : while (1) {
  __THREW__ = 0;
  invoke_vii(49, $2 | 0, $16 | 0);
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) {
   label = 14;
   break;
  }
  HEAP32[$params >> 2] = 0;
  HEAP32[$10 >> 2] = 0;
  HEAP32[$11 >> 2] = 0;
  $19 = HEAP32[$12 >> 2] | 0;
  $20 = HEAP32[$13 >> 2] | 0;
  if (($19 | 0) != ($20 | 0)) {
   $22 = $19;
   do {
    __THREW__ = 0;
    $23 = invoke_iii(23, $alloc | 0, $22 | 0) | 0;
    $24 = __THREW__;
    __THREW__ = 0;
    if ($24 & 1) {
     label = 17;
     break L5;
    }
    HEAP32[$3 >> 2] = $23;
    $26 = HEAP32[$10 >> 2] | 0;
    if ($26 >>> 0 < (HEAP32[$11 >> 2] | 0) >>> 0) {
     if (!$26) $31 = 0; else {
      HEAP32[$26 >> 2] = $23;
      $31 = HEAP32[$10 >> 2] | 0;
     }
     HEAP32[$10 >> 2] = $31 + 4;
    } else {
     __THREW__ = 0;
     invoke_vii(50, $params | 0, $3 | 0);
     $32 = __THREW__;
     __THREW__ = 0;
     if ($32 & 1) {
      label = 17;
      break L5;
     }
    }
    $22 = $22 + 12 | 0;
   } while (($22 | 0) != ($20 | 0));
  }
  __THREW__ = 0;
  $64 = invoke_iiii(27, $alloc | 0, $l | 0, $2 | 0) | 0;
  $65 = __THREW__;
  __THREW__ = 0;
  if ($65 & 1) {
   label = 18;
   break;
  }
  __THREW__ = 0;
  $67 = invoke_iiiii(6, $alloc | 0, $l | 0, $c | 0, $params | 0) | 0;
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   label = 18;
   break;
  }
  __THREW__ = 0;
  $70 = invoke_ii(67, 20) | 0;
  $71 = __THREW__;
  __THREW__ = 0;
  if ($71 & 1) {
   label = 18;
   break;
  }
  HEAP32[$70 + 8 >> 2] = $64;
  HEAP32[$70 + 12 >> 2] = 1;
  HEAP32[$70 + 16 >> 2] = $67;
  HEAP32[$70 + 4 >> 2] = $9;
  $77 = HEAP32[$9 >> 2] | 0;
  HEAP32[$70 >> 2] = $77;
  HEAP32[$77 + 4 >> 2] = $70;
  HEAP32[$9 >> 2] = $70;
  HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 1;
  $81 = HEAP32[$params >> 2] | 0;
  $83 = $81;
  if ($81) {
   $84 = HEAP32[$10 >> 2] | 0;
   if (($84 | 0) != ($81 | 0)) HEAP32[$10 >> 2] = $84 + (~(($84 + -4 - $83 | 0) >>> 2) << 2);
   __ZdlPv($81);
  }
  $90 = HEAP32[$15 >> 2] | 0;
  if ($90) {
   $92 = HEAP32[$13 >> 2] | 0;
   if (($92 | 0) == ($90 | 0)) $98 = $90; else {
    $95 = $92;
    do {
     $94 = $95 + -12 | 0;
     HEAP32[$13 >> 2] = $94;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($94);
     $95 = HEAP32[$13 >> 2] | 0;
    } while (($95 | 0) != ($90 | 0));
    $98 = HEAP32[$15 >> 2] | 0;
   }
   __ZdlPv($98);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $16 = $16 + 1 | 0;
  HEAP32[$c >> 2] = $16;
  if ($16 >>> 0 >= 24) {
   label = 45;
   break;
  }
 }
 do if ((label | 0) == 14) {
  $38 = ___cxa_find_matching_catch() | 0;
  $lpad$phi27$index = $38;
  $lpad$phi27$index2 = tempRet0;
  label = 16;
 } else if ((label | 0) == 17) {
  $42 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $42;
  $lpad$phi$index7 = tempRet0;
  label = 19;
 } else if ((label | 0) == 18) {
  $44 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $44;
  $lpad$phi$index7 = tempRet0;
  label = 19;
 } else if ((label | 0) == 45) {
  __THREW__ = 0;
  $101 = invoke_iiii(28, $alloc | 0, $l | 0, 35672) | 0;
  $102 = __THREW__;
  __THREW__ = 0;
  if (!($102 & 1)) {
   __THREW__ = 0;
   $104 = invoke_iiii(27, $alloc | 0, $l | 0, $file | 0) | 0;
   $105 = __THREW__;
   __THREW__ = 0;
   if (!($105 & 1)) {
    __THREW__ = 0;
    $107 = invoke_ii(67, 20) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if (!($108 & 1)) {
     HEAP32[$107 + 8 >> 2] = $101;
     HEAP32[$107 + 12 >> 2] = 1;
     HEAP32[$107 + 16 >> 2] = $104;
     HEAP32[$107 + 4 >> 2] = $9;
     $114 = HEAP32[$9 >> 2] | 0;
     HEAP32[$107 >> 2] = $114;
     HEAP32[$114 + 4 >> 2] = $107;
     HEAP32[$9 >> 2] = $107;
     HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 1;
     $118 = $std_binds + 4 | 0;
     HEAP32[$118 >> 2] = 0;
     $119 = $std_binds + 8 | 0;
     HEAP32[$119 >> 2] = 0;
     $120 = $std_binds + 4 | 0;
     HEAP32[$std_binds >> 2] = $120;
     __THREW__ = 0;
     invoke_viii(3, $4 | 0, 35688, 3);
     $121 = __THREW__;
     __THREW__ = 0;
     L47 : do if ($121 & 1) label = 74; else {
      __THREW__ = 0;
      $123 = invoke_iii(23, $alloc | 0, $4 | 0) | 0;
      $124 = __THREW__;
      __THREW__ = 0;
      do if (!($124 & 1)) {
       $126 = HEAP32[$120 >> 2] | 0;
       do if (!$126) {
        HEAP32[$__parent$i >> 2] = $120;
        $$0$i7$i = $120;
        $145 = $120;
        label = 61;
       } else {
        $__nd$0$i$i = $126;
        while (1) {
         $129 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
         if ($123 >>> 0 < $129 >>> 0) {
          $131 = HEAP32[$__nd$0$i$i >> 2] | 0;
          if (!$131) {
           $$lcssa40 = $__nd$0$i$i;
           $__nd$0$i$i$lcssa39 = $__nd$0$i$i;
           label = 54;
           break;
          } else $__nd$0$be$in$i$i = $131;
         } else {
          if ($129 >>> 0 >= $123 >>> 0) {
           $__nd$0$i$i$lcssa = $__nd$0$i$i;
           label = 60;
           break;
          }
          $134 = $__nd$0$i$i + 4 | 0;
          $135 = HEAP32[$134 >> 2] | 0;
          if (!$135) {
           $$lcssa = $134;
           $__nd$0$i$i$lcssa38 = $__nd$0$i$i;
           label = 58;
           break;
          } else $__nd$0$be$in$i$i = $135;
         }
         $__nd$0$i$i = $__nd$0$be$in$i$i;
        }
        if ((label | 0) == 54) {
         HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa39;
         $$0$i7$i = $$lcssa40;
         $145 = $__nd$0$i$i$lcssa39;
         label = 61;
         break;
        } else if ((label | 0) == 58) {
         HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa38;
         $$0$i7$i = $$lcssa;
         $145 = $__nd$0$i$i$lcssa38;
         label = 61;
         break;
        } else if ((label | 0) == 60) {
         HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
         if (!$__nd$0$i$i$lcssa) {
          $$0$i7$i = $__parent$i;
          $145 = 0;
          label = 61;
          break;
         } else {
          $__r$0$i = $__nd$0$i$i$lcssa;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 61) {
        __THREW__ = 0;
        $138 = invoke_ii(67, 24) | 0;
        $139 = __THREW__;
        __THREW__ = 0;
        if ($139 & 1) break;
        HEAP32[$138 + 16 >> 2] = $123;
        HEAP32[$138 + 20 >> 2] = 0;
        HEAP32[$138 >> 2] = 0;
        HEAP32[$138 + 4 >> 2] = 0;
        HEAP32[$138 + 8 >> 2] = $145;
        HEAP32[$$0$i7$i >> 2] = $138;
        $147 = HEAP32[HEAP32[$std_binds >> 2] >> 2] | 0;
        if (!$147) $150 = $138; else {
         HEAP32[$std_binds >> 2] = $147;
         $150 = HEAP32[$$0$i7$i >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$118 >> 2] | 0, $150);
        HEAP32[$119 >> 2] = (HEAP32[$119 >> 2] | 0) + 1;
        $__r$0$i = $138;
       }
       HEAP32[$__r$0$i + 20 >> 2] = $6;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
       __THREW__ = 0;
       $154 = invoke_ii(67, 64) | 0;
       $155 = __THREW__;
       __THREW__ = 0;
       if ($155 & 1) {
        label = 74;
        break L47;
       }
       __THREW__ = 0;
       invoke_viiii(12, $154 | 0, $5 + 4 | 0, $std_binds | 0, $5 | 0);
       $158 = __THREW__;
       __THREW__ = 0;
       if ($158 & 1) {
        $171 = ___cxa_find_matching_catch() | 0;
        $172 = tempRet0;
        __ZdlPv($154);
        $eh$lpad$body$index12Z2D = $172;
        $eh$lpad$body$indexZ2D = $171;
        label = 75;
        break L47;
       }
       HEAP32[$0 >> 2] = $154;
       $160 = $alloc + 16 | 0;
       $161 = HEAP32[$160 >> 2] | 0;
       if ($161 >>> 0 >= (HEAP32[$alloc + 20 >> 2] | 0) >>> 0) {
        __THREW__ = 0;
        invoke_vii(51, $alloc + 12 | 0, $0 | 0);
        $169 = __THREW__;
        __THREW__ = 0;
        if ($169 & 1) {
         label = 74;
         break L47;
        }
        $173 = HEAP32[$120 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($std_binds, $173);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
        STACKTOP = sp;
        return $154 | 0;
       }
       if (!$161) $167 = 0; else {
        HEAP32[$161 >> 2] = $154;
        $167 = HEAP32[$160 >> 2] | 0;
       }
       HEAP32[$160 >> 2] = $167 + 4;
       $173 = HEAP32[$120 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($std_binds, $173);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
       STACKTOP = sp;
       return $154 | 0;
      } while (0);
      $176 = ___cxa_find_matching_catch() | 0;
      $177 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $$0 = $176;
      $$01 = $177;
     } while (0);
     if ((label | 0) == 74) {
      $174 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$index12Z2D = tempRet0;
      $eh$lpad$body$indexZ2D = $174;
      label = 75;
     }
     if ((label | 0) == 75) {
      $$0 = $eh$lpad$body$indexZ2D;
      $$01 = $eh$lpad$body$index12Z2D;
     }
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($std_binds, HEAP32[$120 >> 2] | 0);
     $$1 = $$0;
     $$12 = $$01;
     break;
    }
   }
  }
  $40 = ___cxa_find_matching_catch() | 0;
  $lpad$phi27$index = $40;
  $lpad$phi27$index2 = tempRet0;
  label = 16;
 } while (0);
 if ((label | 0) == 16) {
  $$1 = $lpad$phi27$index;
  $$12 = $lpad$phi27$index2;
 } else if ((label | 0) == 19) {
  $46 = HEAP32[$params >> 2] | 0;
  $48 = $46;
  if ($46) {
   $49 = HEAP32[$10 >> 2] | 0;
   if (($49 | 0) != ($46 | 0)) HEAP32[$10 >> 2] = $49 + (~(($49 + -4 - $48 | 0) >>> 2) << 2);
   __ZdlPv($46);
  }
  $55 = HEAP32[$15 >> 2] | 0;
  if ($55) {
   $57 = HEAP32[$13 >> 2] | 0;
   if (($57 | 0) == ($55 | 0)) $63 = $55; else {
    $60 = $57;
    do {
     $59 = $60 + -12 | 0;
     HEAP32[$13 >> 2] = $59;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     $60 = HEAP32[$13 >> 2] | 0;
    } while (($60 | 0) != ($55 | 0));
    $63 = HEAP32[$15 >> 2] | 0;
   }
   __ZdlPv($63);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $$1 = $lpad$phi$index;
  $$12 = $lpad$phi$index7;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
 $$2 = $$1;
 $$23 = $$12;
 ___resumeException($$2 | 0);
 return 0;
}

function _free($mem) {
 $mem = $mem | 0;
 var $$lcssa = 0, $$lcssa71 = 0, $$pre$phi60Z2D = 0, $$pre$phi62Z2D = 0, $$pre$phiZ2D = 0, $$sum2 = 0, $1 = 0, $103 = 0, $104 = 0, $111 = 0, $112 = 0, $12 = 0, $120 = 0, $128 = 0, $133 = 0, $134 = 0, $137 = 0, $139 = 0, $14 = 0, $141 = 0, $15 = 0, $156 = 0, $161 = 0, $163 = 0, $166 = 0, $169 = 0, $172 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $181 = 0, $182 = 0, $184 = 0, $185 = 0, $19 = 0, $191 = 0, $192 = 0, $2 = 0, $201 = 0, $206 = 0, $210 = 0, $216 = 0, $22 = 0, $231 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $24 = 0, $240 = 0, $241 = 0, $247 = 0, $252 = 0, $253 = 0, $256 = 0, $258 = 0, $26 = 0, $261 = 0, $266 = 0, $272 = 0, $276 = 0, $277 = 0, $284 = 0, $293 = 0, $296 = 0, $301 = 0, $308 = 0, $309 = 0, $310 = 0, $318 = 0, $39 = 0, $44 = 0, $46 = 0, $49 = 0, $5 = 0, $51 = 0, $54 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $66 = 0, $67 = 0, $72 = 0, $73 = 0, $8 = 0, $82 = 0, $87 = 0, $9 = 0, $91 = 0, $97 = 0, $F16$0 = 0, $I18$0 = 0, $K19$054 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $R7$0 = 0, $R7$0$be = 0, $R7$0$lcssa = 0, $R7$0$ph = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0, $RP$0$ph = 0, $RP9$0 = 0, $RP9$0$be = 0, $RP9$0$lcssa = 0, $RP9$0$ph = 0, $T$0$lcssa = 0, $T$053 = 0, $T$053$lcssa = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0;
 if (!$mem) return;
 $1 = $mem + -8 | 0;
 $2 = HEAP32[11080] | 0;
 if ($1 >>> 0 < $2 >>> 0) _abort();
 $5 = HEAP32[$mem + -4 >> 2] | 0;
 $6 = $5 & 3;
 if (($6 | 0) == 1) _abort();
 $8 = $5 & -8;
 $9 = $mem + ($8 + -8) | 0;
 do if (!($5 & 1)) {
  $12 = HEAP32[$1 >> 2] | 0;
  if (!$6) return;
  $$sum2 = -8 - $12 | 0;
  $14 = $mem + $$sum2 | 0;
  $15 = $12 + $8 | 0;
  if ($14 >>> 0 < $2 >>> 0) _abort();
  if (($14 | 0) == (HEAP32[11081] | 0)) {
   $103 = $mem + ($8 + -4) | 0;
   $104 = HEAP32[$103 >> 2] | 0;
   if (($104 & 3 | 0) != 3) {
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
   HEAP32[11078] = $15;
   HEAP32[$103 >> 2] = $104 & -2;
   HEAP32[$mem + ($$sum2 + 4) >> 2] = $15 | 1;
   HEAP32[$9 >> 2] = $15;
   return;
  }
  $19 = $12 >>> 3;
  if ($12 >>> 0 < 256) {
   $22 = HEAP32[$mem + ($$sum2 + 8) >> 2] | 0;
   $24 = HEAP32[$mem + ($$sum2 + 12) >> 2] | 0;
   $26 = 44344 + ($19 << 1 << 2) | 0;
   if (($22 | 0) != ($26 | 0)) {
    if ($22 >>> 0 < $2 >>> 0) _abort();
    if ((HEAP32[$22 + 12 >> 2] | 0) != ($14 | 0)) _abort();
   }
   if (($24 | 0) == ($22 | 0)) {
    HEAP32[11076] = HEAP32[11076] & ~(1 << $19);
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
   if (($24 | 0) == ($26 | 0)) $$pre$phi62Z2D = $24 + 8 | 0; else {
    if ($24 >>> 0 < $2 >>> 0) _abort();
    $39 = $24 + 8 | 0;
    if ((HEAP32[$39 >> 2] | 0) == ($14 | 0)) $$pre$phi62Z2D = $39; else _abort();
   }
   HEAP32[$22 + 12 >> 2] = $24;
   HEAP32[$$pre$phi62Z2D >> 2] = $22;
   $p$0 = $14;
   $psize$0 = $15;
   break;
  }
  $44 = HEAP32[$mem + ($$sum2 + 24) >> 2] | 0;
  $46 = HEAP32[$mem + ($$sum2 + 12) >> 2] | 0;
  do if (($46 | 0) == ($14 | 0)) {
   $57 = $mem + ($$sum2 + 20) | 0;
   $58 = HEAP32[$57 >> 2] | 0;
   if (!$58) {
    $60 = $mem + ($$sum2 + 16) | 0;
    $61 = HEAP32[$60 >> 2] | 0;
    if (!$61) {
     $R$1 = 0;
     break;
    } else {
     $R$0$ph = $61;
     $RP$0$ph = $60;
    }
   } else {
    $R$0$ph = $58;
    $RP$0$ph = $57;
   }
   $R$0 = $R$0$ph;
   $RP$0 = $RP$0$ph;
   while (1) {
    $63 = $R$0 + 20 | 0;
    $64 = HEAP32[$63 >> 2] | 0;
    if (!$64) {
     $66 = $R$0 + 16 | 0;
     $67 = HEAP32[$66 >> 2] | 0;
     if (!$67) {
      $R$0$lcssa = $R$0;
      $RP$0$lcssa = $RP$0;
      break;
     } else {
      $R$0$be = $67;
      $RP$0$be = $66;
     }
    } else {
     $R$0$be = $64;
     $RP$0$be = $63;
    }
    $R$0 = $R$0$be;
    $RP$0 = $RP$0$be;
   }
   if ($RP$0$lcssa >>> 0 < $2 >>> 0) _abort(); else {
    HEAP32[$RP$0$lcssa >> 2] = 0;
    $R$1 = $R$0$lcssa;
    break;
   }
  } else {
   $49 = HEAP32[$mem + ($$sum2 + 8) >> 2] | 0;
   if ($49 >>> 0 < $2 >>> 0) _abort();
   $51 = $49 + 12 | 0;
   if ((HEAP32[$51 >> 2] | 0) != ($14 | 0)) _abort();
   $54 = $46 + 8 | 0;
   if ((HEAP32[$54 >> 2] | 0) == ($14 | 0)) {
    HEAP32[$51 >> 2] = $46;
    HEAP32[$54 >> 2] = $49;
    $R$1 = $46;
    break;
   } else _abort();
  } while (0);
  if (!$44) {
   $p$0 = $14;
   $psize$0 = $15;
  } else {
   $72 = HEAP32[$mem + ($$sum2 + 28) >> 2] | 0;
   $73 = 44608 + ($72 << 2) | 0;
   if (($14 | 0) == (HEAP32[$73 >> 2] | 0)) {
    HEAP32[$73 >> 2] = $R$1;
    if (!$R$1) {
     HEAP32[11077] = HEAP32[11077] & ~(1 << $72);
     $p$0 = $14;
     $psize$0 = $15;
     break;
    }
   } else {
    if ($44 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
    $82 = $44 + 16 | 0;
    if ((HEAP32[$82 >> 2] | 0) == ($14 | 0)) HEAP32[$82 >> 2] = $R$1; else HEAP32[$44 + 20 >> 2] = $R$1;
    if (!$R$1) {
     $p$0 = $14;
     $psize$0 = $15;
     break;
    }
   }
   $87 = HEAP32[11080] | 0;
   if ($R$1 >>> 0 < $87 >>> 0) _abort();
   HEAP32[$R$1 + 24 >> 2] = $44;
   $91 = HEAP32[$mem + ($$sum2 + 16) >> 2] | 0;
   do if ($91) if ($91 >>> 0 < $87 >>> 0) _abort(); else {
    HEAP32[$R$1 + 16 >> 2] = $91;
    HEAP32[$91 + 24 >> 2] = $R$1;
    break;
   } while (0);
   $97 = HEAP32[$mem + ($$sum2 + 20) >> 2] | 0;
   if (!$97) {
    $p$0 = $14;
    $psize$0 = $15;
   } else if ($97 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
    HEAP32[$R$1 + 20 >> 2] = $97;
    HEAP32[$97 + 24 >> 2] = $R$1;
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
  }
 } else {
  $p$0 = $1;
  $psize$0 = $8;
 } while (0);
 if ($p$0 >>> 0 >= $9 >>> 0) _abort();
 $111 = $mem + ($8 + -4) | 0;
 $112 = HEAP32[$111 >> 2] | 0;
 if (!($112 & 1)) _abort();
 if (!($112 & 2)) {
  if (($9 | 0) == (HEAP32[11082] | 0)) {
   $120 = (HEAP32[11079] | 0) + $psize$0 | 0;
   HEAP32[11079] = $120;
   HEAP32[11082] = $p$0;
   HEAP32[$p$0 + 4 >> 2] = $120 | 1;
   if (($p$0 | 0) != (HEAP32[11081] | 0)) return;
   HEAP32[11081] = 0;
   HEAP32[11078] = 0;
   return;
  }
  if (($9 | 0) == (HEAP32[11081] | 0)) {
   $128 = (HEAP32[11078] | 0) + $psize$0 | 0;
   HEAP32[11078] = $128;
   HEAP32[11081] = $p$0;
   HEAP32[$p$0 + 4 >> 2] = $128 | 1;
   HEAP32[$p$0 + $128 >> 2] = $128;
   return;
  }
  $133 = ($112 & -8) + $psize$0 | 0;
  $134 = $112 >>> 3;
  do if ($112 >>> 0 < 256) {
   $137 = HEAP32[$mem + $8 >> 2] | 0;
   $139 = HEAP32[$mem + ($8 | 4) >> 2] | 0;
   $141 = 44344 + ($134 << 1 << 2) | 0;
   if (($137 | 0) != ($141 | 0)) {
    if ($137 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
    if ((HEAP32[$137 + 12 >> 2] | 0) != ($9 | 0)) _abort();
   }
   if (($139 | 0) == ($137 | 0)) {
    HEAP32[11076] = HEAP32[11076] & ~(1 << $134);
    break;
   }
   if (($139 | 0) == ($141 | 0)) $$pre$phi60Z2D = $139 + 8 | 0; else {
    if ($139 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
    $156 = $139 + 8 | 0;
    if ((HEAP32[$156 >> 2] | 0) == ($9 | 0)) $$pre$phi60Z2D = $156; else _abort();
   }
   HEAP32[$137 + 12 >> 2] = $139;
   HEAP32[$$pre$phi60Z2D >> 2] = $137;
  } else {
   $161 = HEAP32[$mem + ($8 + 16) >> 2] | 0;
   $163 = HEAP32[$mem + ($8 | 4) >> 2] | 0;
   do if (($163 | 0) == ($9 | 0)) {
    $175 = $mem + ($8 + 12) | 0;
    $176 = HEAP32[$175 >> 2] | 0;
    if (!$176) {
     $178 = $mem + ($8 + 8) | 0;
     $179 = HEAP32[$178 >> 2] | 0;
     if (!$179) {
      $R7$1 = 0;
      break;
     } else {
      $R7$0$ph = $179;
      $RP9$0$ph = $178;
     }
    } else {
     $R7$0$ph = $176;
     $RP9$0$ph = $175;
    }
    $R7$0 = $R7$0$ph;
    $RP9$0 = $RP9$0$ph;
    while (1) {
     $181 = $R7$0 + 20 | 0;
     $182 = HEAP32[$181 >> 2] | 0;
     if (!$182) {
      $184 = $R7$0 + 16 | 0;
      $185 = HEAP32[$184 >> 2] | 0;
      if (!$185) {
       $R7$0$lcssa = $R7$0;
       $RP9$0$lcssa = $RP9$0;
       break;
      } else {
       $R7$0$be = $185;
       $RP9$0$be = $184;
      }
     } else {
      $R7$0$be = $182;
      $RP9$0$be = $181;
     }
     $R7$0 = $R7$0$be;
     $RP9$0 = $RP9$0$be;
    }
    if ($RP9$0$lcssa >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
     HEAP32[$RP9$0$lcssa >> 2] = 0;
     $R7$1 = $R7$0$lcssa;
     break;
    }
   } else {
    $166 = HEAP32[$mem + $8 >> 2] | 0;
    if ($166 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
    $169 = $166 + 12 | 0;
    if ((HEAP32[$169 >> 2] | 0) != ($9 | 0)) _abort();
    $172 = $163 + 8 | 0;
    if ((HEAP32[$172 >> 2] | 0) == ($9 | 0)) {
     HEAP32[$169 >> 2] = $163;
     HEAP32[$172 >> 2] = $166;
     $R7$1 = $163;
     break;
    } else _abort();
   } while (0);
   if ($161) {
    $191 = HEAP32[$mem + ($8 + 20) >> 2] | 0;
    $192 = 44608 + ($191 << 2) | 0;
    if (($9 | 0) == (HEAP32[$192 >> 2] | 0)) {
     HEAP32[$192 >> 2] = $R7$1;
     if (!$R7$1) {
      HEAP32[11077] = HEAP32[11077] & ~(1 << $191);
      break;
     }
    } else {
     if ($161 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
     $201 = $161 + 16 | 0;
     if ((HEAP32[$201 >> 2] | 0) == ($9 | 0)) HEAP32[$201 >> 2] = $R7$1; else HEAP32[$161 + 20 >> 2] = $R7$1;
     if (!$R7$1) break;
    }
    $206 = HEAP32[11080] | 0;
    if ($R7$1 >>> 0 < $206 >>> 0) _abort();
    HEAP32[$R7$1 + 24 >> 2] = $161;
    $210 = HEAP32[$mem + ($8 + 8) >> 2] | 0;
    do if ($210) if ($210 >>> 0 < $206 >>> 0) _abort(); else {
     HEAP32[$R7$1 + 16 >> 2] = $210;
     HEAP32[$210 + 24 >> 2] = $R7$1;
     break;
    } while (0);
    $216 = HEAP32[$mem + ($8 + 12) >> 2] | 0;
    if ($216) if ($216 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
     HEAP32[$R7$1 + 20 >> 2] = $216;
     HEAP32[$216 + 24 >> 2] = $R7$1;
     break;
    }
   }
  } while (0);
  HEAP32[$p$0 + 4 >> 2] = $133 | 1;
  HEAP32[$p$0 + $133 >> 2] = $133;
  if (($p$0 | 0) == (HEAP32[11081] | 0)) {
   HEAP32[11078] = $133;
   return;
  } else $psize$1 = $133;
 } else {
  HEAP32[$111 >> 2] = $112 & -2;
  HEAP32[$p$0 + 4 >> 2] = $psize$0 | 1;
  HEAP32[$p$0 + $psize$0 >> 2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 if ($psize$1 >>> 0 < 256) {
  $233 = $231 << 1;
  $234 = 44344 + ($233 << 2) | 0;
  $235 = HEAP32[11076] | 0;
  $236 = 1 << $231;
  if (!($235 & $236)) {
   HEAP32[11076] = $235 | $236;
   $$pre$phiZ2D = 44344 + ($233 + 2 << 2) | 0;
   $F16$0 = $234;
  } else {
   $240 = 44344 + ($233 + 2 << 2) | 0;
   $241 = HEAP32[$240 >> 2] | 0;
   if ($241 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
    $$pre$phiZ2D = $240;
    $F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $p$0;
  HEAP32[$F16$0 + 12 >> 2] = $p$0;
  HEAP32[$p$0 + 8 >> 2] = $F16$0;
  HEAP32[$p$0 + 12 >> 2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 if (!$247) $I18$0 = 0; else if ($psize$1 >>> 0 > 16777215) $I18$0 = 31; else {
  $252 = ($247 + 1048320 | 0) >>> 16 & 8;
  $253 = $247 << $252;
  $256 = ($253 + 520192 | 0) >>> 16 & 4;
  $258 = $253 << $256;
  $261 = ($258 + 245760 | 0) >>> 16 & 2;
  $266 = 14 - ($256 | $252 | $261) + ($258 << $261 >>> 15) | 0;
  $I18$0 = $psize$1 >>> ($266 + 7 | 0) & 1 | $266 << 1;
 }
 $272 = 44608 + ($I18$0 << 2) | 0;
 HEAP32[$p$0 + 28 >> 2] = $I18$0;
 HEAP32[$p$0 + 20 >> 2] = 0;
 HEAP32[$p$0 + 16 >> 2] = 0;
 $276 = HEAP32[11077] | 0;
 $277 = 1 << $I18$0;
 L205 : do if (!($276 & $277)) {
  HEAP32[11077] = $276 | $277;
  HEAP32[$272 >> 2] = $p$0;
  HEAP32[$p$0 + 24 >> 2] = $272;
  HEAP32[$p$0 + 12 >> 2] = $p$0;
  HEAP32[$p$0 + 8 >> 2] = $p$0;
 } else {
  $284 = HEAP32[$272 >> 2] | 0;
  if (($I18$0 | 0) == 31) $293 = 0; else $293 = 25 - ($I18$0 >>> 1) | 0;
  do if ((HEAP32[$284 + 4 >> 2] & -8 | 0) == ($psize$1 | 0)) $T$0$lcssa = $284; else {
   $K19$054 = $psize$1 << $293;
   $T$053 = $284;
   while (1) {
    $301 = $T$053 + ($K19$054 >>> 31 << 2) + 16 | 0;
    $296 = HEAP32[$301 >> 2] | 0;
    if (!$296) {
     $$lcssa = $301;
     $T$053$lcssa = $T$053;
     break;
    }
    if ((HEAP32[$296 + 4 >> 2] & -8 | 0) == ($psize$1 | 0)) {
     $$lcssa71 = $296;
     label = 137;
     break;
    } else {
     $K19$054 = $K19$054 << 1;
     $T$053 = $296;
    }
   }
   if ((label | 0) == 137) {
    $T$0$lcssa = $$lcssa71;
    break;
   }
   if ($$lcssa >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
    HEAP32[$$lcssa >> 2] = $p$0;
    HEAP32[$p$0 + 24 >> 2] = $T$053$lcssa;
    HEAP32[$p$0 + 12 >> 2] = $p$0;
    HEAP32[$p$0 + 8 >> 2] = $p$0;
    break L205;
   }
  } while (0);
  $308 = $T$0$lcssa + 8 | 0;
  $309 = HEAP32[$308 >> 2] | 0;
  $310 = HEAP32[11080] | 0;
  if ($T$0$lcssa >>> 0 >= $310 >>> 0 & $309 >>> 0 >= $310 >>> 0) {
   HEAP32[$309 + 12 >> 2] = $p$0;
   HEAP32[$308 >> 2] = $p$0;
   HEAP32[$p$0 + 8 >> 2] = $309;
   HEAP32[$p$0 + 12 >> 2] = $T$0$lcssa;
   HEAP32[$p$0 + 24 >> 2] = 0;
   break;
  } else _abort();
 } while (0);
 $318 = (HEAP32[11084] | 0) + -1 | 0;
 HEAP32[11084] = $318;
 if ($318) return;
 $sp$0$in$i = 44760 | 0;
 while (1) {
  $sp$0$i = HEAP32[$sp$0$in$i >> 2] | 0;
  if (!$sp$0$i) break; else $sp$0$in$i = $sp$0$i + 8 | 0;
 }
 HEAP32[11084] = -1;
 return;
}

function _dispose_chunk($p, $psize) {
 $p = $p | 0;
 $psize = $psize | 0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$lcssa62 = 0, $$pre$phi51Z2D = 0, $$pre$phi53Z2D = 0, $$pre$phiZ2D = 0, $$sum18 = 0, $$sum21 = 0, $0 = 0, $10 = 0, $100 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $115 = 0, $123 = 0, $128 = 0, $129 = 0, $132 = 0, $134 = 0, $136 = 0, $149 = 0, $15 = 0, $154 = 0, $156 = 0, $159 = 0, $161 = 0, $164 = 0, $167 = 0, $168 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $18 = 0, $182 = 0, $183 = 0, $192 = 0, $197 = 0, $2 = 0, $20 = 0, $201 = 0, $207 = 0, $22 = 0, $222 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $231 = 0, $232 = 0, $238 = 0, $243 = 0, $244 = 0, $247 = 0, $249 = 0, $252 = 0, $257 = 0, $263 = 0, $267 = 0, $268 = 0, $275 = 0, $284 = 0, $287 = 0, $292 = 0, $299 = 0, $300 = 0, $301 = 0, $35 = 0, $40 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $56 = 0, $57 = 0, $59 = 0, $60 = 0, $62 = 0, $63 = 0, $68 = 0, $69 = 0, $78 = 0, $83 = 0, $87 = 0, $9 = 0, $93 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$045 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $R7$0 = 0, $R7$0$be = 0, $R7$0$lcssa = 0, $R7$0$ph = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0, $RP$0$ph = 0, $RP9$0 = 0, $RP9$0$be = 0, $RP9$0$lcssa = 0, $RP9$0$ph = 0, $T$0$lcssa = 0, $T$044 = 0, $T$044$lcssa = 0, label = 0;
 $0 = $p + $psize | 0;
 $2 = HEAP32[$p + 4 >> 2] | 0;
 do if (!($2 & 1)) {
  $5 = HEAP32[$p >> 2] | 0;
  if (!($2 & 3)) return;
  $9 = $p + (0 - $5) | 0;
  $10 = $5 + $psize | 0;
  $11 = HEAP32[11080] | 0;
  if ($9 >>> 0 < $11 >>> 0) _abort();
  if (($9 | 0) == (HEAP32[11081] | 0)) {
   $99 = $p + ($psize + 4) | 0;
   $100 = HEAP32[$99 >> 2] | 0;
   if (($100 & 3 | 0) != 3) {
    $$0 = $9;
    $$02 = $10;
    break;
   }
   HEAP32[11078] = $10;
   HEAP32[$99 >> 2] = $100 & -2;
   HEAP32[$p + (4 - $5) >> 2] = $10 | 1;
   HEAP32[$0 >> 2] = $10;
   return;
  }
  $15 = $5 >>> 3;
  if ($5 >>> 0 < 256) {
   $18 = HEAP32[$p + (8 - $5) >> 2] | 0;
   $20 = HEAP32[$p + (12 - $5) >> 2] | 0;
   $22 = 44344 + ($15 << 1 << 2) | 0;
   if (($18 | 0) != ($22 | 0)) {
    if ($18 >>> 0 < $11 >>> 0) _abort();
    if ((HEAP32[$18 + 12 >> 2] | 0) != ($9 | 0)) _abort();
   }
   if (($20 | 0) == ($18 | 0)) {
    HEAP32[11076] = HEAP32[11076] & ~(1 << $15);
    $$0 = $9;
    $$02 = $10;
    break;
   }
   if (($20 | 0) == ($22 | 0)) $$pre$phi53Z2D = $20 + 8 | 0; else {
    if ($20 >>> 0 < $11 >>> 0) _abort();
    $35 = $20 + 8 | 0;
    if ((HEAP32[$35 >> 2] | 0) == ($9 | 0)) $$pre$phi53Z2D = $35; else _abort();
   }
   HEAP32[$18 + 12 >> 2] = $20;
   HEAP32[$$pre$phi53Z2D >> 2] = $18;
   $$0 = $9;
   $$02 = $10;
   break;
  }
  $40 = HEAP32[$p + (24 - $5) >> 2] | 0;
  $42 = HEAP32[$p + (12 - $5) >> 2] | 0;
  do if (($42 | 0) == ($9 | 0)) {
   $$sum18 = 16 - $5 | 0;
   $53 = $p + ($$sum18 + 4) | 0;
   $54 = HEAP32[$53 >> 2] | 0;
   if (!$54) {
    $56 = $p + $$sum18 | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    if (!$57) {
     $R$1 = 0;
     break;
    } else {
     $R$0$ph = $57;
     $RP$0$ph = $56;
    }
   } else {
    $R$0$ph = $54;
    $RP$0$ph = $53;
   }
   $R$0 = $R$0$ph;
   $RP$0 = $RP$0$ph;
   while (1) {
    $59 = $R$0 + 20 | 0;
    $60 = HEAP32[$59 >> 2] | 0;
    if (!$60) {
     $62 = $R$0 + 16 | 0;
     $63 = HEAP32[$62 >> 2] | 0;
     if (!$63) {
      $R$0$lcssa = $R$0;
      $RP$0$lcssa = $RP$0;
      break;
     } else {
      $R$0$be = $63;
      $RP$0$be = $62;
     }
    } else {
     $R$0$be = $60;
     $RP$0$be = $59;
    }
    $R$0 = $R$0$be;
    $RP$0 = $RP$0$be;
   }
   if ($RP$0$lcssa >>> 0 < $11 >>> 0) _abort(); else {
    HEAP32[$RP$0$lcssa >> 2] = 0;
    $R$1 = $R$0$lcssa;
    break;
   }
  } else {
   $45 = HEAP32[$p + (8 - $5) >> 2] | 0;
   if ($45 >>> 0 < $11 >>> 0) _abort();
   $47 = $45 + 12 | 0;
   if ((HEAP32[$47 >> 2] | 0) != ($9 | 0)) _abort();
   $50 = $42 + 8 | 0;
   if ((HEAP32[$50 >> 2] | 0) == ($9 | 0)) {
    HEAP32[$47 >> 2] = $42;
    HEAP32[$50 >> 2] = $45;
    $R$1 = $42;
    break;
   } else _abort();
  } while (0);
  if (!$40) {
   $$0 = $9;
   $$02 = $10;
  } else {
   $68 = HEAP32[$p + (28 - $5) >> 2] | 0;
   $69 = 44608 + ($68 << 2) | 0;
   if (($9 | 0) == (HEAP32[$69 >> 2] | 0)) {
    HEAP32[$69 >> 2] = $R$1;
    if (!$R$1) {
     HEAP32[11077] = HEAP32[11077] & ~(1 << $68);
     $$0 = $9;
     $$02 = $10;
     break;
    }
   } else {
    if ($40 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
    $78 = $40 + 16 | 0;
    if ((HEAP32[$78 >> 2] | 0) == ($9 | 0)) HEAP32[$78 >> 2] = $R$1; else HEAP32[$40 + 20 >> 2] = $R$1;
    if (!$R$1) {
     $$0 = $9;
     $$02 = $10;
     break;
    }
   }
   $83 = HEAP32[11080] | 0;
   if ($R$1 >>> 0 < $83 >>> 0) _abort();
   HEAP32[$R$1 + 24 >> 2] = $40;
   $$sum21 = 16 - $5 | 0;
   $87 = HEAP32[$p + $$sum21 >> 2] | 0;
   do if ($87) if ($87 >>> 0 < $83 >>> 0) _abort(); else {
    HEAP32[$R$1 + 16 >> 2] = $87;
    HEAP32[$87 + 24 >> 2] = $R$1;
    break;
   } while (0);
   $93 = HEAP32[$p + ($$sum21 + 4) >> 2] | 0;
   if (!$93) {
    $$0 = $9;
    $$02 = $10;
   } else if ($93 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
    HEAP32[$R$1 + 20 >> 2] = $93;
    HEAP32[$93 + 24 >> 2] = $R$1;
    $$0 = $9;
    $$02 = $10;
    break;
   }
  }
 } else {
  $$0 = $p;
  $$02 = $psize;
 } while (0);
 $106 = HEAP32[11080] | 0;
 if ($0 >>> 0 < $106 >>> 0) _abort();
 $108 = $p + ($psize + 4) | 0;
 $109 = HEAP32[$108 >> 2] | 0;
 if (!($109 & 2)) {
  if (($0 | 0) == (HEAP32[11082] | 0)) {
   $115 = (HEAP32[11079] | 0) + $$02 | 0;
   HEAP32[11079] = $115;
   HEAP32[11082] = $$0;
   HEAP32[$$0 + 4 >> 2] = $115 | 1;
   if (($$0 | 0) != (HEAP32[11081] | 0)) return;
   HEAP32[11081] = 0;
   HEAP32[11078] = 0;
   return;
  }
  if (($0 | 0) == (HEAP32[11081] | 0)) {
   $123 = (HEAP32[11078] | 0) + $$02 | 0;
   HEAP32[11078] = $123;
   HEAP32[11081] = $$0;
   HEAP32[$$0 + 4 >> 2] = $123 | 1;
   HEAP32[$$0 + $123 >> 2] = $123;
   return;
  }
  $128 = ($109 & -8) + $$02 | 0;
  $129 = $109 >>> 3;
  do if ($109 >>> 0 < 256) {
   $132 = HEAP32[$p + ($psize + 8) >> 2] | 0;
   $134 = HEAP32[$p + ($psize + 12) >> 2] | 0;
   $136 = 44344 + ($129 << 1 << 2) | 0;
   if (($132 | 0) != ($136 | 0)) {
    if ($132 >>> 0 < $106 >>> 0) _abort();
    if ((HEAP32[$132 + 12 >> 2] | 0) != ($0 | 0)) _abort();
   }
   if (($134 | 0) == ($132 | 0)) {
    HEAP32[11076] = HEAP32[11076] & ~(1 << $129);
    break;
   }
   if (($134 | 0) == ($136 | 0)) $$pre$phi51Z2D = $134 + 8 | 0; else {
    if ($134 >>> 0 < $106 >>> 0) _abort();
    $149 = $134 + 8 | 0;
    if ((HEAP32[$149 >> 2] | 0) == ($0 | 0)) $$pre$phi51Z2D = $149; else _abort();
   }
   HEAP32[$132 + 12 >> 2] = $134;
   HEAP32[$$pre$phi51Z2D >> 2] = $132;
  } else {
   $154 = HEAP32[$p + ($psize + 24) >> 2] | 0;
   $156 = HEAP32[$p + ($psize + 12) >> 2] | 0;
   do if (($156 | 0) == ($0 | 0)) {
    $167 = $p + ($psize + 20) | 0;
    $168 = HEAP32[$167 >> 2] | 0;
    if (!$168) {
     $170 = $p + ($psize + 16) | 0;
     $171 = HEAP32[$170 >> 2] | 0;
     if (!$171) {
      $R7$1 = 0;
      break;
     } else {
      $R7$0$ph = $171;
      $RP9$0$ph = $170;
     }
    } else {
     $R7$0$ph = $168;
     $RP9$0$ph = $167;
    }
    $R7$0 = $R7$0$ph;
    $RP9$0 = $RP9$0$ph;
    while (1) {
     $173 = $R7$0 + 20 | 0;
     $174 = HEAP32[$173 >> 2] | 0;
     if (!$174) {
      $176 = $R7$0 + 16 | 0;
      $177 = HEAP32[$176 >> 2] | 0;
      if (!$177) {
       $R7$0$lcssa = $R7$0;
       $RP9$0$lcssa = $RP9$0;
       break;
      } else {
       $R7$0$be = $177;
       $RP9$0$be = $176;
      }
     } else {
      $R7$0$be = $174;
      $RP9$0$be = $173;
     }
     $R7$0 = $R7$0$be;
     $RP9$0 = $RP9$0$be;
    }
    if ($RP9$0$lcssa >>> 0 < $106 >>> 0) _abort(); else {
     HEAP32[$RP9$0$lcssa >> 2] = 0;
     $R7$1 = $R7$0$lcssa;
     break;
    }
   } else {
    $159 = HEAP32[$p + ($psize + 8) >> 2] | 0;
    if ($159 >>> 0 < $106 >>> 0) _abort();
    $161 = $159 + 12 | 0;
    if ((HEAP32[$161 >> 2] | 0) != ($0 | 0)) _abort();
    $164 = $156 + 8 | 0;
    if ((HEAP32[$164 >> 2] | 0) == ($0 | 0)) {
     HEAP32[$161 >> 2] = $156;
     HEAP32[$164 >> 2] = $159;
     $R7$1 = $156;
     break;
    } else _abort();
   } while (0);
   if ($154) {
    $182 = HEAP32[$p + ($psize + 28) >> 2] | 0;
    $183 = 44608 + ($182 << 2) | 0;
    if (($0 | 0) == (HEAP32[$183 >> 2] | 0)) {
     HEAP32[$183 >> 2] = $R7$1;
     if (!$R7$1) {
      HEAP32[11077] = HEAP32[11077] & ~(1 << $182);
      break;
     }
    } else {
     if ($154 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
     $192 = $154 + 16 | 0;
     if ((HEAP32[$192 >> 2] | 0) == ($0 | 0)) HEAP32[$192 >> 2] = $R7$1; else HEAP32[$154 + 20 >> 2] = $R7$1;
     if (!$R7$1) break;
    }
    $197 = HEAP32[11080] | 0;
    if ($R7$1 >>> 0 < $197 >>> 0) _abort();
    HEAP32[$R7$1 + 24 >> 2] = $154;
    $201 = HEAP32[$p + ($psize + 16) >> 2] | 0;
    do if ($201) if ($201 >>> 0 < $197 >>> 0) _abort(); else {
     HEAP32[$R7$1 + 16 >> 2] = $201;
     HEAP32[$201 + 24 >> 2] = $R7$1;
     break;
    } while (0);
    $207 = HEAP32[$p + ($psize + 20) >> 2] | 0;
    if ($207) if ($207 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
     HEAP32[$R7$1 + 20 >> 2] = $207;
     HEAP32[$207 + 24 >> 2] = $R7$1;
     break;
    }
   }
  } while (0);
  HEAP32[$$0 + 4 >> 2] = $128 | 1;
  HEAP32[$$0 + $128 >> 2] = $128;
  if (($$0 | 0) == (HEAP32[11081] | 0)) {
   HEAP32[11078] = $128;
   return;
  } else $$1 = $128;
 } else {
  HEAP32[$108 >> 2] = $109 & -2;
  HEAP32[$$0 + 4 >> 2] = $$02 | 1;
  HEAP32[$$0 + $$02 >> 2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 if ($$1 >>> 0 < 256) {
  $224 = $222 << 1;
  $225 = 44344 + ($224 << 2) | 0;
  $226 = HEAP32[11076] | 0;
  $227 = 1 << $222;
  if (!($226 & $227)) {
   HEAP32[11076] = $226 | $227;
   $$pre$phiZ2D = 44344 + ($224 + 2 << 2) | 0;
   $F16$0 = $225;
  } else {
   $231 = 44344 + ($224 + 2 << 2) | 0;
   $232 = HEAP32[$231 >> 2] | 0;
   if ($232 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
    $$pre$phiZ2D = $231;
    $F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$0;
  HEAP32[$F16$0 + 12 >> 2] = $$0;
  HEAP32[$$0 + 8 >> 2] = $F16$0;
  HEAP32[$$0 + 12 >> 2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 if (!$238) $I19$0 = 0; else if ($$1 >>> 0 > 16777215) $I19$0 = 31; else {
  $243 = ($238 + 1048320 | 0) >>> 16 & 8;
  $244 = $238 << $243;
  $247 = ($244 + 520192 | 0) >>> 16 & 4;
  $249 = $244 << $247;
  $252 = ($249 + 245760 | 0) >>> 16 & 2;
  $257 = 14 - ($247 | $243 | $252) + ($249 << $252 >>> 15) | 0;
  $I19$0 = $$1 >>> ($257 + 7 | 0) & 1 | $257 << 1;
 }
 $263 = 44608 + ($I19$0 << 2) | 0;
 HEAP32[$$0 + 28 >> 2] = $I19$0;
 HEAP32[$$0 + 20 >> 2] = 0;
 HEAP32[$$0 + 16 >> 2] = 0;
 $267 = HEAP32[11077] | 0;
 $268 = 1 << $I19$0;
 if (!($267 & $268)) {
  HEAP32[11077] = $267 | $268;
  HEAP32[$263 >> 2] = $$0;
  HEAP32[$$0 + 24 >> 2] = $263;
  HEAP32[$$0 + 12 >> 2] = $$0;
  HEAP32[$$0 + 8 >> 2] = $$0;
  return;
 }
 $275 = HEAP32[$263 >> 2] | 0;
 if (($I19$0 | 0) == 31) $284 = 0; else $284 = 25 - ($I19$0 >>> 1) | 0;
 do if ((HEAP32[$275 + 4 >> 2] & -8 | 0) == ($$1 | 0)) $T$0$lcssa = $275; else {
  $K20$045 = $$1 << $284;
  $T$044 = $275;
  while (1) {
   $292 = $T$044 + ($K20$045 >>> 31 << 2) + 16 | 0;
   $287 = HEAP32[$292 >> 2] | 0;
   if (!$287) {
    $$lcssa = $292;
    $T$044$lcssa = $T$044;
    break;
   }
   if ((HEAP32[$287 + 4 >> 2] & -8 | 0) == ($$1 | 0)) {
    $$lcssa62 = $287;
    label = 134;
    break;
   } else {
    $K20$045 = $K20$045 << 1;
    $T$044 = $287;
   }
  }
  if ((label | 0) == 134) {
   $T$0$lcssa = $$lcssa62;
   break;
  }
  if ($$lcssa >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
  HEAP32[$$lcssa >> 2] = $$0;
  HEAP32[$$0 + 24 >> 2] = $T$044$lcssa;
  HEAP32[$$0 + 12 >> 2] = $$0;
  HEAP32[$$0 + 8 >> 2] = $$0;
  return;
 } while (0);
 $299 = $T$0$lcssa + 8 | 0;
 $300 = HEAP32[$299 >> 2] | 0;
 $301 = HEAP32[11080] | 0;
 if (!($T$0$lcssa >>> 0 >= $301 >>> 0 & $300 >>> 0 >= $301 >>> 0)) _abort();
 HEAP32[$300 + 12 >> 2] = $$0;
 HEAP32[$299 >> 2] = $$0;
 HEAP32[$$0 + 8 >> 2] = $300;
 HEAP32[$$0 + 12 >> 2] = $T$0$lcssa;
 HEAP32[$$0 + 24 >> 2] = 0;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $1 = 0, $10 = 0, $11 = 0, $110 = 0, $113 = 0, $117 = 0, $12 = 0, $120 = 0, $124 = 0, $13 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $5 = 0, $52 = 0, $56 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy30 = sp + 160 | 0;
 $$byval_copy26 = sp + 156 | 0;
 $1 = sp + 152 | 0;
 $2 = sp + 148 | 0;
 $3 = sp + 144 | 0;
 $4 = sp + 140 | 0;
 $5 = sp + 136 | 0;
 $6 = sp + 132 | 0;
 $7 = sp + 128 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 112 | 0;
 $12 = sp + 108 | 0;
 $13 = sp + 104 | 0;
 $14 = sp + 100 | 0;
 $15 = sp + 96 | 0;
 $16 = sp + 92 | 0;
 $17 = sp + 88 | 0;
 $18 = sp + 84 | 0;
 $19 = sp + 80 | 0;
 $20 = sp + 76 | 0;
 $21 = sp + 72 | 0;
 $22 = sp + 68 | 0;
 $23 = sp + 64 | 0;
 $24 = sp + 60 | 0;
 $25 = sp + 56 | 0;
 $26 = sp + 52 | 0;
 $27 = sp + 48 | 0;
 $28 = sp + 44 | 0;
 $29 = sp + 40 | 0;
 $30 = sp + 36 | 0;
 $31 = sp + 32 | 0;
 $32 = sp + 28 | 0;
 $33 = sp + 24 | 0;
 $34 = sp + 20 | 0;
 $35 = sp + 16 | 0;
 $36 = sp + 12 | 0;
 $37 = sp + 8 | 0;
 $38 = sp + 4 | 0;
 $39 = sp;
 HEAP32[$__err >> 2] = 0;
 __ZNKSt3__18ios_base6getlocEv($1, $__iob);
 __THREW__ = 0;
 $40 = invoke_iii(22, $1 | 0, 50200) | 0;
 $41 = __THREW__;
 __THREW__ = 0;
 if ($41 & 1) {
  $45 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
  ___resumeException($45 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
 do switch ($__fmt << 24 >> 24 | 0) {
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$3 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$19 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 70:
  {
   HEAP32[$12 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$13 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$12 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$13 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($11, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 49328, 49360 | 0);
   HEAP32[$__b >> 2] = HEAP32[$11 >> 2];
   label = 34;
   break;
  }
 case 99:
  {
   $52 = $this + 8 | 0;
   $56 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$52 >> 2] | 0) + 12 >> 2] & 127]($52) | 0;
   HEAP32[$5 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$6 >> 2] = HEAP32[$__e >> 2];
   $59 = HEAP8[$56 >> 0] | 0;
   if (!($59 & 1)) {
    $71 = $56 + 4 | 0;
    $72 = ($59 & 255) >>> 1;
    $73 = $56 + 4 | 0;
   } else {
    $63 = HEAP32[$56 + 8 >> 2] | 0;
    $71 = $63;
    $72 = HEAP32[$56 + 4 >> 2] | 0;
    $73 = $63;
   }
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($4, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $73, $71 + ($72 << 2) | 0);
   HEAP32[$__b >> 2] = HEAP32[$4 >> 2];
   label = 34;
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$30 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$29 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$30 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($28, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 49432, 49464 | 0);
   HEAP32[$__b >> 2] = HEAP32[$28 >> 2];
   label = 34;
   break;
  }
 case 88:
  {
   $113 = $this + 8 | 0;
   $117 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$113 >> 2] | 0) + 24 >> 2] & 127]($113) | 0;
   HEAP32[$35 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$36 >> 2] = HEAP32[$__e >> 2];
   $120 = HEAP8[$117 >> 0] | 0;
   if (!($120 & 1)) {
    $132 = $117 + 4 | 0;
    $133 = ($120 & 255) >>> 1;
    $134 = $117 + 4 | 0;
   } else {
    $124 = HEAP32[$117 + 8 >> 2] | 0;
    $132 = $124;
    $133 = HEAP32[$117 + 4 >> 2] | 0;
    $134 = $124;
   }
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$35 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$36 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($34, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $134, $132 + ($133 << 2) | 0);
   HEAP32[$__b >> 2] = HEAP32[$34 >> 2];
   label = 34;
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$31 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 72:
  {
   HEAP32[$14 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$14 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 77:
  {
   HEAP32[$18 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$18 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 4 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 65:
 case 97:
  {
   HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 112:
  {
   HEAP32[$20 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$20 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 121:
  {
   HEAP32[$37 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$37 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 106:
  {
   HEAP32[$16 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 28 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 37:
  {
   HEAP32[$39 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$39 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 89:
  {
   HEAP32[$38 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$38 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 109:
  {
   HEAP32[$17 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$7 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 12 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 83:
  {
   HEAP32[$27 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 114:
  {
   HEAP32[$22 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$23 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$22 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$23 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($21, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 49360, 49404 | 0);
   HEAP32[$__b >> 2] = HEAP32[$21 >> 2];
   label = 34;
   break;
  }
 case 82:
  {
   HEAP32[$25 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$26 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$25 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$26 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($24, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 49408, 49428 | 0);
   HEAP32[$__b >> 2] = HEAP32[$24 >> 2];
   label = 34;
   break;
  }
 case 73:
  {
   HEAP32[$15 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 68:
  {
   HEAP32[$9 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$10 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$9 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($8, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 49296, 49328 | 0);
   HEAP32[$__b >> 2] = HEAP32[$8 >> 2];
   label = 34;
   break;
  }
 case 120:
  {
   $110 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$33 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$32 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$33 + 0 >> 2];
   FUNCTION_TABLE_viiiiiii[$110 & 63]($agg$result, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm);
   break;
  }
 default:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   label = 34;
  }
 } while (0);
 if ((label | 0) == 34) HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $1 = 0, $10 = 0, $11 = 0, $110 = 0, $113 = 0, $117 = 0, $12 = 0, $120 = 0, $124 = 0, $13 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $5 = 0, $52 = 0, $56 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy30 = sp + 160 | 0;
 $$byval_copy26 = sp + 156 | 0;
 $1 = sp + 152 | 0;
 $2 = sp + 148 | 0;
 $3 = sp + 144 | 0;
 $4 = sp + 140 | 0;
 $5 = sp + 136 | 0;
 $6 = sp + 132 | 0;
 $7 = sp + 128 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 112 | 0;
 $12 = sp + 108 | 0;
 $13 = sp + 104 | 0;
 $14 = sp + 100 | 0;
 $15 = sp + 96 | 0;
 $16 = sp + 92 | 0;
 $17 = sp + 88 | 0;
 $18 = sp + 84 | 0;
 $19 = sp + 80 | 0;
 $20 = sp + 76 | 0;
 $21 = sp + 72 | 0;
 $22 = sp + 68 | 0;
 $23 = sp + 64 | 0;
 $24 = sp + 60 | 0;
 $25 = sp + 56 | 0;
 $26 = sp + 52 | 0;
 $27 = sp + 48 | 0;
 $28 = sp + 44 | 0;
 $29 = sp + 40 | 0;
 $30 = sp + 36 | 0;
 $31 = sp + 32 | 0;
 $32 = sp + 28 | 0;
 $33 = sp + 24 | 0;
 $34 = sp + 20 | 0;
 $35 = sp + 16 | 0;
 $36 = sp + 12 | 0;
 $37 = sp + 8 | 0;
 $38 = sp + 4 | 0;
 $39 = sp;
 HEAP32[$__err >> 2] = 0;
 __ZNKSt3__18ios_base6getlocEv($1, $__iob);
 __THREW__ = 0;
 $40 = invoke_iii(22, $1 | 0, 50208) | 0;
 $41 = __THREW__;
 __THREW__ = 0;
 if ($41 & 1) {
  $45 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
  ___resumeException($45 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
 do switch ($__fmt << 24 >> 24 | 0) {
 case 99:
  {
   $52 = $this + 8 | 0;
   $56 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$52 >> 2] | 0) + 12 >> 2] & 127]($52) | 0;
   HEAP32[$5 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$6 >> 2] = HEAP32[$__e >> 2];
   $59 = HEAP8[$56 >> 0] | 0;
   if (!($59 & 1)) {
    $71 = $56 + 1 | 0;
    $72 = ($59 & 255) >>> 1;
    $73 = $56 + 1 | 0;
   } else {
    $63 = HEAP32[$56 + 8 >> 2] | 0;
    $71 = $63;
    $72 = HEAP32[$56 + 4 >> 2] | 0;
    $73 = $63;
   }
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($4, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $73, $71 + $72 | 0);
   HEAP32[$__b >> 2] = HEAP32[$4 >> 2];
   label = 34;
   break;
  }
 case 77:
  {
   HEAP32[$18 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$18 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 4 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$31 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$3 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 88:
  {
   $113 = $this + 8 | 0;
   $117 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$113 >> 2] | 0) + 24 >> 2] & 127]($113) | 0;
   HEAP32[$35 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$36 >> 2] = HEAP32[$__e >> 2];
   $120 = HEAP8[$117 >> 0] | 0;
   if (!($120 & 1)) {
    $132 = $117 + 1 | 0;
    $133 = ($120 & 255) >>> 1;
    $134 = $117 + 1 | 0;
   } else {
    $124 = HEAP32[$117 + 8 >> 2] | 0;
    $132 = $124;
    $133 = HEAP32[$117 + 4 >> 2] | 0;
    $134 = $124;
   }
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$35 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$36 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($34, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $134, $132 + $133 | 0);
   HEAP32[$__b >> 2] = HEAP32[$34 >> 2];
   label = 34;
   break;
  }
 case 72:
  {
   HEAP32[$14 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$14 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 70:
  {
   HEAP32[$12 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$13 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$12 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$13 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($11, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 49128, 49136 | 0);
   HEAP32[$__b >> 2] = HEAP32[$11 >> 2];
   label = 34;
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$30 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$29 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$30 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($28, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 49160, 49168 | 0);
   HEAP32[$__b >> 2] = HEAP32[$28 >> 2];
   label = 34;
   break;
  }
 case 114:
  {
   HEAP32[$22 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$23 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$22 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$23 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($21, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 49136, 49147 | 0);
   HEAP32[$__b >> 2] = HEAP32[$21 >> 2];
   label = 34;
   break;
  }
 case 112:
  {
   HEAP32[$20 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$20 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 121:
  {
   HEAP32[$37 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$37 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 120:
  {
   $110 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$33 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$32 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$33 + 0 >> 2];
   FUNCTION_TABLE_viiiiiii[$110 & 63]($agg$result, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm);
   break;
  }
 case 82:
  {
   HEAP32[$25 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$26 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$25 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$26 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($24, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 49152, 49157 | 0);
   HEAP32[$__b >> 2] = HEAP32[$24 >> 2];
   label = 34;
   break;
  }
 case 109:
  {
   HEAP32[$17 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$7 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 12 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 73:
  {
   HEAP32[$15 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 83:
  {
   HEAP32[$27 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 65:
 case 97:
  {
   HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 106:
  {
   HEAP32[$16 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 28 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 89:
  {
   HEAP32[$38 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$38 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$19 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 37:
  {
   HEAP32[$39 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$39 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $$byval_copy30, $__err, $40);
   label = 34;
   break;
  }
 case 68:
  {
   HEAP32[$9 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$10 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$9 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($8, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 49120, 49128 | 0);
   HEAP32[$__b >> 2] = HEAP32[$8 >> 2];
   label = 34;
   break;
  }
 default:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   label = 34;
  }
 } while (0);
 if ((label | 0) == 34) HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
 STACKTOP = sp;
 return;
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i11 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i17 = 0, $$0$lcssa69 = 0, $$045 = 0, $$index = 0, $$index10 = 0, $$lcssa = 0, $$pre$i3$i$i19 = 0, $$pre$i3$i$i19$lcssa = 0, $101 = 0, $102 = 0, $105 = 0, $11 = 0, $112 = 0, $119 = 0, $120 = 0, $121 = 0, $128 = 0, $13 = 0, $136 = 0, $143 = 0, $15 = 0, $150 = 0, $157 = 0, $158 = 0, $164 = 0, $17 = 0, $171 = 0, $172 = 0, $186 = 0, $20 = 0, $27 = 0, $3 = 0, $33 = 0, $36 = 0, $43 = 0, $44 = 0, $48 = 0, $5 = 0, $51 = 0, $58 = 0, $59 = 0, $63 = 0, $64 = 0, $66 = 0, $68 = 0, $7 = 0, $75 = 0, $76 = 0, $82 = 0, $83 = 0, $85 = 0, $9 = 0, $96 = 0, $97 = 0, $__c$0 = 0, $__consume$0$off0 = 0, $__consume$0$off0$lcssa = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0 = 0, $__ky1$0 = 0, $__ky2$0 = 0, $__n_does_match$0 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$2$be = 0, $__n_does_match$3 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$4 = 0, $__n_does_match$5 = 0, $__n_does_match$5$lcssa = 0, $__n_does_match$6 = 0, $__n_might_match$0 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$4 = 0, $__st$0 = 0, $__st$1 = 0, $__st$2 = 0, $__st$3 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__statbuf = sp;
 $3 = ($__ke - $__kb | 0) / 12 | 0;
 if ($3 >>> 0 > 100) {
  $5 = _malloc($3) | 0;
  if (!$5) {
   __THREW__ = 0;
   invoke_v(7);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $9 = ___cxa_find_matching_catch() | 0;
    $$index = $9;
    $$index10 = tempRet0;
   } else {
    $17 = 0;
    $__status$0 = 0;
    label = 11;
   }
  } else {
   $17 = $5;
   $__status$0 = $5;
   label = 11;
  }
 } else {
  $17 = 0;
  $__status$0 = $__statbuf;
  label = 11;
 }
 if ((label | 0) == 11) {
  $__ky$0 = $__kb;
  $__n_does_match$0 = 0;
  $__n_might_match$0 = $3;
  $__st$0 = $__status$0;
  while (1) {
   if (($__ky$0 | 0) == ($__ke | 0)) {
    $__n_does_match$0$lcssa = $__n_does_match$0;
    $__n_might_match$0$lcssa = $__n_might_match$0;
    break;
   }
   $20 = HEAP8[$__ky$0 >> 0] | 0;
   if (!($20 & 1)) $27 = ($20 & 255) >>> 1; else $27 = HEAP32[$__ky$0 + 4 >> 2] | 0;
   if (!$27) {
    HEAP8[$__st$0 >> 0] = 2;
    $__n_does_match$1 = $__n_does_match$0 + 1 | 0;
    $__n_might_match$1 = $__n_might_match$0 + -1 | 0;
   } else {
    HEAP8[$__st$0 >> 0] = 1;
    $__n_does_match$1 = $__n_does_match$0;
    $__n_might_match$1 = $__n_might_match$0;
   }
   $__ky$0 = $__ky$0 + 12 | 0;
   $__n_does_match$0 = $__n_does_match$1;
   $__n_might_match$0 = $__n_might_match$1;
   $__st$0 = $__st$0 + 1 | 0;
  }
  $__indx$0 = 0;
  $__n_does_match$2 = $__n_does_match$0$lcssa;
  $__n_might_match$2 = $__n_might_match$0$lcssa;
  L19 : while (1) {
   $33 = HEAP32[$__b >> 2] | 0;
   do if (!$33) $64 = 1; else {
    $36 = HEAP32[$33 + 12 >> 2] | 0;
    if (($36 | 0) == (HEAP32[$33 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $43 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
     $44 = __THREW__;
     __THREW__ = 0;
     if ($44 & 1) {
      label = 6;
      break L19;
     } else $$0$i$i$i$i = $43;
    } else $$0$i$i$i$i = HEAP32[$36 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $64 = 1;
     break;
    } else {
     $64 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   $48 = HEAP32[$__e >> 2] | 0;
   if (!$48) {
    $$pre$i3$i$i19 = 0;
    $63 = 1;
   } else {
    $51 = HEAP32[$48 + 12 >> 2] | 0;
    if (($51 | 0) == (HEAP32[$48 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $58 = invoke_ii(HEAP32[(HEAP32[$48 >> 2] | 0) + 36 >> 2] | 0, $48 | 0) | 0;
     $59 = __THREW__;
     __THREW__ = 0;
     if ($59 & 1) {
      label = 6;
      break;
     } else $$0$i$i1$i$i = $58;
    } else $$0$i$i1$i$i = HEAP32[$51 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i3$i$i19 = 0;
     $63 = 1;
    } else {
     $$pre$i3$i$i19 = $48;
     $63 = 0;
    }
   }
   $66 = HEAP32[$__b >> 2] | 0;
   if (!(($__n_might_match$2 | 0) != 0 & ($64 ^ $63))) {
    $$lcssa = $66;
    $$pre$i3$i$i19$lcssa = $$pre$i3$i$i19;
    label = 72;
    break;
   }
   $68 = HEAP32[$66 + 12 >> 2] | 0;
   if (($68 | 0) == (HEAP32[$66 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $75 = invoke_ii(HEAP32[(HEAP32[$66 >> 2] | 0) + 36 >> 2] | 0, $66 | 0) | 0;
    $76 = __THREW__;
    __THREW__ = 0;
    if ($76 & 1) {
     label = 6;
     break;
    } else $$0$i$i = $75;
   } else $$0$i$i = HEAP32[$68 >> 2] | 0;
   if ($__case_sensitive) $__c$0 = $$0$i$i; else {
    __THREW__ = 0;
    $82 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] | 0, $__ct | 0, $$0$i$i | 0) | 0;
    $83 = __THREW__;
    __THREW__ = 0;
    if ($83 & 1) {
     label = 6;
     break;
    } else $__c$0 = $82;
   }
   $85 = $__indx$0 + 1 | 0;
   $__consume$0$off0 = 0;
   $__ky1$0 = $__kb;
   $__n_does_match$3 = $__n_does_match$2;
   $__n_might_match$3 = $__n_might_match$2;
   $__st$1 = $__status$0;
   while (1) {
    if (($__ky1$0 | 0) == ($__ke | 0)) {
     $__consume$0$off0$lcssa = $__consume$0$off0;
     $__n_does_match$3$lcssa = $__n_does_match$3;
     $__n_might_match$3$lcssa = $__n_might_match$3;
     break;
    }
    do if ((HEAP8[$__st$1 >> 0] | 0) == 1) {
     if (!(HEAP8[$__ky1$0 >> 0] & 1)) $96 = $__ky1$0 + 4 | 0; else $96 = HEAP32[$__ky1$0 + 8 >> 2] | 0;
     $97 = HEAP32[$96 + ($__indx$0 << 2) >> 2] | 0;
     if ($__case_sensitive) $__kc$0 = $97; else {
      __THREW__ = 0;
      $101 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] | 0, $__ct | 0, $97 | 0) | 0;
      $102 = __THREW__;
      __THREW__ = 0;
      if ($102 & 1) {
       label = 5;
       break L19;
      } else $__kc$0 = $101;
     }
     if (($__c$0 | 0) != ($__kc$0 | 0)) {
      HEAP8[$__st$1 >> 0] = 0;
      $__consume$1$off0 = $__consume$0$off0;
      $__n_does_match$4 = $__n_does_match$3;
      $__n_might_match$4 = $__n_might_match$3 + -1 | 0;
      break;
     }
     $105 = HEAP8[$__ky1$0 >> 0] | 0;
     if (!($105 & 1)) $112 = ($105 & 255) >>> 1; else $112 = HEAP32[$__ky1$0 + 4 >> 2] | 0;
     if (($112 | 0) == ($85 | 0)) {
      HEAP8[$__st$1 >> 0] = 2;
      $__consume$1$off0 = 1;
      $__n_does_match$4 = $__n_does_match$3 + 1 | 0;
      $__n_might_match$4 = $__n_might_match$3 + -1 | 0;
     } else {
      $__consume$1$off0 = 1;
      $__n_does_match$4 = $__n_does_match$3;
      $__n_might_match$4 = $__n_might_match$3;
     }
    } else {
     $__consume$1$off0 = $__consume$0$off0;
     $__n_does_match$4 = $__n_does_match$3;
     $__n_might_match$4 = $__n_might_match$3;
    } while (0);
    $__consume$0$off0 = $__consume$1$off0;
    $__ky1$0 = $__ky1$0 + 12 | 0;
    $__n_does_match$3 = $__n_does_match$4;
    $__n_might_match$3 = $__n_might_match$4;
    $__st$1 = $__st$1 + 1 | 0;
   }
   if ($__consume$0$off0$lcssa) {
    $119 = HEAP32[$__b >> 2] | 0;
    $120 = $119 + 12 | 0;
    $121 = HEAP32[$120 >> 2] | 0;
    if (($121 | 0) == (HEAP32[$119 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     invoke_ii(HEAP32[(HEAP32[$119 >> 2] | 0) + 40 >> 2] | 0, $119 | 0) | 0;
     $128 = __THREW__;
     __THREW__ = 0;
     if ($128 & 1) {
      label = 6;
      break;
     }
    } else HEAP32[$120 >> 2] = $121 + 4;
    if (($__n_does_match$3$lcssa + $__n_might_match$3$lcssa | 0) >>> 0 > 1) {
     $__ky2$0 = $__kb;
     $__n_does_match$5 = $__n_does_match$3$lcssa;
     $__st$2 = $__status$0;
     while (1) {
      if (($__ky2$0 | 0) == ($__ke | 0)) {
       $__n_does_match$5$lcssa = $__n_does_match$5;
       break;
      }
      if ((HEAP8[$__st$2 >> 0] | 0) == 2) {
       $136 = HEAP8[$__ky2$0 >> 0] | 0;
       if (!($136 & 1)) $143 = ($136 & 255) >>> 1; else $143 = HEAP32[$__ky2$0 + 4 >> 2] | 0;
       if (($143 | 0) == ($85 | 0)) $__n_does_match$6 = $__n_does_match$5; else {
        HEAP8[$__st$2 >> 0] = 0;
        $__n_does_match$6 = $__n_does_match$5 + -1 | 0;
       }
      } else $__n_does_match$6 = $__n_does_match$5;
      $__ky2$0 = $__ky2$0 + 12 | 0;
      $__n_does_match$5 = $__n_does_match$6;
      $__st$2 = $__st$2 + 1 | 0;
     }
     $__n_does_match$2$be = $__n_does_match$5$lcssa;
    } else $__n_does_match$2$be = $__n_does_match$3$lcssa;
   } else $__n_does_match$2$be = $__n_does_match$3$lcssa;
   $__indx$0 = $85;
   $__n_does_match$2 = $__n_does_match$2$be;
   $__n_might_match$2 = $__n_might_match$3$lcssa;
  }
  if ((label | 0) == 5) {
   $11 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $11;
   $lpad$phi$index3 = tempRet0;
  } else if ((label | 0) == 6) {
   $13 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $13;
   $lpad$phi$index3 = tempRet0;
  } else if ((label | 0) == 72) {
   do if (!$$lcssa) {
    $186 = 1;
    label = 79;
   } else {
    $150 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($150 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) break; else $$0$i$i$i$i11 = $157;
    } else $$0$i$i$i$i11 = HEAP32[$150 >> 2] | 0;
    if (($$0$i$i$i$i11 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $186 = 1;
     label = 79;
     break;
    } else {
     $186 = (HEAP32[$__b >> 2] | 0) == 0;
     label = 79;
     break;
    }
   } while (0);
   L102 : do if ((label | 0) == 79) {
    do if (!$$pre$i3$i$i19$lcssa) label = 85; else {
     $164 = HEAP32[$$pre$i3$i$i19$lcssa + 12 >> 2] | 0;
     if (($164 | 0) == (HEAP32[$$pre$i3$i$i19$lcssa + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $171 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i19$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i19$lcssa | 0) | 0;
      $172 = __THREW__;
      __THREW__ = 0;
      if ($172 & 1) break L102; else $$0$i$i1$i$i17 = $171;
     } else $$0$i$i1$i$i17 = HEAP32[$164 >> 2] | 0;
     if (($$0$i$i1$i$i17 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 85;
      break;
     } else if ($186) break; else {
      label = 87;
      break;
     }
    } while (0);
    if ((label | 0) == 85) if ($186) label = 87;
    if ((label | 0) == 87) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $$0 = $__kb;
    $__st$3 = $__status$0;
    while (1) {
     if (($$0 | 0) == ($__ke | 0)) {
      label = 92;
      break;
     }
     if ((HEAP8[$__st$3 >> 0] | 0) == 2) {
      $$0$lcssa69 = $$0;
      label = 93;
      break;
     }
     $$0 = $$0 + 12 | 0;
     $__st$3 = $__st$3 + 1 | 0;
    }
    if ((label | 0) == 92) {
     HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
     $$045 = $__ke;
    } else if ((label | 0) == 93) $$045 = $$0$lcssa69;
    _free($17);
    if ($17) {}
    STACKTOP = sp;
    return $$045 | 0;
   } while (0);
   $15 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $15;
   $lpad$phi$index3 = tempRet0;
  }
  _free($17);
  if (!$17) {
   $$index = $lpad$phi$index;
   $$index10 = $lpad$phi$index3;
  } else {
   $$index = $lpad$phi$index;
   $$index10 = $lpad$phi$index3;
  }
 }
 ___resumeException($$index | 0);
 return 0;
}

function ___intscan($f, $base, $pok, $0, $1) {
 $f = $f | 0;
 $base = $base | 0;
 $pok = $pok | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$124 = 0, $$125 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa117 = 0, $$lcssa118 = 0, $$lcssa119 = 0, $$lcssa120 = 0, $$lcssa121 = 0, $$lcssa122 = 0, $100 = 0, $107 = 0, $119 = 0, $120 = 0, $127 = 0, $129 = 0, $13 = 0, $130 = 0, $133 = 0, $134 = 0, $135 = 0, $143 = 0, $147 = 0, $148 = 0, $150 = 0, $152 = 0, $154 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $164 = 0, $165 = 0, $166 = 0, $17 = 0, $18 = 0, $183 = 0, $184 = 0, $185 = 0, $193 = 0, $198 = 0, $200 = 0, $201 = 0, $202 = 0, $204 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $219 = 0, $220 = 0, $221 = 0, $236 = 0, $25 = 0, $252 = 0, $254 = 0, $265 = 0, $274 = 0, $277 = 0, $279 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $3 = 0, $37 = 0, $39 = 0, $4 = 0, $46 = 0, $51 = 0, $6 = 0, $67 = 0, $70 = 0, $71 = 0, $72 = 0, $82 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $90 = 0, $92 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$126 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$373 = 0, $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$5$be$lcssa = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$755 = 0, $c$8 = 0, $c$8$ph = 0, $c$9$be = 0, $neg$0 = 0, $x$084 = 0, $x$148 = 0, $x$268 = 0, label = 0;
 if ($base >>> 0 > 36) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $279 = 0;
  $280 = 0;
  tempRet0 = $279;
  return $280 | 0;
 }
 $3 = $f + 4 | 0;
 $4 = $f + 100 | 0;
 do {
  $6 = HEAP32[$3 >> 2] | 0;
  if ($6 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $6 + 1;
   $13 = HEAPU8[$6 >> 0] | 0;
  } else $13 = ___shgetc($f) | 0;
 } while ((_isspace($13) | 0) != 0);
 $$lcssa122 = $13;
 do if (($$lcssa122 | 0) == 43 | ($$lcssa122 | 0) == 45) {
  $17 = (($$lcssa122 | 0) == 45) << 31 >> 31;
  $18 = HEAP32[$3 >> 2] | 0;
  if ($18 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $18 + 1;
   $c$0 = HEAPU8[$18 >> 0] | 0;
   $neg$0 = $17;
   break;
  } else {
   $c$0 = ___shgetc($f) | 0;
   $neg$0 = $17;
   break;
  }
 } else {
  $c$0 = $$lcssa122;
  $neg$0 = 0;
 } while (0);
 $25 = ($base | 0) == 0;
 do if (($base & -17 | 0) == 0 & ($c$0 | 0) == 48) {
  $29 = HEAP32[$3 >> 2] | 0;
  if ($29 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $29 + 1;
   $37 = HEAPU8[$29 >> 0] | 0;
  } else $37 = ___shgetc($f) | 0;
  if (($37 | 32 | 0) != 120) if ($25) {
   $$125 = 8;
   $c$126 = $37;
   label = 48;
   break;
  } else {
   $$1 = $base;
   $c$1 = $37;
   label = 32;
   break;
  }
  $39 = HEAP32[$3 >> 2] | 0;
  if ($39 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $39 + 1;
   $46 = HEAPU8[$39 >> 0] | 0;
  } else $46 = ___shgetc($f) | 0;
  if ((HEAPU8[$46 + 44801 >> 0] | 0) > 15) {
   $51 = (HEAP32[$4 >> 2] | 0) == 0;
   if (!$51) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   if (!$pok) {
    ___shlim($f, 0);
    $279 = 0;
    $280 = 0;
    tempRet0 = $279;
    return $280 | 0;
   }
   if ($51) {
    $279 = 0;
    $280 = 0;
    tempRet0 = $279;
    return $280 | 0;
   }
   HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   $279 = 0;
   $280 = 0;
   tempRet0 = $279;
   return $280 | 0;
  } else {
   $$125 = 16;
   $c$126 = $46;
   label = 48;
  }
 } else {
  $$base21 = $25 ? 10 : $base;
  if ((HEAPU8[$c$0 + 44801 >> 0] | 0) >>> 0 < $$base21 >>> 0) {
   $$1 = $$base21;
   $c$1 = $c$0;
   label = 32;
  } else {
   if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   ___shlim($f, 0);
   HEAP32[(___errno_location() | 0) >> 2] = 22;
   $279 = 0;
   $280 = 0;
   tempRet0 = $279;
   return $280 | 0;
  }
 } while (0);
 if ((label | 0) == 32) if (($$1 | 0) == 10) {
  $67 = $c$1 + -48 | 0;
  if ($67 >>> 0 < 10) {
   $71 = $67;
   $x$084 = 0;
   while (1) {
    $70 = ($x$084 * 10 | 0) + $71 | 0;
    $72 = HEAP32[$3 >> 2] | 0;
    if ($72 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $72 + 1;
     $c$2$be = HEAPU8[$72 >> 0] | 0;
    } else $c$2$be = ___shgetc($f) | 0;
    $71 = $c$2$be + -48 | 0;
    if (!($71 >>> 0 < 10 & $70 >>> 0 < 429496729)) {
     $$lcssa121 = $70;
     $c$2$be$lcssa = $c$2$be;
     break;
    } else $x$084 = $70;
   }
   $281 = $$lcssa121;
   $282 = 0;
   $c$2$lcssa = $c$2$be$lcssa;
  } else {
   $281 = 0;
   $282 = 0;
   $c$2$lcssa = $c$1;
  }
  $82 = $c$2$lcssa + -48 | 0;
  if ($82 >>> 0 < 10) {
   $84 = $281;
   $85 = $282;
   $88 = $82;
   $c$373 = $c$2$lcssa;
   while (1) {
    $86 = ___muldi3($84 | 0, $85 | 0, 10, 0) | 0;
    $87 = tempRet0;
    $90 = (($88 | 0) < 0) << 31 >> 31;
    $92 = ~$90;
    if ($87 >>> 0 > $92 >>> 0 | ($87 | 0) == ($92 | 0) & $86 >>> 0 > ~$88 >>> 0) {
     $$lcssa = $88;
     $283 = $84;
     $284 = $85;
     $c$3$lcssa = $c$373;
     break;
    }
    $98 = _i64Add($86 | 0, $87 | 0, $88 | 0, $90 | 0) | 0;
    $99 = tempRet0;
    $100 = HEAP32[$3 >> 2] | 0;
    if ($100 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $100 + 1;
     $c$3$be = HEAPU8[$100 >> 0] | 0;
    } else $c$3$be = ___shgetc($f) | 0;
    $107 = $c$3$be + -48 | 0;
    if ($107 >>> 0 < 10 & ($99 >>> 0 < 429496729 | ($99 | 0) == 429496729 & $98 >>> 0 < 2576980378)) {
     $84 = $98;
     $85 = $99;
     $88 = $107;
     $c$373 = $c$3$be;
    } else {
     $$lcssa = $107;
     $283 = $98;
     $284 = $99;
     $c$3$lcssa = $c$3$be;
     break;
    }
   }
   if ($$lcssa >>> 0 > 9) {
    $252 = $284;
    $254 = $283;
   } else {
    $$124 = 10;
    $285 = $283;
    $286 = $284;
    $c$8 = $c$3$lcssa;
    label = 79;
   }
  } else {
   $252 = $282;
   $254 = $281;
  }
 } else {
  $$125 = $$1;
  $c$126 = $c$1;
  label = 48;
 }
 do if ((label | 0) == 48) {
  if (!($$125 + -1 & $$125)) {
   $127 = HEAP8[45064 + (($$125 * 23 | 0) >>> 5 & 7) >> 0] | 0;
   $129 = HEAP8[$c$126 + 44801 >> 0] | 0;
   $130 = $129 & 255;
   if ($130 >>> 0 < $$125 >>> 0) {
    $134 = $130;
    $x$148 = 0;
    while (1) {
     $133 = $134 | $x$148 << $127;
     $135 = HEAP32[$3 >> 2] | 0;
     if ($135 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $135 + 1;
      $c$4$be = HEAPU8[$135 >> 0] | 0;
     } else $c$4$be = ___shgetc($f) | 0;
     $143 = HEAP8[$c$4$be + 44801 >> 0] | 0;
     $134 = $143 & 255;
     if (!($133 >>> 0 < 134217728 & $134 >>> 0 < $$125 >>> 0)) {
      $$lcssa117 = $133;
      $$lcssa118 = $143;
      $c$4$be$lcssa = $c$4$be;
      break;
     } else $x$148 = $133;
    }
    $150 = $$lcssa118;
    $152 = 0;
    $154 = $$lcssa117;
    $c$4$lcssa = $c$4$be$lcssa;
   } else {
    $150 = $129;
    $152 = 0;
    $154 = 0;
    $c$4$lcssa = $c$126;
   }
   $147 = _bitshift64Lshr(-1, -1, $127 | 0) | 0;
   $148 = tempRet0;
   if (($150 & 255) >>> 0 >= $$125 >>> 0 | ($152 >>> 0 > $148 >>> 0 | ($152 | 0) == ($148 | 0) & $154 >>> 0 > $147 >>> 0)) {
    $$124 = $$125;
    $285 = $154;
    $286 = $152;
    $c$8 = $c$4$lcssa;
    label = 79;
    break;
   }
   $159 = $154;
   $160 = $152;
   $164 = $150;
   while (1) {
    $161 = _bitshift64Shl($159 | 0, $160 | 0, $127 | 0) | 0;
    $162 = tempRet0;
    $165 = $164 & 255 | $161;
    $166 = HEAP32[$3 >> 2] | 0;
    if ($166 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $166 + 1;
     $c$5$be = HEAPU8[$166 >> 0] | 0;
    } else $c$5$be = ___shgetc($f) | 0;
    $164 = HEAP8[$c$5$be + 44801 >> 0] | 0;
    if (($164 & 255) >>> 0 >= $$125 >>> 0 | ($162 >>> 0 > $148 >>> 0 | ($162 | 0) == ($148 | 0) & $165 >>> 0 > $147 >>> 0)) {
     $289 = $165;
     $290 = $162;
     $c$5$be$lcssa = $c$5$be;
     break;
    } else {
     $159 = $165;
     $160 = $162;
    }
   }
   $$124 = $$125;
   $285 = $289;
   $286 = $290;
   $c$8 = $c$5$be$lcssa;
   label = 79;
   break;
  }
  $119 = HEAP8[$c$126 + 44801 >> 0] | 0;
  $120 = $119 & 255;
  if ($120 >>> 0 < $$125 >>> 0) {
   $184 = $120;
   $x$268 = 0;
   while (1) {
    $183 = $184 + (Math_imul($x$268, $$125) | 0) | 0;
    $185 = HEAP32[$3 >> 2] | 0;
    if ($185 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $185 + 1;
     $c$6$be = HEAPU8[$185 >> 0] | 0;
    } else $c$6$be = ___shgetc($f) | 0;
    $193 = HEAP8[$c$6$be + 44801 >> 0] | 0;
    $184 = $193 & 255;
    if (!($183 >>> 0 < 119304647 & $184 >>> 0 < $$125 >>> 0)) {
     $$lcssa119 = $183;
     $$lcssa120 = $193;
     $c$6$be$lcssa = $c$6$be;
     break;
    } else $x$268 = $183;
   }
   $198 = $$lcssa120;
   $287 = $$lcssa119;
   $288 = 0;
   $c$6$lcssa = $c$6$be$lcssa;
  } else {
   $198 = $119;
   $287 = 0;
   $288 = 0;
   $c$6$lcssa = $c$126;
  }
  if (($198 & 255) >>> 0 < $$125 >>> 0) {
   $200 = ___udivdi3(-1, -1, $$125 | 0, 0) | 0;
   $201 = tempRet0;
   $202 = $288;
   $204 = $287;
   $212 = $198;
   $c$755 = $c$6$lcssa;
   while (1) {
    if ($202 >>> 0 > $201 >>> 0 | ($202 | 0) == ($201 | 0) & $204 >>> 0 > $200 >>> 0) {
     $291 = $204;
     $292 = $202;
     $c$8$ph = $c$755;
     break;
    }
    $209 = ___muldi3($204 | 0, $202 | 0, $$125 | 0, 0) | 0;
    $210 = tempRet0;
    $211 = $212 & 255;
    if ($210 >>> 0 > 4294967295 | ($210 | 0) == -1 & $209 >>> 0 > ~$211 >>> 0) {
     $291 = $204;
     $292 = $202;
     $c$8$ph = $c$755;
     break;
    }
    $219 = _i64Add($211 | 0, 0, $209 | 0, $210 | 0) | 0;
    $220 = tempRet0;
    $221 = HEAP32[$3 >> 2] | 0;
    if ($221 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $221 + 1;
     $c$7$be = HEAPU8[$221 >> 0] | 0;
    } else $c$7$be = ___shgetc($f) | 0;
    $212 = HEAP8[$c$7$be + 44801 >> 0] | 0;
    if (($212 & 255) >>> 0 >= $$125 >>> 0) {
     $291 = $219;
     $292 = $220;
     $c$8$ph = $c$7$be;
     break;
    } else {
     $202 = $220;
     $204 = $219;
     $c$755 = $c$7$be;
    }
   }
   $$124 = $$125;
   $285 = $291;
   $286 = $292;
   $c$8 = $c$8$ph;
   label = 79;
  } else {
   $$124 = $$125;
   $285 = $287;
   $286 = $288;
   $c$8 = $c$6$lcssa;
   label = 79;
  }
 } while (0);
 if ((label | 0) == 79) if ((HEAPU8[$c$8 + 44801 >> 0] | 0) >>> 0 < $$124 >>> 0) {
  do {
   $236 = HEAP32[$3 >> 2] | 0;
   if ($236 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $236 + 1;
    $c$9$be = HEAPU8[$236 >> 0] | 0;
   } else $c$9$be = ___shgetc($f) | 0;
  } while ((HEAPU8[$c$9$be + 44801 >> 0] | 0) >>> 0 < $$124 >>> 0);
  HEAP32[(___errno_location() | 0) >> 2] = 34;
  $252 = $1;
  $254 = $0;
 } else {
  $252 = $286;
  $254 = $285;
 }
 if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
 if (!($252 >>> 0 < $1 >>> 0 | ($252 | 0) == ($1 | 0) & $254 >>> 0 < $0 >>> 0)) {
  if (!(($0 & 1 | 0) != 0 | 0 != 0 | ($neg$0 | 0) != 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $265 = _i64Add($0 | 0, $1 | 0, -1, -1) | 0;
   $279 = tempRet0;
   $280 = $265;
   tempRet0 = $279;
   return $280 | 0;
  }
  if ($252 >>> 0 > $1 >>> 0 | ($252 | 0) == ($1 | 0) & $254 >>> 0 > $0 >>> 0) {
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $279 = $1;
   $280 = $0;
   tempRet0 = $279;
   return $280 | 0;
  }
 }
 $274 = (($neg$0 | 0) < 0) << 31 >> 31;
 $277 = _i64Subtract($254 ^ $neg$0 | 0, $252 ^ $274 | 0, $neg$0 | 0, $274 | 0) | 0;
 $279 = tempRet0;
 $280 = $277;
 tempRet0 = $279;
 return $280 | 0;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$lcssa71 = 0, $$041 = 0, $$index = 0, $$index10 = 0, $$lcssa = 0, $$lcssa77 = 0, $$pre$i2$i$i16 = 0, $$pre$i2$i$i16$lcssa = 0, $102 = 0, $103 = 0, $106 = 0, $11 = 0, $113 = 0, $120 = 0, $121 = 0, $122 = 0, $129 = 0, $13 = 0, $137 = 0, $144 = 0, $15 = 0, $158 = 0, $159 = 0, $162 = 0, $163 = 0, $17 = 0, $172 = 0, $173 = 0, $20 = 0, $27 = 0, $3 = 0, $33 = 0, $43 = 0, $44 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $59 = 0, $60 = 0, $63 = 0, $65 = 0, $67 = 0, $7 = 0, $74 = 0, $75 = 0, $79 = 0, $83 = 0, $84 = 0, $86 = 0, $9 = 0, $97 = 0, $98 = 0, $__c$0 = 0, $__consume$0$off0 = 0, $__consume$0$off0$lcssa = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0 = 0, $__ky1$0 = 0, $__ky2$0 = 0, $__n_does_match$0 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$2$be = 0, $__n_does_match$3 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$4 = 0, $__n_does_match$5 = 0, $__n_does_match$5$lcssa = 0, $__n_does_match$6 = 0, $__n_might_match$0 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$4 = 0, $__st$0 = 0, $__st$1 = 0, $__st$2 = 0, $__st$3 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__statbuf = sp;
 $3 = ($__ke - $__kb | 0) / 12 | 0;
 if ($3 >>> 0 > 100) {
  $5 = _malloc($3) | 0;
  if (!$5) {
   __THREW__ = 0;
   invoke_v(7);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $9 = ___cxa_find_matching_catch() | 0;
    $$index = $9;
    $$index10 = tempRet0;
   } else {
    $17 = 0;
    $__status$0 = 0;
    label = 11;
   }
  } else {
   $17 = $5;
   $__status$0 = $5;
   label = 11;
  }
 } else {
  $17 = 0;
  $__status$0 = $__statbuf;
  label = 11;
 }
 if ((label | 0) == 11) {
  $__ky$0 = $__kb;
  $__n_does_match$0 = 0;
  $__n_might_match$0 = $3;
  $__st$0 = $__status$0;
  while (1) {
   if (($__ky$0 | 0) == ($__ke | 0)) {
    $__n_does_match$0$lcssa = $__n_does_match$0;
    $__n_might_match$0$lcssa = $__n_might_match$0;
    break;
   }
   $20 = HEAP8[$__ky$0 >> 0] | 0;
   if (!($20 & 1)) $27 = ($20 & 255) >>> 1; else $27 = HEAP32[$__ky$0 + 4 >> 2] | 0;
   if (!$27) {
    HEAP8[$__st$0 >> 0] = 2;
    $__n_does_match$1 = $__n_does_match$0 + 1 | 0;
    $__n_might_match$1 = $__n_might_match$0 + -1 | 0;
   } else {
    HEAP8[$__st$0 >> 0] = 1;
    $__n_does_match$1 = $__n_does_match$0;
    $__n_might_match$1 = $__n_might_match$0;
   }
   $__ky$0 = $__ky$0 + 12 | 0;
   $__n_does_match$0 = $__n_does_match$1;
   $__n_might_match$0 = $__n_might_match$1;
   $__st$0 = $__st$0 + 1 | 0;
  }
  $__indx$0 = 0;
  $__n_does_match$2 = $__n_does_match$0$lcssa;
  $__n_might_match$2 = $__n_might_match$0$lcssa;
  L19 : while (1) {
   $33 = HEAP32[$__b >> 2] | 0;
   do if (!$33) $47 = 0; else if ((HEAP32[$33 + 12 >> 2] | 0) == (HEAP32[$33 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $43 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $44 = __THREW__;
    __THREW__ = 0;
    if ($44 & 1) {
     label = 6;
     break L19;
    }
    if (($43 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $47 = 0;
     break;
    } else {
     $47 = HEAP32[$__b >> 2] | 0;
     break;
    }
   } else $47 = $33; while (0);
   $48 = ($47 | 0) == 0;
   $49 = HEAP32[$__e >> 2] | 0;
   if (!$49) $$pre$i2$i$i16 = 0; else if ((HEAP32[$49 + 12 >> 2] | 0) == (HEAP32[$49 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $59 = invoke_ii(HEAP32[(HEAP32[$49 >> 2] | 0) + 36 >> 2] | 0, $49 | 0) | 0;
    $60 = __THREW__;
    __THREW__ = 0;
    if ($60 & 1) {
     label = 6;
     break;
    }
    if (($59 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i2$i$i16 = 0;
    } else $$pre$i2$i$i16 = $49;
   } else $$pre$i2$i$i16 = $49;
   $63 = ($$pre$i2$i$i16 | 0) == 0;
   $65 = HEAP32[$__b >> 2] | 0;
   if (!(($__n_might_match$2 | 0) != 0 & ($48 ^ $63))) {
    $$lcssa = $63;
    $$lcssa77 = $65;
    $$pre$i2$i$i16$lcssa = $$pre$i2$i$i16;
    label = 70;
    break;
   }
   $67 = HEAP32[$65 + 12 >> 2] | 0;
   if (($67 | 0) == (HEAP32[$65 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $74 = invoke_ii(HEAP32[(HEAP32[$65 >> 2] | 0) + 36 >> 2] | 0, $65 | 0) | 0;
    $75 = __THREW__;
    __THREW__ = 0;
    if ($75 & 1) {
     label = 6;
     break;
    } else $$0$i$i = $74;
   } else $$0$i$i = HEAPU8[$67 >> 0] | 0;
   $79 = $$0$i$i & 255;
   if ($__case_sensitive) $__c$0 = $79; else {
    __THREW__ = 0;
    $83 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, $79 | 0) | 0;
    $84 = __THREW__;
    __THREW__ = 0;
    if ($84 & 1) {
     label = 6;
     break;
    } else $__c$0 = $83;
   }
   $86 = $__indx$0 + 1 | 0;
   $__consume$0$off0 = 0;
   $__ky1$0 = $__kb;
   $__n_does_match$3 = $__n_does_match$2;
   $__n_might_match$3 = $__n_might_match$2;
   $__st$1 = $__status$0;
   while (1) {
    if (($__ky1$0 | 0) == ($__ke | 0)) {
     $__consume$0$off0$lcssa = $__consume$0$off0;
     $__n_does_match$3$lcssa = $__n_does_match$3;
     $__n_might_match$3$lcssa = $__n_might_match$3;
     break;
    }
    do if ((HEAP8[$__st$1 >> 0] | 0) == 1) {
     if (!(HEAP8[$__ky1$0 >> 0] & 1)) $97 = $__ky1$0 + 1 | 0; else $97 = HEAP32[$__ky1$0 + 8 >> 2] | 0;
     $98 = HEAP8[$97 + $__indx$0 >> 0] | 0;
     if ($__case_sensitive) $__kc$0 = $98; else {
      __THREW__ = 0;
      $102 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, $98 | 0) | 0;
      $103 = __THREW__;
      __THREW__ = 0;
      if ($103 & 1) {
       label = 5;
       break L19;
      } else $__kc$0 = $102;
     }
     if ($__c$0 << 24 >> 24 != $__kc$0 << 24 >> 24) {
      HEAP8[$__st$1 >> 0] = 0;
      $__consume$1$off0 = $__consume$0$off0;
      $__n_does_match$4 = $__n_does_match$3;
      $__n_might_match$4 = $__n_might_match$3 + -1 | 0;
      break;
     }
     $106 = HEAP8[$__ky1$0 >> 0] | 0;
     if (!($106 & 1)) $113 = ($106 & 255) >>> 1; else $113 = HEAP32[$__ky1$0 + 4 >> 2] | 0;
     if (($113 | 0) == ($86 | 0)) {
      HEAP8[$__st$1 >> 0] = 2;
      $__consume$1$off0 = 1;
      $__n_does_match$4 = $__n_does_match$3 + 1 | 0;
      $__n_might_match$4 = $__n_might_match$3 + -1 | 0;
     } else {
      $__consume$1$off0 = 1;
      $__n_does_match$4 = $__n_does_match$3;
      $__n_might_match$4 = $__n_might_match$3;
     }
    } else {
     $__consume$1$off0 = $__consume$0$off0;
     $__n_does_match$4 = $__n_does_match$3;
     $__n_might_match$4 = $__n_might_match$3;
    } while (0);
    $__consume$0$off0 = $__consume$1$off0;
    $__ky1$0 = $__ky1$0 + 12 | 0;
    $__n_does_match$3 = $__n_does_match$4;
    $__n_might_match$3 = $__n_might_match$4;
    $__st$1 = $__st$1 + 1 | 0;
   }
   if ($__consume$0$off0$lcssa) {
    $120 = HEAP32[$__b >> 2] | 0;
    $121 = $120 + 12 | 0;
    $122 = HEAP32[$121 >> 2] | 0;
    if (($122 | 0) == (HEAP32[$120 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     invoke_ii(HEAP32[(HEAP32[$120 >> 2] | 0) + 40 >> 2] | 0, $120 | 0) | 0;
     $129 = __THREW__;
     __THREW__ = 0;
     if ($129 & 1) {
      label = 6;
      break;
     }
    } else HEAP32[$121 >> 2] = $122 + 1;
    if (($__n_does_match$3$lcssa + $__n_might_match$3$lcssa | 0) >>> 0 > 1) {
     $__ky2$0 = $__kb;
     $__n_does_match$5 = $__n_does_match$3$lcssa;
     $__st$2 = $__status$0;
     while (1) {
      if (($__ky2$0 | 0) == ($__ke | 0)) {
       $__n_does_match$5$lcssa = $__n_does_match$5;
       break;
      }
      if ((HEAP8[$__st$2 >> 0] | 0) == 2) {
       $137 = HEAP8[$__ky2$0 >> 0] | 0;
       if (!($137 & 1)) $144 = ($137 & 255) >>> 1; else $144 = HEAP32[$__ky2$0 + 4 >> 2] | 0;
       if (($144 | 0) == ($86 | 0)) $__n_does_match$6 = $__n_does_match$5; else {
        HEAP8[$__st$2 >> 0] = 0;
        $__n_does_match$6 = $__n_does_match$5 + -1 | 0;
       }
      } else $__n_does_match$6 = $__n_does_match$5;
      $__ky2$0 = $__ky2$0 + 12 | 0;
      $__n_does_match$5 = $__n_does_match$6;
      $__st$2 = $__st$2 + 1 | 0;
     }
     $__n_does_match$2$be = $__n_does_match$5$lcssa;
    } else $__n_does_match$2$be = $__n_does_match$3$lcssa;
   } else $__n_does_match$2$be = $__n_does_match$3$lcssa;
   $__indx$0 = $86;
   $__n_does_match$2 = $__n_does_match$2$be;
   $__n_might_match$2 = $__n_might_match$3$lcssa;
  }
  if ((label | 0) == 5) {
   $11 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $11;
   $lpad$phi$index3 = tempRet0;
  } else if ((label | 0) == 6) {
   $13 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $13;
   $lpad$phi$index3 = tempRet0;
  } else if ((label | 0) == 70) {
   do if (!$$lcssa77) {
    $162 = 0;
    label = 76;
   } else if ((HEAP32[$$lcssa77 + 12 >> 2] | 0) == (HEAP32[$$lcssa77 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $158 = invoke_ii(HEAP32[(HEAP32[$$lcssa77 >> 2] | 0) + 36 >> 2] | 0, $$lcssa77 | 0) | 0;
    $159 = __THREW__;
    __THREW__ = 0;
    if (!($159 & 1)) if (($158 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $162 = 0;
     label = 76;
     break;
    } else {
     $162 = HEAP32[$__b >> 2] | 0;
     label = 76;
     break;
    }
   } else {
    $162 = $$lcssa77;
    label = 76;
   } while (0);
   L95 : do if ((label | 0) == 76) {
    $163 = ($162 | 0) == 0;
    do if ($$lcssa) label = 82; else {
     if ((HEAP32[$$pre$i2$i$i16$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i16$lcssa + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $172 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i16$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i16$lcssa | 0) | 0;
      $173 = __THREW__;
      __THREW__ = 0;
      if ($173 & 1) break L95;
      if (($172 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       label = 82;
       break;
      }
     }
     if (!$163) label = 83;
    } while (0);
    if ((label | 0) == 82) if ($163) label = 83;
    if ((label | 0) == 83) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $$0 = $__kb;
    $__st$3 = $__status$0;
    while (1) {
     if (($$0 | 0) == ($__ke | 0)) {
      label = 88;
      break;
     }
     if ((HEAP8[$__st$3 >> 0] | 0) == 2) {
      $$0$lcssa71 = $$0;
      label = 89;
      break;
     }
     $$0 = $$0 + 12 | 0;
     $__st$3 = $__st$3 + 1 | 0;
    }
    if ((label | 0) == 88) {
     HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
     $$041 = $__ke;
    } else if ((label | 0) == 89) $$041 = $$0$lcssa71;
    _free($17);
    if ($17) {}
    STACKTOP = sp;
    return $$041 | 0;
   } while (0);
   $15 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $15;
   $lpad$phi$index3 = tempRet0;
  }
  _free($17);
  if (!$17) {
   $$index = $lpad$phi$index;
   $$index10 = $lpad$phi$index3;
  } else {
   $$index = $lpad$phi$index;
   $$index10 = $lpad$phi$index3;
  }
 }
 ___resumeException($$index | 0);
 return 0;
}

function __ZNSt3__16locale5__impC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $10 = 0, $12 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $65 = 0, $67 = 0, $69 = 0, $71 = 0, $72 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $86 = 0, $9 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 50128;
 $2 = $this + 8 | 0;
 __THREW__ = 0;
 invoke_vii(77, $2 | 0, 28);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $82 = ___cxa_find_matching_catch() | 0;
  $$1 = tempRet0;
  $$12 = $82;
 } else {
  $5 = $this + 144 | 0;
  __THREW__ = 0;
  invoke_viii(3, $5 | 0, 50112, 1);
  $6 = __THREW__;
  __THREW__ = 0;
  if ($6 & 1) {
   $84 = ___cxa_find_matching_catch() | 0;
   $$0 = tempRet0;
   $$01 = $84;
  } else {
   $8 = HEAP32[$2 >> 2] | 0;
   $9 = $this + 12 | 0;
   $10 = HEAP32[$9 >> 2] | 0;
   while (1) {
    if (($10 | 0) == ($8 | 0)) break;
    $12 = $10 + -4 | 0;
    HEAP32[$9 >> 2] = $12;
    $10 = $12;
   }
   HEAP32[13755] = 0;
   HEAP32[13754] = 48576;
   __THREW__ = 0;
   invoke_vii(78, $this | 0, 55016);
   $13 = __THREW__;
   __THREW__ = 0;
   do if ($13 & 1) label = 42; else {
    HEAP32[13753] = 0;
    HEAP32[13752] = 48616;
    __THREW__ = 0;
    invoke_vii(79, $this | 0, 55008);
    $15 = __THREW__;
    __THREW__ = 0;
    if ($15 & 1) label = 42; else {
     HEAP32[13749] = 0;
     HEAP32[13748] = 50224;
     HEAP32[13750] = 0;
     HEAP8[55004] = 0;
     HEAP32[13750] = __ZNSt3__15ctypeIcE13classic_tableEv() | 0;
     __THREW__ = 0;
     invoke_vii(80, $this | 0, 54992);
     $18 = __THREW__;
     __THREW__ = 0;
     if ($18 & 1) label = 42; else {
      HEAP32[13747] = 0;
      HEAP32[13746] = 51184;
      __THREW__ = 0;
      invoke_vii(81, $this | 0, 54984);
      $20 = __THREW__;
      __THREW__ = 0;
      if ($20 & 1) label = 42; else {
       HEAP32[13745] = 0;
       HEAP32[13744] = 51400;
       __THREW__ = 0;
       invoke_vii(82, $this | 0, 54976);
       $22 = __THREW__;
       __THREW__ = 0;
       if ($22 & 1) label = 42; else {
        __THREW__ = 0;
        invoke_vii(83, 54960, 1);
        $24 = __THREW__;
        __THREW__ = 0;
        if ($24 & 1) label = 42; else {
         __THREW__ = 0;
         invoke_vii(84, $this | 0, 54960);
         $26 = __THREW__;
         __THREW__ = 0;
         if ($26 & 1) label = 42; else {
          HEAP32[13739] = 0;
          HEAP32[13738] = 51624;
          __THREW__ = 0;
          invoke_vii(85, $this | 0, 54952);
          $28 = __THREW__;
          __THREW__ = 0;
          if ($28 & 1) label = 42; else {
           HEAP32[13737] = 0;
           HEAP32[13736] = 51744;
           __THREW__ = 0;
           invoke_vii(86, $this | 0, 54944);
           $30 = __THREW__;
           __THREW__ = 0;
           if ($30 & 1) label = 42; else {
            __ZNSt3__18numpunctIcEC2Ej(54920, 1);
            __THREW__ = 0;
            invoke_vii(87, $this | 0, 54920);
            $32 = __THREW__;
            __THREW__ = 0;
            if ($32 & 1) label = 42; else {
             __ZNSt3__18numpunctIwEC2Ej(54888, 1);
             __THREW__ = 0;
             invoke_vii(88, $this | 0, 54888);
             $34 = __THREW__;
             __THREW__ = 0;
             if ($34 & 1) label = 42; else {
              HEAP32[13721] = 0;
              HEAP32[13720] = 48656;
              __THREW__ = 0;
              invoke_vii(89, $this | 0, 54880);
              $36 = __THREW__;
              __THREW__ = 0;
              if ($36 & 1) label = 42; else {
               HEAP32[13719] = 0;
               HEAP32[13718] = 48776;
               __THREW__ = 0;
               invoke_vii(90, $this | 0, 54872);
               $38 = __THREW__;
               __THREW__ = 0;
               if ($38 & 1) label = 42; else {
                HEAP32[13717] = 0;
                HEAP32[13716] = 48848;
                __THREW__ = 0;
                invoke_vii(91, $this | 0, 54864);
                $40 = __THREW__;
                __THREW__ = 0;
                if ($40 & 1) label = 42; else {
                 HEAP32[13715] = 0;
                 HEAP32[13714] = 48944;
                 __THREW__ = 0;
                 invoke_vii(92, $this | 0, 54856);
                 $42 = __THREW__;
                 __THREW__ = 0;
                 if ($42 & 1) label = 42; else {
                  HEAP32[13713] = 0;
                  HEAP32[13712] = 49536;
                  __THREW__ = 0;
                  invoke_vii(93, $this | 0, 54848);
                  $44 = __THREW__;
                  __THREW__ = 0;
                  if ($44 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13711] = 0;
                  HEAP32[13710] = 49600;
                  __THREW__ = 0;
                  invoke_vii(94, $this | 0, 54840);
                  $46 = __THREW__;
                  __THREW__ = 0;
                  if ($46 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13709] = 0;
                  HEAP32[13708] = 49664;
                  __THREW__ = 0;
                  invoke_vii(95, $this | 0, 54832);
                  $48 = __THREW__;
                  __THREW__ = 0;
                  if ($48 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13707] = 0;
                  HEAP32[13706] = 49728;
                  __THREW__ = 0;
                  invoke_vii(96, $this | 0, 54824);
                  $50 = __THREW__;
                  __THREW__ = 0;
                  if ($50 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13705] = 0;
                  HEAP32[13704] = 49792;
                  __THREW__ = 0;
                  invoke_vii(97, $this | 0, 54816);
                  $52 = __THREW__;
                  __THREW__ = 0;
                  if ($52 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13703] = 0;
                  HEAP32[13702] = 49872;
                  __THREW__ = 0;
                  invoke_vii(98, $this | 0, 54808);
                  $54 = __THREW__;
                  __THREW__ = 0;
                  if ($54 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13701] = 0;
                  HEAP32[13700] = 49928;
                  __THREW__ = 0;
                  invoke_vii(99, $this | 0, 54800);
                  $56 = __THREW__;
                  __THREW__ = 0;
                  if ($56 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13699] = 0;
                  HEAP32[13698] = 49976;
                  __THREW__ = 0;
                  invoke_vii(100, $this | 0, 54792);
                  $58 = __THREW__;
                  __THREW__ = 0;
                  if ($58 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13695] = 0;
                  HEAP32[13694] = 49024;
                  HEAP32[13696] = 49072;
                  __THREW__ = 0;
                  invoke_vii(101, $this | 0, 54776);
                  $60 = __THREW__;
                  __THREW__ = 0;
                  if ($60 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13691] = 0;
                  HEAP32[13690] = 49176;
                  HEAP32[13692] = 49224;
                  __THREW__ = 0;
                  invoke_vii(102, $this | 0, 54760);
                  $62 = __THREW__;
                  __THREW__ = 0;
                  if ($62 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13687] = 0;
                  HEAP32[13686] = 51120;
                  __THREW__ = 0;
                  $64 = invoke_i(2) | 0;
                  $65 = __THREW__;
                  __THREW__ = 0;
                  if ($65 & 1) {
                   $67 = ___cxa_find_matching_catch() | 0;
                   $eh$lpad$body$index3Z2D = tempRet0;
                   $eh$lpad$body$indexZ2D = $67;
                   break;
                  }
                  HEAP32[13688] = $64;
                  HEAP32[13686] = 49472;
                  __THREW__ = 0;
                  invoke_vii(103, $this | 0, 54744);
                  $69 = __THREW__;
                  __THREW__ = 0;
                  if ($69 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13683] = 0;
                  HEAP32[13682] = 51120;
                  __THREW__ = 0;
                  $71 = invoke_i(2) | 0;
                  $72 = __THREW__;
                  __THREW__ = 0;
                  if ($72 & 1) {
                   $74 = ___cxa_find_matching_catch() | 0;
                   $eh$lpad$body$index3Z2D = tempRet0;
                   $eh$lpad$body$indexZ2D = $74;
                   break;
                  }
                  HEAP32[13684] = $71;
                  HEAP32[13682] = 49504;
                  __THREW__ = 0;
                  invoke_vii(104, $this | 0, 54728);
                  $76 = __THREW__;
                  __THREW__ = 0;
                  if ($76 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13681] = 0;
                  HEAP32[13680] = 50016;
                  __THREW__ = 0;
                  invoke_vii(105, $this | 0, 54720);
                  $78 = __THREW__;
                  __THREW__ = 0;
                  if ($78 & 1) {
                   label = 42;
                   break;
                  }
                  HEAP32[13679] = 0;
                  HEAP32[13678] = 50056;
                  __THREW__ = 0;
                  invoke_vii(106, $this | 0, 54712);
                  $80 = __THREW__;
                  __THREW__ = 0;
                  if ($80 & 1) {
                   label = 42;
                   break;
                  }
                  return;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   } while (0);
   if ((label | 0) == 42) {
    $86 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index3Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $86;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   $$0 = $eh$lpad$body$index3Z2D;
   $$01 = $eh$lpad$body$indexZ2D;
  }
  __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($2);
  $$1 = $$0;
  $$12 = $$01;
 }
 ___resumeException($$12 | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i9 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i15 = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i11 = 0, $$pre$i3$i$i = 0, $$pre$phi40Z2D = 0, $$pre$phi42Z2D = 0, $0 = 0, $100 = 0, $102 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $113 = 0, $114 = 0, $119 = 0, $125 = 0, $132 = 0, $138 = 0, $139 = 0, $141 = 0, $142 = 0, $143 = 0, $148 = 0, $155 = 0, $156 = 0, $162 = 0, $169 = 0, $170 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $41 = 0, $42 = 0, $46 = 0, $49 = 0, $5 = 0, $56 = 0, $57 = 0, $6 = 0, $62 = 0, $64 = 0, $69 = 0, $71 = 0, $77 = 0, $78 = 0, $85 = 0, $86 = 0, $93 = 0, $94 = 0, $95 = 0, $97 = 0, $98 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__i$0$i$i5 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $vararg_buffer = sp;
 $__atoms = sp + 208 | 0;
 $__grouping = sp + 196 | 0;
 $0 = sp + 192 | 0;
 $__buf = sp + 180 | 0;
 $__a_end = sp + 176 | 0;
 $__g = sp + 16 | 0;
 $__g_end = sp + 8 | 0;
 $__dc = sp + 4 | 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__grouping + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 __THREW__ = 0;
 invoke_vii(47, $0 | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) {
  $95 = ___cxa_find_matching_catch() | 0;
  $$0 = $95;
  $$01 = tempRet0;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $0 | 0, 50200) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$5 >> 2] | 0) + 48 >> 2] | 0, $5 | 0, 48720, 48746 | 0, $__atoms | 0) | 0;
   $11 = __THREW__;
   __THREW__ = 0;
   if (!($11 & 1)) {
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    $__i$0$i$i5 = 0;
    while (1) {
     if (($__i$0$i$i5 | 0) == 3) break;
     HEAP32[$__buf + ($__i$0$i$i5 << 2) >> 2] = 0;
     $__i$0$i$i5 = $__i$0$i$i5 + 1 | 0;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $21 = 10; else $21 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $21 | 0, 0);
    $22 = __THREW__;
    __THREW__ = 0;
    L17 : do if ($22 & 1) label = 48; else {
     if (!(HEAP8[$__buf >> 0] & 1)) {
      $29 = $__buf + 1 | 0;
      $$pre$phi40Z2D = $29;
      $$pre$phi42Z2D = $__buf + 8 | 0;
      $30 = $29;
     } else {
      $27 = $__buf + 8 | 0;
      $$pre$phi40Z2D = $__buf + 1 | 0;
      $$pre$phi42Z2D = $27;
      $30 = HEAP32[$27 >> 2] | 0;
     }
     HEAP32[$__a_end >> 2] = $30;
     HEAP32[$__g_end >> 2] = $__g;
     HEAP32[$__dc >> 2] = 0;
     $31 = $__buf + 4 | 0;
     $$pre$i$i$i11 = HEAP32[$__b >> 2] | 0;
     $__a$0 = $30;
     L23 : while (1) {
      if (!$$pre$i$i$i11) {
       $105 = 0;
       $177 = 1;
      } else {
       $34 = HEAP32[$$pre$i$i$i11 + 12 >> 2] | 0;
       if (($34 | 0) == (HEAP32[$$pre$i$i$i11 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $41 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i11 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i11 | 0) | 0;
        $42 = __THREW__;
        __THREW__ = 0;
        if ($42 & 1) {
         label = 47;
         break;
        } else $$0$i$i$i$i9 = $41;
       } else $$0$i$i$i$i9 = HEAP32[$34 >> 2] | 0;
       if (($$0$i$i$i$i9 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $105 = 0;
        $177 = 1;
       } else {
        $105 = $$pre$i$i$i11;
        $177 = 0;
       }
      }
      $46 = HEAP32[$__e >> 2] | 0;
      do if (!$46) label = 29; else {
       $49 = HEAP32[$46 + 12 >> 2] | 0;
       if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $56 = invoke_ii(HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] | 0, $46 | 0) | 0;
        $57 = __THREW__;
        __THREW__ = 0;
        if ($57 & 1) {
         label = 47;
         break L23;
        } else $$0$i$i1$i$i15 = $56;
       } else $$0$i$i1$i$i15 = HEAP32[$49 >> 2] | 0;
       if (($$0$i$i1$i$i15 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 29;
        break;
       } else if ($177) {
        $178 = $46;
        break;
       } else {
        $$lcssa = $105;
        $$pre$i3$i$i = $46;
        $__a$2 = $__a$0;
        break L23;
       }
      } while (0);
      if ((label | 0) == 29) {
       label = 0;
       if ($177) {
        $$lcssa = $105;
        $$pre$i3$i$i = 0;
        $__a$2 = $__a$0;
        break;
       } else $178 = 0;
      }
      $62 = HEAP8[$__buf >> 0] | 0;
      $64 = ($62 & 1) == 0;
      if ($64) $69 = ($62 & 255) >>> 1; else $69 = HEAP32[$31 >> 2] | 0;
      if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $69 | 0)) {
       if ($64) {
        $77 = ($62 & 255) >>> 1;
        $94 = ($62 & 255) >>> 1;
       } else {
        $71 = HEAP32[$31 >> 2] | 0;
        $77 = $71;
        $94 = $71;
       }
       __THREW__ = 0;
       invoke_viii(5, $__buf | 0, $77 << 1 | 0, 0);
       $78 = __THREW__;
       __THREW__ = 0;
       if ($78 & 1) {
        label = 47;
        break;
       }
       if (!(HEAP8[$__buf >> 0] & 1)) $85 = 10; else $85 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
       __THREW__ = 0;
       invoke_viii(5, $__buf | 0, $85 | 0, 0);
       $86 = __THREW__;
       __THREW__ = 0;
       if ($86 & 1) {
        label = 47;
        break;
       }
       if (!(HEAP8[$__buf >> 0] & 1)) $93 = $$pre$phi40Z2D; else $93 = HEAP32[$$pre$phi42Z2D >> 2] | 0;
       HEAP32[$__a_end >> 2] = $93 + $94;
       $__a$1 = $93;
      } else $__a$1 = $__a$0;
      $104 = $105 + 12 | 0;
      $106 = HEAP32[$104 >> 2] | 0;
      $107 = $105 + 16 | 0;
      if (($106 | 0) == (HEAP32[$107 >> 2] | 0)) {
       __THREW__ = 0;
       $113 = invoke_ii(HEAP32[(HEAP32[$105 >> 2] | 0) + 36 >> 2] | 0, $105 | 0) | 0;
       $114 = __THREW__;
       __THREW__ = 0;
       if ($114 & 1) {
        label = 47;
        break;
       } else $$0$i$i = $113;
      } else $$0$i$i = HEAP32[$106 >> 2] | 0;
      if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, 16, $__a$1, $__a_end, $__dc, 0, $__grouping, $__g, $__g_end, $__atoms) | 0) {
       $$lcssa = $105;
       $$pre$i3$i$i = $178;
       $__a$2 = $__a$1;
       break;
      }
      $119 = HEAP32[$104 >> 2] | 0;
      if (($119 | 0) == (HEAP32[$107 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$105 >> 2] | 0) + 40 >> 2] | 0, $105 | 0) | 0;
       $125 = __THREW__;
       __THREW__ = 0;
       if ($125 & 1) {
        label = 47;
        break;
       }
      } else HEAP32[$104 >> 2] = $119 + 4;
      $$pre$i$i$i11 = $105;
      $__a$0 = $__a$1;
     }
     if ((label | 0) == 47) {
      $100 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $100;
      $lpad$phi$index2 = tempRet0;
      break;
     }
     __THREW__ = 0;
     invoke_viii(5, $__buf | 0, (HEAP32[$__a_end >> 2] | 0) - $__a$2 | 0, 0);
     $132 = __THREW__;
     __THREW__ = 0;
     if ($132 & 1) label = 48; else {
      if (!(HEAP8[$__buf >> 0] & 1)) $141 = $$pre$phi40Z2D; else $141 = HEAP32[$$pre$phi42Z2D >> 2] | 0;
      __THREW__ = 0;
      $138 = invoke_i(2) | 0;
      $139 = __THREW__;
      __THREW__ = 0;
      if ($139 & 1) label = 48; else {
       __THREW__ = 0;
       HEAP32[$vararg_buffer >> 2] = $__v;
       $142 = invoke_iiiii(11, $141 | 0, $138 | 0, 48760, $vararg_buffer | 0) | 0;
       $143 = __THREW__;
       __THREW__ = 0;
       if ($143 & 1) label = 48; else {
        if (($142 | 0) != 1) HEAP32[$__err >> 2] = 4;
        if (!$$lcssa) {
         $176 = 0;
         $179 = 1;
        } else {
         $148 = HEAP32[$$lcssa + 12 >> 2] | 0;
         if (($148 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
          __THREW__ = 0;
          $155 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
          $156 = __THREW__;
          __THREW__ = 0;
          if ($156 & 1) {
           label = 48;
           break;
          } else $$0$i$i$i$i = $155;
         } else $$0$i$i$i$i = HEAP32[$148 >> 2] | 0;
         if (($$0$i$i$i$i | 0) == -1) {
          HEAP32[$__b >> 2] = 0;
          $176 = 0;
          $179 = 1;
         } else {
          $176 = $$lcssa;
          $179 = 0;
         }
        }
        do if (!$$pre$i3$i$i) label = 77; else {
         $162 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
         if (($162 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
          __THREW__ = 0;
          $169 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
          $170 = __THREW__;
          __THREW__ = 0;
          if ($170 & 1) {
           label = 48;
           break L17;
          } else $$0$i$i1$i$i = $169;
         } else $$0$i$i1$i$i = HEAP32[$162 >> 2] | 0;
         if (($$0$i$i1$i$i | 0) == -1) {
          HEAP32[$__e >> 2] = 0;
          label = 77;
          break;
         } else if ($179) break; else {
          label = 79;
          break;
         }
        } while (0);
        if ((label | 0) == 77) if ($179) label = 79;
        if ((label | 0) == 79) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
        HEAP32[$agg$result >> 2] = $176;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
        STACKTOP = sp;
        return;
       }
      }
     }
    } while (0);
    if ((label | 0) == 48) {
     $102 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $102;
     $lpad$phi$index2 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    $$0 = $lpad$phi$index;
    $$01 = $lpad$phi$index2;
    break;
   }
  }
  $97 = ___cxa_find_matching_catch() | 0;
  $98 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  $$0 = $97;
  $$01 = $98;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0 | 0);
}

function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $__neg, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $111 = 0, $113 = 0, $119 = 0, $12 = 0, $13 = 0, $130 = 0, $132 = 0, $154 = 0, $156 = 0, $16 = 0, $170 = 0, $172 = 0, $2 = 0, $27 = 0, $29 = 0, $3 = 0, $35 = 0, $4 = 0, $46 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $70 = 0, $72 = 0, $8 = 0, $86 = 0, $88 = 0, $9 = 0, $96 = 0, $97 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i11 = 0, $__i$0$i$i$i16 = 0, $__i$0$i$i$i21 = 0, $__i$0$i$i$i26 = 0, $__i$0$i$i$i31 = 0, $__i$0$i$i$i36 = 0, $__i$0$i$i$i6 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 108 | 0;
 $1 = sp + 96 | 0;
 $2 = sp + 92 | 0;
 $3 = sp + 80 | 0;
 $4 = sp + 68 | 0;
 $5 = sp + 56 | 0;
 $6 = sp + 52 | 0;
 $7 = sp + 40 | 0;
 $8 = sp + 36 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($__intl) {
  $12 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 49648) | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$13 + 44 >> 2] & 127]($0, $12);
   $16 = HEAP32[$0 >> 2] | 0;
   HEAP8[$__pat >> 0] = $16;
   HEAP8[$__pat + 1 >> 0] = $16 >> 8;
   HEAP8[$__pat + 2 >> 0] = $16 >> 16;
   HEAP8[$__pat + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 127]($1, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $27 = __THREW__;
   __THREW__ = 0;
   if ($27 & 1) {
    $29 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($29);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$1 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   $__i$0$i$i$i = 0;
   while (1) {
    if (($__i$0$i$i$i | 0) == 3) break;
    HEAP32[$1 + ($__i$0$i$i$i << 2) >> 2] = 0;
    $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$13 + 40 >> 2] & 127]($2, $12);
   $35 = HEAP32[$2 >> 2] | 0;
   HEAP8[$__pat >> 0] = $35;
   HEAP8[$__pat + 1 >> 0] = $35 >> 8;
   HEAP8[$__pat + 2 >> 0] = $35 >> 16;
   HEAP8[$__pat + 3 >> 0] = $35 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 127]($3, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $46 = __THREW__;
   __THREW__ = 0;
   if ($46 & 1) {
    $48 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($48);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   $__i$0$i$i$i6 = 0;
   while (1) {
    if (($__i$0$i$i$i6 | 0) == 3) break;
    HEAP32[$3 + ($__i$0$i$i$i6 << 2) >> 2] = 0;
    $__i$0$i$i$i6 = $__i$0$i$i$i6 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  }
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 127]($4, $12);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $70 = __THREW__;
  __THREW__ = 0;
  if ($70 & 1) {
   $72 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($72);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$4 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  $__i$0$i$i$i11 = 0;
  while (1) {
   if (($__i$0$i$i$i11 | 0) == 3) break;
   HEAP32[$4 + ($__i$0$i$i$i11 << 2) >> 2] = 0;
   $__i$0$i$i$i11 = $__i$0$i$i$i11 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 127]($5, $12);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $86 = __THREW__;
  __THREW__ = 0;
  if ($86 & 1) {
   $88 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($88);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$5 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  $__i$0$i$i$i16 = 0;
  while (1) {
   if (($__i$0$i$i$i16 | 0) == 3) break;
   HEAP32[$5 + ($__i$0$i$i$i16 << 2) >> 2] = 0;
   $__i$0$i$i$i16 = $__i$0$i$i$i16 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $96 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 49584) | 0;
  $97 = HEAP32[$96 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$97 + 44 >> 2] & 127]($6, $96);
   $100 = HEAP32[$6 >> 2] | 0;
   HEAP8[$__pat >> 0] = $100;
   HEAP8[$__pat + 1 >> 0] = $100 >> 8;
   HEAP8[$__pat + 2 >> 0] = $100 >> 16;
   HEAP8[$__pat + 3 >> 0] = $100 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$96 >> 2] | 0) + 32 >> 2] & 127]($7, $96);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $111 = __THREW__;
   __THREW__ = 0;
   if ($111 & 1) {
    $113 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($113);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$7 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   $__i$0$i$i$i21 = 0;
   while (1) {
    if (($__i$0$i$i$i21 | 0) == 3) break;
    HEAP32[$7 + ($__i$0$i$i$i21 << 2) >> 2] = 0;
    $__i$0$i$i$i21 = $__i$0$i$i$i21 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$97 + 40 >> 2] & 127]($8, $96);
   $119 = HEAP32[$8 >> 2] | 0;
   HEAP8[$__pat >> 0] = $119;
   HEAP8[$__pat + 1 >> 0] = $119 >> 8;
   HEAP8[$__pat + 2 >> 0] = $119 >> 16;
   HEAP8[$__pat + 3 >> 0] = $119 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$96 >> 2] | 0) + 28 >> 2] & 127]($9, $96);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $130 = __THREW__;
   __THREW__ = 0;
   if ($130 & 1) {
    $132 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($132);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$9 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$9 + 8 >> 2];
   $__i$0$i$i$i26 = 0;
   while (1) {
    if (($__i$0$i$i$i26 | 0) == 3) break;
    HEAP32[$9 + ($__i$0$i$i$i26 << 2) >> 2] = 0;
    $__i$0$i$i$i26 = $__i$0$i$i$i26 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  }
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$96 >> 2] | 0) + 12 >> 2] & 127]($96) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$96 >> 2] | 0) + 16 >> 2] & 127]($96) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$96 >> 2] | 0) + 20 >> 2] & 127]($10, $96);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $154 = __THREW__;
  __THREW__ = 0;
  if ($154 & 1) {
   $156 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($156);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$10 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $__i$0$i$i$i31 = 0;
  while (1) {
   if (($__i$0$i$i$i31 | 0) == 3) break;
   HEAP32[$10 + ($__i$0$i$i$i31 << 2) >> 2] = 0;
   $__i$0$i$i$i31 = $__i$0$i$i$i31 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$96 >> 2] | 0) + 24 >> 2] & 127]($11, $96);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $170 = __THREW__;
  __THREW__ = 0;
  if ($170 & 1) {
   $172 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($172);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$11 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $__i$0$i$i$i36 = 0;
  while (1) {
   if (($__i$0$i$i$i36 | 0) == 3) break;
   HEAP32[$11 + ($__i$0$i$i$i36 << 2) >> 2] = 0;
   $__i$0$i$i$i36 = $__i$0$i$i$i36 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$96 >> 2] | 0) + 36 >> 2] & 127]($96) | 0;
 }
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$0$i$i = 0, $$0$i$i7 = 0, $$01$i$i = 0, $$01$i$i6 = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $111 = 0, $121 = 0, $123 = 0, $13 = 0, $130 = 0, $137 = 0, $138 = 0, $140 = 0, $147 = 0, $148 = 0, $15 = 0, $150 = 0, $152 = 0, $156 = 0, $161 = 0, $162 = 0, $164 = 0, $165 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $179 = 0, $180 = 0, $185 = 0, $19 = 0, $191 = 0, $192 = 0, $21 = 0, $23 = 0, $25 = 0, $31 = 0, $32 = 0, $36 = 0, $37 = 0, $39 = 0, $41 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $63 = 0, $64 = 0, $65 = 0, $68 = 0, $69 = 0, $73 = 0, $80 = 0, $86 = 0, $9 = 0, $92 = 0, $94 = 0, $96 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$2 = 0, $__nf$2$lcssa = 0, $__nf$2$lcssa40 = 0, $__nf$3 = 0, $__ns$0 = 0, $__ns$0$lcssa = 0, $__ns$1 = 0, $__ns$1$lcssa = 0, $__ns$2 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50200) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50360) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 HEAP32[$__oe >> 2] = $__ob;
 $5 = HEAP8[$__nb >> 0] | 0;
 if ($5 << 24 >> 24 == 43 | $5 << 24 >> 24 == 45) {
  __THREW__ = 0;
  $9 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, $5 | 0) | 0;
  $10 = __THREW__;
  __THREW__ = 0;
  if ($10 & 1) label = 8; else {
   $13 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $13 + 4;
   HEAP32[$13 >> 2] = $9;
   $__nf$0 = $__nb + 1 | 0;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4 : do if ((label | 0) == 10) {
  $25 = $__ne;
  do if (($25 - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $31 = $__nf$0 + 1 | 0;
   $32 = HEAP8[$31 >> 0] | 0;
   if ($32 << 24 >> 24 == 88 | $32 << 24 >> 24 == 120) {
    __THREW__ = 0;
    $36 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, 48) | 0;
    $37 = __THREW__;
    __THREW__ = 0;
    if ($37 & 1) {
     label = 8;
     break L4;
    }
    $39 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $39 + 4;
    HEAP32[$39 >> 2] = $36;
    $41 = $__nf$0 + 2 | 0;
    __THREW__ = 0;
    $46 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$31 >> 0] | 0) | 0;
    $47 = __THREW__;
    __THREW__ = 0;
    if ($47 & 1) {
     label = 8;
     break L4;
    }
    $49 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $49 + 4;
    HEAP32[$49 >> 2] = $46;
    $__ns$0 = $41;
    while (1) {
     if ($__ns$0 >>> 0 >= $__ne >>> 0) {
      $__ns$0$lcssa = $__ns$0;
      label = 28;
      break;
     }
     $52 = HEAP8[$__ns$0 >> 0] | 0;
     __THREW__ = 0;
     $53 = invoke_i(2) | 0;
     $54 = __THREW__;
     __THREW__ = 0;
     if ($54 & 1) {
      label = 7;
      break;
     }
     __THREW__ = 0;
     $57 = invoke_iii(36, $52 << 24 >> 24 | 0, $53 | 0) | 0;
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) {
      label = 7;
      break;
     }
     if (!$57) {
      $__ns$0$lcssa = $__ns$0;
      label = 28;
      break;
     }
     $__ns$0 = $__ns$0 + 1 | 0;
    }
    if ((label | 0) == 7) {
     $21 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $21;
     $lpad$phi$index5 = tempRet0;
     break L4;
    } else if ((label | 0) == 28) {
     $__nf$1 = $41;
     $__ns$2 = $__ns$0$lcssa;
     break;
    }
   } else label = 11;
  } else label = 11; else label = 11; while (0);
  do if ((label | 0) == 11) {
   $__ns$1 = $__nf$0;
   while (1) {
    if ($__ns$1 >>> 0 >= $__ne >>> 0) {
     $__ns$1$lcssa = $__ns$1;
     label = 27;
     break;
    }
    $63 = HEAP8[$__ns$1 >> 0] | 0;
    __THREW__ = 0;
    $64 = invoke_i(2) | 0;
    $65 = __THREW__;
    __THREW__ = 0;
    if ($65 & 1) {
     label = 6;
     break;
    }
    __THREW__ = 0;
    $68 = invoke_iii(37, $63 << 24 >> 24 | 0, $64 | 0) | 0;
    $69 = __THREW__;
    __THREW__ = 0;
    if ($69 & 1) {
     label = 6;
     break;
    }
    if (!$68) {
     $__ns$1$lcssa = $__ns$1;
     label = 27;
     break;
    }
    $__ns$1 = $__ns$1 + 1 | 0;
   }
   if ((label | 0) == 6) {
    $19 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $19;
    $lpad$phi$index5 = tempRet0;
    break L4;
   } else if ((label | 0) == 27) {
    $__nf$1 = $__nf$0;
    $__ns$2 = $__ns$1$lcssa;
    break;
   }
  } while (0);
  $73 = HEAP8[$__grouping >> 0] | 0;
  if (!($73 & 1)) $80 = ($73 & 255) >>> 1; else $80 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!$80) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $__nf$1 | 0, $__ns$2 | 0, HEAP32[$__oe >> 2] | 0) | 0;
   $86 = __THREW__;
   __THREW__ = 0;
   if ($86 & 1) {
    label = 8;
    break;
   }
   $92 = (HEAP32[$__oe >> 2] | 0) + ($__ns$2 - $__nf$1 << 2) | 0;
   HEAP32[$__oe >> 2] = $92;
   $$pre$phiZ2D = $0;
   $191 = $92;
  } else {
   if (($__nf$1 | 0) != ($__ns$2 | 0)) {
    $$0$i$i = $__ns$2;
    $$01$i$i = $__nf$1;
    while (1) {
     $94 = $$0$i$i + -1 | 0;
     if ($$01$i$i >>> 0 >= $94 >>> 0) break;
     $96 = HEAP8[$$01$i$i >> 0] | 0;
     HEAP8[$$01$i$i >> 0] = HEAP8[$94 >> 0] | 0;
     HEAP8[$94 >> 0] = $96;
     $$0$i$i = $94;
     $$01$i$i = $$01$i$i + 1 | 0;
    }
   }
   __THREW__ = 0;
   $102 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
   $103 = __THREW__;
   __THREW__ = 0;
   if ($103 & 1) {
    label = 8;
    break;
   }
   $105 = $__grouping + 1 | 0;
   $106 = $__grouping + 4 | 0;
   $107 = $__grouping + 8 | 0;
   $__dc$0 = 0;
   $__dg$0 = 0;
   $__p$0 = $__nf$1;
   while (1) {
    if ($__p$0 >>> 0 >= $__ns$2 >>> 0) break;
    $111 = (HEAP8[$__grouping >> 0] & 1) == 0;
    if ((HEAP8[($111 ? $105 : HEAP32[$107 >> 2] | 0) + $__dg$0 >> 0] | 0) > 0) if (($__dc$0 | 0) == (HEAP8[($111 ? $105 : HEAP32[$107 >> 2] | 0) + $__dg$0 >> 0] | 0)) {
     $121 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $121 + 4;
     HEAP32[$121 >> 2] = $102;
     $123 = HEAP8[$__grouping >> 0] | 0;
     if (!($123 & 1)) $130 = ($123 & 255) >>> 1; else $130 = HEAP32[$106 >> 2] | 0;
     $__dc$1 = 0;
     $__dg$1 = ($__dg$0 >>> 0 < ($130 + -1 | 0) >>> 0 & 1) + $__dg$0 | 0;
    } else {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    } else {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    }
    __THREW__ = 0;
    $137 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$__p$0 >> 0] | 0) | 0;
    $138 = __THREW__;
    __THREW__ = 0;
    if ($138 & 1) {
     label = 5;
     break;
    }
    $140 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $140 + 4;
    HEAP32[$140 >> 2] = $137;
    $__dc$0 = $__dc$1 + 1 | 0;
    $__dg$0 = $__dg$1;
    $__p$0 = $__p$0 + 1 | 0;
   }
   if ((label | 0) == 5) {
    $17 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $17;
    $lpad$phi$index5 = tempRet0;
    break;
   }
   $147 = $__ob + ($__nf$1 - $__nb << 2) | 0;
   $148 = HEAP32[$__oe >> 2] | 0;
   if (($147 | 0) == ($148 | 0)) {
    $$pre$phiZ2D = $0;
    $191 = $147;
   } else {
    $$0$i$i7 = $148;
    $$01$i$i6 = $147;
    while (1) {
     $150 = $$0$i$i7 + -4 | 0;
     if ($$01$i$i6 >>> 0 >= $150 >>> 0) break;
     $152 = HEAP32[$$01$i$i6 >> 2] | 0;
     HEAP32[$$01$i$i6 >> 2] = HEAP32[$150 >> 2];
     HEAP32[$150 >> 2] = $152;
     $$0$i$i7 = $150;
     $$01$i$i6 = $$01$i$i6 + 4 | 0;
    }
    $$pre$phiZ2D = $0;
    $191 = $148;
   }
  }
  $192 = $191;
  $__nf$2 = $__ns$2;
  while (1) {
   if ($__nf$2 >>> 0 >= $__ne >>> 0) {
    $$lcssa = $192;
    $__nf$2$lcssa = $__nf$2;
    label = 63;
    break;
   }
   $156 = HEAP8[$__nf$2 >> 0] | 0;
   if ($156 << 24 >> 24 == 46) {
    $__nf$2$lcssa40 = $__nf$2;
    label = 59;
    break;
   }
   __THREW__ = 0;
   $170 = invoke_iii(HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 44 >> 2] | 0, $0 | 0, $156 | 0) | 0;
   $171 = __THREW__;
   __THREW__ = 0;
   if ($171 & 1) {
    label = 4;
    break;
   }
   $173 = HEAP32[$__oe >> 2] | 0;
   $174 = $173 + 4 | 0;
   HEAP32[$__oe >> 2] = $174;
   HEAP32[$173 >> 2] = $170;
   $192 = $174;
   $__nf$2 = $__nf$2 + 1 | 0;
  }
  if ((label | 0) == 4) {
   $15 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $15;
   $lpad$phi$index5 = tempRet0;
   break;
  } else if ((label | 0) == 59) {
   __THREW__ = 0;
   $161 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] | 0, $1 | 0) | 0;
   $162 = __THREW__;
   __THREW__ = 0;
   if ($162 & 1) {
    label = 8;
    break;
   }
   $164 = HEAP32[$__oe >> 2] | 0;
   $165 = $164 + 4 | 0;
   HEAP32[$__oe >> 2] = $165;
   HEAP32[$164 >> 2] = $161;
   $179 = $165;
   $__nf$3 = $__nf$2$lcssa40 + 1 | 0;
  } else if ((label | 0) == 63) {
   $179 = $$lcssa;
   $__nf$3 = $__nf$2$lcssa;
  }
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $__nf$3 | 0, $__ne | 0, $179 | 0) | 0;
  $180 = __THREW__;
  __THREW__ = 0;
  if ($180 & 1) label = 8; else {
   $185 = (HEAP32[$__oe >> 2] | 0) + ($25 - $__nf$3 << 2) | 0;
   HEAP32[$__oe >> 2] = $185;
   if (($__np | 0) == ($__ne | 0)) $storemerge = $185; else $storemerge = $__ob + ($__np - $__nb << 2) | 0;
   HEAP32[$__op >> 2] = $storemerge;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 8) {
  $23 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $23;
  $lpad$phi$index5 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i10 = 0, $$pre$i2$i$i = 0, $$pre$phi37Z2D = 0, $$pre$phi39Z2D = 0, $0 = 0, $100 = 0, $102 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $112 = 0, $113 = 0, $120 = 0, $126 = 0, $133 = 0, $139 = 0, $140 = 0, $142 = 0, $143 = 0, $144 = 0, $156 = 0, $157 = 0, $160 = 0, $161 = 0, $171 = 0, $172 = 0, $177 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $41 = 0, $42 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $57 = 0, $58 = 0, $6 = 0, $62 = 0, $64 = 0, $69 = 0, $71 = 0, $77 = 0, $78 = 0, $85 = 0, $86 = 0, $93 = 0, $94 = 0, $95 = 0, $97 = 0, $98 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__i$0$i$i5 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $vararg_buffer = sp;
 $__atoms = sp + 208 | 0;
 $__grouping = sp + 196 | 0;
 $0 = sp + 192 | 0;
 $__buf = sp + 180 | 0;
 $__a_end = sp + 176 | 0;
 $__g = sp + 16 | 0;
 $__g_end = sp + 8 | 0;
 $__dc = sp + 4 | 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__grouping + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 __THREW__ = 0;
 invoke_vii(47, $0 | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) {
  $95 = ___cxa_find_matching_catch() | 0;
  $$0 = $95;
  $$01 = tempRet0;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $0 | 0, 50208) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$5 >> 2] | 0) + 32 >> 2] | 0, $5 | 0, 48720, 48746 | 0, $__atoms | 0) | 0;
   $11 = __THREW__;
   __THREW__ = 0;
   if (!($11 & 1)) {
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    $__i$0$i$i5 = 0;
    while (1) {
     if (($__i$0$i$i5 | 0) == 3) break;
     HEAP32[$__buf + ($__i$0$i$i5 << 2) >> 2] = 0;
     $__i$0$i$i5 = $__i$0$i$i5 + 1 | 0;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $21 = 10; else $21 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $21 | 0, 0);
    $22 = __THREW__;
    __THREW__ = 0;
    L17 : do if ($22 & 1) label = 47; else {
     if (!(HEAP8[$__buf >> 0] & 1)) {
      $29 = $__buf + 1 | 0;
      $$pre$phi37Z2D = $29;
      $$pre$phi39Z2D = $__buf + 8 | 0;
      $30 = $29;
     } else {
      $27 = $__buf + 8 | 0;
      $$pre$phi37Z2D = $__buf + 1 | 0;
      $$pre$phi39Z2D = $27;
      $30 = HEAP32[$27 >> 2] | 0;
     }
     HEAP32[$__a_end >> 2] = $30;
     HEAP32[$__g_end >> 2] = $__g;
     HEAP32[$__dc >> 2] = 0;
     $31 = $__buf + 4 | 0;
     $$pre$i$i$i10 = HEAP32[$__b >> 2] | 0;
     $__a$0 = $30;
     L23 : while (1) {
      if (!$$pre$i$i$i10) $45 = 0; else if ((HEAP32[$$pre$i$i$i10 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i10 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $41 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i10 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i10 | 0) | 0;
       $42 = __THREW__;
       __THREW__ = 0;
       if ($42 & 1) {
        label = 46;
        break;
       }
       if (($41 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $45 = 0;
       } else $45 = $$pre$i$i$i10;
      } else $45 = $$pre$i$i$i10;
      $46 = ($45 | 0) == 0;
      $47 = HEAP32[$__e >> 2] | 0;
      do if (!$47) label = 28; else {
       if ((HEAP32[$47 + 12 >> 2] | 0) != (HEAP32[$47 + 16 >> 2] | 0)) if ($46) {
        $177 = $47;
        break;
       } else {
        $$lcssa = $45;
        $$pre$i2$i$i = $47;
        $__a$2 = $__a$0;
        break L23;
       }
       __THREW__ = 0;
       $57 = invoke_ii(HEAP32[(HEAP32[$47 >> 2] | 0) + 36 >> 2] | 0, $47 | 0) | 0;
       $58 = __THREW__;
       __THREW__ = 0;
       if ($58 & 1) {
        label = 46;
        break L23;
       }
       if (($57 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 28;
        break;
       } else if ($46) {
        $177 = $47;
        break;
       } else {
        $$lcssa = $45;
        $$pre$i2$i$i = $47;
        $__a$2 = $__a$0;
        break L23;
       }
      } while (0);
      if ((label | 0) == 28) {
       label = 0;
       if ($46) {
        $$lcssa = $45;
        $$pre$i2$i$i = 0;
        $__a$2 = $__a$0;
        break;
       } else $177 = 0;
      }
      $62 = HEAP8[$__buf >> 0] | 0;
      $64 = ($62 & 1) == 0;
      if ($64) $69 = ($62 & 255) >>> 1; else $69 = HEAP32[$31 >> 2] | 0;
      if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $69 | 0)) {
       if ($64) {
        $77 = ($62 & 255) >>> 1;
        $94 = ($62 & 255) >>> 1;
       } else {
        $71 = HEAP32[$31 >> 2] | 0;
        $77 = $71;
        $94 = $71;
       }
       __THREW__ = 0;
       invoke_viii(5, $__buf | 0, $77 << 1 | 0, 0);
       $78 = __THREW__;
       __THREW__ = 0;
       if ($78 & 1) {
        label = 46;
        break;
       }
       if (!(HEAP8[$__buf >> 0] & 1)) $85 = 10; else $85 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
       __THREW__ = 0;
       invoke_viii(5, $__buf | 0, $85 | 0, 0);
       $86 = __THREW__;
       __THREW__ = 0;
       if ($86 & 1) {
        label = 46;
        break;
       }
       if (!(HEAP8[$__buf >> 0] & 1)) $93 = $$pre$phi37Z2D; else $93 = HEAP32[$$pre$phi39Z2D >> 2] | 0;
       HEAP32[$__a_end >> 2] = $93 + $94;
       $__a$1 = $93;
      } else $__a$1 = $__a$0;
      $104 = $45 + 12 | 0;
      $105 = HEAP32[$104 >> 2] | 0;
      $106 = $45 + 16 | 0;
      if (($105 | 0) == (HEAP32[$106 >> 2] | 0)) {
       __THREW__ = 0;
       $112 = invoke_ii(HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] | 0, $45 | 0) | 0;
       $113 = __THREW__;
       __THREW__ = 0;
       if ($113 & 1) {
        label = 46;
        break;
       } else $$0$i$i = $112;
      } else $$0$i$i = HEAPU8[$105 >> 0] | 0;
      if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, 16, $__a$1, $__a_end, $__dc, 0, $__grouping, $__g, $__g_end, $__atoms) | 0) {
       $$lcssa = $45;
       $$pre$i2$i$i = $177;
       $__a$2 = $__a$1;
       break;
      }
      $120 = HEAP32[$104 >> 2] | 0;
      if (($120 | 0) == (HEAP32[$106 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$45 >> 2] | 0) + 40 >> 2] | 0, $45 | 0) | 0;
       $126 = __THREW__;
       __THREW__ = 0;
       if ($126 & 1) {
        label = 46;
        break;
       }
      } else HEAP32[$104 >> 2] = $120 + 1;
      $$pre$i$i$i10 = $45;
      $__a$0 = $__a$1;
     }
     if ((label | 0) == 46) {
      $100 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $100;
      $lpad$phi$index2 = tempRet0;
      break;
     }
     __THREW__ = 0;
     invoke_viii(5, $__buf | 0, (HEAP32[$__a_end >> 2] | 0) - $__a$2 | 0, 0);
     $133 = __THREW__;
     __THREW__ = 0;
     if ($133 & 1) label = 47; else {
      if (!(HEAP8[$__buf >> 0] & 1)) $142 = $$pre$phi37Z2D; else $142 = HEAP32[$$pre$phi39Z2D >> 2] | 0;
      __THREW__ = 0;
      $139 = invoke_i(2) | 0;
      $140 = __THREW__;
      __THREW__ = 0;
      if ($140 & 1) label = 47; else {
       __THREW__ = 0;
       HEAP32[$vararg_buffer >> 2] = $__v;
       $143 = invoke_iiiii(11, $142 | 0, $139 | 0, 48760, $vararg_buffer | 0) | 0;
       $144 = __THREW__;
       __THREW__ = 0;
       if ($144 & 1) label = 47; else {
        if (($143 | 0) != 1) HEAP32[$__err >> 2] = 4;
        if (!$$lcssa) $160 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $156 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
         $157 = __THREW__;
         __THREW__ = 0;
         if ($157 & 1) {
          label = 47;
          break;
         }
         if (($156 | 0) == -1) {
          HEAP32[$__b >> 2] = 0;
          $160 = 0;
         } else $160 = $$lcssa;
        } else $160 = $$lcssa;
        $161 = ($160 | 0) == 0;
        L89 : do if (!$$pre$i2$i$i) label = 75; else {
         do if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
          __THREW__ = 0;
          $171 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
          $172 = __THREW__;
          __THREW__ = 0;
          if ($172 & 1) {
           label = 47;
           break L17;
          }
          if (($171 | 0) != -1) break;
          HEAP32[$__e >> 2] = 0;
          label = 75;
          break L89;
         } while (0);
         if (!$161) label = 76;
        } while (0);
        if ((label | 0) == 75) if ($161) label = 76;
        if ((label | 0) == 76) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
        HEAP32[$agg$result >> 2] = $160;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
        STACKTOP = sp;
        return;
       }
      }
     }
    } while (0);
    if ((label | 0) == 47) {
     $102 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $102;
     $lpad$phi$index2 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    $$0 = $lpad$phi$index;
    $$01 = $lpad$phi$index2;
    break;
   }
  }
  $97 = ___cxa_find_matching_catch() | 0;
  $98 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  $$0 = $97;
  $$01 = $98;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0 | 0);
}

function __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root, $__z) {
 $__root = $__root | 0;
 $__z = $__z | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$lcssa = 0, $$1 = 0, $$2 = 0, $$2$be = 0, $$4 = 0, $$6 = 0, $$lcssa = 0, $$lcssa21 = 0, $$lcssa58 = 0, $$lcssa60 = 0, $$lcssa61 = 0, $$lcssa63 = 0, $$lcssa69 = 0, $$lcssa70 = 0, $$lcssa73 = 0, $$lcssa75 = 0, $$ph = 0, $$pre$phiZ2D = 0, $$pre27 = 0, $0 = 0, $10 = 0, $101 = 0, $103 = 0, $104 = 0, $105 = 0, $108 = 0, $11 = 0, $111 = 0, $116 = 0, $117 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $127 = 0, $130 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $140 = 0, $143 = 0, $148 = 0, $15 = 0, $151 = 0, $152 = 0, $157 = 0, $16 = 0, $164 = 0, $165 = 0, $170 = 0, $175 = 0, $178 = 0, $179 = 0, $18 = 0, $182 = 0, $185 = 0, $188 = 0, $19 = 0, $193 = 0, $194 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $204 = 0, $207 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $34 = 0, $35 = 0, $38 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $63 = 0, $67 = 0, $71 = 0, $77 = 0, $8 = 0, $84 = 0, $91 = 0, $97 = 0, $__w$0 = 0, $__w$1 = 0, $__w$1$be$in = 0, $__w$2 = 0, $__w$2$lcssa = 0, $__w$2$lcssa54 = 0, $__w$256 = 0, $__w$257 = 0, $__w$3 = 0, $__w$4 = 0, $__w$4$lcssa = 0, $__w$4$lcssa65 = 0, $__w$467 = 0, $__w$468 = 0, $__w$5 = 0, label = 0;
 $0 = HEAP32[$__z >> 2] | 0;
 do if (!$0) {
  $$ph = $__z;
  label = 7;
 } else {
  $3 = HEAP32[$__z + 4 >> 2] | 0;
  if (!$3) {
   $11 = $__z;
   $14 = $0;
   $211 = $__z;
   label = 9;
   break;
  }
  $$0$i$i = $3;
  while (1) {
   $5 = HEAP32[$$0$i$i >> 2] | 0;
   if (!$5) {
    $$0$i$i$lcssa = $$0$i$i;
    break;
   } else $$0$i$i = $5;
  }
  $$ph = $$0$i$i$lcssa;
  label = 7;
 } while (0);
 if ((label | 0) == 7) {
  $8 = HEAP32[$$ph + 4 >> 2] | 0;
  if (!$8) {
   $$pre$phiZ2D = $$ph + 8 | 0;
   $18 = $$ph;
   $19 = 0;
   $212 = 0;
   $35 = $$ph;
  } else {
   $11 = $$ph;
   $14 = $8;
   $211 = $$ph;
   label = 9;
  }
 }
 if ((label | 0) == 9) {
  $10 = $11 + 8 | 0;
  HEAP32[$14 + 8 >> 2] = HEAP32[$10 >> 2];
  $$pre$phiZ2D = $10;
  $18 = $11;
  $19 = $14;
  $212 = 1;
  $35 = $211;
 }
 $15 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) == ($18 | 0)) {
  HEAP32[$15 >> 2] = $19;
  if (($18 | 0) == ($__root | 0)) {
   $$0 = $19;
   $__w$0 = 0;
  } else {
   $$0 = $__root;
   $__w$0 = HEAP32[$15 + 4 >> 2] | 0;
  }
 } else {
  HEAP32[$15 + 4 >> 2] = $19;
  $$0 = $__root;
  $__w$0 = $16;
 }
 $24 = $18 + 12 | 0;
 $26 = (HEAP8[$24 >> 0] | 0) != 0;
 if (($18 | 0) == ($__z | 0)) $$1 = $$0; else {
  $28 = $__z + 8 | 0;
  $29 = HEAP32[$28 >> 2] | 0;
  HEAP32[$$pre$phiZ2D >> 2] = $29;
  if ((HEAP32[HEAP32[$28 >> 2] >> 2] | 0) == ($__z | 0)) HEAP32[$29 >> 2] = $18; else HEAP32[$29 + 4 >> 2] = $18;
  $34 = HEAP32[$__z >> 2] | 0;
  HEAP32[$35 >> 2] = $34;
  HEAP32[$34 + 8 >> 2] = $18;
  $38 = HEAP32[$__z + 4 >> 2] | 0;
  HEAP32[$18 + 4 >> 2] = $38;
  if ($38) HEAP32[$38 + 8 >> 2] = $18;
  HEAP8[$24 >> 0] = HEAP8[$__z + 12 >> 0] | 0;
  $$1 = ($$0 | 0) == ($__z | 0) ? $18 : $$0;
 }
 if (!($26 & ($$1 | 0) != 0)) return;
 if ($212) {
  HEAP8[$19 + 12 >> 0] = 1;
  return;
 }
 $$2 = $$1;
 $__w$1 = $__w$0;
 while (1) {
  $48 = HEAP32[$__w$1 + 8 >> 2] | 0;
  $51 = $__w$1 + 12 | 0;
  $53 = (HEAP8[$51 >> 0] | 0) != 0;
  if ((HEAP32[$48 >> 2] | 0) == ($__w$1 | 0)) {
   if ($53) {
    $$6 = $$2;
    $__w$4 = $__w$1;
   } else {
    HEAP8[$51 >> 0] = 1;
    HEAP8[$48 + 12 >> 0] = 0;
    $135 = HEAP32[$48 >> 2] | 0;
    $136 = $135 + 4 | 0;
    $137 = HEAP32[$136 >> 2] | 0;
    HEAP32[$48 >> 2] = $137;
    if ($137) HEAP32[$137 + 8 >> 2] = $48;
    $140 = $48 + 8 | 0;
    HEAP32[$135 + 8 >> 2] = HEAP32[$140 >> 2];
    $143 = HEAP32[$140 >> 2] | 0;
    if ((HEAP32[$143 >> 2] | 0) == ($48 | 0)) HEAP32[$143 >> 2] = $135; else HEAP32[$143 + 4 >> 2] = $135;
    HEAP32[$136 >> 2] = $48;
    HEAP32[$140 >> 2] = $135;
    $148 = HEAP32[$__w$1 + 4 >> 2] | 0;
    $$6 = ($$2 | 0) == ($148 | 0) ? $__w$1 : $$2;
    $__w$4 = HEAP32[$148 >> 2] | 0;
   }
   $151 = HEAP32[$__w$4 >> 2] | 0;
   $152 = ($151 | 0) == 0;
   if (!$152) if (!(HEAP8[$151 + 12 >> 0] | 0)) {
    $$lcssa69 = $151;
    $__w$4$lcssa = $__w$4;
    label = 72;
    break;
   }
   $157 = HEAP32[$__w$4 + 4 >> 2] | 0;
   if ($157) if (!(HEAP8[$157 + 12 >> 0] | 0)) {
    $$lcssa70 = $151;
    $$lcssa73 = $152;
    $__w$4$lcssa65 = $__w$4;
    label = 71;
    break;
   }
   HEAP8[$__w$4 + 12 >> 0] = 0;
   $164 = HEAP32[$__w$4 + 8 >> 2] | 0;
   $165 = $164 + 12 | 0;
   if (($164 | 0) == ($$6 | 0) | (HEAP8[$165 >> 0] | 0) == 0) {
    $$lcssa75 = $165;
    label = 68;
    break;
   }
   $170 = HEAP32[$164 + 8 >> 2] | 0;
   $$2$be = $$6;
   $__w$1$be$in = (HEAP32[$170 >> 2] | 0) == ($164 | 0) ? $170 + 4 | 0 : $170;
  } else {
   if ($53) {
    $$4 = $$2;
    $__w$2 = $__w$1;
   } else {
    HEAP8[$51 >> 0] = 1;
    HEAP8[$48 + 12 >> 0] = 0;
    $55 = $48 + 4 | 0;
    $56 = HEAP32[$55 >> 2] | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    HEAP32[$55 >> 2] = $57;
    if ($57) HEAP32[$57 + 8 >> 2] = $48;
    $60 = $48 + 8 | 0;
    HEAP32[$56 + 8 >> 2] = HEAP32[$60 >> 2];
    $63 = HEAP32[$60 >> 2] | 0;
    if ((HEAP32[$63 >> 2] | 0) == ($48 | 0)) HEAP32[$63 >> 2] = $56; else HEAP32[$63 + 4 >> 2] = $56;
    HEAP32[$56 >> 2] = $48;
    HEAP32[$60 >> 2] = $56;
    $67 = HEAP32[$__w$1 >> 2] | 0;
    $$4 = ($$2 | 0) == ($67 | 0) ? $__w$1 : $$2;
    $__w$2 = HEAP32[$67 + 4 >> 2] | 0;
   }
   $71 = HEAP32[$__w$2 >> 2] | 0;
   if ($71) if (!(HEAP8[$71 + 12 >> 0] | 0)) {
    $$lcssa = $__w$2;
    $$lcssa60 = $71;
    $__w$2$lcssa = $__w$2;
    label = 41;
    break;
   }
   $77 = HEAP32[$__w$2 + 4 >> 2] | 0;
   if ($77) if (!(HEAP8[$77 + 12 >> 0] | 0)) {
    $$lcssa58 = $__w$2;
    $$lcssa61 = $71;
    $$lcssa63 = $77;
    $__w$2$lcssa54 = $__w$2;
    label = 42;
    break;
   }
   HEAP8[$__w$2 + 12 >> 0] = 0;
   $84 = HEAP32[$__w$2 + 8 >> 2] | 0;
   if (($84 | 0) == ($$4 | 0)) {
    $$lcssa21 = $$4;
    label = 39;
    break;
   }
   if (!(HEAP8[$84 + 12 >> 0] | 0)) {
    $$lcssa21 = $84;
    label = 39;
    break;
   }
   $91 = HEAP32[$84 + 8 >> 2] | 0;
   $$2$be = $$4;
   $__w$1$be$in = (HEAP32[$91 >> 2] | 0) == ($84 | 0) ? $91 + 4 | 0 : $91;
  }
  $$2 = $$2$be;
  $__w$1 = HEAP32[$__w$1$be$in >> 2] | 0;
 }
 if ((label | 0) == 39) {
  HEAP8[$$lcssa21 + 12 >> 0] = 1;
  return;
 } else if ((label | 0) == 41) {
  $$pre27 = HEAP32[$__w$2$lcssa + 4 >> 2] | 0;
  if (!$$pre27) {
   $101 = $$lcssa60;
   $105 = $$lcssa;
   $__w$257 = $__w$2$lcssa;
   label = 44;
  } else {
   $213 = $$lcssa60;
   $214 = $$lcssa;
   $97 = $$pre27;
   $__w$256 = $__w$2$lcssa;
   label = 43;
  }
 } else if ((label | 0) == 42) {
  $213 = $$lcssa61;
  $214 = $$lcssa58;
  $97 = $$lcssa63;
  $__w$256 = $__w$2$lcssa54;
  label = 43;
 } else if ((label | 0) == 68) {
  HEAP8[$$lcssa75 >> 0] = 1;
  return;
 } else if ((label | 0) == 71) if ($$lcssa73) {
  $__w$468 = $__w$4$lcssa65;
  label = 74;
 } else {
  $175 = $$lcssa70;
  $__w$467 = $__w$4$lcssa65;
  label = 73;
 } else if ((label | 0) == 72) {
  $175 = $$lcssa69;
  $__w$467 = $__w$4$lcssa;
  label = 73;
 }
 if ((label | 0) == 43) if (!(HEAP8[$97 + 12 >> 0] | 0)) {
  $121 = $97;
  $__w$3 = $__w$256;
  label = 50;
 } else {
  $101 = $213;
  $105 = $214;
  $__w$257 = $__w$256;
  label = 44;
 } else if ((label | 0) == 73) if (!(HEAP8[$175 + 12 >> 0] | 0)) {
  $198 = $175;
  $__w$5 = $__w$467;
  label = 80;
 } else {
  $__w$468 = $__w$467;
  label = 74;
 }
 if ((label | 0) == 44) {
  HEAP8[$101 + 12 >> 0] = 1;
  HEAP8[$__w$257 + 12 >> 0] = 0;
  $103 = $101 + 4 | 0;
  $104 = HEAP32[$103 >> 2] | 0;
  HEAP32[$105 >> 2] = $104;
  if ($104) HEAP32[$104 + 8 >> 2] = $__w$257;
  $108 = $__w$257 + 8 | 0;
  HEAP32[$101 + 8 >> 2] = HEAP32[$108 >> 2];
  $111 = HEAP32[$108 >> 2] | 0;
  if ((HEAP32[$111 >> 2] | 0) == ($__w$257 | 0)) HEAP32[$111 >> 2] = $101; else HEAP32[$111 + 4 >> 2] = $101;
  HEAP32[$103 >> 2] = $__w$257;
  HEAP32[$108 >> 2] = $101;
  $121 = $__w$257;
  $__w$3 = $101;
  label = 50;
 } else if ((label | 0) == 74) {
  $178 = $__w$468 + 4 | 0;
  $179 = HEAP32[$178 >> 2] | 0;
  HEAP8[$179 + 12 >> 0] = 1;
  HEAP8[$__w$468 + 12 >> 0] = 0;
  $182 = HEAP32[$179 >> 2] | 0;
  HEAP32[$178 >> 2] = $182;
  if ($182) HEAP32[$182 + 8 >> 2] = $__w$468;
  $185 = $__w$468 + 8 | 0;
  HEAP32[$179 + 8 >> 2] = HEAP32[$185 >> 2];
  $188 = HEAP32[$185 >> 2] | 0;
  if ((HEAP32[$188 >> 2] | 0) == ($__w$468 | 0)) HEAP32[$188 >> 2] = $179; else HEAP32[$188 + 4 >> 2] = $179;
  HEAP32[$179 >> 2] = $__w$468;
  HEAP32[$185 >> 2] = $179;
  $198 = $__w$468;
  $__w$5 = $179;
  label = 80;
 }
 if ((label | 0) == 50) {
  $116 = HEAP32[$__w$3 + 8 >> 2] | 0;
  $117 = $116 + 12 | 0;
  HEAP8[$__w$3 + 12 >> 0] = HEAP8[$117 >> 0] | 0;
  HEAP8[$117 >> 0] = 1;
  HEAP8[$121 + 12 >> 0] = 1;
  $122 = $116 + 4 | 0;
  $123 = HEAP32[$122 >> 2] | 0;
  $124 = HEAP32[$123 >> 2] | 0;
  HEAP32[$122 >> 2] = $124;
  if ($124) HEAP32[$124 + 8 >> 2] = $116;
  $127 = $116 + 8 | 0;
  HEAP32[$123 + 8 >> 2] = HEAP32[$127 >> 2];
  $130 = HEAP32[$127 >> 2] | 0;
  if ((HEAP32[$130 >> 2] | 0) == ($116 | 0)) HEAP32[$130 >> 2] = $123; else HEAP32[$130 + 4 >> 2] = $123;
  HEAP32[$123 >> 2] = $116;
  HEAP32[$127 >> 2] = $123;
  return;
 } else if ((label | 0) == 80) {
  $193 = HEAP32[$__w$5 + 8 >> 2] | 0;
  $194 = $193 + 12 | 0;
  HEAP8[$__w$5 + 12 >> 0] = HEAP8[$194 >> 0] | 0;
  HEAP8[$194 >> 0] = 1;
  HEAP8[$198 + 12 >> 0] = 1;
  $199 = HEAP32[$193 >> 2] | 0;
  $200 = $199 + 4 | 0;
  $201 = HEAP32[$200 >> 2] | 0;
  HEAP32[$193 >> 2] = $201;
  if ($201) HEAP32[$201 + 8 >> 2] = $193;
  $204 = $193 + 8 | 0;
  HEAP32[$199 + 8 >> 2] = HEAP32[$204 >> 2];
  $207 = HEAP32[$204 >> 2] | 0;
  if ((HEAP32[$207 >> 2] | 0) == ($193 | 0)) HEAP32[$207 >> 2] = $199; else HEAP32[$207 + 4 >> 2] = $199;
  HEAP32[$200 >> 2] = $193;
  HEAP32[$204 >> 2] = $199;
  return;
 }
}

function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $__neg, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $107 = 0, $109 = 0, $11 = 0, $115 = 0, $12 = 0, $125 = 0, $127 = 0, $13 = 0, $149 = 0, $151 = 0, $16 = 0, $164 = 0, $166 = 0, $2 = 0, $26 = 0, $28 = 0, $3 = 0, $34 = 0, $4 = 0, $44 = 0, $46 = 0, $5 = 0, $6 = 0, $68 = 0, $7 = 0, $70 = 0, $8 = 0, $83 = 0, $85 = 0, $9 = 0, $93 = 0, $94 = 0, $97 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i13 = 0, $__i$0$i$i$i18 = 0, $__i$0$i$i$i23 = 0, $__i$0$i$i$i28 = 0, $__i$0$i$i$i33 = 0, $__i$0$i$i$i6 = 0, $__i$0$i$i$i9 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 108 | 0;
 $1 = sp + 96 | 0;
 $2 = sp + 92 | 0;
 $3 = sp + 80 | 0;
 $4 = sp + 68 | 0;
 $5 = sp + 56 | 0;
 $6 = sp + 52 | 0;
 $7 = sp + 40 | 0;
 $8 = sp + 36 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($__intl) {
  $12 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 49776) | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$13 + 44 >> 2] & 127]($0, $12);
   $16 = HEAP32[$0 >> 2] | 0;
   HEAP8[$__pat >> 0] = $16;
   HEAP8[$__pat + 1 >> 0] = $16 >> 8;
   HEAP8[$__pat + 2 >> 0] = $16 >> 16;
   HEAP8[$__pat + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 127]($1, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(76, $__sn | 0, 0);
   $26 = __THREW__;
   __THREW__ = 0;
   if ($26 & 1) {
    $28 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($28);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$1 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   $__i$0$i$i$i = 0;
   while (1) {
    if (($__i$0$i$i$i | 0) == 3) break;
    HEAP32[$1 + ($__i$0$i$i$i << 2) >> 2] = 0;
    $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$13 + 40 >> 2] & 127]($2, $12);
   $34 = HEAP32[$2 >> 2] | 0;
   HEAP8[$__pat >> 0] = $34;
   HEAP8[$__pat + 1 >> 0] = $34 >> 8;
   HEAP8[$__pat + 2 >> 0] = $34 >> 16;
   HEAP8[$__pat + 3 >> 0] = $34 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 127]($3, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(76, $__sn | 0, 0);
   $44 = __THREW__;
   __THREW__ = 0;
   if ($44 & 1) {
    $46 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($46);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   $__i$0$i$i$i6 = 0;
   while (1) {
    if (($__i$0$i$i$i6 | 0) == 3) break;
    HEAP32[$3 + ($__i$0$i$i$i6 << 2) >> 2] = 0;
    $__i$0$i$i$i6 = $__i$0$i$i$i6 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
  }
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 127]($4, $12);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$4 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  $__i$0$i$i$i9 = 0;
  while (1) {
   if (($__i$0$i$i$i9 | 0) == 3) break;
   HEAP32[$4 + ($__i$0$i$i$i9 << 2) >> 2] = 0;
   $__i$0$i$i$i9 = $__i$0$i$i$i9 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 127]($5, $12);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__sym | 0, 0);
  $83 = __THREW__;
  __THREW__ = 0;
  if ($83 & 1) {
   $85 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($85);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$5 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  $__i$0$i$i$i13 = 0;
  while (1) {
   if (($__i$0$i$i$i13 | 0) == 3) break;
   HEAP32[$5 + ($__i$0$i$i$i13 << 2) >> 2] = 0;
   $__i$0$i$i$i13 = $__i$0$i$i$i13 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $93 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 49712) | 0;
  $94 = HEAP32[$93 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$94 + 44 >> 2] & 127]($6, $93);
   $97 = HEAP32[$6 >> 2] | 0;
   HEAP8[$__pat >> 0] = $97;
   HEAP8[$__pat + 1 >> 0] = $97 >> 8;
   HEAP8[$__pat + 2 >> 0] = $97 >> 16;
   HEAP8[$__pat + 3 >> 0] = $97 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 32 >> 2] & 127]($7, $93);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(76, $__sn | 0, 0);
   $107 = __THREW__;
   __THREW__ = 0;
   if ($107 & 1) {
    $109 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($109);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$7 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   $__i$0$i$i$i18 = 0;
   while (1) {
    if (($__i$0$i$i$i18 | 0) == 3) break;
    HEAP32[$7 + ($__i$0$i$i$i18 << 2) >> 2] = 0;
    $__i$0$i$i$i18 = $__i$0$i$i$i18 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$94 + 40 >> 2] & 127]($8, $93);
   $115 = HEAP32[$8 >> 2] | 0;
   HEAP8[$__pat >> 0] = $115;
   HEAP8[$__pat + 1 >> 0] = $115 >> 8;
   HEAP8[$__pat + 2 >> 0] = $115 >> 16;
   HEAP8[$__pat + 3 >> 0] = $115 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 28 >> 2] & 127]($9, $93);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(76, $__sn | 0, 0);
   $125 = __THREW__;
   __THREW__ = 0;
   if ($125 & 1) {
    $127 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($127);
   };
   HEAP32[$__sn + 0 >> 2] = HEAP32[$9 + 0 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$9 + 8 >> 2];
   $__i$0$i$i$i23 = 0;
   while (1) {
    if (($__i$0$i$i$i23 | 0) == 3) break;
    HEAP32[$9 + ($__i$0$i$i$i23 << 2) >> 2] = 0;
    $__i$0$i$i$i23 = $__i$0$i$i$i23 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  }
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 12 >> 2] & 127]($93) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 16 >> 2] & 127]($93) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 20 >> 2] & 127]($10, $93);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $149 = __THREW__;
  __THREW__ = 0;
  if ($149 & 1) {
   $151 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($151);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$10 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  $__i$0$i$i$i28 = 0;
  while (1) {
   if (($__i$0$i$i$i28 | 0) == 3) break;
   HEAP32[$10 + ($__i$0$i$i$i28 << 2) >> 2] = 0;
   $__i$0$i$i$i28 = $__i$0$i$i$i28 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 24 >> 2] & 127]($11, $93);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__sym | 0, 0);
  $164 = __THREW__;
  __THREW__ = 0;
  if ($164 & 1) {
   $166 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($166);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$11 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $__i$0$i$i$i33 = 0;
  while (1) {
   if (($__i$0$i$i$i33 | 0) == 3) break;
   HEAP32[$11 + ($__i$0$i$i$i33 << 2) >> 2] = 0;
   $__i$0$i$i$i33 = $__i$0$i$i$i33 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 36 >> 2] & 127]($93) | 0;
 }
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$0$i$i = 0, $$0$i$i7 = 0, $$01$i$i = 0, $$01$i$i6 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $111 = 0, $121 = 0, $123 = 0, $13 = 0, $130 = 0, $137 = 0, $138 = 0, $140 = 0, $147 = 0, $148 = 0, $15 = 0, $150 = 0, $152 = 0, $156 = 0, $161 = 0, $162 = 0, $164 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $180 = 0, $185 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $31 = 0, $32 = 0, $36 = 0, $37 = 0, $39 = 0, $41 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $63 = 0, $64 = 0, $65 = 0, $68 = 0, $69 = 0, $73 = 0, $80 = 0, $86 = 0, $9 = 0, $94 = 0, $96 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$2 = 0, $__nf$2$lcssa = 0, $__nf$2$lcssa37 = 0, $__nf$3 = 0, $__ns$0 = 0, $__ns$0$lcssa = 0, $__ns$1 = 0, $__ns$1$lcssa = 0, $__ns$2 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50208) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50352) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 HEAP32[$__oe >> 2] = $__ob;
 $5 = HEAP8[$__nb >> 0] | 0;
 if ($5 << 24 >> 24 == 43 | $5 << 24 >> 24 == 45) {
  __THREW__ = 0;
  $9 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, $5 | 0) | 0;
  $10 = __THREW__;
  __THREW__ = 0;
  if ($10 & 1) label = 8; else {
   $13 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $13 + 1;
   HEAP8[$13 >> 0] = $9;
   $__nf$0 = $__nb + 1 | 0;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4 : do if ((label | 0) == 10) {
  $25 = $__ne;
  do if (($25 - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $31 = $__nf$0 + 1 | 0;
   $32 = HEAP8[$31 >> 0] | 0;
   if ($32 << 24 >> 24 == 88 | $32 << 24 >> 24 == 120) {
    __THREW__ = 0;
    $36 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, 48) | 0;
    $37 = __THREW__;
    __THREW__ = 0;
    if ($37 & 1) {
     label = 8;
     break L4;
    }
    $39 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $39 + 1;
    HEAP8[$39 >> 0] = $36;
    $41 = $__nf$0 + 2 | 0;
    __THREW__ = 0;
    $46 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$31 >> 0] | 0) | 0;
    $47 = __THREW__;
    __THREW__ = 0;
    if ($47 & 1) {
     label = 8;
     break L4;
    }
    $49 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $49 + 1;
    HEAP8[$49 >> 0] = $46;
    $__ns$0 = $41;
    while (1) {
     if ($__ns$0 >>> 0 >= $__ne >>> 0) {
      $__ns$0$lcssa = $__ns$0;
      label = 28;
      break;
     }
     $52 = HEAP8[$__ns$0 >> 0] | 0;
     __THREW__ = 0;
     $53 = invoke_i(2) | 0;
     $54 = __THREW__;
     __THREW__ = 0;
     if ($54 & 1) {
      label = 7;
      break;
     }
     __THREW__ = 0;
     $57 = invoke_iii(36, $52 << 24 >> 24 | 0, $53 | 0) | 0;
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) {
      label = 7;
      break;
     }
     if (!$57) {
      $__ns$0$lcssa = $__ns$0;
      label = 28;
      break;
     }
     $__ns$0 = $__ns$0 + 1 | 0;
    }
    if ((label | 0) == 7) {
     $21 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $21;
     $lpad$phi$index5 = tempRet0;
     break L4;
    } else if ((label | 0) == 28) {
     $__nf$1 = $41;
     $__ns$2 = $__ns$0$lcssa;
     break;
    }
   } else label = 11;
  } else label = 11; else label = 11; while (0);
  do if ((label | 0) == 11) {
   $__ns$1 = $__nf$0;
   while (1) {
    if ($__ns$1 >>> 0 >= $__ne >>> 0) {
     $__ns$1$lcssa = $__ns$1;
     label = 27;
     break;
    }
    $63 = HEAP8[$__ns$1 >> 0] | 0;
    __THREW__ = 0;
    $64 = invoke_i(2) | 0;
    $65 = __THREW__;
    __THREW__ = 0;
    if ($65 & 1) {
     label = 6;
     break;
    }
    __THREW__ = 0;
    $68 = invoke_iii(37, $63 << 24 >> 24 | 0, $64 | 0) | 0;
    $69 = __THREW__;
    __THREW__ = 0;
    if ($69 & 1) {
     label = 6;
     break;
    }
    if (!$68) {
     $__ns$1$lcssa = $__ns$1;
     label = 27;
     break;
    }
    $__ns$1 = $__ns$1 + 1 | 0;
   }
   if ((label | 0) == 6) {
    $19 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $19;
    $lpad$phi$index5 = tempRet0;
    break L4;
   } else if ((label | 0) == 27) {
    $__nf$1 = $__nf$0;
    $__ns$2 = $__ns$1$lcssa;
    break;
   }
  } while (0);
  $73 = HEAP8[$__grouping >> 0] | 0;
  if (!($73 & 1)) $80 = ($73 & 255) >>> 1; else $80 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!$80) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, $__nf$1 | 0, $__ns$2 | 0, HEAP32[$__oe >> 2] | 0) | 0;
   $86 = __THREW__;
   __THREW__ = 0;
   if ($86 & 1) {
    label = 8;
    break;
   }
   HEAP32[$__oe >> 2] = (HEAP32[$__oe >> 2] | 0) + ($__ns$2 - $__nf$1);
   $$pre$phiZ2D = $0;
  } else {
   if (($__nf$1 | 0) != ($__ns$2 | 0)) {
    $$0$i$i = $__ns$2;
    $$01$i$i = $__nf$1;
    while (1) {
     $94 = $$0$i$i + -1 | 0;
     if ($$01$i$i >>> 0 >= $94 >>> 0) break;
     $96 = HEAP8[$$01$i$i >> 0] | 0;
     HEAP8[$$01$i$i >> 0] = HEAP8[$94 >> 0] | 0;
     HEAP8[$94 >> 0] = $96;
     $$0$i$i = $94;
     $$01$i$i = $$01$i$i + 1 | 0;
    }
   }
   __THREW__ = 0;
   $102 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
   $103 = __THREW__;
   __THREW__ = 0;
   if ($103 & 1) {
    label = 8;
    break;
   }
   $105 = $__grouping + 1 | 0;
   $106 = $__grouping + 4 | 0;
   $107 = $__grouping + 8 | 0;
   $__dc$0 = 0;
   $__dg$0 = 0;
   $__p$0 = $__nf$1;
   while (1) {
    if ($__p$0 >>> 0 >= $__ns$2 >>> 0) break;
    $111 = (HEAP8[$__grouping >> 0] & 1) == 0;
    if ((HEAP8[($111 ? $105 : HEAP32[$107 >> 2] | 0) + $__dg$0 >> 0] | 0) > 0) if (($__dc$0 | 0) == (HEAP8[($111 ? $105 : HEAP32[$107 >> 2] | 0) + $__dg$0 >> 0] | 0)) {
     $121 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $121 + 1;
     HEAP8[$121 >> 0] = $102;
     $123 = HEAP8[$__grouping >> 0] | 0;
     if (!($123 & 1)) $130 = ($123 & 255) >>> 1; else $130 = HEAP32[$106 >> 2] | 0;
     $__dc$1 = 0;
     $__dg$1 = ($__dg$0 >>> 0 < ($130 + -1 | 0) >>> 0 & 1) + $__dg$0 | 0;
    } else {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    } else {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    }
    __THREW__ = 0;
    $137 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$__p$0 >> 0] | 0) | 0;
    $138 = __THREW__;
    __THREW__ = 0;
    if ($138 & 1) {
     label = 5;
     break;
    }
    $140 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $140 + 1;
    HEAP8[$140 >> 0] = $137;
    $__dc$0 = $__dc$1 + 1 | 0;
    $__dg$0 = $__dg$1;
    $__p$0 = $__p$0 + 1 | 0;
   }
   if ((label | 0) == 5) {
    $17 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $17;
    $lpad$phi$index5 = tempRet0;
    break;
   }
   $147 = $__ob + ($__nf$1 - $__nb) | 0;
   $148 = HEAP32[$__oe >> 2] | 0;
   if (($147 | 0) == ($148 | 0)) $$pre$phiZ2D = $0; else {
    $$0$i$i7 = $148;
    $$01$i$i6 = $147;
    while (1) {
     $150 = $$0$i$i7 + -1 | 0;
     if ($$01$i$i6 >>> 0 >= $150 >>> 0) break;
     $152 = HEAP8[$$01$i$i6 >> 0] | 0;
     HEAP8[$$01$i$i6 >> 0] = HEAP8[$150 >> 0] | 0;
     HEAP8[$150 >> 0] = $152;
     $$0$i$i7 = $150;
     $$01$i$i6 = $$01$i$i6 + 1 | 0;
    }
    $$pre$phiZ2D = $0;
   }
  }
  $__nf$2 = $__ns$2;
  while (1) {
   if ($__nf$2 >>> 0 >= $__ne >>> 0) {
    $__nf$2$lcssa = $__nf$2;
    label = 63;
    break;
   }
   $156 = HEAP8[$__nf$2 >> 0] | 0;
   if ($156 << 24 >> 24 == 46) {
    $__nf$2$lcssa37 = $__nf$2;
    label = 59;
    break;
   }
   __THREW__ = 0;
   $170 = invoke_iii(HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 28 >> 2] | 0, $0 | 0, $156 | 0) | 0;
   $171 = __THREW__;
   __THREW__ = 0;
   if ($171 & 1) {
    label = 4;
    break;
   }
   $173 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $173 + 1;
   HEAP8[$173 >> 0] = $170;
   $__nf$2 = $__nf$2 + 1 | 0;
  }
  if ((label | 0) == 4) {
   $15 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $15;
   $lpad$phi$index5 = tempRet0;
   break;
  } else if ((label | 0) == 59) {
   __THREW__ = 0;
   $161 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] | 0, $1 | 0) | 0;
   $162 = __THREW__;
   __THREW__ = 0;
   if ($162 & 1) {
    label = 8;
    break;
   }
   $164 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $164 + 1;
   HEAP8[$164 >> 0] = $161;
   $__nf$3 = $__nf$2$lcssa37 + 1 | 0;
  } else if ((label | 0) == 63) $__nf$3 = $__nf$2$lcssa;
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, $__nf$3 | 0, $__ne | 0, HEAP32[$__oe >> 2] | 0) | 0;
  $180 = __THREW__;
  __THREW__ = 0;
  if ($180 & 1) label = 8; else {
   $185 = (HEAP32[$__oe >> 2] | 0) + ($25 - $__nf$3) | 0;
   HEAP32[$__oe >> 2] = $185;
   if (($__np | 0) == ($__ne | 0)) $storemerge = $185; else $storemerge = $__ob + ($__np - $__nb) | 0;
   HEAP32[$__op >> 2] = $storemerge;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 8) {
  $23 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $23;
  $lpad$phi$index5 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$0$i$i1$i$i25 = 0, $$0$i$i16 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa68 = 0, $$lcssa69 = 0, $$lcssa69$lcssa = 0, $$lcssa69$lcssa77 = 0, $$lcssa70 = 0, $$lcssa71 = 0, $$lcssa72 = 0, $$lcssa73 = 0, $$lcssa75 = 0, $$lcssa76 = 0, $$pre = 0, $$pre$i$i$i21 = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i12 = 0, $$pre$i3$i$i1243 = 0, $$pre$i3$i$i1244 = 0, $0 = 0, $1 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $119 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $14 = 0, $140 = 0, $147 = 0, $157 = 0, $167 = 0, $170 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $2 = 0, $24 = 0, $27 = 0, $3 = 0, $37 = 0, $4 = 0, $46 = 0, $5 = 0, $52 = 0, $53 = 0, $62 = 0, $63 = 0, $66 = 0, $8 = 0, $80 = 0, $9 = 0, $90 = 0, $93 = 0, $__cmd$0 = 0, $__opt$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 20 | 0;
 $$byval_copy = sp + 16 | 0;
 $0 = sp + 12 | 0;
 $1 = sp + 8 | 0;
 $2 = sp + 4 | 0;
 $3 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $4 = invoke_iii(22, $0 | 0, 50200) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $37 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($37 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 HEAP32[$__err >> 2] = 0;
 $$0$ph = $__fmtb;
 $$pre = 0;
 L4 : while (1) {
  $8 = ($$0$ph | 0) != ($__fmte | 0);
  $9 = $$pre;
  while (1) {
   $11 = HEAP32[$__b >> 2] | 0;
   if (!($8 & ($9 | 0) == 0)) {
    $$lcssa = $11;
    label = 67;
    break L4;
   }
   if (!$11) {
    $127 = 0;
    $183 = 1;
   } else {
    $14 = HEAP32[$11 + 12 >> 2] | 0;
    if (($14 | 0) == (HEAP32[$11 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 127]($11) | 0; else $$0$i$i$i$i = HEAP32[$14 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $127 = 0;
     $183 = 1;
    } else {
     $127 = $11;
     $183 = 0;
    }
   }
   $24 = HEAP32[$__e >> 2] | 0;
   do if (!$24) label = 17; else {
    $27 = HEAP32[$24 + 12 >> 2] | 0;
    if (($27 | 0) == (HEAP32[$24 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 127]($24) | 0; else $$0$i$i1$i$i = HEAP32[$27 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($183) {
     $184 = $24;
     break;
    } else {
     $$lcssa68 = $127;
     label = 19;
     break L4;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($183) {
     $$lcssa68 = $127;
     label = 19;
     break L4;
    } else $184 = 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, HEAP32[$$0$ph >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
    $$lcssa69 = $127;
    $$lcssa72 = $184;
    label = 22;
    break;
   }
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, HEAP32[$$0$ph >> 2] | 0) | 0) {
    $$lcssa70 = $127;
    $$lcssa73 = $184;
    label = 32;
    break;
   }
   $126 = $127 + 12 | 0;
   $128 = HEAP32[$126 >> 2] | 0;
   $129 = $127 + 16 | 0;
   if (($128 | 0) == (HEAP32[$129 >> 2] | 0)) $$0$i$i16 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$127 >> 2] | 0) + 36 >> 2] & 127]($127) | 0; else $$0$i$i16 = HEAP32[$128 >> 2] | 0;
   $140 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($4, $$0$i$i16) | 0;
   if (($140 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($4, HEAP32[$$0$ph >> 2] | 0) | 0)) {
    $$lcssa71 = $127;
    $$lcssa75 = $126;
    $$lcssa76 = $129;
    label = 62;
    break;
   }
   HEAP32[$__err >> 2] = 4;
   $9 = 4;
  }
  if ((label | 0) == 22) {
   label = 0;
   $46 = $$0$ph + 4 | 0;
   if (($46 | 0) == ($__fmte | 0)) {
    $$lcssa69$lcssa = $$lcssa69;
    label = 23;
    break;
   }
   $52 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, HEAP32[$46 >> 2] | 0, 0) | 0;
   if ($52 << 24 >> 24 == 48 | $52 << 24 >> 24 == 69) {
    $53 = $$0$ph + 8 | 0;
    if (($53 | 0) == ($__fmte | 0)) {
     $$lcssa69$lcssa77 = $$lcssa69;
     label = 26;
     break;
    }
    $63 = $$lcssa69;
    $66 = $46;
    $__cmd$0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, HEAP32[$53 >> 2] | 0, 0) | 0;
    $__opt$0 = $52;
   } else {
    $63 = $$lcssa69;
    $66 = $$0$ph;
    $__cmd$0 = $52;
    $__opt$0 = 0;
   }
   $62 = HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[$2 >> 2] = $63;
   HEAP32[$3 >> 2] = $$lcssa72;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   FUNCTION_TABLE_viiiiiiiii[$62 & 3]($1, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $__cmd$0, $__opt$0);
   HEAP32[$__b >> 2] = HEAP32[$1 >> 2];
   $$0$ph$be = $66 + 8 | 0;
  } else if ((label | 0) == 32) {
   label = 0;
   $$0$pn = $$0$ph;
   while (1) {
    $$2 = $$0$pn + 4 | 0;
    if (($$2 | 0) == ($__fmte | 0)) {
     $$2$lcssa = $__fmte;
     break;
    }
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, HEAP32[$$2 >> 2] | 0) | 0) $$0$pn = $$2; else {
     $$2$lcssa = $$2;
     break;
    }
   }
   $$pre$i$i$i6 = $$lcssa70;
   $$pre$i3$i$i12 = $$lcssa73;
   $90 = $$lcssa73;
   L48 : while (1) {
    if (!$$pre$i$i$i6) {
     $103 = 1;
     $105 = 0;
    } else {
     $80 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
     if (($80 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) $$0$i$i$i$i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i6) | 0; else $$0$i$i$i$i4 = HEAP32[$80 >> 2] | 0;
     if (($$0$i$i$i$i4 | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $103 = 1;
      $105 = 0;
     } else {
      $103 = 0;
      $105 = $$pre$i$i$i6;
     }
    }
    do if (!$90) {
     $$pre$i3$i$i1244 = $$pre$i3$i$i12;
     label = 48;
    } else {
     $93 = HEAP32[$90 + 12 >> 2] | 0;
     if (($93 | 0) == (HEAP32[$90 + 16 >> 2] | 0)) $$0$i$i1$i$i10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$90 >> 2] | 0) + 36 >> 2] & 127]($90) | 0; else $$0$i$i1$i$i10 = HEAP32[$93 >> 2] | 0;
     if (($$0$i$i1$i$i10 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      $$pre$i3$i$i1244 = 0;
      label = 48;
      break;
     } else if ($103 ^ ($$pre$i3$i$i12 | 0) == 0) {
      $$pre$i3$i$i1243 = $$pre$i3$i$i12;
      $185 = $$pre$i3$i$i12;
      break;
     } else break L48;
    } while (0);
    if ((label | 0) == 48) {
     label = 0;
     if ($103) break; else {
      $$pre$i3$i$i1243 = $$pre$i3$i$i1244;
      $185 = 0;
     }
    }
    $104 = $105 + 12 | 0;
    $106 = HEAP32[$104 >> 2] | 0;
    $107 = $105 + 16 | 0;
    if (($106 | 0) == (HEAP32[$107 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$105 >> 2] | 0) + 36 >> 2] & 127]($105) | 0; else $$0$i$i = HEAP32[$106 >> 2] | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, $$0$i$i) | 0)) break;
    $119 = HEAP32[$104 >> 2] | 0;
    if (($119 | 0) == (HEAP32[$107 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$105 >> 2] | 0) + 40 >> 2] & 127]($105) | 0; else HEAP32[$104 >> 2] = $119 + 4;
    $$pre$i$i$i6 = $105;
    $$pre$i3$i$i12 = $$pre$i3$i$i1243;
    $90 = $185;
   }
   $$0$ph$be = $$2$lcssa;
  } else if ((label | 0) == 62) {
   label = 0;
   $147 = HEAP32[$$lcssa75 >> 2] | 0;
   if (($147 | 0) == (HEAP32[$$lcssa76 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa71 >> 2] | 0) + 40 >> 2] & 127]($$lcssa71) | 0; else HEAP32[$$lcssa75 >> 2] = $147 + 4;
   $$0$ph$be = $$0$ph + 4 | 0;
  }
  $$0$ph = $$0$ph$be;
  $$pre = HEAP32[$__err >> 2] | 0;
 }
 if ((label | 0) == 19) {
  HEAP32[$__err >> 2] = 4;
  $$pre$i$i$i21 = $$lcssa68;
 } else if ((label | 0) == 23) {
  HEAP32[$__err >> 2] = 4;
  $$pre$i$i$i21 = $$lcssa69$lcssa;
 } else if ((label | 0) == 26) {
  HEAP32[$__err >> 2] = 4;
  $$pre$i$i$i21 = $$lcssa69$lcssa77;
 } else if ((label | 0) == 67) $$pre$i$i$i21 = $$lcssa;
 if (!$$pre$i$i$i21) {
  $182 = 0;
  $186 = 1;
 } else {
  $157 = HEAP32[$$pre$i$i$i21 + 12 >> 2] | 0;
  if (($157 | 0) == (HEAP32[$$pre$i$i$i21 + 16 >> 2] | 0)) $$0$i$i$i$i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i21) | 0; else $$0$i$i$i$i19 = HEAP32[$157 >> 2] | 0;
  if (($$0$i$i$i$i19 | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $182 = 0;
   $186 = 1;
  } else {
   $182 = $$pre$i$i$i21;
   $186 = 0;
  }
 }
 $167 = HEAP32[$__e >> 2] | 0;
 do if (!$167) label = 80; else {
  $170 = HEAP32[$167 + 12 >> 2] | 0;
  if (($170 | 0) == (HEAP32[$167 + 16 >> 2] | 0)) $$0$i$i1$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$167 >> 2] | 0) + 36 >> 2] & 127]($167) | 0; else $$0$i$i1$i$i25 = HEAP32[$170 >> 2] | 0;
  if (($$0$i$i1$i$i25 | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 80;
   break;
  } else if ($186) break; else {
   label = 82;
   break;
  }
 } while (0);
 if ((label | 0) == 80) if ($186) label = 82;
 if ((label | 0) == 82) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 HEAP32[$agg$result >> 2] = $182;
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd) {
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__psn = $__psn | 0;
 $__nsn = $__nsn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $106 = 0, $108 = 0, $122 = 0, $124 = 0, $14 = 0, $146 = 0, $148 = 0, $162 = 0, $164 = 0, $2 = 0, $25 = 0, $27 = 0, $3 = 0, $4 = 0, $41 = 0, $43 = 0, $5 = 0, $6 = 0, $65 = 0, $67 = 0, $7 = 0, $8 = 0, $81 = 0, $83 = 0, $9 = 0, $91 = 0, $95 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i14 = 0, $__i$0$i$i$i19 = 0, $__i$0$i$i$i24 = 0, $__i$0$i$i$i29 = 0, $__i$0$i$i$i34 = 0, $__i$0$i$i$i4 = 0, $__i$0$i$i$i9 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 100 | 0;
 $1 = sp + 88 | 0;
 $2 = sp + 76 | 0;
 $3 = sp + 64 | 0;
 $4 = sp + 52 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if ($__intl) {
  $10 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 49648) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 44 >> 2] & 127]($0, $10);
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP8[$__pat >> 0] = $14;
  HEAP8[$__pat + 1 >> 0] = $14 >> 8;
  HEAP8[$__pat + 2 >> 0] = $14 >> 16;
  HEAP8[$__pat + 3 >> 0] = $14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 32 >> 2] & 127]($1, $10);
  if (!(HEAP8[$__nsn >> 0] & 1)) {
   HEAP8[$__nsn + 1 >> 0] = 0;
   HEAP8[$__nsn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__nsn + 8 >> 2] >> 0] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__nsn | 0, 0);
  $25 = __THREW__;
  __THREW__ = 0;
  if ($25 & 1) {
   $27 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($27);
  };
  HEAP32[$__nsn + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  $__i$0$i$i$i = 0;
  while (1) {
   if (($__i$0$i$i$i | 0) == 3) break;
   HEAP32[$1 + ($__i$0$i$i$i << 2) >> 2] = 0;
   $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 127]($2, $10);
  if (!(HEAP8[$__psn >> 0] & 1)) {
   HEAP8[$__psn + 1 >> 0] = 0;
   HEAP8[$__psn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__psn + 8 >> 2] >> 0] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__psn | 0, 0);
  $41 = __THREW__;
  __THREW__ = 0;
  if ($41 & 1) {
   $43 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($43);
  };
  HEAP32[$__psn + 0 >> 2] = HEAP32[$2 + 0 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  $__i$0$i$i$i4 = 0;
  while (1) {
   if (($__i$0$i$i$i4 | 0) == 3) break;
   HEAP32[$2 + ($__i$0$i$i$i4 << 2) >> 2] = 0;
   $__i$0$i$i$i4 = $__i$0$i$i$i4 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 127]($3, $10);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $65 = __THREW__;
  __THREW__ = 0;
  if ($65 & 1) {
   $67 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($67);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  $__i$0$i$i$i9 = 0;
  while (1) {
   if (($__i$0$i$i$i9 | 0) == 3) break;
   HEAP32[$3 + ($__i$0$i$i$i9 << 2) >> 2] = 0;
   $__i$0$i$i$i9 = $__i$0$i$i$i9 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 127]($4, $10);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $81 = __THREW__;
  __THREW__ = 0;
  if ($81 & 1) {
   $83 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($83);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$4 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  $__i$0$i$i$i14 = 0;
  while (1) {
   if (($__i$0$i$i$i14 | 0) == 3) break;
   HEAP32[$4 + ($__i$0$i$i$i14 << 2) >> 2] = 0;
   $__i$0$i$i$i14 = $__i$0$i$i$i14 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 127]($10) | 0;
 } else {
  $91 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 49584) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 44 >> 2] & 127]($5, $91);
  $95 = HEAP32[$5 >> 2] | 0;
  HEAP8[$__pat >> 0] = $95;
  HEAP8[$__pat + 1 >> 0] = $95 >> 8;
  HEAP8[$__pat + 2 >> 0] = $95 >> 16;
  HEAP8[$__pat + 3 >> 0] = $95 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 32 >> 2] & 127]($6, $91);
  if (!(HEAP8[$__nsn >> 0] & 1)) {
   HEAP8[$__nsn + 1 >> 0] = 0;
   HEAP8[$__nsn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__nsn + 8 >> 2] >> 0] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__nsn | 0, 0);
  $106 = __THREW__;
  __THREW__ = 0;
  if ($106 & 1) {
   $108 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($108);
  };
  HEAP32[$__nsn + 0 >> 2] = HEAP32[$6 + 0 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  $__i$0$i$i$i19 = 0;
  while (1) {
   if (($__i$0$i$i$i19 | 0) == 3) break;
   HEAP32[$6 + ($__i$0$i$i$i19 << 2) >> 2] = 0;
   $__i$0$i$i$i19 = $__i$0$i$i$i19 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 28 >> 2] & 127]($7, $91);
  if (!(HEAP8[$__psn >> 0] & 1)) {
   HEAP8[$__psn + 1 >> 0] = 0;
   HEAP8[$__psn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__psn + 8 >> 2] >> 0] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__psn | 0, 0);
  $122 = __THREW__;
  __THREW__ = 0;
  if ($122 & 1) {
   $124 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($124);
  };
  HEAP32[$__psn + 0 >> 2] = HEAP32[$7 + 0 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  $__i$0$i$i$i24 = 0;
  while (1) {
   if (($__i$0$i$i$i24 | 0) == 3) break;
   HEAP32[$7 + ($__i$0$i$i$i24 << 2) >> 2] = 0;
   $__i$0$i$i$i24 = $__i$0$i$i$i24 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 12 >> 2] & 127]($91) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 16 >> 2] & 127]($91) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 20 >> 2] & 127]($8, $91);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $146 = __THREW__;
  __THREW__ = 0;
  if ($146 & 1) {
   $148 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($148);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$8 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$8 + 8 >> 2];
  $__i$0$i$i$i29 = 0;
  while (1) {
   if (($__i$0$i$i$i29 | 0) == 3) break;
   HEAP32[$8 + ($__i$0$i$i$i29 << 2) >> 2] = 0;
   $__i$0$i$i$i29 = $__i$0$i$i$i29 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 24 >> 2] & 127]($9, $91);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $162 = __THREW__;
  __THREW__ = 0;
  if ($162 & 1) {
   $164 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($164);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$9 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$9 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$9 + 8 >> 2];
  $__i$0$i$i$i34 = 0;
  while (1) {
   if (($__i$0$i$i$i34 | 0) == 3) break;
   HEAP32[$9 + ($__i$0$i$i$i34 << 2) >> 2] = 0;
   $__i$0$i$i$i34 = $__i$0$i$i$i34 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 36 >> 2] & 127]($91) | 0;
 }
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $$0$i$i = 0, $$0$i$i25 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa65$lcssa = 0, $$lcssa65$lcssa74 = 0, $$lcssa66 = 0, $$lcssa67 = 0, $$lcssa68 = 0, $$lcssa69 = 0, $$lcssa71 = 0, $$lcssa72 = 0, $$lcssa73 = 0, $$pre = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i7 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i2038 = 0, $$pre$i2$i$i2039 = 0, $0 = 0, $1 = 0, $10 = 0, $108 = 0, $109 = 0, $110 = 0, $12 = 0, $126 = 0, $133 = 0, $134 = 0, $135 = 0, $148 = 0, $155 = 0, $174 = 0, $175 = 0, $176 = 0, $190 = 0, $191 = 0, $2 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $38 = 0, $4 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $63 = 0, $64 = 0, $67 = 0, $68 = 0, $70 = 0, $76 = 0, $8 = 0, $9 = 0, $93 = 0, $94 = 0, $95 = 0, $__cmd$0 = 0, $__opt$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 20 | 0;
 $$byval_copy = sp + 16 | 0;
 $0 = sp + 12 | 0;
 $1 = sp + 8 | 0;
 $2 = sp + 4 | 0;
 $3 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $4 = invoke_iii(22, $0 | 0, 50208) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $38 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($38 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 HEAP32[$__err >> 2] = 0;
 $8 = $4 + 8 | 0;
 $$0$ph = $__fmtb;
 $$pre = 0;
 L4 : while (1) {
  $9 = ($$0$ph | 0) != ($__fmte | 0);
  $10 = $$pre;
  while (1) {
   $12 = HEAP32[$__b >> 2] | 0;
   if (!($9 & ($10 | 0) == 0)) {
    $$lcssa = $12;
    label = 63;
    break L4;
   }
   if (!$12) $24 = 0; else if ((HEAP32[$12 + 12 >> 2] | 0) == (HEAP32[$12 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $24 = 0;
   } else $24 = $12; else $24 = $12;
   $25 = ($24 | 0) == 0;
   $26 = HEAP32[$__e >> 2] | 0;
   do if (!$26) label = 14; else {
    if ((HEAP32[$26 + 12 >> 2] | 0) == (HEAP32[$26 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 127]($26) | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 14;
     break;
    }
    if ($25) $190 = $26; else {
     $$lcssa64 = $24;
     label = 15;
     break L4;
    }
   } while (0);
   if ((label | 0) == 14) {
    label = 0;
    if ($25) {
     $$lcssa64 = $24;
     label = 15;
     break L4;
    } else $190 = 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, HEAP8[$$0$ph >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
    $$lcssa65 = $24;
    $$lcssa68 = $190;
    label = 18;
    break;
   }
   $68 = HEAP8[$$0$ph >> 0] | 0;
   if ($68 << 24 >> 24 > -1) {
    $70 = HEAP32[$8 >> 2] | 0;
    if (HEAP16[$70 + ($68 << 24 >> 24 << 1) >> 1] & 8192) {
     $$lcssa66 = $24;
     $$lcssa69 = $190;
     $$lcssa71 = $70;
     label = 29;
     break;
    }
   }
   $133 = $24 + 12 | 0;
   $134 = HEAP32[$133 >> 2] | 0;
   $135 = $24 + 16 | 0;
   if (($134 | 0) == (HEAP32[$135 >> 2] | 0)) $$0$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 127]($24) | 0; else $$0$i$i25 = HEAPU8[$134 >> 0] | 0;
   $148 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, $$0$i$i25 & 255) | 0;
   if ($148 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, HEAP8[$$0$ph >> 0] | 0) | 0) << 24 >> 24) {
    $$lcssa67 = $24;
    $$lcssa72 = $133;
    $$lcssa73 = $135;
    label = 58;
    break;
   }
   HEAP32[$__err >> 2] = 4;
   $10 = 4;
  }
  if ((label | 0) == 18) {
   label = 0;
   $47 = $$0$ph + 1 | 0;
   if (($47 | 0) == ($__fmte | 0)) {
    $$lcssa65$lcssa = $$lcssa65;
    label = 19;
    break;
   }
   $53 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, HEAP8[$47 >> 0] | 0, 0) | 0;
   if ($53 << 24 >> 24 == 48 | $53 << 24 >> 24 == 69) {
    $54 = $$0$ph + 2 | 0;
    if (($54 | 0) == ($__fmte | 0)) {
     $$lcssa65$lcssa74 = $$lcssa65;
     label = 22;
     break;
    }
    $64 = $$lcssa65;
    $67 = $47;
    $__cmd$0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, HEAP8[$54 >> 0] | 0, 0) | 0;
    $__opt$0 = $53;
   } else {
    $64 = $$lcssa65;
    $67 = $$0$ph;
    $__cmd$0 = $53;
    $__opt$0 = 0;
   }
   $63 = HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[$2 >> 2] = $64;
   HEAP32[$3 >> 2] = $$lcssa68;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   FUNCTION_TABLE_viiiiiiiii[$63 & 3]($1, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $__cmd$0, $__opt$0);
   HEAP32[$__b >> 2] = HEAP32[$1 >> 2];
   $$0$ph$be = $67 + 2 | 0;
  } else if ((label | 0) == 29) {
   label = 0;
   $$0$pn = $$0$ph;
   while (1) {
    $$2 = $$0$pn + 1 | 0;
    if (($$2 | 0) == ($__fmte | 0)) {
     $$2$lcssa = $__fmte;
     break;
    }
    $76 = HEAP8[$$2 >> 0] | 0;
    if ($76 << 24 >> 24 <= -1) {
     $$2$lcssa = $$2;
     break;
    }
    if (!(HEAP16[$$lcssa71 + ($76 << 24 >> 24 << 1) >> 1] & 8192)) {
     $$2$lcssa = $$2;
     break;
    } else $$0$pn = $$2;
   }
   $$pre$i$i$i16 = $$lcssa66;
   $$pre$i2$i$i20 = $$lcssa69;
   $95 = $$lcssa69;
   L45 : while (1) {
    if (!$$pre$i$i$i16) $93 = 0; else if ((HEAP32[$$pre$i$i$i16 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i16 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i16 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i16) | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $93 = 0;
    } else $93 = $$pre$i$i$i16; else $93 = $$pre$i$i$i16;
    $94 = ($93 | 0) == 0;
    do if (!$95) {
     $$pre$i2$i$i2039 = $$pre$i2$i$i20;
     label = 43;
    } else {
     if ((HEAP32[$95 + 12 >> 2] | 0) != (HEAP32[$95 + 16 >> 2] | 0)) if ($94) {
      $$pre$i2$i$i2038 = $$pre$i2$i$i20;
      $191 = $95;
      break;
     } else break L45;
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$95 >> 2] | 0) + 36 >> 2] & 127]($95) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      $$pre$i2$i$i2039 = 0;
      label = 43;
      break;
     } else if ($94 ^ ($$pre$i2$i$i20 | 0) == 0) {
      $$pre$i2$i$i2038 = $$pre$i2$i$i20;
      $191 = $$pre$i2$i$i20;
      break;
     } else break L45;
    } while (0);
    if ((label | 0) == 43) {
     label = 0;
     if ($94) break; else {
      $$pre$i2$i$i2038 = $$pre$i2$i$i2039;
      $191 = 0;
     }
    }
    $108 = $93 + 12 | 0;
    $109 = HEAP32[$108 >> 2] | 0;
    $110 = $93 + 16 | 0;
    if (($109 | 0) == (HEAP32[$110 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 36 >> 2] & 127]($93) | 0; else $$0$i$i = HEAPU8[$109 >> 0] | 0;
    if (($$0$i$i & 255) << 24 >> 24 <= -1) break;
    if (!(HEAP16[(HEAP32[$8 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) break;
    $126 = HEAP32[$108 >> 2] | 0;
    if (($126 | 0) == (HEAP32[$110 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 40 >> 2] & 127]($93) | 0; else HEAP32[$108 >> 2] = $126 + 1;
    $$pre$i$i$i16 = $93;
    $$pre$i2$i$i20 = $$pre$i2$i$i2038;
    $95 = $191;
   }
   $$0$ph$be = $$2$lcssa;
  } else if ((label | 0) == 58) {
   label = 0;
   $155 = HEAP32[$$lcssa72 >> 2] | 0;
   if (($155 | 0) == (HEAP32[$$lcssa73 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa67 >> 2] | 0) + 40 >> 2] & 127]($$lcssa67) | 0; else HEAP32[$$lcssa72 >> 2] = $155 + 1;
   $$0$ph$be = $$0$ph + 1 | 0;
  }
  $$0$ph = $$0$ph$be;
  $$pre = HEAP32[$__err >> 2] | 0;
 }
 if ((label | 0) == 15) {
  HEAP32[$__err >> 2] = 4;
  $$pre$i$i$i7 = $$lcssa64;
 } else if ((label | 0) == 19) {
  HEAP32[$__err >> 2] = 4;
  $$pre$i$i$i7 = $$lcssa65$lcssa;
 } else if ((label | 0) == 22) {
  HEAP32[$__err >> 2] = 4;
  $$pre$i$i$i7 = $$lcssa65$lcssa74;
 } else if ((label | 0) == 63) $$pre$i$i$i7 = $$lcssa;
 if (!$$pre$i$i$i7) $174 = 0; else if ((HEAP32[$$pre$i$i$i7 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i7 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i7 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i7) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $174 = 0;
 } else $174 = $$pre$i$i$i7; else $174 = $$pre$i$i$i7;
 $175 = ($174 | 0) == 0;
 $176 = HEAP32[$__e >> 2] | 0;
 do if (!$176) label = 73; else {
  if ((HEAP32[$176 + 12 >> 2] | 0) == (HEAP32[$176 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$176 >> 2] | 0) + 36 >> 2] & 127]($176) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 73;
   break;
  }
  if (!$175) label = 74;
 } while (0);
 if ((label | 0) == 73) if ($175) label = 74;
 if ((label | 0) == 74) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 HEAP32[$agg$result >> 2] = $174;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $122 = 0, $127 = 0, $13 = 0, $130 = 0.0, $131 = 0, $136 = 0, $143 = 0, $144 = 0, $15 = 0, $150 = 0, $157 = 0, $158 = 0, $16 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($8 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $15 = $__buf + 1 | 0;
   $$pre$phi34Z2D = $15;
   $$pre$phi36Z2D = $__buf + 8 | 0;
   $16 = $15;
  } else {
   $13 = $__buf + 8 | 0;
   $$pre$phi34Z2D = $__buf + 1 | 0;
   $$pre$phi36Z2D = $13;
   $16 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP32[$__decimal_point >> 2] | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L14 : while (1) {
   if (!$$pre$i$i$i6) {
    $165 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i6 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i4 = $29;
    } else $$0$i$i$i$i4 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i4 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $165 = 1;
     $88 = 0;
    } else {
     $165 = 0;
     $88 = $$pre$i$i$i6;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i10 = $44;
    } else $$0$i$i1$i$i10 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i10 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($165) {
     $166 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($165) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $166 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$17 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi34Z2D; else $81 = HEAP32[$$pre$phi36Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $166;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i6 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($118 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $122 = HEAP32[$__g_end >> 2] | 0;
   if (($122 - $__g | 0) < 160) {
    $127 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $122 + 4;
    HEAP32[$122 >> 2] = $127;
   }
  }
  __THREW__ = 0;
  $130 = +invoke_diii(1, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $131 = __THREW__;
  __THREW__ = 0;
  if ($131 & 1) label = 40; else {
   HEAPF32[$__v >> 2] = $130;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $164 = 0;
    $167 = 1;
   } else {
    $136 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($136 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $143 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $144 = __THREW__;
     __THREW__ = 0;
     if ($144 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $143;
    } else $$0$i$i$i$i = HEAP32[$136 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $164 = 0;
     $167 = 1;
    } else {
     $164 = $$lcssa;
     $167 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $150 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($150 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $157;
    } else $$0$i$i1$i$i = HEAP32[$150 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($167) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($167) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $164;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $122 = 0, $127 = 0, $13 = 0, $130 = 0.0, $131 = 0, $136 = 0, $143 = 0, $144 = 0, $15 = 0, $150 = 0, $157 = 0, $158 = 0, $16 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($8 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $15 = $__buf + 1 | 0;
   $$pre$phi34Z2D = $15;
   $$pre$phi36Z2D = $__buf + 8 | 0;
   $16 = $15;
  } else {
   $13 = $__buf + 8 | 0;
   $$pre$phi34Z2D = $__buf + 1 | 0;
   $$pre$phi36Z2D = $13;
   $16 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP32[$__decimal_point >> 2] | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L14 : while (1) {
   if (!$$pre$i$i$i6) {
    $165 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i6 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i4 = $29;
    } else $$0$i$i$i$i4 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i4 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $165 = 1;
     $88 = 0;
    } else {
     $165 = 0;
     $88 = $$pre$i$i$i6;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i10 = $44;
    } else $$0$i$i1$i$i10 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i10 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($165) {
     $166 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($165) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $166 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$17 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi34Z2D; else $81 = HEAP32[$$pre$phi36Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $166;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i6 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($118 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $122 = HEAP32[$__g_end >> 2] | 0;
   if (($122 - $__g | 0) < 160) {
    $127 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $122 + 4;
    HEAP32[$122 >> 2] = $127;
   }
  }
  __THREW__ = 0;
  $130 = +invoke_diii(3, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $131 = __THREW__;
  __THREW__ = 0;
  if ($131 & 1) label = 40; else {
   HEAPF64[$__v >> 3] = $130;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $164 = 0;
    $167 = 1;
   } else {
    $136 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($136 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $143 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $144 = __THREW__;
     __THREW__ = 0;
     if ($144 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $143;
    } else $$0$i$i$i$i = HEAP32[$136 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $164 = 0;
     $167 = 1;
    } else {
     $164 = $$lcssa;
     $167 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $150 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($150 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $157;
    } else $$0$i$i1$i$i = HEAP32[$150 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($167) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($167) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $164;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $122 = 0, $127 = 0, $13 = 0, $130 = 0.0, $131 = 0, $136 = 0, $143 = 0, $144 = 0, $15 = 0, $150 = 0, $157 = 0, $158 = 0, $16 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($8 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $15 = $__buf + 1 | 0;
   $$pre$phi34Z2D = $15;
   $$pre$phi36Z2D = $__buf + 8 | 0;
   $16 = $15;
  } else {
   $13 = $__buf + 8 | 0;
   $$pre$phi34Z2D = $__buf + 1 | 0;
   $$pre$phi36Z2D = $13;
   $16 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP32[$__decimal_point >> 2] | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L14 : while (1) {
   if (!$$pre$i$i$i6) {
    $165 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i6 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i4 = $29;
    } else $$0$i$i$i$i4 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i4 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $165 = 1;
     $88 = 0;
    } else {
     $165 = 0;
     $88 = $$pre$i$i$i6;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i10 = $44;
    } else $$0$i$i1$i$i10 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i10 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($165) {
     $166 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($165) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $166 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$17 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi34Z2D; else $81 = HEAP32[$$pre$phi36Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $166;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i6 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($118 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $122 = HEAP32[$__g_end >> 2] | 0;
   if (($122 - $__g | 0) < 160) {
    $127 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $122 + 4;
    HEAP32[$122 >> 2] = $127;
   }
  }
  __THREW__ = 0;
  $130 = +invoke_diii(2, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $131 = __THREW__;
  __THREW__ = 0;
  if ($131 & 1) label = 40; else {
   HEAPF64[$__v >> 3] = $130;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $164 = 0;
    $167 = 1;
   } else {
    $136 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($136 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $143 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $144 = __THREW__;
     __THREW__ = 0;
     if ($144 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $143;
    } else $$0$i$i$i$i = HEAP32[$136 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $164 = 0;
     $167 = 1;
    } else {
     $164 = $$lcssa;
     $167 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $150 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($150 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $157;
    } else $$0$i$i1$i$i = HEAP32[$150 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($167) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($167) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $164;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd) {
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__psn = $__psn | 0;
 $__nsn = $__nsn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $102 = 0, $104 = 0, $117 = 0, $119 = 0, $14 = 0, $141 = 0, $143 = 0, $156 = 0, $158 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $39 = 0, $4 = 0, $41 = 0, $5 = 0, $6 = 0, $63 = 0, $65 = 0, $7 = 0, $78 = 0, $8 = 0, $80 = 0, $88 = 0, $9 = 0, $92 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i11 = 0, $__i$0$i$i$i16 = 0, $__i$0$i$i$i21 = 0, $__i$0$i$i$i26 = 0, $__i$0$i$i$i31 = 0, $__i$0$i$i$i4 = 0, $__i$0$i$i$i7 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 100 | 0;
 $1 = sp + 88 | 0;
 $2 = sp + 76 | 0;
 $3 = sp + 64 | 0;
 $4 = sp + 52 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if ($__intl) {
  $10 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 49776) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 44 >> 2] & 127]($0, $10);
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP8[$__pat >> 0] = $14;
  HEAP8[$__pat + 1 >> 0] = $14 >> 8;
  HEAP8[$__pat + 2 >> 0] = $14 >> 16;
  HEAP8[$__pat + 3 >> 0] = $14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 32 >> 2] & 127]($1, $10);
  if (!(HEAP8[$__nsn >> 0] & 1)) HEAP8[$__nsn >> 0] = 0; else HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
  HEAP32[$__nsn + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__nsn | 0, 0);
  $24 = __THREW__;
  __THREW__ = 0;
  if ($24 & 1) {
   $26 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($26);
  };
  HEAP32[$__nsn + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  $__i$0$i$i$i = 0;
  while (1) {
   if (($__i$0$i$i$i | 0) == 3) break;
   HEAP32[$1 + ($__i$0$i$i$i << 2) >> 2] = 0;
   $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 127]($2, $10);
  if (!(HEAP8[$__psn >> 0] & 1)) HEAP8[$__psn >> 0] = 0; else HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
  HEAP32[$__psn + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__psn | 0, 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if ($39 & 1) {
   $41 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($41);
  };
  HEAP32[$__psn + 0 >> 2] = HEAP32[$2 + 0 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  $__i$0$i$i$i4 = 0;
  while (1) {
   if (($__i$0$i$i$i4 | 0) == 3) break;
   HEAP32[$2 + ($__i$0$i$i$i4 << 2) >> 2] = 0;
   $__i$0$i$i$i4 = $__i$0$i$i$i4 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 127]($3, $10);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $63 = __THREW__;
  __THREW__ = 0;
  if ($63 & 1) {
   $65 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($65);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  $__i$0$i$i$i7 = 0;
  while (1) {
   if (($__i$0$i$i$i7 | 0) == 3) break;
   HEAP32[$3 + ($__i$0$i$i$i7 << 2) >> 2] = 0;
   $__i$0$i$i$i7 = $__i$0$i$i$i7 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 127]($4, $10);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__sym | 0, 0);
  $78 = __THREW__;
  __THREW__ = 0;
  if ($78 & 1) {
   $80 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($80);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$4 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  $__i$0$i$i$i11 = 0;
  while (1) {
   if (($__i$0$i$i$i11 | 0) == 3) break;
   HEAP32[$4 + ($__i$0$i$i$i11 << 2) >> 2] = 0;
   $__i$0$i$i$i11 = $__i$0$i$i$i11 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 127]($10) | 0;
 } else {
  $88 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 49712) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 44 >> 2] & 127]($5, $88);
  $92 = HEAP32[$5 >> 2] | 0;
  HEAP8[$__pat >> 0] = $92;
  HEAP8[$__pat + 1 >> 0] = $92 >> 8;
  HEAP8[$__pat + 2 >> 0] = $92 >> 16;
  HEAP8[$__pat + 3 >> 0] = $92 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 32 >> 2] & 127]($6, $88);
  if (!(HEAP8[$__nsn >> 0] & 1)) HEAP8[$__nsn >> 0] = 0; else HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
  HEAP32[$__nsn + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__nsn | 0, 0);
  $102 = __THREW__;
  __THREW__ = 0;
  if ($102 & 1) {
   $104 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($104);
  };
  HEAP32[$__nsn + 0 >> 2] = HEAP32[$6 + 0 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  $__i$0$i$i$i16 = 0;
  while (1) {
   if (($__i$0$i$i$i16 | 0) == 3) break;
   HEAP32[$6 + ($__i$0$i$i$i16 << 2) >> 2] = 0;
   $__i$0$i$i$i16 = $__i$0$i$i$i16 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 28 >> 2] & 127]($7, $88);
  if (!(HEAP8[$__psn >> 0] & 1)) HEAP8[$__psn >> 0] = 0; else HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
  HEAP32[$__psn + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__psn | 0, 0);
  $117 = __THREW__;
  __THREW__ = 0;
  if ($117 & 1) {
   $119 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($119);
  };
  HEAP32[$__psn + 0 >> 2] = HEAP32[$7 + 0 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  $__i$0$i$i$i21 = 0;
  while (1) {
   if (($__i$0$i$i$i21 | 0) == 3) break;
   HEAP32[$7 + ($__i$0$i$i$i21 << 2) >> 2] = 0;
   $__i$0$i$i$i21 = $__i$0$i$i$i21 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 12 >> 2] & 127]($88) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 16 >> 2] & 127]($88) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 20 >> 2] & 127]($8, $88);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $141 = __THREW__;
  __THREW__ = 0;
  if ($141 & 1) {
   $143 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($143);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$8 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$8 + 8 >> 2];
  $__i$0$i$i$i26 = 0;
  while (1) {
   if (($__i$0$i$i$i26 | 0) == 3) break;
   HEAP32[$8 + ($__i$0$i$i$i26 << 2) >> 2] = 0;
   $__i$0$i$i$i26 = $__i$0$i$i$i26 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 24 >> 2] & 127]($9, $88);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(76, $__sym | 0, 0);
  $156 = __THREW__;
  __THREW__ = 0;
  if ($156 & 1) {
   $158 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($158);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$9 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$9 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$9 + 8 >> 2];
  $__i$0$i$i$i31 = 0;
  while (1) {
   if (($__i$0$i$i$i31 | 0) == 3) break;
   HEAP32[$9 + ($__i$0$i$i$i31 << 2) >> 2] = 0;
   $__i$0$i$i$i31 = $__i$0$i$i$i31 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] & 127]($88) | 0;
 }
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $130 = 0, $132 = 0, $139 = 0, $14 = 0, $146 = 0, $147 = 0, $153 = 0, $16 = 0, $160 = 0, $161 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $16;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i5) {
    $168 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $168 = 1;
     $88 = 0;
    } else {
     $168 = 0;
     $88 = $$pre$i$i$i5;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($168) {
     $169 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($168) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $169 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi33Z2D; else $81 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $169;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i5 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($118) {
   $120 = HEAP32[$__g_end >> 2] | 0;
   if (($120 - $__g | 0) < 160) {
    $125 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $120 + 4;
    HEAP32[$120 >> 2] = $125;
   }
  }
  __THREW__ = 0;
  $128 = invoke_iiiii(21, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $129 = tempRet0;
  $130 = __THREW__;
  __THREW__ = 0;
  if ($130 & 1) label = 40; else {
   $132 = $__v;
   HEAP32[$132 >> 2] = $128;
   HEAP32[$132 + 4 >> 2] = $129;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $167 = 0;
    $170 = 1;
   } else {
    $139 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($139 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $146 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $147 = __THREW__;
     __THREW__ = 0;
     if ($147 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $146;
    } else $$0$i$i$i$i = HEAP32[$139 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $167 = 0;
     $170 = 1;
    } else {
     $167 = $$lcssa;
     $170 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $153 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($153 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $160 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $161 = __THREW__;
     __THREW__ = 0;
     if ($161 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $160;
    } else $$0$i$i1$i$i = HEAP32[$153 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($170) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($170) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $167;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $130 = 0, $132 = 0, $139 = 0, $14 = 0, $146 = 0, $147 = 0, $153 = 0, $16 = 0, $160 = 0, $161 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $16;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i5) {
    $168 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $168 = 1;
     $88 = 0;
    } else {
     $168 = 0;
     $88 = $$pre$i$i$i5;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($168) {
     $169 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($168) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $169 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi33Z2D; else $81 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $169;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i5 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($118) {
   $120 = HEAP32[$__g_end >> 2] | 0;
   if (($120 - $__g | 0) < 160) {
    $125 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $120 + 4;
    HEAP32[$120 >> 2] = $125;
   }
  }
  __THREW__ = 0;
  $128 = invoke_iiiii(17, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $129 = tempRet0;
  $130 = __THREW__;
  __THREW__ = 0;
  if ($130 & 1) label = 40; else {
   $132 = $__v;
   HEAP32[$132 >> 2] = $128;
   HEAP32[$132 + 4 >> 2] = $129;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $167 = 0;
    $170 = 1;
   } else {
    $139 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($139 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $146 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $147 = __THREW__;
     __THREW__ = 0;
     if ($147 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $146;
    } else $$0$i$i$i$i = HEAP32[$139 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $167 = 0;
     $170 = 1;
    } else {
     $167 = $$lcssa;
     $170 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $153 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($153 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $160 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $161 = __THREW__;
     __THREW__ = 0;
     if ($161 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $160;
    } else $$0$i$i1$i$i = HEAP32[$153 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($170) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($170) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $167;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZN12_GLOBAL__N_111Interpreter12importStringERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($this, $loc, $file) {
 $this = $this | 0;
 $loc = $loc | 0;
 $file = $file | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$1 = 0, $$13 = 0, $$2 = 0, $$24 = 0, $$3 = 0, $$35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $106 = 0, $109 = 0, $11 = 0, $112 = 0, $113 = 0, $12 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $45 = 0, $49 = 0, $57 = 0, $58 = 0, $6 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $74 = 0, $84 = 0, $85 = 0, $86 = 0, $88 = 0, $9 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $97 = 0, $98 = 0, $dir = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body9$index7Z2D = 0, $eh$lpad$body9$indexZ2D = 0, $found_here_cptr = 0, $input = 0, $key = 0, $msg = 0, $success = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $dir = sp + 72 | 0;
 $key = sp + 48 | 0;
 $success = sp + 40 | 0;
 $found_here_cptr = sp + 36 | 0;
 $input = sp + 24 | 0;
 $msg = sp + 12 | 0;
 $0 = sp;
 $1 = __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($loc, 47, -1) | 0;
 if (($1 | 0) == -1) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($dir, 48920, 0); else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($dir, $loc, 0, $1 + 1 | 0, $loc);
 __THREW__ = 0;
 invoke_vii(40, $key | 0, $dir | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 do if ($4 & 1) {
  $17 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $17;
 } else {
  $6 = $key + 12 | 0;
  __THREW__ = 0;
  invoke_vii(40, $6 | 0, $file | 0);
  $7 = __THREW__;
  __THREW__ = 0;
  if ($7 & 1) {
   $9 = ___cxa_find_matching_catch() | 0;
   $10 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($key);
   $eh$lpad$body$index2Z2D = $10;
   $eh$lpad$body$indexZ2D = $9;
   break;
  }
  $11 = $this + 88 | 0;
  __THREW__ = 0;
  $12 = invoke_iii(33, $11 | 0, $key | 0) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if ($13 & 1) label = 11; else {
   $15 = HEAP32[$12 >> 2] | 0;
   if ($15) {
    $$0 = $15;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($key);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir);
    STACKTOP = sp;
    return $$0 | 0;
   }
   HEAP32[$success >> 2] = 0;
   if (!(HEAP8[$dir >> 0] & 1)) $37 = $dir + 1 | 0; else $37 = HEAP32[$dir + 8 >> 2] | 0;
   if (!(HEAP8[$file >> 0] & 1)) $38 = $file + 1 | 0; else $38 = HEAP32[$file + 8 >> 2] | 0;
   __THREW__ = 0;
   $39 = invoke_iiiiii(HEAP32[$this + 112 >> 2] | 0, HEAP32[$this + 116 >> 2] | 0, $37 | 0, $38 | 0, $found_here_cptr | 0, $success | 0) | 0;
   $40 = __THREW__;
   __THREW__ = 0;
   if ($40 & 1) label = 11; else {
    $42 = _strlen($39 | 0) | 0;
    __THREW__ = 0;
    invoke_viii(3, $input | 0, $39 | 0, $42 | 0);
    $43 = __THREW__;
    __THREW__ = 0;
    if ($43 & 1) label = 11; else {
     __THREW__ = 0;
     invoke_iii(19, $input | 0, $39 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     do if ($45 & 1) label = 38; else {
      _free($39);
      if (HEAP32[$success >> 2] | 0) {
       __THREW__ = 0;
       $102 = invoke_ii(67, 24) | 0;
       $103 = __THREW__;
       __THREW__ = 0;
       if ($103 & 1) {
        label = 38;
        break;
       };
       HEAP32[$102 + 0 >> 2] = 0;
       HEAP32[$102 + 4 >> 2] = 0;
       HEAP32[$102 + 8 >> 2] = 0;
       HEAP32[$102 + 12 >> 2] = 0;
       HEAP32[$102 + 16 >> 2] = 0;
       HEAP32[$102 + 20 >> 2] = 0;
       __THREW__ = 0;
       invoke_iii(19, $102 | 0, HEAP32[$found_here_cptr >> 2] | 0) | 0;
       $106 = __THREW__;
       __THREW__ = 0;
       if ($106 & 1) {
        label = 38;
        break;
       }
       __THREW__ = 0;
       invoke_iii(20, $102 + 12 | 0, $input | 0) | 0;
       $109 = __THREW__;
       __THREW__ = 0;
       if ($109 & 1) {
        label = 38;
        break;
       }
       _free(HEAP32[$found_here_cptr >> 2] | 0);
       __THREW__ = 0;
       $112 = invoke_iii(33, $11 | 0, $key | 0) | 0;
       $113 = __THREW__;
       __THREW__ = 0;
       if ($113 & 1) {
        label = 38;
        break;
       }
       HEAP32[$112 >> 2] = $102;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($input);
       $$0 = $102;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($key);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir);
       STACKTOP = sp;
       return $$0 | 0;
      };
      HEAP32[$0 + 0 >> 2] = 0;
      HEAP32[$0 + 4 >> 2] = 0;
      HEAP32[$0 + 8 >> 2] = 0;
      $49 = HEAP8[$file >> 0] | 0;
      if (!($49 & 1)) $57 = ($49 & 255) >>> 1; else $57 = HEAP32[$file + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_viiii(14, $0 | 0, 41960, 22, $57 + 22 | 0);
      $58 = __THREW__;
      __THREW__ = 0;
      if (!($58 & 1)) {
       if (!(HEAP8[$file >> 0] & 1)) $66 = $file + 1 | 0; else $66 = HEAP32[$file + 8 >> 2] | 0;
       __THREW__ = 0;
       invoke_iiii(33, $0 | 0, $66 | 0, $57 | 0) | 0;
       $67 = __THREW__;
       __THREW__ = 0;
       if (!($67 & 1)) {
        __THREW__ = 0;
        $71 = invoke_iii(27, $0 | 0, 39576) | 0;
        $72 = __THREW__;
        __THREW__ = 0;
        if ($72 & 1) {
         $96 = ___cxa_find_matching_catch() | 0;
         $97 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
         $$1 = $96;
         $$13 = $97;
         break;
        };
        HEAP32[$msg + 0 >> 2] = HEAP32[$71 + 0 >> 2];
        HEAP32[$msg + 4 >> 2] = HEAP32[$71 + 4 >> 2];
        HEAP32[$msg + 8 >> 2] = HEAP32[$71 + 8 >> 2];
        HEAP32[$71 + 0 >> 2] = 0;
        HEAP32[$71 + 4 >> 2] = 0;
        HEAP32[$71 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
        $74 = HEAP8[$input >> 0] | 0;
        if (!($74 & 1)) {
         $84 = $input + 1 | 0;
         $85 = ($74 & 255) >>> 1;
        } else {
         $84 = HEAP32[$input + 8 >> 2] | 0;
         $85 = HEAP32[$input + 4 >> 2] | 0;
        }
        __THREW__ = 0;
        invoke_iiii(33, $msg | 0, $84 | 0, $85 | 0) | 0;
        $86 = __THREW__;
        __THREW__ = 0;
        do if ($86 & 1) label = 41; else {
         $88 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_viiii(17, $88 | 0, $this + 56 | 0, $loc | 0, $msg | 0);
         $90 = __THREW__;
         __THREW__ = 0;
         if ($90 & 1) {
          $100 = ___cxa_find_matching_catch() | 0;
          $101 = tempRet0;
          ___cxa_free_exception($88 | 0);
          $$01 = $100;
          $$02 = $101;
          break;
         }
         __THREW__ = 0;
         invoke_viii(4, $88 | 0, 38664, 183);
         $92 = __THREW__;
         __THREW__ = 0;
         if ($92 & 1) {
          label = 41;
          break;
         }
        } while (0);
        if ((label | 0) == 41) {
         $98 = ___cxa_find_matching_catch() | 0;
         $$01 = $98;
         $$02 = tempRet0;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($msg);
        $$1 = $$01;
        $$13 = $$02;
        break;
       }
      }
      $69 = ___cxa_find_matching_catch() | 0;
      $70 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $eh$lpad$body9$index7Z2D = $70;
      $eh$lpad$body9$indexZ2D = $69;
      label = 39;
     } while (0);
     if ((label | 0) == 38) {
      $94 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body9$index7Z2D = tempRet0;
      $eh$lpad$body9$indexZ2D = $94;
      label = 39;
     }
     if ((label | 0) == 39) {
      $$1 = $eh$lpad$body9$indexZ2D;
      $$13 = $eh$lpad$body9$index7Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($input);
     $$2 = $$1;
     $$24 = $$13;
    }
   }
  }
  if ((label | 0) == 11) {
   $19 = ___cxa_find_matching_catch() | 0;
   $$2 = $19;
   $$24 = tempRet0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($key);
  $$3 = $$2;
  $$35 = $$24;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir);
  ___resumeException($$3 | 0);
 } while (0);
 $$3 = $eh$lpad$body$indexZ2D;
 $$35 = $eh$lpad$body$index2Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir);
 ___resumeException($$3 | 0);
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $134 = 0, $14 = 0, $141 = 0, $142 = 0, $148 = 0, $155 = 0, $156 = 0, $16 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $16;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i5) {
    $163 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $163 = 1;
     $88 = 0;
    } else {
     $163 = 0;
     $88 = $$pre$i$i$i5;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($163) {
     $164 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($163) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $164 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi33Z2D; else $81 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $164;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i5 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($118) {
   $120 = HEAP32[$__g_end >> 2] | 0;
   if (($120 - $__g | 0) < 160) {
    $125 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $120 + 4;
    HEAP32[$120 >> 2] = $125;
   }
  }
  __THREW__ = 0;
  $128 = invoke_iiiii(18, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $129 = __THREW__;
  __THREW__ = 0;
  if ($129 & 1) label = 40; else {
   HEAP16[$__v >> 1] = $128;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $162 = 0;
    $165 = 1;
   } else {
    $134 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($134 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $141 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $142 = __THREW__;
     __THREW__ = 0;
     if ($142 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $141;
    } else $$0$i$i$i$i = HEAP32[$134 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $162 = 0;
     $165 = 1;
    } else {
     $162 = $$lcssa;
     $165 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $148 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($148 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $155 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $156 = __THREW__;
     __THREW__ = 0;
     if ($156 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $155;
    } else $$0$i$i1$i$i = HEAP32[$148 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($165) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($165) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $162;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $134 = 0, $14 = 0, $141 = 0, $142 = 0, $148 = 0, $155 = 0, $156 = 0, $16 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $16;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i5) {
    $163 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $163 = 1;
     $88 = 0;
    } else {
     $163 = 0;
     $88 = $$pre$i$i$i5;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($163) {
     $164 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($163) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $164 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi33Z2D; else $81 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $164;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i5 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($118) {
   $120 = HEAP32[$__g_end >> 2] | 0;
   if (($120 - $__g | 0) < 160) {
    $125 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $120 + 4;
    HEAP32[$120 >> 2] = $125;
   }
  }
  __THREW__ = 0;
  $128 = invoke_iiiii(20, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $129 = __THREW__;
  __THREW__ = 0;
  if ($129 & 1) label = 40; else {
   HEAP32[$__v >> 2] = $128;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $162 = 0;
    $165 = 1;
   } else {
    $134 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($134 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $141 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $142 = __THREW__;
     __THREW__ = 0;
     if ($142 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $141;
    } else $$0$i$i$i$i = HEAP32[$134 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $162 = 0;
     $165 = 1;
    } else {
     $162 = $$lcssa;
     $165 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $148 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($148 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $155 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $156 = __THREW__;
     __THREW__ = 0;
     if ($156 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $155;
    } else $$0$i$i1$i$i = HEAP32[$148 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($165) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($165) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $162;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $134 = 0, $14 = 0, $141 = 0, $142 = 0, $148 = 0, $155 = 0, $156 = 0, $16 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $16;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i5) {
    $163 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $163 = 1;
     $88 = 0;
    } else {
     $163 = 0;
     $88 = $$pre$i$i$i5;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($163) {
     $164 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($163) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $164 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi33Z2D; else $81 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $164;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i5 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($118) {
   $120 = HEAP32[$__g_end >> 2] | 0;
   if (($120 - $__g | 0) < 160) {
    $125 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $120 + 4;
    HEAP32[$120 >> 2] = $125;
   }
  }
  __THREW__ = 0;
  $128 = invoke_iiiii(19, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $129 = __THREW__;
  __THREW__ = 0;
  if ($129 & 1) label = 40; else {
   HEAP32[$__v >> 2] = $128;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $162 = 0;
    $165 = 1;
   } else {
    $134 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($134 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $141 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $142 = __THREW__;
     __THREW__ = 0;
     if ($142 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $141;
    } else $$0$i$i$i$i = HEAP32[$134 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $162 = 0;
     $165 = 1;
    } else {
     $162 = $$lcssa;
     $165 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $148 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($148 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $155 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $156 = __THREW__;
     __THREW__ = 0;
     if ($156 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $155;
    } else $$0$i$i1$i$i = HEAP32[$148 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($165) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($165) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $162;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $102 = 0, $108 = 0, $111 = 0, $118 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $134 = 0, $14 = 0, $141 = 0, $142 = 0, $148 = 0, $155 = 0, $156 = 0, $16 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 40; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $16;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i5) {
    $163 = 1;
    $88 = 0;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 39;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $163 = 1;
     $88 = 0;
    } else {
     $163 = 0;
     $88 = $$pre$i$i$i5;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 23; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 39;
      break L14;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 23;
     break;
    } else if ($163) {
     $164 = $34;
     break;
    } else {
     $$lcssa = $88;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 23) {
    label = 0;
    if ($163) {
     $$lcssa = $88;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $164 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 39;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi33Z2D; else $81 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $88 + 12 | 0;
   $89 = HEAP32[$87 >> 2] | 0;
   $90 = $88 + 16 | 0;
   if (($89 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    $96 = invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] | 0, $88 | 0) | 0;
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 39;
     break;
    } else $$0$i$i = $96;
   } else $$0$i$i = HEAP32[$89 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $88;
    $$pre$i3$i$i = $164;
    $__a$2 = $__a$1;
    break;
   }
   $102 = HEAP32[$87 >> 2] | 0;
   if (($102 | 0) == (HEAP32[$90 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$88 >> 2] | 0) + 40 >> 2] | 0, $88 | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 39;
     break;
    }
   } else HEAP32[$87 >> 2] = $102 + 4;
   $$pre$i$i$i5 = $88;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 39) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $111 = HEAP8[$__grouping >> 0] | 0;
  if (!($111 & 1)) $118 = ($111 & 255) >>> 1; else $118 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($118) {
   $120 = HEAP32[$__g_end >> 2] | 0;
   if (($120 - $__g | 0) < 160) {
    $125 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $120 + 4;
    HEAP32[$120 >> 2] = $125;
   }
  }
  __THREW__ = 0;
  $128 = invoke_iiiii(16, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $129 = __THREW__;
  __THREW__ = 0;
  if ($129 & 1) label = 40; else {
   HEAP32[$__v >> 2] = $128;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) {
    $162 = 0;
    $165 = 1;
   } else {
    $134 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($134 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $141 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $142 = __THREW__;
     __THREW__ = 0;
     if ($142 & 1) {
      label = 40;
      break;
     } else $$0$i$i$i$i = $141;
    } else $$0$i$i$i$i = HEAP32[$134 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $162 = 0;
     $165 = 1;
    } else {
     $162 = $$lcssa;
     $165 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 69; else {
    $148 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($148 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $155 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $156 = __THREW__;
     __THREW__ = 0;
     if ($156 & 1) {
      label = 40;
      break L8;
     } else $$0$i$i1$i$i = $155;
    } else $$0$i$i1$i$i = HEAP32[$148 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 69;
     break;
    } else if ($165) break; else {
     label = 71;
     break;
    }
   } while (0);
   if ((label | 0) == 69) if ($165) label = 71;
   if ((label | 0) == 71) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $162;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 40) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZN12_GLOBAL__N_16Parser19parseIdentifierListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj($agg$result, $this, $element_kind, $obj_level) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $element_kind = $element_kind | 0;
 $obj_level = $obj_level | 0;
 var $$0$i = 0, $$01 = 0, $$01$i = 0, $$020 = 0, $$0319 = 0, $$1 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $42 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $56 = 0, $58 = 0, $59 = 0, $60 = 0, $62 = 0, $64 = 0, $66 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $77 = 0, $78 = 0, $82 = 0, $85 = 0, $9 = 0, $91 = 0, $94 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $exprs = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $0 = sp + 216 | 0;
 $exprs = sp + 204 | 0;
 $1 = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $2 = sp;
 HEAP32[$exprs >> 2] = 0;
 $3 = $exprs + 4 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$exprs + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viiiii(4, $1 | 0, $this | 0, $exprs | 0, $element_kind | 0, $obj_level | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($5 & 1) {
  $17 = ___cxa_find_matching_catch() | 0;
  $$3 = $17;
  $$36 = tempRet0;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 16 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 4 | 0);
  HEAP32[$agg$result >> 2] = 0;
  $9 = $agg$result + 4 | 0;
  HEAP32[$9 >> 2] = 0;
  $10 = $agg$result + 8 | 0;
  HEAP32[$10 >> 2] = 0;
  $11 = HEAP32[$exprs >> 2] | 0;
  $12 = HEAP32[$3 >> 2] | 0;
  L3 : do if (($11 | 0) == ($12 | 0)) $82 = $11; else {
   $15 = $11;
   while (1) {
    $14 = HEAP32[$15 >> 2] | 0;
    if (!$14) {
     $$lcssa = 0;
     label = 7;
     break;
    }
    $19 = ___dynamic_cast($14, 35776, 36768, 0) | 0;
    if (!$19) {
     $$lcssa = $14;
     label = 7;
     break;
    }
    $70 = $19 + 48 | 0;
    $71 = HEAP32[$9 >> 2] | 0;
    if (($71 | 0) == (HEAP32[$10 >> 2] | 0)) {
     __THREW__ = 0;
     invoke_vii(56, $agg$result | 0, $70 | 0);
     $78 = __THREW__;
     __THREW__ = 0;
     if ($78 & 1) {
      label = 22;
      break;
     }
    } else {
     if (!$71) $77 = 0; else {
      HEAP32[$71 >> 2] = HEAP32[$70 >> 2];
      $77 = HEAP32[$9 >> 2] | 0;
     }
     HEAP32[$9 >> 2] = $77 + 4;
    }
    $15 = $15 + 4 | 0;
    if (($15 | 0) == ($12 | 0)) {
     label = 35;
     break;
    }
   }
   L16 : do if ((label | 0) == 7) {
    $21 = $ss + 64 | 0;
    $22 = $ss + 8 | 0;
    HEAP32[$22 >> 2] = 752;
    $23 = $ss + 12 | 0;
    HEAP32[$ss >> 2] = 900;
    HEAP32[$21 >> 2] = 920;
    HEAP32[$ss + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss + 64 | 0, $23 | 0);
    $26 = __THREW__;
    __THREW__ = 0;
    if ($26 & 1) {
     $38 = ___cxa_find_matching_catch() | 0;
     $$0$i = tempRet0;
     $$01$i = $38;
    } else {
     HEAP32[$ss + 136 >> 2] = 0;
     HEAP32[$ss + 140 >> 2] = -1;
     HEAP32[$ss >> 2] = 732;
     HEAP32[$21 >> 2] = 772;
     HEAP32[$22 >> 2] = 752;
     __THREW__ = 0;
     invoke_vi(177, $23 | 0);
     $30 = __THREW__;
     __THREW__ = 0;
     do if ($30 & 1) {
      $40 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index2Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $40;
     } else {
      HEAP32[$23 >> 2] = 1064;
      $32 = $ss + 44 | 0;
      HEAP32[$32 + 0 >> 2] = 0;
      HEAP32[$32 + 4 >> 2] = 0;
      HEAP32[$32 + 8 >> 2] = 0;
      HEAP32[$32 + 12 >> 2] = 0;
      HEAP32[$ss + 60 >> 2] = 24;
      HEAP32[$0 + 0 >> 2] = 0;
      HEAP32[$0 + 4 >> 2] = 0;
      HEAP32[$0 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $23 | 0, $0 | 0);
      $34 = __THREW__;
      __THREW__ = 0;
      if ($34 & 1) {
       $36 = ___cxa_find_matching_catch() | 0;
       $37 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($23);
       $eh$lpad$body$i$index2Z2D = $37;
       $eh$lpad$body$i$indexZ2D = $36;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      __THREW__ = 0;
      $42 = invoke_iiii(25, $22 | 0, 37136, 19) | 0;
      $43 = __THREW__;
      __THREW__ = 0;
      L25 : do if ($43 & 1) label = 24; else {
       __THREW__ = 0;
       invoke_iii(26, $42 | 0, $$lcssa | 0) | 0;
       $45 = __THREW__;
       __THREW__ = 0;
       if ($45 & 1) label = 24; else {
        $47 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_vii(43, $2 | 0, $23 | 0);
        $48 = __THREW__;
        __THREW__ = 0;
        do if ($48 & 1) {
         $66 = ___cxa_find_matching_catch() | 0;
         $$020 = $66;
         $$0319 = tempRet0;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $47 | 0, $$lcssa + 4 | 0);
         $51 = __THREW__;
         __THREW__ = 0;
         if ($51 & 1) $$01 = 1; else {
          $53 = $47 + 12 | 0;
          $54 = $$lcssa + 16 | 0;
          HEAP32[$53 + 0 >> 2] = HEAP32[$54 + 0 >> 2];
          HEAP32[$53 + 4 >> 2] = HEAP32[$54 + 4 >> 2];
          HEAP32[$53 + 8 >> 2] = HEAP32[$54 + 8 >> 2];
          HEAP32[$53 + 12 >> 2] = HEAP32[$54 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $47 + 28 | 0, $2 | 0);
          $56 = __THREW__;
          __THREW__ = 0;
          if ($56 & 1) {
           $58 = ___cxa_find_matching_catch() | 0;
           $59 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
           $$020 = $58;
           $$0319 = $59;
           break;
          }
          __THREW__ = 0;
          invoke_viii(4, $47 | 0, 48, 176);
          $60 = __THREW__;
          __THREW__ = 0;
          if ($60 & 1) $$01 = 0; else {}
         }
         $68 = ___cxa_find_matching_catch() | 0;
         $69 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
         if ($$01) {
          $$020 = $68;
          $$0319 = $69;
         } else {
          $$1 = $68;
          $$14 = $69;
          break L25;
         }
        } while (0);
        ___cxa_free_exception($47 | 0);
        $$1 = $$020;
        $$14 = $$0319;
       }
      } while (0);
      if ((label | 0) == 24) {
       $64 = ___cxa_find_matching_catch() | 0;
       $$1 = $64;
       $$14 = tempRet0;
      }
      HEAP32[$ss >> 2] = 732;
      HEAP32[$21 >> 2] = 772;
      HEAP32[$22 >> 2] = 752;
      HEAP32[$23 >> 2] = 1064;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($23);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($21);
      $$2 = $$1;
      $$25 = $$14;
      break L16;
     } while (0);
     $$0$i = $eh$lpad$body$i$index2Z2D;
     $$01$i = $eh$lpad$body$i$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($21);
    $eh$lpad$body$index7Z2D = $$0$i;
    $eh$lpad$body$indexZ2D = $$01$i;
    label = 23;
   } else if ((label | 0) == 22) {
    $62 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index7Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $62;
    label = 23;
   } else if ((label | 0) == 35) {
    $82 = HEAP32[$exprs >> 2] | 0;
    break L3;
   } while (0);
   if ((label | 0) == 23) {
    $$2 = $eh$lpad$body$indexZ2D;
    $$25 = $eh$lpad$body$index7Z2D;
   }
   $91 = HEAP32[$agg$result >> 2] | 0;
   if (!$91) {
    $$3 = $$2;
    $$36 = $$25;
    break L1;
   }
   $94 = HEAP32[$9 >> 2] | 0;
   if (($94 | 0) != ($91 | 0)) HEAP32[$9 >> 2] = $94 + (~(($94 + -4 - $91 | 0) >>> 2) << 2);
   __ZdlPv($91);
   $$3 = $$2;
   $$36 = $$25;
   break L1;
  } while (0);
  if (!$82) {
   STACKTOP = sp;
   return;
  }
  $85 = HEAP32[$3 >> 2] | 0;
  if (($85 | 0) != ($82 | 0)) HEAP32[$3 >> 2] = $85 + (~(($85 + -4 - $82 | 0) >>> 2) << 2);
  __ZdlPv($82);
  STACKTOP = sp;
  return;
 } while (0);
 $100 = HEAP32[$exprs >> 2] | 0;
 if (!$100) ___resumeException($$3 | 0);
 $103 = HEAP32[$3 >> 2] | 0;
 if (($103 | 0) != ($100 | 0)) HEAP32[$3 >> 2] = $103 + (~(($103 + -4 - $100 | 0) >>> 2) << 2);
 __ZdlPv($100);
 ___resumeException($$3 | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $123 = 0, $128 = 0, $13 = 0, $131 = 0.0, $132 = 0, $144 = 0, $145 = 0, $148 = 0, $149 = 0, $15 = 0, $159 = 0, $16 = 0, $160 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 200 | 0;
 $__decimal_point = sp + 199 | 0;
 $__thousands_sep = sp + 198 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 197 | 0;
 $__exp = sp + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($8 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $15 = $__buf + 1 | 0;
   $$pre$phi31Z2D = $15;
   $$pre$phi33Z2D = $__buf + 8 | 0;
   $16 = $15;
  } else {
   $13 = $__buf + 8 | 0;
   $$pre$phi31Z2D = $__buf + 1 | 0;
   $$pre$phi33Z2D = $13;
   $16 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP8[$__decimal_point >> 0] | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L14 : while (1) {
   if (!$$pre$i$i$i5) $33 = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i5;
   } else $33 = $$pre$i$i$i5;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $165 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $165 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $165 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$17 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi31Z2D; else $81 = HEAP32[$$pre$phi33Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $165;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i5 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($119 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $123 = HEAP32[$__g_end >> 2] | 0;
   if (($123 - $__g | 0) < 160) {
    $128 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $123 + 4;
    HEAP32[$123 >> 2] = $128;
   }
  }
  __THREW__ = 0;
  $131 = +invoke_diii(1, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $132 = __THREW__;
  __THREW__ = 0;
  if ($132 & 1) label = 39; else {
   HEAPF32[$__v >> 2] = $131;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $148 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $144 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $145 = __THREW__;
    __THREW__ = 0;
    if ($145 & 1) {
     label = 39;
     break;
    }
    if (($144 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $148 = 0;
    } else $148 = $$lcssa;
   } else $148 = $$lcssa;
   $149 = ($148 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $159 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $160 = __THREW__;
     __THREW__ = 0;
     if ($160 & 1) {
      label = 39;
      break L8;
     }
     if (($159 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$149) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($149) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $148;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $123 = 0, $128 = 0, $13 = 0, $131 = 0.0, $132 = 0, $144 = 0, $145 = 0, $148 = 0, $149 = 0, $15 = 0, $159 = 0, $16 = 0, $160 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 200 | 0;
 $__decimal_point = sp + 199 | 0;
 $__thousands_sep = sp + 198 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 197 | 0;
 $__exp = sp + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($8 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $15 = $__buf + 1 | 0;
   $$pre$phi31Z2D = $15;
   $$pre$phi33Z2D = $__buf + 8 | 0;
   $16 = $15;
  } else {
   $13 = $__buf + 8 | 0;
   $$pre$phi31Z2D = $__buf + 1 | 0;
   $$pre$phi33Z2D = $13;
   $16 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP8[$__decimal_point >> 0] | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L14 : while (1) {
   if (!$$pre$i$i$i5) $33 = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i5;
   } else $33 = $$pre$i$i$i5;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $165 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $165 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $165 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$17 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi31Z2D; else $81 = HEAP32[$$pre$phi33Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $165;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i5 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($119 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $123 = HEAP32[$__g_end >> 2] | 0;
   if (($123 - $__g | 0) < 160) {
    $128 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $123 + 4;
    HEAP32[$123 >> 2] = $128;
   }
  }
  __THREW__ = 0;
  $131 = +invoke_diii(3, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $132 = __THREW__;
  __THREW__ = 0;
  if ($132 & 1) label = 39; else {
   HEAPF64[$__v >> 3] = $131;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $148 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $144 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $145 = __THREW__;
    __THREW__ = 0;
    if ($145 & 1) {
     label = 39;
     break;
    }
    if (($144 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $148 = 0;
    } else $148 = $$lcssa;
   } else $148 = $$lcssa;
   $149 = ($148 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $159 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $160 = __THREW__;
     __THREW__ = 0;
     if ($160 & 1) {
      label = 39;
      break L8;
     }
     if (($159 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$149) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($149) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $148;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $123 = 0, $128 = 0, $13 = 0, $131 = 0.0, $132 = 0, $144 = 0, $145 = 0, $148 = 0, $149 = 0, $15 = 0, $159 = 0, $16 = 0, $160 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 200 | 0;
 $__decimal_point = sp + 199 | 0;
 $__thousands_sep = sp + 198 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 197 | 0;
 $__exp = sp + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($8 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $15 = $__buf + 1 | 0;
   $$pre$phi31Z2D = $15;
   $$pre$phi33Z2D = $__buf + 8 | 0;
   $16 = $15;
  } else {
   $13 = $__buf + 8 | 0;
   $$pre$phi31Z2D = $__buf + 1 | 0;
   $$pre$phi33Z2D = $13;
   $16 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP8[$__decimal_point >> 0] | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L14 : while (1) {
   if (!$$pre$i$i$i5) $33 = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i5;
   } else $33 = $$pre$i$i$i5;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $165 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $165 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $165 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$17 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi31Z2D; else $81 = HEAP32[$$pre$phi33Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $165;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i5 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($119 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $123 = HEAP32[$__g_end >> 2] | 0;
   if (($123 - $__g | 0) < 160) {
    $128 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $123 + 4;
    HEAP32[$123 >> 2] = $128;
   }
  }
  __THREW__ = 0;
  $131 = +invoke_diii(2, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $132 = __THREW__;
  __THREW__ = 0;
  if ($132 & 1) label = 39; else {
   HEAPF64[$__v >> 3] = $131;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $148 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $144 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $145 = __THREW__;
    __THREW__ = 0;
    if ($145 & 1) {
     label = 39;
     break;
    }
    if (($144 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $148 = 0;
    } else $148 = $$lcssa;
   } else $148 = $$lcssa;
   $149 = ($148 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $159 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $160 = __THREW__;
     __THREW__ = 0;
     if ($160 & 1) {
      label = 39;
      break L8;
     }
     if (($159 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$149) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($149) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $148;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $$$0 = 0, $$$029 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$lcssa = 0, $$0$i$i11 = 0, $$0$i$i11$lcssa = 0, $$0$i$i4 = 0, $$01$i$i = 0, $$2 = 0, $$lcssa = 0, $$lcssa39 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $103 = 0, $105 = 0, $109 = 0, $11 = 0, $116 = 0, $118 = 0, $119 = 0, $12 = 0, $121 = 0, $126 = 0, $13 = 0, $135 = 0, $136 = 0, $137 = 0, $140 = 0, $142 = 0, $144 = 0, $148 = 0, $15 = 0, $150 = 0, $154 = 0, $160 = 0, $161 = 0, $162 = 0, $164 = 0, $168 = 0, $17 = 0, $2 = 0, $26 = 0, $27 = 0, $29 = 0, $31 = 0, $35 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $55 = 0, $57 = 0, $6 = 0, $62 = 0, $64 = 0, $66 = 0, $7 = 0, $74 = 0, $75 = 0, $77 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $92 = 0, $94 = 0, $__d$0 = 0, $__d$0$lcssa = 0, $__d$0$lcssa28 = 0, $__d$1 = 0, $__d$2 = 0, $__d$3 = 0, $__f$0 = 0, $__f$1 = 0, $__gl$0 = 0, $__gl$0$ph = 0, $__gl$1 = 0, $__ig$0 = 0, $__ig$1 = 0, $__ng$0 = 0, $__ng$1 = 0, $__p$0 = 0, $scevgep31 = 0, $umax30 = 0;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__sn + 1 | 0;
 $1 = $__sn + 8 | 0;
 $2 = $__sn + 4 | 0;
 $4 = ($__flags & 512 | 0) == 0;
 $5 = $__sym + 1 | 0;
 $6 = $__sym + 8 | 0;
 $7 = $__sym + 4 | 0;
 $8 = $__ct + 8 | 0;
 $9 = ($__fd | 0) > 0;
 $10 = $__grp + 1 | 0;
 $11 = $__grp + 8 | 0;
 $12 = $__grp + 4 | 0;
 $13 = $__fd + 1 | 0;
 $15 = ~$__fd;
 $17 = -2 - $__fd - (($15 | 0) > -1 ? $15 : -1) | 0;
 $$0 = $__db;
 $__p$0 = 0;
 while (1) {
  if (($__p$0 | 0) == 4) break;
  switch (HEAP8[$__pat + $__p$0 >> 0] | 0) {
  case 2:
   {
    $41 = HEAP8[$__sym >> 0] | 0;
    $43 = ($41 & 1) == 0;
    if ($43) $47 = ($41 & 255) >>> 1; else $47 = HEAP32[$7 >> 2] | 0;
    if ($4 | ($47 | 0) == 0) $$2 = $$0; else {
     if ($43) {
      $54 = $5;
      $55 = ($41 & 255) >>> 1;
     } else {
      $54 = HEAP32[$6 >> 2] | 0;
      $55 = HEAP32[$7 >> 2] | 0;
     }
     $53 = $54 + $55 | 0;
     $$0$i$i11 = HEAP32[$__me >> 2] | 0;
     $57 = $54;
     while (1) {
      if (($57 | 0) == ($53 | 0)) {
       $$0$i$i11$lcssa = $$0$i$i11;
       break;
      }
      HEAP8[$$0$i$i11 >> 0] = HEAP8[$57 >> 0] | 0;
      $$0$i$i11 = $$0$i$i11 + 1 | 0;
      $57 = $57 + 1 | 0;
     }
     HEAP32[$__me >> 2] = $$0$i$i11$lcssa;
     $$2 = $$0;
    }
    break;
   }
  case 3:
   {
    $29 = HEAP8[$__sn >> 0] | 0;
    $31 = ($29 & 1) == 0;
    if ($31) $35 = ($29 & 255) >>> 1; else $35 = HEAP32[$2 >> 2] | 0;
    if (!$35) $$2 = $$0; else {
     $38 = HEAP8[($31 ? $0 : HEAP32[$1 >> 2] | 0) >> 0] | 0;
     $39 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $39 + 1;
     HEAP8[$39 >> 0] = $38;
     $$2 = $$0;
    }
    break;
   }
  case 1:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 63]($__ct, 32) | 0;
    $27 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $27 + 1;
    HEAP8[$27 >> 0] = $26;
    $$2 = $$0;
    break;
   }
  case 0:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $$2 = $$0;
    break;
   }
  case 4:
   {
    $62 = HEAP32[$__me >> 2] | 0;
    $$$0 = $__neg ? $$0 + 1 | 0 : $$0;
    $$$029 = $$$0;
    $64 = HEAP32[$8 >> 2] | 0;
    $__d$0 = $$$0;
    while (1) {
     if ($__d$0 >>> 0 >= $__de >>> 0) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     $66 = HEAP8[$__d$0 >> 0] | 0;
     if ($66 << 24 >> 24 <= -1) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     if (!(HEAP16[$64 + ($66 << 24 >> 24 << 1) >> 1] & 2048)) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     $__d$0 = $__d$0 + 1 | 0;
    }
    $__d$0$lcssa28 = $__d$0$lcssa;
    if ($9) {
     $74 = ~$$$029;
     $75 = ~$__d$0$lcssa28;
     $77 = -2 - $__d$0$lcssa28 - ($74 >>> 0 > $75 >>> 0 ? $74 : $75) | 0;
     $umax30 = $17 >>> 0 > $77 >>> 0 ? $17 : $77;
     $__d$1 = $__d$0$lcssa;
     $__f$0 = $__fd;
     while (1) {
      $80 = ($__f$0 | 0) > 0;
      if (!($__d$1 >>> 0 > $$$0 >>> 0 & $80)) {
       $$lcssa = $80;
       break;
      }
      $81 = $__d$1 + -1 | 0;
      $82 = HEAP8[$81 >> 0] | 0;
      $83 = HEAP32[$__me >> 2] | 0;
      HEAP32[$__me >> 2] = $83 + 1;
      HEAP8[$83 >> 0] = $82;
      $__d$1 = $81;
      $__f$0 = $__f$0 + -1 | 0;
     }
     $scevgep31 = $__d$0$lcssa + ($umax30 + 1) | 0;
     if ($$lcssa) $94 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 63]($__ct, 48) | 0; else $94 = 0;
     $__f$1 = $13 + $umax30 | 0;
     while (1) {
      $92 = HEAP32[$__me >> 2] | 0;
      HEAP32[$__me >> 2] = $92 + 1;
      if (($__f$1 | 0) <= 0) {
       $$lcssa39 = $92;
       break;
      }
      HEAP8[$92 >> 0] = $94;
      $__f$1 = $__f$1 + -1 | 0;
     }
     HEAP8[$$lcssa39 >> 0] = $__dp;
     $__d$2 = $scevgep31;
    } else $__d$2 = $__d$0$lcssa;
    if (($__d$2 | 0) == ($$$0 | 0)) {
     $100 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 63]($__ct, 48) | 0;
     $101 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $101 + 1;
     HEAP8[$101 >> 0] = $100;
    } else {
     $103 = HEAP8[$__grp >> 0] | 0;
     $105 = ($103 & 1) == 0;
     if ($105) $109 = ($103 & 255) >>> 1; else $109 = HEAP32[$12 >> 2] | 0;
     if (!$109) $__gl$0$ph = -1; else $__gl$0$ph = HEAP8[($105 ? $10 : HEAP32[$11 >> 2] | 0) >> 0] | 0;
     $__d$3 = $__d$2;
     $__gl$0 = $__gl$0$ph;
     $__ig$0 = 0;
     $__ng$0 = 0;
     while (1) {
      if (($__d$3 | 0) == ($$$0 | 0)) break;
      if (($__ng$0 | 0) == ($__gl$0 | 0)) {
       $116 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $116 + 1;
       HEAP8[$116 >> 0] = $__ts;
       $118 = $__ig$0 + 1 | 0;
       $119 = HEAP8[$__grp >> 0] | 0;
       $121 = ($119 & 1) == 0;
       if ($121) $126 = ($119 & 255) >>> 1; else $126 = HEAP32[$12 >> 2] | 0;
       if ($118 >>> 0 < $126 >>> 0) if ((HEAP8[($121 ? $10 : HEAP32[$11 >> 2] | 0) + $118 >> 0] | 0) == 127) {
        $__gl$1 = -1;
        $__ig$1 = $118;
        $__ng$1 = 0;
       } else {
        $__gl$1 = HEAP8[($121 ? $10 : HEAP32[$11 >> 2] | 0) + $118 >> 0] | 0;
        $__ig$1 = $118;
        $__ng$1 = 0;
       } else {
        $__gl$1 = $__ng$0;
        $__ig$1 = $118;
        $__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__gl$0;
       $__ig$1 = $__ig$0;
       $__ng$1 = $__ng$0;
      }
      $135 = $__d$3 + -1 | 0;
      $136 = HEAP8[$135 >> 0] | 0;
      $137 = HEAP32[$__me >> 2] | 0;
      HEAP32[$__me >> 2] = $137 + 1;
      HEAP8[$137 >> 0] = $136;
      $__d$3 = $135;
      $__gl$0 = $__gl$1;
      $__ig$0 = $__ig$1;
      $__ng$0 = $__ng$1 + 1 | 0;
     }
    }
    $140 = HEAP32[$__me >> 2] | 0;
    if (($62 | 0) == ($140 | 0)) $$2 = $$$0; else {
     $$0$i$i4 = $140;
     $$01$i$i = $62;
     while (1) {
      $142 = $$0$i$i4 + -1 | 0;
      if ($$01$i$i >>> 0 >= $142 >>> 0) break;
      $144 = HEAP8[$$01$i$i >> 0] | 0;
      HEAP8[$$01$i$i >> 0] = HEAP8[$142 >> 0] | 0;
      HEAP8[$142 >> 0] = $144;
      $$0$i$i4 = $142;
      $$01$i$i = $$01$i$i + 1 | 0;
     }
     $$2 = $$$0;
    }
    break;
   }
  default:
   $$2 = $$0;
  }
  $$0 = $$2;
  $__p$0 = $__p$0 + 1 | 0;
 }
 $148 = HEAP8[$__sn >> 0] | 0;
 $150 = ($148 & 1) == 0;
 if ($150) $154 = ($148 & 255) >>> 1; else $154 = HEAP32[$2 >> 2] | 0;
 if ($154 >>> 0 > 1) {
  if ($150) {
   $161 = $0;
   $162 = ($148 & 255) >>> 1;
  } else {
   $161 = HEAP32[$1 >> 2] | 0;
   $162 = HEAP32[$2 >> 2] | 0;
  }
  $160 = $161 + $162 | 0;
  $$0$i$i = HEAP32[$__me >> 2] | 0;
  $$pn = $161;
  while (1) {
   $164 = $$pn + 1 | 0;
   if (($164 | 0) == ($160 | 0)) {
    $$0$i$i$lcssa = $$0$i$i;
    break;
   }
   HEAP8[$$0$i$i >> 0] = HEAP8[$164 >> 0] | 0;
   $$0$i$i = $$0$i$i + 1 | 0;
   $$pn = $164;
  }
  HEAP32[$__me >> 2] = $$0$i$i$lcssa;
 }
 $168 = $__flags & 176;
 if (($168 | 0) == 32) HEAP32[$__mi >> 2] = HEAP32[$__me >> 2]; else if (($168 | 0) != 16) HEAP32[$__mi >> 2] = $__mb;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $121 = 0, $126 = 0, $129 = 0, $130 = 0, $131 = 0, $133 = 0, $14 = 0, $147 = 0, $148 = 0, $151 = 0, $152 = 0, $16 = 0, $162 = 0, $163 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $16;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i4) $33 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i4;
   } else $33 = $$pre$i$i$i4;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $168 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $168 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $168 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi30Z2D; else $81 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $168;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i4 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($119) {
   $121 = HEAP32[$__g_end >> 2] | 0;
   if (($121 - $__g | 0) < 160) {
    $126 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $121 + 4;
    HEAP32[$121 >> 2] = $126;
   }
  }
  __THREW__ = 0;
  $129 = invoke_iiiii(21, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $130 = tempRet0;
  $131 = __THREW__;
  __THREW__ = 0;
  if ($131 & 1) label = 39; else {
   $133 = $__v;
   HEAP32[$133 >> 2] = $129;
   HEAP32[$133 + 4 >> 2] = $130;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $151 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $147 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $148 = __THREW__;
    __THREW__ = 0;
    if ($148 & 1) {
     label = 39;
     break;
    }
    if (($147 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $151 = 0;
    } else $151 = $$lcssa;
   } else $151 = $$lcssa;
   $152 = ($151 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $162 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $163 = __THREW__;
     __THREW__ = 0;
     if ($163 & 1) {
      label = 39;
      break L8;
     }
     if (($162 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$152) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($152) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $151;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $121 = 0, $126 = 0, $129 = 0, $130 = 0, $131 = 0, $133 = 0, $14 = 0, $147 = 0, $148 = 0, $151 = 0, $152 = 0, $16 = 0, $162 = 0, $163 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $16;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i4) $33 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i4;
   } else $33 = $$pre$i$i$i4;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $168 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $168 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $168 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi30Z2D; else $81 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $168;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i4 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($119) {
   $121 = HEAP32[$__g_end >> 2] | 0;
   if (($121 - $__g | 0) < 160) {
    $126 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $121 + 4;
    HEAP32[$121 >> 2] = $126;
   }
  }
  __THREW__ = 0;
  $129 = invoke_iiiii(17, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $130 = tempRet0;
  $131 = __THREW__;
  __THREW__ = 0;
  if ($131 & 1) label = 39; else {
   $133 = $__v;
   HEAP32[$133 >> 2] = $129;
   HEAP32[$133 + 4 >> 2] = $130;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $151 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $147 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $148 = __THREW__;
    __THREW__ = 0;
    if ($148 & 1) {
     label = 39;
     break;
    }
    if (($147 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $151 = 0;
    } else $151 = $$lcssa;
   } else $151 = $$lcssa;
   $152 = ($151 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $162 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $163 = __THREW__;
     __THREW__ = 0;
     if ($163 & 1) {
      label = 39;
      break L8;
     }
     if (($162 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$152) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($152) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $151;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $121 = 0, $126 = 0, $129 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $146 = 0, $147 = 0, $157 = 0, $158 = 0, $16 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $16;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i4) $33 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i4;
   } else $33 = $$pre$i$i$i4;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $163 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi30Z2D; else $81 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $163;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i4 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($119) {
   $121 = HEAP32[$__g_end >> 2] | 0;
   if (($121 - $__g | 0) < 160) {
    $126 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $121 + 4;
    HEAP32[$121 >> 2] = $126;
   }
  }
  __THREW__ = 0;
  $129 = invoke_iiiii(18, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $130 = __THREW__;
  __THREW__ = 0;
  if ($130 & 1) label = 39; else {
   HEAP16[$__v >> 1] = $129;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $146 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $142 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $143 = __THREW__;
    __THREW__ = 0;
    if ($143 & 1) {
     label = 39;
     break;
    }
    if (($142 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $146 = 0;
    } else $146 = $$lcssa;
   } else $146 = $$lcssa;
   $147 = ($146 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 39;
      break L8;
     }
     if (($157 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$147) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($147) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $146;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $121 = 0, $126 = 0, $129 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $146 = 0, $147 = 0, $157 = 0, $158 = 0, $16 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $16;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i4) $33 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i4;
   } else $33 = $$pre$i$i$i4;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $163 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi30Z2D; else $81 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $163;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i4 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($119) {
   $121 = HEAP32[$__g_end >> 2] | 0;
   if (($121 - $__g | 0) < 160) {
    $126 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $121 + 4;
    HEAP32[$121 >> 2] = $126;
   }
  }
  __THREW__ = 0;
  $129 = invoke_iiiii(20, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $130 = __THREW__;
  __THREW__ = 0;
  if ($130 & 1) label = 39; else {
   HEAP32[$__v >> 2] = $129;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $146 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $142 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $143 = __THREW__;
    __THREW__ = 0;
    if ($143 & 1) {
     label = 39;
     break;
    }
    if (($142 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $146 = 0;
    } else $146 = $$lcssa;
   } else $146 = $$lcssa;
   $147 = ($146 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 39;
      break L8;
     }
     if (($157 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$147) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($147) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $146;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $121 = 0, $126 = 0, $129 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $146 = 0, $147 = 0, $157 = 0, $158 = 0, $16 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $16;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i4) $33 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i4;
   } else $33 = $$pre$i$i$i4;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $163 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi30Z2D; else $81 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $163;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i4 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($119) {
   $121 = HEAP32[$__g_end >> 2] | 0;
   if (($121 - $__g | 0) < 160) {
    $126 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $121 + 4;
    HEAP32[$121 >> 2] = $126;
   }
  }
  __THREW__ = 0;
  $129 = invoke_iiiii(19, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $130 = __THREW__;
  __THREW__ = 0;
  if ($130 & 1) label = 39; else {
   HEAP32[$__v >> 2] = $129;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $146 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $142 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $143 = __THREW__;
    __THREW__ = 0;
    if ($143 & 1) {
     label = 39;
     break;
    }
    if (($142 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $146 = 0;
    } else $146 = $$lcssa;
   } else $146 = $$lcssa;
   $147 = ($146 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 39;
      break L8;
     }
     if (($157 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$147) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($147) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $146;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0, $q_sroa_1_1198$looptemp = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (!$n_sroa_1_4_extract_trunc) {
  $4 = ($rem | 0) != 0;
  if (!$d_sroa_1_4_extract_trunc) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do if (!$d_sroa_0_0_extract_trunc) {
  if ($17) {
   if ($rem) {
    HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  if (!$n_sroa_0_0_extract_trunc) {
   if ($rem) {
    HEAP32[$rem >> 2] = 0;
    HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
  if (!($37 & $d_sroa_1_4_extract_trunc)) {
   if ($rem) {
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
   }
   $_0$1 = 0;
   $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $51 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
  if ($51 >>> 0 <= 30) {
   $57 = $51 + 1 | 0;
   $58 = 31 - $51 | 0;
   $sr_1_ph = $57;
   $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
   $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
   $q_sroa_0_1_ph = 0;
   $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
   break;
  }
  if (!$rem) {
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  HEAP32[$rem >> 2] = $a$0 | 0;
  HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
  $_0$1 = 0;
  $_0$0 = 0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
 } else {
  if (!$17) {
   $119 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($119 >>> 0 <= 31) {
    $125 = $119 + 1 | 0;
    $126 = 31 - $119 | 0;
    $130 = $119 - 31 >> 31;
    $sr_1_ph = $125;
    $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
    break;
   }
   if (!$rem) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
  if ($66 & $d_sroa_0_0_extract_trunc) {
   $88 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   $89 = 64 - $88 | 0;
   $91 = 32 - $88 | 0;
   $92 = $91 >> 31;
   $95 = $88 - 32 | 0;
   $105 = $95 >> 31;
   $sr_1_ph = $88;
   $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
   $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
   $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
   $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
   break;
  }
  if ($rem) {
   HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
   HEAP32[$rem + 4 >> 2] = 0;
  }
  if (($d_sroa_0_0_extract_trunc | 0) == 1) {
   $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$0 = $a$0 | 0 | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
   $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
   $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 } while (0);
 if (!$sr_1_ph) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
  $137$1 = tempRet0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  do {
   $q_sroa_1_1198$looptemp = $q_sroa_1_1198;
   $q_sroa_1_1198 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $q_sroa_0_1199 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198$looptemp >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
   $150$1 = tempRet0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $carry_0203 = $151$0 & 1;
   $r_sroa_0_1201 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
   $r_sroa_1_1200 = tempRet0;
   $sr_1202 = $sr_1202 - 1 | 0;
  } while (($sr_1202 | 0) != 0);
  $q_sroa_1_1_lcssa = $q_sroa_1_1198;
  $q_sroa_0_1_lcssa = $q_sroa_0_1199;
  $r_sroa_1_1_lcssa = $r_sroa_1_1200;
  $r_sroa_0_1_lcssa = $r_sroa_0_1201;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $carry_0203;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if ($rem) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $103 = 0, $109 = 0, $112 = 0, $119 = 0, $121 = 0, $126 = 0, $129 = 0, $130 = 0, $14 = 0, $142 = 0, $143 = 0, $146 = 0, $147 = 0, $157 = 0, $158 = 0, $16 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $45 = 0, $46 = 0, $50 = 0, $52 = 0, $57 = 0, $59 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__buf + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L8 : do if ($9 & 1) label = 39; else {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $16 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $16;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $17 = $16;
  } else {
   $14 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $14;
   $17 = HEAP32[$14 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L14 : while (1) {
   if (!$$pre$i$i$i4) $33 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 38;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $33 = 0;
    } else $33 = $$pre$i$i$i4;
   } else $33 = $$pre$i$i$i4;
   $34 = ($33 | 0) == 0;
   $35 = HEAP32[$__e >> 2] | 0;
   do if (!$35) label = 22; else {
    if ((HEAP32[$35 + 12 >> 2] | 0) != (HEAP32[$35 + 16 >> 2] | 0)) if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
    __THREW__ = 0;
    $45 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     label = 38;
     break L14;
    }
    if (($45 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 22;
     break;
    } else if ($34) {
     $163 = $35;
     break;
    } else {
     $$lcssa = $33;
     $$pre$i2$i$i = $35;
     $__a$2 = $__a$0;
     break L14;
    }
   } while (0);
   if ((label | 0) == 22) {
    label = 0;
    if ($34) {
     $$lcssa = $33;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $163 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $52 = ($50 & 1) == 0;
   if ($52) $57 = ($50 & 255) >>> 1; else $57 = HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $57 | 0)) {
    if ($52) {
     $65 = ($50 & 255) >>> 1;
     $82 = ($50 & 255) >>> 1;
    } else {
     $59 = HEAP32[$18 >> 2] | 0;
     $65 = $59;
     $82 = $59;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 << 1 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = 10; else $73 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $73 | 0, 0);
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     label = 38;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $81 = $$pre$phi30Z2D; else $81 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $81 + $82;
    $__a$1 = $81;
   } else $__a$1 = $__a$0;
   $87 = $33 + 12 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   $89 = $33 + 16 | 0;
   if (($88 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    $95 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break;
    } else $$0$i$i = $95;
   } else $$0$i$i = HEAPU8[$88 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$lcssa = $33;
    $$pre$i2$i$i = $163;
    $__a$2 = $__a$1;
    break;
   }
   $103 = HEAP32[$87 >> 2] | 0;
   if (($103 | 0) == (HEAP32[$89 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 40 >> 2] | 0, $33 | 0) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     label = 38;
     break;
    }
   } else HEAP32[$87 >> 2] = $103 + 1;
   $$pre$i$i$i4 = $33;
   $__a$0 = $__a$1;
  }
  if ((label | 0) == 38) {
   $83 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $83;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $112 = HEAP8[$__grouping >> 0] | 0;
  if (!($112 & 1)) $119 = ($112 & 255) >>> 1; else $119 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($119) {
   $121 = HEAP32[$__g_end >> 2] | 0;
   if (($121 - $__g | 0) < 160) {
    $126 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $121 + 4;
    HEAP32[$121 >> 2] = $126;
   }
  }
  __THREW__ = 0;
  $129 = invoke_iiiii(16, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $130 = __THREW__;
  __THREW__ = 0;
  if ($130 & 1) label = 39; else {
   HEAP32[$__v >> 2] = $129;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$lcssa) $146 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $142 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
    $143 = __THREW__;
    __THREW__ = 0;
    if ($143 & 1) {
     label = 39;
     break;
    }
    if (($142 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $146 = 0;
    } else $146 = $$lcssa;
   } else $146 = $$lcssa;
   $147 = ($146 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 67; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 39;
      break L8;
     }
     if (($157 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 67;
      break;
     }
    }
    if (!$147) label = 68;
   } while (0);
   if ((label | 0) == 67) if ($147) label = 68;
   if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $146;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 39) {
  $85 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $85;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $$$0 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i4 = 0, $$0$i$i9 = 0, $$01$i$i = 0, $$2 = 0, $$lcssa = 0, $$pn = 0, $0 = 0, $1 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $107 = 0, $112 = 0, $121 = 0, $122 = 0, $124 = 0, $127 = 0, $128 = 0, $130 = 0, $134 = 0, $136 = 0, $140 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $152 = 0, $153 = 0, $157 = 0, $157$phi = 0, $160 = 0, $18 = 0, $19 = 0, $21 = 0, $23 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $54 = 0, $6 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $74 = 0, $76 = 0, $79 = 0, $8 = 0, $80 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $95 = 0, $__d$0 = 0, $__d$0$lcssa = 0, $__d$1 = 0, $__d$1$lcssa = 0, $__d$2 = 0, $__d$3 = 0, $__f$0 = 0, $__f$0$lcssa = 0, $__f$1 = 0, $__gl$0 = 0, $__gl$0$ph = 0, $__gl$1 = 0, $__ig$0 = 0, $__ig$1 = 0, $__me$promoted = 0, $__ng$0 = 0, $__ng$1 = 0, $__p$0 = 0;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__sn + 4 | 0;
 $1 = $__sn + 8 | 0;
 $3 = ($__flags & 512 | 0) == 0;
 $4 = $__sym + 4 | 0;
 $5 = $__sym + 8 | 0;
 $6 = ($__fd | 0) > 0;
 $7 = $__grp + 1 | 0;
 $8 = $__grp + 8 | 0;
 $9 = $__grp + 4 | 0;
 $$0 = $__db;
 $__p$0 = 0;
 while (1) {
  if (($__p$0 | 0) == 4) break;
  switch (HEAP8[$__pat + $__p$0 >> 0] | 0) {
  case 3:
   {
    $21 = HEAP8[$__sn >> 0] | 0;
    $23 = ($21 & 1) == 0;
    if ($23) $27 = ($21 & 255) >>> 1; else $27 = HEAP32[$0 >> 2] | 0;
    if (!$27) $$2 = $$0; else {
     $30 = HEAP32[($23 ? $0 : HEAP32[$1 >> 2] | 0) >> 2] | 0;
     $31 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $31 + 4;
     HEAP32[$31 >> 2] = $30;
     $$2 = $$0;
    }
    break;
   }
  case 1:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 63]($__ct, 32) | 0;
    $19 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $19 + 4;
    HEAP32[$19 >> 2] = $18;
    $$2 = $$0;
    break;
   }
  case 0:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $$2 = $$0;
    break;
   }
  case 4:
   {
    $54 = HEAP32[$__me >> 2] | 0;
    $$$0 = $__neg ? $$0 + 4 | 0 : $$0;
    $__d$0 = $$$0;
    while (1) {
     if ($__d$0 >>> 0 >= $__de >>> 0) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, HEAP32[$__d$0 >> 2] | 0) | 0)) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     $__d$0 = $__d$0 + 4 | 0;
    }
    if ($6) {
     $__d$1 = $__d$0$lcssa;
     $__f$0 = $__fd;
     while (1) {
      $64 = ($__f$0 | 0) > 0;
      if (!($__d$1 >>> 0 > $$$0 >>> 0 & $64)) {
       $$lcssa = $64;
       $__d$1$lcssa = $__d$1;
       $__f$0$lcssa = $__f$0;
       break;
      }
      $65 = $__d$1 + -4 | 0;
      $66 = HEAP32[$65 >> 2] | 0;
      $67 = HEAP32[$__me >> 2] | 0;
      HEAP32[$__me >> 2] = $67 + 4;
      HEAP32[$67 >> 2] = $66;
      $__d$1 = $65;
      $__f$0 = $__f$0 + -1 | 0;
     }
     if ($$lcssa) $80 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 63]($__ct, 48) | 0; else $80 = 0;
     $__me$promoted = HEAP32[$__me >> 2] | 0;
     $74 = ~$__f$0$lcssa;
     $76 = $__f$0$lcssa + (($74 | 0) > -1 ? $74 : -1) | 0;
     $79 = $__me$promoted;
     $__f$1 = $__f$0$lcssa;
     while (1) {
      if (($__f$1 | 0) <= 0) break;
      HEAP32[$79 >> 2] = $80;
      $79 = $79 + 4 | 0;
      $__f$1 = $__f$1 + -1 | 0;
     }
     HEAP32[$__me >> 2] = $__me$promoted + ($76 + 2 << 2);
     HEAP32[$__me$promoted + ($76 + 1 << 2) >> 2] = $__dp;
     $__d$2 = $__d$1$lcssa;
    } else $__d$2 = $__d$0$lcssa;
    if (($__d$2 | 0) == ($$$0 | 0)) {
     $86 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 63]($__ct, 48) | 0;
     $87 = HEAP32[$__me >> 2] | 0;
     $88 = $87 + 4 | 0;
     HEAP32[$__me >> 2] = $88;
     HEAP32[$87 >> 2] = $86;
     $127 = $88;
    } else {
     $89 = HEAP8[$__grp >> 0] | 0;
     $91 = ($89 & 1) == 0;
     if ($91) $95 = ($89 & 255) >>> 1; else $95 = HEAP32[$9 >> 2] | 0;
     if (!$95) $__gl$0$ph = -1; else $__gl$0$ph = HEAP8[($91 ? $7 : HEAP32[$8 >> 2] | 0) >> 0] | 0;
     $__d$3 = $__d$2;
     $__gl$0 = $__gl$0$ph;
     $__ig$0 = 0;
     $__ng$0 = 0;
     while (1) {
      if (($__d$3 | 0) == ($$$0 | 0)) break;
      $102 = HEAP32[$__me >> 2] | 0;
      if (($__ng$0 | 0) == ($__gl$0 | 0)) {
       $103 = $102 + 4 | 0;
       HEAP32[$__me >> 2] = $103;
       HEAP32[$102 >> 2] = $__ts;
       $104 = $__ig$0 + 1 | 0;
       $105 = HEAP8[$__grp >> 0] | 0;
       $107 = ($105 & 1) == 0;
       if ($107) $112 = ($105 & 255) >>> 1; else $112 = HEAP32[$9 >> 2] | 0;
       if ($104 >>> 0 < $112 >>> 0) if ((HEAP8[($107 ? $7 : HEAP32[$8 >> 2] | 0) + $104 >> 0] | 0) == 127) {
        $124 = $103;
        $__gl$1 = -1;
        $__ig$1 = $104;
        $__ng$1 = 0;
       } else {
        $124 = $103;
        $__gl$1 = HEAP8[($107 ? $7 : HEAP32[$8 >> 2] | 0) + $104 >> 0] | 0;
        $__ig$1 = $104;
        $__ng$1 = 0;
       } else {
        $124 = $103;
        $__gl$1 = $__ng$0;
        $__ig$1 = $104;
        $__ng$1 = 0;
       }
      } else {
       $124 = $102;
       $__gl$1 = $__gl$0;
       $__ig$1 = $__ig$0;
       $__ng$1 = $__ng$0;
      }
      $121 = $__d$3 + -4 | 0;
      $122 = HEAP32[$121 >> 2] | 0;
      HEAP32[$__me >> 2] = $124 + 4;
      HEAP32[$124 >> 2] = $122;
      $__d$3 = $121;
      $__gl$0 = $__gl$1;
      $__ig$0 = $__ig$1;
      $__ng$0 = $__ng$1 + 1 | 0;
     }
     $127 = HEAP32[$__me >> 2] | 0;
    }
    if (($54 | 0) == ($127 | 0)) $$2 = $$$0; else {
     $$0$i$i4 = $127;
     $$01$i$i = $54;
     while (1) {
      $128 = $$0$i$i4 + -4 | 0;
      if ($$01$i$i >>> 0 >= $128 >>> 0) break;
      $130 = HEAP32[$$01$i$i >> 2] | 0;
      HEAP32[$$01$i$i >> 2] = HEAP32[$128 >> 2];
      HEAP32[$128 >> 2] = $130;
      $$0$i$i4 = $128;
      $$01$i$i = $$01$i$i + 4 | 0;
     }
     $$2 = $$$0;
    }
    break;
   }
  case 2:
   {
    $33 = HEAP8[$__sym >> 0] | 0;
    $35 = ($33 & 1) == 0;
    if ($35) $39 = ($33 & 255) >>> 1; else $39 = HEAP32[$4 >> 2] | 0;
    if ($3 | ($39 | 0) == 0) $$2 = $$0; else {
     if ($35) {
      $46 = $4;
      $47 = ($33 & 255) >>> 1;
     } else {
      $46 = HEAP32[$5 >> 2] | 0;
      $47 = HEAP32[$4 >> 2] | 0;
     }
     $45 = $46 + ($47 << 2) | 0;
     $48 = HEAP32[$__me >> 2] | 0;
     $$0$i$i9 = $48;
     $49 = $46;
     while (1) {
      if (($49 | 0) == ($45 | 0)) break;
      HEAP32[$$0$i$i9 >> 2] = HEAP32[$49 >> 2];
      $$0$i$i9 = $$0$i$i9 + 4 | 0;
      $49 = $49 + 4 | 0;
     }
     HEAP32[$__me >> 2] = $48 + ($47 << 2);
     $$2 = $$0;
    }
    break;
   }
  default:
   $$2 = $$0;
  }
  $$0 = $$2;
  $__p$0 = $__p$0 + 1 | 0;
 }
 $134 = HEAP8[$__sn >> 0] | 0;
 $136 = ($134 & 1) == 0;
 if ($136) $140 = ($134 & 255) >>> 1; else $140 = HEAP32[$0 >> 2] | 0;
 if ($140 >>> 0 > 1) {
  if ($136) {
   $$pn = $0;
   $148 = ($134 & 255) >>> 1;
  } else {
   $$pn = HEAP32[$1 >> 2] | 0;
   $148 = HEAP32[$0 >> 2] | 0;
  }
  $146 = $$pn + 4 | 0;
  $147 = $$pn + ($148 << 2) | 0;
  $149 = HEAP32[$__me >> 2] | 0;
  $152 = $147 - $146 | 0;
  $$0$i$i = $149;
  $153 = $146;
  $157 = $$pn;
  while (1) {
   if (($153 | 0) == ($147 | 0)) break;
   HEAP32[$$0$i$i >> 2] = HEAP32[$153 >> 2];
   $157$phi = $153;
   $$0$i$i = $$0$i$i + 4 | 0;
   $153 = $157 + 8 | 0;
   $157 = $157$phi;
  }
  HEAP32[$__me >> 2] = $149 + ($152 >>> 2 << 2);
 }
 $160 = $__flags & 176;
 if (($160 | 0) == 32) HEAP32[$__mi >> 2] = HEAP32[$__me >> 2]; else if (($160 | 0) != 16) HEAP32[$__mi >> 2] = $__mb;
 return;
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($agg$result, $this, $__s, $__intl, $__iob, $__fl, $__units) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pn = 0, $0 = 0, $1 = 0, $100 = 0, $101 = 0, $108 = 0, $11 = 0, $111 = 0, $112 = 0, $113 = 0, $117 = 0, $119 = 0, $121 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $3 = 0, $30 = 0, $4 = 0, $42 = 0, $43 = 0, $45 = 0, $49 = 0, $56 = 0, $6 = 0, $65 = 0, $67 = 0, $68 = 0, $7 = 0, $75 = 0, $83 = 0, $85 = 0, $86 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, $95 = 0, $97 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i4 = 0, $__i$0$i$i6 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008 | 0;
 $$byval_copy = sp + 8 | 0;
 $vararg_buffer1 = sp;
 $__buf = sp + 896 | 0;
 $__bb = sp + 888 | 0;
 $__digits = sp + 488 | 0;
 $__loc = sp + 480 | 0;
 $__pat = sp + 892 | 0;
 $__dp = sp + 476 | 0;
 $__ts = sp + 472 | 0;
 $__grp = sp + 460 | 0;
 $__sym = sp + 448 | 0;
 $__sn = sp + 436 | 0;
 $__fd = sp + 432 | 0;
 $__mbuf = sp + 32 | 0;
 $__mi = sp + 24 | 0;
 $__me = sp + 20 | 0;
 $0 = sp + 16 | 0;
 HEAP32[$__bb >> 2] = $__buf;
 HEAPF64[tempDoublePtr >> 3] = $__units;
 HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
 $1 = _snprintf($__buf, 100, 49960, $$byval_copy) | 0;
 do if ($1 >>> 0 > 99) {
  __THREW__ = 0;
  $3 = invoke_i(2) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $124 = 0;
   $125 = 0;
   label = 7;
  } else {
   __THREW__ = 0;
   HEAPF64[tempDoublePtr >> 3] = $__units;
   HEAP32[$vararg_buffer1 >> 2] = HEAP32[tempDoublePtr >> 2];
   HEAP32[$vararg_buffer1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
   $6 = invoke_iiiii(12, $__bb | 0, $3 | 0, 49960, $vararg_buffer1 | 0) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $124 = 0;
    $125 = 0;
    label = 7;
   } else {
    $9 = HEAP32[$__bb >> 2] | 0;
    if (!$9) {
     __THREW__ = 0;
     invoke_v(7);
     $11 = __THREW__;
     __THREW__ = 0;
     if ($11 & 1) {
      $124 = 0;
      $125 = 0;
      label = 7;
      break;
     }
     $126 = HEAP32[$__bb >> 2] | 0;
    } else $126 = $9;
    $16 = _malloc($6 << 2) | 0;
    if (!$16) {
     __THREW__ = 0;
     invoke_v(7);
     $18 = __THREW__;
     __THREW__ = 0;
     if ($18 & 1) {
      $124 = $126;
      $125 = 0;
      label = 7;
     } else {
      $117 = 0;
      $119 = $126;
      $__db$0 = 0;
      $__n$0 = $6;
      label = 10;
     }
    } else {
     $117 = $16;
     $119 = $126;
     $__db$0 = $16;
     $__n$0 = $6;
     label = 10;
    }
   }
  }
 } else {
  $117 = 0;
  $119 = 0;
  $__db$0 = $__digits;
  $__n$0 = $1;
  label = 10;
 } while (0);
 if ((label | 0) == 10) {
  __THREW__ = 0;
  invoke_vii(47, $__loc | 0, $__iob | 0);
  $20 = __THREW__;
  __THREW__ = 0;
  if ($20 & 1) {
   $124 = $119;
   $125 = $117;
   label = 7;
  } else {
   __THREW__ = 0;
   $22 = invoke_iii(22, $__loc | 0, 50200) | 0;
   $23 = __THREW__;
   __THREW__ = 0;
   if ($23 & 1) label = 44; else {
    $25 = HEAP32[$__bb >> 2] | 0;
    __THREW__ = 0;
    invoke_iiiii(HEAP32[(HEAP32[$22 >> 2] | 0) + 48 >> 2] | 0, $22 | 0, $25 | 0, $25 + $__n$0 | 0, $__db$0 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) label = 44; else {
     if (!$__n$0) $42 = 0; else $42 = (HEAP8[HEAP32[$__bb >> 2] >> 0] | 0) == 45;
     $__i$0$i$i = 0;
     while (1) {
      if (($__i$0$i$i | 0) == 3) break;
      HEAP32[$__grp + ($__i$0$i$i << 2) >> 2] = 0;
      $__i$0$i$i = $__i$0$i$i + 1 | 0;
     }
     $__i$0$i$i4 = 0;
     while (1) {
      if (($__i$0$i$i4 | 0) == 3) break;
      HEAP32[$__sym + ($__i$0$i$i4 << 2) >> 2] = 0;
      $__i$0$i$i4 = $__i$0$i$i4 + 1 | 0;
     }
     $__i$0$i$i6 = 0;
     while (1) {
      if (($__i$0$i$i6 | 0) == 3) break;
      HEAP32[$__sn + ($__i$0$i$i6 << 2) >> 2] = 0;
      $__i$0$i$i6 = $__i$0$i$i6 + 1 | 0;
     }
     __THREW__ = 0;
     invoke_viiiiiiiiii(4, $__intl | 0, $42 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
     $43 = __THREW__;
     __THREW__ = 0;
     do if ($43 & 1) {
      $97 = ___cxa_find_matching_catch() | 0;
      $$0 = $97;
      $$01 = tempRet0;
     } else {
      $45 = HEAP32[$__fd >> 2] | 0;
      if (($__n$0 | 0) > ($45 | 0)) {
       $49 = HEAP8[$__sn >> 0] | 0;
       if (!($49 & 1)) $65 = ($49 & 255) >>> 1; else $65 = HEAP32[$__sn + 4 >> 2] | 0;
       $56 = HEAP8[$__sym >> 0] | 0;
       if (!($56 & 1)) $67 = ($56 & 255) >>> 1; else $67 = HEAP32[$__sym + 4 >> 2] | 0;
       $$pn = $65 + ($__n$0 - $45 << 1 | 1) + $67 | 0;
      } else {
       $68 = HEAP8[$__sn >> 0] | 0;
       if (!($68 & 1)) $83 = ($68 & 255) >>> 1; else $83 = HEAP32[$__sn + 4 >> 2] | 0;
       $75 = HEAP8[$__sym >> 0] | 0;
       if (!($75 & 1)) $85 = ($75 & 255) >>> 1; else $85 = HEAP32[$__sym + 4 >> 2] | 0;
       $$pn = $83 + 2 + $85 | 0;
      }
      $86 = $$pn + $45 | 0;
      if ($86 >>> 0 > 100) {
       $89 = _malloc($86 << 2) | 0;
       if (!$89) {
        __THREW__ = 0;
        invoke_v(7);
        $91 = __THREW__;
        __THREW__ = 0;
        if ($91 & 1) {
         $93 = ___cxa_find_matching_catch() | 0;
         $$0 = $93;
         $$01 = tempRet0;
         break;
        } else {
         $101 = 0;
         $__mb$0 = 0;
        }
       } else {
        $101 = $89;
        $__mb$0 = $89;
       }
      } else {
       $101 = 0;
       $__mb$0 = $__mbuf;
      }
      __THREW__ = 0;
      invoke_viiiiiiiiiiiiiii(2, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $__db$0 | 0, $__db$0 + ($__n$0 << 2) | 0, $22 | 0, $42 | 0, $__pat | 0, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $45 | 0);
      $108 = __THREW__;
      __THREW__ = 0;
      if (!($108 & 1)) {
       HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
       $111 = HEAP32[$__mi >> 2] | 0;
       $112 = HEAP32[$__me >> 2] | 0;
       __THREW__ = 0;
       HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
       invoke_viiiiiii(45, $agg$result | 0, $$byval_copy | 0, $__mb$0 | 0, $111 | 0, $112 | 0, $__iob | 0, $__fl | 0);
       $113 = __THREW__;
       __THREW__ = 0;
       if (!($113 & 1)) {
        if ($101) _free($101);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
        __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
        if ($117) _free($117);
        _free($119);
        STACKTOP = sp;
        return;
       }
      }
      $99 = ___cxa_find_matching_catch() | 0;
      $100 = tempRet0;
      if (!$101) {
       $$0 = $99;
       $$01 = $100;
      } else {
       _free($101);
       $$0 = $99;
       $$01 = $100;
      }
     } while (0);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;
     $$12 = $$01;
    }
   }
   if ((label | 0) == 44) {
    $95 = ___cxa_find_matching_catch() | 0;
    $$1 = $95;
    $$12 = tempRet0;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
   $$2 = $$1;
   $$23 = $$12;
   $121 = $117;
   $123 = $119;
  }
 }
 if ((label | 0) == 7) {
  $13 = ___cxa_find_matching_catch() | 0;
  $$2 = $13;
  $$23 = tempRet0;
  $121 = $125;
  $123 = $124;
 }
 if ($121) _free($121);
 _free($123);
 ___resumeException($$2 | 0);
}
function __ZN12_GLOBAL__N_111InterpreterC2EP9AllocatorRKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE5VmExtNS3_4lessISA_EENS8_INS3_4pairIKSA_SB_EEEEEEjddPFPcPvPKcSO_PSL_PiESM_($this, $alloc, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $import_callback_context) {
 $this = $this | 0;
 $alloc = $alloc | 0;
 $ext_vars = $ext_vars | 0;
 $max_stack = $max_stack | 0;
 $gc_min_objects = +$gc_min_objects;
 $gc_growth_trigger = +$gc_growth_trigger;
 $import_callback = $import_callback | 0;
 $import_callback_context = $import_callback_context | 0;
 var $$0 = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$01 = 0, $$01$i$i$i$i$i = 0, $$byval_copy = 0, $$cast$i$i$i$i$i$lcssa = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$i$i$lcssa = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val$i$i$lcssa = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa = 0, $$lcssa$i$i = 0, $$sroa$2 = 0, $0 = 0, $1 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $32 = 0, $33 = 0, $36 = 0, $37 = 0, $39 = 0, $42 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $60 = 0, $63 = 0, $67 = 0, $7 = 0, $76 = 0, $81 = 0, $83 = 0, $87 = 0, $91 = 0, $94 = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $$byval_copy = sp + 32 | 0;
 $0 = sp + 28 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 12 | 0;
 $$sroa$2 = sp;
 HEAP32[$this >> 2] = ~~$gc_min_objects >>> 0;
 HEAPF64[$this + 8 >> 3] = $gc_growth_trigger;
 $5 = $this + 16 | 0;
 HEAP8[$5 >> 0] = 0;
 $6 = $this + 20 | 0;
 HEAP32[$6 + 0 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$6 + 12 >> 2] = 0;
 HEAP32[$6 + 16 >> 2] = 0;
 $7 = $this + 56 | 0;
 HEAP32[$7 >> 2] = 39384;
 HEAP32[$this + 60 >> 2] = 0;
 HEAP32[$this + 64 >> 2] = $max_stack;
 HEAP32[$this + 68 >> 2] = 0;
 HEAP32[$this + 72 >> 2] = 0;
 HEAP32[$this + 76 >> 2] = 0;
 HEAP32[$this + 80 >> 2] = $alloc;
 $14 = $this + 84 | 0;
 __THREW__ = 0;
 invoke_viii(3, $2 | 0, 42016, 13);
 $15 = __THREW__;
 __THREW__ = 0;
 do if ($15 & 1) {
  $50 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $50;
 } else {
  __THREW__ = 0;
  $17 = invoke_iii(23, $alloc | 0, $2 | 0) | 0;
  $18 = __THREW__;
  __THREW__ = 0;
  if ($18 & 1) {
   $52 = ___cxa_find_matching_catch() | 0;
   $53 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $$0 = $53;
   $$01 = $52;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  HEAP32[$14 >> 2] = $17;
  $20 = $this + 88 | 0;
  HEAP32[$this + 92 >> 2] = 0;
  HEAP32[$this + 96 >> 2] = 0;
  $23 = $this + 92 | 0;
  HEAP32[$20 >> 2] = $23;
  $24 = $this + 100 | 0;
  HEAP32[$this + 104 >> 2] = 0;
  HEAP32[$this + 108 >> 2] = 0;
  $27 = $this + 104 | 0;
  HEAP32[$24 >> 2] = $27;
  $28 = HEAP32[$ext_vars >> 2] | 0;
  $29 = $ext_vars + 4 | 0;
  if (($28 | 0) == ($29 | 0)) {
   $46 = $this + 112 | 0;
   HEAP32[$46 >> 2] = $import_callback;
   $47 = $this + 116 | 0;
   HEAP32[$47 >> 2] = $import_callback_context;
   $48 = $this + 40 | 0;
   HEAP32[$48 >> 2] = 0;
   $49 = $this + 44 | 0;
   HEAP32[$49 + 0 >> 2] = HEAP32[$$sroa$2 + 0 >> 2];
   HEAP32[$49 + 4 >> 2] = HEAP32[$$sroa$2 + 4 >> 2];
   HEAP32[$49 + 8 >> 2] = HEAP32[$$sroa$2 + 8 >> 2];
   STACKTOP = sp;
   return;
  }
  $32 = $28;
  $36 = $28;
  while (1) {
   HEAP32[$0 >> 2] = $27;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   invoke_viiii(18, $1 | 0, $24 | 0, $$byval_copy | 0, $32 + 16 | 0);
   $33 = __THREW__;
   __THREW__ = 0;
   if ($33 & 1) {
    label = 18;
    break;
   }
   $37 = HEAP32[$36 + 4 >> 2] | 0;
   if (!$37) {
    $$0$i$i$i$i$i = $36;
    while (1) {
     $42 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$42 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$lcssa = $42;
      break;
     } else $$0$i$i$i$i$i = $42;
    }
    $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i = $37;
    while (1) {
     $39 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$39) {
      $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $39;
    }
    $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i | 0) == ($29 | 0)) break; else {
    $32 = $$01$i$i$i$i$i;
    $36 = $$01$i$i$i$i$i;
   }
  }
  if ((label | 0) == 18) {
   $54 = ___cxa_find_matching_catch() | 0;
   $55 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($24, HEAP32[$27 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKN12_GLOBAL__N_111Interpreter16ImportCacheValueEEENS_19__map_value_compareIS9_SF_NS_4lessIS9_EELb1EEENS6_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE($20, HEAP32[$23 >> 2] | 0);
   $$0 = $55;
   $$01 = $54;
   break;
  }
  $46 = $this + 112 | 0;
  HEAP32[$46 >> 2] = $import_callback;
  $47 = $this + 116 | 0;
  HEAP32[$47 >> 2] = $import_callback_context;
  $48 = $this + 40 | 0;
  HEAP32[$48 >> 2] = 0;
  $49 = $this + 44 | 0;
  HEAP32[$49 + 0 >> 2] = HEAP32[$$sroa$2 + 0 >> 2];
  HEAP32[$49 + 4 >> 2] = HEAP32[$$sroa$2 + 4 >> 2];
  HEAP32[$49 + 8 >> 2] = HEAP32[$$sroa$2 + 8 >> 2];
  STACKTOP = sp;
  return;
 } while (0);
 HEAP32[$7 >> 2] = 39384;
 __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($this + 68 | 0);
 $60 = (HEAP8[$5 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$5 >> 0] = $60;
 $$idx6$val11$i$i = HEAP32[$6 >> 2] | 0;
 $$idx7$i$i = $this + 24 | 0;
 $$idx7$val12$i$i = HEAP32[$$idx7$i$i >> 2] | 0;
 if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) {
  $$lcssa$i$i = 0;
  $91 = $$idx6$val11$i$i;
  $94 = $$idx6$val11$i$i;
 } else {
  $$idx6$val14$i$i = $$idx6$val11$i$i;
  $$idx7$val18$i$i = $$idx7$val12$i$i;
  $67 = $60;
  $i$013$i$i = 0;
  while (1) {
   $63 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
   if ((HEAP8[$63 + 4 >> 0] | 0) == $67 << 24 >> 24) {
    $$idx6$val$i$i = $$idx6$val14$i$i;
    $$idx7$val$i$i = $$idx7$val18$i$i;
    $i$1$i$i = $i$013$i$i;
   } else {
    if (!$63) {
     $$idx4$val$i$i = $$idx6$val14$i$i;
     $$idx5$val$i$i = $$idx7$val18$i$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$63 >> 2] | 0) + 4 >> 2] & 255]($63);
     $$idx4$val$i$i = HEAP32[$6 >> 2] | 0;
     $$idx5$val$i$i = HEAP32[$$idx7$i$i >> 2] | 0;
    }
    $76 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
    if (($i$013$i$i | 0) == ($76 | 0)) {
     $$idx6$val$pre$i$i = $$idx4$val$i$i;
     $81 = $$idx5$val$i$i;
    } else {
     HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($76 << 2) >> 2];
     $$idx6$val$pre$i$i = HEAP32[$6 >> 2] | 0;
     $81 = HEAP32[$$idx7$i$i >> 2] | 0;
    }
    $scevgep4$i$i$i$i$i = $81 + -4 | 0;
    HEAP32[$$idx7$i$i >> 2] = $scevgep4$i$i$i$i$i;
    $$idx6$val$i$i = $$idx6$val$pre$i$i;
    $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
    $i$1$i$i = $i$013$i$i + -1 | 0;
   }
   $83 = $i$1$i$i + 1 | 0;
   $87 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
   if ($83 >>> 0 >= $87 >>> 0) {
    $$idx6$val$i$i$lcssa = $$idx6$val$i$i;
    $$idx7$val$i$i$lcssa = $$idx7$val$i$i;
    $$lcssa = $87;
    break;
   }
   $$idx6$val14$i$i = $$idx6$val$i$i;
   $$idx7$val18$i$i = $$idx7$val$i$i;
   $67 = HEAP8[$5 >> 0] | 0;
   $i$013$i$i = $83;
  }
  $$lcssa$i$i = $$lcssa;
  $91 = $$idx6$val$i$i$lcssa;
  $94 = $$idx7$val$i$i$lcssa;
 }
 HEAP32[$this + 36 >> 2] = $$lcssa$i$i;
 HEAP32[$this + 32 >> 2] = $$lcssa$i$i;
 if (!$91) ___resumeException($$01 | 0);
 if (($94 | 0) != ($91 | 0)) HEAP32[$$idx7$i$i >> 2] = $94 + (~(($94 + -4 - $91 | 0) >>> 2) << 2);
 __ZdlPv($91);
 ___resumeException($$01 | 0);
}

function _mbsrtowcs($ws, $src, $wn, $st) {
 $ws = $ws | 0;
 $src = $src | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$03$ph = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0, $$5 = 0, $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa = 0, $$lcssa53 = 0, $$lcssa54 = 0, $$lcssa55 = 0, $$lcssa59 = 0, $$lcssa61 = 0, $$lcssa62 = 0, $$lcssa63 = 0, $$lcssa67 = 0, $$lcssa69 = 0, $0 = 0, $101 = 0, $107 = 0, $108 = 0, $116 = 0, $118 = 0, $121 = 0, $126 = 0, $128 = 0, $131 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $27 = 0, $28 = 0, $33 = 0, $40 = 0, $47 = 0, $54 = 0, $63 = 0, $7 = 0, $71 = 0, $87 = 0, $90 = 0, $91 = 0, $93 = 0, $94 = 0, $97 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $s$0 = 0, $s$0$ph = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0, $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0, $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0;
 $0 = HEAP32[$src >> 2] | 0;
 if (!$st) label = 5; else {
  $2 = HEAP32[$st >> 2] | 0;
  if (!$2) label = 5; else if (!$ws) {
   $$36 = $wn;
   $c$2 = $2;
   $s$3 = $0;
   label = 20;
  } else {
   HEAP32[$st >> 2] = 0;
   $$3 = $ws;
   $$7 = $wn;
   $c$4 = $2;
   $s$8 = $0;
   label = 43;
  }
 }
 if ((label | 0) == 5) if (!$ws) {
  $$03$ph = $wn;
  $s$0$ph = $0;
  label = 6;
 } else {
  $$02$ph = $ws;
  $$47$ph = $wn;
  $s$5$ph = $0;
  label = 7;
 }
 L7 : while (1) if ((label | 0) == 6) {
  label = 0;
  $$03 = $$03$ph;
  $s$0 = $s$0$ph;
  while (1) {
   $7 = HEAP8[$s$0 >> 0] | 0;
   if ((($7 & 255) + -1 | 0) >>> 0 < 127) if (!($s$0 & 3)) {
    $14 = HEAP32[$s$0 >> 2] | 0;
    if (!(($14 + -16843009 | $14) & -2139062144)) {
     $$1415 = $$03;
     $s$116 = $s$0;
     while (1) {
      $19 = $s$116 + 4 | 0;
      $20 = $$1415 + -4 | 0;
      $21 = HEAP32[$19 >> 2] | 0;
      if (!(($21 + -16843009 | $21) & -2139062144)) {
       $$1415 = $20;
       $s$116 = $19;
      } else {
       $$lcssa = $19;
       $$lcssa53 = $20;
       $$lcssa54 = $21;
       break;
      }
     }
     $$14$lcssa = $$lcssa53;
     $$in = $$lcssa54;
     $s$1$lcssa = $$lcssa;
    } else {
     $$14$lcssa = $$03;
     $$in = $14;
     $s$1$lcssa = $s$0;
    }
    $$25 = $$14$lcssa;
    $28 = $$in & 255;
    $s$2 = $s$1$lcssa;
   } else {
    $$25 = $$03;
    $28 = $7;
    $s$2 = $s$0;
   } else {
    $$25 = $$03;
    $28 = $7;
    $s$2 = $s$0;
   }
   $27 = $28 & 255;
   if (($27 + -1 | 0) >>> 0 >= 127) {
    $$25$lcssa = $$25;
    $$lcssa55 = $27;
    $s$2$lcssa = $s$2;
    break;
   }
   $$03 = $$25 + -1 | 0;
   $s$0 = $s$2 + 1 | 0;
  }
  $33 = $$lcssa55 + -194 | 0;
  if ($33 >>> 0 > 50) {
   $$434 = $ws;
   $$833 = $$25$lcssa;
   $s$1035 = $s$2$lcssa;
   label = 54;
   break;
  }
  $$36 = $$25$lcssa;
  $c$2 = HEAP32[42712 + ($33 << 2) >> 2] | 0;
  $s$3 = $s$2$lcssa + 1 | 0;
  label = 20;
  continue;
 } else if ((label | 0) == 7) {
  label = 0;
  if (!$$47$ph) {
   $s$5$lcssa = $s$5$ph;
   label = 31;
   break;
  }
  $$0219 = $$02$ph;
  $$4718 = $$47$ph;
  $s$520 = $s$5$ph;
  while (1) {
   $63 = HEAP8[$s$520 >> 0] | 0;
   do if ((($63 & 255) + -1 | 0) >>> 0 < 127) if ($$4718 >>> 0 > 4 & ($s$520 & 3 | 0) == 0) {
    $$1 = $$0219;
    $$5 = $$4718;
    $s$6 = $s$520;
    while (1) {
     $71 = HEAP32[$s$6 >> 2] | 0;
     if (($71 + -16843009 | $71) & -2139062144) {
      $$1$lcssa = $$1;
      $$5$lcssa = $$5;
      $$lcssa59 = $71;
      $s$6$lcssa = $s$6;
      label = 38;
      break;
     }
     HEAP32[$$1 >> 2] = $71 & 255;
     HEAP32[$$1 + 4 >> 2] = HEAPU8[$s$6 + 1 >> 0];
     HEAP32[$$1 + 8 >> 2] = HEAPU8[$s$6 + 2 >> 0];
     $87 = $s$6 + 4 | 0;
     $90 = $$1 + 16 | 0;
     HEAP32[$$1 + 12 >> 2] = HEAPU8[$s$6 + 3 >> 0];
     $91 = $$5 + -4 | 0;
     if ($91 >>> 0 > 4) {
      $$1 = $90;
      $$5 = $91;
      $s$6 = $87;
     } else {
      $$lcssa61 = $87;
      $$lcssa62 = $90;
      $$lcssa63 = $91;
      label = 37;
      break;
     }
    }
    if ((label | 0) == 37) {
     label = 0;
     $$2 = $$lcssa62;
     $$6 = $$lcssa63;
     $94 = HEAP8[$$lcssa61 >> 0] | 0;
     $s$7 = $$lcssa61;
     break;
    } else if ((label | 0) == 38) {
     label = 0;
     $$2 = $$1$lcssa;
     $$6 = $$5$lcssa;
     $94 = $$lcssa59 & 255;
     $s$7 = $s$6$lcssa;
     break;
    }
   } else {
    $$2 = $$0219;
    $$6 = $$4718;
    $94 = $63;
    $s$7 = $s$520;
   } else {
    $$2 = $$0219;
    $$6 = $$4718;
    $94 = $63;
    $s$7 = $s$520;
   } while (0);
   $93 = $94 & 255;
   if (($93 + -1 | 0) >>> 0 >= 127) {
    $$2$lcssa = $$2;
    $$6$lcssa = $$6;
    $$lcssa67 = $93;
    $s$7$lcssa = $s$7;
    break;
   }
   $97 = $s$7 + 1 | 0;
   HEAP32[$$2 >> 2] = $93;
   $$4718 = $$6 + -1 | 0;
   if (!$$4718) {
    $$lcssa69 = $97;
    label = 30;
    break L7;
   } else {
    $$0219 = $$2 + 4 | 0;
    $s$520 = $97;
   }
  }
  $101 = $$lcssa67 + -194 | 0;
  if ($101 >>> 0 > 50) {
   $$434 = $$2$lcssa;
   $$833 = $$6$lcssa;
   $s$1035 = $s$7$lcssa;
   label = 54;
   break;
  }
  $$3 = $$2$lcssa;
  $$7 = $$6$lcssa;
  $c$4 = HEAP32[42712 + ($101 << 2) >> 2] | 0;
  $s$8 = $s$7$lcssa + 1 | 0;
  label = 43;
  continue;
 } else if ((label | 0) == 20) {
  label = 0;
  $40 = (HEAPU8[$s$3 >> 0] | 0) >>> 3;
  if (($40 + -16 | $40 + ($c$2 >> 26)) >>> 0 > 7) {
   label = 21;
   break;
  }
  $47 = $s$3 + 1 | 0;
  if (!($c$2 & 33554432)) $s$4 = $47; else {
   if ((HEAP8[$47 >> 0] & -64) << 24 >> 24 != -128) {
    label = 24;
    break;
   }
   $54 = $s$3 + 2 | 0;
   if (!($c$2 & 524288)) $s$4 = $54; else {
    if ((HEAP8[$54 >> 0] & -64) << 24 >> 24 != -128) {
     label = 27;
     break;
    }
    $s$4 = $s$3 + 3 | 0;
   }
  }
  $$03$ph = $$36 + -1 | 0;
  $s$0$ph = $s$4;
  label = 6;
  continue;
 } else if ((label | 0) == 43) {
  label = 0;
  $107 = HEAPU8[$s$8 >> 0] | 0;
  $108 = $107 >>> 3;
  if (($108 + -16 | $108 + ($c$4 >> 26)) >>> 0 > 7) {
   label = 44;
   break;
  }
  $116 = $s$8 + 1 | 0;
  $118 = $107 + -128 | $c$4 << 6;
  if (($118 | 0) < 0) {
   $121 = HEAPU8[$116 >> 0] | 0;
   if (($121 & 192 | 0) != 128) {
    label = 47;
    break;
   }
   $126 = $s$8 + 2 | 0;
   $128 = $121 + -128 | $118 << 6;
   if (($128 | 0) < 0) {
    $131 = HEAPU8[$126 >> 0] | 0;
    if (($131 & 192 | 0) != 128) {
     label = 50;
     break;
    }
    $c$5 = $131 + -128 | $128 << 6;
    $s$9 = $s$8 + 3 | 0;
   } else {
    $c$5 = $128;
    $s$9 = $126;
   }
  } else {
   $c$5 = $118;
   $s$9 = $116;
  }
  HEAP32[$$3 >> 2] = $c$5;
  $$02$ph = $$3 + 4 | 0;
  $$47$ph = $$7 + -1 | 0;
  $s$5$ph = $s$9;
  label = 7;
  continue;
 }
 if ((label | 0) == 21) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 53;
 } else if ((label | 0) == 24) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 53;
 } else if ((label | 0) == 27) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 53;
 } else if ((label | 0) == 30) {
  $s$5$lcssa = $$lcssa69;
  label = 31;
 } else if ((label | 0) == 44) {
  $$4 = $$3;
  $$8 = $$7;
  $c$6 = $c$4;
  $s$10 = $s$8 + -1 | 0;
  label = 53;
 } else if ((label | 0) == 47) {
  $$48 = $$3;
  $s$109 = $s$8 + -1 | 0;
 } else if ((label | 0) == 50) {
  $$48 = $$3;
  $s$109 = $s$8 + -1 | 0;
 }
 if ((label | 0) == 31) {
  HEAP32[$src >> 2] = $s$5$lcssa;
  $$0 = $wn;
  return $$0 | 0;
 } else if ((label | 0) == 53) if (!$c$6) {
  $$434 = $$4;
  $$833 = $$8;
  $s$1035 = $s$10;
  label = 54;
 } else {
  $$48 = $$4;
  $s$109 = $s$10;
 }
 if ((label | 0) == 54) if (!(HEAP8[$s$1035 >> 0] | 0)) {
  if ($$434) {
   HEAP32[$$434 >> 2] = 0;
   HEAP32[$src >> 2] = 0;
  }
  $$0 = $wn - $$833 | 0;
  return $$0 | 0;
 } else {
  $$48 = $$434;
  $s$109 = $s$1035;
 }
 HEAP32[(___errno_location() | 0) >> 2] = 84;
 if (!$$48) {
  $$0 = -1;
  return $$0 | 0;
 }
 HEAP32[$src >> 2] = $s$109;
 $$0 = -1;
 return $$0 | 0;
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($agg$result, $this, $__s, $__intl, $__iob, $__fl, $__units) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pn = 0, $0 = 0, $1 = 0, $105 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $113 = 0, $114 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $24 = 0, $29 = 0, $3 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $48 = 0, $55 = 0, $6 = 0, $64 = 0, $66 = 0, $67 = 0, $7 = 0, $74 = 0, $82 = 0, $84 = 0, $85 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, $95 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i6 = 0, $__i$0$i$i9 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 $$byval_copy = sp + 8 | 0;
 $vararg_buffer1 = sp;
 $__buf = sp + 284 | 0;
 $__bb = sp + 72 | 0;
 $__digits = sp + 184 | 0;
 $__loc = sp + 68 | 0;
 $__pat = sp + 180 | 0;
 $__dp = sp + 177 | 0;
 $__ts = sp + 176 | 0;
 $__grp = sp + 56 | 0;
 $__sym = sp + 44 | 0;
 $__sn = sp + 32 | 0;
 $__fd = sp + 28 | 0;
 $__mbuf = sp + 76 | 0;
 $__mi = sp + 24 | 0;
 $__me = sp + 20 | 0;
 $0 = sp + 16 | 0;
 HEAP32[$__bb >> 2] = $__buf;
 HEAPF64[tempDoublePtr >> 3] = $__units;
 HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
 $1 = _snprintf($__buf, 100, 49960, $$byval_copy) | 0;
 do if ($1 >>> 0 > 99) {
  __THREW__ = 0;
  $3 = invoke_i(2) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $118 = 0;
   $119 = 0;
   label = 7;
  } else {
   __THREW__ = 0;
   HEAPF64[tempDoublePtr >> 3] = $__units;
   HEAP32[$vararg_buffer1 >> 2] = HEAP32[tempDoublePtr >> 2];
   HEAP32[$vararg_buffer1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
   $6 = invoke_iiiii(12, $__bb | 0, $3 | 0, 49960, $vararg_buffer1 | 0) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $118 = 0;
    $119 = 0;
    label = 7;
   } else {
    $9 = HEAP32[$__bb >> 2] | 0;
    if (!$9) {
     __THREW__ = 0;
     invoke_v(7);
     $11 = __THREW__;
     __THREW__ = 0;
     if ($11 & 1) {
      $118 = 0;
      $119 = 0;
      label = 7;
      break;
     }
     $120 = HEAP32[$__bb >> 2] | 0;
    } else $120 = $9;
    $15 = _malloc($6) | 0;
    if (!$15) {
     __THREW__ = 0;
     invoke_v(7);
     $17 = __THREW__;
     __THREW__ = 0;
     if ($17 & 1) {
      $118 = $120;
      $119 = 0;
      label = 7;
     } else {
      $113 = 0;
      $114 = $120;
      $__db$0 = 0;
      $__n$0 = $6;
      label = 10;
     }
    } else {
     $113 = $15;
     $114 = $120;
     $__db$0 = $15;
     $__n$0 = $6;
     label = 10;
    }
   }
  }
 } else {
  $113 = 0;
  $114 = 0;
  $__db$0 = $__digits;
  $__n$0 = $1;
  label = 10;
 } while (0);
 if ((label | 0) == 10) {
  __THREW__ = 0;
  invoke_vii(47, $__loc | 0, $__iob | 0);
  $19 = __THREW__;
  __THREW__ = 0;
  if ($19 & 1) {
   $118 = $114;
   $119 = $113;
   label = 7;
  } else {
   __THREW__ = 0;
   $21 = invoke_iii(22, $__loc | 0, 50208) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) label = 44; else {
    $24 = HEAP32[$__bb >> 2] | 0;
    __THREW__ = 0;
    invoke_iiiii(HEAP32[(HEAP32[$21 >> 2] | 0) + 32 >> 2] | 0, $21 | 0, $24 | 0, $24 + $__n$0 | 0, $__db$0 | 0) | 0;
    $29 = __THREW__;
    __THREW__ = 0;
    if ($29 & 1) label = 44; else {
     if (!$__n$0) $41 = 0; else $41 = (HEAP8[HEAP32[$__bb >> 2] >> 0] | 0) == 45;
     $__i$0$i$i = 0;
     while (1) {
      if (($__i$0$i$i | 0) == 3) break;
      HEAP32[$__grp + ($__i$0$i$i << 2) >> 2] = 0;
      $__i$0$i$i = $__i$0$i$i + 1 | 0;
     }
     $__i$0$i$i6 = 0;
     while (1) {
      if (($__i$0$i$i6 | 0) == 3) break;
      HEAP32[$__sym + ($__i$0$i$i6 << 2) >> 2] = 0;
      $__i$0$i$i6 = $__i$0$i$i6 + 1 | 0;
     }
     $__i$0$i$i9 = 0;
     while (1) {
      if (($__i$0$i$i9 | 0) == 3) break;
      HEAP32[$__sn + ($__i$0$i$i9 << 2) >> 2] = 0;
      $__i$0$i$i9 = $__i$0$i$i9 + 1 | 0;
     }
     __THREW__ = 0;
     invoke_viiiiiiiiii(3, $__intl | 0, $41 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
     $42 = __THREW__;
     __THREW__ = 0;
     do if ($42 & 1) {
      $95 = ___cxa_find_matching_catch() | 0;
      $$0 = $95;
      $$01 = tempRet0;
     } else {
      $44 = HEAP32[$__fd >> 2] | 0;
      if (($__n$0 | 0) > ($44 | 0)) {
       $48 = HEAP8[$__sn >> 0] | 0;
       if (!($48 & 1)) $64 = ($48 & 255) >>> 1; else $64 = HEAP32[$__sn + 4 >> 2] | 0;
       $55 = HEAP8[$__sym >> 0] | 0;
       if (!($55 & 1)) $66 = ($55 & 255) >>> 1; else $66 = HEAP32[$__sym + 4 >> 2] | 0;
       $$pn = $64 + ($__n$0 - $44 << 1 | 1) + $66 | 0;
      } else {
       $67 = HEAP8[$__sn >> 0] | 0;
       if (!($67 & 1)) $82 = ($67 & 255) >>> 1; else $82 = HEAP32[$__sn + 4 >> 2] | 0;
       $74 = HEAP8[$__sym >> 0] | 0;
       if (!($74 & 1)) $84 = ($74 & 255) >>> 1; else $84 = HEAP32[$__sym + 4 >> 2] | 0;
       $$pn = $82 + 2 + $84 | 0;
      }
      $85 = $$pn + $44 | 0;
      if ($85 >>> 0 > 100) {
       $87 = _malloc($85) | 0;
       if (!$87) {
        __THREW__ = 0;
        invoke_v(7);
        $89 = __THREW__;
        __THREW__ = 0;
        if ($89 & 1) {
         $91 = ___cxa_find_matching_catch() | 0;
         $$0 = $91;
         $$01 = tempRet0;
         break;
        } else {
         $99 = 0;
         $__mb$0 = 0;
        }
       } else {
        $99 = $87;
        $__mb$0 = $87;
       }
      } else {
       $99 = 0;
       $__mb$0 = $__mbuf;
      }
      __THREW__ = 0;
      invoke_viiiiiiiiiiiiiii(1, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $__db$0 | 0, $__db$0 + $__n$0 | 0, $21 | 0, $41 | 0, $__pat | 0, HEAP8[$__dp >> 0] | 0, HEAP8[$__ts >> 0] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $44 | 0);
      $105 = __THREW__;
      __THREW__ = 0;
      if (!($105 & 1)) {
       HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
       $108 = HEAP32[$__mi >> 2] | 0;
       $109 = HEAP32[$__me >> 2] | 0;
       __THREW__ = 0;
       HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
       invoke_viiiiiii(39, $agg$result | 0, $$byval_copy | 0, $__mb$0 | 0, $108 | 0, $109 | 0, $__iob | 0, $__fl | 0);
       $110 = __THREW__;
       __THREW__ = 0;
       if (!($110 & 1)) {
        _free($99);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
        __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
        _free($113);
        _free($114);
        STACKTOP = sp;
        return;
       }
      }
      $97 = ___cxa_find_matching_catch() | 0;
      $98 = tempRet0;
      _free($99);
      $$0 = $97;
      $$01 = $98;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;
     $$12 = $$01;
    }
   }
   if ((label | 0) == 44) {
    $93 = ___cxa_find_matching_catch() | 0;
    $$1 = $93;
    $$12 = tempRet0;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
   $$2 = $$1;
   $$23 = $$12;
   $116 = $113;
   $117 = $114;
  }
 }
 if ((label | 0) == 7) {
  $13 = ___cxa_find_matching_catch() | 0;
  $$2 = $13;
  $$23 = tempRet0;
  $116 = $119;
  $117 = $118;
 }
 _free($116);
 _free($117);
 ___resumeException($$2 | 0);
}

function __ZL8do_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc($alloc, $file, $input) {
 $alloc = $alloc | 0;
 $file = $file | 0;
 $input = $input | 0;
 var $$0$i = 0, $$01 = 0, $$01$i = 0, $$012 = 0, $$0311 = 0, $$1 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $47 = 0, $49 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $63 = 0, $67 = 0, $69 = 0, $7 = 0, $78 = 0, $82 = 0, $84 = 0, $86 = 0, $__f$01$i$i = 0, $__f$01$i$i8 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $parser = 0, $ss = 0, $token_list = 0, label = 0, sp = 0, $__f$01$i$i8$looptemp = 0, $__f$01$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $0 = sp + 180 | 0;
 $token_list = sp + 168 | 0;
 $parser = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $1 = sp;
 __Z11jsonnet_lexRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKc($token_list, $file, $input);
 HEAP32[$parser >> 2] = $token_list;
 HEAP32[$parser + 4 >> 2] = $alloc;
 __THREW__ = 0;
 $3 = invoke_iiii(29, $parser | 0, 15, 0) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($4 & 1) {
  $55 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index7Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $55;
  label = 19;
 } else {
  $6 = $token_list + 4 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if ((HEAP32[$7 + 8 >> 2] | 0) == 31) {
   $63 = $token_list + 8 | 0;
   if (!(HEAP32[$63 >> 2] | 0)) {
    STACKTOP = sp;
    return $3 | 0;
   }
   $67 = (HEAP32[$token_list >> 2] | 0) + 4 | 0;
   $69 = HEAP32[$7 >> 2] | 0;
   HEAP32[$69 + 4 >> 2] = HEAP32[$67 >> 2];
   HEAP32[HEAP32[$67 >> 2] >> 2] = $69;
   HEAP32[$63 >> 2] = 0;
   if (($7 | 0) == ($token_list | 0)) {
    STACKTOP = sp;
    return $3 | 0;
   }
   $__f$01$i$i8 = $7;
   do {
    $__f$01$i$i8$looptemp = $__f$01$i$i8;
    $__f$01$i$i8 = HEAP32[$__f$01$i$i8 + 4 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i8$looptemp + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i8$looptemp + 12 | 0);
    __ZdlPv($__f$01$i$i8$looptemp);
   } while (($__f$01$i$i8 | 0) != ($token_list | 0));
   STACKTOP = sp;
   return $3 | 0;
  }
  $11 = $ss + 64 | 0;
  $12 = $ss + 8 | 0;
  HEAP32[$12 >> 2] = 752;
  $13 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 900;
  HEAP32[$11 >> 2] = 920;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $13 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $28 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $28;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 732;
   HEAP32[$11 >> 2] = 772;
   HEAP32[$12 >> 2] = 752;
   __THREW__ = 0;
   invoke_vi(177, $13 | 0);
   $20 = __THREW__;
   __THREW__ = 0;
   do if ($20 & 1) {
    $30 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $30;
   } else {
    HEAP32[$13 >> 2] = 1064;
    $22 = $ss + 44 | 0;
    HEAP32[$22 + 0 >> 2] = 0;
    HEAP32[$22 + 4 >> 2] = 0;
    HEAP32[$22 + 8 >> 2] = 0;
    HEAP32[$22 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $13 | 0, $0 | 0);
    $24 = __THREW__;
    __THREW__ = 0;
    if ($24 & 1) {
     $26 = ___cxa_find_matching_catch() | 0;
     $27 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($13);
     $eh$lpad$body$i$index2Z2D = $27;
     $eh$lpad$body$i$indexZ2D = $26;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    $32 = invoke_iiii(25, $12 | 0, 36784, 16) | 0;
    $33 = __THREW__;
    __THREW__ = 0;
    L24 : do if ($33 & 1) label = 20; else {
     __THREW__ = 0;
     invoke_vii(52, $32 | 0, (HEAP32[$6 >> 2] | 0) + 8 | 0);
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) label = 20; else {
      $39 = ___cxa_allocate_exception(40) | 0;
      $40 = HEAP32[$6 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(43, $1 | 0, $13 | 0);
      $41 = __THREW__;
      __THREW__ = 0;
      do if ($41 & 1) {
       $59 = ___cxa_find_matching_catch() | 0;
       $$012 = $59;
       $$0311 = tempRet0;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $39 | 0, $40 + 24 | 0);
       $44 = __THREW__;
       __THREW__ = 0;
       if ($44 & 1) $$01 = 1; else {
        $46 = $39 + 12 | 0;
        $47 = $40 + 36 | 0;
        HEAP32[$46 + 0 >> 2] = HEAP32[$47 + 0 >> 2];
        HEAP32[$46 + 4 >> 2] = HEAP32[$47 + 4 >> 2];
        HEAP32[$46 + 8 >> 2] = HEAP32[$47 + 8 >> 2];
        HEAP32[$46 + 12 >> 2] = HEAP32[$47 + 12 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $39 + 28 | 0, $1 | 0);
        $49 = __THREW__;
        __THREW__ = 0;
        if ($49 & 1) {
         $51 = ___cxa_find_matching_catch() | 0;
         $52 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
         $$012 = $51;
         $$0311 = $52;
         break;
        }
        __THREW__ = 0;
        invoke_viii(4, $39 | 0, 48, 176);
        $53 = __THREW__;
        __THREW__ = 0;
        if ($53 & 1) $$01 = 0; else {}
       }
       $61 = ___cxa_find_matching_catch() | 0;
       $62 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
       if ($$01) {
        $$012 = $61;
        $$0311 = $62;
       } else {
        $$1 = $61;
        $$14 = $62;
        break L24;
       }
      } while (0);
      ___cxa_free_exception($39 | 0);
      $$1 = $$012;
      $$14 = $$0311;
     }
    } while (0);
    if ((label | 0) == 20) {
     $57 = ___cxa_find_matching_catch() | 0;
     $$1 = $57;
     $$14 = tempRet0;
    }
    HEAP32[$ss >> 2] = 732;
    HEAP32[$11 >> 2] = 772;
    HEAP32[$12 >> 2] = 752;
    HEAP32[$13 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($13);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($11);
    $$2 = $$1;
    $$25 = $$14;
    break L1;
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($11);
  $eh$lpad$body$index7Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
  label = 19;
 } while (0);
 if ((label | 0) == 19) {
  $$2 = $eh$lpad$body$indexZ2D;
  $$25 = $eh$lpad$body$index7Z2D;
 }
 $78 = $token_list + 8 | 0;
 if (!(HEAP32[$78 >> 2] | 0)) ___resumeException($$2 | 0);
 $82 = HEAP32[$token_list + 4 >> 2] | 0;
 $84 = (HEAP32[$token_list >> 2] | 0) + 4 | 0;
 $86 = HEAP32[$82 >> 2] | 0;
 HEAP32[$86 + 4 >> 2] = HEAP32[$84 >> 2];
 HEAP32[HEAP32[$84 >> 2] >> 2] = $86;
 HEAP32[$78 >> 2] = 0;
 if (($82 | 0) == ($token_list | 0)) ___resumeException($$2 | 0);
 $__f$01$i$i = $82;
 do {
  $__f$01$i$i$looptemp = $__f$01$i$i;
  $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i$looptemp + 24 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i$looptemp + 12 | 0);
  __ZdlPv($__f$01$i$i$looptemp);
 } while (($__f$01$i$i | 0) != ($token_list | 0));
 ___resumeException($$2 | 0);
 return 0;
}

function __Z22jsonnet_unparse_escapeRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $str) {
 $agg$result = $agg$result | 0;
 $str = $str | 0;
 var $$0$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $36 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $63 = 0, $64 = 0, $69 = 0, $8 = 0, $82 = 0, $84 = 0, $87 = 0, $89 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $i$0 = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $0 = sp + 144 | 0;
 $1 = sp + 157 | 0;
 $2 = sp + 156 | 0;
 $ss = sp;
 $3 = $ss + 64 | 0;
 $4 = $ss + 8 | 0;
 HEAP32[$4 >> 2] = 752;
 $5 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 900;
 HEAP32[$3 >> 2] = 920;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $5 | 0);
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $20 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $20;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 732;
 HEAP32[$3 >> 2] = 772;
 HEAP32[$4 >> 2] = 752;
 __THREW__ = 0;
 invoke_vi(177, $5 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 do if ($12 & 1) {
  $22 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $22;
 } else {
  HEAP32[$5 >> 2] = 1064;
  $14 = $ss + 44 | 0;
  HEAP32[$14 + 0 >> 2] = 0;
  HEAP32[$14 + 4 >> 2] = 0;
  HEAP32[$14 + 8 >> 2] = 0;
  HEAP32[$14 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $5 | 0, $0 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch() | 0;
   $19 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
   $eh$lpad$body$i$index2Z2D = $19;
   $eh$lpad$body$i$indexZ2D = $18;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  HEAP8[$2 >> 0] = 34;
  __THREW__ = 0;
  invoke_iiii(25, $4 | 0, $2 | 0, 1) | 0;
  $24 = __THREW__;
  __THREW__ = 0;
  if (!($24 & 1)) {
   $26 = $str + 1 | 0;
   $27 = $str + 8 | 0;
   $28 = $str + 4 | 0;
   $i$0 = 0;
   L13 : while (1) {
    $29 = HEAP8[$str >> 0] | 0;
    $31 = ($29 & 1) == 0;
    if ($31) $36 = ($29 & 255) >>> 1; else $36 = HEAP32[$28 >> 2] | 0;
    if ($i$0 >>> 0 >= $36 >>> 0) break;
    $39 = HEAP8[($31 ? $26 : HEAP32[$27 >> 2] | 0) + $i$0 >> 0] | 0;
    L20 : do switch ($39 << 24 >> 24 | 0) {
    case 12:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 35720, 2) | 0;
      $51 = __THREW__;
      __THREW__ = 0;
      if ($51 & 1) {
       label = 16;
       break L13;
      }
      break;
     }
    case 34:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 35696, 2) | 0;
      $45 = __THREW__;
      __THREW__ = 0;
      if ($45 & 1) {
       label = 16;
       break L13;
      }
      break;
     }
    case 0:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 35752, 6) | 0;
      $59 = __THREW__;
      __THREW__ = 0;
      if ($59 & 1) {
       label = 16;
       break L13;
      }
      break;
     }
    case 13:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 35736, 2) | 0;
      $55 = __THREW__;
      __THREW__ = 0;
      if ($55 & 1) {
       label = 16;
       break L13;
      }
      break;
     }
    case 92:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 35704, 2) | 0;
      $47 = __THREW__;
      __THREW__ = 0;
      if ($47 & 1) {
       label = 16;
       break L13;
      }
      break;
     }
    case 8:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 35712, 2) | 0;
      $49 = __THREW__;
      __THREW__ = 0;
      if ($49 & 1) {
       label = 16;
       break L13;
      }
      break;
     }
    case 10:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 35728, 2) | 0;
      $53 = __THREW__;
      __THREW__ = 0;
      if ($53 & 1) {
       label = 16;
       break L13;
      }
      break;
     }
    case 9:
     {
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, 35744, 2) | 0;
      $57 = __THREW__;
      __THREW__ = 0;
      if ($57 & 1) {
       label = 16;
       break L13;
      }
      break;
     }
    default:
     if ($39 << 24 >> 24 < 32 | $39 << 24 >> 24 == 127) {
      __THREW__ = 0;
      $63 = invoke_iiii(25, $4 | 0, 35760, 2) | 0;
      $64 = __THREW__;
      __THREW__ = 0;
      if ($64 & 1) {
       label = 16;
       break L13;
      }
      $69 = $63 + ((HEAP32[(HEAP32[$63 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
      HEAP32[$69 >> 2] = HEAP32[$69 >> 2] & -75 | 8;
      HEAP32[$63 + ((HEAP32[(HEAP32[$63 >> 2] | 0) + -12 >> 2] | 0) + 76) >> 2] = 48;
      HEAP32[$63 + ((HEAP32[(HEAP32[$63 >> 2] | 0) + -12 >> 2] | 0) + 12) >> 2] = 4;
      __THREW__ = 0;
      invoke_iii(21, $63 | 0, $39 & 255 | 0) | 0;
      $82 = __THREW__;
      __THREW__ = 0;
      if ($82 & 1) {
       label = 16;
       break L13;
      } else break L20;
     } else {
      HEAP8[$1 >> 0] = $39;
      __THREW__ = 0;
      invoke_iiii(25, $4 | 0, $1 | 0, 1) | 0;
      $84 = __THREW__;
      __THREW__ = 0;
      if ($84 & 1) {
       label = 16;
       break L13;
      }
      break L20;
     }
    } while (0);
    $i$0 = $i$0 + 1 | 0;
   }
   if ((label | 0) == 16) {
    $41 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $41;
    $lpad$phi$index7 = tempRet0;
    HEAP32[$ss >> 2] = 732;
    HEAP32[$3 >> 2] = 772;
    HEAP32[$4 >> 2] = 752;
    HEAP32[$5 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
    ___resumeException($lpad$phi$index | 0);
   }
   HEAP8[$0 >> 0] = 34;
   __THREW__ = 0;
   invoke_iiii(25, $4 | 0, $0 | 0, 1) | 0;
   $87 = __THREW__;
   __THREW__ = 0;
   if (!($87 & 1)) {
    __THREW__ = 0;
    invoke_vii(43, $agg$result | 0, $5 | 0);
    $89 = __THREW__;
    __THREW__ = 0;
    if (!($89 & 1)) {
     HEAP32[$ss >> 2] = 732;
     HEAP32[$3 >> 2] = 772;
     HEAP32[$4 >> 2] = 752;
     HEAP32[$5 >> 2] = 1064;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
     STACKTOP = sp;
     return;
    }
   }
  }
  $43 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $43;
  $lpad$phi$index7 = tempRet0;
  HEAP32[$ss >> 2] = 732;
  HEAP32[$3 >> 2] = 772;
  HEAP32[$4 >> 2] = 752;
  HEAP32[$5 >> 2] = 1064;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  ___resumeException($lpad$phi$index | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 ___resumeException($$01$i | 0);
}

function __ZN12_GLOBAL__N_111HeapClosureC2ERKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEPNS_10HeapObjectEjRKNS1_6vectorIS5_NSA_IS5_EEEEPK3ASTm($this, $up_values, $self, $offset, $params, $body, $builtin) {
 $this = $this | 0;
 $up_values = $up_values | 0;
 $self = $self | 0;
 $offset = $offset | 0;
 $params = $params | 0;
 $body = $body | 0;
 $builtin = $builtin | 0;
 var $$0 = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i119$i$i = 0, $$0$i$i$i$i119$i$i$ph = 0, $$01 = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$cast$i$i$i$i$i$i$i$i$lcssa = 0, $$cast$i$i$i$i$i$lcssa = 0, $$idx$val$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i = 0, $$pre$i$i = 0, $$pre$i$i$i$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $47 = 0, $49 = 0, $52 = 0, $55 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $7 = 0, $71 = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $81 = 0, $__nd$0$i20$i$i$i$i$in$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$be = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa11 = 0, label = 0;
 HEAP32[$this >> 2] = 41992;
 $0 = $this + 8 | 0;
 $1 = $this + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $this + 16 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $this + 12 | 0;
 HEAP32[$0 >> 2] = $3;
 $$idx$val$i$i = HEAP32[$up_values >> 2] | 0;
 $4 = $up_values + 4 | 0;
 do if (($$idx$val$i$i | 0) != ($4 | 0)) {
  $10 = $$idx$val$i$i;
  $81 = $$idx$val$i$i;
  while (1) {
   __THREW__ = 0;
   $6 = invoke_ii(67, 24) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) break;
   $12 = $10 + 16 | 0;
   $14 = HEAP32[$12 >> 2] | 0;
   $17 = HEAP32[$12 + 4 >> 2] | 0;
   $18 = $6 + 16 | 0;
   HEAP32[$18 >> 2] = $14;
   HEAP32[$18 + 4 >> 2] = $17;
   $22 = $14;
   $$pre$i$i$i$i$i$i = HEAP32[$3 >> 2] | 0;
   do if ((HEAP32[$0 >> 2] | 0) == ($3 | 0)) {
    $43 = $3;
    label = 13;
   } else {
    $24 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($24) {
     $$0$i$i$i$i$i$i$i$i = $3;
     while (1) {
      $29 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$29 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $29; else {
       $$cast$i$i$i$i$i$i$i$i$lcssa = $29;
       break;
      }
     }
     $$01$i$i$i$i$i$i$i$i = $$cast$i$i$i$i$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $26 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$26) {
       $$0$i$i$i$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $26;
     }
     $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$lcssa;
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $22 >>> 0) {
     $43 = $$01$i$i$i$i$i$i$i$i;
     label = 13;
    } else if ($24) {
     $$0$i$i$i$i119$i$i = $3;
     $47 = $3;
     label = 23;
    } else {
     $__nd$0$i20$i$i$i$i$in$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 > $22 >>> 0) {
       $36 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i >> 2] | 0;
       if (!$36) {
        $$0$i$i$i$i119$i$i$ph = $__nd$0$i20$i$i$i$i$in$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa11 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 22;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$be = $36;
      } else {
       if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 >= $22 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 26;
        break;
       }
       $39 = $__nd$0$i20$i$i$i$i$in$i$i + 4 | 0;
       $40 = HEAP32[$39 >> 2] | 0;
       if (!$40) {
        $$0$i$i$i$i119$i$i$ph = $39;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa11 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 22;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i$be = $40;
      }
      $__nd$0$i20$i$i$i$i$in$i$i = $__nd$0$i20$i$i$i$i$in$i$i$be;
     }
     if ((label | 0) == 22) {
      label = 0;
      $$0$i$i$i$i119$i$i = $$0$i$i$i$i119$i$i$ph;
      $47 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa11;
      label = 23;
      break;
     } else if ((label | 0) == 26) {
      label = 0;
      $55 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa;
      label = 27;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 13) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     $$0$i$i$i$i119$i$i = $3;
     $47 = $3;
     label = 23;
    } else {
     $42 = $43 + 4 | 0;
     $$pre$i$i = HEAP32[$42 >> 2] | 0;
     if (!$$pre$i$i) {
      $$0$i$i$i$i119$i$i = $42;
      $47 = $43;
      label = 23;
     } else {
      $55 = $$pre$i$i;
      label = 27;
     }
    }
   }
   if ((label | 0) == 23) {
    label = 0;
    HEAP32[$6 >> 2] = 0;
    HEAP32[$6 + 4 >> 2] = 0;
    HEAP32[$6 + 8 >> 2] = $47;
    HEAP32[$$0$i$i$i$i119$i$i >> 2] = $6;
    $49 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
    if (!$49) $52 = $6; else {
     HEAP32[$0 >> 2] = $49;
     $52 = HEAP32[$$0$i$i$i$i119$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1 >> 2] | 0, $52);
    HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
    $58 = $10;
   } else if ((label | 0) == 27) {
    label = 0;
    if (($55 | 0) == ($6 | 0)) $58 = $81; else {
     __ZdlPv($6);
     $58 = $81;
    }
   }
   $59 = HEAP32[$58 + 4 >> 2] | 0;
   if (!$59) {
    $$0$i$i$i$i$i = $58;
    while (1) {
     $64 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$64 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$lcssa = $64;
      break;
     } else $$0$i$i$i$i$i = $64;
    }
    $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i = $59;
    while (1) {
     $61 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$61) {
      $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $61;
    }
    $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i | 0) == ($4 | 0)) {
    label = 37;
    break;
   } else {
    $10 = $$01$i$i$i$i$i;
    $81 = $$01$i$i$i$i$i;
   }
  }
  if ((label | 0) == 37) break;
  $75 = ___cxa_find_matching_catch() | 0;
  $76 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$3 >> 2] | 0);
  $$0 = $76;
  $$01 = $75;
  ___resumeException($$01 | 0);
 } while (0);
 HEAP32[$this + 20 >> 2] = $self;
 HEAP32[$this + 24 >> 2] = $offset;
 __THREW__ = 0;
 invoke_vii(53, $this + 28 | 0, $params | 0);
 $71 = __THREW__;
 __THREW__ = 0;
 if (!($71 & 1)) {
  HEAP32[$this + 40 >> 2] = $body;
  HEAP32[$this + 44 >> 2] = $builtin;
  return;
 }
 $78 = ___cxa_find_matching_catch() | 0;
 $79 = tempRet0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$3 >> 2] | 0);
 $$0 = $79;
 $$01 = $78;
 ___resumeException($$01 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter9makeArrayERKNSt3__16vectorIPNS_9HeapThunkENS1_9allocatorIS4_EEEE($agg$result, $this, $v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $v = $v | 0;
 var $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$01$i$i$i$i$i = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa = 0, $$lcssa$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $104 = 0, $108 = 0, $117 = 0, $12 = 0, $122 = 0, $124 = 0, $128 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $23 = 0, $25 = 0, $28 = 0, $3 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $41 = 0, $42 = 0, $47 = 0, $50 = 0, $51 = 0, $52 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $72 = 0, $73 = 0, $75 = 0, $81 = 0, $82 = 0, $88 = 0, $__x$idx1$i$i$i$i = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0;
 HEAP32[$agg$result >> 2] = 16;
 $0 = __Znwj(20) | 0;
 HEAP32[$0 >> 2] = 42008;
 $1 = $0 + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 16 | 0;
 HEAP32[$3 >> 2] = 0;
 $__x$idx1$i$i$i$i = $v + 4 | 0;
 $6 = (HEAP32[$__x$idx1$i$i$i$i >> 2] | 0) - (HEAP32[$v >> 2] | 0) | 0;
 $7 = $6 >> 2;
 do if ($7) {
  if ($7 >>> 0 > 1073741823) {
   __THREW__ = 0;
   invoke_vi(182, $1 | 0);
   $10 = __THREW__;
   __THREW__ = 0;
   if (!($10 & 1)) label = 4;
  } else label = 4;
  if ((label | 0) == 4) {
   __THREW__ = 0;
   $12 = invoke_ii(67, $6 | 0) | 0;
   $13 = __THREW__;
   __THREW__ = 0;
   if (!($13 & 1)) {
    HEAP32[$2 >> 2] = $12;
    HEAP32[$1 >> 2] = $12;
    HEAP32[$3 >> 2] = $12 + ($7 << 2);
    $16 = HEAP32[$v >> 2] | 0;
    $17 = HEAP32[$__x$idx1$i$i$i$i >> 2] | 0;
    if (($16 | 0) == ($17 | 0)) break;
    $$01$i$i$i$i$i = $16;
    $19 = $12;
    do {
     HEAP32[$19 >> 2] = HEAP32[$$01$i$i$i$i$i >> 2];
     $19 = (HEAP32[$2 >> 2] | 0) + 4 | 0;
     HEAP32[$2 >> 2] = $19;
     $$01$i$i$i$i$i = $$01$i$i$i$i$i + 4 | 0;
    } while (($$01$i$i$i$i$i | 0) != ($17 | 0));
    break;
   }
  }
  $23 = ___cxa_find_matching_catch() | 0;
  $25 = HEAP32[$1 >> 2] | 0;
  if (!$25) {
   __ZdlPv($0);
   ___resumeException($23 | 0);
  }
  $28 = HEAP32[$2 >> 2] | 0;
  if (($28 | 0) != ($25 | 0)) HEAP32[$2 >> 2] = $28 + (~(($28 + -4 - $25 | 0) >>> 2) << 2);
  __ZdlPv($25);
  __ZdlPv($0);
  ___resumeException($23 | 0);
 } while (0);
 $34 = $this + 20 | 0;
 $35 = $this + 24 | 0;
 $36 = HEAP32[$35 >> 2] | 0;
 $37 = $this + 28 | 0;
 $38 = HEAP32[$37 >> 2] | 0;
 if ($36 >>> 0 < $38 >>> 0) {
  if (!$36) $42 = 0; else {
   HEAP32[$36 >> 2] = $0;
   $42 = HEAP32[$35 >> 2] | 0;
  }
  $41 = $42 + 4 | 0;
  HEAP32[$35 >> 2] = $41;
  $$idx$pre$phi$i$iZZ2D = $34;
  $$idx1$val$i$i = $41;
 } else {
  $this$idx2$val$i$i$i$i = HEAP32[$34 >> 2] | 0;
  $47 = ($36 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
  if ($47 >>> 0 > 1073741823) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($34);
   $$idx1$val$i$i$i$i$i$i = HEAP32[$37 >> 2] | 0;
   $50 = HEAP32[$34 >> 2] | 0;
  } else {
   $$idx1$val$i$i$i$i$i$i = $38;
   $50 = $this$idx2$val$i$i$i$i;
  }
  $51 = $50;
  $52 = $$idx1$val$i$i$i$i$i$i - $51 | 0;
  if ($52 >> 2 >>> 0 < 536870911) {
   $58 = $52 >> 1;
   $60 = $58 >>> 0 < $47 >>> 0 ? $47 : $58;
   $62 = (HEAP32[$35 >> 2] | 0) - $51 | 0;
   $63 = $62 >> 2;
   if (!$60) {
    $$0$i8$i$i$i$i = 0;
    $68 = 0;
    $69 = $63;
    $73 = $62;
   } else {
    $$0$i7$i$i$i$i = $60;
    $131 = $63;
    $132 = $62;
    label = 22;
   }
  } else {
   $56 = (HEAP32[$35 >> 2] | 0) - $51 | 0;
   $$0$i7$i$i$i$i = 1073741823;
   $131 = $56 >> 2;
   $132 = $56;
   label = 22;
  }
  if ((label | 0) == 22) {
   $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
   $68 = __Znwj($$0$i7$i$i$i$i << 2) | 0;
   $69 = $131;
   $73 = $132;
  }
  $67 = $68 + ($69 << 2) | 0;
  if ($67) HEAP32[$67 >> 2] = $0;
  $72 = $68 + ($69 + 1 << 2) | 0;
  _memcpy($68 | 0, $50 | 0, $73 | 0) | 0;
  HEAP32[$34 >> 2] = $68;
  HEAP32[$35 >> 2] = $72;
  HEAP32[$37 >> 2] = $68 + ($$0$i8$i$i$i$i << 2);
  if (!$50) {
   $$idx$pre$phi$i$iZZ2D = $34;
   $$idx1$val$i$i = $72;
  } else {
   __ZdlPv($50);
   $$idx$pre$phi$i$iZZ2D = $34;
   $$idx1$val$i$i = HEAP32[$35 >> 2] | 0;
  }
 }
 $75 = $this + 16 | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[$75 >> 0] | 0;
 $81 = $$idx1$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
 $82 = $this + 36 | 0;
 HEAP32[$82 >> 2] = $81;
 if ($81 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
  $130 = $agg$result + 8 | 0;
  HEAP32[$130 >> 2] = $0;
  return;
 }
 $88 = $this + 32 | 0;
 if (!(+($81 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$88 >> 2] | 0) >>> 0))) {
  $130 = $agg$result + 8 | 0;
  HEAP32[$130 >> 2] = $0;
  return;
 }
 __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $0);
 __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this + 56 | 0, $this);
 if (HEAP32[$this + 40 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$this + 48 >> 2] | 0);
 $101 = (HEAP8[$75 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$75 >> 0] = $101;
 $$idx6$i$i = $this + 20 | 0;
 $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
 $$idx7$val12$i$i = HEAP32[$35 >> 2] | 0;
 if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
  $$idx6$val14$i$i = $$idx6$val11$i$i;
  $$idx7$val18$i$i = $$idx7$val12$i$i;
  $108 = $101;
  $i$013$i$i = 0;
  while (1) {
   $104 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
   if ((HEAP8[$104 + 4 >> 0] | 0) == $108 << 24 >> 24) {
    $$idx6$val$i$i = $$idx6$val14$i$i;
    $$idx7$val$i$i = $$idx7$val18$i$i;
    $i$1$i$i = $i$013$i$i;
   } else {
    if (!$104) {
     $$idx4$val$i$i = $$idx6$val14$i$i;
     $$idx5$val$i$i = $$idx7$val18$i$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$104 >> 2] | 0) + 4 >> 2] & 255]($104);
     $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $$idx5$val$i$i = HEAP32[$35 >> 2] | 0;
    }
    $117 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
    if (($i$013$i$i | 0) == ($117 | 0)) {
     $$idx6$val$pre$i$i = $$idx4$val$i$i;
     $122 = $$idx5$val$i$i;
    } else {
     HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($117 << 2) >> 2];
     $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $122 = HEAP32[$35 >> 2] | 0;
    }
    $scevgep4$i$i$i$i$i = $122 + -4 | 0;
    HEAP32[$35 >> 2] = $scevgep4$i$i$i$i$i;
    $$idx6$val$i$i = $$idx6$val$pre$i$i;
    $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
    $i$1$i$i = $i$013$i$i + -1 | 0;
   }
   $124 = $i$1$i$i + 1 | 0;
   $128 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
   if ($124 >>> 0 >= $128 >>> 0) {
    $$lcssa = $128;
    break;
   }
   $$idx6$val14$i$i = $$idx6$val$i$i;
   $$idx7$val18$i$i = $$idx7$val$i$i;
   $108 = HEAP8[$75 >> 0] | 0;
   $i$013$i$i = $124;
  }
  $$lcssa$i$i = $$lcssa;
 }
 HEAP32[$82 >> 2] = $$lcssa$i$i;
 HEAP32[$88 >> 2] = $$lcssa$i$i;
 $130 = $agg$result + 8 | 0;
 HEAP32[$130 >> 2] = $0;
 return;
}

function __ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKN12_GLOBAL__N_111Interpreter16ImportCacheValueENS_4lessIS8_EENS5_INS1_IKS8_SD_EEEEEixERSG_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$$i = 0, $$0$i = 0, $$0$i16 = 0, $$33$i1 = 0, $$42$i7 = 0, $$43$i = 0, $$lcssa = 0, $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $104 = 0, $105 = 0, $109 = 0, $110 = 0, $12 = 0, $121 = 0, $123 = 0, $124 = 0, $128 = 0, $129 = 0, $131 = 0, $133 = 0, $134 = 0, $135 = 0, $139 = 0, $141 = 0, $142 = 0, $143 = 0, $148 = 0, $150 = 0, $154 = 0, $155 = 0, $158 = 0, $159 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $35 = 0, $38 = 0, $39 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $58 = 0, $59 = 0, $69 = 0, $72 = 0, $73 = 0, $77 = 0, $87 = 0, $89 = 0, $9 = 0, $90 = 0, $__nd$0$be$in$i = 0, $__nd$0$i = 0, $__nd$0$i$lcssa = 0, $__nd$0$i$lcssa20 = 0, $__nd$0$i$lcssa21 = 0, $__parent = 0, $__r$0 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0$i = $0;
  $131 = $1;
  $159 = $0;
  label = 46;
 } else {
  $3 = HEAP8[$__k >> 0] | 0;
  $5 = ($3 & 1) == 0;
  $9 = $__k + 12 | 0;
  $10 = HEAP8[$9 >> 0] | 0;
  $12 = ($10 & 1) == 0;
  $$$i = $5 ? ($3 & 255) >>> 1 : HEAP32[$__k + 4 >> 2] | 0;
  $$33$i1 = $5 ? $__k + 1 | 0 : HEAP32[$__k + 8 >> 2] | 0;
  $$42$i7 = $12 ? ($10 & 255) >>> 1 : HEAP32[$__k + 16 >> 2] | 0;
  $$43$i = $12 ? $9 + 1 | 0 : HEAP32[$__k + 20 >> 2] | 0;
  $__nd$0$i = $1;
  L4 : while (1) {
   $24 = $__nd$0$i + 16 | 0;
   $25 = HEAP8[$24 >> 0] | 0;
   $27 = ($25 & 1) == 0;
   if ($27) {
    $35 = ($25 & 255) >>> 1;
    $38 = $24 + 1 | 0;
   } else {
    $35 = HEAP32[$__nd$0$i + 20 >> 2] | 0;
    $38 = HEAP32[$__nd$0$i + 24 >> 2] | 0;
   }
   $39 = _memcmp($$33$i1, $38, $35 >>> 0 < $$$i >>> 0 ? $35 : $$$i) | 0;
   if (!$39) if ($$$i >>> 0 < $35 >>> 0) label = 21; else label = 9; else if (($39 | 0) < 0) label = 21; else label = 9;
   L13 : do if ((label | 0) == 9) {
    label = 0;
    if ($27) {
     $51 = ($25 & 255) >>> 1;
     $53 = $24 + 1 | 0;
    } else {
     $51 = HEAP32[$__nd$0$i + 20 >> 2] | 0;
     $53 = HEAP32[$__nd$0$i + 24 >> 2] | 0;
    }
    $54 = _memcmp($53, $$33$i1, $$$i >>> 0 < $51 >>> 0 ? $$$i : $51) | 0;
    if (!$54) {
     if ($51 >>> 0 >= $$$i >>> 0) label = 15;
    } else if (($54 | 0) >= 0) label = 15;
    do if ((label | 0) == 15) {
     label = 0;
     $58 = $__nd$0$i + 28 | 0;
     $59 = HEAP8[$58 >> 0] | 0;
     if (!($59 & 1)) {
      $69 = ($59 & 255) >>> 1;
      $72 = $58 + 1 | 0;
     } else {
      $69 = HEAP32[$__nd$0$i + 32 >> 2] | 0;
      $72 = HEAP32[$__nd$0$i + 36 >> 2] | 0;
     }
     $73 = _memcmp($$43$i, $72, $69 >>> 0 < $$42$i7 >>> 0 ? $69 : $$42$i7) | 0;
     if (!$73) if ($$42$i7 >>> 0 < $69 >>> 0) {
      label = 21;
      break L13;
     } else break; else if (($73 | 0) < 0) {
      label = 21;
      break L13;
     } else break;
    } while (0);
    if ($27) {
     $87 = ($25 & 255) >>> 1;
     $89 = $24 + 1 | 0;
    } else {
     $87 = HEAP32[$__nd$0$i + 20 >> 2] | 0;
     $89 = HEAP32[$__nd$0$i + 24 >> 2] | 0;
    }
    $90 = _memcmp($89, $$33$i1, $$$i >>> 0 < $87 >>> 0 ? $$$i : $87) | 0;
    if (!$90) {
     if ($87 >>> 0 >= $$$i >>> 0) label = 29;
    } else if (($90 | 0) >= 0) label = 29;
    do if ((label | 0) == 29) {
     label = 0;
     if ($27) {
      $101 = ($25 & 255) >>> 1;
      $104 = $24 + 1 | 0;
     } else {
      $101 = HEAP32[$__nd$0$i + 20 >> 2] | 0;
      $104 = HEAP32[$__nd$0$i + 24 >> 2] | 0;
     }
     $105 = _memcmp($$33$i1, $104, $101 >>> 0 < $$$i >>> 0 ? $101 : $$$i) | 0;
     if (!$105) {
      if ($$$i >>> 0 < $101 >>> 0) {
       $__nd$0$i$lcssa = $__nd$0$i;
       label = 44;
       break L4;
      }
     } else if (($105 | 0) < 0) {
      $__nd$0$i$lcssa = $__nd$0$i;
      label = 44;
      break L4;
     }
     $109 = $__nd$0$i + 28 | 0;
     $110 = HEAP8[$109 >> 0] | 0;
     if (!($110 & 1)) {
      $121 = ($110 & 255) >>> 1;
      $123 = $109 + 1 | 0;
     } else {
      $121 = HEAP32[$__nd$0$i + 32 >> 2] | 0;
      $123 = HEAP32[$__nd$0$i + 36 >> 2] | 0;
     }
     $124 = _memcmp($123, $$43$i, $$42$i7 >>> 0 < $121 >>> 0 ? $$42$i7 : $121) | 0;
     if (!$124) if ($121 >>> 0 < $$42$i7 >>> 0) break; else {
      $__nd$0$i$lcssa = $__nd$0$i;
      label = 44;
      break L4;
     } else if (($124 | 0) < 0) break; else {
      $__nd$0$i$lcssa = $__nd$0$i;
      label = 44;
      break L4;
     }
    } while (0);
    $128 = $__nd$0$i + 4 | 0;
    $129 = HEAP32[$128 >> 2] | 0;
    if (!$129) {
     $$lcssa = $128;
     $__nd$0$i$lcssa20 = $__nd$0$i;
     label = 43;
     break L4;
    } else $__nd$0$be$in$i = $129;
   } while (0);
   if ((label | 0) == 21) {
    label = 0;
    $77 = HEAP32[$__nd$0$i >> 2] | 0;
    if (!$77) {
     $$lcssa22 = $__nd$0$i;
     $__nd$0$i$lcssa21 = $__nd$0$i;
     label = 22;
     break;
    } else $__nd$0$be$in$i = $77;
   }
   $__nd$0$i = $__nd$0$be$in$i;
  }
  if ((label | 0) == 22) {
   HEAP32[$__parent >> 2] = $__nd$0$i$lcssa21;
   $$0$i16 = $$lcssa22;
   $148 = $__nd$0$i$lcssa21;
   break;
  } else if ((label | 0) == 43) {
   HEAP32[$__parent >> 2] = $__nd$0$i$lcssa20;
   $$0$i16 = $$lcssa;
   $148 = $__nd$0$i$lcssa20;
   break;
  } else if ((label | 0) == 44) {
   HEAP32[$__parent >> 2] = $__nd$0$i$lcssa;
   $$0$i = $__parent;
   $131 = $__nd$0$i$lcssa;
   $159 = $__nd$0$i$lcssa;
   label = 46;
   break;
  }
 } while (0);
 if ((label | 0) == 46) if (!$131) {
  $$0$i16 = $$0$i;
  $148 = $159;
 } else {
  $__r$0 = $131;
  $158 = $__r$0 + 40 | 0;
  STACKTOP = sp;
  return $158 | 0;
 }
 $133 = __Znwj(44) | 0;
 $134 = $133 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $134 | 0, $__k | 0);
 $135 = __THREW__;
 __THREW__ = 0;
 if ($135 & 1) {
  $143 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $143;
  __ZdlPv($133);
  ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 }
 __THREW__ = 0;
 invoke_vii(40, $133 + 28 | 0, $__k + 12 | 0);
 $139 = __THREW__;
 __THREW__ = 0;
 if ($139 & 1) {
  $141 = ___cxa_find_matching_catch() | 0;
  $142 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($134);
  $eh$lpad$body$i$index2Z2D = $142;
  $eh$lpad$body$i$indexZ2D = $141;
  __ZdlPv($133);
  ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 }
 HEAP32[$133 + 40 >> 2] = 0;
 HEAP32[$133 >> 2] = 0;
 HEAP32[$133 + 4 >> 2] = 0;
 HEAP32[$133 + 8 >> 2] = $148;
 HEAP32[$$0$i16 >> 2] = $133;
 $150 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$150) $154 = $133; else {
  HEAP32[$this >> 2] = $150;
  $154 = HEAP32[$$0$i16 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $154);
 $155 = $this + 8 | 0;
 HEAP32[$155 >> 2] = (HEAP32[$155 >> 2] | 0) + 1;
 $__r$0 = $133;
 $158 = $__r$0 + 40 | 0;
 STACKTOP = sp;
 return $158 | 0;
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$111 = 0, $$112 = 0, $$1210 = 0, $$129 = 0, $$byval_copy = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $112 = 0, $12 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $61 = 0, $63 = 0, $66 = 0, $73 = 0, $74 = 0, $78 = 0, $81 = 0, $88 = 0, $89 = 0, $97 = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__nc$2$lcssa = 0, $__neg = 0, $__w$0 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576 | 0;
 $$byval_copy = sp + 424 | 0;
 $vararg_buffer = sp;
 $__wbuf = sp + 24 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 12 | 0;
 $__loc = sp + 8 | 0;
 $__neg = sp + 564 | 0;
 $0 = sp + 4 | 0;
 $__nbuf = sp + 464 | 0;
 HEAP32[$__wb >> 2] = $__wbuf;
 $1 = $__wb + 4 | 0;
 HEAP32[$1 >> 2] = 189;
 $2 = $__wbuf + 400 | 0;
 __THREW__ = 0;
 invoke_vii(47, $__loc | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $33 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$111 = $33;
  $$129 = tempRet0;
  $106 = 189;
  $107 = $__wbuf;
  label = 47;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $__loc | 0, 50200) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  L4 : do if ($6 & 1) label = 11; else {
   HEAP8[$__neg >> 0] = 0;
   HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
   $10 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   $11 = invoke_iiiiiiiiiiii(2, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $10 | 0, $__err | 0, $__neg | 0, $5 | 0, $__wb | 0, $__wn | 0, $2 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) label = 11; else {
    if ($11) {
     __THREW__ = 0;
     invoke_iiiii(HEAP32[(HEAP32[$5 >> 2] | 0) + 48 >> 2] | 0, $5 | 0, 49904, 49914, $$byval_copy | 0) | 0;
     $17 = __THREW__;
     __THREW__ = 0;
     if ($17 & 1) {
      label = 11;
      break;
     }
     $19 = HEAP32[$__wn >> 2] | 0;
     $20 = HEAP32[$__wb >> 2] | 0;
     $23 = $19 - $20 | 0;
     if (($23 | 0) > 392) {
      $27 = _malloc(($23 >> 2) + 2 | 0) | 0;
      if (!$27) {
       __THREW__ = 0;
       invoke_v(7);
       $29 = __THREW__;
       __THREW__ = 0;
       if ($29 & 1) {
        $31 = ___cxa_find_matching_catch() | 0;
        $$0 = $31;
        $$01 = tempRet0;
        break;
       } else {
        $39 = 0;
        $__nc$0 = 0;
       }
      } else {
       $39 = $27;
       $__nc$0 = $27;
      }
     } else {
      $39 = 0;
      $__nc$0 = $__nbuf;
     }
     if (!(HEAP8[$__neg >> 0] | 0)) $__nc$1 = $__nc$0; else {
      HEAP8[$__nc$0 >> 0] = 45;
      $__nc$1 = $__nc$0 + 1 | 0;
     }
     $43 = $$byval_copy + 40 | 0;
     $44 = $$byval_copy;
     $46 = $19;
     $__nc$2 = $__nc$1;
     $__w$0 = $20;
     while (1) {
      if ($__w$0 >>> 0 >= $46 >>> 0) {
       $__nc$2$lcssa = $__nc$2;
       break;
      }
      $47 = HEAP32[$__w$0 >> 2] | 0;
      $$0$i = $$byval_copy;
      while (1) {
       if (($$0$i | 0) == ($43 | 0)) {
        $$0$lcssa$i = $43;
        break;
       }
       if ((HEAP32[$$0$i >> 2] | 0) == ($47 | 0)) {
        $$0$lcssa$i = $$0$i;
        break;
       }
       $$0$i = $$0$i + 4 | 0;
      }
      HEAP8[$__nc$2 >> 0] = HEAP8[49904 + ($$0$lcssa$i - $44 >> 2) >> 0] | 0;
      $46 = HEAP32[$__wn >> 2] | 0;
      $__nc$2 = $__nc$2 + 1 | 0;
      $__w$0 = $__w$0 + 4 | 0;
     }
     HEAP8[$__nc$2$lcssa >> 0] = 0;
     HEAP32[$vararg_buffer >> 2] = $__v;
     if ((_sscanf($__nbuf, 49840, $vararg_buffer) | 0) != 1) {
      __THREW__ = 0;
      invoke_vi(190, 49848);
      $61 = __THREW__;
      __THREW__ = 0;
      if ($61 & 1) {
       $37 = ___cxa_find_matching_catch() | 0;
       $38 = tempRet0;
       _free($39);
       $$0 = $37;
       $$01 = $38;
       break;
      }
     }
     _free($39);
    }
    $63 = HEAP32[$__b >> 2] | 0;
    do if (!$63) $112 = 1; else {
     $66 = HEAP32[$63 + 12 >> 2] | 0;
     if (($66 | 0) == (HEAP32[$63 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $73 = invoke_ii(HEAP32[(HEAP32[$63 >> 2] | 0) + 36 >> 2] | 0, $63 | 0) | 0;
      $74 = __THREW__;
      __THREW__ = 0;
      if ($74 & 1) {
       label = 11;
       break L4;
      } else $$0$i$i$i$i = $73;
     } else $$0$i$i$i$i = HEAP32[$66 >> 2] | 0;
     if (($$0$i$i$i$i | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $112 = 1;
      break;
     } else {
      $112 = (HEAP32[$__b >> 2] | 0) == 0;
      break;
     }
    } while (0);
    $78 = HEAP32[$__e >> 2] | 0;
    do if (!$78) label = 38; else {
     $81 = HEAP32[$78 + 12 >> 2] | 0;
     if (($81 | 0) == (HEAP32[$78 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $88 = invoke_ii(HEAP32[(HEAP32[$78 >> 2] | 0) + 36 >> 2] | 0, $78 | 0) | 0;
      $89 = __THREW__;
      __THREW__ = 0;
      if ($89 & 1) {
       label = 11;
       break L4;
      } else $$0$i$i1$i$i = $88;
     } else $$0$i$i1$i$i = HEAP32[$81 >> 2] | 0;
     if (($$0$i$i1$i$i | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 38;
      break;
     } else if ($112) break; else {
      label = 40;
      break;
     }
    } while (0);
    if ((label | 0) == 38) if ($112) label = 40;
    if ((label | 0) == 40) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $97 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if ($97) {
     __THREW__ = 0;
     invoke_vi(HEAP32[$1 >> 2] | 0, $97 | 0);
     $100 = __THREW__;
     __THREW__ = 0;
     if ($100 & 1) {
      $102 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($102);
     }
    }
    STACKTOP = sp;
    return;
   }
  } while (0);
  if ((label | 0) == 11) {
   $35 = ___cxa_find_matching_catch() | 0;
   $$0 = $35;
   $$01 = tempRet0;
  }
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre6 = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre6) {
   $$112 = $$0;
   $$1210 = $$01;
  } else {
   $$111 = $$0;
   $$129 = $$01;
   $106 = HEAP32[$1 >> 2] | 0;
   $107 = $$pre6;
   label = 47;
  }
 }
 if ((label | 0) == 47) {
  __THREW__ = 0;
  invoke_vi($106 | 0, $107 | 0);
  $108 = __THREW__;
  __THREW__ = 0;
  if ($108 & 1) {
   $110 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($110);
  } else {
   $$112 = $$111;
   $$1210 = $$129;
  }
 }
 ___resumeException($$112 | 0);
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$112 = 0, $$113 = 0, $$1210 = 0, $$1211 = 0, $$byval_copy = 0, $$pre7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $104 = 0, $105 = 0, $106 = 0, $108 = 0, $11 = 0, $12 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $42 = 0, $43 = 0, $45 = 0, $46 = 0, $5 = 0, $59 = 0, $6 = 0, $61 = 0, $71 = 0, $72 = 0, $75 = 0, $76 = 0, $77 = 0, $87 = 0, $88 = 0, $95 = 0, $98 = 0, $__atoms = 0, $__loc = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__nc$2$lcssa = 0, $__neg = 0, $__w$0 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp + 24 | 0;
 $vararg_buffer = sp;
 $__wbuf = sp + 136 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 12 | 0;
 $__loc = sp + 8 | 0;
 $__neg = sp + 134 | 0;
 $0 = sp + 4 | 0;
 $__atoms = sp + 124 | 0;
 HEAP32[$__wb >> 2] = $__wbuf;
 $1 = $__wb + 4 | 0;
 HEAP32[$1 >> 2] = 189;
 $2 = $__wbuf + 100 | 0;
 __THREW__ = 0;
 invoke_vii(47, $__loc | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $32 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$112 = $32;
  $$1210 = tempRet0;
  $104 = 189;
  $105 = $__wbuf;
  label = 45;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $__loc | 0, 50208) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  L4 : do if ($6 & 1) label = 11; else {
   HEAP8[$__neg >> 0] = 0;
   HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
   $10 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   $11 = invoke_iiiiiiiiiiii(1, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $10 | 0, $__err | 0, $__neg | 0, $5 | 0, $__wb | 0, $__wn | 0, $2 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) label = 11; else {
    if ($11) {
     __THREW__ = 0;
     invoke_iiiii(HEAP32[(HEAP32[$5 >> 2] | 0) + 32 >> 2] | 0, $5 | 0, 49824, 49834, $__atoms | 0) | 0;
     $17 = __THREW__;
     __THREW__ = 0;
     if ($17 & 1) {
      label = 11;
      break;
     }
     $19 = HEAP32[$__wn >> 2] | 0;
     $20 = HEAP32[$__wb >> 2] | 0;
     $23 = $19 - $20 | 0;
     if (($23 | 0) > 98) {
      $26 = _malloc($23 + 2 | 0) | 0;
      if (!$26) {
       __THREW__ = 0;
       invoke_v(7);
       $28 = __THREW__;
       __THREW__ = 0;
       if ($28 & 1) {
        $30 = ___cxa_find_matching_catch() | 0;
        $$0 = $30;
        $$01 = tempRet0;
        break;
       } else {
        $38 = 0;
        $__nc$0 = 0;
       }
      } else {
       $38 = $26;
       $__nc$0 = $26;
      }
     } else {
      $38 = 0;
      $__nc$0 = $$byval_copy;
     }
     if (!(HEAP8[$__neg >> 0] | 0)) $__nc$1 = $__nc$0; else {
      HEAP8[$__nc$0 >> 0] = 45;
      $__nc$1 = $__nc$0 + 1 | 0;
     }
     $42 = $__atoms + 10 | 0;
     $43 = $__atoms;
     $45 = $19;
     $__nc$2 = $__nc$1;
     $__w$0 = $20;
     while (1) {
      if ($__w$0 >>> 0 >= $45 >>> 0) {
       $__nc$2$lcssa = $__nc$2;
       break;
      }
      $46 = HEAP8[$__w$0 >> 0] | 0;
      $$0$i = $__atoms;
      while (1) {
       if (($$0$i | 0) == ($42 | 0)) {
        $$0$lcssa$i = $42;
        break;
       }
       if ((HEAP8[$$0$i >> 0] | 0) == $46 << 24 >> 24) {
        $$0$lcssa$i = $$0$i;
        break;
       }
       $$0$i = $$0$i + 1 | 0;
      }
      HEAP8[$__nc$2 >> 0] = HEAP8[49824 + ($$0$lcssa$i - $43) >> 0] | 0;
      $45 = HEAP32[$__wn >> 2] | 0;
      $__nc$2 = $__nc$2 + 1 | 0;
      $__w$0 = $__w$0 + 1 | 0;
     }
     HEAP8[$__nc$2$lcssa >> 0] = 0;
     HEAP32[$vararg_buffer >> 2] = $__v;
     if ((_sscanf($$byval_copy, 49840, $vararg_buffer) | 0) != 1) {
      __THREW__ = 0;
      invoke_vi(190, 49848);
      $59 = __THREW__;
      __THREW__ = 0;
      if ($59 & 1) {
       $36 = ___cxa_find_matching_catch() | 0;
       $37 = tempRet0;
       _free($38);
       $$0 = $36;
       $$01 = $37;
       break;
      }
     }
     _free($38);
    }
    $61 = HEAP32[$__b >> 2] | 0;
    do if (!$61) $75 = 0; else if ((HEAP32[$61 + 12 >> 2] | 0) == (HEAP32[$61 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $71 = invoke_ii(HEAP32[(HEAP32[$61 >> 2] | 0) + 36 >> 2] | 0, $61 | 0) | 0;
     $72 = __THREW__;
     __THREW__ = 0;
     if ($72 & 1) {
      label = 11;
      break L4;
     }
     if (($71 | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $75 = 0;
      break;
     } else {
      $75 = HEAP32[$__b >> 2] | 0;
      break;
     }
    } else $75 = $61; while (0);
    $76 = ($75 | 0) == 0;
    $77 = HEAP32[$__e >> 2] | 0;
    do if (!$77) label = 37; else {
     if ((HEAP32[$77 + 12 >> 2] | 0) == (HEAP32[$77 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $87 = invoke_ii(HEAP32[(HEAP32[$77 >> 2] | 0) + 36 >> 2] | 0, $77 | 0) | 0;
      $88 = __THREW__;
      __THREW__ = 0;
      if ($88 & 1) {
       label = 11;
       break L4;
      }
      if (($87 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       label = 37;
       break;
      }
     }
     if (!$76) label = 38;
    } while (0);
    if ((label | 0) == 37) if ($76) label = 38;
    if ((label | 0) == 38) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $95 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if ($95) {
     __THREW__ = 0;
     invoke_vi(HEAP32[$1 >> 2] | 0, $95 | 0);
     $98 = __THREW__;
     __THREW__ = 0;
     if ($98 & 1) {
      $100 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($100);
     }
    }
    STACKTOP = sp;
    return;
   }
  } while (0);
  if ((label | 0) == 11) {
   $34 = ___cxa_find_matching_catch() | 0;
   $$0 = $34;
   $$01 = tempRet0;
  }
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre7 = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre7) {
   $$113 = $$0;
   $$1211 = $$01;
  } else {
   $$112 = $$0;
   $$1210 = $$01;
   $104 = HEAP32[$1 >> 2] | 0;
   $105 = $$pre7;
   label = 45;
  }
 }
 if ((label | 0) == 45) {
  __THREW__ = 0;
  invoke_vi($104 | 0, $105 | 0);
  $106 = __THREW__;
  __THREW__ = 0;
  if ($106 & 1) {
   $108 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($108);
  } else {
   $$113 = $$112;
   $$1211 = $$1210;
  }
 }
 ___resumeException($$113 | 0);
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $$01 = 0, $$01$be = 0, $$01$lcssa = 0, $$01$lcssa135 = 0, $$02 = 0, $$02$be = 0, $$02$lcssa128 = 0, $$1 = 0, $$1$lcssa = 0, $$1$lcssa121 = 0, $$1$lcssa122 = 0, $$2 = 0, $$lcssa = 0, $$lcssa142 = 0, $$lcssa147 = 0, $$lcssa154 = 0, $$pre80 = 0, $13 = 0, $14 = 0, $18 = 0, $25 = 0, $26 = 0, $27 = 0, $30 = 0, $32 = 0, $34 = 0, $37 = 0, $39 = 0, $4 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $58 = 0, $60 = 0, $68 = 0, $72 = 0, $73 = 0, $74 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $84 = 0, $86 = 0, $91 = 0, $92 = 0, $97 = 0, $97$phi = 0, $98 = 0, $fend$0 = 0, $fend$0$lcssa = 0, $fend$1 = 0, $fend$1$be = 0, $fend$2 = 0, $fend$2$lcssa = 0, $save_state = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $save_state = sp;
 $fend$0 = $frm;
 while (1) {
  if (($fend$0 | 0) == ($frm_end | 0)) {
   $fend$0$lcssa = $frm_end;
   break;
  }
  if (!(HEAP8[$fend$0 >> 0] | 0)) {
   $fend$0$lcssa = $fend$0;
   break;
  }
  $fend$0 = $fend$0 + 1 | 0;
 }
 HEAP32[$to_nxt >> 2] = $to;
 HEAP32[$frm_nxt >> 2] = $frm;
 $4 = $to_end;
 $5 = $this + 8 | 0;
 $$01 = $frm;
 $$02 = $to;
 $fend$1 = $fend$0$lcssa;
 while (1) {
  if (($$02 | 0) == ($to_end | 0) | ($$01 | 0) == ($frm_end | 0)) {
   $$01$lcssa = $$01;
   label = 50;
   break;
  }
  $8 = $st;
  $13 = HEAP32[$8 + 4 >> 2] | 0;
  $14 = $save_state;
  HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$14 + 4 >> 2] = $13;
  $18 = $fend$1;
  $25 = _uselocale(HEAP32[$5 >> 2] | 0) | 0;
  __THREW__ = 0;
  $26 = invoke_iiiiii(19, $$02 | 0, $frm_nxt | 0, $18 - $$01 | 0, $4 - $$02 >> 2 | 0, $st | 0) | 0;
  $27 = __THREW__;
  __THREW__ = 0;
  if ($27 & 1) {
   $$lcssa147 = $25;
   label = 11;
   break;
  }
  if ($25) {
   __THREW__ = 0;
   invoke_ii(72, $25 | 0) | 0;
   $30 = __THREW__;
   __THREW__ = 0;
   if ($30 & 1) {
    label = 10;
    break;
   }
  }
  if (($26 | 0) == -1) {
   $$01$lcssa135 = $$01;
   $$02$lcssa128 = $$02;
   $$lcssa142 = $18;
   label = 16;
   break;
  } else if (!$26) {
   label = 52;
   break;
  }
  $68 = (HEAP32[$to_nxt >> 2] | 0) + ($26 << 2) | 0;
  HEAP32[$to_nxt >> 2] = $68;
  if (($68 | 0) == ($to_end | 0)) {
   label = 34;
   break;
  }
  $$pre80 = HEAP32[$frm_nxt >> 2] | 0;
  if (($fend$1 | 0) == ($frm_end | 0)) {
   $$01$be = $$pre80;
   $$02$be = $68;
   $fend$1$be = $frm_end;
  } else {
   $72 = _uselocale(HEAP32[$5 >> 2] | 0) | 0;
   __THREW__ = 0;
   $73 = invoke_iiiii(15, $68 | 0, $$pre80 | 0, 1, $st | 0) | 0;
   $74 = __THREW__;
   __THREW__ = 0;
   if ($74 & 1) {
    $$lcssa154 = $72;
    label = 40;
    break;
   }
   if ($72) {
    __THREW__ = 0;
    invoke_ii(72, $72 | 0) | 0;
    $77 = __THREW__;
    __THREW__ = 0;
    if ($77 & 1) {
     label = 39;
     break;
    }
   }
   if ($73) {
    label = 52;
    break;
   }
   HEAP32[$to_nxt >> 2] = (HEAP32[$to_nxt >> 2] | 0) + 4;
   $91 = HEAP32[$frm_nxt >> 2] | 0;
   $92 = $91 + 1 | 0;
   HEAP32[$frm_nxt >> 2] = $92;
   $97 = $91;
   $fend$2 = $92;
   while (1) {
    if (($fend$2 | 0) == ($frm_end | 0)) {
     $fend$2$lcssa = $frm_end;
     break;
    }
    if (!(HEAP8[$fend$2 >> 0] | 0)) {
     $fend$2$lcssa = $fend$2;
     break;
    } else {
     $97$phi = $fend$2;
     $fend$2 = $97 + 2 | 0;
     $97 = $97$phi;
    }
   }
   $$01$be = $92;
   $$02$be = HEAP32[$to_nxt >> 2] | 0;
   $fend$1$be = $fend$2$lcssa;
  }
  $$01 = $$01$be;
  $$02 = $$02$be;
  $fend$1 = $fend$1$be;
 }
 do if ((label | 0) == 10) {
  $32 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($32);
 } else if ((label | 0) == 11) {
  $34 = ___cxa_find_matching_catch() | 0;
  if ($$lcssa147) {
   __THREW__ = 0;
   invoke_ii(72, $$lcssa147 | 0) | 0;
   $37 = __THREW__;
   __THREW__ = 0;
   if ($37 & 1) {
    $39 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($39);
   }
  }
  ___resumeException($34 | 0);
 } else if ((label | 0) == 16) {
  $$1 = $$01$lcssa135;
  $storemerge = $$02$lcssa128;
  while (1) {
   HEAP32[$to_nxt >> 2] = $storemerge;
   if (($$1 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
    $$1$lcssa = $$1;
    label = 32;
    break;
   }
   $46 = _uselocale(HEAP32[$5 >> 2] | 0) | 0;
   __THREW__ = 0;
   $47 = invoke_iiiii(15, $storemerge | 0, $$1 | 0, $$lcssa142 - $$1 | 0, $save_state | 0) | 0;
   $48 = __THREW__;
   __THREW__ = 0;
   if ($48 & 1) {
    $$lcssa = $46;
    label = 22;
    break;
   }
   if ($46) {
    __THREW__ = 0;
    invoke_ii(72, $46 | 0) | 0;
    $51 = __THREW__;
    __THREW__ = 0;
    if ($51 & 1) {
     label = 21;
     break;
    }
   }
   if (!$47) $$2 = $$1 + 1 | 0; else if (($47 | 0) == -2) {
    $$1$lcssa122 = $$1;
    label = 29;
    break;
   } else if (($47 | 0) == -1) {
    $$1$lcssa121 = $$1;
    label = 28;
    break;
   } else $$2 = $$1 + $47 | 0;
   $$1 = $$2;
   $storemerge = (HEAP32[$to_nxt >> 2] | 0) + 4 | 0;
  }
  if ((label | 0) == 21) {
   $53 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($53);
  } else if ((label | 0) == 22) {
   $55 = ___cxa_find_matching_catch() | 0;
   if ($$lcssa) {
    __THREW__ = 0;
    invoke_ii(72, $$lcssa | 0) | 0;
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     $60 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($60);
    }
   }
   ___resumeException($55 | 0);
  } else if ((label | 0) == 28) {
   HEAP32[$frm_nxt >> 2] = $$1$lcssa121;
   $$0 = 2;
   break;
  } else if ((label | 0) == 29) {
   HEAP32[$frm_nxt >> 2] = $$1$lcssa122;
   $$0 = 1;
   break;
  } else if ((label | 0) == 32) {
   HEAP32[$frm_nxt >> 2] = $$1$lcssa;
   $$0 = ($$1$lcssa | 0) != ($frm_end | 0) & 1;
   break;
  }
 } else if ((label | 0) == 34) {
  $98 = HEAP32[$frm_nxt >> 2] | 0;
  label = 51;
 } else if ((label | 0) == 39) {
  $79 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($79);
 } else if ((label | 0) == 40) {
  $81 = ___cxa_find_matching_catch() | 0;
  if ($$lcssa154) {
   __THREW__ = 0;
   invoke_ii(72, $$lcssa154 | 0) | 0;
   $84 = __THREW__;
   __THREW__ = 0;
   if ($84 & 1) {
    $86 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($86);
   }
  }
  ___resumeException($81 | 0);
 } else if ((label | 0) == 50) {
  $98 = $$01$lcssa;
  label = 51;
 } else if ((label | 0) == 52) $$0 = 2; while (0);
 if ((label | 0) == 51) $$0 = ($98 | 0) != ($frm_end | 0) & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$01$be = 0, $$01$lcssa = 0, $$01$lcssa99 = 0, $$02 = 0, $$02$be = 0, $$02$lcssa92 = 0, $$1 = 0, $$1$lcssa = 0, $$lcssa = 0, $$lcssa104 = 0, $$lcssa111 = 0, $104 = 0, $104$phi = 0, $105 = 0, $13 = 0, $14 = 0, $25 = 0, $26 = 0, $27 = 0, $30 = 0, $32 = 0, $34 = 0, $37 = 0, $39 = 0, $4 = 0, $43 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $58 = 0, $60 = 0, $64 = 0, $67 = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $83 = 0, $85 = 0, $94 = 0, $95 = 0, $98 = 0, $99 = 0, $fend$0 = 0, $fend$0$lcssa = 0, $fend$1 = 0, $fend$1$be = 0, $fend$2 = 0, $fend$2$lcssa = 0, $n$0 = 0, $p$0 = 0, $save_state = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $save_state = sp;
 $tmp = sp + 8 | 0;
 $fend$0 = $frm;
 while (1) {
  if (($fend$0 | 0) == ($frm_end | 0)) {
   $fend$0$lcssa = $frm_end;
   break;
  }
  if (!(HEAP32[$fend$0 >> 2] | 0)) {
   $fend$0$lcssa = $fend$0;
   break;
  }
  $fend$0 = $fend$0 + 4 | 0;
 }
 HEAP32[$to_nxt >> 2] = $to;
 HEAP32[$frm_nxt >> 2] = $frm;
 $4 = $to_end;
 $5 = $this + 8 | 0;
 $$01 = $frm;
 $$02 = $to;
 $fend$1 = $fend$0$lcssa;
 while (1) {
  if (($$02 | 0) == ($to_end | 0) | ($$01 | 0) == ($frm_end | 0)) {
   $$01$lcssa = $$01;
   label = 51;
   break;
  }
  $8 = $st;
  $13 = HEAP32[$8 + 4 >> 2] | 0;
  $14 = $save_state;
  HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$14 + 4 >> 2] = $13;
  $25 = _uselocale(HEAP32[$5 >> 2] | 0) | 0;
  __THREW__ = 0;
  $26 = invoke_iiiiii(18, $$02 | 0, $frm_nxt | 0, $fend$1 - $$01 >> 2 | 0, $4 - $$02 | 0, $st | 0) | 0;
  $27 = __THREW__;
  __THREW__ = 0;
  if ($27 & 1) {
   $$lcssa104 = $25;
   label = 11;
   break;
  }
  if ($25) {
   __THREW__ = 0;
   invoke_ii(72, $25 | 0) | 0;
   $30 = __THREW__;
   __THREW__ = 0;
   if ($30 & 1) {
    label = 10;
    break;
   }
  }
  if (($26 | 0) == -1) {
   $$01$lcssa99 = $$01;
   $$02$lcssa92 = $$02;
   label = 16;
   break;
  } else if (!$26) {
   $$0$ph = 1;
   label = 53;
   break;
  }
  $67 = (HEAP32[$to_nxt >> 2] | 0) + $26 | 0;
  HEAP32[$to_nxt >> 2] = $67;
  if (($67 | 0) == ($to_end | 0)) {
   label = 30;
   break;
  }
  if (($fend$1 | 0) == ($frm_end | 0)) {
   $$01$be = HEAP32[$frm_nxt >> 2] | 0;
   $$02$be = $67;
   $fend$1$be = $frm_end;
  } else {
   $71 = _uselocale(HEAP32[$5 >> 2] | 0) | 0;
   __THREW__ = 0;
   $72 = invoke_iiii(42, $tmp | 0, 0, $st | 0) | 0;
   $73 = __THREW__;
   __THREW__ = 0;
   if ($73 & 1) {
    $$lcssa111 = $71;
    label = 38;
    break;
   }
   if ($71) {
    __THREW__ = 0;
    invoke_ii(72, $71 | 0) | 0;
    $76 = __THREW__;
    __THREW__ = 0;
    if ($76 & 1) {
     label = 37;
     break;
    }
   }
   if (($72 | 0) == -1) {
    $$0$ph = 2;
    label = 53;
    break;
   }
   if ($72 >>> 0 > ($4 - (HEAP32[$to_nxt >> 2] | 0) | 0) >>> 0) {
    $$0$ph = 1;
    label = 53;
    break;
   }
   $n$0 = $72;
   $p$0 = $tmp;
   while (1) {
    if (!$n$0) break;
    $94 = HEAP8[$p$0 >> 0] | 0;
    $95 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $95 + 1;
    HEAP8[$95 >> 0] = $94;
    $n$0 = $n$0 + -1 | 0;
    $p$0 = $p$0 + 1 | 0;
   }
   $98 = HEAP32[$frm_nxt >> 2] | 0;
   $99 = $98 + 4 | 0;
   HEAP32[$frm_nxt >> 2] = $99;
   $104 = $98;
   $fend$2 = $99;
   while (1) {
    if (($fend$2 | 0) == ($frm_end | 0)) {
     $fend$2$lcssa = $frm_end;
     break;
    }
    if (!(HEAP32[$fend$2 >> 2] | 0)) {
     $fend$2$lcssa = $fend$2;
     break;
    } else {
     $104$phi = $fend$2;
     $fend$2 = $104 + 8 | 0;
     $104 = $104$phi;
    }
   }
   $$01$be = $99;
   $$02$be = HEAP32[$to_nxt >> 2] | 0;
   $fend$1$be = $fend$2$lcssa;
  }
  $$01 = $$01$be;
  $$02 = $$02$be;
  $fend$1 = $fend$1$be;
 }
 do if ((label | 0) == 10) {
  $32 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($32);
 } else if ((label | 0) == 11) {
  $34 = ___cxa_find_matching_catch() | 0;
  if ($$lcssa104) {
   __THREW__ = 0;
   invoke_ii(72, $$lcssa104 | 0) | 0;
   $37 = __THREW__;
   __THREW__ = 0;
   if ($37 & 1) {
    $39 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($39);
   }
  }
  ___resumeException($34 | 0);
 } else if ((label | 0) == 16) {
  HEAP32[$to_nxt >> 2] = $$02$lcssa92;
  $$1 = $$01$lcssa99;
  $46 = $$02$lcssa92;
  while (1) {
   if (($$1 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
    $$1$lcssa = $$1;
    label = 28;
    break;
   }
   $43 = HEAP32[$$1 >> 2] | 0;
   $45 = _uselocale(HEAP32[$5 >> 2] | 0) | 0;
   __THREW__ = 0;
   $47 = invoke_iiii(42, $46 | 0, $43 | 0, $save_state | 0) | 0;
   $48 = __THREW__;
   __THREW__ = 0;
   if ($48 & 1) {
    $$lcssa = $45;
    label = 22;
    break;
   }
   if ($45) {
    __THREW__ = 0;
    invoke_ii(72, $45 | 0) | 0;
    $51 = __THREW__;
    __THREW__ = 0;
    if ($51 & 1) {
     label = 21;
     break;
    }
   }
   if (($47 | 0) == -1) {
    $$1$lcssa = $$1;
    label = 28;
    break;
   }
   $64 = (HEAP32[$to_nxt >> 2] | 0) + $47 | 0;
   HEAP32[$to_nxt >> 2] = $64;
   $$1 = $$1 + 4 | 0;
   $46 = $64;
  }
  if ((label | 0) == 21) {
   $53 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($53);
  } else if ((label | 0) == 22) {
   $55 = ___cxa_find_matching_catch() | 0;
   if ($$lcssa) {
    __THREW__ = 0;
    invoke_ii(72, $$lcssa | 0) | 0;
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     $60 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($60);
    }
   }
   ___resumeException($55 | 0);
  } else if ((label | 0) == 28) {
   HEAP32[$frm_nxt >> 2] = $$1$lcssa;
   $$0 = 2;
   break;
  }
 } else if ((label | 0) == 30) {
  $105 = HEAP32[$frm_nxt >> 2] | 0;
  label = 52;
 } else if ((label | 0) == 37) {
  $78 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($78);
 } else if ((label | 0) == 38) {
  $80 = ___cxa_find_matching_catch() | 0;
  if ($$lcssa111) {
   __THREW__ = 0;
   invoke_ii(72, $$lcssa111 | 0) | 0;
   $83 = __THREW__;
   __THREW__ = 0;
   if ($83 & 1) {
    $85 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($85);
   }
  }
  ___resumeException($80 | 0);
 } else if ((label | 0) == 51) {
  $105 = $$01$lcssa;
  label = 52;
 } else if ((label | 0) == 53) $$0 = $$0$ph; while (0);
 if ((label | 0) == 52) $$0 = ($105 | 0) != ($frm_end | 0) & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$127 = 0, $$18 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $52 = 0, $53 = 0, $57 = 0, $58 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $66 = 0, $67 = 0, $69 = 0, $72 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $$byval_copy = sp + 88 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 150 | 0;
 $__nb = sp + 84 | 0;
 $__o = sp + 92 | 0;
 $__op = sp + 80 | 0;
 $__oe = sp + 76 | 0;
 $0 = sp + 72 | 0;
 $1 = sp + 68 | 0;
 $2 = sp + 64 | 0;
 $3 = $__fmt;
 HEAP32[$3 >> 2] = 37;
 HEAP32[$3 + 4 >> 2] = 0;
 $10 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 48920, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $11 = __ZNSt3__16__clocEv() | 0;
 if ($10) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  $vararg_ptr1 = $vararg_buffer + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_ptr1 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_ptr1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_buffer2 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_buffer2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer2) | 0;
 }
 do if (($__nc$0 | 0) > 29) {
  if ($10) {
   __THREW__ = 0;
   $17 = invoke_i(2) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr8 = $vararg_buffer5 + 8 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr8 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $22 = invoke_iiiii(12, $__nb | 0, $17 | 0, $__fmt | 0, $vararg_buffer5 | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) {
     $__nc$1 = $22;
     label = 12;
    }
   }
  } else {
   __THREW__ = 0;
   $27 = invoke_i(2) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer9 >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr12 = $vararg_buffer9 + 8 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr12 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr12 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $32 = invoke_iiiii(12, $__nb | 0, $27 | 0, $__fmt | 0, $vararg_buffer9 | 0) | 0;
    $33 = __THREW__;
    __THREW__ = 0;
    if (!($33 & 1)) {
     $__nc$1 = $32;
     label = 12;
    }
   }
  }
  if ((label | 0) == 12) {
   $35 = HEAP32[$__nb >> 2] | 0;
   if ($35) {
    $40 = $35;
    $64 = $35;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
   __THREW__ = 0;
   invoke_v(7);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) {
    $$pre = HEAP32[$__nb >> 2] | 0;
    $40 = $$pre;
    $64 = $$pre;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $$127 = tempRet0;
  $$18 = $25;
 } else {
  $40 = HEAP32[$__nb >> 2] | 0;
  $64 = 0;
  $__nc$2 = $__nc$0;
  label = 15;
 } while (0);
 if ((label | 0) == 15) {
  $39 = $40 + $__nc$2 | 0;
  $41 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($40, $39, $__iob) | 0;
  if (($40 | 0) == ($__nar | 0)) {
   $52 = $__nar;
   $62 = 0;
   $__ob$0 = $__o;
   label = 20;
  } else {
   $44 = _malloc($__nc$2 << 1) | 0;
   if (!$44) {
    __THREW__ = 0;
    invoke_v(7);
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     $72 = 0;
     label = 19;
    } else {
     $52 = HEAP32[$__nb >> 2] | 0;
     $62 = 0;
     $__ob$0 = 0;
     label = 20;
    }
   } else {
    $52 = $40;
    $62 = $44;
    $__ob$0 = $44;
    label = 20;
   }
  }
  do if ((label | 0) == 20) {
   __THREW__ = 0;
   invoke_vii(47, $0 | 0, $__iob | 0);
   $50 = __THREW__;
   __THREW__ = 0;
   if ($50 & 1) {
    $72 = $62;
    label = 19;
   } else {
    __THREW__ = 0;
    invoke_viiiiiii(42, $52 | 0, $41 | 0, $39 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
    $53 = __THREW__;
    __THREW__ = 0;
    if ($53 & 1) {
     $66 = ___cxa_find_matching_catch() | 0;
     $67 = tempRet0;
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
     $$0 = $66;
     $$01 = $67;
     $69 = $62;
     break;
    }
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    HEAP32[$2 >> 2] = HEAP32[$__s >> 2];
    $57 = HEAP32[$__op >> 2] | 0;
    $58 = HEAP32[$__oe >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    invoke_viiiiiii(39, $1 | 0, $$byval_copy | 0, $__ob$0 | 0, $57 | 0, $58 | 0, $__iob | 0, $__fl | 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     $72 = $62;
     label = 19;
    } else {
     $61 = HEAP32[$1 >> 2] | 0;
     HEAP32[$__s >> 2] = $61;
     HEAP32[$agg$result >> 2] = $61;
     _free($62);
     if ($62) {}
     _free($64);
     if ($64) {}
     STACKTOP = sp;
     return;
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   $48 = ___cxa_find_matching_catch() | 0;
   $$0 = $48;
   $$01 = tempRet0;
   $69 = $72;
  }
  _free($69);
  if ($69) {}
  _free($64);
  if (!$64) {
   $$127 = $$01;
   $$18 = $$0;
  } else {
   $$127 = $$01;
   $$18 = $$0;
  }
 }
 ___resumeException($$18 | 0);
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result, $this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pn = 0, $0 = 0, $1 = 0, $101 = 0, $102 = 0, $103 = 0, $108 = 0, $11 = 0, $118 = 0, $119 = 0, $122 = 0, $125 = 0, $126 = 0, $127 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $22 = 0, $31 = 0, $32 = 0, $34 = 0, $36 = 0, $4 = 0, $41 = 0, $42 = 0, $49 = 0, $51 = 0, $58 = 0, $6 = 0, $67 = 0, $69 = 0, $70 = 0, $77 = 0, $85 = 0, $87 = 0, $88 = 0, $91 = 0, $93 = 0, $95 = 0, $97 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__i$0$i$i5 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 $$byval_copy = sp + 468 | 0;
 $__loc = sp + 464 | 0;
 $__pat = sp + 472 | 0;
 $__dp = sp + 460 | 0;
 $__ts = sp + 456 | 0;
 $__grp = sp + 444 | 0;
 $__sym = sp + 432 | 0;
 $__sn = sp + 420 | 0;
 $__fd = sp + 416 | 0;
 $__mbuf = sp + 16 | 0;
 $__mi = sp + 8 | 0;
 $__me = sp + 4 | 0;
 $0 = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $1 = invoke_iii(22, $__loc | 0, 50200) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 do if ($2 & 1) label = 47; else {
  $4 = HEAP8[$__digits >> 0] | 0;
  $6 = ($4 & 1) == 0;
  if ($6) $11 = ($4 & 255) >>> 1; else $11 = HEAP32[$__digits + 4 >> 2] | 0;
  if (!$11) $31 = 0; else {
   if ($6) $17 = $__digits + 4 | 0; else $17 = HEAP32[$__digits + 8 >> 2] | 0;
   $16 = HEAP32[$17 >> 2] | 0;
   __THREW__ = 0;
   $21 = invoke_iii(HEAP32[(HEAP32[$1 >> 2] | 0) + 44 >> 2] | 0, $1 | 0, 45) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    label = 47;
    break;
   }
   $31 = ($16 | 0) == ($21 | 0);
  }
  $__i$0$i$i = 0;
  while (1) {
   if (($__i$0$i$i | 0) == 3) break;
   HEAP32[$__grp + ($__i$0$i$i << 2) >> 2] = 0;
   $__i$0$i$i = $__i$0$i$i + 1 | 0;
  }
  $__i$0$i$i3 = 0;
  while (1) {
   if (($__i$0$i$i3 | 0) == 3) break;
   HEAP32[$__sym + ($__i$0$i$i3 << 2) >> 2] = 0;
   $__i$0$i$i3 = $__i$0$i$i3 + 1 | 0;
  }
  $__i$0$i$i5 = 0;
  while (1) {
   if (($__i$0$i$i5 | 0) == 3) break;
   HEAP32[$__sn + ($__i$0$i$i5 << 2) >> 2] = 0;
   $__i$0$i$i5 = $__i$0$i$i5 + 1 | 0;
  }
  __THREW__ = 0;
  invoke_viiiiiiiiii(4, $__intl | 0, $31 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
  $32 = __THREW__;
  __THREW__ = 0;
  L27 : do if ($32 & 1) {
   $99 = ___cxa_find_matching_catch() | 0;
   $$0 = $99;
   $$01 = tempRet0;
  } else {
   $34 = HEAP8[$__digits >> 0] | 0;
   $36 = ($34 & 1) == 0;
   if ($36) $42 = ($34 & 255) >>> 1; else $42 = HEAP32[$__digits + 4 >> 2] | 0;
   $41 = HEAP32[$__fd >> 2] | 0;
   if (($42 | 0) > ($41 | 0)) {
    if ($36) $49 = ($34 & 255) >>> 1; else $49 = HEAP32[$__digits + 4 >> 2] | 0;
    $51 = HEAP8[$__sn >> 0] | 0;
    if (!($51 & 1)) $67 = ($51 & 255) >>> 1; else $67 = HEAP32[$__sn + 4 >> 2] | 0;
    $58 = HEAP8[$__sym >> 0] | 0;
    if (!($58 & 1)) $69 = ($58 & 255) >>> 1; else $69 = HEAP32[$__sym + 4 >> 2] | 0;
    $$pn = $67 + ($49 - $41 << 1 | 1) + $69 | 0;
   } else {
    $70 = HEAP8[$__sn >> 0] | 0;
    if (!($70 & 1)) $85 = ($70 & 255) >>> 1; else $85 = HEAP32[$__sn + 4 >> 2] | 0;
    $77 = HEAP8[$__sym >> 0] | 0;
    if (!($77 & 1)) $87 = ($77 & 255) >>> 1; else $87 = HEAP32[$__sym + 4 >> 2] | 0;
    $$pn = $85 + 2 + $87 | 0;
   }
   $88 = $$pn + $41 | 0;
   do if ($88 >>> 0 > 100) {
    $91 = _malloc($88 << 2) | 0;
    if (!$91) {
     __THREW__ = 0;
     invoke_v(7);
     $93 = __THREW__;
     __THREW__ = 0;
     if ($93 & 1) {
      $95 = ___cxa_find_matching_catch() | 0;
      $$0 = $95;
      $$01 = tempRet0;
      break L27;
     } else {
      $103 = 0;
      $108 = HEAP8[$__digits >> 0] | 0;
      $__mb$0 = 0;
      break;
     }
    } else {
     $103 = $91;
     $108 = $34;
     $__mb$0 = $91;
    }
   } else {
    $103 = 0;
    $108 = $34;
    $__mb$0 = $__mbuf;
   } while (0);
   if (!($108 & 1)) {
    $118 = $__digits + 4 | 0;
    $119 = ($108 & 255) >>> 1;
   } else {
    $118 = HEAP32[$__digits + 8 >> 2] | 0;
    $119 = HEAP32[$__digits + 4 >> 2] | 0;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiiiiiiii(2, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $118 | 0, $118 + ($119 << 2) | 0, $1 | 0, $31 | 0, $__pat | 0, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $41 | 0);
   $122 = __THREW__;
   __THREW__ = 0;
   if (!($122 & 1)) {
    HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
    $125 = HEAP32[$__mi >> 2] | 0;
    $126 = HEAP32[$__me >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
    invoke_viiiiiii(45, $agg$result | 0, $$byval_copy | 0, $__mb$0 | 0, $125 | 0, $126 | 0, $__iob | 0, $__fl | 0);
    $127 = __THREW__;
    __THREW__ = 0;
    if (!($127 & 1)) {
     if ($103) _free($103);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
     STACKTOP = sp;
     return;
    }
   }
   $101 = ___cxa_find_matching_catch() | 0;
   $102 = tempRet0;
   if (!$103) {
    $$0 = $101;
    $$01 = $102;
   } else {
    _free($103);
    $$0 = $101;
    $$01 = $102;
   }
  } while (0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
  $$1 = $$0;
  $$12 = $$01;
 } while (0);
 if ((label | 0) == 47) {
  $97 = ___cxa_find_matching_catch() | 0;
  $$1 = $97;
  $$12 = tempRet0;
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($$1 | 0);
}

function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $123 = 0, $13 = 0, $135 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $16 = 0, $28 = 0, $3 = 0, $30 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $60 = 0, $63 = 0, $73 = 0, $76 = 0, $86 = 0, $87 = 0, $89 = 0, $91 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $__r$0$lcssa40 = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $147 = 1; else {
  $3 = HEAP32[$0 + 12 >> 2] | 0;
  if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $147 = 1;
   break;
  } else {
   $147 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $13 = HEAP32[$__e >> 2] | 0;
 do if (!$13) label = 14; else {
  $16 = HEAP32[$13 + 12 >> 2] | 0;
  if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 14;
   break;
  } else if ($147) {
   $148 = $13;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($147) label = 16; else {
  $148 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $$01 = 0;
 } else if ((label | 0) == 17) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAP32[$30 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, $$0$i$i) | 0)) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $$01 = 0;
   break;
  }
  $49 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $$0$i$i, 0) | 0) << 24 >> 24;
  $50 = HEAP32[$__b >> 2] | 0;
  $51 = $50 + 12 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  if (($52 | 0) == (HEAP32[$50 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$50 >> 2] | 0) + 40 >> 2] & 127]($50) | 0; else HEAP32[$51 >> 2] = $52 + 4;
  $$0$in = $__n;
  $$pre$i3$i$i10 = $148;
  $73 = $148;
  $__r$0$in = $49;
  while (1) {
   $__r$0 = $__r$0$in + -48 | 0;
   $$0 = $$0$in + -1 | 0;
   $60 = HEAP32[$__b >> 2] | 0;
   do if (!$60) $87 = 1; else {
    $63 = HEAP32[$60 + 12 >> 2] | 0;
    if (($63 | 0) == (HEAP32[$60 + 16 >> 2] | 0)) $$0$i$i$i$i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 36 >> 2] & 127]($60) | 0; else $$0$i$i$i$i2 = HEAP32[$63 >> 2] | 0;
    if (($$0$i$i$i$i2 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $87 = 1;
     break;
    } else {
     $87 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!$73) {
    $$pre$i3$i$i25 = $$pre$i3$i$i10;
    $149 = 0;
    $86 = 1;
   } else {
    $76 = HEAP32[$73 + 12 >> 2] | 0;
    if (($76 | 0) == (HEAP32[$73 + 16 >> 2] | 0)) $$0$i$i1$i$i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 36 >> 2] & 127]($73) | 0; else $$0$i$i1$i$i8 = HEAP32[$76 >> 2] | 0;
    if (($$0$i$i1$i$i8 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i3$i$i25 = 0;
     $149 = 0;
     $86 = 1;
     break;
    } else {
     $$pre$i3$i$i25 = $$pre$i3$i$i10;
     $149 = $$pre$i3$i$i10;
     $86 = ($$pre$i3$i$i10 | 0) == 0;
     break;
    }
   } while (0);
   $89 = HEAP32[$__b >> 2] | 0;
   if (!(($$0$in | 0) > 1 & ($87 ^ $86))) {
    $$lcssa = $89;
    $$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;
    $__r$0$lcssa = $__r$0;
    break;
   }
   $91 = HEAP32[$89 + 12 >> 2] | 0;
   if (($91 | 0) == (HEAP32[$89 + 16 >> 2] | 0)) $$0$i$i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$89 >> 2] | 0) + 36 >> 2] & 127]($89) | 0; else $$0$i$i14 = HEAP32[$91 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, $$0$i$i14) | 0)) {
    $__r$0$lcssa40 = $__r$0;
    label = 65;
    break;
   }
   $110 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $$0$i$i14, 0) | 0) << 24 >> 24) + ($__r$0 * 10 | 0) | 0;
   $111 = HEAP32[$__b >> 2] | 0;
   $112 = $111 + 12 | 0;
   $113 = HEAP32[$112 >> 2] | 0;
   if (($113 | 0) == (HEAP32[$111 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$111 >> 2] | 0) + 40 >> 2] & 127]($111) | 0; else HEAP32[$112 >> 2] = $113 + 4;
   $$0$in = $$0;
   $$pre$i3$i$i10 = $$pre$i3$i$i25;
   $73 = $149;
   $__r$0$in = $110;
  }
  if ((label | 0) == 65) {
   $$01 = $__r$0$lcssa40;
   break;
  }
  do if (!$$lcssa) $150 = 1; else {
   $123 = HEAP32[$$lcssa + 12 >> 2] | 0;
   if (($123 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] & 127]($$lcssa) | 0; else $$0$i$i$i$i17 = HEAP32[$123 >> 2] | 0;
   if (($$0$i$i$i$i17 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $150 = 1;
    break;
   } else {
    $150 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$$pre$i3$i$i25$lcssa) label = 62; else {
   $135 = HEAP32[$$pre$i3$i$i25$lcssa + 12 >> 2] | 0;
   if (($135 | 0) == (HEAP32[$$pre$i3$i$i25$lcssa + 16 >> 2] | 0)) $$0$i$i1$i$i23 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i25$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i25$lcssa) | 0; else $$0$i$i1$i$i23 = HEAP32[$135 >> 2] | 0;
   if (($$0$i$i1$i$i23 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 62;
    break;
   } else if ($150) {
    $$01 = $__r$0$lcssa;
    break L22;
   } else break;
  } while (0);
  if ((label | 0) == 62) if (!$150) {
   $$01 = $__r$0$lcssa;
   break;
  }
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
  $$01 = $__r$0$lcssa;
 } while (0);
 return $$01 | 0;
}

function _try_realloc_chunk($p, $nb) {
 $p = $p | 0;
 $nb = $nb | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $101 = 0, $103 = 0, $106 = 0, $109 = 0, $110 = 0, $112 = 0, $113 = 0, $115 = 0, $116 = 0, $118 = 0, $119 = 0, $124 = 0, $125 = 0, $134 = 0, $139 = 0, $143 = 0, $149 = 0, $159 = 0, $168 = 0, $2 = 0, $20 = 0, $3 = 0, $33 = 0, $35 = 0, $4 = 0, $45 = 0, $47 = 0, $5 = 0, $56 = 0, $62 = 0, $68 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $91 = 0, $96 = 0, $98 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0, $RP$0$ph = 0, $newp$0 = 0, $storemerge = 0, $storemerge21 = 0;
 $0 = $p + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $1 & -8;
 $3 = $p + $2 | 0;
 $4 = HEAP32[11080] | 0;
 $5 = $1 & 3;
 if (!(($5 | 0) != 1 & $p >>> 0 >= $4 >>> 0 & $p >>> 0 < $3 >>> 0)) _abort();
 $7 = $p + ($2 | 4) | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (!($8 & 1)) _abort();
 if (!$5) {
  if ($nb >>> 0 < 256) {
   $newp$0 = 0;
   return $newp$0 | 0;
  }
  if ($2 >>> 0 >= ($nb + 4 | 0) >>> 0) if (($2 - $nb | 0) >>> 0 <= HEAP32[11196] << 1 >>> 0) {
   $newp$0 = $p;
   return $newp$0 | 0;
  }
  $newp$0 = 0;
  return $newp$0 | 0;
 }
 if ($2 >>> 0 >= $nb >>> 0) {
  $20 = $2 - $nb | 0;
  if ($20 >>> 0 <= 15) {
   $newp$0 = $p;
   return $newp$0 | 0;
  }
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$p + ($nb + 4) >> 2] = $20 | 3;
  HEAP32[$7 >> 2] = HEAP32[$7 >> 2] | 1;
  _dispose_chunk($p + $nb | 0, $20);
  $newp$0 = $p;
  return $newp$0 | 0;
 }
 if (($3 | 0) == (HEAP32[11082] | 0)) {
  $33 = (HEAP32[11079] | 0) + $2 | 0;
  if ($33 >>> 0 <= $nb >>> 0) {
   $newp$0 = 0;
   return $newp$0 | 0;
  }
  $35 = $33 - $nb | 0;
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$p + ($nb + 4) >> 2] = $35 | 1;
  HEAP32[11082] = $p + $nb;
  HEAP32[11079] = $35;
  $newp$0 = $p;
  return $newp$0 | 0;
 }
 if (($3 | 0) == (HEAP32[11081] | 0)) {
  $45 = (HEAP32[11078] | 0) + $2 | 0;
  if ($45 >>> 0 < $nb >>> 0) {
   $newp$0 = 0;
   return $newp$0 | 0;
  }
  $47 = $45 - $nb | 0;
  if ($47 >>> 0 > 15) {
   HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
   HEAP32[$p + ($nb + 4) >> 2] = $47 | 1;
   HEAP32[$p + $45 >> 2] = $47;
   $56 = $p + ($45 + 4) | 0;
   HEAP32[$56 >> 2] = HEAP32[$56 >> 2] & -2;
   $storemerge = $p + $nb | 0;
   $storemerge21 = $47;
  } else {
   HEAP32[$0 >> 2] = $1 & 1 | $45 | 2;
   $62 = $p + ($45 + 4) | 0;
   HEAP32[$62 >> 2] = HEAP32[$62 >> 2] | 1;
   $storemerge = 0;
   $storemerge21 = 0;
  }
  HEAP32[11078] = $storemerge21;
  HEAP32[11081] = $storemerge;
  $newp$0 = $p;
  return $newp$0 | 0;
 }
 if ($8 & 2) {
  $newp$0 = 0;
  return $newp$0 | 0;
 }
 $68 = ($8 & -8) + $2 | 0;
 if ($68 >>> 0 < $nb >>> 0) {
  $newp$0 = 0;
  return $newp$0 | 0;
 }
 $70 = $68 - $nb | 0;
 $71 = $8 >>> 3;
 do if ($8 >>> 0 < 256) {
  $74 = HEAP32[$p + ($2 + 8) >> 2] | 0;
  $76 = HEAP32[$p + ($2 + 12) >> 2] | 0;
  $78 = 44344 + ($71 << 1 << 2) | 0;
  if (($74 | 0) != ($78 | 0)) {
   if ($74 >>> 0 < $4 >>> 0) _abort();
   if ((HEAP32[$74 + 12 >> 2] | 0) != ($3 | 0)) _abort();
  }
  if (($76 | 0) == ($74 | 0)) {
   HEAP32[11076] = HEAP32[11076] & ~(1 << $71);
   break;
  }
  if (($76 | 0) == ($78 | 0)) $$pre$phiZ2D = $76 + 8 | 0; else {
   if ($76 >>> 0 < $4 >>> 0) _abort();
   $91 = $76 + 8 | 0;
   if ((HEAP32[$91 >> 2] | 0) == ($3 | 0)) $$pre$phiZ2D = $91; else _abort();
  }
  HEAP32[$74 + 12 >> 2] = $76;
  HEAP32[$$pre$phiZ2D >> 2] = $74;
 } else {
  $96 = HEAP32[$p + ($2 + 24) >> 2] | 0;
  $98 = HEAP32[$p + ($2 + 12) >> 2] | 0;
  do if (($98 | 0) == ($3 | 0)) {
   $109 = $p + ($2 + 20) | 0;
   $110 = HEAP32[$109 >> 2] | 0;
   if (!$110) {
    $112 = $p + ($2 + 16) | 0;
    $113 = HEAP32[$112 >> 2] | 0;
    if (!$113) {
     $R$1 = 0;
     break;
    } else {
     $R$0$ph = $113;
     $RP$0$ph = $112;
    }
   } else {
    $R$0$ph = $110;
    $RP$0$ph = $109;
   }
   $R$0 = $R$0$ph;
   $RP$0 = $RP$0$ph;
   while (1) {
    $115 = $R$0 + 20 | 0;
    $116 = HEAP32[$115 >> 2] | 0;
    if (!$116) {
     $118 = $R$0 + 16 | 0;
     $119 = HEAP32[$118 >> 2] | 0;
     if (!$119) {
      $R$0$lcssa = $R$0;
      $RP$0$lcssa = $RP$0;
      break;
     } else {
      $R$0$be = $119;
      $RP$0$be = $118;
     }
    } else {
     $R$0$be = $116;
     $RP$0$be = $115;
    }
    $R$0 = $R$0$be;
    $RP$0 = $RP$0$be;
   }
   if ($RP$0$lcssa >>> 0 < $4 >>> 0) _abort(); else {
    HEAP32[$RP$0$lcssa >> 2] = 0;
    $R$1 = $R$0$lcssa;
    break;
   }
  } else {
   $101 = HEAP32[$p + ($2 + 8) >> 2] | 0;
   if ($101 >>> 0 < $4 >>> 0) _abort();
   $103 = $101 + 12 | 0;
   if ((HEAP32[$103 >> 2] | 0) != ($3 | 0)) _abort();
   $106 = $98 + 8 | 0;
   if ((HEAP32[$106 >> 2] | 0) == ($3 | 0)) {
    HEAP32[$103 >> 2] = $98;
    HEAP32[$106 >> 2] = $101;
    $R$1 = $98;
    break;
   } else _abort();
  } while (0);
  if ($96) {
   $124 = HEAP32[$p + ($2 + 28) >> 2] | 0;
   $125 = 44608 + ($124 << 2) | 0;
   if (($3 | 0) == (HEAP32[$125 >> 2] | 0)) {
    HEAP32[$125 >> 2] = $R$1;
    if (!$R$1) {
     HEAP32[11077] = HEAP32[11077] & ~(1 << $124);
     break;
    }
   } else {
    if ($96 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort();
    $134 = $96 + 16 | 0;
    if ((HEAP32[$134 >> 2] | 0) == ($3 | 0)) HEAP32[$134 >> 2] = $R$1; else HEAP32[$96 + 20 >> 2] = $R$1;
    if (!$R$1) break;
   }
   $139 = HEAP32[11080] | 0;
   if ($R$1 >>> 0 < $139 >>> 0) _abort();
   HEAP32[$R$1 + 24 >> 2] = $96;
   $143 = HEAP32[$p + ($2 + 16) >> 2] | 0;
   do if ($143) if ($143 >>> 0 < $139 >>> 0) _abort(); else {
    HEAP32[$R$1 + 16 >> 2] = $143;
    HEAP32[$143 + 24 >> 2] = $R$1;
    break;
   } while (0);
   $149 = HEAP32[$p + ($2 + 20) >> 2] | 0;
   if ($149) if ($149 >>> 0 < (HEAP32[11080] | 0) >>> 0) _abort(); else {
    HEAP32[$R$1 + 20 >> 2] = $149;
    HEAP32[$149 + 24 >> 2] = $R$1;
    break;
   }
  }
 } while (0);
 if ($70 >>> 0 < 16) {
  HEAP32[$0 >> 2] = $68 | $1 & 1 | 2;
  $159 = $p + ($68 | 4) | 0;
  HEAP32[$159 >> 2] = HEAP32[$159 >> 2] | 1;
  $newp$0 = $p;
  return $newp$0 | 0;
 } else {
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$p + ($nb + 4) >> 2] = $70 | 3;
  $168 = $p + ($68 | 4) | 0;
  HEAP32[$168 >> 2] = HEAP32[$168 >> 2] | 1;
  _dispose_chunk($p + $nb | 0, $70);
  $newp$0 = $p;
  return $newp$0 | 0;
 }
 return 0;
}

function _fmod($x, $y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa49 = 0, $$lcssa51 = 0, $$lcssa53 = 0, $$lcssa54 = 0, $$lcssa55 = 0, $$lcssa7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $106 = 0, $107 = 0, $11 = 0, $112 = 0, $113 = 0, $115 = 0, $118 = 0, $12 = 0, $120 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $146 = 0, $149 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $2 = 0, $23 = 0.0, $25 = 0, $26 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $44 = 0, $45 = 0, $46 = 0, $55 = 0, $6 = 0, $60 = 0, $61 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $78 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $93 = 0, $94 = 0, $96 = 0, $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, label = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $y;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $4 = _bitshift64Lshr($0 | 0, $1 | 0, 52) | 0;
 $6 = $4 & 2047;
 $7 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = _bitshift64Shl($2 | 0, $3 | 0, 1) | 0;
 $12 = tempRet0;
 if (!(($11 | 0) == 0 & ($12 | 0) == 0)) {
  $16 = $3 & 2147483647;
  if (!($16 >>> 0 > 2146435072 | ($16 | 0) == 2146435072 & $2 >>> 0 > 0 | ($6 | 0) == 2047)) {
   $25 = _bitshift64Shl($0 | 0, $1 | 0, 1) | 0;
   $26 = tempRet0;
   if (!($26 >>> 0 > $12 >>> 0 | ($26 | 0) == ($12 | 0) & $25 >>> 0 > $11 >>> 0)) {
    if (!(($25 | 0) == ($11 | 0) & ($26 | 0) == ($12 | 0))) {
     $$0 = $x;
     return +$$0;
    }
    $$0 = $x * 0.0;
    return +$$0;
   }
   if (!$6) {
    $37 = _bitshift64Shl($0 | 0, $1 | 0, 12) | 0;
    $38 = tempRet0;
    if (($38 | 0) > -1 | ($38 | 0) == -1 & $37 >>> 0 > 4294967295) {
     $45 = $37;
     $46 = $38;
     $ex$026 = 0;
     while (1) {
      $44 = $ex$026 + -1 | 0;
      $45 = _bitshift64Shl($45 | 0, $46 | 0, 1) | 0;
      $46 = tempRet0;
      if (!(($46 | 0) > -1 | ($46 | 0) == -1 & $45 >>> 0 > 4294967295)) {
       $$lcssa55 = $44;
       break;
      } else $ex$026 = $44;
     }
     $ex$0$lcssa = $$lcssa55;
    } else $ex$0$lcssa = 0;
    $55 = _bitshift64Shl($0 | 0, $1 | 0, 1 - $ex$0$lcssa | 0) | 0;
    $83 = $55;
    $84 = tempRet0;
    $ex$1 = $ex$0$lcssa;
   } else {
    $83 = $0;
    $84 = $1 & 1048575 | 1048576;
    $ex$1 = $6;
   }
   if (!$9) {
    $60 = _bitshift64Shl($2 | 0, $3 | 0, 12) | 0;
    $61 = tempRet0;
    if (($61 | 0) > -1 | ($61 | 0) == -1 & $60 >>> 0 > 4294967295) {
     $68 = $60;
     $69 = $61;
     $ey$020 = 0;
     while (1) {
      $67 = $ey$020 + -1 | 0;
      $68 = _bitshift64Shl($68 | 0, $69 | 0, 1) | 0;
      $69 = tempRet0;
      if (!(($69 | 0) > -1 | ($69 | 0) == -1 & $68 >>> 0 > 4294967295)) {
       $$lcssa54 = $67;
       break;
      } else $ey$020 = $67;
     }
     $ey$0$lcssa = $$lcssa54;
    } else $ey$0$lcssa = 0;
    $78 = _bitshift64Shl($2 | 0, $3 | 0, 1 - $ey$0$lcssa | 0) | 0;
    $85 = $78;
    $86 = tempRet0;
    $ey$1$ph = $ey$0$lcssa;
   } else {
    $85 = $2;
    $86 = $3 & 1048575 | 1048576;
    $ey$1$ph = $9;
   }
   $87 = _i64Subtract($83 | 0, $84 | 0, $85 | 0, $86 | 0) | 0;
   $88 = tempRet0;
   $93 = ($88 | 0) > -1 | ($88 | 0) == -1 & $87 >>> 0 > 4294967295;
   do if (($ex$1 | 0) > ($ey$1$ph | 0)) {
    $154 = $93;
    $155 = $87;
    $156 = $88;
    $94 = $83;
    $96 = $84;
    $ex$212 = $ex$1;
    while (1) {
     if ($154) if (($94 | 0) == ($85 | 0) & ($96 | 0) == ($86 | 0)) break; else {
      $100 = $155;
      $101 = $156;
     } else {
      $100 = $94;
      $101 = $96;
     }
     $102 = _bitshift64Shl($100 | 0, $101 | 0, 1) | 0;
     $103 = tempRet0;
     $104 = $ex$212 + -1 | 0;
     $106 = _i64Subtract($102 | 0, $103 | 0, $85 | 0, $86 | 0) | 0;
     $107 = tempRet0;
     $112 = ($107 | 0) > -1 | ($107 | 0) == -1 & $106 >>> 0 > 4294967295;
     if (($104 | 0) > ($ey$1$ph | 0)) {
      $154 = $112;
      $155 = $106;
      $156 = $107;
      $94 = $102;
      $96 = $103;
      $ex$212 = $104;
     } else {
      $$lcssa51 = $104;
      $$lcssa53 = $112;
      $157 = $106;
      $158 = $107;
      $159 = $102;
      $160 = $103;
      label = 27;
      break;
     }
    }
    if ((label | 0) == 27) {
     $$lcssa7 = $$lcssa53;
     $113 = $159;
     $115 = $160;
     $152 = $157;
     $153 = $158;
     $ex$2$lcssa = $$lcssa51;
     break;
    }
    $$0 = $x * 0.0;
    return +$$0;
   } else {
    $$lcssa7 = $93;
    $113 = $83;
    $115 = $84;
    $152 = $87;
    $153 = $88;
    $ex$2$lcssa = $ex$1;
   } while (0);
   if ($$lcssa7) if (($113 | 0) == ($85 | 0) & ($115 | 0) == ($86 | 0)) {
    $$0 = $x * 0.0;
    return +$$0;
   } else {
    $118 = $153;
    $120 = $152;
   } else {
    $118 = $115;
    $120 = $113;
   }
   if ($118 >>> 0 < 1048576 | ($118 | 0) == 1048576 & $120 >>> 0 < 0) {
    $126 = $120;
    $127 = $118;
    $ex$39 = $ex$2$lcssa;
    while (1) {
     $128 = _bitshift64Shl($126 | 0, $127 | 0, 1) | 0;
     $129 = tempRet0;
     $130 = $ex$39 + -1 | 0;
     if ($129 >>> 0 < 1048576 | ($129 | 0) == 1048576 & $128 >>> 0 < 0) {
      $126 = $128;
      $127 = $129;
      $ex$39 = $130;
     } else {
      $$lcssa49 = $130;
      $161 = $128;
      $162 = $129;
      break;
     }
    }
    $137 = $161;
    $138 = $162;
    $ex$3$lcssa = $$lcssa49;
   } else {
    $137 = $120;
    $138 = $118;
    $ex$3$lcssa = $ex$2$lcssa;
   }
   if (($ex$3$lcssa | 0) > 0) {
    $139 = _i64Add($137 | 0, $138 | 0, 0, -1048576) | 0;
    $140 = tempRet0;
    $141 = _bitshift64Shl($ex$3$lcssa | 0, 0, 52) | 0;
    $149 = $140 | tempRet0;
    $151 = $139 | $141;
   } else {
    $146 = _bitshift64Lshr($137 | 0, $138 | 0, 1 - $ex$3$lcssa | 0) | 0;
    $149 = tempRet0;
    $151 = $146;
   }
   HEAP32[tempDoublePtr >> 2] = $151;
   HEAP32[tempDoublePtr + 4 >> 2] = $149 | $10;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
   return +$$0;
  }
 }
 $23 = $x * $y;
 $$0 = $23 / $23;
 return +$$0;
}

function __ZN12_GLOBAL__N_16Parser10unexpectedERK5TokenRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($agg$result, $tok, $while_) {
 $agg$result = $agg$result | 0;
 $tok = $tok | 0;
 $while_ = $while_ | 0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$01$i = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $36 = 0, $4 = 0, $46 = 0, $47 = 0, $48 = 0, $50 = 0, $53 = 0, $55 = 0, $56 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $64 = 0, $7 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $ss = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $0 = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $1 = sp;
 $2 = $ss + 64 | 0;
 $3 = $ss + 8 | 0;
 HEAP32[$3 >> 2] = 752;
 $4 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 900;
 HEAP32[$2 >> 2] = 920;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $4 | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $19 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $19;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 732;
 HEAP32[$2 >> 2] = 772;
 HEAP32[$3 >> 2] = 752;
 __THREW__ = 0;
 invoke_vi(177, $4 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 do if ($11 & 1) {
  $21 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $21;
 } else {
  HEAP32[$4 >> 2] = 1064;
  $13 = $ss + 44 | 0;
  HEAP32[$13 + 0 >> 2] = 0;
  HEAP32[$13 + 4 >> 2] = 0;
  HEAP32[$13 + 8 >> 2] = 0;
  HEAP32[$13 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $4 | 0, $0 | 0);
  $15 = __THREW__;
  __THREW__ = 0;
  if ($15 & 1) {
   $17 = ___cxa_find_matching_catch() | 0;
   $18 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
   $eh$lpad$body$i$index2Z2D = $18;
   $eh$lpad$body$i$indexZ2D = $17;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  __THREW__ = 0;
  $23 = invoke_iiii(25, $3 | 0, 37760, 12) | 0;
  $24 = __THREW__;
  __THREW__ = 0;
  if (!($24 & 1)) {
   __THREW__ = 0;
   $27 = invoke_ii(69, HEAP32[$tok >> 2] | 0) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    $30 = _strlen($27 | 0) | 0;
    __THREW__ = 0;
    invoke_iiii(25, $23 | 0, $27 | 0, $30 | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if (!($31 & 1)) {
     __THREW__ = 0;
     $33 = invoke_iiii(25, $23 | 0, 37776, 7) | 0;
     $34 = __THREW__;
     __THREW__ = 0;
     if (!($34 & 1)) {
      $36 = HEAP8[$while_ >> 0] | 0;
      if (!($36 & 1)) {
       $46 = $while_ + 1 | 0;
       $47 = ($36 & 255) >>> 1;
      } else {
       $46 = HEAP32[$while_ + 8 >> 2] | 0;
       $47 = HEAP32[$while_ + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $33 | 0, $46 | 0, $47 | 0) | 0;
      $48 = __THREW__;
      __THREW__ = 0;
      if (!($48 & 1)) {
       __THREW__ = 0;
       invoke_vii(43, $1 | 0, $4 | 0);
       $50 = __THREW__;
       __THREW__ = 0;
       if (!($50 & 1)) {
        __THREW__ = 0;
        invoke_vii(40, $agg$result | 0, $tok + 16 | 0);
        $53 = __THREW__;
        __THREW__ = 0;
        do if ($53 & 1) {
         $64 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body$index7Z2D = tempRet0;
         $eh$lpad$body$indexZ2D = $64;
        } else {
         $55 = $agg$result + 12 | 0;
         $56 = $tok + 28 | 0;
         HEAP32[$55 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
         HEAP32[$55 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
         HEAP32[$55 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
         HEAP32[$55 + 12 >> 2] = HEAP32[$56 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $agg$result + 28 | 0, $1 | 0);
         $58 = __THREW__;
         __THREW__ = 0;
         if ($58 & 1) {
          $60 = ___cxa_find_matching_catch() | 0;
          $61 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
          $eh$lpad$body$index7Z2D = $61;
          $eh$lpad$body$indexZ2D = $60;
          break;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
          HEAP32[$ss >> 2] = 732;
          HEAP32[$2 >> 2] = 772;
          HEAP32[$3 >> 2] = 752;
          HEAP32[$4 >> 2] = 1064;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
          __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
          __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
          STACKTOP = sp;
          return;
         }
        } while (0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        $$0 = $eh$lpad$body$indexZ2D;
        $$01 = $eh$lpad$body$index7Z2D;
        HEAP32[$ss >> 2] = 732;
        HEAP32[$2 >> 2] = 772;
        HEAP32[$3 >> 2] = 752;
        HEAP32[$4 >> 2] = 1064;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
        __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
        ___resumeException($$0 | 0);
       }
      }
     }
    }
   }
  }
  $62 = ___cxa_find_matching_catch() | 0;
  $$0 = $62;
  $$01 = tempRet0;
  HEAP32[$ss >> 2] = 732;
  HEAP32[$2 >> 2] = 772;
  HEAP32[$3 >> 2] = 752;
  HEAP32[$4 >> 2] = 1064;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
  ___resumeException($$0 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
 ___resumeException($$01$i | 0);
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$125 = 0, $$16 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $52 = 0, $53 = 0, $57 = 0, $58 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $66 = 0, $68 = 0, $70 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $$byval_copy = sp + 316 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 320 | 0;
 $__nb = sp + 312 | 0;
 $__o = sp + 84 | 0;
 $__op = sp + 80 | 0;
 $__oe = sp + 76 | 0;
 $0 = sp + 72 | 0;
 $1 = sp + 68 | 0;
 $2 = sp + 64 | 0;
 $3 = $__fmt;
 HEAP32[$3 >> 2] = 37;
 HEAP32[$3 + 4 >> 2] = 0;
 $10 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 48920, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $11 = __ZNSt3__16__clocEv() | 0;
 if ($10) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  $vararg_ptr1 = $vararg_buffer + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_ptr1 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_ptr1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_buffer2 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_buffer2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer2) | 0;
 }
 do if (($__nc$0 | 0) > 29) {
  if ($10) {
   __THREW__ = 0;
   $17 = invoke_i(2) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr8 = $vararg_buffer5 + 8 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr8 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $22 = invoke_iiiii(12, $__nb | 0, $17 | 0, $__fmt | 0, $vararg_buffer5 | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) {
     $__nc$1 = $22;
     label = 12;
    }
   }
  } else {
   __THREW__ = 0;
   $27 = invoke_i(2) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer9 >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr12 = $vararg_buffer9 + 8 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr12 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr12 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $32 = invoke_iiiii(12, $__nb | 0, $27 | 0, $__fmt | 0, $vararg_buffer9 | 0) | 0;
    $33 = __THREW__;
    __THREW__ = 0;
    if (!($33 & 1)) {
     $__nc$1 = $32;
     label = 12;
    }
   }
  }
  if ((label | 0) == 12) {
   $35 = HEAP32[$__nb >> 2] | 0;
   if ($35) {
    $40 = $35;
    $64 = $35;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
   __THREW__ = 0;
   invoke_v(7);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) {
    $$pre = HEAP32[$__nb >> 2] | 0;
    $40 = $$pre;
    $64 = $$pre;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $$125 = tempRet0;
  $$16 = $25;
 } else {
  $40 = HEAP32[$__nb >> 2] | 0;
  $64 = 0;
  $__nc$2 = $__nc$0;
  label = 15;
 } while (0);
 if ((label | 0) == 15) {
  $39 = $40 + $__nc$2 | 0;
  $41 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($40, $39, $__iob) | 0;
  if (($40 | 0) == ($__nar | 0)) {
   $52 = $__nar;
   $62 = 0;
   $__ob$0 = $__o;
   label = 20;
  } else {
   $44 = _malloc($__nc$2 << 3) | 0;
   if (!$44) {
    __THREW__ = 0;
    invoke_v(7);
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     $70 = 0;
     label = 19;
    } else {
     $52 = HEAP32[$__nb >> 2] | 0;
     $62 = $44;
     $__ob$0 = $44;
     label = 20;
    }
   } else {
    $52 = $40;
    $62 = $44;
    $__ob$0 = $44;
    label = 20;
   }
  }
  do if ((label | 0) == 20) {
   __THREW__ = 0;
   invoke_vii(47, $0 | 0, $__iob | 0);
   $50 = __THREW__;
   __THREW__ = 0;
   if ($50 & 1) {
    $70 = $62;
    label = 19;
   } else {
    __THREW__ = 0;
    invoke_viiiiiii(44, $52 | 0, $41 | 0, $39 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
    $53 = __THREW__;
    __THREW__ = 0;
    if ($53 & 1) {
     $65 = ___cxa_find_matching_catch() | 0;
     $66 = tempRet0;
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
     $$0 = $65;
     $$01 = $66;
     $68 = $62;
     break;
    }
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    HEAP32[$2 >> 2] = HEAP32[$__s >> 2];
    $57 = HEAP32[$__op >> 2] | 0;
    $58 = HEAP32[$__oe >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    invoke_viiiiiii(45, $1 | 0, $$byval_copy | 0, $__ob$0 | 0, $57 | 0, $58 | 0, $__iob | 0, $__fl | 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     $70 = $62;
     label = 19;
    } else {
     $61 = HEAP32[$1 >> 2] | 0;
     HEAP32[$__s >> 2] = $61;
     HEAP32[$agg$result >> 2] = $61;
     if ($62) _free($62);
     _free($64);
     STACKTOP = sp;
     return;
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   $48 = ___cxa_find_matching_catch() | 0;
   $$0 = $48;
   $$01 = tempRet0;
   $68 = $70;
  }
  if ($68) _free($68);
  _free($64);
  $$125 = $$01;
  $$16 = $$0;
 }
 ___resumeException($$16 | 0);
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result, $this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pn = 0, $0 = 0, $1 = 0, $100 = 0, $101 = 0, $102 = 0, $106 = 0, $11 = 0, $116 = 0, $117 = 0, $120 = 0, $123 = 0, $124 = 0, $125 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $22 = 0, $31 = 0, $32 = 0, $34 = 0, $36 = 0, $4 = 0, $41 = 0, $42 = 0, $49 = 0, $51 = 0, $58 = 0, $6 = 0, $67 = 0, $69 = 0, $70 = 0, $77 = 0, $85 = 0, $87 = 0, $88 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $98 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__i$0$i$i6 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 56 | 0;
 $__loc = sp + 52 | 0;
 $__pat = sp + 164 | 0;
 $__dp = sp + 161 | 0;
 $__ts = sp + 160 | 0;
 $__grp = sp + 40 | 0;
 $__sym = sp + 28 | 0;
 $__sn = sp + 16 | 0;
 $__fd = sp + 12 | 0;
 $__mbuf = sp + 60 | 0;
 $__mi = sp + 8 | 0;
 $__me = sp + 4 | 0;
 $0 = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $1 = invoke_iii(22, $__loc | 0, 50208) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 do if ($2 & 1) label = 47; else {
  $4 = HEAP8[$__digits >> 0] | 0;
  $6 = ($4 & 1) == 0;
  if ($6) $11 = ($4 & 255) >>> 1; else $11 = HEAP32[$__digits + 4 >> 2] | 0;
  if (!$11) $31 = 0; else {
   if ($6) $17 = $__digits + 1 | 0; else $17 = HEAP32[$__digits + 8 >> 2] | 0;
   $16 = HEAP8[$17 >> 0] | 0;
   __THREW__ = 0;
   $21 = invoke_iii(HEAP32[(HEAP32[$1 >> 2] | 0) + 28 >> 2] | 0, $1 | 0, 45) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    label = 47;
    break;
   }
   $31 = $16 << 24 >> 24 == $21 << 24 >> 24;
  }
  $__i$0$i$i = 0;
  while (1) {
   if (($__i$0$i$i | 0) == 3) break;
   HEAP32[$__grp + ($__i$0$i$i << 2) >> 2] = 0;
   $__i$0$i$i = $__i$0$i$i + 1 | 0;
  }
  $__i$0$i$i3 = 0;
  while (1) {
   if (($__i$0$i$i3 | 0) == 3) break;
   HEAP32[$__sym + ($__i$0$i$i3 << 2) >> 2] = 0;
   $__i$0$i$i3 = $__i$0$i$i3 + 1 | 0;
  }
  $__i$0$i$i6 = 0;
  while (1) {
   if (($__i$0$i$i6 | 0) == 3) break;
   HEAP32[$__sn + ($__i$0$i$i6 << 2) >> 2] = 0;
   $__i$0$i$i6 = $__i$0$i$i6 + 1 | 0;
  }
  __THREW__ = 0;
  invoke_viiiiiiiiii(3, $__intl | 0, $31 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
  $32 = __THREW__;
  __THREW__ = 0;
  L27 : do if ($32 & 1) {
   $98 = ___cxa_find_matching_catch() | 0;
   $$0 = $98;
   $$01 = tempRet0;
  } else {
   $34 = HEAP8[$__digits >> 0] | 0;
   $36 = ($34 & 1) == 0;
   if ($36) $42 = ($34 & 255) >>> 1; else $42 = HEAP32[$__digits + 4 >> 2] | 0;
   $41 = HEAP32[$__fd >> 2] | 0;
   if (($42 | 0) > ($41 | 0)) {
    if ($36) $49 = ($34 & 255) >>> 1; else $49 = HEAP32[$__digits + 4 >> 2] | 0;
    $51 = HEAP8[$__sn >> 0] | 0;
    if (!($51 & 1)) $67 = ($51 & 255) >>> 1; else $67 = HEAP32[$__sn + 4 >> 2] | 0;
    $58 = HEAP8[$__sym >> 0] | 0;
    if (!($58 & 1)) $69 = ($58 & 255) >>> 1; else $69 = HEAP32[$__sym + 4 >> 2] | 0;
    $$pn = $67 + ($49 - $41 << 1 | 1) + $69 | 0;
   } else {
    $70 = HEAP8[$__sn >> 0] | 0;
    if (!($70 & 1)) $85 = ($70 & 255) >>> 1; else $85 = HEAP32[$__sn + 4 >> 2] | 0;
    $77 = HEAP8[$__sym >> 0] | 0;
    if (!($77 & 1)) $87 = ($77 & 255) >>> 1; else $87 = HEAP32[$__sym + 4 >> 2] | 0;
    $$pn = $85 + 2 + $87 | 0;
   }
   $88 = $$pn + $41 | 0;
   do if ($88 >>> 0 > 100) {
    $90 = _malloc($88) | 0;
    if (!$90) {
     __THREW__ = 0;
     invoke_v(7);
     $92 = __THREW__;
     __THREW__ = 0;
     if ($92 & 1) {
      $94 = ___cxa_find_matching_catch() | 0;
      $$0 = $94;
      $$01 = tempRet0;
      break L27;
     } else {
      $102 = 0;
      $106 = HEAP8[$__digits >> 0] | 0;
      $__mb$0 = 0;
      break;
     }
    } else {
     $102 = $90;
     $106 = $34;
     $__mb$0 = $90;
    }
   } else {
    $102 = 0;
    $106 = $34;
    $__mb$0 = $__mbuf;
   } while (0);
   if (!($106 & 1)) {
    $116 = $__digits + 1 | 0;
    $117 = ($106 & 255) >>> 1;
   } else {
    $116 = HEAP32[$__digits + 8 >> 2] | 0;
    $117 = HEAP32[$__digits + 4 >> 2] | 0;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiiiiiiii(1, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $116 | 0, $116 + $117 | 0, $1 | 0, $31 | 0, $__pat | 0, HEAP8[$__dp >> 0] | 0, HEAP8[$__ts >> 0] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $41 | 0);
   $120 = __THREW__;
   __THREW__ = 0;
   if (!($120 & 1)) {
    HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
    $123 = HEAP32[$__mi >> 2] | 0;
    $124 = HEAP32[$__me >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
    invoke_viiiiiii(39, $agg$result | 0, $$byval_copy | 0, $__mb$0 | 0, $123 | 0, $124 | 0, $__iob | 0, $__fl | 0);
    $125 = __THREW__;
    __THREW__ = 0;
    if (!($125 & 1)) {
     _free($102);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
     STACKTOP = sp;
     return;
    }
   }
   $100 = ___cxa_find_matching_catch() | 0;
   $101 = tempRet0;
   _free($102);
   $$0 = $100;
   $$01 = $101;
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
  $$1 = $$0;
  $$12 = $$01;
 } while (0);
 if ((label | 0) == 47) {
  $96 = ___cxa_find_matching_catch() | 0;
  $$1 = $96;
  $$12 = tempRet0;
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($$1 | 0);
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $48 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $63 = 0, $66 = 0, $69 = 0, $76 = 0, $77 = 0, $78 = 0, $does_dst_type_point_to_our_static_type$0$off0 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off0 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0, $p$0 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0;
 L1 : do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else {
  if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
   $58 = HEAP32[$this + 12 >> 2] | 0;
   $59 = $this + ($58 << 3) + 16 | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this + 16 | 0, $info, $current_ptr, $path_below, $use_strcmp);
   $60 = $this + 24 | 0;
   if (($58 | 0) <= 1) break;
   $63 = HEAP32[$this + 8 >> 2] | 0;
   if (!($63 & 2)) {
    $66 = $info + 36 | 0;
    if ((HEAP32[$66 >> 2] | 0) != 1) {
     if (!($63 & 1)) {
      $78 = $info + 54 | 0;
      $p2$2 = $60;
      do {
       if (HEAP8[$78 >> 0] | 0) break;
       if ((HEAP32[$66 >> 2] | 0) == 1) break;
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2, $info, $current_ptr, $path_below, $use_strcmp);
       $p2$2 = $p2$2 + 8 | 0;
      } while ($p2$2 >>> 0 < $59 >>> 0);
      break;
     }
     $76 = $info + 24 | 0;
     $77 = $info + 54 | 0;
     $p2$1 = $60;
     do {
      if (HEAP8[$77 >> 0] | 0) break;
      if ((HEAP32[$66 >> 2] | 0) == 1) if ((HEAP32[$76 >> 2] | 0) == 1) break;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1, $info, $current_ptr, $path_below, $use_strcmp);
      $p2$1 = $p2$1 + 8 | 0;
     } while ($p2$1 >>> 0 < $59 >>> 0);
     break;
    }
   }
   $69 = $info + 54 | 0;
   $p2$0 = $60;
   do {
    if (HEAP8[$69 >> 0] | 0) break;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0, $info, $current_ptr, $path_below, $use_strcmp);
    $p2$0 = $p2$0 + 8 | 0;
   } while ($p2$0 >>> 0 < $59 >>> 0);
   break;
  }
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    $20 = $info + 44 | 0;
    if ((HEAP32[$20 >> 2] | 0) == 4) break;
    $26 = $this + (HEAP32[$this + 12 >> 2] << 3) + 16 | 0;
    $27 = $info + 52 | 0;
    $28 = $info + 53 | 0;
    $29 = $info + 54 | 0;
    $30 = $this + 8 | 0;
    $31 = $info + 24 | 0;
    $does_dst_type_point_to_our_static_type$0$off0 = 0;
    $is_dst_type_derived_from_static_type$0$off0 = 0;
    $p$0 = $this + 16 | 0;
    L37 : while (1) {
     if ($p$0 >>> 0 >= $26 >>> 0) {
      $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;
      $is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
      label = 20;
      break;
     }
     HEAP8[$27 >> 0] = 0;
     HEAP8[$28 >> 0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
     if (HEAP8[$29 >> 0] | 0) {
      $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;
      $is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
      label = 20;
      break;
     }
     do if (!(HEAP8[$28 >> 0] | 0)) {
      $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;
      $is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off0;
     } else {
      if (!(HEAP8[$27 >> 0] | 0)) if (!(HEAP32[$30 >> 2] & 1)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;
       $is_dst_type_derived_from_static_type$2$off0 = 1;
       label = 20;
       break L37;
      } else {
       $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;
       $is_dst_type_derived_from_static_type$1$off0 = 1;
       break;
      }
      if ((HEAP32[$31 >> 2] | 0) == 1) {
       label = 25;
       break L37;
      }
      if (!(HEAP32[$30 >> 2] & 2)) {
       label = 25;
       break L37;
      } else {
       $does_dst_type_point_to_our_static_type$1$off0 = 1;
       $is_dst_type_derived_from_static_type$1$off0 = 1;
      }
     } while (0);
     $does_dst_type_point_to_our_static_type$0$off0 = $does_dst_type_point_to_our_static_type$1$off0;
     $is_dst_type_derived_from_static_type$0$off0 = $is_dst_type_derived_from_static_type$1$off0;
     $p$0 = $p$0 + 8 | 0;
    }
    do if ((label | 0) == 20) {
     if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) label = 24; else {
      HEAP32[$14 >> 2] = $current_ptr;
      $48 = $info + 40 | 0;
      HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 1;
      if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$31 >> 2] | 0) == 2) {
       HEAP8[$29 >> 0] = 1;
       if ($is_dst_type_derived_from_static_type$2$off0) break;
      } else label = 24; else label = 24;
     }
     if ((label | 0) == 24) if ($is_dst_type_derived_from_static_type$2$off0) break;
     HEAP32[$20 >> 2] = 4;
     break L1;
    } else if ((label | 0) == 25) {} while (0);
    HEAP32[$20 >> 2] = 3;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$125 = 0, $$16 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $60 = 0, $62 = 0, $63 = 0, $64 = 0, $66 = 0, $68 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $$byval_copy = sp + 308 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 312 | 0;
 $__nb = sp + 304 | 0;
 $__o = sp + 76 | 0;
 $__op = sp + 72 | 0;
 $__oe = sp + 68 | 0;
 $0 = sp + 64 | 0;
 $1 = sp + 60 | 0;
 $2 = sp + 56 | 0;
 $3 = $__fmt;
 HEAP32[$3 >> 2] = 37;
 HEAP32[$3 + 4 >> 2] = 0;
 $10 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 48928, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $11 = __ZNSt3__16__clocEv() | 0;
 if ($10) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  $vararg_ptr1 = $vararg_buffer + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_ptr1 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_ptr1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_buffer2 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_buffer2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer2) | 0;
 }
 do if (($__nc$0 | 0) > 29) {
  if ($10) {
   __THREW__ = 0;
   $17 = invoke_i(2) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr8 = $vararg_buffer5 + 8 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr8 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $22 = invoke_iiiii(12, $__nb | 0, $17 | 0, $__fmt | 0, $vararg_buffer5 | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) {
     $__nc$1 = $22;
     label = 12;
    }
   }
  } else {
   __THREW__ = 0;
   $27 = invoke_i(2) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    __THREW__ = 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_buffer9 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_buffer9 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $30 = invoke_iiiii(12, $__nb | 0, $27 | 0, $__fmt | 0, $vararg_buffer9 | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if (!($31 & 1)) {
     $__nc$1 = $30;
     label = 12;
    }
   }
  }
  if ((label | 0) == 12) {
   $33 = HEAP32[$__nb >> 2] | 0;
   if ($33) {
    $38 = $33;
    $62 = $33;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
   __THREW__ = 0;
   invoke_v(7);
   $35 = __THREW__;
   __THREW__ = 0;
   if (!($35 & 1)) {
    $$pre = HEAP32[$__nb >> 2] | 0;
    $38 = $$pre;
    $62 = $$pre;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $$125 = tempRet0;
  $$16 = $25;
 } else {
  $38 = HEAP32[$__nb >> 2] | 0;
  $62 = 0;
  $__nc$2 = $__nc$0;
  label = 15;
 } while (0);
 if ((label | 0) == 15) {
  $37 = $38 + $__nc$2 | 0;
  $39 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38, $37, $__iob) | 0;
  if (($38 | 0) == ($__nar | 0)) {
   $50 = $__nar;
   $60 = 0;
   $__ob$0 = $__o;
   label = 20;
  } else {
   $42 = _malloc($__nc$2 << 3) | 0;
   if (!$42) {
    __THREW__ = 0;
    invoke_v(7);
    $44 = __THREW__;
    __THREW__ = 0;
    if ($44 & 1) {
     $68 = 0;
     label = 19;
    } else {
     $50 = HEAP32[$__nb >> 2] | 0;
     $60 = $42;
     $__ob$0 = $42;
     label = 20;
    }
   } else {
    $50 = $38;
    $60 = $42;
    $__ob$0 = $42;
    label = 20;
   }
  }
  do if ((label | 0) == 20) {
   __THREW__ = 0;
   invoke_vii(47, $0 | 0, $__iob | 0);
   $48 = __THREW__;
   __THREW__ = 0;
   if ($48 & 1) {
    $68 = $60;
    label = 19;
   } else {
    __THREW__ = 0;
    invoke_viiiiiii(44, $50 | 0, $39 | 0, $37 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
    $51 = __THREW__;
    __THREW__ = 0;
    if ($51 & 1) {
     $63 = ___cxa_find_matching_catch() | 0;
     $64 = tempRet0;
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
     $$0 = $63;
     $$01 = $64;
     $66 = $60;
     break;
    }
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    HEAP32[$2 >> 2] = HEAP32[$__s >> 2];
    $55 = HEAP32[$__op >> 2] | 0;
    $56 = HEAP32[$__oe >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    invoke_viiiiiii(45, $1 | 0, $$byval_copy | 0, $__ob$0 | 0, $55 | 0, $56 | 0, $__iob | 0, $__fl | 0);
    $57 = __THREW__;
    __THREW__ = 0;
    if ($57 & 1) {
     $68 = $60;
     label = 19;
    } else {
     $59 = HEAP32[$1 >> 2] | 0;
     HEAP32[$__s >> 2] = $59;
     HEAP32[$agg$result >> 2] = $59;
     if ($60) _free($60);
     _free($62);
     STACKTOP = sp;
     return;
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   $46 = ___cxa_find_matching_catch() | 0;
   $$0 = $46;
   $$01 = tempRet0;
   $66 = $68;
  }
  if ($66) _free($66);
  _free($62);
  $$125 = $$01;
  $$16 = $$0;
 }
 ___resumeException($$16 | 0);
}

function __ZN12_GLOBAL__N_15Stack4dumpEv($this) {
 $this = $this | 0;
 var $$idx = 0, $$idx1 = 0, $$idx3$val = 0, $0 = 0, $101 = 0, $102 = 0, $13 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $34 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $53 = 0, $56 = 0, $59 = 0, $6 = 0, $62 = 0, $66 = 0, $71 = 0, $72 = 0, $77 = 0, $78 = 0, $8 = 0, $80 = 0, $92 = 0, $93 = 0, $98 = 0, $99 = 0, $i$07 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $$idx = $this + 12 | 0;
 $$idx1 = $this + 16 | 0;
 do if ((HEAP32[$$idx1 >> 2] | 0) != (HEAP32[$$idx >> 2] | 0)) {
  $i$07 = 0;
  while (1) {
   $4 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(45896, 39424, 6) | 0, $i$07) | 0, 39432, 4) | 0;
   $$idx3$val = HEAP32[$$idx >> 2] | 0;
   $5 = $$idx3$val + ($i$07 * 144 | 0) + 8 | 0;
   $6 = HEAP8[$5 >> 0] | 0;
   $8 = ($6 & 1) == 0;
   if ($8) $13 = ($6 & 255) >>> 1; else $13 = HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 12 >> 2] | 0;
   if ($13) {
    if ($8) {
     $22 = $5 + 1 | 0;
     $23 = ($6 & 255) >>> 1;
    } else {
     $22 = HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 16 >> 2] | 0;
     $23 = HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 12 >> 2] | 0;
    }
    __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, $22, $23) | 0;
   }
   $24 = $$idx3$val + ($i$07 * 144 | 0) + 20 | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   do if ($25) {
    $27 = HEAP8[$5 >> 0] | 0;
    if (!($27 & 1)) $34 = ($27 & 255) >>> 1; else $34 = HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 12 >> 2] | 0;
    if (!$34) $38 = $25; else {
     __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 42232, 1) | 0;
     $38 = HEAP32[$24 >> 2] | 0;
    }
    $36 = $$idx3$val + ($i$07 * 144 | 0) + 28 | 0;
    if (($38 | 0) != (HEAP32[$36 >> 2] | 0)) {
     $50 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 42256, 1) | 0;
     $53 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($50, HEAP32[$24 >> 2] | 0) | 0, 42232, 1) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($53, HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 24 >> 2] | 0) | 0;
     $56 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($50, 42264, 3) | 0;
     $59 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($56, HEAP32[$36 >> 2] | 0) | 0, 42232, 1) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($59, HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 32 >> 2] | 0) | 0;
     __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($56, 42272, 1) | 0;
     break;
    }
    $40 = $$idx3$val + ($i$07 * 144 | 0) + 24 | 0;
    $42 = $$idx3$val + ($i$07 * 144 | 0) + 32 | 0;
    $44 = (HEAP32[$40 >> 2] | 0) == (HEAP32[$42 >> 2] | 0);
    $46 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($4, $38) | 0, 42232, 1) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($46, HEAP32[$40 >> 2] | 0) | 0;
    if (!$44) {
     $48 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 42248, 1) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($48, HEAP32[$42 >> 2] | 0) | 0;
    }
   } while (0);
   $62 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 39440, 2) | 0;
   $66 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($62, HEAP32[(HEAP32[$$idx >> 2] | 0) + ($i$07 * 144 | 0) >> 2] | 0) | 0, 42272, 1) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $66 + (HEAP32[(HEAP32[$66 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $71 = invoke_iii(22, $0 | 0, 50208) | 0;
   $72 = __THREW__;
   __THREW__ = 0;
   if ($72 & 1) {
    label = 23;
    break;
   }
   __THREW__ = 0;
   $77 = invoke_iii(HEAP32[(HEAP32[$71 >> 2] | 0) + 28 >> 2] | 0, $71 | 0, 10) | 0;
   $78 = __THREW__;
   __THREW__ = 0;
   if ($78 & 1) {
    label = 23;
    break;
   }
   __ZNSt3__16localeD2Ev($0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($66, $77) | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($66) | 0;
   $i$07 = $i$07 + 1 | 0;
   if ($i$07 >>> 0 >= (((HEAP32[$$idx1 >> 2] | 0) - (HEAP32[$$idx >> 2] | 0) | 0) / 144 | 0) >>> 0) {
    label = 25;
    break;
   }
  }
  if ((label | 0) == 23) {
   $80 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($80 | 0);
  } else if ((label | 0) == 25) break;
 } while (0);
 __ZNKSt3__18ios_base6getlocEv($0, 45896 + (HEAP32[(HEAP32[11474] | 0) + -12 >> 2] | 0) | 0);
 __THREW__ = 0;
 $92 = invoke_iii(22, $0 | 0, 50208) | 0;
 $93 = __THREW__;
 __THREW__ = 0;
 if ($93 & 1) {
  $101 = ___cxa_find_matching_catch() | 0;
  $102 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($101 | 0);
 }
 __THREW__ = 0;
 $98 = invoke_iii(HEAP32[(HEAP32[$92 >> 2] | 0) + 28 >> 2] | 0, $92 | 0, 10) | 0;
 $99 = __THREW__;
 __THREW__ = 0;
 if ($99 & 1) {
  $101 = ___cxa_find_matching_catch() | 0;
  $102 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($101 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(45896, $98) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(45896) | 0;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $$0$i = 0, $$0$i13 = 0, $$1 = 0, $$13 = 0, $0 = 0, $1 = 0, $100 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $25 = 0, $26 = 0, $31 = 0, $36 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $60 = 0, $66 = 0, $67 = 0, $68 = 0, $79 = 0, $80 = 0, $85 = 0, $9 = 0, $90 = 0, $94 = 0, $96 = 0, $98 = 0, $__bn$i = 0, $__bn$i11 = 0, $__buf$i = 0, $__buf$i10 = 0, $__i$0$i$i = 0, $__i$0$i$i7 = 0, $__mb$i = 0, $__mb$i9 = 0, $__ndflt = 0, $__nn$i = 0, $__p$0$i = 0, $__p$0$i16 = 0, $__r$0$i = 0, $__r$0$i12 = 0, $__wn$i = 0, $lpad$phi$index = 0, $lpad$phi$index10 = 0, $lpad$phi32$index = 0, $lpad$phi32$index3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__mb$i9 = sp + 184 | 0;
 $__buf$i10 = sp + 192 | 0;
 $__bn$i11 = sp + 180 | 0;
 $__wn$i = sp + 176 | 0;
 $__mb$i = sp + 168 | 0;
 $__buf$i = sp + 40 | 0;
 $__bn$i = sp + 32 | 0;
 $__nn$i = sp + 28 | 0;
 $__ndflt = sp + 16 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__ndflt + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 >> 2] = 51864;
 $5 = HEAP8[$__dflt >> 0] | 0;
 if (!($5 & 1)) {
  $100 = $__dflt + 4 | 0;
  $17 = $__dflt + 4 | 0;
  $18 = ($5 & 255) >>> 1;
 } else {
  $9 = HEAP32[$__dflt + 8 >> 2] | 0;
  $100 = $9;
  $17 = $9;
  $18 = HEAP32[$__dflt + 4 >> 2] | 0;
 }
 $16 = $17 + ($18 << 2) | 0;
 $19 = $__buf$i10 + 32 | 0;
 $$0$i13 = $100;
 $__r$0$i12 = 0;
 L9 : while (1) {
  if (!(($__r$0$i12 | 0) != 2 & $$0$i13 >>> 0 < $16 >>> 0)) {
   label = 18;
   break;
  }
  HEAP32[$__wn$i >> 2] = $$0$i13;
  __THREW__ = 0;
  $25 = invoke_iiiiiiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0, $0 | 0, $__mb$i9 | 0, $$0$i13 | 0, $16 | 0, $__wn$i | 0, $__buf$i10 | 0, $19 | 0, $__bn$i11 | 0) | 0;
  $26 = __THREW__;
  __THREW__ = 0;
  if ($26 & 1) {
   label = 24;
   break;
  }
  if (($25 | 0) == 2 ? 1 : (HEAP32[$__wn$i >> 2] | 0) == ($$0$i13 | 0)) {
   label = 12;
   break;
  }
  $__p$0$i16 = $__buf$i10;
  while (1) {
   if ($__p$0$i16 >>> 0 >= (HEAP32[$__bn$i11 >> 2] | 0) >>> 0) break;
   __THREW__ = 0;
   invoke_vii(44, $__ndflt | 0, HEAP8[$__p$0$i16 >> 0] | 0);
   $36 = __THREW__;
   __THREW__ = 0;
   if ($36 & 1) {
    label = 23;
    break L9;
   }
   $__p$0$i16 = $__p$0$i16 + 1 | 0;
  }
  $$0$i13 = HEAP32[$__wn$i >> 2] | 0;
  $__r$0$i12 = $25;
 }
 do if ((label | 0) == 12) {
  __THREW__ = 0;
  invoke_vi(190, 51088);
  $31 = __THREW__;
  __THREW__ = 0;
  if ($31 & 1) {
   $60 = ___cxa_find_matching_catch() | 0;
   $lpad$phi32$index = $60;
   $lpad$phi32$index3 = tempRet0;
   label = 26;
   break;
  } else {}
 } else if ((label | 0) == 18) {
  if (!(HEAP8[$__ndflt >> 0] & 1)) $50 = $__ndflt + 1 | 0; else $50 = HEAP32[$__ndflt + 8 >> 2] | 0;
  __THREW__ = 0;
  $51 = invoke_iiiii(14, (($__c | 0) == -1 ? -1 : $__c << 1) | 0, $__set | 0, $__msgid | 0, $50 | 0) | 0;
  $52 = __THREW__;
  __THREW__ = 0;
  if ($52 & 1) {
   $54 = ___cxa_find_matching_catch() | 0;
   $$1 = $54;
   $$13 = tempRet0;
   break;
  }
  $__i$0$i$i7 = 0;
  while (1) {
   if (($__i$0$i$i7 | 0) == 3) break;
   HEAP32[$agg$result + ($__i$0$i$i7 << 2) >> 2] = 0;
   $__i$0$i$i7 = $__i$0$i$i7 + 1 | 0;
  }
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 >> 2] = 51968;
  $66 = $51 + (_strlen($51 | 0) | 0) | 0;
  $67 = $66;
  $68 = $__buf$i + 128 | 0;
  $$0$i = $51;
  $__r$0$i = 0;
  L32 : while (1) {
   if (!(($__r$0$i | 0) != 2 & $$0$i >>> 0 < $66 >>> 0)) {
    label = 41;
    break;
   }
   HEAP32[$__nn$i >> 2] = $$0$i;
   __THREW__ = 0;
   $79 = invoke_iiiiiiiii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0, $__mb$i | 0, $$0$i | 0, (($67 - $$0$i | 0) > 32 ? $$0$i + 32 | 0 : $66) | 0, $__nn$i | 0, $__buf$i | 0, $68 | 0, $__bn$i | 0) | 0;
   $80 = __THREW__;
   __THREW__ = 0;
   if ($80 & 1) {
    label = 43;
    break;
   }
   if (($79 | 0) == 2 ? 1 : (HEAP32[$__nn$i >> 2] | 0) == ($$0$i | 0)) {
    label = 35;
    break;
   }
   $__p$0$i = $__buf$i;
   while (1) {
    if ($__p$0$i >>> 0 >= (HEAP32[$__bn$i >> 2] | 0) >>> 0) break;
    __THREW__ = 0;
    invoke_vii(75, $agg$result | 0, HEAP32[$__p$0$i >> 2] | 0);
    $90 = __THREW__;
    __THREW__ = 0;
    if ($90 & 1) {
     label = 42;
     break L32;
    }
    $__p$0$i = $__p$0$i + 4 | 0;
   }
   $$0$i = HEAP32[$__nn$i >> 2] | 0;
   $__r$0$i = $79;
  }
  do if ((label | 0) == 35) {
   __THREW__ = 0;
   invoke_vi(190, 51088);
   $85 = __THREW__;
   __THREW__ = 0;
   if ($85 & 1) {
    $98 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $98;
    $lpad$phi$index10 = tempRet0;
    break;
   } else {}
  } else if ((label | 0) == 41) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
   STACKTOP = sp;
   return;
  } else if ((label | 0) == 42) {
   $94 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $94;
   $lpad$phi$index10 = tempRet0;
  } else if ((label | 0) == 43) {
   $96 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $96;
   $lpad$phi$index10 = tempRet0;
  } while (0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($agg$result);
  $$1 = $lpad$phi$index;
  $$13 = $lpad$phi$index10;
 } else if ((label | 0) == 23) {
  $56 = ___cxa_find_matching_catch() | 0;
  $lpad$phi32$index = $56;
  $lpad$phi32$index3 = tempRet0;
  label = 26;
 } else if ((label | 0) == 24) {
  $58 = ___cxa_find_matching_catch() | 0;
  $lpad$phi32$index = $58;
  $lpad$phi32$index3 = tempRet0;
  label = 26;
 } while (0);
 if ((label | 0) == 26) {
  $$1 = $lpad$phi32$index;
  $$13 = $lpad$phi32$index3;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$1 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($agg$result, $this, $free_vars$0$0$0$val, $free_vars$0$0$1$val) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $free_vars$0$0$0$val = $free_vars$0$0$0$val | 0;
 $free_vars$0$0$1$val = $free_vars$0$0$1$val | 0;
 var $$0$i7$i = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph$lcssa$i$i$i$i$lcssa = 0, $$0$ph6$i$i$i$i = 0, $$0$ph6$i$i$i$i$lcssa22 = 0, $$01$ph5$i$i$i$i = 0, $$013$i$i$i$i = 0, $$013$i$i$i$i$lcssa = 0, $$013$i$i$i$i$lcssa$lcssa = 0, $$idx$i = 0, $$idx$val$i = 0, $$idx1$i = 0, $$lcssa = 0, $$lcssa25 = 0, $$lcssa26 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $2 = 0, $24 = 0, $26 = 0, $29 = 0, $31 = 0, $34 = 0, $35 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $54 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa23 = 0, $__nd$0$i$i$lcssa24 = 0, $__parent$i = 0, $__r$0$i = 0, $i$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent$i = sp;
 $0 = $agg$result + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $agg$result + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $2;
 if (($free_vars$0$0$0$val | 0) == ($free_vars$0$0$1$val | 0)) {
  STACKTOP = sp;
  return;
 }
 $$idx$i = $this + 68 | 0;
 $$idx1$i = $this + 72 | 0;
 $5 = $free_vars$0$0$0$val;
 do {
  $4 = HEAP32[$5 >> 2] | 0;
  $$idx$val$i = HEAP32[$$idx$i >> 2] | 0;
  $i$0$in$i = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i | 0) / 144 | 0;
  while (1) {
   $i$0$in$i = $i$0$in$i + -1 | 0;
   if (($i$0$in$i | 0) <= -1) {
    label = 34;
    break;
   }
   $11 = $$idx$val$i + ($i$0$in$i * 144 | 0) + 132 | 0;
   $12 = HEAP32[$11 >> 2] | 0;
   if ($12) {
    $$0$ph6$i$i$i$i = $11;
    $$01$ph5$i$i$i$i = $12;
    L11 : while (1) {
     $$013$i$i$i$i = $$01$ph5$i$i$i$i;
     while (1) {
      if ((HEAP32[$$013$i$i$i$i + 16 >> 2] | 0) >>> 0 >= $4 >>> 0) {
       $$013$i$i$i$i$lcssa = $$013$i$i$i$i;
       break;
      }
      $$013$i$i$i$i = HEAP32[$$013$i$i$i$i + 4 >> 2] | 0;
      if (!$$013$i$i$i$i) {
       $$0$ph6$i$i$i$i$lcssa22 = $$0$ph6$i$i$i$i;
       label = 11;
       break L11;
      }
     }
     $$01$ph5$i$i$i$i = HEAP32[$$013$i$i$i$i$lcssa >> 2] | 0;
     if (!$$01$ph5$i$i$i$i) {
      $$013$i$i$i$i$lcssa$lcssa = $$013$i$i$i$i$lcssa;
      label = 12;
      break;
     } else $$0$ph6$i$i$i$i = $$013$i$i$i$i$lcssa;
    }
    if ((label | 0) == 11) {
     label = 0;
     $$0$ph$lcssa$i$i$i$i = $$0$ph6$i$i$i$i$lcssa22;
    } else if ((label | 0) == 12) {
     label = 0;
     $$0$ph$lcssa$i$i$i$i = $$013$i$i$i$i$lcssa$lcssa;
    }
    if (($$0$ph$lcssa$i$i$i$i | 0) != ($11 | 0)) if ((HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) >>> 0 <= $4 >>> 0) {
     $$0$ph$lcssa$i$i$i$i$lcssa = $$0$ph$lcssa$i$i$i$i;
     label = 16;
     break;
    }
   }
   if ((HEAP32[$$idx$val$i + ($i$0$in$i * 144 | 0) >> 2] | 0) == 6) {
    label = 34;
    break;
   }
  }
  if ((label | 0) == 16) {
   label = 0;
   $24 = HEAP32[$$0$ph$lcssa$i$i$i$i$lcssa + 20 >> 2] | 0;
   if ($24) {
    $26 = HEAP32[$2 >> 2] | 0;
    do if (!$26) {
     HEAP32[$__parent$i >> 2] = $2;
     $$0$i7$i = $2;
     $45 = $2;
     label = 28;
    } else {
     $__nd$0$i$i = $26;
     while (1) {
      $29 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
      if ($29 >>> 0 > $4 >>> 0) {
       $31 = HEAP32[$__nd$0$i$i >> 2] | 0;
       if (!$31) {
        $$lcssa25 = $__nd$0$i$i;
        $__nd$0$i$i$lcssa24 = $__nd$0$i$i;
        label = 21;
        break;
       } else $__nd$0$be$in$i$i = $31;
      } else {
       if ($29 >>> 0 >= $4 >>> 0) {
        $__nd$0$i$i$lcssa = $__nd$0$i$i;
        label = 27;
        break;
       }
       $34 = $__nd$0$i$i + 4 | 0;
       $35 = HEAP32[$34 >> 2] | 0;
       if (!$35) {
        $$lcssa = $34;
        $__nd$0$i$i$lcssa23 = $__nd$0$i$i;
        label = 25;
        break;
       } else $__nd$0$be$in$i$i = $35;
      }
      $__nd$0$i$i = $__nd$0$be$in$i$i;
     }
     if ((label | 0) == 21) {
      label = 0;
      HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa24;
      $$0$i7$i = $$lcssa25;
      $45 = $__nd$0$i$i$lcssa24;
      label = 28;
      break;
     } else if ((label | 0) == 25) {
      label = 0;
      HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa23;
      $$0$i7$i = $$lcssa;
      $45 = $__nd$0$i$i$lcssa23;
      label = 28;
      break;
     } else if ((label | 0) == 27) {
      label = 0;
      HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
      if (!$__nd$0$i$i$lcssa) {
       $$0$i7$i = $__parent$i;
       $45 = 0;
       label = 28;
       break;
      } else {
       $__r$0$i = $__nd$0$i$i$lcssa;
       break;
      }
     }
    } while (0);
    if ((label | 0) == 28) {
     label = 0;
     __THREW__ = 0;
     $38 = invoke_ii(67, 24) | 0;
     $39 = __THREW__;
     __THREW__ = 0;
     if ($39 & 1) {
      $$lcssa26 = $26;
      label = 33;
      break;
     }
     HEAP32[$38 + 16 >> 2] = $4;
     HEAP32[$38 + 20 >> 2] = 0;
     HEAP32[$38 >> 2] = 0;
     HEAP32[$38 + 4 >> 2] = 0;
     HEAP32[$38 + 8 >> 2] = $45;
     HEAP32[$$0$i7$i >> 2] = $38;
     $47 = HEAP32[HEAP32[$agg$result >> 2] >> 2] | 0;
     if (!$47) $50 = $38; else {
      HEAP32[$agg$result >> 2] = $47;
      $50 = HEAP32[$$0$i7$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$0 >> 2] | 0, $50);
     HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1;
     $__r$0$i = $38;
    }
    HEAP32[$__r$0$i + 20 >> 2] = $24;
   }
  } else if ((label | 0) == 34) label = 0;
  $5 = $5 + 4 | 0;
 } while (($5 | 0) != ($free_vars$0$0$1$val | 0));
 if ((label | 0) == 33) {
  $54 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($agg$result, $$lcssa26);
  ___resumeException($54 | 0);
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$127 = 0, $$18 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 80 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 142 | 0;
 $__nb = sp + 76 | 0;
 $__o = sp + 84 | 0;
 $__op = sp + 72 | 0;
 $__oe = sp + 68 | 0;
 $0 = sp + 64 | 0;
 $1 = sp + 60 | 0;
 $2 = sp + 56 | 0;
 $3 = $__fmt;
 HEAP32[$3 >> 2] = 37;
 HEAP32[$3 + 4 >> 2] = 0;
 $10 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 48928, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $11 = __ZNSt3__16__clocEv() | 0;
 if ($10) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  $vararg_ptr1 = $vararg_buffer + 8 | 0;
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_ptr1 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_ptr1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_buffer2 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_buffer2 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $vararg_buffer2) | 0;
 }
 do if (($__nc$0 | 0) > 29) {
  if ($10) {
   __THREW__ = 0;
   $17 = invoke_i(2) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr8 = $vararg_buffer5 + 8 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr8 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $22 = invoke_iiiii(12, $__nb | 0, $17 | 0, $__fmt | 0, $vararg_buffer5 | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) {
     $__nc$1 = $22;
     label = 12;
    }
   }
  } else {
   __THREW__ = 0;
   $27 = invoke_i(2) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    __THREW__ = 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_buffer9 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_buffer9 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $30 = invoke_iiiii(12, $__nb | 0, $27 | 0, $__fmt | 0, $vararg_buffer9 | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if (!($31 & 1)) {
     $__nc$1 = $30;
     label = 12;
    }
   }
  }
  if ((label | 0) == 12) {
   $33 = HEAP32[$__nb >> 2] | 0;
   if ($33) {
    $38 = $33;
    $61 = $33;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
   __THREW__ = 0;
   invoke_v(7);
   $35 = __THREW__;
   __THREW__ = 0;
   if (!($35 & 1)) {
    $$pre = HEAP32[$__nb >> 2] | 0;
    $38 = $$pre;
    $61 = $$pre;
    $__nc$2 = $__nc$1;
    label = 15;
    break;
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $$127 = tempRet0;
  $$18 = $25;
 } else {
  $38 = HEAP32[$__nb >> 2] | 0;
  $61 = 0;
  $__nc$2 = $__nc$0;
  label = 15;
 } while (0);
 if ((label | 0) == 15) {
  $37 = $38 + $__nc$2 | 0;
  $39 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38, $37, $__iob) | 0;
  if (($38 | 0) == ($__nar | 0)) {
   $50 = $__nar;
   $60 = 0;
   $__ob$0 = $__o;
   label = 20;
  } else {
   $42 = _malloc($__nc$2 << 1) | 0;
   if (!$42) {
    __THREW__ = 0;
    invoke_v(7);
    $44 = __THREW__;
    __THREW__ = 0;
    if ($44 & 1) {
     $66 = 0;
     label = 19;
    } else {
     $50 = HEAP32[$__nb >> 2] | 0;
     $60 = 0;
     $__ob$0 = 0;
     label = 20;
    }
   } else {
    $50 = $38;
    $60 = $42;
    $__ob$0 = $42;
    label = 20;
   }
  }
  do if ((label | 0) == 20) {
   __THREW__ = 0;
   invoke_vii(47, $0 | 0, $__iob | 0);
   $48 = __THREW__;
   __THREW__ = 0;
   if ($48 & 1) {
    $66 = $60;
    label = 19;
   } else {
    __THREW__ = 0;
    invoke_viiiiiii(42, $50 | 0, $39 | 0, $37 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
    $51 = __THREW__;
    __THREW__ = 0;
    if ($51 & 1) {
     $62 = ___cxa_find_matching_catch() | 0;
     $63 = tempRet0;
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
     $$0 = $62;
     $$01 = $63;
     $65 = $60;
     break;
    }
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    HEAP32[$2 >> 2] = HEAP32[$__s >> 2];
    $55 = HEAP32[$__op >> 2] | 0;
    $56 = HEAP32[$__oe >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    invoke_viiiiiii(39, $1 | 0, $$byval_copy | 0, $__ob$0 | 0, $55 | 0, $56 | 0, $__iob | 0, $__fl | 0);
    $57 = __THREW__;
    __THREW__ = 0;
    if ($57 & 1) {
     $66 = $60;
     label = 19;
    } else {
     HEAP32[$agg$result >> 2] = HEAP32[$1 >> 2];
     _free($60);
     _free($61);
     STACKTOP = sp;
     return;
    }
   }
  } while (0);
  if ((label | 0) == 19) {
   $46 = ___cxa_find_matching_catch() | 0;
   $$0 = $46;
   $$01 = tempRet0;
   $65 = $66;
  }
  _free($65);
  _free($61);
  $$127 = $$01;
  $$18 = $$0;
 }
 ___resumeException($$18 | 0);
}

function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$0$i$i = 0, $$0$i$i5 = 0, $$01$i$i = 0, $$01$i$i4 = 0, $0 = 0, $1 = 0, $100 = 0, $107 = 0, $108 = 0, $110 = 0, $117 = 0, $118 = 0, $12 = 0, $120 = 0, $122 = 0, $130 = 0, $17 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $31 = 0, $32 = 0, $35 = 0, $43 = 0, $44 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $61 = 0, $64 = 0, $66 = 0, $72 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $81 = 0, $91 = 0, $93 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50200) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50360) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 $5 = HEAP8[$__grouping >> 0] | 0;
 if (!($5 & 1)) $12 = ($5 & 255) >>> 1; else $12 = HEAP32[$__grouping + 4 >> 2] | 0;
 do if (!$12) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $__nb | 0, $__ne | 0, $__ob | 0) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) label = 8; else {
   $22 = $__ob + ($__ne - $__nb << 2) | 0;
   HEAP32[$__oe >> 2] = $22;
   $130 = $22;
   label = 40;
  }
 } else {
  HEAP32[$__oe >> 2] = $__ob;
  $27 = HEAP8[$__nb >> 0] | 0;
  if ($27 << 24 >> 24 == 43 | $27 << 24 >> 24 == 45) {
   __THREW__ = 0;
   $31 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, $27 | 0) | 0;
   $32 = __THREW__;
   __THREW__ = 0;
   if ($32 & 1) {
    label = 8;
    break;
   }
   $35 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $35 + 4;
   HEAP32[$35 >> 2] = $31;
   $__nf$0 = $__nb + 1 | 0;
  } else $__nf$0 = $__nb;
  if (($__ne - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $43 = $__nf$0 + 1 | 0;
   $44 = HEAP8[$43 >> 0] | 0;
   if ($44 << 24 >> 24 == 88 | $44 << 24 >> 24 == 120) {
    __THREW__ = 0;
    $48 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, 48) | 0;
    $49 = __THREW__;
    __THREW__ = 0;
    if ($49 & 1) {
     label = 8;
     break;
    }
    $51 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $51 + 4;
    HEAP32[$51 >> 2] = $48;
    __THREW__ = 0;
    $57 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$43 >> 0] | 0) | 0;
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 8;
     break;
    }
    $61 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $61 + 4;
    HEAP32[$61 >> 2] = $57;
    $__nf$1 = $__nf$0 + 2 | 0;
   } else $__nf$1 = $__nf$0;
  } else $__nf$1 = $__nf$0; else $__nf$1 = $__nf$0;
  if (($__nf$1 | 0) != ($__ne | 0)) {
   $$0$i$i5 = $__ne;
   $$01$i$i4 = $__nf$1;
   while (1) {
    $64 = $$0$i$i5 + -1 | 0;
    if ($$01$i$i4 >>> 0 >= $64 >>> 0) break;
    $66 = HEAP8[$$01$i$i4 >> 0] | 0;
    HEAP8[$$01$i$i4 >> 0] = HEAP8[$64 >> 0] | 0;
    HEAP8[$64 >> 0] = $66;
    $$0$i$i5 = $64;
    $$01$i$i4 = $$01$i$i4 + 1 | 0;
   }
  }
  __THREW__ = 0;
  $72 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
  $73 = __THREW__;
  __THREW__ = 0;
  if ($73 & 1) label = 8; else {
   $75 = $__grouping + 1 | 0;
   $76 = $__grouping + 4 | 0;
   $77 = $__grouping + 8 | 0;
   $__dc$0 = 0;
   $__dg$0 = 0;
   $__p$0 = $__nf$1;
   while (1) {
    if ($__p$0 >>> 0 >= $__ne >>> 0) break;
    $81 = (HEAP8[$__grouping >> 0] & 1) == 0;
    if (!(HEAP8[($81 ? $75 : HEAP32[$77 >> 2] | 0) + $__dg$0 >> 0] | 0)) {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    } else if (($__dc$0 | 0) == (HEAP8[($81 ? $75 : HEAP32[$77 >> 2] | 0) + $__dg$0 >> 0] | 0)) {
     $91 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $91 + 4;
     HEAP32[$91 >> 2] = $72;
     $93 = HEAP8[$__grouping >> 0] | 0;
     if (!($93 & 1)) $100 = ($93 & 255) >>> 1; else $100 = HEAP32[$76 >> 2] | 0;
     $__dc$1 = 0;
     $__dg$1 = ($__dg$0 >>> 0 < ($100 + -1 | 0) >>> 0 & 1) + $__dg$0 | 0;
    } else {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    }
    __THREW__ = 0;
    $107 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$__p$0 >> 0] | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 7;
     break;
    }
    $110 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $110 + 4;
    HEAP32[$110 >> 2] = $107;
    $__dc$0 = $__dc$1 + 1 | 0;
    $__dg$0 = $__dg$1;
    $__p$0 = $__p$0 + 1 | 0;
   }
   if ((label | 0) == 7) {
    $23 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $23;
    $lpad$phi$index2 = tempRet0;
    break;
   }
   $117 = $__ob + ($__nf$1 - $__nb << 2) | 0;
   $118 = HEAP32[$__oe >> 2] | 0;
   if (($117 | 0) == ($118 | 0)) {
    $130 = $117;
    label = 40;
   } else {
    $$0$i$i = $118;
    $$01$i$i = $117;
    while (1) {
     $120 = $$0$i$i + -4 | 0;
     if ($$01$i$i >>> 0 >= $120 >>> 0) break;
     $122 = HEAP32[$$01$i$i >> 2] | 0;
     HEAP32[$$01$i$i >> 2] = HEAP32[$120 >> 2];
     HEAP32[$120 >> 2] = $122;
     $$0$i$i = $120;
     $$01$i$i = $$01$i$i + 4 | 0;
    }
    $130 = $118;
    label = 40;
   }
  }
 } while (0);
 if ((label | 0) == 8) {
  $25 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $25;
  $lpad$phi$index2 = tempRet0;
 } else if ((label | 0) == 40) {
  if (($__np | 0) == ($__ne | 0)) $storemerge = $130; else $storemerge = $__ob + ($__np - $__nb << 2) | 0;
  HEAP32[$__op >> 2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$0$i$i = 0, $$0$i$i5 = 0, $$01$i$i = 0, $$01$i$i4 = 0, $0 = 0, $1 = 0, $100 = 0, $107 = 0, $108 = 0, $110 = 0, $117 = 0, $118 = 0, $12 = 0, $120 = 0, $122 = 0, $17 = 0, $23 = 0, $25 = 0, $27 = 0, $31 = 0, $32 = 0, $35 = 0, $43 = 0, $44 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $61 = 0, $64 = 0, $66 = 0, $72 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $81 = 0, $91 = 0, $93 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50208) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50352) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 $5 = HEAP8[$__grouping >> 0] | 0;
 if (!($5 & 1)) $12 = ($5 & 255) >>> 1; else $12 = HEAP32[$__grouping + 4 >> 2] | 0;
 do if (!$12) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, $__nb | 0, $__ne | 0, $__ob | 0) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) label = 8; else {
   HEAP32[$__oe >> 2] = $__ob + ($__ne - $__nb);
   label = 40;
  }
 } else {
  HEAP32[$__oe >> 2] = $__ob;
  $27 = HEAP8[$__nb >> 0] | 0;
  if ($27 << 24 >> 24 == 43 | $27 << 24 >> 24 == 45) {
   __THREW__ = 0;
   $31 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, $27 | 0) | 0;
   $32 = __THREW__;
   __THREW__ = 0;
   if ($32 & 1) {
    label = 8;
    break;
   }
   $35 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $35 + 1;
   HEAP8[$35 >> 0] = $31;
   $__nf$0 = $__nb + 1 | 0;
  } else $__nf$0 = $__nb;
  if (($__ne - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $43 = $__nf$0 + 1 | 0;
   $44 = HEAP8[$43 >> 0] | 0;
   if ($44 << 24 >> 24 == 88 | $44 << 24 >> 24 == 120) {
    __THREW__ = 0;
    $48 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, 48) | 0;
    $49 = __THREW__;
    __THREW__ = 0;
    if ($49 & 1) {
     label = 8;
     break;
    }
    $51 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $51 + 1;
    HEAP8[$51 >> 0] = $48;
    __THREW__ = 0;
    $57 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$43 >> 0] | 0) | 0;
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 8;
     break;
    }
    $61 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $61 + 1;
    HEAP8[$61 >> 0] = $57;
    $__nf$1 = $__nf$0 + 2 | 0;
   } else $__nf$1 = $__nf$0;
  } else $__nf$1 = $__nf$0; else $__nf$1 = $__nf$0;
  if (($__nf$1 | 0) != ($__ne | 0)) {
   $$0$i$i5 = $__ne;
   $$01$i$i4 = $__nf$1;
   while (1) {
    $64 = $$0$i$i5 + -1 | 0;
    if ($$01$i$i4 >>> 0 >= $64 >>> 0) break;
    $66 = HEAP8[$$01$i$i4 >> 0] | 0;
    HEAP8[$$01$i$i4 >> 0] = HEAP8[$64 >> 0] | 0;
    HEAP8[$64 >> 0] = $66;
    $$0$i$i5 = $64;
    $$01$i$i4 = $$01$i$i4 + 1 | 0;
   }
  }
  __THREW__ = 0;
  $72 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
  $73 = __THREW__;
  __THREW__ = 0;
  if ($73 & 1) label = 8; else {
   $75 = $__grouping + 1 | 0;
   $76 = $__grouping + 4 | 0;
   $77 = $__grouping + 8 | 0;
   $__dc$0 = 0;
   $__dg$0 = 0;
   $__p$0 = $__nf$1;
   while (1) {
    if ($__p$0 >>> 0 >= $__ne >>> 0) break;
    $81 = (HEAP8[$__grouping >> 0] & 1) == 0;
    if (!(HEAP8[($81 ? $75 : HEAP32[$77 >> 2] | 0) + $__dg$0 >> 0] | 0)) {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    } else if (($__dc$0 | 0) == (HEAP8[($81 ? $75 : HEAP32[$77 >> 2] | 0) + $__dg$0 >> 0] | 0)) {
     $91 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $91 + 1;
     HEAP8[$91 >> 0] = $72;
     $93 = HEAP8[$__grouping >> 0] | 0;
     if (!($93 & 1)) $100 = ($93 & 255) >>> 1; else $100 = HEAP32[$76 >> 2] | 0;
     $__dc$1 = 0;
     $__dg$1 = ($__dg$0 >>> 0 < ($100 + -1 | 0) >>> 0 & 1) + $__dg$0 | 0;
    } else {
     $__dc$1 = $__dc$0;
     $__dg$1 = $__dg$0;
    }
    __THREW__ = 0;
    $107 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$__p$0 >> 0] | 0) | 0;
    $108 = __THREW__;
    __THREW__ = 0;
    if ($108 & 1) {
     label = 7;
     break;
    }
    $110 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $110 + 1;
    HEAP8[$110 >> 0] = $107;
    $__dc$0 = $__dc$1 + 1 | 0;
    $__dg$0 = $__dg$1;
    $__p$0 = $__p$0 + 1 | 0;
   }
   if ((label | 0) == 7) {
    $23 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $23;
    $lpad$phi$index2 = tempRet0;
    break;
   }
   $117 = $__ob + ($__nf$1 - $__nb) | 0;
   $118 = HEAP32[$__oe >> 2] | 0;
   if (($117 | 0) == ($118 | 0)) label = 40; else {
    $$0$i$i = $118;
    $$01$i$i = $117;
    while (1) {
     $120 = $$0$i$i + -1 | 0;
     if ($$01$i$i >>> 0 >= $120 >>> 0) break;
     $122 = HEAP8[$$01$i$i >> 0] | 0;
     HEAP8[$$01$i$i >> 0] = HEAP8[$120 >> 0] | 0;
     HEAP8[$120 >> 0] = $122;
     $$0$i$i = $120;
     $$01$i$i = $$01$i$i + 1 | 0;
    }
    label = 40;
   }
  }
 } while (0);
 if ((label | 0) == 8) {
  $25 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $25;
  $lpad$phi$index2 = tempRet0;
 } else if ((label | 0) == 40) {
  if (($__np | 0) == ($__ne | 0)) $storemerge = HEAP32[$__oe >> 2] | 0; else $storemerge = $__ob + ($__np - $__nb) | 0;
  HEAP32[$__op >> 2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $106 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $141 = 0, $142 = 0, $156 = 0, $28 = 0, $30 = 0, $40 = 0, $42 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $65 = 0, $77 = 0, $78 = 0, $79 = 0, $91 = 0, $94 = 0, $96 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $__r$0$lcssa35 = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $12 = 0; else if ((HEAP32[$0 + 12 >> 2] | 0) == (HEAP32[$0 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $12 = 0;
  break;
 } else {
  $12 = HEAP32[$__b >> 2] | 0;
  break;
 } else $12 = $0; while (0);
 $13 = ($12 | 0) == 0;
 $14 = HEAP32[$__e >> 2] | 0;
 do if (!$14) label = 11; else {
  if ((HEAP32[$14 + 12 >> 2] | 0) == (HEAP32[$14 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 11;
   break;
  }
  if ($13) {
   $156 = $14;
   label = 13;
  } else label = 12;
 } while (0);
 if ((label | 0) == 11) if ($13) label = 12; else {
  $156 = 0;
  label = 13;
 }
 L16 : do if ((label | 0) == 12) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $$01 = 0;
 } else if ((label | 0) == 13) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAPU8[$30 >> 0] | 0;
  $40 = $$0$i$i & 255;
  if ($40 << 24 >> 24 > -1) {
   $42 = $__ct + 8 | 0;
   if (HEAP16[(HEAP32[$42 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 2048) {
    $54 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $40, 0) | 0) << 24 >> 24;
    $55 = HEAP32[$__b >> 2] | 0;
    $56 = $55 + 12 | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    if (($57 | 0) == (HEAP32[$55 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 40 >> 2] & 127]($55) | 0; else HEAP32[$56 >> 2] = $57 + 1;
    $$0$in = $__n;
    $$pre$i2$i$i7 = $156;
    $79 = $156;
    $__r$0$in = $54;
    while (1) {
     $__r$0 = $__r$0$in + -48 | 0;
     $$0 = $$0$in + -1 | 0;
     $65 = HEAP32[$__b >> 2] | 0;
     do if (!$65) $77 = 0; else if ((HEAP32[$65 + 12 >> 2] | 0) == (HEAP32[$65 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 36 >> 2] & 127]($65) | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $77 = 0;
      break;
     } else {
      $77 = HEAP32[$__b >> 2] | 0;
      break;
     } else $77 = $65; while (0);
     $78 = ($77 | 0) == 0;
     if (!$79) {
      $$pre$i2$i$i20 = $$pre$i2$i$i7;
      $91 = 0;
     } else if ((HEAP32[$79 + 12 >> 2] | 0) == (HEAP32[$79 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$79 >> 2] | 0) + 36 >> 2] & 127]($79) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      $$pre$i2$i$i20 = 0;
      $91 = 0;
     } else {
      $$pre$i2$i$i20 = $$pre$i2$i$i7;
      $91 = $$pre$i2$i$i7;
     } else {
      $$pre$i2$i$i20 = $$pre$i2$i$i7;
      $91 = $79;
     }
     $94 = HEAP32[$__b >> 2] | 0;
     if (!(($$0$in | 0) > 1 & ($78 ^ ($91 | 0) == 0))) {
      $$lcssa = $94;
      $$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;
      $__r$0$lcssa = $__r$0;
      break;
     }
     $96 = HEAP32[$94 + 12 >> 2] | 0;
     if (($96 | 0) == (HEAP32[$94 + 16 >> 2] | 0)) $$0$i$i10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$94 >> 2] | 0) + 36 >> 2] & 127]($94) | 0; else $$0$i$i10 = HEAPU8[$96 >> 0] | 0;
     $106 = $$0$i$i10 & 255;
     if ($106 << 24 >> 24 <= -1) {
      $__r$0$lcssa35 = $__r$0;
      label = 54;
      break;
     }
     if (!(HEAP16[(HEAP32[$42 >> 2] | 0) + ($$0$i$i10 << 24 >> 24 << 1) >> 1] & 2048)) {
      $__r$0$lcssa35 = $__r$0;
      label = 54;
      break;
     }
     $119 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $106, 0) | 0) << 24 >> 24) + ($__r$0 * 10 | 0) | 0;
     $120 = HEAP32[$__b >> 2] | 0;
     $121 = $120 + 12 | 0;
     $122 = HEAP32[$121 >> 2] | 0;
     if (($122 | 0) == (HEAP32[$120 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$120 >> 2] | 0) + 40 >> 2] & 127]($120) | 0; else HEAP32[$121 >> 2] = $122 + 1;
     $$0$in = $$0;
     $$pre$i2$i$i7 = $$pre$i2$i$i20;
     $79 = $91;
     $__r$0$in = $119;
    }
    if ((label | 0) == 54) {
     $$01 = $__r$0$lcssa35;
     break;
    }
    do if (!$$lcssa) $141 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] & 127]($$lcssa) | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $141 = 0;
     break;
    } else {
     $141 = HEAP32[$__b >> 2] | 0;
     break;
    } else $141 = $$lcssa; while (0);
    $142 = ($141 | 0) == 0;
    do if (!$$pre$i2$i$i20$lcssa) label = 52; else {
     if ((HEAP32[$$pre$i2$i$i20$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i20$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i20$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i20$lcssa) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 52;
      break;
     }
     if ($142) {
      $$01 = $__r$0$lcssa;
      break L16;
     }
    } while (0);
    if ((label | 0) == 52) if (!$142) {
     $$01 = $__r$0$lcssa;
     break;
    }
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $$01 = $__r$0$lcssa;
    break;
   }
  }
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$01 = 0;
 } while (0);
 return $$01 | 0;
}

function __ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($agg$result, $this, $v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $v = $v | 0;
 var $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa = 0, $$lcssa$i$i = 0, $0 = 0, $100 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $17 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $26 = 0, $28 = 0, $30 = 0, $32 = 0, $33 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $42 = 0, $43 = 0, $45 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $6 = 0, $60 = 0, $7 = 0, $73 = 0, $76 = 0, $8 = 0, $80 = 0, $89 = 0, $94 = 0, $96 = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0;
 HEAP32[$agg$result >> 2] = 19;
 $0 = __Znwj(20) | 0;
 HEAP32[$0 >> 2] = 41904;
 __THREW__ = 0;
 invoke_vii(40, $0 + 8 | 0, $v | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 if ($2 & 1) {
  $45 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($0);
  ___resumeException($45 | 0);
 }
 $4 = $this + 20 | 0;
 $5 = $this + 24 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $this + 28 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ($6 >>> 0 < $8 >>> 0) {
  if (!$6) $12 = 0; else {
   HEAP32[$6 >> 2] = $0;
   $12 = HEAP32[$5 >> 2] | 0;
  }
  $11 = $12 + 4 | 0;
  HEAP32[$5 >> 2] = $11;
  $$idx$pre$phi$i$iZZ2D = $4;
  $$idx1$val$i$i = $11;
 } else {
  $this$idx2$val$i$i$i$i = HEAP32[$4 >> 2] | 0;
  $17 = ($6 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
  if ($17 >>> 0 > 1073741823) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
   $$idx1$val$i$i$i$i$i$i = HEAP32[$7 >> 2] | 0;
   $20 = HEAP32[$4 >> 2] | 0;
  } else {
   $$idx1$val$i$i$i$i$i$i = $8;
   $20 = $this$idx2$val$i$i$i$i;
  }
  $21 = $20;
  $22 = $$idx1$val$i$i$i$i$i$i - $21 | 0;
  if ($22 >> 2 >>> 0 < 536870911) {
   $28 = $22 >> 1;
   $30 = $28 >>> 0 < $17 >>> 0 ? $17 : $28;
   $32 = (HEAP32[$5 >> 2] | 0) - $21 | 0;
   $33 = $32 >> 2;
   if (!$30) {
    $$0$i8$i$i$i$i = 0;
    $38 = 0;
    $39 = $33;
    $43 = $32;
   } else {
    $$0$i7$i$i$i$i = $30;
    $103 = $33;
    $104 = $32;
    label = 11;
   }
  } else {
   $26 = (HEAP32[$5 >> 2] | 0) - $21 | 0;
   $$0$i7$i$i$i$i = 1073741823;
   $103 = $26 >> 2;
   $104 = $26;
   label = 11;
  }
  if ((label | 0) == 11) {
   $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
   $38 = __Znwj($$0$i7$i$i$i$i << 2) | 0;
   $39 = $103;
   $43 = $104;
  }
  $37 = $38 + ($39 << 2) | 0;
  if ($37) HEAP32[$37 >> 2] = $0;
  $42 = $38 + ($39 + 1 << 2) | 0;
  _memcpy($38 | 0, $20 | 0, $43 | 0) | 0;
  HEAP32[$4 >> 2] = $38;
  HEAP32[$5 >> 2] = $42;
  HEAP32[$7 >> 2] = $38 + ($$0$i8$i$i$i$i << 2);
  if (!$20) {
   $$idx$pre$phi$i$iZZ2D = $4;
   $$idx1$val$i$i = $42;
  } else {
   __ZdlPv($20);
   $$idx$pre$phi$i$iZZ2D = $4;
   $$idx1$val$i$i = HEAP32[$5 >> 2] | 0;
  }
 }
 $47 = $this + 16 | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[$47 >> 0] | 0;
 $53 = $$idx1$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
 $54 = $this + 36 | 0;
 HEAP32[$54 >> 2] = $53;
 if ($53 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
  $102 = $agg$result + 8 | 0;
  HEAP32[$102 >> 2] = $0;
  return;
 }
 $60 = $this + 32 | 0;
 if (!(+($53 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$60 >> 2] | 0) >>> 0))) {
  $102 = $agg$result + 8 | 0;
  HEAP32[$102 >> 2] = $0;
  return;
 }
 __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $0);
 __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this + 56 | 0, $this);
 if (HEAP32[$this + 40 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$this + 48 >> 2] | 0);
 $73 = (HEAP8[$47 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$47 >> 0] = $73;
 $$idx6$i$i = $this + 20 | 0;
 $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
 $$idx7$val12$i$i = HEAP32[$5 >> 2] | 0;
 if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
  $$idx6$val14$i$i = $$idx6$val11$i$i;
  $$idx7$val18$i$i = $$idx7$val12$i$i;
  $80 = $73;
  $i$013$i$i = 0;
  while (1) {
   $76 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
   if ((HEAP8[$76 + 4 >> 0] | 0) == $80 << 24 >> 24) {
    $$idx6$val$i$i = $$idx6$val14$i$i;
    $$idx7$val$i$i = $$idx7$val18$i$i;
    $i$1$i$i = $i$013$i$i;
   } else {
    if (!$76) {
     $$idx4$val$i$i = $$idx6$val14$i$i;
     $$idx5$val$i$i = $$idx7$val18$i$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$76 >> 2] | 0) + 4 >> 2] & 255]($76);
     $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $$idx5$val$i$i = HEAP32[$5 >> 2] | 0;
    }
    $89 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
    if (($i$013$i$i | 0) == ($89 | 0)) {
     $$idx6$val$pre$i$i = $$idx4$val$i$i;
     $94 = $$idx5$val$i$i;
    } else {
     HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($89 << 2) >> 2];
     $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $94 = HEAP32[$5 >> 2] | 0;
    }
    $scevgep4$i$i$i$i$i = $94 + -4 | 0;
    HEAP32[$5 >> 2] = $scevgep4$i$i$i$i$i;
    $$idx6$val$i$i = $$idx6$val$pre$i$i;
    $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
    $i$1$i$i = $i$013$i$i + -1 | 0;
   }
   $96 = $i$1$i$i + 1 | 0;
   $100 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
   if ($96 >>> 0 >= $100 >>> 0) {
    $$lcssa = $100;
    break;
   }
   $$idx6$val14$i$i = $$idx6$val$i$i;
   $$idx7$val18$i$i = $$idx7$val$i$i;
   $80 = HEAP8[$47 >> 0] | 0;
   $i$013$i$i = $96;
  }
  $$lcssa$i$i = $$lcssa;
 }
 HEAP32[$54 >> 2] = $$lcssa$i$i;
 HEAP32[$60 >> 2] = $$lcssa$i$i;
 $102 = $agg$result + 8 | 0;
 HEAP32[$102 >> 2] = $0;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE12__find_equalIS9_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_SI_EEiEESL_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$lcssa = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$lcssa = 0, $$pre = 0, $0 = 0, $1 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $11 = 0, $113 = 0, $118 = 0, $120 = 0, $13 = 0, $131 = 0, $133 = 0, $135 = 0, $136 = 0, $137 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $38 = 0, $4 = 0, $41 = 0, $44 = 0, $45 = 0, $47 = 0, $52 = 0, $54 = 0, $6 = 0, $65 = 0, $67 = 0, $69 = 0, $70 = 0, $71 = 0, $76 = 0, $93 = 0, $95 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 do if (($1 | 0) != ($0 | 0)) {
  $3 = $1 + 16 | 0;
  $4 = HEAP8[$__v >> 0] | 0;
  $6 = ($4 & 1) == 0;
  if ($6) $26 = ($4 & 255) >>> 1; else $26 = HEAP32[$__v + 4 >> 2] | 0;
  $11 = HEAP8[$3 >> 0] | 0;
  $13 = ($11 & 1) == 0;
  if ($13) $24 = ($11 & 255) >>> 1; else $24 = HEAP32[$1 + 20 >> 2] | 0;
  if ($6) $28 = $__v + 1 | 0; else $28 = HEAP32[$__v + 8 >> 2] | 0;
  if ($13) $29 = $3 + 1 | 0; else $29 = HEAP32[$1 + 24 >> 2] | 0;
  $30 = _memcmp($28, $29, $24 >>> 0 < $26 >>> 0 ? $24 : $26) | 0;
  if (!$30) {
   if ($26 >>> 0 < $24 >>> 0) break;
  } else if (($30 | 0) < 0) break;
  if ($13) $95 = ($11 & 255) >>> 1; else $95 = HEAP32[$1 + 20 >> 2] | 0;
  if ($6) $93 = ($4 & 255) >>> 1; else $93 = HEAP32[$__v + 4 >> 2] | 0;
  if ($13) $97 = $3 + 1 | 0; else $97 = HEAP32[$1 + 24 >> 2] | 0;
  if ($6) $98 = $__v + 1 | 0; else $98 = HEAP32[$__v + 8 >> 2] | 0;
  $99 = _memcmp($97, $98, $93 >>> 0 < $95 >>> 0 ? $93 : $95) | 0;
  if (!$99) {
   if ($95 >>> 0 >= $93 >>> 0) label = 86;
  } else if (($99 | 0) >= 0) label = 86;
  if ((label | 0) == 86) {
   HEAP32[$__parent >> 2] = $1;
   $$0 = $__parent;
   return $$0 | 0;
  }
  $103 = $1 + 4 | 0;
  $104 = HEAP32[$103 >> 2] | 0;
  $105 = ($104 | 0) == 0;
  if ($105) {
   $$0$i$i$i$i$i = $1;
   while (1) {
    $109 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$109 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
     $$cast$i$i$i$i$i$lcssa = $109;
     break;
    } else $$0$i$i$i$i$i = $109;
   }
   $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
  } else {
   $$0$i$i$i$i$i$i = $104;
   while (1) {
    $106 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
    if (!$106) {
     $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i$i = $106;
   }
   $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
  }
  do if (($$01$i$i$i$i$i | 0) != ($0 | 0)) {
   $113 = $$01$i$i$i$i$i + 16 | 0;
   if ($6) $133 = ($4 & 255) >>> 1; else $133 = HEAP32[$__v + 4 >> 2] | 0;
   $118 = HEAP8[$113 >> 0] | 0;
   $120 = ($118 & 1) == 0;
   if ($120) $131 = ($118 & 255) >>> 1; else $131 = HEAP32[$$01$i$i$i$i$i + 20 >> 2] | 0;
   if ($6) $135 = $__v + 1 | 0; else $135 = HEAP32[$__v + 8 >> 2] | 0;
   if ($120) $136 = $113 + 1 | 0; else $136 = HEAP32[$$01$i$i$i$i$i + 24 >> 2] | 0;
   $137 = _memcmp($135, $136, $131 >>> 0 < $133 >>> 0 ? $131 : $133) | 0;
   if (!$137) {
    if ($133 >>> 0 < $131 >>> 0) break;
   } else if (($137 | 0) < 0) break;
   $$0 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE12__find_equalIS9_EERPNS_16__tree_node_baseIPvEESL_RKT_($this, $__parent, $__v) | 0;
   return $$0 | 0;
  } while (0);
  if ($105) {
   HEAP32[$__parent >> 2] = $1;
   $$0 = $103;
   return $$0 | 0;
  } else {
   HEAP32[$__parent >> 2] = $$01$i$i$i$i$i;
   $$0 = $$01$i$i$i$i$i;
   return $$0 | 0;
  }
 } while (0);
 $$pre = HEAP32[$1 >> 2] | 0;
 do if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $76 = $1; else {
  if (!$$pre) {
   $$0$i$i = $1;
   while (1) {
    $41 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$41 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $41; else {
     $$cast$i$i$lcssa = $41;
     break;
    }
   }
   $$01$i$i = $$cast$i$i$lcssa;
  } else {
   $$0$i$i$i = $$pre;
   while (1) {
    $38 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$38) {
     $$0$i$i$i$lcssa = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $38;
   }
   $$01$i$i = $$0$i$i$i$lcssa;
  }
  $44 = $$01$i$i + 16 | 0;
  $45 = HEAP8[$44 >> 0] | 0;
  $47 = ($45 & 1) == 0;
  if ($47) $67 = ($45 & 255) >>> 1; else $67 = HEAP32[$$01$i$i + 20 >> 2] | 0;
  $52 = HEAP8[$__v >> 0] | 0;
  $54 = ($52 & 1) == 0;
  if ($54) $65 = ($52 & 255) >>> 1; else $65 = HEAP32[$__v + 4 >> 2] | 0;
  if ($47) $69 = $44 + 1 | 0; else $69 = HEAP32[$$01$i$i + 24 >> 2] | 0;
  if ($54) $70 = $__v + 1 | 0; else $70 = HEAP32[$__v + 8 >> 2] | 0;
  $71 = _memcmp($69, $70, $65 >>> 0 < $67 >>> 0 ? $65 : $67) | 0;
  if (!$71) {
   if ($67 >>> 0 < $65 >>> 0) {
    $76 = $$01$i$i;
    break;
   }
  } else if (($71 | 0) < 0) {
   $76 = $$01$i$i;
   break;
  }
  $$0 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE12__find_equalIS9_EERPNS_16__tree_node_baseIPvEESL_RKT_($this, $__parent, $__v) | 0;
  return $$0 | 0;
 } while (0);
 if (!$$pre) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  return $$0 | 0;
 } else {
  HEAP32[$__parent >> 2] = $76;
  $$0 = $76 + 4 | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$010 = 0, $$017 = 0, $$018 = 0, $$09 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $35 = 0, $36 = 0, $39 = 0, $40 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $57 = 0, $58 = 0, $6 = 0, $64 = 0, $71 = 0, $72 = 0, $8 = 0, $80 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $92 = 0, $93 = 0, $95 = 0, $97 = 0, $__loc = 0, $__neg = 0, $__w$0 = 0, $__w$0$lcssa = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 $$byval_copy = sp + 424 | 0;
 $__wbuf = sp + 24 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 8 | 0;
 $__loc = sp + 4 | 0;
 $__neg = sp + 428 | 0;
 $0 = sp;
 HEAP32[$__wb >> 2] = $__wbuf;
 $1 = $__wb + 4 | 0;
 HEAP32[$1 >> 2] = 189;
 $2 = $__wbuf + 400 | 0;
 __THREW__ = 0;
 invoke_vii(47, $__loc | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $30 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$017 = tempRet0;
  $$09 = $30;
  $92 = $__wbuf;
  label = 39;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $__loc | 0, 50200) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  L3 : do if (!($6 & 1)) {
   HEAP8[$__neg >> 0] = 0;
   $8 = HEAP32[$__e >> 2] | 0;
   HEAP32[$0 >> 2] = $8;
   $10 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   $11 = invoke_iiiiiiiiiiii(2, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $10 | 0, $__err | 0, $__neg | 0, $5 | 0, $__wb | 0, $__wn | 0, $2 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if (!($12 & 1)) {
    if ($11) {
     if (!(HEAP8[$__v >> 0] & 1)) HEAP8[$__v >> 0] = 0; else HEAP32[HEAP32[$__v + 8 >> 2] >> 2] = 0;
     HEAP32[$__v + 4 >> 2] = 0;
     if (HEAP8[$__neg >> 0] | 0) {
      __THREW__ = 0;
      $25 = invoke_iii(HEAP32[(HEAP32[$5 >> 2] | 0) + 44 >> 2] | 0, $5 | 0, 45) | 0;
      $26 = __THREW__;
      __THREW__ = 0;
      if ($26 & 1) break;
      __THREW__ = 0;
      invoke_vii(75, $__v | 0, $25 | 0);
      $28 = __THREW__;
      __THREW__ = 0;
      if ($28 & 1) break;
     }
     __THREW__ = 0;
     $35 = invoke_iii(HEAP32[(HEAP32[$5 >> 2] | 0) + 44 >> 2] | 0, $5 | 0, 48) | 0;
     $36 = __THREW__;
     __THREW__ = 0;
     if ($36 & 1) break;
     $39 = HEAP32[$__wn >> 2] | 0;
     $40 = $39 + -4 | 0;
     $__w$0 = HEAP32[$__wb >> 2] | 0;
     while (1) {
      if ($__w$0 >>> 0 >= $40 >>> 0) {
       $__w$0$lcssa = $__w$0;
       break;
      }
      if ((HEAP32[$__w$0 >> 2] | 0) != ($35 | 0)) {
       $__w$0$lcssa = $__w$0;
       break;
      }
      $__w$0 = $__w$0 + 4 | 0;
     }
     __THREW__ = 0;
     invoke_iiii(41, $__v | 0, $__w$0$lcssa | 0, $39 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) break;
    }
    $47 = HEAP32[$__b >> 2] | 0;
    do if (!$47) $97 = 1; else {
     $50 = HEAP32[$47 + 12 >> 2] | 0;
     if (($50 | 0) == (HEAP32[$47 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $57 = invoke_ii(HEAP32[(HEAP32[$47 >> 2] | 0) + 36 >> 2] | 0, $47 | 0) | 0;
      $58 = __THREW__;
      __THREW__ = 0;
      if ($58 & 1) break L3; else $$0$i$i$i$i = $57;
     } else $$0$i$i$i$i = HEAP32[$50 >> 2] | 0;
     if (($$0$i$i$i$i | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $97 = 1;
      break;
     } else {
      $97 = (HEAP32[$__b >> 2] | 0) == 0;
      break;
     }
    } while (0);
    do if (!$8) label = 31; else {
     $64 = HEAP32[$8 + 12 >> 2] | 0;
     if (($64 | 0) == (HEAP32[$8 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $71 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] | 0, $8 | 0) | 0;
      $72 = __THREW__;
      __THREW__ = 0;
      if ($72 & 1) break L3; else $$0$i$i1$i$i = $71;
     } else $$0$i$i1$i$i = HEAP32[$64 >> 2] | 0;
     if (($$0$i$i1$i$i | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 31;
      break;
     } else if ($97) break; else {
      label = 33;
      break;
     }
    } while (0);
    if ((label | 0) == 31) if ($97) label = 33;
    if ((label | 0) == 33) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $80 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if ($80) {
     __THREW__ = 0;
     invoke_vi(HEAP32[$1 >> 2] | 0, $80 | 0);
     $83 = __THREW__;
     __THREW__ = 0;
     if ($83 & 1) {
      $85 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($85);
     }
    }
    STACKTOP = sp;
    return;
   }
  } while (0);
  $87 = ___cxa_find_matching_catch() | 0;
  $88 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre) {
   $$010 = $87;
   $$018 = $88;
  } else {
   $$017 = $88;
   $$09 = $87;
   $92 = $$pre;
   label = 39;
  }
 }
 if ((label | 0) == 39) {
  __THREW__ = 0;
  invoke_vi(HEAP32[$1 >> 2] | 0, $92 | 0);
  $93 = __THREW__;
  __THREW__ = 0;
  if ($93 & 1) {
   $95 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($95);
  } else {
   $$010 = $$09;
   $$018 = $$017;
  }
 }
 ___resumeException($$010 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectEb($agg$result, $obj_, $manifesting) {
 $agg$result = $agg$result | 0;
 $obj_ = $obj_ | 0;
 $manifesting = $manifesting | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$0$i$i$i2 = 0, $$01 = 0, $$01$i$i$i = 0, $$cast$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa17 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $35 = 0, $4 = 0, $41 = 0, $43 = 0, $46 = 0, $50 = 0, $52 = 0, $55 = 0, $59 = 0, $6 = 0, $7 = 0, $9 = 0, $__nd$0$be$in$i$i$i = 0, $__nd$0$i$i$i = 0, $__nd$0$i$i$i$lcssa = 0, $__nd$0$i$i$i$lcssa15 = 0, $__nd$0$i$i$i$lcssa16 = 0, $__parent$i$i = 0, $counter = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__parent$i$i = sp + 16 | 0;
 $counter = sp + 12 | 0;
 $0 = sp;
 HEAP32[$counter >> 2] = 0;
 $1 = $agg$result + 4 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $agg$result + 8 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $3;
 __THREW__ = 0;
 invoke_viiiii(8, $0 | 0, $obj_ | 0, $counter | 0, 0, $manifesting | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $10 = ___cxa_find_matching_catch() | 0;
  $$0 = $10;
  $$01 = tempRet0;
  $$pre$phiZ2D = $3;
  $59 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $59);
  ___resumeException($$0 | 0);
 }
 $6 = HEAP32[$0 >> 2] | 0;
 $7 = $0 + 4 | 0;
 if (($6 | 0) == ($7 | 0)) {
  $9 = HEAP32[$7 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $9);
  STACKTOP = sp;
  return;
 }
 $16 = $6;
 while (1) {
  if ((HEAP32[$16 + 20 >> 2] | 0) != 1) {
   $19 = $16 + 16 | 0;
   $20 = HEAP32[$3 >> 2] | 0;
   do if (!$20) {
    HEAP32[$__parent$i$i >> 2] = $3;
    $$0$i$i$i2 = $3;
    $41 = $3;
   } else {
    $22 = HEAP32[$19 >> 2] | 0;
    $__nd$0$i$i$i = $20;
    while (1) {
     $24 = HEAP32[$__nd$0$i$i$i + 16 >> 2] | 0;
     if ($22 >>> 0 < $24 >>> 0) {
      $26 = HEAP32[$__nd$0$i$i$i >> 2] | 0;
      if (!$26) {
       $$lcssa17 = $__nd$0$i$i$i;
       $__nd$0$i$i$i$lcssa16 = $__nd$0$i$i$i;
       label = 13;
       break;
      } else $__nd$0$be$in$i$i$i = $26;
     } else {
      if ($24 >>> 0 >= $22 >>> 0) {
       $__nd$0$i$i$i$lcssa = $__nd$0$i$i$i;
       label = 18;
       break;
      }
      $29 = $__nd$0$i$i$i + 4 | 0;
      $30 = HEAP32[$29 >> 2] | 0;
      if (!$30) {
       $$lcssa = $29;
       $__nd$0$i$i$i$lcssa15 = $__nd$0$i$i$i;
       label = 17;
       break;
      } else $__nd$0$be$in$i$i$i = $30;
     }
     $__nd$0$i$i$i = $__nd$0$be$in$i$i$i;
    }
    if ((label | 0) == 13) {
     label = 0;
     HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa16;
     $$0$i$i$i2 = $$lcssa17;
     $41 = $__nd$0$i$i$i$lcssa16;
     break;
    } else if ((label | 0) == 17) {
     label = 0;
     HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa15;
     $$0$i$i$i2 = $$lcssa;
     $41 = $__nd$0$i$i$i$lcssa15;
     break;
    } else if ((label | 0) == 18) {
     label = 0;
     HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa;
     $$0$i$i$i2 = $__parent$i$i;
     $41 = $__nd$0$i$i$i$lcssa;
     break;
    }
   } while (0);
   if (!(HEAP32[$$0$i$i$i2 >> 2] | 0)) {
    __THREW__ = 0;
    $34 = invoke_ii(67, 20) | 0;
    $35 = __THREW__;
    __THREW__ = 0;
    if ($35 & 1) {
     label = 7;
     break;
    }
    HEAP32[$34 + 16 >> 2] = HEAP32[$19 >> 2];
    HEAP32[$34 >> 2] = 0;
    HEAP32[$34 + 4 >> 2] = 0;
    HEAP32[$34 + 8 >> 2] = $41;
    HEAP32[$$0$i$i$i2 >> 2] = $34;
    $43 = HEAP32[HEAP32[$agg$result >> 2] >> 2] | 0;
    if (!$43) $46 = $34; else {
     HEAP32[$agg$result >> 2] = $43;
     $46 = HEAP32[$$0$i$i$i2 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1 >> 2] | 0, $46);
    HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
   }
  }
  $50 = HEAP32[$16 + 4 >> 2] | 0;
  if (!$50) {
   $$0$i$i$i = $16;
   while (1) {
    $55 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$55 >> 2] | 0) == ($$0$i$i$i | 0)) {
     $$cast$i$i$i$lcssa = $55;
     break;
    } else $$0$i$i$i = $55;
   }
   $$01$i$i$i = $$cast$i$i$i$lcssa;
  } else {
   $$0$i$i$i$i = $50;
   while (1) {
    $52 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$52) {
     $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $52;
   }
   $$01$i$i$i = $$0$i$i$i$i$lcssa;
  }
  if (($$01$i$i$i | 0) == ($7 | 0)) {
   label = 4;
   break;
  } else $16 = $$01$i$i$i;
 }
 if ((label | 0) == 4) {
  $9 = HEAP32[$7 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $9);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 7) {
  $12 = ___cxa_find_matching_catch() | 0;
  $13 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$7 >> 2] | 0);
  $$0 = $12;
  $$01 = $13;
  $$pre$phiZ2D = $3;
  $59 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $59);
  ___resumeException($$0 | 0);
 }
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$lcssa = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$lcssa = 0, $$lcssa = 0, $$lcssa47 = 0, $$lcssa50 = 0, $$lcssa51 = 0, $$pre = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $19 = 0, $22 = 0, $24 = 0, $27 = 0, $29 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $49 = 0, $5 = 0, $52 = 0, $55 = 0, $57 = 0, $60 = 0, $61 = 0, $__nd$0$be$in$i = 0, $__nd$0$be$in$i3 = 0, $__nd$0$i = 0, $__nd$0$i$lcssa = 0, $__nd$0$i$lcssa48 = 0, $__nd$0$i$lcssa49 = 0, $__nd$0$i2 = 0, $__nd$0$i2$lcssa = 0, $__nd$0$i2$lcssa45 = 0, $__nd$0$i2$lcssa46 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 if (($1 | 0) != ($0 | 0)) {
  $4 = HEAP32[$__v >> 2] | 0;
  $5 = HEAP32[$1 + 16 >> 2] | 0;
  if ($4 >>> 0 >= $5 >>> 0) {
   if ($5 >>> 0 >= $4 >>> 0) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $__parent;
    return $$0 | 0;
   }
   $37 = HEAP32[$1 + 4 >> 2] | 0;
   if (!$37) {
    $$0$i$i$i$i$i = $1;
    while (1) {
     $42 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$42 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$lcssa = $42;
      break;
     } else $$0$i$i$i$i$i = $42;
    }
    $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i = $37;
    while (1) {
     $39 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$39) {
      $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $39;
    }
    $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i | 0) != ($0 | 0)) if ($4 >>> 0 >= (HEAP32[$$01$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
    $52 = HEAP32[$0 >> 2] | 0;
    if (!$52) {
     HEAP32[$__parent >> 2] = $0;
     $$0 = $0;
     return $$0 | 0;
    }
    $__nd$0$i = $52;
    while (1) {
     $55 = HEAP32[$__nd$0$i + 16 >> 2] | 0;
     if ($4 >>> 0 < $55 >>> 0) {
      $57 = HEAP32[$__nd$0$i >> 2] | 0;
      if (!$57) {
       $$lcssa51 = $__nd$0$i;
       $__nd$0$i$lcssa49 = $__nd$0$i;
       label = 43;
       break;
      } else $__nd$0$be$in$i = $57;
     } else {
      if ($55 >>> 0 >= $4 >>> 0) {
       $__nd$0$i$lcssa = $__nd$0$i;
       label = 48;
       break;
      }
      $60 = $__nd$0$i + 4 | 0;
      $61 = HEAP32[$60 >> 2] | 0;
      if (!$61) {
       $$lcssa50 = $60;
       $__nd$0$i$lcssa48 = $__nd$0$i;
       label = 47;
       break;
      } else $__nd$0$be$in$i = $61;
     }
     $__nd$0$i = $__nd$0$be$in$i;
    }
    if ((label | 0) == 43) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa49;
     $$0 = $$lcssa51;
     return $$0 | 0;
    } else if ((label | 0) == 47) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa48;
     $$0 = $$lcssa50;
     return $$0 | 0;
    } else if ((label | 0) == 48) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa;
     $$0 = $__parent;
     return $$0 | 0;
    }
   }
   $49 = $1 + 4 | 0;
   if (!(HEAP32[$49 >> 2] | 0)) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $49;
    return $$0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $$01$i$i$i$i$i;
    $$0 = $$01$i$i$i$i$i;
    return $$0 | 0;
   }
  }
 }
 $$pre = HEAP32[$1 >> 2] | 0;
 if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $22 = $1; else {
  if (!$$pre) {
   $$0$i$i = $1;
   while (1) {
    $14 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$14 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $14; else {
     $$cast$i$i$lcssa = $14;
     break;
    }
   }
   $$01$i$i = $$cast$i$i$lcssa;
  } else {
   $$0$i$i$i = $$pre;
   while (1) {
    $11 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$11) {
     $$0$i$i$i$lcssa = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $11;
   }
   $$01$i$i = $$0$i$i$i$lcssa;
  }
  $19 = HEAP32[$__v >> 2] | 0;
  if ((HEAP32[$$01$i$i + 16 >> 2] | 0) >>> 0 < $19 >>> 0) $22 = $$01$i$i; else {
   $24 = HEAP32[$0 >> 2] | 0;
   if (!$24) {
    HEAP32[$__parent >> 2] = $0;
    $$0 = $0;
    return $$0 | 0;
   }
   $__nd$0$i2 = $24;
   while (1) {
    $27 = HEAP32[$__nd$0$i2 + 16 >> 2] | 0;
    if ($19 >>> 0 < $27 >>> 0) {
     $29 = HEAP32[$__nd$0$i2 >> 2] | 0;
     if (!$29) {
      $$lcssa47 = $__nd$0$i2;
      $__nd$0$i2$lcssa46 = $__nd$0$i2;
      label = 19;
      break;
     } else $__nd$0$be$in$i3 = $29;
    } else {
     if ($27 >>> 0 >= $19 >>> 0) {
      $__nd$0$i2$lcssa = $__nd$0$i2;
      label = 24;
      break;
     }
     $32 = $__nd$0$i2 + 4 | 0;
     $33 = HEAP32[$32 >> 2] | 0;
     if (!$33) {
      $$lcssa = $32;
      $__nd$0$i2$lcssa45 = $__nd$0$i2;
      label = 23;
      break;
     } else $__nd$0$be$in$i3 = $33;
    }
    $__nd$0$i2 = $__nd$0$be$in$i3;
   }
   if ((label | 0) == 19) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa46;
    $$0 = $$lcssa47;
    return $$0 | 0;
   } else if ((label | 0) == 23) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa45;
    $$0 = $$lcssa;
    return $$0 | 0;
   } else if ((label | 0) == 24) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa;
    $$0 = $__parent;
    return $$0 | 0;
   }
  }
 }
 if (!$$pre) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  return $$0 | 0;
 } else {
  HEAP32[$__parent >> 2] = $22;
  $$0 = $22 + 4 | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$0$i$i$i$lcssa = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$cast$i$i$i$i$i$lcssa = 0, $$cast$i$i$lcssa = 0, $$lcssa = 0, $$lcssa47 = 0, $$lcssa50 = 0, $$lcssa51 = 0, $$pre = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $19 = 0, $22 = 0, $24 = 0, $27 = 0, $29 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $49 = 0, $5 = 0, $52 = 0, $55 = 0, $57 = 0, $60 = 0, $61 = 0, $__nd$0$be$in$i = 0, $__nd$0$be$in$i3 = 0, $__nd$0$i = 0, $__nd$0$i$lcssa = 0, $__nd$0$i$lcssa48 = 0, $__nd$0$i$lcssa49 = 0, $__nd$0$i2 = 0, $__nd$0$i2$lcssa = 0, $__nd$0$i2$lcssa45 = 0, $__nd$0$i2$lcssa46 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 if (($1 | 0) != ($0 | 0)) {
  $4 = HEAP32[$__v >> 2] | 0;
  $5 = HEAP32[$1 + 16 >> 2] | 0;
  if ($4 >>> 0 >= $5 >>> 0) {
   if ($5 >>> 0 >= $4 >>> 0) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $__parent;
    return $$0 | 0;
   }
   $37 = HEAP32[$1 + 4 >> 2] | 0;
   if (!$37) {
    $$0$i$i$i$i$i = $1;
    while (1) {
     $42 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$42 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$cast$i$i$i$i$i$lcssa = $42;
      break;
     } else $$0$i$i$i$i$i = $42;
    }
    $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i$i$i = $37;
    while (1) {
     $39 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$39) {
      $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $39;
    }
    $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i$i$i | 0) != ($0 | 0)) if ($4 >>> 0 >= (HEAP32[$$01$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
    $52 = HEAP32[$0 >> 2] | 0;
    if (!$52) {
     HEAP32[$__parent >> 2] = $0;
     $$0 = $0;
     return $$0 | 0;
    }
    $__nd$0$i = $52;
    while (1) {
     $55 = HEAP32[$__nd$0$i + 16 >> 2] | 0;
     if ($4 >>> 0 < $55 >>> 0) {
      $57 = HEAP32[$__nd$0$i >> 2] | 0;
      if (!$57) {
       $$lcssa51 = $__nd$0$i;
       $__nd$0$i$lcssa49 = $__nd$0$i;
       label = 43;
       break;
      } else $__nd$0$be$in$i = $57;
     } else {
      if ($55 >>> 0 >= $4 >>> 0) {
       $__nd$0$i$lcssa = $__nd$0$i;
       label = 48;
       break;
      }
      $60 = $__nd$0$i + 4 | 0;
      $61 = HEAP32[$60 >> 2] | 0;
      if (!$61) {
       $$lcssa50 = $60;
       $__nd$0$i$lcssa48 = $__nd$0$i;
       label = 47;
       break;
      } else $__nd$0$be$in$i = $61;
     }
     $__nd$0$i = $__nd$0$be$in$i;
    }
    if ((label | 0) == 43) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa49;
     $$0 = $$lcssa51;
     return $$0 | 0;
    } else if ((label | 0) == 47) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa48;
     $$0 = $$lcssa50;
     return $$0 | 0;
    } else if ((label | 0) == 48) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa;
     $$0 = $__parent;
     return $$0 | 0;
    }
   }
   $49 = $1 + 4 | 0;
   if (!(HEAP32[$49 >> 2] | 0)) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $49;
    return $$0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $$01$i$i$i$i$i;
    $$0 = $$01$i$i$i$i$i;
    return $$0 | 0;
   }
  }
 }
 $$pre = HEAP32[$1 >> 2] | 0;
 if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $22 = $1; else {
  if (!$$pre) {
   $$0$i$i = $1;
   while (1) {
    $14 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$14 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $14; else {
     $$cast$i$i$lcssa = $14;
     break;
    }
   }
   $$01$i$i = $$cast$i$i$lcssa;
  } else {
   $$0$i$i$i = $$pre;
   while (1) {
    $11 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$11) {
     $$0$i$i$i$lcssa = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $11;
   }
   $$01$i$i = $$0$i$i$i$lcssa;
  }
  $19 = HEAP32[$__v >> 2] | 0;
  if ((HEAP32[$$01$i$i + 16 >> 2] | 0) >>> 0 < $19 >>> 0) $22 = $$01$i$i; else {
   $24 = HEAP32[$0 >> 2] | 0;
   if (!$24) {
    HEAP32[$__parent >> 2] = $0;
    $$0 = $0;
    return $$0 | 0;
   }
   $__nd$0$i2 = $24;
   while (1) {
    $27 = HEAP32[$__nd$0$i2 + 16 >> 2] | 0;
    if ($19 >>> 0 < $27 >>> 0) {
     $29 = HEAP32[$__nd$0$i2 >> 2] | 0;
     if (!$29) {
      $$lcssa47 = $__nd$0$i2;
      $__nd$0$i2$lcssa46 = $__nd$0$i2;
      label = 19;
      break;
     } else $__nd$0$be$in$i3 = $29;
    } else {
     if ($27 >>> 0 >= $19 >>> 0) {
      $__nd$0$i2$lcssa = $__nd$0$i2;
      label = 24;
      break;
     }
     $32 = $__nd$0$i2 + 4 | 0;
     $33 = HEAP32[$32 >> 2] | 0;
     if (!$33) {
      $$lcssa = $32;
      $__nd$0$i2$lcssa45 = $__nd$0$i2;
      label = 23;
      break;
     } else $__nd$0$be$in$i3 = $33;
    }
    $__nd$0$i2 = $__nd$0$be$in$i3;
   }
   if ((label | 0) == 19) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa46;
    $$0 = $$lcssa47;
    return $$0 | 0;
   } else if ((label | 0) == 23) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa45;
    $$0 = $$lcssa;
    return $$0 | 0;
   } else if ((label | 0) == 24) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa;
    $$0 = $__parent;
    return $$0 | 0;
   }
  }
 }
 if (!$$pre) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  return $$0 | 0;
 } else {
  HEAP32[$__parent >> 2] = $22;
  $$0 = $22 + 4 | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$010 = 0, $$017 = 0, $$018 = 0, $$09 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $36 = 0, $37 = 0, $40 = 0, $41 = 0, $46 = 0, $48 = 0, $5 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $63 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $84 = 0, $86 = 0, $88 = 0, $89 = 0, $93 = 0, $94 = 0, $96 = 0, $__loc = 0, $__neg = 0, $__w$0 = 0, $__w$0$lcssa = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy = sp + 24 | 0;
 $__wbuf = sp + 32 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 8 | 0;
 $__loc = sp + 4 | 0;
 $__neg = sp + 28 | 0;
 $0 = sp;
 HEAP32[$__wb >> 2] = $__wbuf;
 $1 = $__wb + 4 | 0;
 HEAP32[$1 >> 2] = 189;
 $2 = $__wbuf + 100 | 0;
 __THREW__ = 0;
 invoke_vii(47, $__loc | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $31 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$017 = tempRet0;
  $$09 = $31;
  $93 = $__wbuf;
  label = 37;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $__loc | 0, 50208) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  L4 : do if (!($6 & 1)) {
   HEAP8[$__neg >> 0] = 0;
   $8 = HEAP32[$__e >> 2] | 0;
   HEAP32[$0 >> 2] = $8;
   $10 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   $11 = invoke_iiiiiiiiiiii(1, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $10 | 0, $__err | 0, $__neg | 0, $5 | 0, $__wb | 0, $__wn | 0, $2 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if (!($12 & 1)) {
    if ($11) {
     if (!(HEAP8[$__v >> 0] & 1)) {
      HEAP8[$__v + 1 >> 0] = 0;
      HEAP8[$__v >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__v + 8 >> 2] >> 0] = 0;
      HEAP32[$__v + 4 >> 2] = 0;
     }
     if (HEAP8[$__neg >> 0] | 0) {
      __THREW__ = 0;
      $26 = invoke_iii(HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] | 0, $5 | 0, 45) | 0;
      $27 = __THREW__;
      __THREW__ = 0;
      if ($27 & 1) break;
      __THREW__ = 0;
      invoke_vii(44, $__v | 0, $26 | 0);
      $29 = __THREW__;
      __THREW__ = 0;
      if ($29 & 1) break;
     }
     __THREW__ = 0;
     $36 = invoke_iii(HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] | 0, $5 | 0, 48) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) break;
     $40 = HEAP32[$__wn >> 2] | 0;
     $41 = $40 + -1 | 0;
     $__w$0 = HEAP32[$__wb >> 2] | 0;
     while (1) {
      if ($__w$0 >>> 0 >= $41 >>> 0) {
       $__w$0$lcssa = $__w$0;
       break;
      }
      if ((HEAP8[$__w$0 >> 0] | 0) != $36 << 24 >> 24) {
       $__w$0$lcssa = $__w$0;
       break;
      }
      $__w$0 = $__w$0 + 1 | 0;
     }
     __THREW__ = 0;
     invoke_iiii(40, $__v | 0, $__w$0$lcssa | 0, $40 | 0) | 0;
     $46 = __THREW__;
     __THREW__ = 0;
     if ($46 & 1) break;
    }
    $48 = HEAP32[$__b >> 2] | 0;
    do if (!$48) $62 = 0; else if ((HEAP32[$48 + 12 >> 2] | 0) == (HEAP32[$48 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $58 = invoke_ii(HEAP32[(HEAP32[$48 >> 2] | 0) + 36 >> 2] | 0, $48 | 0) | 0;
     $59 = __THREW__;
     __THREW__ = 0;
     if ($59 & 1) break L4;
     if (($58 | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $62 = 0;
      break;
     } else {
      $62 = HEAP32[$__b >> 2] | 0;
      break;
     }
    } else $62 = $48; while (0);
    $63 = ($62 | 0) == 0;
    do if (!$8) label = 30; else {
     if ((HEAP32[$8 + 12 >> 2] | 0) == (HEAP32[$8 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $73 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] | 0, $8 | 0) | 0;
      $74 = __THREW__;
      __THREW__ = 0;
      if ($74 & 1) break L4;
      if (($73 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       label = 30;
       break;
      }
     }
     if (!$63) label = 31;
    } while (0);
    if ((label | 0) == 30) if ($63) label = 31;
    if ((label | 0) == 31) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $81 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if ($81) {
     __THREW__ = 0;
     invoke_vi(HEAP32[$1 >> 2] | 0, $81 | 0);
     $84 = __THREW__;
     __THREW__ = 0;
     if ($84 & 1) {
      $86 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($86);
     }
    }
    STACKTOP = sp;
    return;
   }
  } while (0);
  $88 = ___cxa_find_matching_catch() | 0;
  $89 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre) {
   $$010 = $88;
   $$018 = $89;
  } else {
   $$017 = $89;
   $$09 = $88;
   $93 = $$pre;
   label = 37;
  }
 }
 if ((label | 0) == 37) {
  __THREW__ = 0;
  invoke_vi(HEAP32[$1 >> 2] | 0, $93 | 0);
  $94 = __THREW__;
  __THREW__ = 0;
  if ($94 & 1) {
   $96 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($96);
  } else {
   $$010 = $$09;
   $$018 = $$017;
  }
 }
 ___resumeException($$010 | 0);
}

function __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$01$i = 0, $$lcssa = 0, $$pre5 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $41 = 0, $45 = 0, $46 = 0, $48 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $70 = 0, $71 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, dest = 0, src = 0, stop = 0, $$01$i$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $__v + 4 | 0;
 $$pre5 = HEAP32[$3 >> 2] | 0;
 if (($2 | 0) == ($0 | 0)) {
  $81 = $$pre5;
  $82 = $0;
  HEAP32[$this >> 2] = $81;
  HEAP32[$3 >> 2] = $82;
  $83 = $__v + 8 | 0;
  $84 = HEAP32[$1 >> 2] | 0;
  $85 = HEAP32[$83 >> 2] | 0;
  HEAP32[$1 >> 2] = $85;
  HEAP32[$83 >> 2] = $84;
  $86 = $this + 8 | 0;
  $87 = $__v + 12 | 0;
  $88 = HEAP32[$86 >> 2] | 0;
  $89 = HEAP32[$87 >> 2] | 0;
  HEAP32[$86 >> 2] = $89;
  HEAP32[$87 >> 2] = $88;
  $90 = HEAP32[$3 >> 2] | 0;
  HEAP32[$__v >> 2] = $90;
  return;
 }
 $$01$i = $2;
 $6 = $$pre5;
 while (1) {
  $$01$i$looptemp = $$01$i;
  $$01$i = $$01$i + -144 | 0;
  $8 = $$01$i;
  $13 = HEAP32[$8 + 4 >> 2] | 0;
  $14 = $6 + -144 | 0;
  HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$14 + 4 >> 2] = $13;
  $18 = $6 + -136 | 0;
  $19 = $$01$i$looptemp + -136 | 0;
  HEAP32[$18 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
  HEAP32[$18 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
  HEAP32[$18 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
  HEAP32[$19 + 0 >> 2] = 0;
  HEAP32[$19 + 4 >> 2] = 0;
  HEAP32[$19 + 8 >> 2] = 0;
  $20 = $6 + -124 | 0;
  $21 = $$01$i$looptemp + -124 | 0;
  HEAP32[$20 + 0 >> 2] = HEAP32[$21 + 0 >> 2];
  HEAP32[$20 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
  HEAP32[$20 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
  HEAP32[$20 + 12 >> 2] = HEAP32[$21 + 12 >> 2];
  dest = $6 + -108 + 0 | 0;
  src = $$01$i$looptemp + -108 + 0 | 0;
  stop = dest + 40 | 0;
  do {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  $24 = $6 + -68 | 0;
  $25 = $$01$i$looptemp + -68 | 0;
  HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
  $29 = HEAP32[$$01$i$looptemp + -64 >> 2] | 0;
  HEAP32[$6 + -64 >> 2] = $29;
  $30 = $$01$i$looptemp + -60 | 0;
  $32 = HEAP32[$30 >> 2] | 0;
  HEAP32[$6 + -60 >> 2] = $32;
  $34 = $6 + -64 | 0;
  if (!$32) HEAP32[$24 >> 2] = $34; else {
   HEAP32[$29 + 8 >> 2] = $34;
   $36 = $$01$i$looptemp + -64 | 0;
   HEAP32[$25 >> 2] = $36;
   HEAP32[$36 >> 2] = 0;
   HEAP32[$30 >> 2] = 0;
  }
  $37 = $6 + -56 | 0;
  $38 = $$01$i$looptemp + -56 | 0;
  HEAP32[$37 >> 2] = HEAP32[$38 >> 2];
  $40 = $6 + -52 | 0;
  $41 = $$01$i$looptemp + -52 | 0;
  HEAP32[$40 >> 2] = HEAP32[$41 >> 2];
  $45 = HEAP32[$$01$i$looptemp + -48 >> 2] | 0;
  HEAP32[$6 + -48 >> 2] = $45;
  $46 = $$01$i$looptemp + -44 | 0;
  $48 = HEAP32[$46 >> 2] | 0;
  HEAP32[$6 + -44 >> 2] = $48;
  $50 = $6 + -48 | 0;
  if (!$48) HEAP32[$40 >> 2] = $50; else {
   HEAP32[$45 + 8 >> 2] = $50;
   $52 = $$01$i$looptemp + -48 | 0;
   HEAP32[$41 >> 2] = $52;
   HEAP32[$52 >> 2] = 0;
   HEAP32[$46 >> 2] = 0;
  }
  HEAP32[$37 >> 2] = HEAP32[$38 >> 2];
  $54 = $6 + -40 | 0;
  HEAP32[$54 >> 2] = 0;
  $55 = $6 + -36 | 0;
  HEAP32[$55 >> 2] = 0;
  $56 = $6 + -32 | 0;
  HEAP32[$56 >> 2] = 0;
  $57 = $$01$i$looptemp + -40 | 0;
  HEAP32[$54 >> 2] = HEAP32[$57 >> 2];
  $59 = $$01$i$looptemp + -36 | 0;
  HEAP32[$55 >> 2] = HEAP32[$59 >> 2];
  $61 = $$01$i$looptemp + -32 | 0;
  HEAP32[$56 >> 2] = HEAP32[$61 >> 2];
  HEAP32[$61 >> 2] = 0;
  HEAP32[$59 >> 2] = 0;
  HEAP32[$57 >> 2] = 0;
  $63 = $6 + -28 | 0;
  $64 = $$01$i$looptemp + -28 | 0;
  HEAP32[$63 + 0 >> 2] = HEAP32[$64 + 0 >> 2];
  HEAP32[$63 + 4 >> 2] = HEAP32[$64 + 4 >> 2];
  HEAP32[$63 + 8 >> 2] = HEAP32[$64 + 8 >> 2];
  $65 = $6 + -16 | 0;
  $66 = $$01$i$looptemp + -16 | 0;
  HEAP32[$65 >> 2] = HEAP32[$66 >> 2];
  $70 = HEAP32[$$01$i$looptemp + -12 >> 2] | 0;
  HEAP32[$6 + -12 >> 2] = $70;
  $71 = $$01$i$looptemp + -8 | 0;
  $73 = HEAP32[$71 >> 2] | 0;
  HEAP32[$6 + -8 >> 2] = $73;
  $75 = $6 + -12 | 0;
  if (!$73) HEAP32[$65 >> 2] = $75; else {
   HEAP32[$70 + 8 >> 2] = $75;
   $77 = $$01$i$looptemp + -12 | 0;
   HEAP32[$66 >> 2] = $77;
   HEAP32[$77 >> 2] = 0;
   HEAP32[$71 >> 2] = 0;
  }
  $79 = (HEAP32[$3 >> 2] | 0) + -144 | 0;
  HEAP32[$3 >> 2] = $79;
  if (($$01$i | 0) == ($0 | 0)) {
   $$lcssa = $79;
   break;
  } else $6 = $79;
 }
 $81 = $$lcssa;
 $82 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = $81;
 HEAP32[$3 >> 2] = $82;
 $83 = $__v + 8 | 0;
 $84 = HEAP32[$1 >> 2] | 0;
 $85 = HEAP32[$83 >> 2] | 0;
 HEAP32[$1 >> 2] = $85;
 HEAP32[$83 >> 2] = $84;
 $86 = $this + 8 | 0;
 $87 = $__v + 12 | 0;
 $88 = HEAP32[$86 >> 2] | 0;
 $89 = HEAP32[$87 >> 2] | 0;
 HEAP32[$86 >> 2] = $89;
 HEAP32[$87 >> 2] = $88;
 $90 = HEAP32[$3 >> 2] | 0;
 HEAP32[$__v >> 2] = $90;
 return;
}

function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $62 = 0, $9 = 0, $__i$0$i$i$i = 0;
 L1 : do if (!(HEAP8[50568] | 0)) if (___cxa_guard_acquire(50568) | 0) {
  if (!(HEAP8[55952] | 0)) if (___cxa_guard_acquire(55952) | 0) {
   $9 = 55664;
   do {
    $__i$0$i$i$i = 0;
    while (1) {
     if (($__i$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($__i$0$i$i$i << 2) >> 2] = 0;
     $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 55952);
   ___cxa_atexit(196, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(55952);
  }
  __THREW__ = 0;
  invoke_iii(38, 55664, 55960) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  do if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(38, 55676, 55992) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    __THREW__ = 0;
    invoke_iii(38, 55688, 56032) | 0;
    $17 = __THREW__;
    __THREW__ = 0;
    if (!($17 & 1)) {
     __THREW__ = 0;
     invoke_iii(38, 55700, 56056) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if (!($19 & 1)) {
      __THREW__ = 0;
      invoke_iii(38, 55712, 56080) | 0;
      $21 = __THREW__;
      __THREW__ = 0;
      if (!($21 & 1)) {
       __THREW__ = 0;
       invoke_iii(38, 55724, 56096) | 0;
       $23 = __THREW__;
       __THREW__ = 0;
       if (!($23 & 1)) {
        __THREW__ = 0;
        invoke_iii(38, 55736, 56120) | 0;
        $25 = __THREW__;
        __THREW__ = 0;
        if (!($25 & 1)) {
         __THREW__ = 0;
         invoke_iii(38, 55748, 56144) | 0;
         $27 = __THREW__;
         __THREW__ = 0;
         if (!($27 & 1)) {
          __THREW__ = 0;
          invoke_iii(38, 55760, 56176) | 0;
          $29 = __THREW__;
          __THREW__ = 0;
          if (!($29 & 1)) {
           __THREW__ = 0;
           invoke_iii(38, 55772, 56216) | 0;
           $31 = __THREW__;
           __THREW__ = 0;
           if (!($31 & 1)) {
            __THREW__ = 0;
            invoke_iii(38, 55784, 56248) | 0;
            $33 = __THREW__;
            __THREW__ = 0;
            if (!($33 & 1)) {
             __THREW__ = 0;
             invoke_iii(38, 55796, 56288) | 0;
             $35 = __THREW__;
             __THREW__ = 0;
             if (!($35 & 1)) {
              __THREW__ = 0;
              invoke_iii(38, 55808, 56328) | 0;
              $37 = __THREW__;
              __THREW__ = 0;
              if (!($37 & 1)) {
               __THREW__ = 0;
               invoke_iii(38, 55820, 56344) | 0;
               $39 = __THREW__;
               __THREW__ = 0;
               if (!($39 & 1)) {
                __THREW__ = 0;
                invoke_iii(38, 55832, 56360) | 0;
                $41 = __THREW__;
                __THREW__ = 0;
                if (!($41 & 1)) {
                 __THREW__ = 0;
                 invoke_iii(38, 55844, 56376) | 0;
                 $43 = __THREW__;
                 __THREW__ = 0;
                 if ($43 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 55856, 56080) | 0;
                 $45 = __THREW__;
                 __THREW__ = 0;
                 if ($45 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 55868, 56392) | 0;
                 $47 = __THREW__;
                 __THREW__ = 0;
                 if ($47 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 55880, 56408) | 0;
                 $49 = __THREW__;
                 __THREW__ = 0;
                 if ($49 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 55892, 56424) | 0;
                 $51 = __THREW__;
                 __THREW__ = 0;
                 if ($51 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 55904, 56440) | 0;
                 $53 = __THREW__;
                 __THREW__ = 0;
                 if ($53 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 55916, 56456) | 0;
                 $55 = __THREW__;
                 __THREW__ = 0;
                 if ($55 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 55928, 56472) | 0;
                 $57 = __THREW__;
                 __THREW__ = 0;
                 if ($57 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(38, 55940, 56488) | 0;
                 $59 = __THREW__;
                 __THREW__ = 0;
                 if ($59 & 1) break;
                 HEAP32[12640] = 55664;
                 ___cxa_guard_release(50568);
                 break L1;
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while (0);
  $62 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(50568);
  ___resumeException($62 | 0);
 } while (0);
 return HEAP32[12640] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $62 = 0, $9 = 0, $__i$0$i$i$i = 0;
 L1 : do if (!(HEAP8[50552] | 0)) if (___cxa_guard_acquire(50552) | 0) {
  if (!(HEAP8[56792] | 0)) if (___cxa_guard_acquire(56792) | 0) {
   $9 = 56504;
   do {
    $__i$0$i$i$i = 0;
    while (1) {
     if (($__i$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($__i$0$i$i$i << 2) >> 2] = 0;
     $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 56792);
   ___cxa_atexit(195, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(56792);
  }
  __THREW__ = 0;
  invoke_iii(19, 56504, 56800) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  do if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(19, 56516, 56808) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    __THREW__ = 0;
    invoke_iii(19, 56528, 56824) | 0;
    $17 = __THREW__;
    __THREW__ = 0;
    if (!($17 & 1)) {
     __THREW__ = 0;
     invoke_iii(19, 56540, 56832) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if (!($19 & 1)) {
      __THREW__ = 0;
      invoke_iii(19, 56552, 56840) | 0;
      $21 = __THREW__;
      __THREW__ = 0;
      if (!($21 & 1)) {
       __THREW__ = 0;
       invoke_iii(19, 56564, 56848) | 0;
       $23 = __THREW__;
       __THREW__ = 0;
       if (!($23 & 1)) {
        __THREW__ = 0;
        invoke_iii(19, 56576, 56856) | 0;
        $25 = __THREW__;
        __THREW__ = 0;
        if (!($25 & 1)) {
         __THREW__ = 0;
         invoke_iii(19, 56588, 56864) | 0;
         $27 = __THREW__;
         __THREW__ = 0;
         if (!($27 & 1)) {
          __THREW__ = 0;
          invoke_iii(19, 56600, 56872) | 0;
          $29 = __THREW__;
          __THREW__ = 0;
          if (!($29 & 1)) {
           __THREW__ = 0;
           invoke_iii(19, 56612, 56888) | 0;
           $31 = __THREW__;
           __THREW__ = 0;
           if (!($31 & 1)) {
            __THREW__ = 0;
            invoke_iii(19, 56624, 56896) | 0;
            $33 = __THREW__;
            __THREW__ = 0;
            if (!($33 & 1)) {
             __THREW__ = 0;
             invoke_iii(19, 56636, 56912) | 0;
             $35 = __THREW__;
             __THREW__ = 0;
             if (!($35 & 1)) {
              __THREW__ = 0;
              invoke_iii(19, 56648, 56928) | 0;
              $37 = __THREW__;
              __THREW__ = 0;
              if (!($37 & 1)) {
               __THREW__ = 0;
               invoke_iii(19, 56660, 56936) | 0;
               $39 = __THREW__;
               __THREW__ = 0;
               if (!($39 & 1)) {
                __THREW__ = 0;
                invoke_iii(19, 56672, 56944) | 0;
                $41 = __THREW__;
                __THREW__ = 0;
                if (!($41 & 1)) {
                 __THREW__ = 0;
                 invoke_iii(19, 56684, 56952) | 0;
                 $43 = __THREW__;
                 __THREW__ = 0;
                 if ($43 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 56696, 56840) | 0;
                 $45 = __THREW__;
                 __THREW__ = 0;
                 if ($45 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 56708, 56960) | 0;
                 $47 = __THREW__;
                 __THREW__ = 0;
                 if ($47 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 56720, 56968) | 0;
                 $49 = __THREW__;
                 __THREW__ = 0;
                 if ($49 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 56732, 56976) | 0;
                 $51 = __THREW__;
                 __THREW__ = 0;
                 if ($51 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 56744, 56984) | 0;
                 $53 = __THREW__;
                 __THREW__ = 0;
                 if ($53 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 56756, 56992) | 0;
                 $55 = __THREW__;
                 __THREW__ = 0;
                 if ($55 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 56768, 57e3) | 0;
                 $57 = __THREW__;
                 __THREW__ = 0;
                 if ($57 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 56780, 57008) | 0;
                 $59 = __THREW__;
                 __THREW__ = 0;
                 if ($59 & 1) break;
                 HEAP32[12636] = 56504;
                 ___cxa_guard_release(50552);
                 break L1;
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while (0);
  $62 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(50552);
  ___resumeException($62 | 0);
 } while (0);
 return HEAP32[12636] | 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$lcssa20 = 0, $$phi$trans$insert = 0, $$phi$trans$insert10 = 0, $$phi$trans$insert8 = 0, $$pre$phi16Z2D = 0, $$pre$phiZ2D = 0, $$pre11 = 0, $0 = 0, $100 = 0, $11 = 0, $17 = 0, $19 = 0, $24 = 0, $28 = 0, $3 = 0, $35 = 0, $39 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $67 = 0, $70 = 0, $71 = 0, $72 = 0, $74 = 0, $80 = 0, $86 = 0, $89 = 0, $93 = 0, $94 = 0, $95 = 0, $97 = 0, $98 = 0, $99 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = $this + 64 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 92 | 0;
 if (!(HEAP32[$3 >> 2] & 16)) {
  HEAP32[$this + 8 >> 2] = 0;
  HEAP32[$this + 12 >> 2] = 0;
  HEAP32[$this + 16 >> 2] = 0;
  $11 = HEAP32[$this + 52 >> 2] | 0;
  do if ($11 >>> 0 > 8) if (!(HEAP8[$this + 98 >> 0] | 0)) {
   $24 = HEAP32[$this + 56 >> 2] | 0;
   $28 = $24 + ((HEAP32[$this + 60 >> 2] | 0) + -1) | 0;
   HEAP32[$this + 24 >> 2] = $24;
   HEAP32[$this + 20 >> 2] = $24;
   HEAP32[$this + 28 >> 2] = $28;
   $100 = $24;
   $99 = $28;
   break;
  } else {
   $17 = HEAP32[$this + 32 >> 2] | 0;
   $19 = $17 + ($11 + -1) | 0;
   HEAP32[$this + 24 >> 2] = $17;
   HEAP32[$this + 20 >> 2] = $17;
   HEAP32[$this + 28 >> 2] = $19;
   $100 = $17;
   $99 = $19;
   break;
  } else {
   HEAP32[$this + 24 >> 2] = 0;
   HEAP32[$this + 20 >> 2] = 0;
   HEAP32[$this + 28 >> 2] = 0;
   $100 = 0;
   $99 = 0;
  } while (0);
  HEAP32[$3 >> 2] = 16;
  $$pre$phi16Z2D = $this + 28 | 0;
  $$pre$phiZ2D = $this + 20 | 0;
  $97 = $100;
  $98 = $99;
 } else {
  $$phi$trans$insert = $this + 20 | 0;
  $$phi$trans$insert8 = $this + 28 | 0;
  $$pre$phi16Z2D = $$phi$trans$insert8;
  $$pre$phiZ2D = $$phi$trans$insert;
  $97 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $98 = HEAP32[$$phi$trans$insert8 >> 2] | 0;
 }
 $35 = ($__c | 0) == -1;
 $$phi$trans$insert10 = $this + 24 | 0;
 $$pre11 = HEAP32[$$phi$trans$insert10 >> 2] | 0;
 if ($35) {
  $43 = $$pre11;
  $45 = $97;
 } else {
  if (!$$pre11) {
   HEAP32[$$phi$trans$insert10 >> 2] = $__1buf;
   HEAP32[$$pre$phiZ2D >> 2] = $__1buf;
   HEAP32[$$pre$phi16Z2D >> 2] = $__1buf + 1;
   $39 = $__1buf;
  } else $39 = $$pre11;
  HEAP8[$39 >> 0] = $__c;
  $41 = (HEAP32[$$phi$trans$insert10 >> 2] | 0) + 1 | 0;
  HEAP32[$$phi$trans$insert10 >> 2] = $41;
  $43 = $41;
  $45 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 }
 $42 = $this + 24 | 0;
 if (($43 | 0) != ($45 | 0)) {
  do if (!(HEAP8[$this + 98 >> 0] | 0)) {
   $55 = $this + 32 | 0;
   $56 = HEAP32[$55 >> 2] | 0;
   HEAP32[$__extbe >> 2] = $56;
   $57 = $this + 68 | 0;
   $58 = HEAP32[$57 >> 2] | 0;
   if (!$58) {
    $62 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($62);
    ___cxa_throw($62 | 0, 43832, 85);
   }
   $60 = $this + 72 | 0;
   $61 = $this + 52 | 0;
   $65 = $56;
   $67 = $58;
   $70 = $45;
   $71 = $43;
   while (1) {
    $72 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$67 >> 2] | 0) + 12 >> 2] & 15]($67, $60, $70, $71, $__e, $65, $65 + (HEAP32[$61 >> 2] | 0) | 0, $__extbe) | 0;
    $74 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    if ((HEAP32[$__e >> 2] | 0) == ($74 | 0)) {
     label = 32;
     break;
    }
    if (($72 | 0) == 3) {
     $$lcssa20 = $74;
     label = 23;
     break;
    }
    if ($72 >>> 0 >= 2) {
     label = 32;
     break;
    }
    $86 = HEAP32[$55 >> 2] | 0;
    $89 = (HEAP32[$__extbe >> 2] | 0) - $86 | 0;
    if ((_fwrite($86 | 0, 1, $89 | 0, HEAP32[$0 >> 2] | 0) | 0) != ($89 | 0)) {
     label = 32;
     break;
    }
    if (($72 | 0) != 1) {
     label = 29;
     break;
    }
    $93 = HEAP32[$__e >> 2] | 0;
    $94 = HEAP32[$42 >> 2] | 0;
    HEAP32[$$pre$phiZ2D >> 2] = $93;
    HEAP32[$$pre$phi16Z2D >> 2] = $94;
    HEAP32[$42 >> 2] = $94;
    $95 = HEAP32[$57 >> 2] | 0;
    if (!$95) {
     label = 19;
     break;
    }
    $65 = HEAP32[$55 >> 2] | 0;
    $67 = $95;
    $70 = $93;
    $71 = $94;
   }
   if ((label | 0) == 19) {
    $62 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($62);
    ___cxa_throw($62 | 0, 43832, 85);
   } else if ((label | 0) == 23) {
    $80 = (HEAP32[$42 >> 2] | 0) - $$lcssa20 | 0;
    if ((_fwrite($$lcssa20 | 0, 1, $80 | 0, HEAP32[$0 >> 2] | 0) | 0) == ($80 | 0)) break; else $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 29) break; else if ((label | 0) == 32) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } else {
   $51 = $43 - $45 | 0;
   if ((_fwrite($45 | 0, 1, $51 | 0, HEAP32[$0 >> 2] | 0) | 0) != ($51 | 0)) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } while (0);
  HEAP32[$42 >> 2] = $97;
  HEAP32[$$pre$phiZ2D >> 2] = $97;
  HEAP32[$$pre$phi16Z2D >> 2] = $98;
 }
 $$0 = $35 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}
function __ZN12_GLOBAL__N_111Interpreter14manifestStringERK13LocationRange($agg$result, $this, $loc) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 var $$0 = 0, $$0$i = 0, $$01$i = 0, $$016 = 0, $$035 = 0, $$12 = 0, $$14 = 0, $0 = 0, $1 = 0, $11 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $33 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $7 = 0, $8 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $0 = sp + 168 | 0;
 $ss = sp + 24 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 $3 = $this + 40 | 0;
 if ((HEAP32[$3 >> 2] | 0) == 19) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, (HEAP32[$this + 48 >> 2] | 0) + 8 | 0);
  STACKTOP = sp;
  return;
 }
 $6 = $ss + 64 | 0;
 $7 = $ss + 8 | 0;
 HEAP32[$7 >> 2] = 752;
 $8 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 900;
 HEAP32[$6 >> 2] = 920;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $8 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $23 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $23;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 732;
 HEAP32[$6 >> 2] = 772;
 HEAP32[$7 >> 2] = 752;
 __THREW__ = 0;
 invoke_vi(177, $8 | 0);
 $15 = __THREW__;
 __THREW__ = 0;
 do if ($15 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $25;
 } else {
  HEAP32[$8 >> 2] = 1064;
  $17 = $ss + 44 | 0;
  HEAP32[$17 + 0 >> 2] = 0;
  HEAP32[$17 + 4 >> 2] = 0;
  HEAP32[$17 + 8 >> 2] = 0;
  HEAP32[$17 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $8 | 0, $0 | 0);
  $19 = __THREW__;
  __THREW__ = 0;
  if ($19 & 1) {
   $21 = ___cxa_find_matching_catch() | 0;
   $22 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
   $eh$lpad$body$i$index2Z2D = $22;
   $eh$lpad$body$i$indexZ2D = $21;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  __THREW__ = 0;
  $27 = invoke_iiii(25, $7 | 0, 39592, 29) | 0;
  $28 = __THREW__;
  __THREW__ = 0;
  do if ($28 & 1) label = 19; else {
   __THREW__ = 0;
   invoke_vii(61, $1 | 0, HEAP32[$3 >> 2] | 0);
   $31 = __THREW__;
   __THREW__ = 0;
   if ($31 & 1) label = 19; else {
    $33 = HEAP8[$1 >> 0] | 0;
    if (!($33 & 1)) {
     $43 = $1 + 1 | 0;
     $44 = ($33 & 255) >>> 1;
    } else {
     $43 = HEAP32[$1 + 8 >> 2] | 0;
     $44 = HEAP32[$1 + 4 >> 2] | 0;
    }
    __THREW__ = 0;
    invoke_iiii(25, $27 | 0, $43 | 0, $44 | 0) | 0;
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) {
     $57 = ___cxa_find_matching_catch() | 0;
     $58 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
     $$12 = $58;
     $$14 = $57;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    $47 = ___cxa_allocate_exception(24) | 0;
    __THREW__ = 0;
    invoke_vii(43, $2 | 0, $8 | 0);
    $48 = __THREW__;
    __THREW__ = 0;
    if ($48 & 1) {
     $59 = ___cxa_find_matching_catch() | 0;
     $$016 = tempRet0;
     $$035 = $59;
    } else {
     __THREW__ = 0;
     invoke_viiii(17, $47 | 0, $this + 56 | 0, $loc | 0, $2 | 0);
     $51 = __THREW__;
     __THREW__ = 0;
     if ($51 & 1) $$0 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $47 | 0, 38664, 183);
      $53 = __THREW__;
      __THREW__ = 0;
      if ($53 & 1) $$0 = 0; else {}
     }
     $61 = ___cxa_find_matching_catch() | 0;
     $62 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     if ($$0) {
      $$016 = $62;
      $$035 = $61;
     } else {
      $$12 = $62;
      $$14 = $61;
      break;
     }
    }
    ___cxa_free_exception($47 | 0);
    $$12 = $$016;
    $$14 = $$035;
   }
  } while (0);
  if ((label | 0) == 19) {
   $55 = ___cxa_find_matching_catch() | 0;
   $$12 = tempRet0;
   $$14 = $55;
  }
  HEAP32[$ss >> 2] = 732;
  HEAP32[$6 >> 2] = 772;
  HEAP32[$7 >> 2] = 752;
  HEAP32[$8 >> 2] = 1064;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$14 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
 ___resumeException($$01$i | 0);
}

function __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $root, $curr, $start_from, $counter, $self) {
 $f = $f | 0;
 $root = $root | 0;
 $curr = $curr | 0;
 $start_from = $start_from | 0;
 $counter = $counter | 0;
 $self = $self | 0;
 var $$0 = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i9 = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$lcssa43 = 0, $$0$ph6$i$i$i2 = 0, $$0$ph6$i$i$i2$lcssa45 = 0, $$01$ph5$i$i$i = 0, $$01$ph5$i$i$i3 = 0, $$013$i$i$i = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i$lcssa$lcssa = 0, $$013$i$i$i5 = 0, $$013$i$i$i5$lcssa = 0, $$013$i$i$i5$lcssa$lcssa = 0, $0 = 0, $10 = 0, $12 = 0, $15 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $36 = 0, $38 = 0, $39 = 0, $50 = 0, $6 = 0, $counter2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $counter2 = sp;
 $0 = ($curr | 0) == 0;
 do if ($0) {
  $50 = HEAP32[$counter >> 2] | 0;
  label = 34;
 } else {
  $2 = ___dynamic_cast($curr, 38808, 39144, 0) | 0;
  if ($2) {
   $6 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $root, HEAP32[$2 + 12 >> 2] | 0, $start_from, $counter, $self) | 0;
   if ($6) {
    $$0 = $6;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $10 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $root, HEAP32[$2 + 8 >> 2] | 0, $start_from, $counter, $self) | 0;
   if (!$10) break; else $$0 = $10;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $12 = ___dynamic_cast($curr, 38808, 39200, 0) | 0;
  if ($12) {
   HEAP32[$counter2 >> 2] = 0;
   $15 = HEAP32[$12 + 8 >> 2] | 0;
   $18 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $15, $15, HEAP32[$12 + 12 >> 2] | 0, $counter2, $self) | 0;
   if (!$18) break;
   HEAP32[$counter >> 2] = HEAP32[$counter2 >> 2];
   $$0 = $18;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $21 = HEAP32[$counter >> 2] | 0;
  if ($0 | $21 >>> 0 < $start_from >>> 0) {
   $50 = $21;
   label = 34;
  } else {
   $23 = ___dynamic_cast($curr, 38808, 38880, 0) | 0;
   if ($23) {
    $25 = $23 + 24 | 0;
    $26 = HEAP32[$25 >> 2] | 0;
    if (!$26) {
     $50 = $21;
     label = 34;
     break;
    }
    $$0$ph6$i$i$i2 = $25;
    $$01$ph5$i$i$i3 = $26;
    L20 : while (1) {
     $$013$i$i$i5 = $$01$ph5$i$i$i3;
     while (1) {
      if ((HEAP32[$$013$i$i$i5 + 16 >> 2] | 0) >>> 0 >= $f >>> 0) {
       $$013$i$i$i5$lcssa = $$013$i$i$i5;
       break;
      }
      $$013$i$i$i5 = HEAP32[$$013$i$i$i5 + 4 >> 2] | 0;
      if (!$$013$i$i$i5) {
       $$0$ph6$i$i$i2$lcssa45 = $$0$ph6$i$i$i2;
       label = 17;
       break L20;
      }
     }
     $$01$ph5$i$i$i3 = HEAP32[$$013$i$i$i5$lcssa >> 2] | 0;
     if (!$$01$ph5$i$i$i3) {
      $$013$i$i$i5$lcssa$lcssa = $$013$i$i$i5$lcssa;
      label = 18;
      break;
     } else $$0$ph6$i$i$i2 = $$013$i$i$i5$lcssa;
    }
    if ((label | 0) == 17) $$0$ph$lcssa$i$i$i9 = $$0$ph6$i$i$i2$lcssa45; else if ((label | 0) == 18) $$0$ph$lcssa$i$i$i9 = $$013$i$i$i5$lcssa$lcssa;
    if (($$0$ph$lcssa$i$i$i9 | 0) == ($25 | 0)) {
     $50 = $21;
     label = 34;
     break;
    }
    if ((HEAP32[$$0$ph$lcssa$i$i$i9 + 16 >> 2] | 0) >>> 0 > $f >>> 0) {
     $50 = $21;
     label = 34;
     break;
    }
    HEAP32[$self >> 2] = $root;
    $$0 = $23;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $36 = ___dynamic_cast($curr, 38808, 39264, 0) | 0;
   if (!$36) {
    $50 = $21;
    label = 34;
   } else {
    $38 = $36 + 32 | 0;
    $39 = HEAP32[$38 >> 2] | 0;
    if (!$39) {
     $50 = $21;
     label = 34;
    } else {
     $$0$ph6$i$i$i = $38;
     $$01$ph5$i$i$i = $39;
     L36 : while (1) {
      $$013$i$i$i = $$01$ph5$i$i$i;
      while (1) {
       if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $f >>> 0) {
        $$013$i$i$i$lcssa = $$013$i$i$i;
        break;
       }
       $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
       if (!$$013$i$i$i) {
        $$0$ph6$i$i$i$lcssa43 = $$0$ph6$i$i$i;
        label = 29;
        break L36;
       }
      }
      $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
      if (!$$01$ph5$i$i$i) {
       $$013$i$i$i$lcssa$lcssa = $$013$i$i$i$lcssa;
       label = 30;
       break;
      } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
     }
     if ((label | 0) == 29) $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i$lcssa43; else if ((label | 0) == 30) $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa$lcssa;
     if (($$0$ph$lcssa$i$i$i | 0) == ($38 | 0)) {
      $50 = $21;
      label = 34;
     } else if ((HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0 > $f >>> 0) {
      $50 = $21;
      label = 34;
     } else {
      HEAP32[$self >> 2] = $root;
      $$0 = $36;
      STACKTOP = sp;
      return $$0 | 0;
     }
    }
   }
  }
 } while (0);
 if ((label | 0) == 34) HEAP32[$counter >> 2] = $50 + 1;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__18ios_base4InitC2Ev($this) {
 $this = $this | 0;
 var $$sum$i1 = 0, $$sum$i11 = 0, $$sum1$i12 = 0, $$sum1$i2 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $18 = 0, $20 = 0, $22 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $45 = 0, $5 = 0, $52 = 0, $54 = 0, $56 = 0, $60 = 0, $62 = 0, $64 = 0, $69 = 0, $71 = 0, $79 = 0, $81 = 0, $83 = 0, $9 = 0, $94 = 0;
 $0 = HEAP32[_stdin >> 2] | 0;
 __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(46520, $0, 46576);
 HEAP32[11452] = 47500;
 HEAP32[11454] = 47520;
 HEAP32[11453] = 0;
 $1 = HEAP32[11872] | 0;
 __THREW__ = 0;
 invoke_vii(41, 45808 + $1 | 0, 46520);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $5 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(45816 | 0);
  ___resumeException($5 | 0);
 }
 HEAP32[$1 + 45880 >> 2] = 0;
 HEAP32[$1 + 45884 >> 2] = -1;
 $9 = HEAP32[_stdout >> 2] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(46624, $9, 46584 | 0);
 HEAP32[11474] = 47580;
 HEAP32[11475] = 47600;
 $10 = HEAP32[11892] | 0;
 __THREW__ = 0;
 invoke_vii(41, 45896 + $10 | 0, 46624);
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(45900 | 0);
  ___resumeException($14 | 0);
 }
 $$sum$i1 = $10 + 72 | 0;
 HEAP32[45896 + $$sum$i1 >> 2] = 0;
 $$sum1$i2 = $10 + 76 | 0;
 HEAP32[45896 + $$sum1$i2 >> 2] = -1;
 $18 = HEAP32[_stderr >> 2] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(46672, $18, 46592 | 0);
 HEAP32[11496] = 47580;
 HEAP32[11497] = 47600;
 __THREW__ = 0;
 invoke_vii(41, 45984 + $10 | 0, 46672);
 $20 = __THREW__;
 __THREW__ = 0;
 if ($20 & 1) {
  $22 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(45988 | 0);
  ___resumeException($22 | 0);
 }
 HEAP32[45984 + $$sum$i1 >> 2] = 0;
 HEAP32[45984 + $$sum1$i2 >> 2] = -1;
 $30 = HEAP32[(HEAP32[(HEAP32[11496] | 0) + -12 >> 2] | 0) + 46008 >> 2] | 0;
 HEAP32[11518] = 47580;
 HEAP32[11519] = 47600;
 __THREW__ = 0;
 invoke_vii(41, 46072 + $10 | 0, $30 | 0);
 $32 = __THREW__;
 __THREW__ = 0;
 if ($32 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(46076 | 0);
  ___resumeException($34 | 0);
 }
 HEAP32[46072 + $$sum$i1 >> 2] = 0;
 HEAP32[46072 + $$sum1$i2 >> 2] = -1;
 HEAP32[(HEAP32[(HEAP32[11452] | 0) + -12 >> 2] | 0) + 45880 >> 2] = 45896;
 $45 = (HEAP32[(HEAP32[11496] | 0) + -12 >> 2] | 0) + 45988 | 0;
 HEAP32[$45 >> 2] = HEAP32[$45 >> 2] | 8192;
 HEAP32[(HEAP32[(HEAP32[11496] | 0) + -12 >> 2] | 0) + 46056 >> 2] = 45896;
 __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(46720, $0, 46600 | 0);
 HEAP32[11540] = 47540;
 HEAP32[11542] = 47560;
 HEAP32[11541] = 0;
 $52 = HEAP32[11882] | 0;
 __THREW__ = 0;
 invoke_vii(41, 46160 + $52 | 0, 46720);
 $54 = __THREW__;
 __THREW__ = 0;
 if ($54 & 1) {
  $56 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(46168 | 0);
  ___resumeException($56 | 0);
 }
 HEAP32[$52 + 46232 >> 2] = 0;
 HEAP32[$52 + 46236 >> 2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(46776, $9, 46608 | 0);
 HEAP32[11562] = 47620;
 HEAP32[11563] = 47640;
 $60 = HEAP32[11902] | 0;
 __THREW__ = 0;
 invoke_vii(41, 46248 + $60 | 0, 46776);
 $62 = __THREW__;
 __THREW__ = 0;
 if ($62 & 1) {
  $64 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(46252 | 0);
  ___resumeException($64 | 0);
 }
 $$sum$i11 = $60 + 72 | 0;
 HEAP32[46248 + $$sum$i11 >> 2] = 0;
 $$sum1$i12 = $60 + 76 | 0;
 HEAP32[46248 + $$sum1$i12 >> 2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(46824, $18, 46616 | 0);
 HEAP32[11584] = 47620;
 HEAP32[11585] = 47640;
 __THREW__ = 0;
 invoke_vii(41, 46336 + $60 | 0, 46824);
 $69 = __THREW__;
 __THREW__ = 0;
 if ($69 & 1) {
  $71 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(46340 | 0);
  ___resumeException($71 | 0);
 }
 HEAP32[46336 + $$sum$i11 >> 2] = 0;
 HEAP32[46336 + $$sum1$i12 >> 2] = -1;
 $79 = HEAP32[(HEAP32[(HEAP32[11584] | 0) + -12 >> 2] | 0) + 46360 >> 2] | 0;
 HEAP32[11606] = 47620;
 HEAP32[11607] = 47640;
 __THREW__ = 0;
 invoke_vii(41, 46424 + $60 | 0, $79 | 0);
 $81 = __THREW__;
 __THREW__ = 0;
 if ($81 & 1) {
  $83 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(46428 | 0);
  ___resumeException($83 | 0);
 } else {
  HEAP32[46424 + $$sum$i11 >> 2] = 0;
  HEAP32[46424 + $$sum1$i12 >> 2] = -1;
  HEAP32[(HEAP32[(HEAP32[11540] | 0) + -12 >> 2] | 0) + 46232 >> 2] = 46248;
  $94 = (HEAP32[(HEAP32[11584] | 0) + -12 >> 2] | 0) + 46340 | 0;
  HEAP32[$94 >> 2] = HEAP32[$94 >> 2] | 8192;
  HEAP32[(HEAP32[(HEAP32[11584] | 0) + -12 >> 2] | 0) + 46408 >> 2] = 46248;
  return;
 }
}

function __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0$i$i$i = 0, $$idx1$val$i$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $23 = 0, $3 = 0, $31 = 0, $37 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $49 = 0, $50 = 0, $55 = 0, $56 = 0, $57 = 0, $64 = 0, $66 = 0, $67 = 0, $79 = 0, $86 = 0, $__v$i$i = 0, $this$idx$val$i$i = 0, $this$idx2$val$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v$i$i = sp;
 $0 = $this + 12 | 0;
 $1 = $this + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $this + 20 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($2 >>> 0 < $4 >>> 0) {
  if (!$2) $31 = 0; else {
   HEAP32[$2 >> 2] = $args;
   HEAP32[$2 + 4 >> 2] = $args1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($2 + 8 | 0, $args1 + 4 | 0);
   $10 = $2 + 20 | 0;
   $11 = $args1 + 16 | 0;
   HEAP32[$10 + 0 >> 2] = HEAP32[$11 + 0 >> 2];
   HEAP32[$10 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$10 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   HEAP32[$10 + 12 >> 2] = HEAP32[$11 + 12 >> 2];
   HEAP8[$2 + 36 >> 0] = 0;
   HEAP32[$2 + 72 >> 2] = 0;
   HEAP32[$2 + 80 >> 2] = 0;
   HEAP32[$2 + 84 >> 2] = 0;
   HEAP32[$2 + 76 >> 2] = $2 + 80;
   HEAP32[$2 + 88 >> 2] = 0;
   HEAP32[$2 + 96 >> 2] = 0;
   HEAP32[$2 + 100 >> 2] = 0;
   HEAP32[$2 + 92 >> 2] = $2 + 96;
   $23 = $2 + 104 | 0;
   HEAP32[$2 + 132 >> 2] = 0;
   HEAP32[$2 + 136 >> 2] = 0;
   HEAP32[$23 + 0 >> 2] = 0;
   HEAP32[$23 + 4 >> 2] = 0;
   HEAP32[$23 + 8 >> 2] = 0;
   HEAP32[$23 + 12 >> 2] = 0;
   HEAP32[$23 + 16 >> 2] = 0;
   HEAP32[$23 + 20 >> 2] = 0;
   HEAP32[$2 + 128 >> 2] = $2 + 132;
   HEAP32[$2 + 40 >> 2] = 0;
   HEAP32[$2 + 56 >> 2] = 0;
   $31 = HEAP32[$1 >> 2] | 0;
  }
  HEAP32[$1 >> 2] = $31 + 144;
  STACKTOP = sp;
  return;
 }
 $this$idx2$val$i$i = HEAP32[$0 >> 2] | 0;
 $37 = (($2 - $this$idx2$val$i$i | 0) / 144 | 0) + 1 | 0;
 if ($37 >>> 0 > 29826161) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $$idx1$val$i$i$i$i = HEAP32[$3 >> 2] | 0;
  $this$idx$val$i$i = HEAP32[$0 >> 2] | 0;
 } else {
  $$idx1$val$i$i$i$i = $4;
  $this$idx$val$i$i = $this$idx2$val$i$i;
 }
 $40 = $this$idx$val$i$i;
 $42 = ($$idx1$val$i$i$i$i - $40 | 0) / 144 | 0;
 if ($42 >>> 0 < 14913080) {
  $44 = $42 << 1;
  $$0$i$i$i = $44 >>> 0 < $37 >>> 0 ? $37 : $44;
 } else $$0$i$i$i = 29826161;
 $49 = ((HEAP32[$1 >> 2] | 0) - $40 | 0) / 144 | 0;
 $50 = $__v$i$i + 12 | 0;
 HEAP32[$50 >> 2] = 0;
 HEAP32[$__v$i$i + 16 >> 2] = $this + 20;
 if (!$$0$i$i$i) $55 = 0; else $55 = __Znwj($$0$i$i$i * 144 | 0) | 0;
 HEAP32[$__v$i$i >> 2] = $55;
 $56 = $55 + ($49 * 144 | 0) | 0;
 $57 = $__v$i$i + 8 | 0;
 HEAP32[$57 >> 2] = $56;
 HEAP32[$__v$i$i + 4 >> 2] = $56;
 HEAP32[$50 >> 2] = $55 + ($$0$i$i$i * 144 | 0);
 do if ($56) {
  HEAP32[$56 >> 2] = $args;
  HEAP32[$55 + ($49 * 144 | 0) + 4 >> 2] = $args1;
  __THREW__ = 0;
  invoke_vii(40, $55 + ($49 * 144 | 0) + 8 | 0, $args1 + 4 | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if ($64 & 1) {
   $86 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
   ___resumeException($86 | 0);
  } else {
   $66 = $55 + ($49 * 144 | 0) + 20 | 0;
   $67 = $args1 + 16 | 0;
   HEAP32[$66 + 0 >> 2] = HEAP32[$67 + 0 >> 2];
   HEAP32[$66 + 4 >> 2] = HEAP32[$67 + 4 >> 2];
   HEAP32[$66 + 8 >> 2] = HEAP32[$67 + 8 >> 2];
   HEAP32[$66 + 12 >> 2] = HEAP32[$67 + 12 >> 2];
   HEAP8[$55 + ($49 * 144 | 0) + 36 >> 0] = 0;
   HEAP32[$55 + ($49 * 144 | 0) + 72 >> 2] = 0;
   HEAP32[$55 + ($49 * 144 | 0) + 80 >> 2] = 0;
   HEAP32[$55 + ($49 * 144 | 0) + 84 >> 2] = 0;
   HEAP32[$55 + ($49 * 144 | 0) + 76 >> 2] = $55 + ($49 * 144 | 0) + 80;
   HEAP32[$55 + ($49 * 144 | 0) + 88 >> 2] = 0;
   HEAP32[$55 + ($49 * 144 | 0) + 96 >> 2] = 0;
   HEAP32[$55 + ($49 * 144 | 0) + 100 >> 2] = 0;
   HEAP32[$55 + ($49 * 144 | 0) + 92 >> 2] = $55 + ($49 * 144 | 0) + 96;
   $79 = $55 + ($49 * 144 | 0) + 104 | 0;
   HEAP32[$55 + ($49 * 144 | 0) + 132 >> 2] = 0;
   HEAP32[$55 + ($49 * 144 | 0) + 136 >> 2] = 0;
   HEAP32[$79 + 0 >> 2] = 0;
   HEAP32[$79 + 4 >> 2] = 0;
   HEAP32[$79 + 8 >> 2] = 0;
   HEAP32[$79 + 12 >> 2] = 0;
   HEAP32[$79 + 16 >> 2] = 0;
   HEAP32[$79 + 20 >> 2] = 0;
   HEAP32[$55 + ($49 * 144 | 0) + 128 >> 2] = $55 + ($49 * 144 | 0) + 132;
   HEAP32[$55 + ($49 * 144 | 0) + 40 >> 2] = 0;
   HEAP32[$55 + ($49 * 144 | 0) + 56 >> 2] = 0;
   break;
  }
 } while (0);
 HEAP32[$57 >> 2] = $55 + (($49 + 1 | 0) * 144 | 0);
 __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $__v$i$i);
 __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
 STACKTOP = sp;
 return;
}

function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa43 = 0, $$lcssa44 = 0, $$lcssa45 = 0, $$lcssa46 = 0, $$lcssa47 = 0, $$pre = 0, $16 = 0, $17 = 0, $28 = 0, $38 = 0, $42 = 0, $44 = 0, $57 = 0, $71 = 0, $77 = 0, $79 = 0, $81 = 0, $93 = 0, $96 = 0, $frm_nxt$1 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$2 = 0, $nchar16_t$0 = 0, $nchar16_t$1 = 0, label = 0;
 $$pre = $frm_end;
 if (!($mode & 4)) $frm_nxt$1$ph = $frm; else if (($$pre - $frm | 0) > 2) if ((HEAP8[$frm >> 0] | 0) == -17) if ((HEAP8[$frm + 1 >> 0] | 0) == -69) $frm_nxt$1$ph = (HEAP8[$frm + 2 >> 0] | 0) == -65 ? $frm + 3 | 0 : $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm;
 $frm_nxt$1 = $frm_nxt$1$ph;
 $nchar16_t$0 = 0;
 L7 : while (1) {
  if (!($nchar16_t$0 >>> 0 < $mx >>> 0 & $frm_nxt$1 >>> 0 < $frm_end >>> 0)) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $16 = HEAP8[$frm_nxt$1 >> 0] | 0;
  $17 = $16 & 255;
  if ($17 >>> 0 > $Maxcode >>> 0) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  do if ($16 << 24 >> 24 > -1) {
   $frm_nxt$2 = $frm_nxt$1 + 1 | 0;
   $nchar16_t$1 = $nchar16_t$0;
  } else {
   if (($16 & 255) < 194) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   if (($16 & 255) < 224) {
    if (($$pre - $frm_nxt$1 | 0) < 2) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $28 = HEAPU8[$frm_nxt$1 + 1 >> 0] | 0;
    if (($28 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    if (($28 & 63 | $17 << 6 & 1984) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$1 + 2 | 0;
    $nchar16_t$1 = $nchar16_t$0;
    break;
   }
   if (($16 & 255) < 240) {
    $38 = $frm_nxt$1;
    if (($$pre - $38 | 0) < 3) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $42 = HEAP8[$frm_nxt$1 + 1 >> 0] | 0;
    $44 = HEAP8[$frm_nxt$1 + 2 >> 0] | 0;
    if (($17 | 0) == 224) {
     if (($42 & -32) << 24 >> 24 != -96) {
      $$lcssa46 = $38;
      label = 21;
      break L7;
     }
    } else if (($17 | 0) == 237) {
     if (($42 & -32) << 24 >> 24 != -128) {
      $$lcssa45 = $38;
      label = 23;
      break L7;
     }
    } else if (($42 & -64) << 24 >> 24 != -128) {
     $$lcssa47 = $38;
     label = 25;
     break L7;
    }
    $57 = $44 & 255;
    if (($57 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    if ((($42 & 255) << 6 & 4032 | $17 << 12 & 61440 | $57 & 63) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$1 + 3 | 0;
    $nchar16_t$1 = $nchar16_t$0;
    break;
   }
   if (($16 & 255) >= 245) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $71 = $frm_nxt$1;
   if (($mx - $nchar16_t$0 | 0) >>> 0 < 2 | ($$pre - $71 | 0) < 4) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $77 = HEAP8[$frm_nxt$1 + 1 >> 0] | 0;
   $79 = HEAP8[$frm_nxt$1 + 2 >> 0] | 0;
   $81 = HEAP8[$frm_nxt$1 + 3 >> 0] | 0;
   if (($17 | 0) == 244) {
    if (($77 & -16) << 24 >> 24 != -128) {
     $$lcssa = $71;
     label = 35;
     break L7;
    }
   } else if (($17 | 0) == 240) {
    if (($77 + 112 & 255) >= 48) {
     $$lcssa43 = $71;
     label = 33;
     break L7;
    }
   } else if (($77 & -64) << 24 >> 24 != -128) {
    $$lcssa44 = $71;
    label = 37;
    break L7;
   }
   $93 = $79 & 255;
   if (($93 & 192 | 0) != 128) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $96 = $81 & 255;
   if (($96 & 192 | 0) != 128) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   if ((($77 & 255) << 12 & 258048 | $17 << 18 & 1835008 | $93 << 6 & 4032 | $96 & 63) >>> 0 > $Maxcode >>> 0) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $frm_nxt$2 = $frm_nxt$1 + 4 | 0;
   $nchar16_t$1 = $nchar16_t$0 + 1 | 0;
  } while (0);
  $frm_nxt$1 = $frm_nxt$2;
  $nchar16_t$0 = $nchar16_t$1 + 1 | 0;
 }
 if ((label | 0) == 21) $$0 = $$lcssa46 - $frm | 0; else if ((label | 0) == 23) $$0 = $$lcssa45 - $frm | 0; else if ((label | 0) == 25) $$0 = $$lcssa47 - $frm | 0; else if ((label | 0) == 33) $$0 = $$lcssa43 - $frm | 0; else if ((label | 0) == 35) $$0 = $$lcssa - $frm | 0; else if ((label | 0) == 37) $$0 = $$lcssa44 - $frm | 0; else if ((label | 0) == 43) $$0 = $frm_nxt$1$lcssa - $frm | 0;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_111InterpreterD2Ev($this) {
 $this = $this | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$01$i$i$i = 0, $$cast$i$i$i$lcssa = 0, $$idx$val$i = 0, $$idx$val$i57 = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$i$i$lcssa = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val$i$i$lcssa = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa = 0, $$lcssa$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $23 = 0, $25 = 0, $28 = 0, $32 = 0, $4 = 0, $41 = 0, $46 = 0, $48 = 0, $52 = 0, $56 = 0, $59 = 0, $8 = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0;
 $0 = $this + 88 | 0;
 $$idx$val$i = HEAP32[$0 >> 2] | 0;
 $1 = $this + 92 | 0;
 if (($$idx$val$i | 0) != ($1 | 0)) {
  $$idx$val$i57 = $$idx$val$i;
  while (1) {
   $4 = HEAP32[$$idx$val$i57 + 40 >> 2] | 0;
   if ($4) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 12 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    __ZdlPv($4);
   }
   $8 = HEAP32[$$idx$val$i57 + 4 >> 2] | 0;
   if (!$8) {
    $$0$i$i$i = $$idx$val$i57;
    while (1) {
     $13 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$13 >> 2] | 0) == ($$0$i$i$i | 0)) {
      $$cast$i$i$i$lcssa = $13;
      break;
     } else $$0$i$i$i = $13;
    }
    $$01$i$i$i = $$cast$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i = $8;
    while (1) {
     $10 = HEAP32[$$0$i$i$i$i >> 2] | 0;
     if (!$10) {
      $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
      break;
     } else $$0$i$i$i$i = $10;
    }
    $$01$i$i$i = $$0$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i | 0) == ($1 | 0)) break; else $$idx$val$i57 = $$01$i$i$i;
  }
 }
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this + 100 | 0, HEAP32[$this + 104 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKN12_GLOBAL__N_111Interpreter16ImportCacheValueEEENS_19__map_value_compareIS9_SF_NS_4lessIS9_EELb1EEENS6_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE($0, HEAP32[$1 >> 2] | 0);
 HEAP32[$this + 56 >> 2] = 39384;
 __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($this + 68 | 0);
 $23 = $this + 16 | 0;
 $25 = (HEAP8[$23 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$23 >> 0] = $25;
 $$idx6$i$i = $this + 20 | 0;
 $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
 $$idx7$i$i = $this + 24 | 0;
 $$idx7$val12$i$i = HEAP32[$$idx7$i$i >> 2] | 0;
 if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) {
  $$lcssa$i$i = 0;
  $56 = $$idx6$val11$i$i;
  $59 = $$idx6$val11$i$i;
 } else {
  $$idx6$val14$i$i = $$idx6$val11$i$i;
  $$idx7$val18$i$i = $$idx7$val12$i$i;
  $32 = $25;
  $i$013$i$i = 0;
  while (1) {
   $28 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
   if ((HEAP8[$28 + 4 >> 0] | 0) == $32 << 24 >> 24) {
    $$idx6$val$i$i = $$idx6$val14$i$i;
    $$idx7$val$i$i = $$idx7$val18$i$i;
    $i$1$i$i = $i$013$i$i;
   } else {
    if (!$28) {
     $$idx4$val$i$i = $$idx6$val14$i$i;
     $$idx5$val$i$i = $$idx7$val18$i$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$28 >> 2] | 0) + 4 >> 2] & 255]($28);
     $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $$idx5$val$i$i = HEAP32[$$idx7$i$i >> 2] | 0;
    }
    $41 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
    if (($i$013$i$i | 0) == ($41 | 0)) {
     $$idx6$val$pre$i$i = $$idx4$val$i$i;
     $46 = $$idx5$val$i$i;
    } else {
     HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($41 << 2) >> 2];
     $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $46 = HEAP32[$$idx7$i$i >> 2] | 0;
    }
    $scevgep4$i$i$i$i$i = $46 + -4 | 0;
    HEAP32[$$idx7$i$i >> 2] = $scevgep4$i$i$i$i$i;
    $$idx6$val$i$i = $$idx6$val$pre$i$i;
    $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
    $i$1$i$i = $i$013$i$i + -1 | 0;
   }
   $48 = $i$1$i$i + 1 | 0;
   $52 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
   if ($48 >>> 0 >= $52 >>> 0) {
    $$idx6$val$i$i$lcssa = $$idx6$val$i$i;
    $$idx7$val$i$i$lcssa = $$idx7$val$i$i;
    $$lcssa = $52;
    break;
   }
   $$idx6$val14$i$i = $$idx6$val$i$i;
   $$idx7$val18$i$i = $$idx7$val$i$i;
   $32 = HEAP8[$23 >> 0] | 0;
   $i$013$i$i = $48;
  }
  $$lcssa$i$i = $$lcssa;
  $56 = $$idx6$val$i$i$lcssa;
  $59 = $$idx7$val$i$i$lcssa;
 }
 HEAP32[$this + 36 >> 2] = $$lcssa$i$i;
 HEAP32[$this + 32 >> 2] = $$lcssa$i$i;
 if (!$56) return;
 if (($59 | 0) != ($56 | 0)) HEAP32[$$idx7$i$i >> 2] = $59 + (~(($59 + -4 - $56 | 0) >>> 2) << 2);
 __ZdlPv($56);
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $$0$i = 0, $$pre$phiZ2D = 0, $$pre2 = 0, $$sink1$i = 0, $$sink2$i = 0, $0 = 0, $103 = 0, $104 = 0, $109 = 0, $112 = 0, $114 = 0, $116 = 0, $118 = 0, $127 = 0, $128 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $19 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $37 = 0, $40 = 0, $41 = 0, $44 = 0, $45 = 0, $52 = 0, $59 = 0, $61 = 0, $62 = 0, $66 = 0, $68 = 0, $69 = 0, $70 = 0, $75 = 0, $81 = 0, $86 = 0, $87 = 0, $88 = 0, $90 = 0, $93 = 0, $97 = 0, $98 = 0, $__1buf = 0, $__c$0 = 0, $__inext = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__1buf = sp + 4 | 0;
 $__inext = sp;
 $0 = $this + 64 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 92 | 0;
 if (!(HEAP32[$3 >> 2] & 8)) {
  HEAP32[$this + 24 >> 2] = 0;
  HEAP32[$this + 20 >> 2] = 0;
  HEAP32[$this + 28 >> 2] = 0;
  if (!(HEAP8[$this + 98 >> 0] | 0)) {
   $19 = HEAP32[$this + 56 >> 2] | 0;
   $$sink1$i = $19 + (HEAP32[$this + 60 >> 2] | 0) | 0;
   $$sink2$i = $19;
  } else {
   $14 = HEAP32[$this + 32 >> 2] | 0;
   $$sink1$i = $14 + (HEAP32[$this + 52 >> 2] | 0) | 0;
   $$sink2$i = $14;
  }
  HEAP32[$this + 8 >> 2] = $$sink2$i;
  HEAP32[$this + 12 >> 2] = $$sink1$i;
  HEAP32[$this + 16 >> 2] = $$sink1$i;
  HEAP32[$3 >> 2] = 8;
  $$0$i = 1;
  $27 = $$sink1$i;
 } else {
  $$0$i = 0;
  $27 = HEAP32[$this + 12 >> 2] | 0;
 }
 $26 = $this + 12 | 0;
 if (!$27) {
  $29 = $__1buf + 1 | 0;
  HEAP32[$this + 8 >> 2] = $__1buf;
  HEAP32[$26 >> 2] = $29;
  HEAP32[$this + 16 >> 2] = $29;
  $41 = $29;
 } else $41 = $27;
 $$pre2 = HEAP32[$this + 16 >> 2] | 0;
 if ($$0$i) $44 = 0; else {
  $37 = ($$pre2 - (HEAP32[$this + 8 >> 2] | 0) | 0) / 2 | 0;
  $44 = $37 >>> 0 > 4 ? 4 : $37;
 }
 $40 = $this + 16 | 0;
 do if (($41 | 0) == ($$pre2 | 0)) {
  $45 = $this + 8 | 0;
  _memmove(HEAP32[$45 >> 2] | 0, $41 + (0 - $44) | 0, $44 | 0) | 0;
  if (HEAP8[$this + 98 >> 0] | 0) {
   $52 = HEAP32[$45 >> 2] | 0;
   $59 = _fread($52 + $44 | 0, 1, (HEAP32[$40 >> 2] | 0) - $44 - $52 | 0, HEAP32[$0 >> 2] | 0) | 0;
   if (!$59) {
    $$pre$phiZ2D = $45;
    $__c$0 = -1;
    break;
   }
   $61 = HEAP32[$45 >> 2] | 0;
   $62 = $61 + $44 | 0;
   HEAP32[$26 >> 2] = $62;
   HEAP32[$40 >> 2] = $61 + ($59 + $44);
   $$pre$phiZ2D = $45;
   $__c$0 = HEAPU8[$62 >> 0] | 0;
   break;
  }
  $66 = $this + 32 | 0;
  $68 = $this + 36 | 0;
  $69 = HEAP32[$68 >> 2] | 0;
  $70 = $this + 40 | 0;
  _memmove(HEAP32[$66 >> 2] | 0, $69 | 0, (HEAP32[$70 >> 2] | 0) - $69 | 0) | 0;
  $75 = HEAP32[$66 >> 2] | 0;
  $81 = $75 + ((HEAP32[$70 >> 2] | 0) - (HEAP32[$68 >> 2] | 0)) | 0;
  HEAP32[$68 >> 2] = $81;
  if (($75 | 0) == ($this + 44 | 0)) $87 = 8; else $87 = HEAP32[$this + 52 >> 2] | 0;
  $86 = $75 + $87 | 0;
  HEAP32[$70 >> 2] = $86;
  $88 = $this + 60 | 0;
  $90 = (HEAP32[$88 >> 2] | 0) - $44 | 0;
  $93 = $86 - $81 | 0;
  $97 = $this + 72 | 0;
  $98 = $97;
  $103 = HEAP32[$98 + 4 >> 2] | 0;
  $104 = $this + 80 | 0;
  HEAP32[$104 >> 2] = HEAP32[$98 >> 2];
  HEAP32[$104 + 4 >> 2] = $103;
  $109 = _fread($81 | 0, 1, ($93 >>> 0 < $90 >>> 0 ? $93 : $90) | 0, HEAP32[$0 >> 2] | 0) | 0;
  if (!$109) {
   $$pre$phiZ2D = $45;
   $__c$0 = -1;
  } else {
   $112 = HEAP32[$this + 68 >> 2] | 0;
   if (!$112) {
    $114 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($114);
    ___cxa_throw($114 | 0, 43832, 85);
   }
   $116 = (HEAP32[$68 >> 2] | 0) + $109 | 0;
   HEAP32[$70 >> 2] = $116;
   $118 = HEAP32[$45 >> 2] | 0;
   if ((FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$112 >> 2] | 0) + 16 >> 2] & 15]($112, $97, HEAP32[$66 >> 2] | 0, $116, $68, $118 + $44 | 0, $118 + (HEAP32[$88 >> 2] | 0) | 0, $__inext) | 0) == 3) {
    $127 = HEAP32[$66 >> 2] | 0;
    $128 = HEAP32[$70 >> 2] | 0;
    HEAP32[$45 >> 2] = $127;
    HEAP32[$26 >> 2] = $127;
    HEAP32[$40 >> 2] = $128;
    $$pre$phiZ2D = $45;
    $__c$0 = HEAPU8[$127 >> 0] | 0;
    break;
   }
   $131 = HEAP32[$__inext >> 2] | 0;
   $132 = HEAP32[$45 >> 2] | 0;
   $133 = $132 + $44 | 0;
   if (($131 | 0) == ($133 | 0)) {
    $$pre$phiZ2D = $45;
    $__c$0 = -1;
   } else {
    HEAP32[$45 >> 2] = $132;
    HEAP32[$26 >> 2] = $133;
    HEAP32[$40 >> 2] = $131;
    $$pre$phiZ2D = $45;
    $__c$0 = HEAPU8[$133 >> 0] | 0;
   }
  }
 } else {
  $$pre$phiZ2D = $this + 8 | 0;
  $__c$0 = HEAPU8[$41 >> 0] | 0;
 } while (0);
 if ((HEAP32[$$pre$phiZ2D >> 2] | 0) != ($__1buf | 0)) {
  $$0 = $__c$0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$$pre$phiZ2D >> 2] = 0;
 HEAP32[$26 >> 2] = 0;
 HEAP32[$40 >> 2] = 0;
 $$0 = $__c$0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$0$ph = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $102 = 0, $105 = 0, $126 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $3 = 0, $34 = 0, $40 = 0, $49 = 0, $51 = 0, $58 = 0, $67 = 0, $77 = 0, $79 = 0, $81 = 0, $87 = 0, $90 = 0, $96 = 0, $98 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 if (!($mode & 4)) $$pre$phiZ2D = $frm_end; else {
  $2 = HEAP32[$frm_nxt >> 2] | 0;
  $3 = $frm_end;
  if (($3 - $2 | 0) > 2) if ((HEAP8[$2 >> 0] | 0) == -17) if ((HEAP8[$2 + 1 >> 0] | 0) == -69) if ((HEAP8[$2 + 2 >> 0] | 0) == -65) {
   HEAP32[$frm_nxt >> 2] = $2 + 3;
   $$pre$phiZ2D = $3;
  } else $$pre$phiZ2D = $3; else $$pre$phiZ2D = $3; else $$pre$phiZ2D = $3; else $$pre$phiZ2D = $3;
 }
 $16 = $to_end;
 L9 : while (1) {
  $17 = HEAP32[$frm_nxt >> 2] | 0;
  $18 = $17 >>> 0 < $frm_end >>> 0;
  if (!$18) {
   $$lcssa = $18;
   label = 41;
   break;
  }
  $19 = HEAP32[$to_nxt >> 2] | 0;
  if ($19 >>> 0 >= $to_end >>> 0) {
   $$lcssa = $18;
   label = 41;
   break;
  }
  $21 = HEAP8[$17 >> 0] | 0;
  $22 = $21 & 255;
  if ($22 >>> 0 > $Maxcode >>> 0) {
   $$0$ph = 2;
   label = 42;
   break;
  }
  do if ($21 << 24 >> 24 > -1) {
   HEAP16[$19 >> 1] = $21 & 255;
   HEAP32[$frm_nxt >> 2] = $17 + 1;
  } else {
   if (($21 & 255) < 194) {
    $$0$ph = 2;
    label = 42;
    break L9;
   }
   if (($21 & 255) < 224) {
    if (($$pre$phiZ2D - $17 | 0) < 2) {
     $$0$ph = 1;
     label = 42;
     break L9;
    }
    $34 = HEAPU8[$17 + 1 >> 0] | 0;
    if (($34 & 192 | 0) != 128) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $40 = $34 & 63 | $22 << 6 & 1984;
    if ($40 >>> 0 > $Maxcode >>> 0) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    HEAP16[$19 >> 1] = $40;
    HEAP32[$frm_nxt >> 2] = $17 + 2;
    break;
   }
   if (($21 & 255) < 240) {
    if (($$pre$phiZ2D - $17 | 0) < 3) {
     $$0$ph = 1;
     label = 42;
     break L9;
    }
    $49 = HEAP8[$17 + 1 >> 0] | 0;
    $51 = HEAP8[$17 + 2 >> 0] | 0;
    if (($22 | 0) == 237) {
     if (($49 & -32) << 24 >> 24 != -128) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    } else if (($22 | 0) == 224) {
     if (($49 & -32) << 24 >> 24 != -96) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    } else if (($49 & -64) << 24 >> 24 != -128) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $58 = $51 & 255;
    if (($58 & 192 | 0) != 128) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $67 = ($49 & 255) << 6 & 4032 | $22 << 12 | $58 & 63;
    if (($67 & 65535) >>> 0 > $Maxcode >>> 0) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    HEAP16[$19 >> 1] = $67;
    HEAP32[$frm_nxt >> 2] = $17 + 3;
    break;
   }
   if (($21 & 255) >= 245) {
    $$0$ph = 2;
    label = 42;
    break L9;
   }
   if (($$pre$phiZ2D - $17 | 0) < 4) {
    $$0$ph = 1;
    label = 42;
    break L9;
   }
   $77 = HEAP8[$17 + 1 >> 0] | 0;
   $79 = HEAP8[$17 + 2 >> 0] | 0;
   $81 = HEAP8[$17 + 3 >> 0] | 0;
   if (($22 | 0) == 244) {
    if (($77 & -16) << 24 >> 24 != -128) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
   } else if (($22 | 0) == 240) {
    if (($77 + 112 & 255) >= 48) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
   } else if (($77 & -64) << 24 >> 24 != -128) {
    $$0$ph = 2;
    label = 42;
    break L9;
   }
   $87 = $79 & 255;
   if (($87 & 192 | 0) != 128) {
    $$0$ph = 2;
    label = 42;
    break L9;
   }
   $90 = $81 & 255;
   if (($90 & 192 | 0) != 128) {
    $$0$ph = 2;
    label = 42;
    break L9;
   }
   if (($16 - $19 | 0) < 4) {
    $$0$ph = 1;
    label = 42;
    break L9;
   }
   $96 = $22 & 7;
   $98 = $77 & 255;
   $102 = $87 << 6;
   $105 = $90 & 63;
   if (($98 << 12 & 258048 | $96 << 18 | $102 & 4032 | $105) >>> 0 > $Maxcode >>> 0) {
    $$0$ph = 2;
    label = 42;
    break L9;
   }
   HEAP16[$19 >> 1] = $98 << 2 & 60 | $87 >>> 4 & 3 | (($98 >>> 4 & 3 | $96 << 2) << 6) + 16320 | 55296;
   $126 = $19 + 2 | 0;
   HEAP32[$to_nxt >> 2] = $126;
   HEAP16[$126 >> 1] = $105 | $102 & 960 | 56320;
   HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 4;
  } while (0);
  HEAP32[$to_nxt >> 2] = (HEAP32[$to_nxt >> 2] | 0) + 2;
 }
 if ((label | 0) == 41) $$0 = $$lcssa & 1; else if ((label | 0) == 42) $$0 = $$0$ph;
 return $$0 | 0;
}

function __Z18jsonnet_vm_executeP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE5VmExtNS4_4lessISB_EENS9_INS4_4pairIKSB_SC_EEEEEEjddPFPcPvPKcSP_PSM_PiESN_b($agg$result, $alloc, $ast, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx, $string_output) {
 $agg$result = $agg$result | 0;
 $alloc = $alloc | 0;
 $ast = $ast | 0;
 $ext_vars = $ext_vars | 0;
 $max_stack = $max_stack | 0;
 $gc_min_objects = +$gc_min_objects;
 $gc_growth_trigger = +$gc_growth_trigger;
 $import_callback = $import_callback | 0;
 $ctx = $ctx | 0;
 $string_output = $string_output | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$3 = 0, $$34 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, $vm = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $vm = sp;
 $0 = sp + 184 | 0;
 $1 = sp + 172 | 0;
 $2 = sp + 144 | 0;
 $3 = sp + 132 | 0;
 $4 = sp + 120 | 0;
 __ZN12_GLOBAL__N_111InterpreterC2EP9AllocatorRKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE5VmExtNS3_4lessISA_EENS8_INS3_4pairIKSA_SB_EEEEEEjddPFPcPvPKcSO_PSL_PiESM_($vm, $alloc, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx);
 __THREW__ = 0;
 invoke_vii(60, $vm | 0, $ast | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 do if (!($5 & 1)) {
  if ($string_output) {
   __THREW__ = 0;
   invoke_viii(3, $1 | 0, 38488, 20);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) break;
   __THREW__ = 0;
   invoke_vii(40, $0 | 0, $1 | 0);
   $9 = __THREW__;
   __THREW__ = 0;
   do if ($9 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $$0 = tempRet0;
    $$01 = $16;
   } else {
    $11 = $0 + 12 | 0;
    HEAP32[$11 + 0 >> 2] = 0;
    HEAP32[$11 + 4 >> 2] = 0;
    HEAP32[$11 + 8 >> 2] = 0;
    HEAP32[$11 + 12 >> 2] = 0;
    __THREW__ = 0;
    invoke_viii(10, $agg$result | 0, $vm | 0, $0 | 0);
    $12 = __THREW__;
    __THREW__ = 0;
    if ($12 & 1) {
     $18 = ___cxa_find_matching_catch() | 0;
     $19 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     $$0 = $19;
     $$01 = $18;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
    STACKTOP = sp;
    return;
   } while (0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$3 = $$0;
   $$34 = $$01;
   __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
   ___resumeException($$34 | 0);
  }
  __THREW__ = 0;
  invoke_viii(3, $3 | 0, 38488, 20);
  $20 = __THREW__;
  __THREW__ = 0;
  if (!($20 & 1)) {
   __THREW__ = 0;
   invoke_vii(40, $2 | 0, $3 | 0);
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    $29 = ___cxa_find_matching_catch() | 0;
    $$2 = tempRet0;
    $$23 = $29;
   } else {
    $24 = $2 + 12 | 0;
    HEAP32[$24 + 0 >> 2] = 0;
    HEAP32[$24 + 4 >> 2] = 0;
    HEAP32[$24 + 8 >> 2] = 0;
    HEAP32[$24 + 12 >> 2] = 0;
    __THREW__ = 0;
    invoke_viii(3, $4 | 0, 48920, 0);
    $25 = __THREW__;
    __THREW__ = 0;
    do if ($25 & 1) {
     $31 = ___cxa_find_matching_catch() | 0;
     $$1 = tempRet0;
     $$12 = $31;
    } else {
     __THREW__ = 0;
     invoke_viiiii(6, $agg$result | 0, $vm | 0, $2 | 0, 1, $4 | 0);
     $27 = __THREW__;
     __THREW__ = 0;
     if ($27 & 1) {
      $33 = ___cxa_find_matching_catch() | 0;
      $34 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $$1 = $34;
      $$12 = $33;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
     STACKTOP = sp;
     return;
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    $$2 = $$1;
    $$23 = $$12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $$3 = $$2;
   $$34 = $$23;
   __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
   ___resumeException($$34 | 0);
  }
 } while (0);
 $14 = ___cxa_find_matching_catch() | 0;
 $$3 = tempRet0;
 $$34 = $14;
 __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
 ___resumeException($$34 | 0);
}

function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa41 = 0, $$lcssa42 = 0, $$lcssa43 = 0, $$lcssa44 = 0, $$lcssa45 = 0, $$pre = 0, $16 = 0, $17 = 0, $28 = 0, $38 = 0, $42 = 0, $44 = 0, $57 = 0, $71 = 0, $75 = 0, $77 = 0, $79 = 0, $91 = 0, $94 = 0, $frm_nxt$1 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$2 = 0, $nchar32_t$0 = 0, label = 0;
 $$pre = $frm_end;
 if (!($mode & 4)) $frm_nxt$1$ph = $frm; else if (($$pre - $frm | 0) > 2) if ((HEAP8[$frm >> 0] | 0) == -17) if ((HEAP8[$frm + 1 >> 0] | 0) == -69) $frm_nxt$1$ph = (HEAP8[$frm + 2 >> 0] | 0) == -65 ? $frm + 3 | 0 : $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm;
 $frm_nxt$1 = $frm_nxt$1$ph;
 $nchar32_t$0 = 0;
 L7 : while (1) {
  if (!($nchar32_t$0 >>> 0 < $mx >>> 0 & $frm_nxt$1 >>> 0 < $frm_end >>> 0)) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $16 = HEAP8[$frm_nxt$1 >> 0] | 0;
  $17 = $16 & 255;
  do if ($16 << 24 >> 24 > -1) {
   if ($17 >>> 0 > $Maxcode >>> 0) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $frm_nxt$2 = $frm_nxt$1 + 1 | 0;
  } else {
   if (($16 & 255) < 194) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   if (($16 & 255) < 224) {
    if (($$pre - $frm_nxt$1 | 0) < 2) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $28 = HEAPU8[$frm_nxt$1 + 1 >> 0] | 0;
    if (($28 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    if (($28 & 63 | $17 << 6 & 1984) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$1 + 2 | 0;
    break;
   }
   if (($16 & 255) < 240) {
    $38 = $frm_nxt$1;
    if (($$pre - $38 | 0) < 3) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $42 = HEAP8[$frm_nxt$1 + 1 >> 0] | 0;
    $44 = HEAP8[$frm_nxt$1 + 2 >> 0] | 0;
    if (($17 | 0) == 237) {
     if (($42 & -32) << 24 >> 24 != -128) {
      $$lcssa43 = $38;
      label = 23;
      break L7;
     }
    } else if (($17 | 0) == 224) {
     if (($42 & -32) << 24 >> 24 != -96) {
      $$lcssa44 = $38;
      label = 21;
      break L7;
     }
    } else if (($42 & -64) << 24 >> 24 != -128) {
     $$lcssa45 = $38;
     label = 25;
     break L7;
    }
    $57 = $44 & 255;
    if (($57 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    if ((($42 & 255) << 6 & 4032 | $17 << 12 & 61440 | $57 & 63) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$1 + 3 | 0;
    break;
   }
   if (($16 & 255) >= 245) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $71 = $frm_nxt$1;
   if (($$pre - $71 | 0) < 4) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $75 = HEAP8[$frm_nxt$1 + 1 >> 0] | 0;
   $77 = HEAP8[$frm_nxt$1 + 2 >> 0] | 0;
   $79 = HEAP8[$frm_nxt$1 + 3 >> 0] | 0;
   if (($17 | 0) == 244) {
    if (($75 & -16) << 24 >> 24 != -128) {
     $$lcssa = $71;
     label = 35;
     break L7;
    }
   } else if (($17 | 0) == 240) {
    if (($75 + 112 & 255) >= 48) {
     $$lcssa41 = $71;
     label = 33;
     break L7;
    }
   } else if (($75 & -64) << 24 >> 24 != -128) {
    $$lcssa42 = $71;
    label = 37;
    break L7;
   }
   $91 = $77 & 255;
   if (($91 & 192 | 0) != 128) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $94 = $79 & 255;
   if (($94 & 192 | 0) != 128) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   if ((($75 & 255) << 12 & 258048 | $17 << 18 & 1835008 | $91 << 6 & 4032 | $94 & 63) >>> 0 > $Maxcode >>> 0) {
    $frm_nxt$1$lcssa = $frm_nxt$1;
    label = 43;
    break L7;
   }
   $frm_nxt$2 = $frm_nxt$1 + 4 | 0;
  } while (0);
  $frm_nxt$1 = $frm_nxt$2;
  $nchar32_t$0 = $nchar32_t$0 + 1 | 0;
 }
 if ((label | 0) == 21) $$0 = $$lcssa44 - $frm | 0; else if ((label | 0) == 23) $$0 = $$lcssa43 - $frm | 0; else if ((label | 0) == 25) $$0 = $$lcssa45 - $frm | 0; else if ((label | 0) == 33) $$0 = $$lcssa41 - $frm | 0; else if ((label | 0) == 35) $$0 = $$lcssa - $frm | 0; else if ((label | 0) == 37) $$0 = $$lcssa42 - $frm | 0; else if ((label | 0) == 43) $$0 = $frm_nxt$1$lcssa - $frm | 0;
 return $$0 | 0;
}

function __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root, $__x) {
 $__root = $__root | 0;
 $__x = $__x | 0;
 var $$06 = 0, $$06$lcssa26 = 0, $$06$lcssa27 = 0, $$lcssa = 0, $$lcssa28 = 0, $$lcssa29 = 0, $$lcssa30 = 0, $$lcssa31 = 0, $$lcssa32 = 0, $$lcssa33 = 0, $$lcssa34 = 0, $0 = 0, $10 = 0, $13 = 0, $15 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $30 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $46 = 0, $5 = 0, $51 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $66 = 0, $67 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $80 = 0, $83 = 0, label = 0, $$06$looptemp = 0;
 $0 = ($__x | 0) == ($__root | 0);
 HEAP8[$__x + 12 >> 0] = $0 & 1;
 if ($0) return;
 $$06 = $__x;
 while (1) {
  $4 = HEAP32[$$06 + 8 >> 2] | 0;
  $5 = $4 + 12 | 0;
  if (HEAP8[$5 >> 0] | 0) {
   label = 38;
   break;
  }
  $8 = $4 + 8 | 0;
  $$06$looptemp = $$06;
  $$06 = HEAP32[$8 >> 2] | 0;
  $10 = HEAP32[$$06 >> 2] | 0;
  if (($10 | 0) == ($4 | 0)) {
   $13 = HEAP32[$$06 + 4 >> 2] | 0;
   if (!$13) {
    $$06$lcssa27 = $$06$looptemp;
    $$lcssa29 = $4;
    $$lcssa30 = $8;
    $$lcssa32 = $8;
    $$lcssa34 = $$06;
    label = 8;
    break;
   }
   $15 = $13 + 12 | 0;
   if (HEAP8[$15 >> 0] | 0) {
    $$06$lcssa27 = $$06$looptemp;
    $$lcssa29 = $4;
    $$lcssa30 = $8;
    $$lcssa32 = $8;
    $$lcssa34 = $$06;
    label = 8;
    break;
   }
   HEAP8[$5 >> 0] = 1;
   HEAP8[$$06 + 12 >> 0] = ($$06 | 0) == ($__root | 0) & 1;
   HEAP8[$15 >> 0] = 1;
  } else {
   if (!$10) {
    $$06$lcssa26 = $$06$looptemp;
    $$lcssa = $8;
    $$lcssa28 = $4;
    $$lcssa31 = $8;
    $$lcssa33 = $$06;
    label = 25;
    break;
   }
   $51 = $10 + 12 | 0;
   if (HEAP8[$51 >> 0] | 0) {
    $$06$lcssa26 = $$06$looptemp;
    $$lcssa = $8;
    $$lcssa28 = $4;
    $$lcssa31 = $8;
    $$lcssa33 = $$06;
    label = 25;
    break;
   }
   HEAP8[$5 >> 0] = 1;
   HEAP8[$$06 + 12 >> 0] = ($$06 | 0) == ($__root | 0) & 1;
   HEAP8[$51 >> 0] = 1;
  }
  if (($$06 | 0) == ($__root | 0)) {
   label = 38;
   break;
  }
 }
 if ((label | 0) == 8) {
  if ((HEAP32[$$lcssa29 >> 2] | 0) == ($$06$lcssa27 | 0)) {
   $35 = $$lcssa29;
   $37 = $$lcssa34;
  } else {
   $23 = $$lcssa29 + 4 | 0;
   $24 = HEAP32[$23 >> 2] | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   HEAP32[$23 >> 2] = $25;
   if (!$25) $29 = $$lcssa34; else {
    HEAP32[$25 + 8 >> 2] = $$lcssa29;
    $29 = HEAP32[$$lcssa30 >> 2] | 0;
   }
   $28 = $24 + 8 | 0;
   HEAP32[$28 >> 2] = $29;
   $30 = HEAP32[$$lcssa32 >> 2] | 0;
   if ((HEAP32[$30 >> 2] | 0) == ($$lcssa29 | 0)) HEAP32[$30 >> 2] = $24; else HEAP32[$30 + 4 >> 2] = $24;
   HEAP32[$24 >> 2] = $$lcssa29;
   HEAP32[$$lcssa30 >> 2] = $24;
   $35 = $24;
   $37 = HEAP32[$28 >> 2] | 0;
  }
  HEAP8[$35 + 12 >> 0] = 1;
  HEAP8[$37 + 12 >> 0] = 0;
  $38 = HEAP32[$37 >> 2] | 0;
  $39 = $38 + 4 | 0;
  $40 = HEAP32[$39 >> 2] | 0;
  HEAP32[$37 >> 2] = $40;
  if ($40) HEAP32[$40 + 8 >> 2] = $37;
  $43 = $37 + 8 | 0;
  HEAP32[$38 + 8 >> 2] = HEAP32[$43 >> 2];
  $46 = HEAP32[$43 >> 2] | 0;
  if ((HEAP32[$46 >> 2] | 0) == ($37 | 0)) HEAP32[$46 >> 2] = $38; else HEAP32[$46 + 4 >> 2] = $38;
  HEAP32[$39 >> 2] = $37;
  HEAP32[$43 >> 2] = $38;
  return;
 } else if ((label | 0) == 25) {
  if ((HEAP32[$$lcssa28 >> 2] | 0) == ($$06$lcssa26 | 0)) {
   $60 = HEAP32[$$lcssa28 >> 2] | 0;
   $61 = $60 + 4 | 0;
   $62 = HEAP32[$61 >> 2] | 0;
   HEAP32[$$lcssa28 >> 2] = $62;
   if (!$62) $66 = $$lcssa33; else {
    HEAP32[$62 + 8 >> 2] = $$lcssa28;
    $66 = HEAP32[$$lcssa >> 2] | 0;
   }
   $65 = $60 + 8 | 0;
   HEAP32[$65 >> 2] = $66;
   $67 = HEAP32[$$lcssa31 >> 2] | 0;
   if ((HEAP32[$67 >> 2] | 0) == ($$lcssa28 | 0)) HEAP32[$67 >> 2] = $60; else HEAP32[$67 + 4 >> 2] = $60;
   HEAP32[$61 >> 2] = $$lcssa28;
   HEAP32[$$lcssa >> 2] = $60;
   $72 = $60;
   $74 = HEAP32[$65 >> 2] | 0;
  } else {
   $72 = $$lcssa28;
   $74 = $$lcssa33;
  }
  HEAP8[$72 + 12 >> 0] = 1;
  HEAP8[$74 + 12 >> 0] = 0;
  $75 = $74 + 4 | 0;
  $76 = HEAP32[$75 >> 2] | 0;
  $77 = HEAP32[$76 >> 2] | 0;
  HEAP32[$75 >> 2] = $77;
  if ($77) HEAP32[$77 + 8 >> 2] = $74;
  $80 = $74 + 8 | 0;
  HEAP32[$76 + 8 >> 2] = HEAP32[$80 >> 2];
  $83 = HEAP32[$80 >> 2] | 0;
  if ((HEAP32[$83 >> 2] | 0) == ($74 | 0)) HEAP32[$83 >> 2] = $76; else HEAP32[$83 + 4 >> 2] = $76;
  HEAP32[$76 >> 2] = $74;
  HEAP32[$80 >> 2] = $76;
  return;
 } else if ((label | 0) == 38) return;
}

function __ZN5LocalC2ERK13LocationRangeRKNSt3__13mapIPK10IdentifierP3ASTNS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEES9_($this, $lr, $binds, $body) {
 $this = $this | 0;
 $lr = $lr | 0;
 $binds = $binds | 0;
 $body = $body | 0;
 var $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$lcssa = 0, $$01$i$i$i$i$i = 0, $$byval_copy = 0, $$cast$i$i$i$i$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $26 = 0, $27 = 0, $3 = 0, $31 = 0, $32 = 0, $34 = 0, $38 = 0, $41 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $52 = 0, $56 = 0, $57 = 0, $6 = 0, $60 = 0, $63 = 0, $8 = 0, $9 = 0, $__parent$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent$i$i$i$i$i = sp + 4 | 0;
 $0 = sp;
 HEAP32[$this >> 2] = 35936;
 $1 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($1, $lr);
 $2 = $this + 16 | 0;
 $3 = $lr + 12 | 0;
 HEAP32[$2 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
 HEAP32[$2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 HEAP32[$2 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
 HEAP32[$2 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
 HEAP32[$this + 32 >> 2] = 10;
 $5 = $this + 36 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $this + 40 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this >> 2] = 36008;
 $8 = $this + 48 | 0;
 $9 = $this + 52 | 0;
 HEAP32[$9 >> 2] = 0;
 $10 = $this + 56 | 0;
 HEAP32[$10 >> 2] = 0;
 $11 = $this + 52 | 0;
 HEAP32[$8 >> 2] = $11;
 $12 = HEAP32[$binds >> 2] | 0;
 $13 = $binds + 4 | 0;
 if (($12 | 0) == ($13 | 0)) {
  $56 = $this + 60 | 0;
  HEAP32[$56 >> 2] = $body;
  STACKTOP = sp;
  return;
 }
 $19 = $12;
 $46 = $12;
 while (1) {
  __THREW__ = 0;
  $15 = invoke_ii(67, 24) | 0;
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) break;
  $20 = $15 + 16 | 0;
  $21 = $19 + 16 | 0;
  $26 = HEAP32[$21 + 4 >> 2] | 0;
  $27 = $20;
  HEAP32[$27 >> 2] = HEAP32[$21 >> 2];
  HEAP32[$27 + 4 >> 2] = $26;
  HEAP32[$0 >> 2] = $11;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  $31 = __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($8, $$byval_copy, $__parent$i$i$i$i$i, $20) | 0;
  $32 = HEAP32[$31 >> 2] | 0;
  if (!$32) {
   $34 = HEAP32[$__parent$i$i$i$i$i >> 2] | 0;
   HEAP32[$15 >> 2] = 0;
   HEAP32[$15 + 4 >> 2] = 0;
   HEAP32[$15 + 8 >> 2] = $34;
   HEAP32[$31 >> 2] = $15;
   $38 = HEAP32[HEAP32[$8 >> 2] >> 2] | 0;
   if (!$38) $41 = $15; else {
    HEAP32[$8 >> 2] = $38;
    $41 = HEAP32[$31 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$9 >> 2] | 0, $41);
   HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
  } else if (($32 | 0) != ($15 | 0)) __ZdlPv($15);
  $47 = HEAP32[$46 + 4 >> 2] | 0;
  if (!$47) {
   $$0$i$i$i$i$i = $46;
   while (1) {
    $52 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$52 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
     $$cast$i$i$i$i$i$lcssa = $52;
     break;
    } else $$0$i$i$i$i$i = $52;
   }
   $$01$i$i$i$i$i = $$cast$i$i$i$i$i$lcssa;
  } else {
   $$0$i$i$i$i$i$i = $47;
   while (1) {
    $49 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
    if (!$49) {
     $$0$i$i$i$i$i$i$lcssa = $$0$i$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i$i = $49;
   }
   $$01$i$i$i$i$i = $$0$i$i$i$i$i$i$lcssa;
  }
  if (($$01$i$i$i$i$i | 0) == ($13 | 0)) {
   label = 18;
   break;
  } else {
   $19 = $$01$i$i$i$i$i;
   $46 = $$01$i$i$i$i$i;
  }
 }
 if ((label | 0) == 18) {
  $56 = $this + 60 | 0;
  HEAP32[$56 >> 2] = $body;
  STACKTOP = sp;
  return;
 }
 $57 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($8, HEAP32[$11 >> 2] | 0);
 HEAP32[$this >> 2] = 35936;
 $60 = HEAP32[$5 >> 2] | 0;
 if (!$60) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  ___resumeException($57 | 0);
 }
 $63 = HEAP32[$6 >> 2] | 0;
 if (($63 | 0) != ($60 | 0)) HEAP32[$6 >> 2] = $63 + (~(($63 + -4 - $60 | 0) >>> 2) << 2);
 __ZdlPv($60);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($57 | 0);
}

function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$0$ph = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $32 = 0, $38 = 0, $46 = 0, $48 = 0, $55 = 0, $65 = 0, $73 = 0, $75 = 0, $77 = 0, $83 = 0, $86 = 0, $99 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 if (!($mode & 4)) $$pre$phiZ2D = $frm_end; else {
  $2 = HEAP32[$frm_nxt >> 2] | 0;
  $3 = $frm_end;
  if (($3 - $2 | 0) > 2) if ((HEAP8[$2 >> 0] | 0) == -17) if ((HEAP8[$2 + 1 >> 0] | 0) == -69) if ((HEAP8[$2 + 2 >> 0] | 0) == -65) {
   HEAP32[$frm_nxt >> 2] = $2 + 3;
   $$pre$phiZ2D = $3;
  } else $$pre$phiZ2D = $3; else $$pre$phiZ2D = $3; else $$pre$phiZ2D = $3; else $$pre$phiZ2D = $3;
 }
 L9 : while (1) {
  $16 = HEAP32[$frm_nxt >> 2] | 0;
  $17 = $16 >>> 0 < $frm_end >>> 0;
  if (!$17) {
   $$lcssa = $17;
   label = 40;
   break;
  }
  $18 = HEAP32[$to_nxt >> 2] | 0;
  if ($18 >>> 0 >= $to_end >>> 0) {
   $$lcssa = $17;
   label = 40;
   break;
  }
  $20 = HEAP8[$16 >> 0] | 0;
  $21 = $20 & 255;
  do if ($20 << 24 >> 24 > -1) {
   if ($21 >>> 0 > $Maxcode >>> 0) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   HEAP32[$18 >> 2] = $21;
   HEAP32[$frm_nxt >> 2] = $16 + 1;
  } else {
   if (($20 & 255) < 194) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   if (($20 & 255) < 224) {
    if (($$pre$phiZ2D - $16 | 0) < 2) {
     $$0$ph = 1;
     label = 41;
     break L9;
    }
    $32 = HEAPU8[$16 + 1 >> 0] | 0;
    if (($32 & 192 | 0) != 128) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $38 = $32 & 63 | $21 << 6 & 1984;
    if ($38 >>> 0 > $Maxcode >>> 0) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    HEAP32[$18 >> 2] = $38;
    HEAP32[$frm_nxt >> 2] = $16 + 2;
    break;
   }
   if (($20 & 255) < 240) {
    if (($$pre$phiZ2D - $16 | 0) < 3) {
     $$0$ph = 1;
     label = 41;
     break L9;
    }
    $46 = HEAP8[$16 + 1 >> 0] | 0;
    $48 = HEAP8[$16 + 2 >> 0] | 0;
    if (($21 | 0) == 224) {
     if (($46 & -32) << 24 >> 24 != -96) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    } else if (($21 | 0) == 237) {
     if (($46 & -32) << 24 >> 24 != -128) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    } else if (($46 & -64) << 24 >> 24 != -128) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $55 = $48 & 255;
    if (($55 & 192 | 0) != 128) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $65 = ($46 & 255) << 6 & 4032 | $21 << 12 & 61440 | $55 & 63;
    if ($65 >>> 0 > $Maxcode >>> 0) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    HEAP32[$18 >> 2] = $65;
    HEAP32[$frm_nxt >> 2] = $16 + 3;
    break;
   }
   if (($20 & 255) >= 245) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   if (($$pre$phiZ2D - $16 | 0) < 4) {
    $$0$ph = 1;
    label = 41;
    break L9;
   }
   $73 = HEAP8[$16 + 1 >> 0] | 0;
   $75 = HEAP8[$16 + 2 >> 0] | 0;
   $77 = HEAP8[$16 + 3 >> 0] | 0;
   if (($21 | 0) == 244) {
    if (($73 & -16) << 24 >> 24 != -128) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
   } else if (($21 | 0) == 240) {
    if (($73 + 112 & 255) >= 48) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
   } else if (($73 & -64) << 24 >> 24 != -128) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   $83 = $75 & 255;
   if (($83 & 192 | 0) != 128) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   $86 = $77 & 255;
   if (($86 & 192 | 0) != 128) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   $99 = ($73 & 255) << 12 & 258048 | $21 << 18 & 1835008 | $83 << 6 & 4032 | $86 & 63;
   if ($99 >>> 0 > $Maxcode >>> 0) {
    $$0$ph = 2;
    label = 41;
    break L9;
   }
   HEAP32[$18 >> 2] = $99;
   HEAP32[$frm_nxt >> 2] = $16 + 4;
  } while (0);
  HEAP32[$to_nxt >> 2] = (HEAP32[$to_nxt >> 2] | 0) + 4;
 }
 if ((label | 0) == 40) $$0 = $$lcssa & 1; else if ((label | 0) == 41) $$0 = $$0$ph;
 return $$0 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$byval_copy = 0, $$byval_copy2 = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $28 = 0, $3 = 0, $30 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $55 = 0, $57 = 0, $58 = 0, $__lv = 0, $__names = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy2 = sp + 60 | 0;
 $$byval_copy = sp + 56 | 0;
 $__lv = sp + 52 | 0;
 $0 = sp + 48 | 0;
 $1 = sp + 44 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 32 | 0;
 $__names = sp + 8 | 0;
 $5 = sp;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  HEAP32[$__lv >> 2] = -1;
  $12 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$1 >> 2] = HEAP32[$__b >> 2];
  HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  HEAP32[$$byval_copy2 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
  FUNCTION_TABLE_viiiiiii[$12 & 63]($0, $this, $$byval_copy, $$byval_copy2, $__iob, $__err, $__lv);
  $15 = HEAP32[$0 >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  $16 = HEAP32[$__lv >> 2] | 0;
  if (!$16) HEAP8[$__v >> 0] = 0; else if (($16 | 0) == 1) HEAP8[$__v >> 0] = 1; else {
   HEAP8[$__v >> 0] = 1;
   HEAP32[$__err >> 2] = 4;
  }
  HEAP32[$agg$result >> 2] = $15;
 } else {
  __ZNKSt3__18ios_base6getlocEv($3, $__iob);
  __THREW__ = 0;
  $17 = invoke_iii(22, $3 | 0, 50200) | 0;
  $18 = __THREW__;
  __THREW__ = 0;
  do if ($18 & 1) {
   $45 = ___cxa_find_matching_catch() | 0;
   $46 = tempRet0;
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$3 >> 2] | 0) | 0;
   $$0 = $45;
   $$01 = $46;
  } else {
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$3 >> 2] | 0) | 0;
   __ZNKSt3__18ios_base6getlocEv($4, $__iob);
   __THREW__ = 0;
   $21 = invoke_iii(22, $4 | 0, 50360) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    $48 = ___cxa_find_matching_catch() | 0;
    $49 = tempRet0;
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$4 >> 2] | 0) | 0;
    $$0 = $48;
    $$01 = $49;
    break;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$4 >> 2] | 0) | 0;
   __THREW__ = 0;
   invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $__names | 0, $21 | 0);
   $28 = __THREW__;
   __THREW__ = 0;
   if ($28 & 1) $$02 = $__names; else {
    $30 = $__names + 12 | 0;
    __THREW__ = 0;
    invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] | 0, $30 | 0, $21 | 0);
    $34 = __THREW__;
    __THREW__ = 0;
    if ($34 & 1) $$02 = $30; else {
     HEAP32[$5 >> 2] = HEAP32[$__e >> 2];
     __THREW__ = 0;
     HEAP32[$$byval_copy2 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     $38 = invoke_iiiiiiii(2, $__b | 0, $$byval_copy2 | 0, $__names | 0, $__names + 24 | 0, $17 | 0, $__err | 0, 1) | 0;
     $39 = __THREW__;
     __THREW__ = 0;
     if ($39 & 1) {
      $57 = ___cxa_find_matching_catch() | 0;
      $58 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names + 12 | 0);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
      $$0 = $57;
      $$01 = $58;
      break;
     } else {
      HEAP8[$__v >> 0] = ($38 | 0) == ($__names | 0) & 1;
      HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names + 12 | 0);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
      break L1;
     }
    }
   }
   $51 = ___cxa_find_matching_catch() | 0;
   $52 = tempRet0;
   if (($__names | 0) == ($$02 | 0)) {
    $$0 = $51;
    $$01 = $52;
   } else {
    $55 = $$02;
    do {
     $55 = $55 + -12 | 0;
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($55);
    } while (($55 | 0) != ($__names | 0));
    $$0 = $51;
    $$01 = $52;
   }
  } while (0);
  ___resumeException($$0 | 0);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$byval_copy = 0, $$byval_copy2 = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $28 = 0, $3 = 0, $30 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $55 = 0, $57 = 0, $58 = 0, $__lv = 0, $__names = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy2 = sp + 60 | 0;
 $$byval_copy = sp + 56 | 0;
 $__lv = sp + 52 | 0;
 $0 = sp + 48 | 0;
 $1 = sp + 44 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 32 | 0;
 $__names = sp + 8 | 0;
 $5 = sp;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  HEAP32[$__lv >> 2] = -1;
  $12 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$1 >> 2] = HEAP32[$__b >> 2];
  HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  HEAP32[$$byval_copy2 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
  FUNCTION_TABLE_viiiiiii[$12 & 63]($0, $this, $$byval_copy, $$byval_copy2, $__iob, $__err, $__lv);
  $15 = HEAP32[$0 >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  $16 = HEAP32[$__lv >> 2] | 0;
  if (!$16) HEAP8[$__v >> 0] = 0; else if (($16 | 0) == 1) HEAP8[$__v >> 0] = 1; else {
   HEAP8[$__v >> 0] = 1;
   HEAP32[$__err >> 2] = 4;
  }
  HEAP32[$agg$result >> 2] = $15;
 } else {
  __ZNKSt3__18ios_base6getlocEv($3, $__iob);
  __THREW__ = 0;
  $17 = invoke_iii(22, $3 | 0, 50208) | 0;
  $18 = __THREW__;
  __THREW__ = 0;
  do if ($18 & 1) {
   $45 = ___cxa_find_matching_catch() | 0;
   $46 = tempRet0;
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$3 >> 2] | 0) | 0;
   $$0 = $45;
   $$01 = $46;
  } else {
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$3 >> 2] | 0) | 0;
   __ZNKSt3__18ios_base6getlocEv($4, $__iob);
   __THREW__ = 0;
   $21 = invoke_iii(22, $4 | 0, 50352) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    $48 = ___cxa_find_matching_catch() | 0;
    $49 = tempRet0;
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$4 >> 2] | 0) | 0;
    $$0 = $48;
    $$01 = $49;
    break;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$4 >> 2] | 0) | 0;
   __THREW__ = 0;
   invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $__names | 0, $21 | 0);
   $28 = __THREW__;
   __THREW__ = 0;
   if ($28 & 1) $$02 = $__names; else {
    $30 = $__names + 12 | 0;
    __THREW__ = 0;
    invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] | 0, $30 | 0, $21 | 0);
    $34 = __THREW__;
    __THREW__ = 0;
    if ($34 & 1) $$02 = $30; else {
     HEAP32[$5 >> 2] = HEAP32[$__e >> 2];
     __THREW__ = 0;
     HEAP32[$$byval_copy2 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     $38 = invoke_iiiiiiii(1, $__b | 0, $$byval_copy2 | 0, $__names | 0, $__names + 24 | 0, $17 | 0, $__err | 0, 1) | 0;
     $39 = __THREW__;
     __THREW__ = 0;
     if ($39 & 1) {
      $57 = ___cxa_find_matching_catch() | 0;
      $58 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names + 12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
      $$0 = $57;
      $$01 = $58;
      break;
     } else {
      HEAP8[$__v >> 0] = ($38 | 0) == ($__names | 0) & 1;
      HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names + 12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
      break L1;
     }
    }
   }
   $51 = ___cxa_find_matching_catch() | 0;
   $52 = tempRet0;
   if (($__names | 0) == ($$02 | 0)) {
    $$0 = $51;
    $$01 = $52;
   } else {
    $55 = $$02;
    do {
     $55 = $55 + -12 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    } while (($55 | 0) != ($__names | 0));
    $$0 = $51;
    $$01 = $52;
   }
  } while (0);
  ___resumeException($$0 | 0);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i7 = 0, $$0$i8 = 0, $$01$i$i = 0, $$pre$i = 0, $$pre6 = 0, $0 = 0, $12 = 0, $13 = 0, $15 = 0, $17 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $43 = 0, $49 = 0, $51 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $60 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $9 = 0, label = 0, $$01$i$i$looptemp = 0, $51$looptemp = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = (((HEAP32[$0 >> 2] | 0) - $2 | 0) / 40 | 0) + 1 | 0;
 if ($7 >>> 0 > 107374182) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $15 = ((HEAP32[$9 >> 2] | 0) - $13 | 0) / 40 | 0;
 if ($15 >>> 0 < 53687091) {
  $21 = $15 << 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $24 = HEAP32[$0 >> 2] | 0;
  $27 = ($24 - $13 | 0) / 40 | 0;
  if (!$23) {
   $$0$i8 = 0;
   $32 = 0;
   $33 = $27;
   $67 = $24;
  } else {
   $$0$i7 = $23;
   $65 = $27;
   $66 = $24;
   label = 6;
  }
 } else {
  $17 = HEAP32[$0 >> 2] | 0;
  $$0$i7 = 107374182;
  $65 = ($17 - $13 | 0) / 40 | 0;
  $66 = $17;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i8 = $$0$i7;
  $32 = __Znwj($$0$i7 * 40 | 0) | 0;
  $33 = $65;
  $67 = $66;
 }
 $31 = $32 + ($33 * 40 | 0) | 0;
 $34 = $32 + ($$0$i8 * 40 | 0) | 0;
 if (!$31) {
  $41 = $67;
  $43 = $12;
 } else {
  HEAP32[$31 + 0 >> 2] = HEAP32[$__x + 0 >> 2];
  HEAP32[$31 + 4 >> 2] = HEAP32[$__x + 4 >> 2];
  HEAP32[$31 + 8 >> 2] = HEAP32[$__x + 8 >> 2];
  HEAP32[$__x + 0 >> 2] = 0;
  HEAP32[$__x + 4 >> 2] = 0;
  HEAP32[$__x + 8 >> 2] = 0;
  $36 = $32 + ($33 * 40 | 0) + 12 | 0;
  $37 = $__x + 12 | 0;
  HEAP32[$36 + 0 >> 2] = HEAP32[$37 + 0 >> 2];
  HEAP32[$36 + 4 >> 2] = HEAP32[$37 + 4 >> 2];
  HEAP32[$36 + 8 >> 2] = HEAP32[$37 + 8 >> 2];
  HEAP32[$36 + 12 >> 2] = HEAP32[$37 + 12 >> 2];
  $38 = $32 + ($33 * 40 | 0) + 28 | 0;
  $39 = $__x + 28 | 0;
  HEAP32[$38 + 0 >> 2] = HEAP32[$39 + 0 >> 2];
  HEAP32[$38 + 4 >> 2] = HEAP32[$39 + 4 >> 2];
  HEAP32[$38 + 8 >> 2] = HEAP32[$39 + 8 >> 2];
  HEAP32[$39 + 0 >> 2] = 0;
  HEAP32[$39 + 4 >> 2] = 0;
  HEAP32[$39 + 8 >> 2] = 0;
  $41 = HEAP32[$0 >> 2] | 0;
  $43 = HEAP32[$this >> 2] | 0;
 }
 $40 = $32 + (($33 + 1 | 0) * 40 | 0) | 0;
 if (($41 | 0) == ($43 | 0)) {
  HEAP32[$this >> 2] = $31;
  HEAP32[$0 >> 2] = $40;
  HEAP32[$9 >> 2] = $34;
  $63 = $41;
 } else {
  $49 = $33 + -1 - ((($41 + -40 - $43 | 0) >>> 0) / 40 | 0) | 0;
  $$01$i$i = $41;
  $51 = $31;
  do {
   $51$looptemp = $51;
   $51 = $51 + -40 | 0;
   $$01$i$i$looptemp = $$01$i$i;
   $$01$i$i = $$01$i$i + -40 | 0;
   HEAP32[$51 + 0 >> 2] = HEAP32[$$01$i$i + 0 >> 2];
   HEAP32[$51 + 4 >> 2] = HEAP32[$$01$i$i + 4 >> 2];
   HEAP32[$51 + 8 >> 2] = HEAP32[$$01$i$i + 8 >> 2];
   HEAP32[$$01$i$i + 0 >> 2] = 0;
   HEAP32[$$01$i$i + 4 >> 2] = 0;
   HEAP32[$$01$i$i + 8 >> 2] = 0;
   $53 = $51$looptemp + -28 | 0;
   $54 = $$01$i$i$looptemp + -28 | 0;
   HEAP32[$53 + 0 >> 2] = HEAP32[$54 + 0 >> 2];
   HEAP32[$53 + 4 >> 2] = HEAP32[$54 + 4 >> 2];
   HEAP32[$53 + 8 >> 2] = HEAP32[$54 + 8 >> 2];
   HEAP32[$53 + 12 >> 2] = HEAP32[$54 + 12 >> 2];
   $55 = $51$looptemp + -12 | 0;
   $56 = $$01$i$i$looptemp + -12 | 0;
   HEAP32[$55 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
   HEAP32[$55 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
   HEAP32[$55 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
   HEAP32[$56 + 0 >> 2] = 0;
   HEAP32[$56 + 4 >> 2] = 0;
   HEAP32[$56 + 8 >> 2] = 0;
  } while (($$01$i$i | 0) != ($43 | 0));
  $$pre$i = HEAP32[$this >> 2] | 0;
  $$pre6 = HEAP32[$0 >> 2] | 0;
  HEAP32[$this >> 2] = $32 + ($49 * 40 | 0);
  HEAP32[$0 >> 2] = $40;
  HEAP32[$9 >> 2] = $34;
  if (($$pre6 | 0) == ($$pre$i | 0)) $63 = $$pre$i; else {
   $60 = $$pre6;
   do {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60 + -12 | 0);
    $60 = $60 + -40 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
   } while (($60 | 0) != ($$pre$i | 0));
   $63 = $$pre$i;
  }
 }
 if (!$63) return;
 __ZdlPv($63);
 return;
}

function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$0$ph = 0, $$pre1 = 0, $10 = 0, $102 = 0, $107 = 0, $11 = 0, $110 = 0, $122 = 0, $127 = 0, $13 = 0, $130 = 0, $14 = 0, $17 = 0, $24 = 0, $35 = 0, $38 = 0, $50 = 0, $55 = 0, $6 = 0, $61 = 0, $63 = 0, $70 = 0, $8 = 0, $80 = 0, $84 = 0, $93 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 $$pre1 = $to_end;
 if (!($mode & 2)) label = 4; else if (($$pre1 - $to | 0) < 3) $$0 = 1; else {
  HEAP32[$to_nxt >> 2] = $to + 1;
  HEAP8[$to >> 0] = -17;
  $6 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $6 + 1;
  HEAP8[$6 >> 0] = -69;
  $8 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $8 + 1;
  HEAP8[$8 >> 0] = -65;
  label = 4;
 }
 if ((label | 0) == 4) {
  $10 = $frm_end;
  $11 = HEAP32[$frm_nxt >> 2] | 0;
  L6 : while (1) {
   if ($11 >>> 0 >= $frm_end >>> 0) {
    $$0$ph = 0;
    break;
   }
   $13 = HEAP16[$11 >> 1] | 0;
   $14 = $13 & 65535;
   if ($14 >>> 0 > $Maxcode >>> 0) {
    $$0$ph = 2;
    break;
   }
   do if (($13 & 65535) < 128) {
    $17 = HEAP32[$to_nxt >> 2] | 0;
    if (($$pre1 - $17 | 0) < 1) {
     $$0$ph = 1;
     break L6;
    }
    HEAP32[$to_nxt >> 2] = $17 + 1;
    HEAP8[$17 >> 0] = $13;
   } else {
    if (($13 & 65535) < 2048) {
     $24 = HEAP32[$to_nxt >> 2] | 0;
     if (($$pre1 - $24 | 0) < 2) {
      $$0$ph = 1;
      break L6;
     }
     HEAP32[$to_nxt >> 2] = $24 + 1;
     HEAP8[$24 >> 0] = $14 >>> 6 | 192;
     $35 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $35 + 1;
     HEAP8[$35 >> 0] = $14 & 63 | 128;
     break;
    }
    if (($13 & 65535) < 55296) {
     $38 = HEAP32[$to_nxt >> 2] | 0;
     if (($$pre1 - $38 | 0) < 3) {
      $$0$ph = 1;
      break L6;
     }
     HEAP32[$to_nxt >> 2] = $38 + 1;
     HEAP8[$38 >> 0] = $14 >>> 12 | 224;
     $50 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $50 + 1;
     HEAP8[$50 >> 0] = $14 >>> 6 & 63 | 128;
     $55 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $55 + 1;
     HEAP8[$55 >> 0] = $14 & 63 | 128;
     break;
    }
    if (($13 & 65535) >= 56320) {
     if (($13 & 65535) < 57344) {
      $$0$ph = 2;
      break L6;
     }
     $110 = HEAP32[$to_nxt >> 2] | 0;
     if (($$pre1 - $110 | 0) < 3) {
      $$0$ph = 1;
      break L6;
     }
     HEAP32[$to_nxt >> 2] = $110 + 1;
     HEAP8[$110 >> 0] = $14 >>> 12 | 224;
     $122 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $122 + 1;
     HEAP8[$122 >> 0] = $14 >>> 6 & 63 | 128;
     $127 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $127 + 1;
     HEAP8[$127 >> 0] = $14 & 63 | 128;
     break;
    }
    if (($10 - $11 | 0) < 4) {
     $$0$ph = 1;
     break L6;
    }
    $61 = $11 + 2 | 0;
    $63 = HEAPU16[$61 >> 1] | 0;
    if (($63 & 64512 | 0) != 56320) {
     $$0$ph = 2;
     break L6;
    }
    if (($$pre1 - (HEAP32[$to_nxt >> 2] | 0) | 0) < 4) {
     $$0$ph = 1;
     break L6;
    }
    $70 = $14 & 960;
    if ((($70 << 10) + 65536 | $14 << 10 & 64512 | $63 & 1023) >>> 0 > $Maxcode >>> 0) {
     $$0$ph = 2;
     break L6;
    }
    HEAP32[$frm_nxt >> 2] = $61;
    $80 = ($70 >>> 6) + 1 | 0;
    $84 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $84 + 1;
    HEAP8[$84 >> 0] = $80 >>> 2 | 240;
    $93 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $93 + 1;
    HEAP8[$93 >> 0] = $14 >>> 2 & 15 | $80 << 4 & 48 | 128;
    $102 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $102 + 1;
    HEAP8[$102 >> 0] = $14 << 4 & 48 | $63 >>> 6 & 15 | 128;
    $107 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $107 + 1;
    HEAP8[$107 >> 0] = $63 & 63 | 128;
   } while (0);
   $130 = (HEAP32[$frm_nxt >> 2] | 0) + 2 | 0;
   HEAP32[$frm_nxt >> 2] = $130;
   $11 = $130;
  }
  $$0 = $$0$ph;
 }
 return $$0 | 0;
}

function __ZN9AllocatorD2Ev($this) {
 $this = $this | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$01$i$i$i = 0, $$cast$i$i$i$lcssa = 0, $$pre = 0, $$pre14 = 0, $0 = 0, $1 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $39 = 0, $41 = 0, $44 = 0, $5 = 0, $50 = 0, $53 = 0, $56 = 0, $6 = 0, $62 = 0, $x4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $x4 = sp;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($1 | 0) != ($3 | 0)) {
  $6 = $1;
  do {
   $5 = HEAP32[$6 >> 2] | 0;
   if ($5) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$5 >> 2] | 0) + 4 >> 2] & 255]($5);
   $6 = $6 + 4 | 0;
  } while (($6 | 0) != ($3 | 0));
  $$pre = HEAP32[$0 >> 2] | 0;
  $$pre14 = HEAP32[$2 >> 2] | 0;
  if (($$pre14 | 0) != ($$pre | 0)) HEAP32[$2 >> 2] = $$pre14 + (~(($$pre14 + -4 - $$pre | 0) >>> 2) << 2);
 }
 $18 = HEAP32[$this >> 2] | 0;
 $19 = $this + 4 | 0;
 do if (($18 | 0) != ($19 | 0)) {
  $21 = $x4 + 12 | 0;
  $23 = $18;
  while (1) {
   __THREW__ = 0;
   invoke_vii(40, $x4 | 0, $23 + 16 | 0);
   $24 = __THREW__;
   __THREW__ = 0;
   if ($24 & 1) break;
   $27 = HEAP32[$23 + 28 >> 2] | 0;
   HEAP32[$21 >> 2] = $27;
   if ($27) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
    __ZdlPv($27);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($x4);
   $30 = HEAP32[$23 + 4 >> 2] | 0;
   if (!$30) {
    $$0$i$i$i = $23;
    while (1) {
     $35 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$35 >> 2] | 0) == ($$0$i$i$i | 0)) {
      $$cast$i$i$i$lcssa = $35;
      break;
     } else $$0$i$i$i = $35;
    }
    $$01$i$i$i = $$cast$i$i$i$lcssa;
   } else {
    $$0$i$i$i$i = $30;
    while (1) {
     $32 = HEAP32[$$0$i$i$i$i >> 2] | 0;
     if (!$32) {
      $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
      break;
     } else $$0$i$i$i$i = $32;
    }
    $$01$i$i$i = $$0$i$i$i$i$lcssa;
   }
   if (($$01$i$i$i | 0) == ($19 | 0)) {
    label = 26;
    break;
   } else $23 = $$01$i$i$i;
  }
  if ((label | 0) == 26) break;
  $39 = ___cxa_find_matching_catch(0) | 0;
  $41 = HEAP32[$0 >> 2] | 0;
  if (!$41) {
   $50 = HEAP32[$19 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $50);
   ___clang_call_terminate($39);
  }
  $44 = HEAP32[$2 >> 2] | 0;
  if (($44 | 0) != ($41 | 0)) HEAP32[$2 >> 2] = $44 + (~(($44 + -4 - $41 | 0) >>> 2) << 2);
  __ZdlPv($41);
  $50 = HEAP32[$19 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $50);
  ___clang_call_terminate($39);
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$19 >> 2] | 0);
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this >> 2] = $19;
 HEAP32[$19 >> 2] = 0;
 $53 = HEAP32[$0 >> 2] | 0;
 if (!$53) {
  $62 = 0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $62);
  STACKTOP = sp;
  return;
 }
 $56 = HEAP32[$2 >> 2] | 0;
 if (($56 | 0) != ($53 | 0)) HEAP32[$2 >> 2] = $56 + (~(($56 + -4 - $53 | 0) >>> 2) << 2);
 __ZdlPv($53);
 $62 = HEAP32[$19 >> 2] | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $62);
 STACKTOP = sp;
 return;
}

function __ZL10bop_string8BinaryOp($agg$result, $bop) {
 $agg$result = $agg$result | 0;
 $bop = $bop | 0;
 var $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 do switch ($bop | 0) {
 case 12:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41744, 1);
   STACKTOP = sp;
   return;
  }
 case 15:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41768, 2);
   STACKTOP = sp;
   return;
  }
 case 7:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41704, 2);
   STACKTOP = sp;
   return;
  }
 case 14:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41760, 1);
   STACKTOP = sp;
   return;
  }
 case 5:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41696, 2);
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41400, 1);
   STACKTOP = sp;
   return;
  }
 case 9:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41720, 2);
   STACKTOP = sp;
   return;
  }
 case 11:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41736, 2);
   STACKTOP = sp;
   return;
  }
 case 3:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 42248, 1);
   STACKTOP = sp;
   return;
  }
 case 16:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41776, 2);
   STACKTOP = sp;
   return;
  }
 case 6:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39e3, 1);
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41680, 1);
   STACKTOP = sp;
   return;
  }
 case 13:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41752, 1);
   STACKTOP = sp;
   return;
  }
 case 10:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41728, 2);
   STACKTOP = sp;
   return;
  }
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41672, 1);
   STACKTOP = sp;
   return;
  }
 case 4:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41688, 2);
   STACKTOP = sp;
   return;
  }
 case 8:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41712, 1);
   STACKTOP = sp;
   return;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(45984, 41784, 46) | 0, $bop) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $7 = invoke_iii(22, $0 | 0, 50208) | 0;
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   }
   __THREW__ = 0;
   $13 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 10) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $13) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 } while (0);
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi6Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 18;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 48896) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 50208) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 40 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi6Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 18;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 18) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi6Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi6Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 18;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 48896) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 50208) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi6Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 18;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 18) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi6Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi6Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 18;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 48896) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 50208) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi6Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 18;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 18) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi6Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi6Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 18;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 48896) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 50208) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi6Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 18;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 18) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi6Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi7Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 18;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 48896) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 50208) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi7Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 18;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 18) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi7Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd($this, $__n) {
 $this = $this | 0;
 $__n = +$__n;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi6Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 18;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 48896) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 50208) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 32 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiid($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, +$__n);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi6Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 18;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 18) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi6Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $103 = 0, $116 = 0, $121 = 0, $122 = 0, $127 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $31 = 0, $33 = 0, $36 = 0, $4 = 0, $46 = 0, $51 = 0, $52 = 0, $6 = 0, $69 = 0, $7 = 0, $72 = 0, $73 = 0, $76 = 0, $8 = 0, $88 = 0, $92 = 0, $93 = 0, $__c$0 = 0, $__extbe = 0, $__state = 0, $__update_st$0$off0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbe = sp + 8 | 0;
 $__state = sp;
 $0 = $this + 64 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 68 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) {
  $6 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($6);
  ___cxa_throw($6 | 0, 43832, 85);
 }
 $7 = $this + 92 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 do if (!($8 & 16)) {
  if ($8 & 8) {
   $46 = $this + 80 | 0;
   $51 = HEAP32[$46 + 4 >> 2] | 0;
   $52 = $__state;
   HEAP32[$52 >> 2] = HEAP32[$46 >> 2];
   HEAP32[$52 + 4 >> 2] = $51;
   do if (!(HEAP8[$this + 98 >> 0] | 0)) {
    $69 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$4 >> 2] | 0) + 24 >> 2] & 127]($4) | 0;
    $72 = $this + 36 | 0;
    $73 = HEAP32[$72 >> 2] | 0;
    $76 = (HEAP32[$this + 40 >> 2] | 0) - $73 | 0;
    if (($69 | 0) > 0) {
     $__c$0 = (Math_imul((HEAP32[$this + 16 >> 2] | 0) - (HEAP32[$this + 12 >> 2] | 0) | 0, $69) | 0) + $76 | 0;
     $__update_st$0$off0 = 0;
     break;
    }
    $88 = HEAP32[$this + 12 >> 2] | 0;
    if (($88 | 0) == (HEAP32[$this + 16 >> 2] | 0)) {
     $__c$0 = $76;
     $__update_st$0$off0 = 0;
    } else {
     $92 = HEAP32[$3 >> 2] | 0;
     $93 = $this + 32 | 0;
     $103 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$92 >> 2] | 0) + 32 >> 2] & 31]($92, $__state, HEAP32[$93 >> 2] | 0, $73, $88 - (HEAP32[$this + 8 >> 2] | 0) | 0) | 0;
     $__c$0 = $76 - $103 + (HEAP32[$72 >> 2] | 0) - (HEAP32[$93 >> 2] | 0) | 0;
     $__update_st$0$off0 = 1;
    }
   } else {
    $__c$0 = (HEAP32[$this + 16 >> 2] | 0) - (HEAP32[$this + 12 >> 2] | 0) | 0;
    $__update_st$0$off0 = 0;
   } while (0);
   if (_fseeko(HEAP32[$0 >> 2] | 0, 0 - $__c$0 | 0, 1) | 0) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
   if ($__update_st$0$off0) {
    $116 = $__state;
    $121 = HEAP32[$116 + 4 >> 2] | 0;
    $122 = $this + 72 | 0;
    HEAP32[$122 >> 2] = HEAP32[$116 >> 2];
    HEAP32[$122 + 4 >> 2] = $121;
   }
   $127 = HEAP32[$this + 32 >> 2] | 0;
   HEAP32[$this + 40 >> 2] = $127;
   HEAP32[$this + 36 >> 2] = $127;
   HEAP32[$this + 8 >> 2] = 0;
   HEAP32[$this + 12 >> 2] = 0;
   HEAP32[$this + 16 >> 2] = 0;
   HEAP32[$7 >> 2] = 0;
  }
 } else {
  if ((HEAP32[$this + 24 >> 2] | 0) != (HEAP32[$this + 20 >> 2] | 0)) if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, -1) | 0) == -1) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $21 = $this + 72 | 0;
  $22 = $this + 32 | 0;
  $23 = $this + 52 | 0;
  while (1) {
   $24 = HEAP32[$3 >> 2] | 0;
   $25 = HEAP32[$22 >> 2] | 0;
   $31 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$24 >> 2] | 0) + 20 >> 2] & 31]($24, $21, $25, $25 + (HEAP32[$23 >> 2] | 0) | 0, $__extbe) | 0;
   $33 = HEAP32[$22 >> 2] | 0;
   $36 = (HEAP32[$__extbe >> 2] | 0) - $33 | 0;
   if ((_fwrite($33 | 0, 1, $36 | 0, HEAP32[$0 >> 2] | 0) | 0) != ($36 | 0)) {
    label = 23;
    break;
   }
   if (($31 | 0) == 2) {
    label = 23;
    break;
   } else if (($31 | 0) != 1) {
    label = 10;
    break;
   }
  }
  if ((label | 0) == 10) {
   if (!(_fflush(HEAP32[$0 >> 2] | 0) | 0)) break; else $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 23) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function _jsonnet_make() {
 var $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $29 = 0, $31 = 0, $32 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $54 = 0, $61 = 0, $66 = 0, $67 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __THREW__ = 0;
 $1 = invoke_ii(67, 48) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if (!($2 & 1)) {
  HEAPF64[$1 >> 3] = 2.0;
  HEAP32[$1 + 8 >> 2] = 500;
  HEAP32[$1 + 12 >> 2] = 1e3;
  HEAP8[$1 + 16 >> 0] = 0;
  HEAP32[$1 + 20 >> 2] = 20;
  $61 = $1 + 28 | 0;
  HEAP32[$61 >> 2] = 0;
  HEAP32[$1 + 32 >> 2] = 0;
  HEAP32[$1 + 24 >> 2] = $61;
  HEAP32[$1 + 36 >> 2] = 15;
  HEAP32[$1 + 40 >> 2] = $1;
  HEAP8[$1 + 44 >> 0] = 0;
  STACKTOP = sp;
  return $1 | 0;
 }
 $4 = ___cxa_find_matching_catch(43360, 43496) | 0;
 $5 = tempRet0;
 if (($5 | 0) == (_llvm_eh_typeid_for(43360) | 0)) {
  ___cxa_begin_catch($4 | 0) | 0;
  _fwrite(42576, 49, 1, HEAP32[_stderr >> 2] | 0) | 0;
  __THREW__ = 0;
  invoke_v(3);
  $9 = __THREW__;
  __THREW__ = 0;
  if (!($9 & 1)) {}
  $52 = ___cxa_find_matching_catch() | 0;
  $53 = tempRet0;
  __THREW__ = 0;
  invoke_v(2);
  $54 = __THREW__;
  __THREW__ = 0;
  if ($54 & 1) {
   $66 = ___cxa_find_matching_catch(0) | 0;
   $67 = tempRet0;
   ___clang_call_terminate($66);
  } else {
   $$01 = $52;
   $$02 = $53;
   ___resumeException($$01 | 0);
  }
 }
 if (($5 | 0) != (_llvm_eh_typeid_for(43496) | 0)) {
  $$01 = $4;
  $$02 = $5;
  ___resumeException($$01 | 0);
 }
 $13 = ___cxa_begin_catch($4 | 0) | 0;
 __THREW__ = 0;
 $14 = invoke_iiii(25, 45984, 42032, 62) | 0;
 $15 = __THREW__;
 __THREW__ = 0;
 do if ($15 & 1) label = 16; else {
  $20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 8 >> 2] & 127]($13) | 0;
  $21 = _strlen($20 | 0) | 0;
  __THREW__ = 0;
  $22 = invoke_iiii(25, $14 | 0, $20 | 0, $21 | 0) | 0;
  $23 = __THREW__;
  __THREW__ = 0;
  if ($23 & 1) label = 16; else {
   __THREW__ = 0;
   invoke_vii(47, $0 | 0, $22 + (HEAP32[(HEAP32[$22 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $29 = __THREW__;
   __THREW__ = 0;
   if ($29 & 1) label = 16; else {
    __THREW__ = 0;
    $31 = invoke_iii(22, $0 | 0, 50208) | 0;
    $32 = __THREW__;
    __THREW__ = 0;
    if (!($32 & 1)) {
     __THREW__ = 0;
     $37 = invoke_iii(HEAP32[(HEAP32[$31 >> 2] | 0) + 28 >> 2] | 0, $31 | 0, 10) | 0;
     $38 = __THREW__;
     __THREW__ = 0;
     if (!($38 & 1)) {
      __ZNSt3__16localeD2Ev($0);
      __THREW__ = 0;
      invoke_iii(25, $22 | 0, $37 | 0) | 0;
      $42 = __THREW__;
      __THREW__ = 0;
      if ($42 & 1) {
       label = 16;
       break;
      }
      __THREW__ = 0;
      invoke_ii(68, $22 | 0) | 0;
      $44 = __THREW__;
      __THREW__ = 0;
      if ($44 & 1) {
       label = 16;
       break;
      }
      __THREW__ = 0;
      invoke_v(3);
      $46 = __THREW__;
      __THREW__ = 0;
      if ($46 & 1) {
       label = 16;
       break;
      }
     }
    }
    $40 = ___cxa_find_matching_catch() | 0;
    $41 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    $eh$lpad$body$index2Z2D = $41;
    $eh$lpad$body$indexZ2D = $40;
   }
  }
 } while (0);
 if ((label | 0) == 16) {
  $48 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $48;
 }
 __THREW__ = 0;
 invoke_v(2);
 $50 = __THREW__;
 __THREW__ = 0;
 if ($50 & 1) {
  $66 = ___cxa_find_matching_catch(0) | 0;
  $67 = tempRet0;
  ___clang_call_terminate($66);
 } else {
  $$01 = $eh$lpad$body$indexZ2D;
  $$02 = $eh$lpad$body$index2Z2D;
  ___resumeException($$01 | 0);
 }
 return 0;
}

function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $12 = 0, $14 = 0, $19 = 0, $22 = 0, $29 = 0, $3 = 0, $33 = 0, $38 = 0, $40 = 0, $47 = 0, $5 = 0, $50 = 0, $51 = 0, $62 = 0, $65 = 0, $73 = 0, $80 = 0, $82 = 0, $87 = 0, $89 = 0;
 do if ($__ct << 24 >> 24 == $__decimal_point << 24 >> 24) if (!(HEAP8[$__in_units >> 0] | 0)) $$0 = -1; else {
  HEAP8[$__in_units >> 0] = 0;
  $3 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = 46;
  $5 = HEAP8[$__grouping >> 0] | 0;
  if (!($5 & 1)) $12 = ($5 & 255) >>> 1; else $12 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!$12) $$0 = 0; else {
   $14 = HEAP32[$__g_end >> 2] | 0;
   if (($14 - $__g | 0) < 160) {
    $19 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $14 + 4;
    HEAP32[$14 >> 2] = $19;
    $$0 = 0;
   } else $$0 = 0;
  }
 } else {
  if ($__ct << 24 >> 24 == $__thousands_sep << 24 >> 24) {
   $22 = HEAP8[$__grouping >> 0] | 0;
   if (!($22 & 1)) $29 = ($22 & 255) >>> 1; else $29 = HEAP32[$__grouping + 4 >> 2] | 0;
   if ($29) {
    if (!(HEAP8[$__in_units >> 0] | 0)) {
     $$0 = -1;
     break;
    }
    $33 = HEAP32[$__g_end >> 2] | 0;
    if (($33 - $__g | 0) >= 160) {
     $$0 = 0;
     break;
    }
    $38 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $33 + 4;
    HEAP32[$33 >> 2] = $38;
    HEAP32[$__dc >> 2] = 0;
    $$0 = 0;
    break;
   }
  }
  $40 = $__atoms + 32 | 0;
  $$0$i = $__atoms;
  while (1) {
   if (($$0$i | 0) == ($40 | 0)) {
    $$0$lcssa$i = $40;
    break;
   }
   if ((HEAP8[$$0$i >> 0] | 0) == $__ct << 24 >> 24) {
    $$0$lcssa$i = $$0$i;
    break;
   }
   $$0$i = $$0$i + 1 | 0;
  }
  $47 = $$0$lcssa$i - $__atoms | 0;
  if (($47 | 0) > 31) $$0 = -1; else {
   $50 = HEAP8[48720 + $47 >> 0] | 0;
   if (($47 | 0) == 24 | ($47 | 0) == 25) {
    $51 = HEAP32[$__a_end >> 2] | 0;
    if (($51 | 0) != ($__a | 0)) if ((HEAPU8[$51 + -1 >> 0] & 95 | 0) != (HEAPU8[$__exp >> 0] & 127 | 0)) {
     $$0 = -1;
     break;
    }
    HEAP32[$__a_end >> 2] = $51 + 1;
    HEAP8[$51 >> 0] = $50;
    $$0 = 0;
    break;
   } else if (($47 | 0) == 23 | ($47 | 0) == 22) {
    HEAP8[$__exp >> 0] = 80;
    $62 = HEAP32[$__a_end >> 2] | 0;
    HEAP32[$__a_end >> 2] = $62 + 1;
    HEAP8[$62 >> 0] = $50;
    $$0 = 0;
    break;
   } else {
    $65 = $50 & 95;
    if (($65 | 0) == (HEAP8[$__exp >> 0] | 0)) {
     HEAP8[$__exp >> 0] = $65 | 128;
     if (HEAP8[$__in_units >> 0] | 0) {
      HEAP8[$__in_units >> 0] = 0;
      $73 = HEAP8[$__grouping >> 0] | 0;
      if (!($73 & 1)) $80 = ($73 & 255) >>> 1; else $80 = HEAP32[$__grouping + 4 >> 2] | 0;
      if ($80) {
       $82 = HEAP32[$__g_end >> 2] | 0;
       if (($82 - $__g | 0) < 160) {
        $87 = HEAP32[$__dc >> 2] | 0;
        HEAP32[$__g_end >> 2] = $82 + 4;
        HEAP32[$82 >> 2] = $87;
       }
      }
     }
    }
    $89 = HEAP32[$__a_end >> 2] | 0;
    HEAP32[$__a_end >> 2] = $89 + 1;
    HEAP8[$89 >> 0] = $50;
    if (($47 | 0) > 21) {
     $$0 = 0;
     break;
    }
    HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
    $$0 = 0;
    break;
   }
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os, $__str, $__len) {
 $__os = $__os | 0;
 $__str = $__str | 0;
 $__len = $__len | 0;
 var $$0 = 0, $$byval_copy = 0, $$pre$phi4Z2D = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $44 = 0, $49 = 0, $51 = 0, $53 = 0, $59 = 0, $61 = 0, $63 = 0, $65 = 0, $8 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $__os | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($2 & 1) {
  $51 = ___cxa_find_matching_catch(0) | 0;
  $$0 = $51;
  $$pre$phi4Z2D = $__os;
  $$pre$phiZ2D = $__os;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   $8 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
   HEAP32[$0 >> 2] = HEAP32[$__os + ($8 + 24) >> 2];
   if ((HEAP32[$__os + ($8 + 4) >> 2] & 176 | 0) == 32) $37 = $__str + $__len | 0; else $37 = $__str;
   $16 = $__os + $8 | 0;
   $17 = $__os + ($8 + 76) | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   do if (($18 | 0) == -1) {
    __THREW__ = 0;
    invoke_vii(47, $$byval_copy | 0, $16 | 0);
    $20 = __THREW__;
    __THREW__ = 0;
    if ($20 & 1) label = 16; else {
     __THREW__ = 0;
     $22 = invoke_iii(22, $$byval_copy | 0, 50208) | 0;
     $23 = __THREW__;
     __THREW__ = 0;
     if (!($23 & 1)) {
      __THREW__ = 0;
      $28 = invoke_iii(HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] | 0, $22 | 0, 32) | 0;
      $29 = __THREW__;
      __THREW__ = 0;
      if (!($29 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $33 = $28 << 24 >> 24;
       HEAP32[$17 >> 2] = $33;
       $$pre$phi6Z2D = $16;
       $35 = $33;
       label = 12;
       break;
      }
     }
     $31 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $31;
    }
   } else {
    $$pre$phi6Z2D = $16;
    $35 = $18;
    label = 12;
   } while (0);
   if ((label | 0) == 12) {
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
    invoke_viiiiiii(39, $1 | 0, $$byval_copy | 0, $__str | 0, $37 | 0, $__str + $__len | 0, $$pre$phi6Z2D | 0, $35 & 255 | 0);
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) label = 16; else {
     if (HEAP32[$1 >> 2] | 0) break;
     $44 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(48, $__os + $44 | 0, HEAP32[$__os + ($44 + 16) >> 2] | 5 | 0);
     $49 = __THREW__;
     __THREW__ = 0;
     if ($49 & 1) label = 16; else break;
    }
   }
   if ((label | 0) == 16) {
    $53 = ___cxa_find_matching_catch(0) | 0;
    $eh$lpad$body$indexZ2D = $53;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$0 = $eh$lpad$body$indexZ2D;
   $$pre$phi4Z2D = $__os;
   $$pre$phiZ2D = $__os;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $__os | 0;
 } while (0);
 ___cxa_begin_catch($$0 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(178, $$pre$phi4Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
 $59 = __THREW__;
 __THREW__ = 0;
 if (!($59 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $__os | 0;
 }
 $61 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $63 = __THREW__;
 __THREW__ = 0;
 if ($63 & 1) {
  $65 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($65);
 } else ___resumeException($61 | 0);
 return 0;
}

function __Z22jsonnet_unparse_numberd($agg$result, $v) {
 $agg$result = $agg$result | 0;
 $v = +$v;
 var $$0$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $35 = 0, $37 = 0, $40 = 0, $42 = 0, $6 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $0 = sp + 144 | 0;
 $ss = sp;
 $1 = $ss + 64 | 0;
 $2 = $ss + 8 | 0;
 HEAP32[$2 >> 2] = 752;
 $3 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 900;
 HEAP32[$1 >> 2] = 920;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $3 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $18;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 732;
 HEAP32[$1 >> 2] = 772;
 HEAP32[$2 >> 2] = 752;
 __THREW__ = 0;
 invoke_vi(177, $3 | 0);
 $10 = __THREW__;
 __THREW__ = 0;
 do if ($10 & 1) {
  $20 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $20;
 } else {
  HEAP32[$3 >> 2] = 1064;
  $12 = $ss + 44 | 0;
  HEAP32[$12 + 0 >> 2] = 0;
  HEAP32[$12 + 4 >> 2] = 0;
  HEAP32[$12 + 8 >> 2] = 0;
  HEAP32[$12 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $3 | 0, $0 | 0);
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) {
   $16 = ___cxa_find_matching_catch() | 0;
   $17 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
   $eh$lpad$body$i$index2Z2D = $17;
   $eh$lpad$body$i$indexZ2D = $16;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $23 = +Math_floor(+$v) == $v;
  $26 = HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0;
  if ($23) {
   $27 = $2 + ($26 + 4) | 0;
   HEAP32[$27 >> 2] = HEAP32[$27 >> 2] & -261 | 4;
   HEAP32[$2 + ((HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) + 8) >> 2] = 0;
   __THREW__ = 0;
   invoke_iid(1, $2 | 0, +$v) | 0;
   $35 = __THREW__;
   __THREW__ = 0;
   if (!($35 & 1)) label = 13;
  } else {
   HEAP32[$2 + ($26 + 8) >> 2] = 17;
   __THREW__ = 0;
   invoke_iid(1, $2 | 0, +$v) | 0;
   $40 = __THREW__;
   __THREW__ = 0;
   if (!($40 & 1)) label = 13;
  }
  if ((label | 0) == 13) {
   __THREW__ = 0;
   invoke_vii(43, $agg$result | 0, $3 | 0);
   $42 = __THREW__;
   __THREW__ = 0;
   if (!($42 & 1)) {
    HEAP32[$ss >> 2] = 732;
    HEAP32[$1 >> 2] = 772;
    HEAP32[$2 >> 2] = 752;
    HEAP32[$3 >> 2] = 1064;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
    STACKTOP = sp;
    return;
   }
  }
  $37 = ___cxa_find_matching_catch() | 0;
  HEAP32[$ss >> 2] = 732;
  HEAP32[$1 >> 2] = 772;
  HEAP32[$2 >> 2] = 752;
  HEAP32[$3 >> 2] = 1064;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
  ___resumeException($37 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 ___resumeException($$01$i | 0);
}

function _wcsrtombs($s, $ws, $n, $st) {
 $s = $s | 0;
 $ws = $ws | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0 = 0, $$0$ph = 0, $$0$ph58 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$1$lcssa = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$35$lcssa = 0, $$422 = 0, $$422$lcssa = 0, $$422$lcssa63 = 0, $$5 = 0, $$pn = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $35 = 0, $46 = 0, $5 = 0, $7 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $buf = sp;
 if (!$s) {
  $2 = HEAP32[$ws >> 2] | 0;
  $3 = HEAP32[$2 >> 2] | 0;
  if (!$3) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $$0218 = 0;
  $5 = $3;
  $ws2$019 = $2;
  while (1) {
   if ($5 >>> 0 > 127) {
    $7 = _wcrtomb($buf, $5, 0) | 0;
    if (($7 | 0) == -1) {
     $$0$ph = -1;
     break;
    } else $$pn = $7;
   } else $$pn = 1;
   $$13 = $$pn + $$0218 | 0;
   $ws2$019 = $ws2$019 + 4 | 0;
   $5 = HEAP32[$ws2$019 >> 2] | 0;
   if (!$5) {
    $$0$ph = $$13;
    break;
   } else $$0218 = $$13;
  }
  $$0 = $$0$ph;
  STACKTOP = sp;
  return $$0 | 0;
 }
 do if ($n >>> 0 > 3) {
  $$0129 = $s;
  $$2428 = $n;
  $14 = HEAP32[$ws >> 2] | 0;
  while (1) {
   $13 = HEAP32[$14 >> 2] | 0;
   if (($13 + -1 | 0) >>> 0 > 126) {
    if (!$13) {
     $$0129$lcssa = $$0129;
     $$2428$lcssa = $$2428;
     label = 14;
     break;
    }
    $19 = _wcrtomb($$0129, $13, 0) | 0;
    if (($19 | 0) == -1) {
     label = 30;
     break;
    }
    $$1 = $$0129 + $19 | 0;
    $$35 = $$2428 - $19 | 0;
    $27 = $14;
   } else {
    HEAP8[$$0129 >> 0] = $13;
    $$1 = $$0129 + 1 | 0;
    $$35 = $$2428 + -1 | 0;
    $27 = HEAP32[$ws >> 2] | 0;
   }
   $14 = $27 + 4 | 0;
   HEAP32[$ws >> 2] = $14;
   if ($$35 >>> 0 <= 3) {
    $$1$lcssa = $$1;
    $$35$lcssa = $$35;
    label = 9;
    break;
   } else {
    $$0129 = $$1;
    $$2428 = $$35;
   }
  }
  if ((label | 0) == 9) {
   $$01$lcssa = $$1$lcssa;
   $$24$lcssa = $$35$lcssa;
   break;
  } else if ((label | 0) == 14) {
   HEAP8[$$0129$lcssa >> 0] = 0;
   HEAP32[$ws >> 2] = 0;
   $$0 = $n - $$2428$lcssa | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 30) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  $$01$lcssa = $s;
  $$24$lcssa = $n;
 } while (0);
 if (!$$24$lcssa) {
  $$0 = $n;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $$223 = $$01$lcssa;
 $$422 = $$24$lcssa;
 $30 = HEAP32[$ws >> 2] | 0;
 while (1) {
  $29 = HEAP32[$30 >> 2] | 0;
  if (($29 + -1 | 0) >>> 0 > 126) {
   if (!$29) {
    $$223$lcssa = $$223;
    $$422$lcssa = $$422;
    label = 21;
    break;
   }
   $35 = _wcrtomb($buf, $29, 0) | 0;
   if (($35 | 0) == -1) {
    $$0$ph58 = -1;
    label = 29;
    break;
   }
   if ($$422 >>> 0 < $35 >>> 0) {
    $$422$lcssa63 = $$422;
    label = 24;
    break;
   }
   _wcrtomb($$223, HEAP32[$30 >> 2] | 0, 0) | 0;
   $$3 = $$223 + $35 | 0;
   $$5 = $$422 - $35 | 0;
   $46 = $30;
  } else {
   HEAP8[$$223 >> 0] = $29;
   $$3 = $$223 + 1 | 0;
   $$5 = $$422 + -1 | 0;
   $46 = HEAP32[$ws >> 2] | 0;
  }
  $30 = $46 + 4 | 0;
  HEAP32[$ws >> 2] = $30;
  if (!$$5) {
   $$0$ph58 = $n;
   label = 29;
   break;
  } else {
   $$223 = $$3;
   $$422 = $$5;
  }
 }
 if ((label | 0) == 21) {
  HEAP8[$$223$lcssa >> 0] = 0;
  HEAP32[$ws >> 2] = 0;
  $$0 = $n - $$422$lcssa | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 24) {
  $$0 = $n - $$422$lcssa63 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 29) {
  $$0 = $$0$ph58;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function _jsonnet_evaluate_snippet($vm, $filename, $snippet, $error) {
 $vm = $vm | 0;
 $filename = $filename | 0;
 $snippet = $snippet | 0;
 $error = $error | 0;
 var $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $29 = 0, $31 = 0, $32 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $54 = 0, $56 = 0, $57 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __THREW__ = 0;
 $1 = invoke_iiiiii(16, $vm | 0, $filename | 0, $snippet | 0, $error | 0, 0) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if (!($2 & 1)) {
  STACKTOP = sp;
  return $1 | 0;
 }
 $4 = ___cxa_find_matching_catch(43360, 43496) | 0;
 $5 = tempRet0;
 if (($5 | 0) == (_llvm_eh_typeid_for(43360) | 0)) {
  ___cxa_begin_catch($4 | 0) | 0;
  _fwrite(42576, 49, 1, HEAP32[_stderr >> 2] | 0) | 0;
  __THREW__ = 0;
  invoke_v(3);
  $9 = __THREW__;
  __THREW__ = 0;
  if (!($9 & 1)) {}
  $52 = ___cxa_find_matching_catch() | 0;
  $53 = tempRet0;
  __THREW__ = 0;
  invoke_v(2);
  $54 = __THREW__;
  __THREW__ = 0;
  if ($54 & 1) {
   $56 = ___cxa_find_matching_catch(0) | 0;
   $57 = tempRet0;
   ___clang_call_terminate($56);
  } else {
   $$01 = $52;
   $$02 = $53;
   ___resumeException($$01 | 0);
  }
 }
 if (($5 | 0) != (_llvm_eh_typeid_for(43496) | 0)) {
  $$01 = $4;
  $$02 = $5;
  ___resumeException($$01 | 0);
 }
 $13 = ___cxa_begin_catch($4 | 0) | 0;
 __THREW__ = 0;
 $14 = invoke_iiii(25, 45984, 42096, 74) | 0;
 $15 = __THREW__;
 __THREW__ = 0;
 do if ($15 & 1) label = 16; else {
  $20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 8 >> 2] & 127]($13) | 0;
  $21 = _strlen($20 | 0) | 0;
  __THREW__ = 0;
  $22 = invoke_iiii(25, $14 | 0, $20 | 0, $21 | 0) | 0;
  $23 = __THREW__;
  __THREW__ = 0;
  if ($23 & 1) label = 16; else {
   __THREW__ = 0;
   invoke_vii(47, $0 | 0, $22 + (HEAP32[(HEAP32[$22 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $29 = __THREW__;
   __THREW__ = 0;
   if ($29 & 1) label = 16; else {
    __THREW__ = 0;
    $31 = invoke_iii(22, $0 | 0, 50208) | 0;
    $32 = __THREW__;
    __THREW__ = 0;
    if (!($32 & 1)) {
     __THREW__ = 0;
     $37 = invoke_iii(HEAP32[(HEAP32[$31 >> 2] | 0) + 28 >> 2] | 0, $31 | 0, 10) | 0;
     $38 = __THREW__;
     __THREW__ = 0;
     if (!($38 & 1)) {
      __ZNSt3__16localeD2Ev($0);
      __THREW__ = 0;
      invoke_iii(25, $22 | 0, $37 | 0) | 0;
      $42 = __THREW__;
      __THREW__ = 0;
      if ($42 & 1) {
       label = 16;
       break;
      }
      __THREW__ = 0;
      invoke_ii(68, $22 | 0) | 0;
      $44 = __THREW__;
      __THREW__ = 0;
      if ($44 & 1) {
       label = 16;
       break;
      }
      __THREW__ = 0;
      invoke_v(3);
      $46 = __THREW__;
      __THREW__ = 0;
      if ($46 & 1) {
       label = 16;
       break;
      }
     }
    }
    $40 = ___cxa_find_matching_catch() | 0;
    $41 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    $eh$lpad$body$index2Z2D = $41;
    $eh$lpad$body$indexZ2D = $40;
   }
  }
 } while (0);
 if ((label | 0) == 16) {
  $48 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $48;
 }
 __THREW__ = 0;
 invoke_v(2);
 $50 = __THREW__;
 __THREW__ = 0;
 if ($50 & 1) {
  $56 = ___cxa_find_matching_catch(0) | 0;
  $57 = tempRet0;
  ___clang_call_terminate($56);
 } else {
  $$01 = $eh$lpad$body$indexZ2D;
  $$02 = $eh$lpad$body$index2Z2D;
  ___resumeException($$01 | 0);
 }
 return 0;
}

function __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this, $heap) {
 $this = $this | 0;
 $heap = $heap | 0;
 var $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$lcssa = 0, $$0$i$i$i$i16$i = 0, $$0$i$i$i$i16$i$lcssa = 0, $$0$i$i$i18$i = 0, $$01$i$i$i$i = 0, $$01$i$i$i21$i = 0, $$cast$i$i$i$i$lcssa = 0, $$cast$i$i$i19$i$lcssa = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i15$i = 0, $$idx$val$i3642$i = 0, $$idx1$val = 0, $$idx1$val$i = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $25 = 0, $27 = 0, $30 = 0, $34 = 0, $37 = 0, $40 = 0, $42 = 0, $45 = 0, $51 = 0;
 $$idx$val = HEAP32[$this + 12 >> 2] | 0;
 $$idx1$val = HEAP32[$this + 16 >> 2] | 0;
 if (($$idx$val | 0) == ($$idx1$val | 0)) return;
 $2 = $$idx$val;
 do {
  if (HEAP32[$2 + 40 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$2 + 48 >> 2] | 0);
  if (HEAP32[$2 + 56 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$2 + 64 >> 2] | 0);
  $15 = HEAP32[$2 + 116 >> 2] | 0;
  if ($15) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, $15);
  $18 = HEAP32[$2 + 120 >> 2] | 0;
  if ($18) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, $18);
  $$idx$val$i$i = HEAP32[$2 + 128 >> 2] | 0;
  $20 = $2 + 132 | 0;
  if (($$idx$val$i$i | 0) != ($20 | 0)) {
   $$idx$val$i3642$i = $$idx$val$i$i;
   while (1) {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$$idx$val$i3642$i + 20 >> 2] | 0);
    $25 = HEAP32[$$idx$val$i3642$i + 4 >> 2] | 0;
    if (!$25) {
     $$0$i$i$i18$i = $$idx$val$i3642$i;
     while (1) {
      $30 = HEAP32[$$0$i$i$i18$i + 8 >> 2] | 0;
      if ((HEAP32[$30 >> 2] | 0) == ($$0$i$i$i18$i | 0)) {
       $$cast$i$i$i19$i$lcssa = $30;
       break;
      } else $$0$i$i$i18$i = $30;
     }
     $$01$i$i$i21$i = $$cast$i$i$i19$i$lcssa;
    } else {
     $$0$i$i$i$i16$i = $25;
     while (1) {
      $27 = HEAP32[$$0$i$i$i$i16$i >> 2] | 0;
      if (!$27) {
       $$0$i$i$i$i16$i$lcssa = $$0$i$i$i$i16$i;
       break;
      } else $$0$i$i$i$i16$i = $27;
     }
     $$01$i$i$i21$i = $$0$i$i$i$i16$i$lcssa;
    }
    if (($$01$i$i$i21$i | 0) == ($20 | 0)) break; else $$idx$val$i3642$i = $$01$i$i$i21$i;
   }
  }
  $$idx$val$i15$i = HEAP32[$2 + 92 >> 2] | 0;
  $34 = $2 + 96 | 0;
  if (($$idx$val$i15$i | 0) != ($34 | 0)) {
   $37 = $$idx$val$i15$i;
   while (1) {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$37 + 20 >> 2] | 0);
    $40 = HEAP32[$37 + 4 >> 2] | 0;
    if (!$40) {
     $$0$i$i$i$i = $37;
     while (1) {
      $45 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$45 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
       $$cast$i$i$i$i$lcssa = $45;
       break;
      } else $$0$i$i$i$i = $45;
     }
     $$01$i$i$i$i = $$cast$i$i$i$i$lcssa;
    } else {
     $$0$i$i$i$i$i = $40;
     while (1) {
      $42 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
      if (!$42) {
       $$0$i$i$i$i$i$lcssa = $$0$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i = $42;
     }
     $$01$i$i$i$i = $$0$i$i$i$i$i$lcssa;
    }
    if (($$01$i$i$i$i | 0) == ($34 | 0)) break; else $37 = $$01$i$i$i$i;
   }
  }
  $$idx$val$i = HEAP32[$2 + 104 >> 2] | 0;
  $$idx1$val$i = HEAP32[$2 + 108 >> 2] | 0;
  if (($$idx$val$i | 0) != ($$idx1$val$i | 0)) {
   $51 = $$idx$val$i;
   do {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$51 >> 2] | 0);
    $51 = $51 + 4 | 0;
   } while (($51 | 0) != ($$idx1$val$i | 0));
  }
  $2 = $2 + 144 | 0;
 } while (($2 | 0) != ($$idx1$val | 0));
 return;
}

function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $12 = 0, $14 = 0, $19 = 0, $22 = 0, $29 = 0, $3 = 0, $33 = 0, $38 = 0, $40 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $64 = 0, $72 = 0, $79 = 0, $81 = 0, $86 = 0, $88 = 0;
 do if (($__ct | 0) == ($__decimal_point | 0)) if (!(HEAP8[$__in_units >> 0] | 0)) $$0 = -1; else {
  HEAP8[$__in_units >> 0] = 0;
  $3 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = 46;
  $5 = HEAP8[$__grouping >> 0] | 0;
  if (!($5 & 1)) $12 = ($5 & 255) >>> 1; else $12 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!$12) $$0 = 0; else {
   $14 = HEAP32[$__g_end >> 2] | 0;
   if (($14 - $__g | 0) < 160) {
    $19 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $14 + 4;
    HEAP32[$14 >> 2] = $19;
    $$0 = 0;
   } else $$0 = 0;
  }
 } else {
  if (($__ct | 0) == ($__thousands_sep | 0)) {
   $22 = HEAP8[$__grouping >> 0] | 0;
   if (!($22 & 1)) $29 = ($22 & 255) >>> 1; else $29 = HEAP32[$__grouping + 4 >> 2] | 0;
   if ($29) {
    if (!(HEAP8[$__in_units >> 0] | 0)) {
     $$0 = -1;
     break;
    }
    $33 = HEAP32[$__g_end >> 2] | 0;
    if (($33 - $__g | 0) >= 160) {
     $$0 = 0;
     break;
    }
    $38 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $33 + 4;
    HEAP32[$33 >> 2] = $38;
    HEAP32[$__dc >> 2] = 0;
    $$0 = 0;
    break;
   }
  }
  $40 = $__atoms + 128 | 0;
  $$0$i = $__atoms;
  while (1) {
   if (($$0$i | 0) == ($40 | 0)) {
    $$0$lcssa$i = $40;
    break;
   }
   if ((HEAP32[$$0$i >> 2] | 0) == ($__ct | 0)) {
    $$0$lcssa$i = $$0$i;
    break;
   }
   $$0$i = $$0$i + 4 | 0;
  }
  $47 = $$0$lcssa$i - $__atoms | 0;
  $48 = $47 >> 2;
  if (($47 | 0) > 124) $$0 = -1; else {
   $51 = HEAP8[48720 + $48 >> 0] | 0;
   if (($48 | 0) == 24 | ($48 | 0) == 25) {
    $52 = HEAP32[$__a_end >> 2] | 0;
    if (($52 | 0) != ($__a | 0)) if ((HEAPU8[$52 + -1 >> 0] & 95 | 0) != (HEAPU8[$__exp >> 0] & 127 | 0)) {
     $$0 = -1;
     break;
    }
    HEAP32[$__a_end >> 2] = $52 + 1;
    HEAP8[$52 >> 0] = $51;
    $$0 = 0;
    break;
   } else if (($48 | 0) == 23 | ($48 | 0) == 22) HEAP8[$__exp >> 0] = 80; else {
    $64 = $51 & 95;
    if (($64 | 0) == (HEAP8[$__exp >> 0] | 0)) {
     HEAP8[$__exp >> 0] = $64 | 128;
     if (HEAP8[$__in_units >> 0] | 0) {
      HEAP8[$__in_units >> 0] = 0;
      $72 = HEAP8[$__grouping >> 0] | 0;
      if (!($72 & 1)) $79 = ($72 & 255) >>> 1; else $79 = HEAP32[$__grouping + 4 >> 2] | 0;
      if ($79) {
       $81 = HEAP32[$__g_end >> 2] | 0;
       if (($81 - $__g | 0) < 160) {
        $86 = HEAP32[$__dc >> 2] | 0;
        HEAP32[$__g_end >> 2] = $81 + 4;
        HEAP32[$81 >> 2] = $86;
       }
      }
     }
    }
   }
   $88 = HEAP32[$__a_end >> 2] | 0;
   HEAP32[$__a_end >> 2] = $88 + 1;
   HEAP8[$88 >> 0] = $51;
   if (($47 | 0) > 84) $$0 = 0; else {
    HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
    $$0 = 0;
   }
  }
 } while (0);
 return $$0 | 0;
}

function _mbsnrtowcs($wcs, $src, $n, $wn, $st) {
 $wcs = $wcs | 0;
 $src = $src | 0;
 $n = $n | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $$0$lcssa = 0, $$0$lcssa$ph = 0, $$014$ = 0, $$014$lcssa = 0, $$014$lcssa$ph = 0, $$01428 = 0, $$031 = 0, $$115 = 0, $$2 = 0, $$3 = 0, $$lcssa = 0, $$lcssa61 = 0, $$ph = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $17 = 0, $21 = 0, $22 = 0, $30 = 0, $32 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $cnt$0$lcssa = 0, $cnt$0$lcssa$ph = 0, $cnt$029 = 0, $cnt$2 = 0, $cnt$2$lcssa = 0, $cnt$3 = 0, $s = 0, $wbuf = 0, $wcs$ = 0, $wn$ = 0, $ws$0$lcssa = 0, $ws$0$lcssa$ph = 0, $ws$030 = 0, $ws$1 = 0, $ws$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $wbuf = sp + 8 | 0;
 $s = sp;
 $0 = HEAP32[$src >> 2] | 0;
 HEAP32[$s >> 2] = $0;
 $1 = ($wcs | 0) != 0;
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 do if (($wn$ | 0) != 0 & ($0 | 0) != 0) {
  $$01428 = $wn$;
  $$031 = $n;
  $32 = $0;
  $cnt$029 = 0;
  $ws$030 = $wcs$;
  while (1) {
   $4 = $$031 >>> 2;
   $5 = $4 >>> 0 >= $$01428 >>> 0;
   if (!($$031 >>> 0 > 131 | $5)) {
    $$0$lcssa$ph = $$031;
    $$014$lcssa$ph = $$01428;
    $$ph = $32;
    $cnt$0$lcssa$ph = $cnt$029;
    $ws$0$lcssa$ph = $ws$030;
    label = 8;
    break;
   }
   $$014$ = $5 ? $$01428 : $4;
   $7 = $$031 - $$014$ | 0;
   $8 = _mbsrtowcs($ws$030, $s, $$014$, $st) | 0;
   if (($8 | 0) == -1) {
    label = 17;
    break;
   }
   if (($ws$030 | 0) == ($wbuf | 0)) {
    $$115 = $$01428;
    $ws$1 = $wbuf;
   } else {
    $$115 = $$01428 - $8 | 0;
    $ws$1 = $ws$030 + ($8 << 2) | 0;
   }
   $13 = $8 + $cnt$029 | 0;
   $14 = HEAP32[$s >> 2] | 0;
   if (($$115 | 0) != 0 & ($14 | 0) != 0) {
    $$01428 = $$115;
    $$031 = $7;
    $32 = $14;
    $cnt$029 = $13;
    $ws$030 = $ws$1;
   } else {
    $$0$lcssa$ph = $7;
    $$014$lcssa$ph = $$115;
    $$ph = $14;
    $cnt$0$lcssa$ph = $13;
    $ws$0$lcssa$ph = $ws$1;
    label = 8;
    break;
   }
  }
  if ((label | 0) == 8) {
   $$0$lcssa = $$0$lcssa$ph;
   $$014$lcssa = $$014$lcssa$ph;
   $17 = $$ph;
   $cnt$0$lcssa = $cnt$0$lcssa$ph;
   $ws$0$lcssa = $ws$0$lcssa$ph;
   label = 9;
   break;
  } else if ((label | 0) == 17) {
   $cnt$3 = -1;
   break;
  }
 } else {
  $$0$lcssa = $n;
  $$014$lcssa = $wn$;
  $17 = $0;
  $cnt$0$lcssa = 0;
  $ws$0$lcssa = $wcs$;
  label = 9;
 } while (0);
 do if ((label | 0) == 9) if (($$0$lcssa | 0) != 0 & (($$014$lcssa | 0) != 0 & ($17 | 0) != 0)) {
  $$2 = $$0$lcssa;
  $$3 = $$014$lcssa;
  $21 = $17;
  $cnt$2 = $cnt$0$lcssa;
  $ws$2 = $ws$0$lcssa;
  while (1) {
   $22 = _mbrtowc($ws$2, $21, $$2, $st) | 0;
   if (($22 + 2 | 0) >>> 0 < 3) {
    $$lcssa = $22;
    $cnt$2$lcssa = $cnt$2;
    break;
   }
   $21 = (HEAP32[$s >> 2] | 0) + $22 | 0;
   HEAP32[$s >> 2] = $21;
   $$3 = $$3 + -1 | 0;
   $30 = $cnt$2 + 1 | 0;
   if (!(($$3 | 0) != 0 & ($$2 | 0) != ($22 | 0))) {
    $$lcssa61 = $30;
    label = 16;
    break;
   } else {
    $$2 = $$2 - $22 | 0;
    $cnt$2 = $30;
    $ws$2 = $ws$2 + 4 | 0;
   }
  }
  if ((label | 0) == 16) {
   $cnt$3 = $$lcssa61;
   break;
  }
  if (!$$lcssa) {
   HEAP32[$s >> 2] = 0;
   $cnt$3 = $cnt$2$lcssa;
   break;
  } else if (($$lcssa | 0) == -1) {
   $cnt$3 = -1;
   break;
  } else {
   HEAP32[$st >> 2] = 0;
   $cnt$3 = $cnt$2$lcssa;
   break;
  }
 } else $cnt$3 = $cnt$0$lcssa; while (0);
 if (!$1) {
  STACKTOP = sp;
  return $cnt$3 | 0;
 }
 HEAP32[$src >> 2] = HEAP32[$s >> 2];
 STACKTOP = sp;
 return $cnt$3 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i3$i$i915 = 0, $0 = 0, $13 = 0, $16 = 0, $28 = 0, $3 = 0, $30 = 0, $46 = 0, $47 = 0, $48 = 0, $58 = 0, $59 = 0, $71 = 0, $83 = 0, $84 = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $83 = 1; else {
  $3 = HEAP32[$0 + 12 >> 2] | 0;
  if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $83 = 1;
   break;
  } else {
   $83 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $13 = HEAP32[$__e >> 2] | 0;
 do if (!$13) label = 14; else {
  $16 = HEAP32[$13 + 12 >> 2] | 0;
  if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 14;
   break;
  } else if ($83) {
   $$pre$i3$i$i915 = $13;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($83) label = 16; else {
  $$pre$i3$i$i915 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6; else if ((label | 0) == 17) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAP32[$30 >> 2] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $$0$i$i, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   break;
  }
  $46 = HEAP32[$__b >> 2] | 0;
  $47 = $46 + 12 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 40 >> 2] & 127]($46) | 0;
   $$pre = HEAP32[$__b >> 2] | 0;
   if (!$$pre) $84 = 1; else {
    $58 = $$pre;
    label = 25;
   }
  } else {
   HEAP32[$47 >> 2] = $48 + 4;
   $58 = $46;
   label = 25;
  }
  do if ((label | 0) == 25) {
   $59 = HEAP32[$58 + 12 >> 2] | 0;
   if (($59 | 0) == (HEAP32[$58 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$58 >> 2] | 0) + 36 >> 2] & 127]($58) | 0; else $$0$i$i$i$i1 = HEAP32[$59 >> 2] | 0;
   if (($$0$i$i$i$i1 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $84 = 1;
    break;
   } else {
    $84 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$$pre$i3$i$i915) label = 37; else {
   $71 = HEAP32[$$pre$i3$i$i915 + 12 >> 2] | 0;
   if (($71 | 0) == (HEAP32[$$pre$i3$i$i915 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i915 >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i915) | 0; else $$0$i$i1$i$i7 = HEAP32[$71 >> 2] | 0;
   if (($$0$i$i1$i$i7 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 37;
    break;
   } else if ($84) break L22; else break;
  } while (0);
  if ((label | 0) == 37) if (!$84) break;
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 } while (0);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $__way, $__wch) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__way = $__way | 0;
 $__wch = $__wch | 0;
 var $$pre = 0, $109 = 0, $114 = 0, $121 = 0, $126 = 0, $14 = 0, $141 = 0, $146 = 0, $2 = 0, $20 = 0, $25 = 0, $3 = 0, $37 = 0, $4 = 0, $44 = 0, $47 = 0, $5 = 0, $54 = 0, $56 = 0, $58 = 0, $61 = 0, $66 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $75 = 0, $83 = 0, $85 = 0, $87 = 0, $9 = 0, $93 = 0, $98 = 0;
 $2 = $this + 44 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $this + 24 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($3 >>> 0 < $5 >>> 0) {
  HEAP32[$2 >> 2] = $5;
  $54 = $5;
 } else $54 = $3;
 $7 = $__wch & 24;
 if (!$7) {
  $9 = $agg$result;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$9 + 4 >> 2] = 0;
  $14 = $agg$result + 8 | 0;
  HEAP32[$14 >> 2] = -1;
  HEAP32[$14 + 4 >> 2] = -1;
  return;
 }
 if (($__way | 0) == 1 & ($7 | 0) == 24) {
  $20 = $agg$result;
  HEAP32[$20 >> 2] = 0;
  HEAP32[$20 + 4 >> 2] = 0;
  $25 = $agg$result + 8 | 0;
  HEAP32[$25 >> 2] = -1;
  HEAP32[$25 + 4 >> 2] = -1;
  return;
 }
 do if (($__way | 0) == 1) if (!($__wch & 8)) {
  $44 = $5 - (HEAP32[$this + 20 >> 2] | 0) | 0;
  $70 = $44;
  $71 = (($44 | 0) < 0) << 31 >> 31;
  break;
 } else {
  $37 = (HEAP32[$this + 12 >> 2] | 0) - (HEAP32[$this + 8 >> 2] | 0) | 0;
  $70 = $37;
  $71 = (($37 | 0) < 0) << 31 >> 31;
  break;
 } else if (($__way | 0) == 2) {
  $47 = $this + 32 | 0;
  if (!(HEAP8[$47 >> 0] & 1)) $56 = $47 + 1 | 0; else $56 = HEAP32[$this + 40 >> 2] | 0;
  $58 = $54 - $56 | 0;
  $70 = $58;
  $71 = (($58 | 0) < 0) << 31 >> 31;
 } else if (!$__way) {
  $70 = 0;
  $71 = 0;
 } else {
  $61 = $agg$result;
  HEAP32[$61 >> 2] = 0;
  HEAP32[$61 + 4 >> 2] = 0;
  $66 = $agg$result + 8 | 0;
  HEAP32[$66 >> 2] = -1;
  HEAP32[$66 + 4 >> 2] = -1;
  return;
 } while (0);
 $72 = _i64Add($70 | 0, $71 | 0, $0 | 0, $1 | 0) | 0;
 $73 = tempRet0;
 if (($73 | 0) >= 0) {
  $75 = $this + 32 | 0;
  if (!(HEAP8[$75 >> 0] & 1)) $83 = $75 + 1 | 0; else $83 = HEAP32[$this + 40 >> 2] | 0;
  $85 = $54 - $83 | 0;
  $87 = (($85 | 0) < 0) << 31 >> 31;
  if (!(($87 | 0) < ($73 | 0) | ($87 | 0) == ($73 | 0) & $85 >>> 0 < $72 >>> 0)) {
   $$pre = $__wch & 8;
   if (!(($72 | 0) == 0 & ($73 | 0) == 0)) {
    if ($$pre) if (!(HEAP32[$this + 12 >> 2] | 0)) {
     $109 = $agg$result;
     HEAP32[$109 >> 2] = 0;
     HEAP32[$109 + 4 >> 2] = 0;
     $114 = $agg$result + 8 | 0;
     HEAP32[$114 >> 2] = -1;
     HEAP32[$114 + 4 >> 2] = -1;
     return;
    }
    if (($__wch & 16 | 0) != 0 & ($5 | 0) == 0) {
     $121 = $agg$result;
     HEAP32[$121 >> 2] = 0;
     HEAP32[$121 + 4 >> 2] = 0;
     $126 = $agg$result + 8 | 0;
     HEAP32[$126 >> 2] = -1;
     HEAP32[$126 + 4 >> 2] = -1;
     return;
    }
   }
   if ($$pre) {
    HEAP32[$this + 12 >> 2] = (HEAP32[$this + 8 >> 2] | 0) + $72;
    HEAP32[$this + 16 >> 2] = $54;
   }
   if ($__wch & 16) HEAP32[$4 >> 2] = (HEAP32[$this + 20 >> 2] | 0) + $72;
   $141 = $agg$result;
   HEAP32[$141 >> 2] = 0;
   HEAP32[$141 + 4 >> 2] = 0;
   $146 = $agg$result + 8 | 0;
   HEAP32[$146 >> 2] = $72;
   HEAP32[$146 + 4 >> 2] = $73;
   return;
  }
 }
 $93 = $agg$result;
 HEAP32[$93 >> 2] = 0;
 HEAP32[$93 + 4 >> 2] = 0;
 $98 = $agg$result + 8 | 0;
 HEAP32[$98 >> 2] = -1;
 HEAP32[$98 + 4 >> 2] = -1;
 return;
}

function _scanexp($f, $pok) {
 $f = $f | 0;
 $pok = $pok | 0;
 var $$lcssa18 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $2 = 0, $20 = 0, $35 = 0, $36 = 0, $47 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $76 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$111 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $x$012 = 0;
 $0 = $f + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $f + 100 | 0;
 if ($1 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
  HEAP32[$0 >> 2] = $1 + 1;
  $9 = HEAPU8[$1 >> 0] | 0;
 } else $9 = ___shgetc($f) | 0;
 if (($9 | 0) == 43 | ($9 | 0) == 45) {
  $11 = ($9 | 0) == 45 & 1;
  $12 = HEAP32[$0 >> 2] | 0;
  if ($12 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $12 + 1;
   $20 = HEAPU8[$12 >> 0] | 0;
  } else $20 = ___shgetc($f) | 0;
  if (($pok | 0) != 0 & ($20 + -48 | 0) >>> 0 > 9) if (!(HEAP32[$2 >> 2] | 0)) {
   $c$0 = $20;
   $neg$0 = $11;
  } else {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
   $c$0 = $20;
   $neg$0 = $11;
  } else {
   $c$0 = $20;
   $neg$0 = $11;
  }
 } else {
  $c$0 = $9;
  $neg$0 = 0;
 }
 if (($c$0 + -48 | 0) >>> 0 > 9) {
  if (!(HEAP32[$2 >> 2] | 0)) {
   $96 = -2147483648;
   $97 = 0;
   tempRet0 = $96;
   return $97 | 0;
  }
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  $96 = -2147483648;
  $97 = 0;
  tempRet0 = $96;
  return $97 | 0;
 }
 $c$111 = $c$0;
 $x$012 = 0;
 while (1) {
  $35 = $c$111 + -48 + ($x$012 * 10 | 0) | 0;
  $36 = HEAP32[$0 >> 2] | 0;
  if ($36 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $36 + 1;
   $c$1$be = HEAPU8[$36 >> 0] | 0;
  } else $c$1$be = ___shgetc($f) | 0;
  if (($c$1$be + -48 | 0) >>> 0 < 10 & ($35 | 0) < 214748364) {
   $c$111 = $c$1$be;
   $x$012 = $35;
  } else {
   $$lcssa18 = $35;
   $c$1$be$lcssa = $c$1$be;
   break;
  }
 }
 $47 = (($$lcssa18 | 0) < 0) << 31 >> 31;
 if (($c$1$be$lcssa + -48 | 0) >>> 0 < 10) {
  $52 = $$lcssa18;
  $53 = $47;
  $c$27 = $c$1$be$lcssa;
  while (1) {
   $54 = ___muldi3($52 | 0, $53 | 0, 10, 0) | 0;
   $55 = tempRet0;
   $58 = _i64Add($c$27 | 0, (($c$27 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
   $60 = _i64Add($58 | 0, tempRet0 | 0, $54 | 0, $55 | 0) | 0;
   $61 = tempRet0;
   $62 = HEAP32[$0 >> 2] | 0;
   if ($62 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $62 + 1;
    $c$2$be = HEAPU8[$62 >> 0] | 0;
   } else $c$2$be = ___shgetc($f) | 0;
   if (($c$2$be + -48 | 0) >>> 0 < 10 & (($61 | 0) < 21474836 | ($61 | 0) == 21474836 & $60 >>> 0 < 2061584302)) {
    $52 = $60;
    $53 = $61;
    $c$27 = $c$2$be;
   } else {
    $98 = $60;
    $99 = $61;
    $c$2$be$lcssa = $c$2$be;
    break;
   }
  }
  $90 = $98;
  $91 = $99;
  $c$2$lcssa = $c$2$be$lcssa;
 } else {
  $90 = $$lcssa18;
  $91 = $47;
  $c$2$lcssa = $c$1$be$lcssa;
 }
 if (($c$2$lcssa + -48 | 0) >>> 0 < 10) do {
  $76 = HEAP32[$0 >> 2] | 0;
  if ($76 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $76 + 1;
   $c$3$be = HEAPU8[$76 >> 0] | 0;
  } else $c$3$be = ___shgetc($f) | 0;
 } while (($c$3$be + -48 | 0) >>> 0 < 10);
 if (HEAP32[$2 >> 2] | 0) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
 $89 = ($neg$0 | 0) != 0;
 $92 = _i64Subtract(0, 0, $90 | 0, $91 | 0) | 0;
 $96 = $89 ? tempRet0 : $91;
 $97 = $89 ? $92 : $90;
 tempRet0 = $96;
 return $97 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre$phi4Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $15 = 0, $20 = 0, $23 = 0, $25 = 0, $27 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $49 = 0, $50 = 0, $55 = 0, $56 = 0, $58 = 0, $59 = 0, $8 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 12 | 0;
 $__nm = sp;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  $8 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  FUNCTION_TABLE_viiiiii[$8 & 31]($agg$result, $this, $$byval_copy, $__iob, $__fl, $__v & 1);
 } else {
  __ZNKSt3__18ios_base6getlocEv($1, $__iob);
  __THREW__ = 0;
  $11 = invoke_iii(22, $1 | 0, 50360) | 0;
  $12 = __THREW__;
  __THREW__ = 0;
  do if ($12 & 1) {
   $55 = ___cxa_find_matching_catch() | 0;
   $56 = tempRet0;
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
   $$0 = $55;
   $$01 = $56;
  } else {
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
   $15 = HEAP32[$11 >> 2] | 0;
   if ($__v) FUNCTION_TABLE_vii[HEAP32[$15 + 24 >> 2] & 127]($__nm, $11); else FUNCTION_TABLE_vii[HEAP32[$15 + 28 >> 2] & 127]($__nm, $11);
   $20 = HEAP8[$__nm >> 0] | 0;
   if (!($20 & 1)) {
    $25 = $__nm + 4 | 0;
    $$ph = $25;
    $$pre$phi4Z2D = $__nm + 8 | 0;
    $$pre$phiZ2D = $25;
   } else {
    $23 = $__nm + 8 | 0;
    $$ph = HEAP32[$23 >> 2] | 0;
    $$pre$phi4Z2D = $23;
    $$pre$phiZ2D = $__nm + 4 | 0;
   }
   $27 = $20;
   $36 = $$ph;
   while (1) {
    if (!($27 & 1)) {
     $34 = $$pre$phiZ2D;
     $35 = ($27 & 255) >>> 1;
    } else {
     $34 = HEAP32[$$pre$phi4Z2D >> 2] | 0;
     $35 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    }
    if (($36 | 0) == ($34 + ($35 << 2) | 0)) {
     label = 24;
     break;
    }
    $38 = HEAP32[$36 >> 2] | 0;
    $39 = HEAP32[$__s >> 2] | 0;
    if ($39) {
     $41 = $39 + 24 | 0;
     $42 = HEAP32[$41 >> 2] | 0;
     if (($42 | 0) == (HEAP32[$39 + 28 >> 2] | 0)) {
      __THREW__ = 0;
      $49 = invoke_iii(HEAP32[(HEAP32[$39 >> 2] | 0) + 52 >> 2] | 0, $39 | 0, $38 | 0) | 0;
      $50 = __THREW__;
      __THREW__ = 0;
      if ($50 & 1) {
       label = 23;
       break;
      } else $$0$i$i = $49;
     } else {
      HEAP32[$41 >> 2] = $42 + 4;
      HEAP32[$42 >> 2] = $38;
      $$0$i$i = $38;
     }
     if (($$0$i$i | 0) == -1) HEAP32[$__s >> 2] = 0;
    }
    $27 = HEAP8[$__nm >> 0] | 0;
    $36 = $36 + 4 | 0;
   }
   if ((label | 0) == 23) {
    $58 = ___cxa_find_matching_catch() | 0;
    $59 = tempRet0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
    $$0 = $58;
    $$01 = $59;
    break;
   } else if ((label | 0) == 24) {
    HEAP32[$agg$result >> 2] = HEAP32[$__s >> 2];
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
    break L1;
   }
  } while (0);
  ___resumeException($$0 | 0);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre$phi4Z2D = 0, $$pre$phi6Z2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $15 = 0, $20 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $52 = 0, $53 = 0, $57 = 0, $58 = 0, $60 = 0, $61 = 0, $8 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 12 | 0;
 $__nm = sp;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  $8 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  FUNCTION_TABLE_viiiiii[$8 & 31]($agg$result, $this, $$byval_copy, $__iob, $__fl, $__v & 1);
 } else {
  __ZNKSt3__18ios_base6getlocEv($1, $__iob);
  __THREW__ = 0;
  $11 = invoke_iii(22, $1 | 0, 50352) | 0;
  $12 = __THREW__;
  __THREW__ = 0;
  do if ($12 & 1) {
   $57 = ___cxa_find_matching_catch() | 0;
   $58 = tempRet0;
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
   $$0 = $57;
   $$01 = $58;
  } else {
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
   $15 = HEAP32[$11 >> 2] | 0;
   if ($__v) FUNCTION_TABLE_vii[HEAP32[$15 + 24 >> 2] & 127]($__nm, $11); else FUNCTION_TABLE_vii[HEAP32[$15 + 28 >> 2] & 127]($__nm, $11);
   $20 = HEAP8[$__nm >> 0] | 0;
   if (!($20 & 1)) {
    $25 = $__nm + 1 | 0;
    $$ph = $25;
    $$pre$phi4Z2D = $25;
    $$pre$phi6Z2D = $__nm + 8 | 0;
   } else {
    $23 = $__nm + 8 | 0;
    $$ph = HEAP32[$23 >> 2] | 0;
    $$pre$phi4Z2D = $__nm + 1 | 0;
    $$pre$phi6Z2D = $23;
   }
   $26 = $__nm + 4 | 0;
   $28 = $20;
   $37 = $$ph;
   L15 : while (1) {
    if (!($28 & 1)) {
     $35 = $$pre$phi4Z2D;
     $36 = ($28 & 255) >>> 1;
    } else {
     $35 = HEAP32[$$pre$phi6Z2D >> 2] | 0;
     $36 = HEAP32[$26 >> 2] | 0;
    }
    if (($37 | 0) == ($35 + $36 | 0)) {
     label = 24;
     break;
    }
    $39 = HEAP8[$37 >> 0] | 0;
    $40 = HEAP32[$__s >> 2] | 0;
    do if ($40) {
     $42 = $40 + 24 | 0;
     $43 = HEAP32[$42 >> 2] | 0;
     if (($43 | 0) != (HEAP32[$40 + 28 >> 2] | 0)) {
      HEAP32[$42 >> 2] = $43 + 1;
      HEAP8[$43 >> 0] = $39;
      break;
     }
     __THREW__ = 0;
     $52 = invoke_iii(HEAP32[(HEAP32[$40 >> 2] | 0) + 52 >> 2] | 0, $40 | 0, $39 & 255 | 0) | 0;
     $53 = __THREW__;
     __THREW__ = 0;
     if ($53 & 1) {
      label = 23;
      break L15;
     }
     if (($52 | 0) == -1) HEAP32[$__s >> 2] = 0;
    } while (0);
    $28 = HEAP8[$__nm >> 0] | 0;
    $37 = $37 + 1 | 0;
   }
   if ((label | 0) == 23) {
    $60 = ___cxa_find_matching_catch() | 0;
    $61 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
    $$0 = $60;
    $$01 = $61;
    break;
   } else if ((label | 0) == 24) {
    HEAP32[$agg$result >> 2] = HEAP32[$__s >> 2];
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
    break L1;
   }
  } while (0);
  ___resumeException($$0 | 0);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIcE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $$0 = 0, $0 = 0, $12 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $36 = 0, $38 = 0, $4 = 0, $44 = 0, $57 = 0, $6 = 0, $61 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$0 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$0$lcssa = 0, $__nread$0$lcssa17 = 0, $__nread$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__enxt = sp + 4 | 0;
 $__inxt = sp;
 $0 = $this + 52 | 0;
 L1 : do if (!(HEAP8[$0 >> 0] | 0)) {
  $6 = HEAP32[$this + 44 >> 2] | 0;
  $8 = ($6 | 0) > 1 ? $6 : 1;
  $9 = $this + 32 | 0;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) >= ($8 | 0)) break;
   $12 = _getc(HEAP32[$9 >> 2] | 0) | 0;
   if (($12 | 0) == -1) {
    label = 26;
    break;
   }
   HEAP8[$__extbuf + $__i$0 >> 0] = $12;
   $__i$0 = $__i$0 + 1 | 0;
  }
  if ((label | 0) == 26) {
   $$0 = -1;
   break;
  }
  do if (!(HEAP8[$this + 53 >> 0] | 0)) {
   $20 = $this + 40 | 0;
   $21 = $this + 36 | 0;
   $22 = $__1buf + 1 | 0;
   $__nread$0 = $8;
   while (1) {
    $24 = HEAP32[$20 >> 2] | 0;
    $25 = $24;
    $27 = HEAP32[$25 >> 2] | 0;
    $30 = HEAP32[$25 + 4 >> 2] | 0;
    $31 = HEAP32[$21 >> 2] | 0;
    $32 = $__extbuf + $__nread$0 | 0;
    $36 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$31 >> 2] | 0) + 16 >> 2] & 15]($31, $24, $__extbuf, $32, $__enxt, $__1buf, $22, $__inxt) | 0;
    if (($36 | 0) == 2) {
     label = 25;
     break;
    } else if (($36 | 0) == 3) {
     $__nread$0$lcssa17 = $__nread$0;
     label = 14;
     break;
    } else if (($36 | 0) != 1) {
     $__nread$0$lcssa = $__nread$0;
     label = 16;
     break;
    }
    $38 = HEAP32[$20 >> 2] | 0;
    HEAP32[$38 >> 2] = $27;
    HEAP32[$38 + 4 >> 2] = $30;
    if (($__nread$0 | 0) == 8) {
     label = 25;
     break;
    }
    $44 = _getc(HEAP32[$9 >> 2] | 0) | 0;
    if (($44 | 0) == -1) {
     label = 25;
     break;
    }
    HEAP8[$32 >> 0] = $44;
    $__nread$0 = $__nread$0 + 1 | 0;
   }
   if ((label | 0) == 14) {
    HEAP8[$__1buf >> 0] = HEAP8[$__extbuf >> 0] | 0;
    $__nread$2 = $__nread$0$lcssa17;
    break;
   } else if ((label | 0) == 16) {
    $__nread$2 = $__nread$0$lcssa;
    break;
   } else if ((label | 0) == 25) {
    $$0 = -1;
    break L1;
   }
  } else {
   HEAP8[$__1buf >> 0] = HEAP8[$__extbuf >> 0] | 0;
   $__nread$2 = $8;
  } while (0);
  do if ($__consume) {
   $57 = HEAP8[$__1buf >> 0] | 0;
   HEAP32[$this + 48 >> 2] = $57 & 255;
   $61 = $57;
  } else {
   $__i2$0 = $__nread$2;
   while (1) {
    if (($__i2$0 | 0) <= 0) {
     label = 22;
     break;
    }
    $__i2$0 = $__i2$0 + -1 | 0;
    if ((_ungetc(HEAPU8[$__extbuf + $__i2$0 >> 0] | 0, HEAP32[$9 >> 2] | 0) | 0) == -1) {
     label = 24;
     break;
    }
   }
   if ((label | 0) == 22) {
    $61 = HEAP8[$__1buf >> 0] | 0;
    break;
   } else if ((label | 0) == 24) {
    $$0 = -1;
    break L1;
   }
  } while (0);
  $$0 = $61 & 255;
 } else {
  $3 = $this + 48 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if ($__consume) {
   HEAP32[$3 >> 2] = -1;
   HEAP8[$0 >> 0] = 0;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _wcsnrtombs($dst, $wcs, $wn, $n, $st) {
 $dst = $dst | 0;
 $wcs = $wcs | 0;
 $wn = $wn | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0$lcssa = 0, $$0$lcssa$ph = 0, $$014$$0 = 0, $$014$lcssa = 0, $$014$lcssa$ph = 0, $$01428 = 0, $$031 = 0, $$115 = 0, $$2 = 0, $$3 = 0, $$lcssa = 0, $$lcssa61 = 0, $$ph = 0, $0 = 0, $1 = 0, $12 = 0, $13 = 0, $16 = 0, $21 = 0, $22 = 0, $31 = 0, $33 = 0, $4 = 0, $6 = 0, $7 = 0, $buf = 0, $cnt$0$lcssa = 0, $cnt$0$lcssa$ph = 0, $cnt$029 = 0, $cnt$2 = 0, $cnt$2$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $s$0$lcssa = 0, $s$0$lcssa$ph = 0, $s$030 = 0, $s$1 = 0, $s$2 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $buf = sp + 8 | 0;
 $ws = sp;
 $0 = HEAP32[$wcs >> 2] | 0;
 HEAP32[$ws >> 2] = $0;
 $1 = ($dst | 0) != 0;
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 do if (($n$ | 0) != 0 & ($0 | 0) != 0) {
  $$01428 = $n$;
  $$031 = $wn;
  $33 = $0;
  $cnt$029 = 0;
  $s$030 = $dst$;
  while (1) {
   $4 = $$031 >>> 0 >= $$01428 >>> 0;
   if (!($4 | $$031 >>> 0 > 32)) {
    $$0$lcssa$ph = $$031;
    $$014$lcssa$ph = $$01428;
    $$ph = $33;
    $cnt$0$lcssa$ph = $cnt$029;
    $s$0$lcssa$ph = $s$030;
    label = 8;
    break;
   }
   $$014$$0 = $4 ? $$01428 : $$031;
   $6 = $$031 - $$014$$0 | 0;
   $7 = _wcsrtombs($s$030, $ws, $$014$$0, 0) | 0;
   if (($7 | 0) == -1) {
    label = 16;
    break;
   }
   if (($s$030 | 0) == ($buf | 0)) {
    $$115 = $$01428;
    $s$1 = $buf;
   } else {
    $$115 = $$01428 - $7 | 0;
    $s$1 = $s$030 + $7 | 0;
   }
   $12 = $7 + $cnt$029 | 0;
   $13 = HEAP32[$ws >> 2] | 0;
   if (($$115 | 0) != 0 & ($13 | 0) != 0) {
    $$01428 = $$115;
    $$031 = $6;
    $33 = $13;
    $cnt$029 = $12;
    $s$030 = $s$1;
   } else {
    $$0$lcssa$ph = $6;
    $$014$lcssa$ph = $$115;
    $$ph = $13;
    $cnt$0$lcssa$ph = $12;
    $s$0$lcssa$ph = $s$1;
    label = 8;
    break;
   }
  }
  if ((label | 0) == 8) {
   $$0$lcssa = $$0$lcssa$ph;
   $$014$lcssa = $$014$lcssa$ph;
   $16 = $$ph;
   $cnt$0$lcssa = $cnt$0$lcssa$ph;
   $s$0$lcssa = $s$0$lcssa$ph;
   label = 9;
   break;
  } else if ((label | 0) == 16) {
   $cnt$3 = -1;
   break;
  }
 } else {
  $$0$lcssa = $wn;
  $$014$lcssa = $n$;
  $16 = $0;
  $cnt$0$lcssa = 0;
  $s$0$lcssa = $dst$;
  label = 9;
 } while (0);
 do if ((label | 0) == 9) if (($$0$lcssa | 0) != 0 & (($$014$lcssa | 0) != 0 & ($16 | 0) != 0)) {
  $$2 = $$0$lcssa;
  $$3 = $$014$lcssa;
  $21 = $16;
  $cnt$2 = $cnt$0$lcssa;
  $s$2 = $s$0$lcssa;
  while (1) {
   $22 = _wcrtomb($s$2, HEAP32[$21 >> 2] | 0, 0) | 0;
   if (($22 + 1 | 0) >>> 0 < 2) {
    $$lcssa = $22;
    $cnt$2$lcssa = $cnt$2;
    break;
   }
   $21 = (HEAP32[$ws >> 2] | 0) + 4 | 0;
   HEAP32[$ws >> 2] = $21;
   $$2 = $$2 + -1 | 0;
   $31 = $cnt$2 + 1 | 0;
   if (!(($$2 | 0) != 0 & ($$3 | 0) != ($22 | 0))) {
    $$lcssa61 = $31;
    label = 15;
    break;
   } else {
    $$3 = $$3 - $22 | 0;
    $cnt$2 = $31;
    $s$2 = $s$2 + $22 | 0;
   }
  }
  if ((label | 0) == 15) {
   $cnt$3 = $$lcssa61;
   break;
  }
  if (!$$lcssa) {
   HEAP32[$ws >> 2] = 0;
   $cnt$3 = $cnt$2$lcssa;
  } else $cnt$3 = -1;
 } else $cnt$3 = $cnt$0$lcssa; while (0);
 if (!$1) {
  STACKTOP = sp;
  return $cnt$3 | 0;
 }
 HEAP32[$wcs >> 2] = HEAP32[$ws >> 2];
 STACKTOP = sp;
 return $cnt$3 | 0;
}

function _memchr($src, $c, $n) {
 $src = $src | 0;
 $c = $c | 0;
 $n = $n | 0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$019$lcssa = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$24$ph = 0, $$3 = 0, $$3$ph = 0, $$lcssa = 0, $$lcssa57 = 0, $$lcssa58 = 0, $$lcssa61 = 0, $$lcssa62 = 0, $$lcssa63 = 0, $0 = 0, $13 = 0, $15 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $32 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$020$lcssa = 0, $s$15 = 0, $s$15$ph = 0, $s$2 = 0, $s$2$ph = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0;
 $0 = $c & 255;
 $4 = ($n | 0) != 0;
 do if ($4 & ($src & 3 | 0) != 0) {
  $5 = $c & 255;
  $$019 = $n;
  $s$020 = $src;
  while (1) {
   if ((HEAP8[$s$020 >> 0] | 0) == $5 << 24 >> 24) {
    $$019$lcssa = $$019;
    $s$020$lcssa = $s$020;
    label = 7;
    break;
   }
   $8 = $s$020 + 1 | 0;
   $9 = $$019 + -1 | 0;
   $13 = ($9 | 0) != 0;
   if ($13 & ($8 & 3 | 0) != 0) {
    $$019 = $9;
    $s$020 = $8;
   } else {
    $$lcssa61 = $8;
    $$lcssa62 = $9;
    $$lcssa63 = $13;
    label = 5;
    break;
   }
  }
  if ((label | 0) == 5) {
   $$0$lcssa = $$lcssa62;
   $$lcssa = $$lcssa63;
   $s$0$lcssa = $$lcssa61;
   label = 6;
   break;
  } else if ((label | 0) == 7) {
   $$0$lcssa44 = $$019$lcssa;
   $s$0$lcssa43 = $s$020$lcssa;
   break;
  }
 } else {
  $$0$lcssa = $n;
  $$lcssa = $4;
  $s$0$lcssa = $src;
  label = 6;
 } while (0);
 if ((label | 0) == 6) if ($$lcssa) {
  $$0$lcssa44 = $$0$lcssa;
  $s$0$lcssa43 = $s$0$lcssa;
 } else {
  $$3 = 0;
  $s$2 = $s$0$lcssa;
  $35 = ($$3 | 0) != 0;
  $36 = $35 ? $s$2 : 0;
  return $36 | 0;
 }
 $15 = $c & 255;
 if ((HEAP8[$s$0$lcssa43 >> 0] | 0) == $15 << 24 >> 24) {
  $$3 = $$0$lcssa44;
  $s$2 = $s$0$lcssa43;
  $35 = ($$3 | 0) != 0;
  $36 = $35 ? $s$2 : 0;
  return $36 | 0;
 }
 $17 = Math_imul($0, 16843009) | 0;
 do if ($$0$lcssa44 >>> 0 > 3) {
  $$110 = $$0$lcssa44;
  $w$011 = $s$0$lcssa43;
  while (1) {
   $20 = HEAP32[$w$011 >> 2] ^ $17;
   if (($20 & -2139062144 ^ -2139062144) & $20 + -16843009) {
    $$110$lcssa = $$110;
    $w$011$lcssa = $w$011;
    label = 12;
    break;
   }
   $26 = $w$011 + 4 | 0;
   $27 = $$110 + -4 | 0;
   if ($27 >>> 0 > 3) {
    $$110 = $27;
    $w$011 = $26;
   } else {
    $$lcssa57 = $26;
    $$lcssa58 = $27;
    label = 14;
    break;
   }
  }
  if ((label | 0) == 12) {
   $$24$ph = $$110$lcssa;
   $s$15$ph = $w$011$lcssa;
   break;
  } else if ((label | 0) == 14) {
   $$1$lcssa = $$lcssa58;
   $w$0$lcssa = $$lcssa57;
   label = 15;
   break;
  }
 } else {
  $$1$lcssa = $$0$lcssa44;
  $w$0$lcssa = $s$0$lcssa43;
  label = 15;
 } while (0);
 if ((label | 0) == 15) if (!$$1$lcssa) {
  $$3 = 0;
  $s$2 = $w$0$lcssa;
  $35 = ($$3 | 0) != 0;
  $36 = $35 ? $s$2 : 0;
  return $36 | 0;
 } else {
  $$24$ph = $$1$lcssa;
  $s$15$ph = $w$0$lcssa;
 }
 $$24 = $$24$ph;
 $s$15 = $s$15$ph;
 while (1) {
  if ((HEAP8[$s$15 >> 0] | 0) == $15 << 24 >> 24) {
   $$3$ph = $$24;
   $s$2$ph = $s$15;
   break;
  }
  $32 = $s$15 + 1 | 0;
  $$24 = $$24 + -1 | 0;
  if (!$$24) {
   $$3$ph = 0;
   $s$2$ph = $32;
   break;
  } else $s$15 = $32;
 }
 $$3 = $$3$ph;
 $s$2 = $s$2$ph;
 $35 = ($$3 | 0) != 0;
 $36 = $35 ? $s$2 : 0;
 return $36 | 0;
}

function __ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEEC2ERKS4_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$01$i = 0, $$lcssa8 = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $47 = 0, $7 = 0, $8 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0;
 HEAP32[$this >> 2] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $this + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $__x + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$__x >> 2] | 0;
 $7 = $3 - $4 | 0;
 $8 = ($7 | 0) / 40 | 0;
 if (($3 | 0) == ($4 | 0)) return;
 if ($8 >>> 0 > 107374182) {
  __THREW__ = 0;
  invoke_vi(182, $this | 0);
  $11 = __THREW__;
  __THREW__ = 0;
  if ($11 & 1) label = 12; else label = 4;
 } else label = 4;
 do if ((label | 0) == 4) {
  __THREW__ = 0;
  $13 = invoke_ii(67, $7 | 0) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) label = 12; else {
   HEAP32[$0 >> 2] = $13;
   HEAP32[$this >> 2] = $13;
   HEAP32[$1 >> 2] = $13 + ($8 * 40 | 0);
   $17 = HEAP32[$__x >> 2] | 0;
   $18 = HEAP32[$2 >> 2] | 0;
   if (($17 | 0) == ($18 | 0)) return;
   $$01$i = $17;
   $20 = $13;
   while (1) {
    __THREW__ = 0;
    invoke_vii(40, $20 | 0, $$01$i | 0);
    $21 = __THREW__;
    __THREW__ = 0;
    if ($21 & 1) {
     label = 11;
     break;
    }
    $23 = $20 + 12 | 0;
    $24 = $$01$i + 12 | 0;
    HEAP32[$23 + 0 >> 2] = HEAP32[$24 + 0 >> 2];
    HEAP32[$23 + 4 >> 2] = HEAP32[$24 + 4 >> 2];
    HEAP32[$23 + 8 >> 2] = HEAP32[$24 + 8 >> 2];
    HEAP32[$23 + 12 >> 2] = HEAP32[$24 + 12 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $20 + 28 | 0, $$01$i + 28 | 0);
    $27 = __THREW__;
    __THREW__ = 0;
    if ($27 & 1) {
     $$lcssa8 = $20;
     label = 9;
     break;
    }
    $20 = (HEAP32[$0 >> 2] | 0) + 40 | 0;
    HEAP32[$0 >> 2] = $20;
    $$01$i = $$01$i + 40 | 0;
    if (($$01$i | 0) == ($18 | 0)) {
     label = 20;
     break;
    }
   }
   if ((label | 0) == 9) {
    $29 = ___cxa_find_matching_catch() | 0;
    $30 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$lcssa8);
    $eh$lpad$body$index3Z2D = $30;
    $eh$lpad$body$indexZ2D = $29;
    break;
   } else if ((label | 0) == 11) {
    $34 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index3Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $34;
    break;
   } else if ((label | 0) == 20) return;
  }
 } while (0);
 if ((label | 0) == 12) {
  $36 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index3Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $36;
 }
 $38 = HEAP32[$this >> 2] | 0;
 if (!$38) ___resumeException($eh$lpad$body$indexZ2D | 0);
 $40 = HEAP32[$0 >> 2] | 0;
 if (($40 | 0) == ($38 | 0)) $47 = $38; else {
  $43 = $40;
  do {
   $42 = $43 + -40 | 0;
   HEAP32[$0 >> 2] = $42;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43 + -12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
   $43 = HEAP32[$0 >> 2] | 0;
  } while (($43 | 0) != ($38 | 0));
  $47 = HEAP32[$this >> 2] | 0;
 }
 __ZdlPv($47);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $13 = 0, $16 = 0, $26 = 0, $28 = 0, $3 = 0, $41 = 0, $42 = 0, $43 = 0, $51 = 0, $54 = 0, $66 = 0, $78 = 0, $79 = 0, $80 = 0, label = 0;
 L1 : while (1) {
  $0 = HEAP32[$__b >> 2] | 0;
  do if (!$0) $78 = 1; else {
   $3 = HEAP32[$0 + 12 >> 2] | 0;
   if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
   if (($$0$i$i$i$i | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $78 = 1;
    break;
   } else {
    $78 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $13 = HEAP32[$__e >> 2] | 0;
  do if (!$13) label = 15; else {
   $16 = HEAP32[$13 + 12 >> 2] | 0;
   if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
   if (($$0$i$i1$i$i | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 15;
    break;
   } else if ($78) {
    $79 = $13;
    break;
   } else {
    $$pre$i3$i$i9 = $13;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else $79 = 0;
  }
  $26 = HEAP32[$__b >> 2] | 0;
  $28 = HEAP32[$26 + 12 >> 2] | 0;
  if (($28 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 127]($26) | 0; else $$0$i$i = HEAP32[$28 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 8192, $$0$i$i) | 0)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b >> 2] | 0;
  $42 = $41 + 12 | 0;
  $43 = HEAP32[$42 >> 2] | 0;
  if (($43 | 0) == (HEAP32[$41 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 40 >> 2] & 127]($41) | 0; else HEAP32[$42 >> 2] = $43 + 4;
 }
 $51 = HEAP32[$__b >> 2] | 0;
 do if (!$51) $80 = 1; else {
  $54 = HEAP32[$51 + 12 >> 2] | 0;
  if (($54 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$51 >> 2] | 0) + 36 >> 2] & 127]($51) | 0; else $$0$i$i$i$i1 = HEAP32[$54 >> 2] | 0;
  if (($$0$i$i$i$i1 | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $80 = 1;
   break;
  } else {
   $80 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i3$i$i9) label = 38; else {
  $66 = HEAP32[$$pre$i3$i$i9 + 12 >> 2] | 0;
  if (($66 | 0) == (HEAP32[$$pre$i3$i$i9 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i9 >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i9) | 0; else $$0$i$i1$i$i7 = HEAP32[$66 >> 2] | 0;
  if (($$0$i$i1$i$i7 | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 38;
   break;
  } else if ($80) break; else {
   label = 40;
   break;
  }
 } while (0);
 if ((label | 0) == 38) if ($80) label = 40;
 if ((label | 0) == 40) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 return;
}

function __ZNSt3__110__stdinbufIwE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $$0 = 0, $0 = 0, $12 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0, $4 = 0, $45 = 0, $59 = 0, $6 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$0 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$0$lcssa = 0, $__nread$0$lcssa17 = 0, $__nread$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__enxt = sp + 4 | 0;
 $__inxt = sp;
 $0 = $this + 52 | 0;
 L1 : do if (!(HEAP8[$0 >> 0] | 0)) {
  $6 = HEAP32[$this + 44 >> 2] | 0;
  $8 = ($6 | 0) > 1 ? $6 : 1;
  $9 = $this + 32 | 0;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) >= ($8 | 0)) break;
   $12 = _getc(HEAP32[$9 >> 2] | 0) | 0;
   if (($12 | 0) == -1) {
    label = 25;
    break;
   }
   HEAP8[$__extbuf + $__i$0 >> 0] = $12;
   $__i$0 = $__i$0 + 1 | 0;
  }
  if ((label | 0) == 25) {
   $$0 = -1;
   break;
  }
  do if (!(HEAP8[$this + 53 >> 0] | 0)) {
   $20 = $this + 40 | 0;
   $21 = $this + 36 | 0;
   $22 = $__1buf + 4 | 0;
   $__nread$0 = $8;
   while (1) {
    $25 = HEAP32[$20 >> 2] | 0;
    $26 = $25;
    $28 = HEAP32[$26 >> 2] | 0;
    $31 = HEAP32[$26 + 4 >> 2] | 0;
    $32 = HEAP32[$21 >> 2] | 0;
    $33 = $__extbuf + $__nread$0 | 0;
    $37 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$32 >> 2] | 0) + 16 >> 2] & 15]($32, $25, $__extbuf, $33, $__enxt, $__1buf, $22, $__inxt) | 0;
    if (($37 | 0) == 3) {
     $__nread$0$lcssa17 = $__nread$0;
     label = 14;
     break;
    } else if (($37 | 0) == 2) {
     label = 24;
     break;
    } else if (($37 | 0) != 1) {
     $__nread$0$lcssa = $__nread$0;
     label = 16;
     break;
    }
    $39 = HEAP32[$20 >> 2] | 0;
    HEAP32[$39 >> 2] = $28;
    HEAP32[$39 + 4 >> 2] = $31;
    if (($__nread$0 | 0) == 8) {
     label = 24;
     break;
    }
    $45 = _getc(HEAP32[$9 >> 2] | 0) | 0;
    if (($45 | 0) == -1) {
     label = 24;
     break;
    }
    HEAP8[$33 >> 0] = $45;
    $__nread$0 = $__nread$0 + 1 | 0;
   }
   if ((label | 0) == 14) {
    HEAP32[$__1buf >> 2] = HEAP8[$__extbuf >> 0];
    $__nread$2 = $__nread$0$lcssa17;
    break;
   } else if ((label | 0) == 16) {
    $__nread$2 = $__nread$0$lcssa;
    break;
   } else if ((label | 0) == 24) {
    $$0 = -1;
    break L1;
   }
  } else {
   HEAP32[$__1buf >> 2] = HEAP8[$__extbuf >> 0];
   $__nread$2 = $8;
  } while (0);
  if ($__consume) {
   $59 = HEAP32[$__1buf >> 2] | 0;
   HEAP32[$this + 48 >> 2] = $59;
   $$0 = $59;
   break;
  }
  $__i2$0 = $__nread$2;
  while (1) {
   if (($__i2$0 | 0) <= 0) {
    label = 22;
    break;
   }
   $__i2$0 = $__i2$0 + -1 | 0;
   if ((_ungetc(HEAP8[$__extbuf + $__i2$0 >> 0] | 0, HEAP32[$9 >> 2] | 0) | 0) == -1) {
    label = 23;
    break;
   }
  }
  if ((label | 0) == 22) {
   $$0 = HEAP32[$__1buf >> 2] | 0;
   break;
  } else if ((label | 0) == 23) {
   $$0 = -1;
   break;
  }
 } else {
  $3 = $this + 48 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if ($__consume) {
   HEAP32[$3 >> 2] = -1;
   HEAP8[$0 >> 0] = 0;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $42 = 0, $9 = 0, $__i$0$i$i$i = 0;
 do if (!(HEAP8[50536] | 0)) if (___cxa_guard_acquire(50536) | 0) {
  if (!(HEAP8[57184] | 0)) if (___cxa_guard_acquire(57184) | 0) {
   $9 = 57016;
   do {
    $__i$0$i$i$i = 0;
    while (1) {
     if (($__i$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($__i$0$i$i$i << 2) >> 2] = 0;
     $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 57184);
   ___cxa_atexit(194, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(57184);
  }
  __THREW__ = 0;
  invoke_iii(38, 57016, 57192) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(38, 57028, 57224) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    __THREW__ = 0;
    invoke_iii(38, 57040, 57256) | 0;
    $17 = __THREW__;
    __THREW__ = 0;
    if (!($17 & 1)) {
     __THREW__ = 0;
     invoke_iii(38, 57052, 57288) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if (!($19 & 1)) {
      __THREW__ = 0;
      invoke_iii(38, 57064, 57328) | 0;
      $21 = __THREW__;
      __THREW__ = 0;
      if (!($21 & 1)) {
       __THREW__ = 0;
       invoke_iii(38, 57076, 57368) | 0;
       $23 = __THREW__;
       __THREW__ = 0;
       if (!($23 & 1)) {
        __THREW__ = 0;
        invoke_iii(38, 57088, 57400) | 0;
        $25 = __THREW__;
        __THREW__ = 0;
        if (!($25 & 1)) {
         __THREW__ = 0;
         invoke_iii(38, 57100, 57440) | 0;
         $27 = __THREW__;
         __THREW__ = 0;
         if (!($27 & 1)) {
          __THREW__ = 0;
          invoke_iii(38, 57112, 57456) | 0;
          $29 = __THREW__;
          __THREW__ = 0;
          if (!($29 & 1)) {
           __THREW__ = 0;
           invoke_iii(38, 57124, 57472) | 0;
           $31 = __THREW__;
           __THREW__ = 0;
           if (!($31 & 1)) {
            __THREW__ = 0;
            invoke_iii(38, 57136, 57488) | 0;
            $33 = __THREW__;
            __THREW__ = 0;
            if (!($33 & 1)) {
             __THREW__ = 0;
             invoke_iii(38, 57148, 57504) | 0;
             $35 = __THREW__;
             __THREW__ = 0;
             if (!($35 & 1)) {
              __THREW__ = 0;
              invoke_iii(38, 57160, 57520) | 0;
              $37 = __THREW__;
              __THREW__ = 0;
              if (!($37 & 1)) {
               __THREW__ = 0;
               invoke_iii(38, 57172, 57536) | 0;
               $39 = __THREW__;
               __THREW__ = 0;
               if (!($39 & 1)) {
                HEAP32[12632] = 57016;
                ___cxa_guard_release(50536);
                break;
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
  $42 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(50536);
  ___resumeException($42 | 0);
 } while (0);
 return HEAP32[12632] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $42 = 0, $9 = 0, $__i$0$i$i$i = 0;
 do if (!(HEAP8[50520] | 0)) if (___cxa_guard_acquire(50520) | 0) {
  if (!(HEAP8[57720] | 0)) if (___cxa_guard_acquire(57720) | 0) {
   $9 = 57552;
   do {
    $__i$0$i$i$i = 0;
    while (1) {
     if (($__i$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($__i$0$i$i$i << 2) >> 2] = 0;
     $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 57720);
   ___cxa_atexit(193, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(57720);
  }
  __THREW__ = 0;
  invoke_iii(19, 57552, 57728) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(19, 57564, 57736) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    __THREW__ = 0;
    invoke_iii(19, 57576, 57744) | 0;
    $17 = __THREW__;
    __THREW__ = 0;
    if (!($17 & 1)) {
     __THREW__ = 0;
     invoke_iii(19, 57588, 57752) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if (!($19 & 1)) {
      __THREW__ = 0;
      invoke_iii(19, 57600, 57768) | 0;
      $21 = __THREW__;
      __THREW__ = 0;
      if (!($21 & 1)) {
       __THREW__ = 0;
       invoke_iii(19, 57612, 57784) | 0;
       $23 = __THREW__;
       __THREW__ = 0;
       if (!($23 & 1)) {
        __THREW__ = 0;
        invoke_iii(19, 57624, 57792) | 0;
        $25 = __THREW__;
        __THREW__ = 0;
        if (!($25 & 1)) {
         __THREW__ = 0;
         invoke_iii(19, 57636, 57808) | 0;
         $27 = __THREW__;
         __THREW__ = 0;
         if (!($27 & 1)) {
          __THREW__ = 0;
          invoke_iii(19, 57648, 57816) | 0;
          $29 = __THREW__;
          __THREW__ = 0;
          if (!($29 & 1)) {
           __THREW__ = 0;
           invoke_iii(19, 57660, 57824) | 0;
           $31 = __THREW__;
           __THREW__ = 0;
           if (!($31 & 1)) {
            __THREW__ = 0;
            invoke_iii(19, 57672, 57832) | 0;
            $33 = __THREW__;
            __THREW__ = 0;
            if (!($33 & 1)) {
             __THREW__ = 0;
             invoke_iii(19, 57684, 57840) | 0;
             $35 = __THREW__;
             __THREW__ = 0;
             if (!($35 & 1)) {
              __THREW__ = 0;
              invoke_iii(19, 57696, 57848) | 0;
              $37 = __THREW__;
              __THREW__ = 0;
              if (!($37 & 1)) {
               __THREW__ = 0;
               invoke_iii(19, 57708, 57856) | 0;
               $39 = __THREW__;
               __THREW__ = 0;
               if (!($39 & 1)) {
                HEAP32[12628] = 57552;
                ___cxa_guard_release(50520);
                break;
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
  $42 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(50520);
  ___resumeException($42 | 0);
 } while (0);
 return HEAP32[12628] | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE13__lower_boundIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_SN_SN_($agg$result, $this, $__v, $__root, $__result) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 $__root = $__root | 0;
 $__result = $__result | 0;
 var $$0$ph$lcssa = 0, $$0$ph7 = 0, $$0$ph7$lcssa = 0, $$0$ph7$lcssa27 = 0, $$01$lcssa3 = 0, $$01$lcssa3$lcssa = 0, $$01$ph6 = 0, $$014 = 0, $$014$lcssa = 0, $$014$us = 0, $$014$us$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $33 = 0, $34 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $8 = 0, label = 0;
 if (!$__root) {
  $$0$ph$lcssa = $__result;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 }
 $1 = HEAP8[$__v >> 0] | 0;
 $3 = ($1 & 1) == 0;
 $5 = ($1 & 255) >>> 1;
 $6 = $__v + 1 | 0;
 $8 = HEAP32[$__v + 8 >> 2] | 0;
 $10 = HEAP32[$__v + 4 >> 2] | 0;
 $$0$ph7 = $__result;
 $$01$ph6 = $__root;
 L4 : while (1) {
  if ($3) {
   $$014$us = $$01$ph6;
   while (1) {
    $11 = $$014$us + 16 | 0;
    $12 = HEAP8[$11 >> 0] | 0;
    if (!($12 & 1)) {
     $23 = ($12 & 255) >>> 1;
     $25 = $11 + 1 | 0;
    } else {
     $23 = HEAP32[$$014$us + 20 >> 2] | 0;
     $25 = HEAP32[$$014$us + 24 >> 2] | 0;
    }
    $26 = _memcmp($25, $6, $5 >>> 0 < $23 >>> 0 ? $5 : $23) | 0;
    if (!$26) {
     if ($23 >>> 0 >= $5 >>> 0) {
      $$014$us$lcssa = $$014$us;
      break;
     }
    } else if (($26 | 0) >= 0) {
     $$014$us$lcssa = $$014$us;
     break;
    }
    $$014$us = HEAP32[$$014$us + 4 >> 2] | 0;
    if (!$$014$us) {
     $$0$ph7$lcssa27 = $$0$ph7;
     label = 23;
     break L4;
    }
   }
   $$01$lcssa3 = $$014$us$lcssa;
  } else {
   $$014 = $$01$ph6;
   while (1) {
    $33 = $$014 + 16 | 0;
    $34 = HEAP8[$33 >> 0] | 0;
    if (!($34 & 1)) {
     $45 = ($34 & 255) >>> 1;
     $47 = $33 + 1 | 0;
    } else {
     $45 = HEAP32[$$014 + 20 >> 2] | 0;
     $47 = HEAP32[$$014 + 24 >> 2] | 0;
    }
    $48 = _memcmp($47, $8, $10 >>> 0 < $45 >>> 0 ? $10 : $45) | 0;
    if (!$48) {
     if ($45 >>> 0 >= $10 >>> 0) {
      $$014$lcssa = $$014;
      break;
     }
    } else if (($48 | 0) >= 0) {
     $$014$lcssa = $$014;
     break;
    }
    $$014 = HEAP32[$$014 + 4 >> 2] | 0;
    if (!$$014) {
     $$0$ph7$lcssa = $$0$ph7;
     label = 24;
     break L4;
    }
   }
   $$01$lcssa3 = $$014$lcssa;
  }
  $$01$ph6 = HEAP32[$$01$lcssa3 >> 2] | 0;
  if (!$$01$ph6) {
   $$01$lcssa3$lcssa = $$01$lcssa3;
   label = 25;
   break;
  } else $$0$ph7 = $$01$lcssa3;
 }
 if ((label | 0) == 23) {
  $$0$ph$lcssa = $$0$ph7$lcssa27;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 } else if ((label | 0) == 24) {
  $$0$ph$lcssa = $$0$ph7$lcssa;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 } else if ((label | 0) == 25) {
  $$0$ph$lcssa = $$01$lcssa3$lcssa;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 }
}

function __ZN6ObjectC2ERK13LocationRangeRKNSt3__14listINS_5FieldENS3_9allocatorIS5_EEEE($this, $lr, $fields) {
 $this = $this | 0;
 $lr = $lr | 0;
 $fields = $fields | 0;
 var $$lcssa = 0, $$lcssa11 = 0, $$pre = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $27 = 0, $30 = 0, $31 = 0, $33 = 0, $4 = 0, $42 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$01$i$i$i = 0, label = 0, $20$looptemp = 0, $__f$01$i$i$i$looptemp = 0;
 HEAP32[$this >> 2] = 35936;
 $0 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $lr);
 $1 = $this + 16 | 0;
 $2 = $lr + 12 | 0;
 HEAP32[$1 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
 HEAP32[$1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$1 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$1 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
 HEAP32[$this + 32 >> 2] = 15;
 $4 = $this + 36 | 0;
 HEAP32[$4 >> 2] = 0;
 $5 = $this + 40 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this >> 2] = 37840;
 $7 = $this + 48 | 0;
 HEAP32[$7 >> 2] = $7;
 $8 = $this + 52 | 0;
 HEAP32[$8 >> 2] = $7;
 $9 = $this + 56 | 0;
 HEAP32[$9 >> 2] = 0;
 $11 = HEAP32[$fields + 4 >> 2] | 0;
 if (($11 | 0) == ($fields | 0)) return;
 $17 = $11;
 $20 = $7;
 $23 = 0;
 while (1) {
  __THREW__ = 0;
  $20$looptemp = $20;
  $20 = invoke_ii(67, 20) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) {
   $$lcssa = $20$looptemp;
   $$lcssa11 = $23;
   break;
  }
  $16 = $17 + 8 | 0;
  $18 = $20 + 8 | 0;
  HEAP32[$18 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
  HEAP32[$18 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
  HEAP32[$18 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
  HEAP32[$20 + 4 >> 2] = $7;
  HEAP32[$20 >> 2] = $20$looptemp;
  HEAP32[$20$looptemp + 4 >> 2] = $20;
  HEAP32[$7 >> 2] = $20;
  $23 = $23 + 1 | 0;
  HEAP32[$9 >> 2] = $23;
  $17 = HEAP32[$17 + 4 >> 2] | 0;
  if (($17 | 0) == ($fields | 0)) {
   label = 9;
   break;
  }
 }
 if ((label | 0) == 9) return;
 $27 = ___cxa_find_matching_catch() | 0;
 if ($$lcssa11) {
  $30 = HEAP32[$8 >> 2] | 0;
  $31 = $$lcssa + 4 | 0;
  $33 = HEAP32[$30 >> 2] | 0;
  HEAP32[$33 + 4 >> 2] = HEAP32[$31 >> 2];
  HEAP32[HEAP32[$31 >> 2] >> 2] = $33;
  HEAP32[$9 >> 2] = 0;
  if (($30 | 0) != ($7 | 0)) {
   $__f$01$i$i$i = $30;
   do {
    $__f$01$i$i$i$looptemp = $__f$01$i$i$i;
    $__f$01$i$i$i = HEAP32[$__f$01$i$i$i + 4 >> 2] | 0;
    __ZdlPv($__f$01$i$i$i$looptemp);
   } while (($__f$01$i$i$i | 0) != ($7 | 0));
   $$pre = HEAP32[$4 >> 2] | 0;
   HEAP32[$this >> 2] = 35936;
   if (!$$pre) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    ___resumeException($27 | 0);
   }
   $42 = HEAP32[$5 >> 2] | 0;
   if (($42 | 0) != ($$pre | 0)) HEAP32[$5 >> 2] = $42 + (~(($42 + -4 - $$pre | 0) >>> 2) << 2);
   __ZdlPv($$pre);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   ___resumeException($27 | 0);
  }
 }
 HEAP32[$this >> 2] = 35936;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 ___resumeException($27 | 0);
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_SL_SL_($agg$result, $this, $__v, $__root, $__result) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 $__root = $__root | 0;
 $__result = $__result | 0;
 var $$0$ph$lcssa = 0, $$0$ph7 = 0, $$0$ph7$lcssa = 0, $$0$ph7$lcssa27 = 0, $$01$lcssa3 = 0, $$01$lcssa3$lcssa = 0, $$01$ph6 = 0, $$014 = 0, $$014$lcssa = 0, $$014$us = 0, $$014$us$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $33 = 0, $34 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $8 = 0, label = 0;
 if (!$__root) {
  $$0$ph$lcssa = $__result;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 }
 $1 = HEAP8[$__v >> 0] | 0;
 $3 = ($1 & 1) == 0;
 $5 = ($1 & 255) >>> 1;
 $6 = $__v + 1 | 0;
 $8 = HEAP32[$__v + 8 >> 2] | 0;
 $10 = HEAP32[$__v + 4 >> 2] | 0;
 $$0$ph7 = $__result;
 $$01$ph6 = $__root;
 L4 : while (1) {
  if ($3) {
   $$014$us = $$01$ph6;
   while (1) {
    $11 = $$014$us + 16 | 0;
    $12 = HEAP8[$11 >> 0] | 0;
    if (!($12 & 1)) {
     $23 = ($12 & 255) >>> 1;
     $25 = $11 + 1 | 0;
    } else {
     $23 = HEAP32[$$014$us + 20 >> 2] | 0;
     $25 = HEAP32[$$014$us + 24 >> 2] | 0;
    }
    $26 = _memcmp($25, $6, $5 >>> 0 < $23 >>> 0 ? $5 : $23) | 0;
    if (!$26) {
     if ($23 >>> 0 >= $5 >>> 0) {
      $$014$us$lcssa = $$014$us;
      break;
     }
    } else if (($26 | 0) >= 0) {
     $$014$us$lcssa = $$014$us;
     break;
    }
    $$014$us = HEAP32[$$014$us + 4 >> 2] | 0;
    if (!$$014$us) {
     $$0$ph7$lcssa27 = $$0$ph7;
     label = 23;
     break L4;
    }
   }
   $$01$lcssa3 = $$014$us$lcssa;
  } else {
   $$014 = $$01$ph6;
   while (1) {
    $33 = $$014 + 16 | 0;
    $34 = HEAP8[$33 >> 0] | 0;
    if (!($34 & 1)) {
     $45 = ($34 & 255) >>> 1;
     $47 = $33 + 1 | 0;
    } else {
     $45 = HEAP32[$$014 + 20 >> 2] | 0;
     $47 = HEAP32[$$014 + 24 >> 2] | 0;
    }
    $48 = _memcmp($47, $8, $10 >>> 0 < $45 >>> 0 ? $10 : $45) | 0;
    if (!$48) {
     if ($45 >>> 0 >= $10 >>> 0) {
      $$014$lcssa = $$014;
      break;
     }
    } else if (($48 | 0) >= 0) {
     $$014$lcssa = $$014;
     break;
    }
    $$014 = HEAP32[$$014 + 4 >> 2] | 0;
    if (!$$014) {
     $$0$ph7$lcssa = $$0$ph7;
     label = 24;
     break L4;
    }
   }
   $$01$lcssa3 = $$014$lcssa;
  }
  $$01$ph6 = HEAP32[$$01$lcssa3 >> 2] | 0;
  if (!$$01$ph6) {
   $$01$lcssa3$lcssa = $$01$lcssa3;
   label = 25;
   break;
  } else $$0$ph7 = $$01$lcssa3;
 }
 if ((label | 0) == 23) {
  $$0$ph$lcssa = $$0$ph7$lcssa27;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 } else if ((label | 0) == 24) {
  $$0$ph$lcssa = $$0$ph7$lcssa;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 } else if ((label | 0) == 25) {
  $$0$ph$lcssa = $$01$lcssa3$lcssa;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 }
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_SL_SL_($agg$result, $this, $__v, $__root, $__result) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 $__root = $__root | 0;
 $__result = $__result | 0;
 var $$0$ph$lcssa = 0, $$0$ph7 = 0, $$0$ph7$lcssa = 0, $$0$ph7$lcssa27 = 0, $$01$lcssa3 = 0, $$01$lcssa3$lcssa = 0, $$01$ph6 = 0, $$014 = 0, $$014$lcssa = 0, $$014$us = 0, $$014$us$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $33 = 0, $34 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $8 = 0, label = 0;
 if (!$__root) {
  $$0$ph$lcssa = $__result;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 }
 $1 = HEAP8[$__v >> 0] | 0;
 $3 = ($1 & 1) == 0;
 $5 = ($1 & 255) >>> 1;
 $6 = $__v + 1 | 0;
 $8 = HEAP32[$__v + 8 >> 2] | 0;
 $10 = HEAP32[$__v + 4 >> 2] | 0;
 $$0$ph7 = $__result;
 $$01$ph6 = $__root;
 L4 : while (1) {
  if ($3) {
   $$014$us = $$01$ph6;
   while (1) {
    $11 = $$014$us + 16 | 0;
    $12 = HEAP8[$11 >> 0] | 0;
    if (!($12 & 1)) {
     $23 = ($12 & 255) >>> 1;
     $25 = $11 + 1 | 0;
    } else {
     $23 = HEAP32[$$014$us + 20 >> 2] | 0;
     $25 = HEAP32[$$014$us + 24 >> 2] | 0;
    }
    $26 = _memcmp($25, $6, $5 >>> 0 < $23 >>> 0 ? $5 : $23) | 0;
    if (!$26) {
     if ($23 >>> 0 >= $5 >>> 0) {
      $$014$us$lcssa = $$014$us;
      break;
     }
    } else if (($26 | 0) >= 0) {
     $$014$us$lcssa = $$014$us;
     break;
    }
    $$014$us = HEAP32[$$014$us + 4 >> 2] | 0;
    if (!$$014$us) {
     $$0$ph7$lcssa27 = $$0$ph7;
     label = 23;
     break L4;
    }
   }
   $$01$lcssa3 = $$014$us$lcssa;
  } else {
   $$014 = $$01$ph6;
   while (1) {
    $33 = $$014 + 16 | 0;
    $34 = HEAP8[$33 >> 0] | 0;
    if (!($34 & 1)) {
     $45 = ($34 & 255) >>> 1;
     $47 = $33 + 1 | 0;
    } else {
     $45 = HEAP32[$$014 + 20 >> 2] | 0;
     $47 = HEAP32[$$014 + 24 >> 2] | 0;
    }
    $48 = _memcmp($47, $8, $10 >>> 0 < $45 >>> 0 ? $10 : $45) | 0;
    if (!$48) {
     if ($45 >>> 0 >= $10 >>> 0) {
      $$014$lcssa = $$014;
      break;
     }
    } else if (($48 | 0) >= 0) {
     $$014$lcssa = $$014;
     break;
    }
    $$014 = HEAP32[$$014 + 4 >> 2] | 0;
    if (!$$014) {
     $$0$ph7$lcssa = $$0$ph7;
     label = 24;
     break L4;
    }
   }
   $$01$lcssa3 = $$014$lcssa;
  }
  $$01$ph6 = HEAP32[$$01$lcssa3 >> 2] | 0;
  if (!$$01$ph6) {
   $$01$lcssa3$lcssa = $$01$lcssa3;
   label = 25;
   break;
  } else $$0$ph7 = $$01$lcssa3;
 }
 if ((label | 0) == 23) {
  $$0$ph$lcssa = $$0$ph7$lcssa27;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 } else if ((label | 0) == 24) {
  $$0$ph$lcssa = $$0$ph7$lcssa;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 } else if ((label | 0) == 25) {
  $$0$ph$lcssa = $$01$lcssa3$lcssa;
  HEAP32[$agg$result >> 2] = $$0$ph$lcssa;
  return;
 }
}

function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $$0$i = 0, $$0$i6 = 0, $$01 = 0, $$02 = 0, $13 = 0, $14 = 0, $15 = 0, $18 = 0, $2 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $42 = 0, $45 = 0, $48 = 0, $49 = 0, $50 = 0, $6 = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__ndflt = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__ndflt = sp;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$__ndflt + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 $2 = HEAP8[$__dflt >> 0] | 0;
 if (!($2 & 1)) {
  $14 = $__dflt + 1 | 0;
  $15 = ($2 & 255) >>> 1;
  $50 = $__dflt + 1 | 0;
 } else {
  $6 = HEAP32[$__dflt + 8 >> 2] | 0;
  $14 = $6;
  $15 = HEAP32[$__dflt + 4 >> 2] | 0;
  $50 = $6;
 }
 $13 = $14 + $15 | 0;
 $$0$i6 = $50;
 while (1) {
  if ($$0$i6 >>> 0 >= $13 >>> 0) {
   label = 11;
   break;
  }
  __THREW__ = 0;
  invoke_vii(44, $__ndflt | 0, HEAP8[$$0$i6 >> 0] | 0);
  $18 = __THREW__;
  __THREW__ = 0;
  if ($18 & 1) {
   label = 15;
   break;
  }
  $$0$i6 = $$0$i6 + 1 | 0;
 }
 do if ((label | 0) == 11) {
  if (!(HEAP8[$__ndflt >> 0] & 1)) $31 = $__ndflt + 1 | 0; else $31 = HEAP32[$__ndflt + 8 >> 2] | 0;
  __THREW__ = 0;
  $32 = invoke_iiiii(14, (($__c | 0) == -1 ? -1 : $__c << 1) | 0, $__set | 0, $__msgid | 0, $31 | 0) | 0;
  $33 = __THREW__;
  __THREW__ = 0;
  if ($33 & 1) {
   $37 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $37;
   $lpad$phi$index2 = tempRet0;
   label = 17;
   break;
  }
  $__i$0$i$i3 = 0;
  while (1) {
   if (($__i$0$i$i3 | 0) == 3) break;
   HEAP32[$agg$result + ($__i$0$i$i3 << 2) >> 2] = 0;
   $__i$0$i$i3 = $__i$0$i$i3 + 1 | 0;
  }
  $42 = $32 + (_strlen($32 | 0) | 0) | 0;
  $$0$i = $32;
  while (1) {
   if ($$0$i >>> 0 >= $42 >>> 0) {
    label = 26;
    break;
   }
   __THREW__ = 0;
   invoke_vii(44, $agg$result | 0, HEAP8[$$0$i >> 0] | 0);
   $45 = __THREW__;
   __THREW__ = 0;
   if ($45 & 1) {
    label = 25;
    break;
   }
   $$0$i = $$0$i + 1 | 0;
  }
  if ((label | 0) == 25) {
   $48 = ___cxa_find_matching_catch() | 0;
   $49 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$01 = $48;
   $$02 = $49;
   break;
  } else if ((label | 0) == 26) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
   STACKTOP = sp;
   return;
  }
 } else if ((label | 0) == 15) {
  $35 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $35;
  $lpad$phi$index2 = tempRet0;
  label = 17;
 } while (0);
 if ((label | 0) == 17) {
  $$01 = $lpad$phi$index;
  $$02 = $lpad$phi$index2;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$01 | 0);
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i2$i$i611 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $28 = 0, $30 = 0, $48 = 0, $49 = 0, $50 = 0, $60 = 0, $70 = 0, $71 = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $12 = 0; else if ((HEAP32[$0 + 12 >> 2] | 0) == (HEAP32[$0 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $12 = 0;
  break;
 } else {
  $12 = HEAP32[$__b >> 2] | 0;
  break;
 } else $12 = $0; while (0);
 $13 = ($12 | 0) == 0;
 $14 = HEAP32[$__e >> 2] | 0;
 do if (!$14) label = 11; else {
  if ((HEAP32[$14 + 12 >> 2] | 0) == (HEAP32[$14 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 11;
   break;
  }
  if ($13) {
   $$pre$i2$i$i611 = $14;
   label = 13;
  } else label = 12;
 } while (0);
 if ((label | 0) == 11) if ($13) label = 12; else {
  $$pre$i2$i$i611 = 0;
  label = 13;
 }
 L16 : do if ((label | 0) == 12) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6; else if ((label | 0) == 13) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAPU8[$30 >> 0] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $$0$i$i & 255, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   break;
  }
  $48 = HEAP32[$__b >> 2] | 0;
  $49 = $48 + 12 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  if (($50 | 0) == (HEAP32[$48 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$48 >> 2] | 0) + 40 >> 2] & 127]($48) | 0;
   $$pre = HEAP32[$__b >> 2] | 0;
   if (!$$pre) $70 = 0; else {
    $60 = $$pre;
    label = 21;
   }
  } else {
   HEAP32[$49 >> 2] = $50 + 1;
   $60 = $48;
   label = 21;
  }
  do if ((label | 0) == 21) if ((HEAP32[$60 + 12 >> 2] | 0) == (HEAP32[$60 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 36 >> 2] & 127]($60) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $70 = 0;
   break;
  } else {
   $70 = HEAP32[$__b >> 2] | 0;
   break;
  } else $70 = $60; while (0);
  $71 = ($70 | 0) == 0;
  do if (!$$pre$i2$i$i611) label = 30; else {
   if ((HEAP32[$$pre$i2$i$i611 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i611 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i611 >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i611) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 30;
    break;
   }
   if ($71) break L16;
  } while (0);
  if ((label | 0) == 30) if (!$71) break;
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 } while (0);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $27 = 0, $29 = 0, $46 = 0, $47 = 0, $48 = 0, $56 = 0, $68 = 0, $69 = 0, $83 = 0, label = 0;
 $0 = $__ct + 8 | 0;
 L1 : while (1) {
  $1 = HEAP32[$__b >> 2] | 0;
  do if (!$1) $13 = 0; else if ((HEAP32[$1 + 12 >> 2] | 0) == (HEAP32[$1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 36 >> 2] & 127]($1) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $13 = 0;
   break;
  } else {
   $13 = HEAP32[$__b >> 2] | 0;
   break;
  } else $13 = $1; while (0);
  $14 = ($13 | 0) == 0;
  $15 = HEAP32[$__e >> 2] | 0;
  do if (!$15) label = 12; else {
   if ((HEAP32[$15 + 12 >> 2] | 0) != (HEAP32[$15 + 16 >> 2] | 0)) if ($14) {
    $83 = $15;
    break;
   } else {
    $$pre$i2$i$i6 = $15;
    break L1;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 127]($15) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 12;
    break;
   } else if ($14) {
    $83 = $15;
    break;
   } else {
    $$pre$i2$i$i6 = $15;
    break L1;
   }
  } while (0);
  if ((label | 0) == 12) {
   label = 0;
   if ($14) {
    $$pre$i2$i$i6 = 0;
    break;
   } else $83 = 0;
  }
  $27 = HEAP32[$__b >> 2] | 0;
  $29 = HEAP32[$27 + 12 >> 2] | 0;
  if (($29 | 0) == (HEAP32[$27 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] & 127]($27) | 0; else $$0$i$i = HEAPU8[$29 >> 0] | 0;
  if (($$0$i$i & 255) << 24 >> 24 <= -1) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  if (!(HEAP16[(HEAP32[$0 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b >> 2] | 0;
  $47 = $46 + 12 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 40 >> 2] & 127]($46) | 0; else HEAP32[$47 >> 2] = $48 + 1;
 }
 $56 = HEAP32[$__b >> 2] | 0;
 do if (!$56) $68 = 0; else if ((HEAP32[$56 + 12 >> 2] | 0) == (HEAP32[$56 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 36 >> 2] & 127]($56) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $68 = 0;
  break;
 } else {
  $68 = HEAP32[$__b >> 2] | 0;
  break;
 } else $68 = $56; while (0);
 $69 = ($68 | 0) == 0;
 do if (!$$pre$i2$i$i6) label = 33; else {
  if ((HEAP32[$$pre$i2$i$i6 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i6 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i6 >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i6) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 33;
   break;
  }
  if (!$69) label = 34;
 } while (0);
 if ((label | 0) == 33) if ($69) label = 34;
 if ((label | 0) == 34) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 return;
}

function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$0$ph = 0, $$pre1 = 0, $10 = 0, $12 = 0, $17 = 0, $24 = 0, $35 = 0, $38 = 0, $40 = 0, $50 = 0, $55 = 0, $6 = 0, $66 = 0, $72 = 0, $77 = 0, $8 = 0, $80 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 $$pre1 = $to_end;
 if (!($mode & 2)) label = 4; else if (($$pre1 - $to | 0) < 3) $$0 = 1; else {
  HEAP32[$to_nxt >> 2] = $to + 1;
  HEAP8[$to >> 0] = -17;
  $6 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $6 + 1;
  HEAP8[$6 >> 0] = -69;
  $8 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $8 + 1;
  HEAP8[$8 >> 0] = -65;
  label = 4;
 }
 if ((label | 0) == 4) {
  $10 = HEAP32[$frm_nxt >> 2] | 0;
  L6 : while (1) {
   if ($10 >>> 0 >= $frm_end >>> 0) {
    $$0$ph = 0;
    break;
   }
   $12 = HEAP32[$10 >> 2] | 0;
   if ($12 >>> 0 > $Maxcode >>> 0 | ($12 & -2048 | 0) == 55296) {
    $$0$ph = 2;
    break;
   }
   do if ($12 >>> 0 < 128) {
    $17 = HEAP32[$to_nxt >> 2] | 0;
    if (($$pre1 - $17 | 0) < 1) {
     $$0$ph = 1;
     break L6;
    }
    HEAP32[$to_nxt >> 2] = $17 + 1;
    HEAP8[$17 >> 0] = $12;
   } else {
    if ($12 >>> 0 < 2048) {
     $24 = HEAP32[$to_nxt >> 2] | 0;
     if (($$pre1 - $24 | 0) < 2) {
      $$0$ph = 1;
      break L6;
     }
     HEAP32[$to_nxt >> 2] = $24 + 1;
     HEAP8[$24 >> 0] = $12 >>> 6 | 192;
     $35 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $35 + 1;
     HEAP8[$35 >> 0] = $12 & 63 | 128;
     break;
    }
    $38 = HEAP32[$to_nxt >> 2] | 0;
    $40 = $$pre1 - $38 | 0;
    if ($12 >>> 0 < 65536) {
     if (($40 | 0) < 3) {
      $$0$ph = 1;
      break L6;
     }
     HEAP32[$to_nxt >> 2] = $38 + 1;
     HEAP8[$38 >> 0] = $12 >>> 12 | 224;
     $50 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $50 + 1;
     HEAP8[$50 >> 0] = $12 >>> 6 & 63 | 128;
     $55 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $55 + 1;
     HEAP8[$55 >> 0] = $12 & 63 | 128;
     break;
    } else {
     if (($40 | 0) < 4) {
      $$0$ph = 1;
      break L6;
     }
     HEAP32[$to_nxt >> 2] = $38 + 1;
     HEAP8[$38 >> 0] = $12 >>> 18 | 240;
     $66 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $66 + 1;
     HEAP8[$66 >> 0] = $12 >>> 12 & 63 | 128;
     $72 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $72 + 1;
     HEAP8[$72 >> 0] = $12 >>> 6 & 63 | 128;
     $77 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $77 + 1;
     HEAP8[$77 >> 0] = $12 & 63 | 128;
     break;
    }
   } while (0);
   $80 = (HEAP32[$frm_nxt >> 2] | 0) + 4 | 0;
   HEAP32[$frm_nxt >> 2] = $80;
   $10 = $80;
  }
  $$0 = $$0$ph;
 }
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE15__insert_uniqueIRKNS_4pairIKS7_S8_EEEENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEENS_21__tree_const_iteratorIS9_SQ_iEEOT_($agg$result, $this, $__p, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__p = $__p | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $24 = 0, $28 = 0, $29 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $__parent$i = 0, $__r$0$i = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent$i = sp + 4 | 0;
 $0 = sp;
 $1 = __Znwj(44) | 0;
 $2 = $1 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $__v | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $11 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $11;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 }
 $5 = $1 + 28 | 0;
 __THREW__ = 0;
 invoke_vii(40, $5 | 0, $__v + 12 | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  $10 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $eh$lpad$body$i$index2Z2D = $10;
  $eh$lpad$body$i$indexZ2D = $9;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 }
 HEAP8[$1 + 40 >> 0] = HEAP8[$__v + 24 >> 0] | 0;
 HEAP32[$0 >> 2] = HEAP32[$__p >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $17 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE12__find_equalIS9_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_SI_EEiEESL_RKT_($this, $$byval_copy, $__parent$i, $2) | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if (!$18) {
  $20 = HEAP32[$__parent$i >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = $20;
  HEAP32[$17 >> 2] = $1;
  $24 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
  if (!$24) $28 = $1; else {
   HEAP32[$this >> 2] = $24;
   $28 = HEAP32[$17 >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $28);
  $29 = $this + 8 | 0;
  HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 1;
  $__r$0$i = $1;
 } else $__r$0$i = $18;
 HEAP32[$agg$result >> 2] = $__r$0$i;
 if (($__r$0$i | 0) == ($1 | 0)) {
  STACKTOP = sp;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZdlPv($1);
 STACKTOP = sp;
 return;
}

function __ZNSt3__14listIN6Object5FieldENS_9allocatorIS2_EEE6insertINS_21__list_const_iteratorIS2_PvEEEENS_15__list_iteratorIS2_S8_EES9_T_SC_PNS_9enable_ifIXsr19__is_input_iteratorISC_EE5valueEvE4typeE($agg$result, $this, $__p, $__f, $__l, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__p = $__p | 0;
 $__f = $__f | 0;
 $__l = $__l | 0;
 $0 = $0 | 0;
 var $$lcssa = 0, $$lcssa18 = 0, $$lcssa20 = 0, $$lcssa21 = 0, $$pn = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $36 = 0, $39 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $__ds$0$lcssa = 0, $__ds$08 = 0, label = 0, $25$looptemp = 0;
 $1 = HEAP32[$__p >> 2] | 0;
 HEAP32[$agg$result >> 2] = $1;
 $2 = HEAP32[$__f >> 2] | 0;
 $3 = HEAP32[$__l >> 2] | 0;
 if (($2 | 0) == ($3 | 0)) return;
 $5 = __Znwj(20) | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $5 + 8 | 0;
 $7 = $2 + 8 | 0;
 HEAP32[$6 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
 HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
 HEAP32[$agg$result >> 2] = $5;
 $9 = HEAP32[$2 + 4 >> 2] | 0;
 HEAP32[$__f >> 2] = $9;
 do if (($9 | 0) == ($3 | 0)) {
  $$lcssa = $5;
  $__ds$0$lcssa = 1;
 } else {
  $$pn = $9;
  $17 = $5;
  $__ds$08 = 1;
  while (1) {
   __THREW__ = 0;
   $11 = invoke_ii(67, 20) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $$lcssa18 = $17;
    break;
   }
   $14 = $11 + 8 | 0;
   $15 = $$pn + 8 | 0;
   HEAP32[$14 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
   HEAP32[$14 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
   HEAP32[$14 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
   HEAP32[$17 + 4 >> 2] = $11;
   HEAP32[$11 >> 2] = $17;
   $$pn = HEAP32[$$pn + 4 >> 2] | 0;
   HEAP32[$__f >> 2] = $$pn;
   $20 = $__ds$08 + 1 | 0;
   if (($$pn | 0) == ($3 | 0)) {
    $$lcssa20 = $11;
    $$lcssa21 = $20;
    label = 10;
    break;
   } else {
    $17 = $11;
    $__ds$08 = $20;
   }
  }
  if ((label | 0) == 10) {
   $$lcssa = $$lcssa20;
   $__ds$0$lcssa = $$lcssa21;
   break;
  }
  $22 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($22 | 0) | 0;
  $25 = $$lcssa18;
  do {
   $25$looptemp = $25;
   $25 = HEAP32[$25 >> 2] | 0;
   __ZdlPv($25$looptemp);
  } while (($25 | 0) != 0);
  __THREW__ = 0;
  invoke_v(4);
  $31 = __THREW__;
  __THREW__ = 0;
  if (!($31 & 1)) {}
  $27 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $29 = __THREW__;
  __THREW__ = 0;
  if ($29 & 1) {
   $39 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($39);
  } else ___resumeException($27 | 0);
 } while (0);
 $33 = HEAP32[$1 >> 2] | 0;
 HEAP32[$33 + 4 >> 2] = $5;
 HEAP32[$5 >> 2] = $33;
 HEAP32[$1 >> 2] = $$lcssa;
 HEAP32[$$lcssa + 4 >> 2] = $1;
 $36 = $this + 8 | 0;
 HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) + $__ds$0$lcssa;
 return;
}

function __ZN9Allocator4makeI13LiteralStringJRK13LocationRangeRA9_KcEEEPT_DpOT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $6 = 0, $7 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __Znwj(60) | 0;
 $3 = _strlen($args1 | 0) | 0;
 __THREW__ = 0;
 invoke_viii(3, $0 | 0, $args1 | 0, $3 | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $38 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $38;
  __ZdlPv($2);
  ___resumeException($$01 | 0);
 }
 HEAP32[$2 >> 2] = 35936;
 $6 = $2 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $6 | 0, $args | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 do if ($7 & 1) {
  $40 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $40;
 } else {
  $9 = $2 + 16 | 0;
  $10 = $args + 12 | 0;
  HEAP32[$9 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
  HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$9 + 12 >> 2] = HEAP32[$10 + 12 >> 2];
  HEAP32[$2 + 32 >> 2] = 14;
  $12 = $2 + 36 | 0;
  HEAP32[$12 >> 2] = 0;
  $13 = $2 + 40 | 0;
  HEAP32[$13 >> 2] = 0;
  HEAP32[$2 + 44 >> 2] = 0;
  HEAP32[$2 >> 2] = 35888;
  __THREW__ = 0;
  invoke_vii(40, $2 + 48 | 0, $0 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch() | 0;
   $19 = tempRet0;
   HEAP32[$2 >> 2] = 35936;
   $20 = HEAP32[$12 >> 2] | 0;
   $22 = $20;
   if ($20) {
    $23 = HEAP32[$13 >> 2] | 0;
    if (($23 | 0) != ($20 | 0)) HEAP32[$13 >> 2] = $23 + (~(($23 + -4 - $22 | 0) >>> 2) << 2);
    __ZdlPv($20);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $eh$lpad$body$index2Z2D = $19;
   $eh$lpad$body$indexZ2D = $18;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  HEAP32[$1 >> 2] = $2;
  $29 = $this + 16 | 0;
  $30 = HEAP32[$29 >> 2] | 0;
  if ($30 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
   __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $1);
   STACKTOP = sp;
   return $2 | 0;
  }
  if (!$30) $36 = 0; else {
   HEAP32[$30 >> 2] = $2;
   $36 = HEAP32[$29 >> 2] | 0;
  }
  HEAP32[$29 >> 2] = $36 + 4;
  STACKTOP = sp;
  return $2 | 0;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 $$0 = $eh$lpad$body$index2Z2D;
 $$01 = $eh$lpad$body$indexZ2D;
 __ZdlPv($2);
 ___resumeException($$01 | 0);
 return 0;
}

function __ZN9Allocator4makeI13LiteralStringJR13LocationRangeRA10_KcEEEPT_DpOT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $6 = 0, $7 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __Znwj(60) | 0;
 $3 = _strlen($args1 | 0) | 0;
 __THREW__ = 0;
 invoke_viii(3, $0 | 0, $args1 | 0, $3 | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $38 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $38;
  __ZdlPv($2);
  ___resumeException($$01 | 0);
 }
 HEAP32[$2 >> 2] = 35936;
 $6 = $2 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $6 | 0, $args | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 do if ($7 & 1) {
  $40 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $40;
 } else {
  $9 = $2 + 16 | 0;
  $10 = $args + 12 | 0;
  HEAP32[$9 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
  HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$9 + 12 >> 2] = HEAP32[$10 + 12 >> 2];
  HEAP32[$2 + 32 >> 2] = 14;
  $12 = $2 + 36 | 0;
  HEAP32[$12 >> 2] = 0;
  $13 = $2 + 40 | 0;
  HEAP32[$13 >> 2] = 0;
  HEAP32[$2 + 44 >> 2] = 0;
  HEAP32[$2 >> 2] = 35888;
  __THREW__ = 0;
  invoke_vii(40, $2 + 48 | 0, $0 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch() | 0;
   $19 = tempRet0;
   HEAP32[$2 >> 2] = 35936;
   $20 = HEAP32[$12 >> 2] | 0;
   $22 = $20;
   if ($20) {
    $23 = HEAP32[$13 >> 2] | 0;
    if (($23 | 0) != ($20 | 0)) HEAP32[$13 >> 2] = $23 + (~(($23 + -4 - $22 | 0) >>> 2) << 2);
    __ZdlPv($20);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $eh$lpad$body$index2Z2D = $19;
   $eh$lpad$body$indexZ2D = $18;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  HEAP32[$1 >> 2] = $2;
  $29 = $this + 16 | 0;
  $30 = HEAP32[$29 >> 2] | 0;
  if ($30 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
   __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $1);
   STACKTOP = sp;
   return $2 | 0;
  }
  if (!$30) $36 = 0; else {
   HEAP32[$30 >> 2] = $2;
   $36 = HEAP32[$29 >> 2] | 0;
  }
  HEAP32[$29 >> 2] = $36 + 4;
  STACKTOP = sp;
  return $2 | 0;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 $$0 = $eh$lpad$body$index2Z2D;
 $$01 = $eh$lpad$body$indexZ2D;
 __ZdlPv($2);
 ___resumeException($$01 | 0);
 return 0;
}

function __ZN9Allocator4makeI13LiteralStringJR13LocationRangeRA4_KcEEEPT_DpOT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $6 = 0, $7 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __Znwj(60) | 0;
 $3 = _strlen($args1 | 0) | 0;
 __THREW__ = 0;
 invoke_viii(3, $0 | 0, $args1 | 0, $3 | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $38 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $38;
  __ZdlPv($2);
  ___resumeException($$01 | 0);
 }
 HEAP32[$2 >> 2] = 35936;
 $6 = $2 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $6 | 0, $args | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 do if ($7 & 1) {
  $40 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $40;
 } else {
  $9 = $2 + 16 | 0;
  $10 = $args + 12 | 0;
  HEAP32[$9 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
  HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$9 + 12 >> 2] = HEAP32[$10 + 12 >> 2];
  HEAP32[$2 + 32 >> 2] = 14;
  $12 = $2 + 36 | 0;
  HEAP32[$12 >> 2] = 0;
  $13 = $2 + 40 | 0;
  HEAP32[$13 >> 2] = 0;
  HEAP32[$2 + 44 >> 2] = 0;
  HEAP32[$2 >> 2] = 35888;
  __THREW__ = 0;
  invoke_vii(40, $2 + 48 | 0, $0 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch() | 0;
   $19 = tempRet0;
   HEAP32[$2 >> 2] = 35936;
   $20 = HEAP32[$12 >> 2] | 0;
   $22 = $20;
   if ($20) {
    $23 = HEAP32[$13 >> 2] | 0;
    if (($23 | 0) != ($20 | 0)) HEAP32[$13 >> 2] = $23 + (~(($23 + -4 - $22 | 0) >>> 2) << 2);
    __ZdlPv($20);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $eh$lpad$body$index2Z2D = $19;
   $eh$lpad$body$indexZ2D = $18;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  HEAP32[$1 >> 2] = $2;
  $29 = $this + 16 | 0;
  $30 = HEAP32[$29 >> 2] | 0;
  if ($30 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
   __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $1);
   STACKTOP = sp;
   return $2 | 0;
  }
  if (!$30) $36 = 0; else {
   HEAP32[$30 >> 2] = $2;
   $36 = HEAP32[$29 >> 2] | 0;
  }
  HEAP32[$29 >> 2] = $36 + 4;
  STACKTOP = sp;
  return $2 | 0;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 $$0 = $eh$lpad$body$index2Z2D;
 $$01 = $eh$lpad$body$indexZ2D;
 __ZdlPv($2);
 ___resumeException($$01 | 0);
 return 0;
}

function __ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK13LocationRange($o, $loc) {
 $o = $o | 0;
 $loc = $loc | 0;
 var $0 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $28 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $47 = 0, $50 = 0, $53 = 0, $7 = 0;
 $0 = HEAP8[$loc >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$loc + 4 >> 2] | 0;
 if ($7) {
  if ($2) {
   $16 = $loc + 1 | 0;
   $17 = ($0 & 255) >>> 1;
  } else {
   $16 = HEAP32[$loc + 8 >> 2] | 0;
   $17 = HEAP32[$loc + 4 >> 2] | 0;
  }
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, $16, $17) | 0;
 }
 $18 = $loc + 12 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 if (!$19) return $o | 0;
 $21 = HEAP8[$loc >> 0] | 0;
 if (!($21 & 1)) $28 = ($21 & 255) >>> 1; else $28 = HEAP32[$loc + 4 >> 2] | 0;
 if (!$28) $32 = $19; else {
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 42232, 1) | 0;
  $32 = HEAP32[$18 >> 2] | 0;
 }
 $30 = $loc + 20 | 0;
 if (($32 | 0) != (HEAP32[$30 >> 2] | 0)) {
  $44 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 42256, 1) | 0;
  $47 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($44, HEAP32[$18 >> 2] | 0) | 0, 42232, 1) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($47, HEAP32[$loc + 16 >> 2] | 0) | 0;
  $50 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($44, 42264, 3) | 0;
  $53 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($50, HEAP32[$30 >> 2] | 0) | 0, 42232, 1) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($53, HEAP32[$loc + 24 >> 2] | 0) | 0;
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($50, 42272, 1) | 0;
  return $o | 0;
 }
 $34 = $loc + 16 | 0;
 $36 = $loc + 24 | 0;
 $38 = (HEAP32[$34 >> 2] | 0) == (HEAP32[$36 >> 2] | 0);
 $40 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($o, $32) | 0, 42232, 1) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($40, HEAP32[$34 >> 2] | 0) | 0;
 if ($38) return $o | 0;
 $42 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 42248, 1) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($42, HEAP32[$36 >> 2] | 0) | 0;
 return $o | 0;
}

function __ZN5Token8toStringENS_4KindE($v) {
 $v = $v | 0;
 var $$0 = 0, $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 do switch ($v | 0) {
 case 22:
  {
   $$0 = 37e3;
   break;
  }
 case 19:
  {
   $$0 = 39312;
   break;
  }
 case 12:
  {
   $$0 = 36928;
   break;
  }
 case 29:
  {
   $$0 = 36728;
   break;
  }
 case 9:
  {
   $$0 = 36896;
   break;
  }
 case 2:
  {
   $$0 = 36840;
   break;
  }
 case 25:
  {
   $$0 = 39280;
   break;
  }
 case 5:
  {
   $$0 = 36864;
   break;
  }
 case 17:
  {
   $$0 = 50480;
   break;
  }
 case 7:
  {
   $$0 = 36880;
   break;
  }
 case 1:
  {
   $$0 = 36832;
   break;
  }
 case 14:
  {
   $$0 = 36952;
   break;
  }
 case 11:
  {
   $$0 = 36912;
   break;
  }
 case 10:
  {
   $$0 = 36904;
   break;
  }
 case 20:
  {
   $$0 = 36984;
   break;
  }
 case 18:
  {
   $$0 = 36976;
   break;
  }
 case 3:
  {
   $$0 = 36848;
   break;
  }
 case 26:
  {
   $$0 = 37032;
   break;
  }
 case 27:
  {
   $$0 = 37048;
   break;
  }
 case 13:
  {
   $$0 = 36936;
   break;
  }
 case 24:
  {
   $$0 = 37024;
   break;
  }
 case 16:
  {
   $$0 = 36968;
   break;
  }
 case 15:
  {
   $$0 = 36960;
   break;
  }
 case 0:
  {
   $$0 = 36824;
   break;
  }
 case 6:
  {
   $$0 = 36872;
   break;
  }
 case 8:
  {
   $$0 = 36888;
   break;
  }
 case 21:
  {
   $$0 = 36992;
   break;
  }
 case 30:
  {
   $$0 = 50448;
   break;
  }
 case 31:
  {
   $$0 = 37056;
   break;
  }
 case 23:
  {
   $$0 = 37016;
   break;
  }
 case 4:
  {
   $$0 = 36856;
   break;
  }
 case 28:
  {
   $$0 = 36696;
   break;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(45984, 37072, 36) | 0, $v) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $7 = invoke_iii(22, $0 | 0, 50208) | 0;
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   }
   __THREW__ = 0;
   $13 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 10) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $13) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE12__find_equalIS9_EERPNS_16__tree_node_baseIPvEESL_RKT_($this, $__parent, $__v) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__v >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__v + 1 | 0;
 $10 = HEAP32[$__v + 8 >> 2] | 0;
 $12 = HEAP32[$__v + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $10 = HEAP32[$__k + 8 >> 2] | 0;
 $12 = HEAP32[$__k + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($agg$result, $this, $loc, $v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 $v = +$v;
 var $$0 = 0, $$01 = 0, $$0311 = 0, $$0510 = 0, $$1414 = 0, $$1613 = 0, $$2 = 0, $$27 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $25 = 0, $26 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAPF64[tempDoublePtr >> 3] = $v;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $4 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
 if ($4 >>> 0 > 2146435072 | ($4 | 0) == 2146435072 & $2 >>> 0 > 0) {
  $10 = ___cxa_allocate_exception(24) | 0;
  __THREW__ = 0;
  invoke_viii(3, $0 | 0, 41864, 12);
  $11 = __THREW__;
  __THREW__ = 0;
  if ($11 & 1) {
   $18 = ___cxa_find_matching_catch() | 0;
   $$0311 = tempRet0;
   $$0510 = $18;
  } else {
   __THREW__ = 0;
   invoke_viiii(17, $10 | 0, $this + 56 | 0, $loc | 0, $0 | 0);
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) $$01 = 1; else {
    __THREW__ = 0;
    invoke_viii(4, $10 | 0, 38664, 183);
    $16 = __THREW__;
    __THREW__ = 0;
    if ($16 & 1) $$01 = 0; else {}
   }
   $20 = ___cxa_find_matching_catch() | 0;
   $21 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   if ($$01) {
    $$0311 = $21;
    $$0510 = $20;
   } else {
    $$2 = $21;
    $$27 = $20;
    ___resumeException($$27 | 0);
   }
  }
  ___cxa_free_exception($10 | 0);
  $$2 = $$0311;
  $$27 = $$0510;
  ___resumeException($$27 | 0);
 }
 if (!(($2 | 0) == 0 & ($4 | 0) == 2146435072)) {
  HEAP32[$agg$result >> 2] = 2;
  HEAPF64[$agg$result + 8 >> 3] = $v;
  STACKTOP = sp;
  return;
 }
 $25 = ___cxa_allocate_exception(24) | 0;
 __THREW__ = 0;
 invoke_viii(3, $1 | 0, 41880, 8);
 $26 = __THREW__;
 __THREW__ = 0;
 if ($26 & 1) {
  $33 = ___cxa_find_matching_catch() | 0;
  $$1414 = tempRet0;
  $$1613 = $33;
 } else {
  __THREW__ = 0;
  invoke_viiii(17, $25 | 0, $this + 56 | 0, $loc | 0, $1 | 0);
  $29 = __THREW__;
  __THREW__ = 0;
  if ($29 & 1) $$0 = 1; else {
   __THREW__ = 0;
   invoke_viii(4, $25 | 0, 38664, 183);
   $31 = __THREW__;
   __THREW__ = 0;
   if ($31 & 1) $$0 = 0; else {}
  }
  $35 = ___cxa_find_matching_catch() | 0;
  $36 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  if ($$0) {
   $$1414 = $36;
   $$1613 = $35;
  } else {
   $$2 = $36;
   $$27 = $35;
   ___resumeException($$27 | 0);
  }
 }
 ___cxa_free_exception($25 | 0);
 $$2 = $$1414;
 $$27 = $$1613;
 ___resumeException($$27 | 0);
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $10 = HEAP32[$__k + 8 >> 2] | 0;
 $12 = HEAP32[$__k + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $10 = HEAP32[$__k + 8 >> 2] | 0;
 $12 = HEAP32[$__k + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $10 = HEAP32[$__k + 8 >> 2] | 0;
 $12 = HEAP32[$__k + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $10 = HEAP32[$__k + 8 >> 2] | 0;
 $12 = HEAP32[$__k + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phiZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $17 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $34 = 0, $35 = 0, $37 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $58 = 0, $59 = 0, $63 = 0, $7 = 0, $71 = 0, $74 = 0, $8 = 0, $9 = 0;
 if (($__c | 0) == -1) {
  $$0 = 0;
  return $$0 | 0;
 }
 $1 = $this + 12 | 0;
 $3 = $this + 8 | 0;
 $7 = (HEAP32[$1 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0;
 $8 = $this + 24 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $10 = $this + 28 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 do if (($9 | 0) == ($11 | 0)) {
  $13 = $this + 48 | 0;
  if (!(HEAP32[$13 >> 2] & 16)) {
   $$0 = -1;
   return $$0 | 0;
  }
  $17 = $this + 20 | 0;
  $20 = HEAP32[$17 >> 2] | 0;
  $21 = $9 - $20 | 0;
  $22 = $this + 44 | 0;
  $25 = (HEAP32[$22 >> 2] | 0) - $20 | 0;
  $26 = $this + 32 | 0;
  __THREW__ = 0;
  invoke_vii(44, $26 | 0, 0);
  $27 = __THREW__;
  __THREW__ = 0;
  if (!($27 & 1)) {
   if (!(HEAP8[$26 >> 0] & 1)) $34 = 10; else $34 = (HEAP32[$26 >> 2] & -2) + -1 | 0;
   __THREW__ = 0;
   invoke_viii(5, $26 | 0, $34 | 0, 0);
   $35 = __THREW__;
   __THREW__ = 0;
   if (!($35 & 1)) {
    $37 = HEAP8[$26 >> 0] | 0;
    if (!($37 & 1)) {
     $48 = $26 + 1 | 0;
     $49 = ($37 & 255) >>> 1;
    } else {
     $48 = HEAP32[$this + 40 >> 2] | 0;
     $49 = HEAP32[$this + 36 >> 2] | 0;
    }
    $47 = $48 + $49 | 0;
    HEAP32[$17 >> 2] = $48;
    HEAP32[$10 >> 2] = $47;
    $50 = $48 + $21 | 0;
    HEAP32[$8 >> 2] = $50;
    $51 = $48 + $25 | 0;
    HEAP32[$22 >> 2] = $51;
    $$pre$phiZ2D = $13;
    $55 = $50;
    $58 = $51;
    $74 = $47;
    break;
   }
  }
  $52 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($52 | 0) | 0;
  ___cxa_end_catch();
  $$0 = -1;
  return $$0 | 0;
 } else {
  $$pre$phiZ2D = $this + 48 | 0;
  $55 = $9;
  $58 = HEAP32[$this + 44 >> 2] | 0;
  $74 = $11;
 } while (0);
 $54 = $55 + 1 | 0;
 $59 = $54 >>> 0 < $58 >>> 0 ? $58 : $54;
 HEAP32[$this + 44 >> 2] = $59;
 if (HEAP32[$$pre$phiZ2D >> 2] & 8) {
  $63 = $this + 32 | 0;
  if (!(HEAP8[$63 >> 0] & 1)) $71 = $63 + 1 | 0; else $71 = HEAP32[$this + 40 >> 2] | 0;
  HEAP32[$3 >> 2] = $71;
  HEAP32[$1 >> 2] = $71 + $7;
  HEAP32[$this + 16 >> 2] = $59;
 }
 if (($55 | 0) == ($74 | 0)) {
  $$0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, $__c & 255) | 0;
  return $$0 | 0;
 } else {
  HEAP32[$8 >> 2] = $54;
  HEAP8[$55 >> 0] = $__c;
  $$0 = $__c & 255;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEESG_RKT_($this, $__parent, $__v) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$ = 0, $$0 = 0, $$17 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $7 = 0, $8 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__v >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__v + 1 | 0;
 $10 = HEAP32[$__v + 8 >> 2] | 0;
 $12 = HEAP32[$__v + 4 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $13 = $__nd$0 + 16 | 0;
  $$ = $5 ? $7 : $12;
  $14 = HEAP8[$13 >> 0] | 0;
  $16 = ($14 & 1) == 0;
  if ($16) $24 = ($14 & 255) >>> 1; else $24 = HEAP32[$__nd$0 + 20 >> 2] | 0;
  if ($16) $27 = $13 + 1 | 0; else $27 = HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = _memcmp($5 ? $8 : $10, $27, $24 >>> 0 < $$ >>> 0 ? $24 : $$) | 0;
  if (!$28) if ($$ >>> 0 < $24 >>> 0) label = 12; else label = 14; else if (($28 | 0) < 0) label = 12; else label = 14;
  if ((label | 0) == 12) {
   label = 0;
   $32 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$32) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 13;
    break;
   } else $__nd$0$be$in = $32;
  } else if ((label | 0) == 14) {
   label = 0;
   if ($16) $42 = ($14 & 255) >>> 1; else $42 = HEAP32[$__nd$0 + 20 >> 2] | 0;
   $$17 = $5 ? $7 : $12;
   if ($16) $44 = $13 + 1 | 0; else $44 = HEAP32[$__nd$0 + 24 >> 2] | 0;
   $45 = _memcmp($44, $5 ? $8 : $10, $$17 >>> 0 < $42 >>> 0 ? $$17 : $42) | 0;
   if (!$45) {
    if ($42 >>> 0 >= $$17 >>> 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 26;
     break;
    }
   } else if (($45 | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 26;
    break;
   }
   $49 = $__nd$0 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if (!$50) {
    $$lcssa = $49;
    $__nd$0$lcssa22 = $__nd$0;
    label = 25;
    break;
   } else $__nd$0$be$in = $50;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 25) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($agg$result, $this, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 var $$ = 0, $$$i1 = 0, $$0$ph$lcssa$i = 0, $$0$ph7$i = 0, $$0$ph7$i$lcssa16 = 0, $$01$ph6$i = 0, $$014$i = 0, $$014$i$lcssa = 0, $$014$i$lcssa$lcssa = 0, $$11$i = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $38 = 0, $39 = 0, $41 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $7 = 0, $8 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if ($1) {
  $3 = HEAP8[$__v >> 0] | 0;
  $5 = ($3 & 1) == 0;
  $7 = ($3 & 255) >>> 1;
  $8 = $__v + 1 | 0;
  $10 = HEAP32[$__v + 8 >> 2] | 0;
  $12 = HEAP32[$__v + 4 >> 2] | 0;
  $$$i1 = $5 ? $7 : $12;
  $$11$i = $5 ? $8 : $10;
  $$0$ph7$i = $0;
  $$01$ph6$i = $1;
  L3 : while (1) {
   $$014$i = $$01$ph6$i;
   while (1) {
    $13 = $$014$i + 16 | 0;
    $14 = HEAP8[$13 >> 0] | 0;
    if (!($14 & 1)) {
     $25 = ($14 & 255) >>> 1;
     $27 = $13 + 1 | 0;
    } else {
     $25 = HEAP32[$$014$i + 20 >> 2] | 0;
     $27 = HEAP32[$$014$i + 24 >> 2] | 0;
    }
    $28 = _memcmp($27, $$11$i, $$$i1 >>> 0 < $25 >>> 0 ? $$$i1 : $25) | 0;
    if (!$28) {
     if ($25 >>> 0 >= $$$i1 >>> 0) {
      $$014$i$lcssa = $$014$i;
      break;
     }
    } else if (($28 | 0) >= 0) {
     $$014$i$lcssa = $$014$i;
     break;
    }
    $$014$i = HEAP32[$$014$i + 4 >> 2] | 0;
    if (!$$014$i) {
     $$0$ph7$i$lcssa16 = $$0$ph7$i;
     label = 12;
     break L3;
    }
   }
   $$01$ph6$i = HEAP32[$$014$i$lcssa >> 2] | 0;
   if (!$$01$ph6$i) {
    $$014$i$lcssa$lcssa = $$014$i$lcssa;
    label = 13;
    break;
   } else $$0$ph7$i = $$014$i$lcssa;
  }
  if ((label | 0) == 12) $$0$ph$lcssa$i = $$0$ph7$i$lcssa16; else if ((label | 0) == 13) $$0$ph$lcssa$i = $$014$i$lcssa$lcssa;
  if (($$0$ph$lcssa$i | 0) != ($0 | 0)) {
   $38 = $$0$ph$lcssa$i + 16 | 0;
   $$ = $5 ? $7 : $12;
   $39 = HEAP8[$38 >> 0] | 0;
   $41 = ($39 & 1) == 0;
   if ($41) $49 = ($39 & 255) >>> 1; else $49 = HEAP32[$$0$ph$lcssa$i + 20 >> 2] | 0;
   if ($41) $52 = $38 + 1 | 0; else $52 = HEAP32[$$0$ph$lcssa$i + 24 >> 2] | 0;
   $53 = _memcmp($5 ? $8 : $10, $52, $49 >>> 0 < $$ >>> 0 ? $49 : $$) | 0;
   if (!$53) {
    if ($$ >>> 0 < $49 >>> 0) break;
   } else if (($53 | 0) < 0) break;
   HEAP32[$agg$result >> 2] = $$0$ph$lcssa$i;
   return;
  }
 } while (0);
 HEAP32[$agg$result >> 2] = $0;
 return;
}

function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $$03$i$i = 0, $$03$i$i4 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $21 = 0, $22 = 0, $34 = 0, $36 = 0, $39 = 0, $4 = 0, $46 = 0, $47 = 0, $5 = 0, $7 = 0, $__p$0$lcssa$i$i = 0, $__p$0$lcssa$i$i9 = 0, $__p$0$ph$i$i = 0, $__p$0$ph$i$i2 = 0, $__p$02$i$i = 0, $__p$02$i$i5 = 0;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 if ($1 & 16) {
  $4 = $this + 44 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  $7 = HEAP32[$this + 24 >> 2] | 0;
  if ($5 >>> 0 < $7 >>> 0) {
   HEAP32[$4 >> 2] = $7;
   $12 = $7;
  } else $12 = $5;
  $10 = HEAP32[$this + 20 >> 2] | 0;
  $14 = $12 - $10 | 0;
  if ($14 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($agg$result);
  if ($14 >>> 0 < 11) {
   HEAP8[$agg$result >> 0] = $14 << 1;
   $__p$0$ph$i$i2 = $agg$result + 1 | 0;
  } else {
   $21 = $14 + 16 & -16;
   $22 = __Znwj($21) | 0;
   HEAP32[$agg$result + 8 >> 2] = $22;
   HEAP32[$agg$result >> 2] = $21 | 1;
   HEAP32[$agg$result + 4 >> 2] = $14;
   $__p$0$ph$i$i2 = $22;
  }
  if (($10 | 0) == ($12 | 0)) $__p$0$lcssa$i$i9 = $__p$0$ph$i$i2; else {
   $$03$i$i4 = $10;
   $__p$02$i$i5 = $__p$0$ph$i$i2;
   while (1) {
    HEAP8[$__p$02$i$i5 >> 0] = HEAP8[$$03$i$i4 >> 0] | 0;
    $$03$i$i4 = $$03$i$i4 + 1 | 0;
    if (($$03$i$i4 | 0) == ($12 | 0)) break; else $__p$02$i$i5 = $__p$02$i$i5 + 1 | 0;
   }
   $__p$0$lcssa$i$i9 = $__p$0$ph$i$i2 + $14 | 0;
  }
  HEAP8[$__p$0$lcssa$i$i9 >> 0] = 0;
  return;
 }
 if (!($1 & 8)) {
  HEAP32[$agg$result + 0 >> 2] = 0;
  HEAP32[$agg$result + 4 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = 0;
  return;
 }
 $34 = HEAP32[$this + 8 >> 2] | 0;
 $36 = HEAP32[$this + 16 >> 2] | 0;
 $39 = $36 - $34 | 0;
 if ($39 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($agg$result);
 if ($39 >>> 0 < 11) {
  HEAP8[$agg$result >> 0] = $39 << 1;
  $__p$0$ph$i$i = $agg$result + 1 | 0;
 } else {
  $46 = $39 + 16 & -16;
  $47 = __Znwj($46) | 0;
  HEAP32[$agg$result + 8 >> 2] = $47;
  HEAP32[$agg$result >> 2] = $46 | 1;
  HEAP32[$agg$result + 4 >> 2] = $39;
  $__p$0$ph$i$i = $47;
 }
 if (($34 | 0) == ($36 | 0)) $__p$0$lcssa$i$i = $__p$0$ph$i$i; else {
  $$03$i$i = $34;
  $__p$02$i$i = $__p$0$ph$i$i;
  while (1) {
   HEAP8[$__p$02$i$i >> 0] = HEAP8[$$03$i$i >> 0] | 0;
   $$03$i$i = $$03$i$i + 1 | 0;
   if (($$03$i$i | 0) == ($36 | 0)) break; else $__p$02$i$i = $__p$02$i$i + 1 | 0;
  }
  $__p$0$lcssa$i$i = $__p$0$ph$i$i + $39 | 0;
 }
 HEAP8[$__p$0$lcssa$i$i >> 0] = 0;
 return;
}

function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $17 = 0, $20 = 0, $25 = 0, $27 = 0, $34 = 0, $4 = 0, $46 = 0, $49 = 0, label = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $1 = ($0 | 0) == ($__a | 0);
 do if ($1) {
  $4 = (HEAP8[$__atoms + 24 >> 0] | 0) == $__ct << 24 >> 24;
  if (!$4) if ((HEAP8[$__atoms + 25 >> 0] | 0) != $__ct << 24 >> 24) {
   label = 5;
   break;
  }
  HEAP32[$__a_end >> 2] = $__a + 1;
  HEAP8[$__a >> 0] = $4 ? 43 : 45;
  HEAP32[$__dc >> 2] = 0;
  $$0 = 0;
 } else label = 5; while (0);
 do if ((label | 0) == 5) {
  $10 = HEAP8[$__grouping >> 0] | 0;
  if (!($10 & 1)) $17 = ($10 & 255) >>> 1; else $17 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (($17 | 0) != 0 ? $__ct << 24 >> 24 == $__thousands_sep << 24 >> 24 : 0) {
   $20 = HEAP32[$__g_end >> 2] | 0;
   if (($20 - $__g | 0) >= 160) {
    $$0 = 0;
    break;
   }
   $25 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $20 + 4;
   HEAP32[$20 >> 2] = $25;
   HEAP32[$__dc >> 2] = 0;
   $$0 = 0;
   break;
  }
  $27 = $__atoms + 26 | 0;
  $$0$i = $__atoms;
  while (1) {
   if (($$0$i | 0) == ($27 | 0)) {
    $$0$lcssa$i = $27;
    break;
   }
   if ((HEAP8[$$0$i >> 0] | 0) == $__ct << 24 >> 24) {
    $$0$lcssa$i = $$0$i;
    break;
   }
   $$0$i = $$0$i + 1 | 0;
  }
  $34 = $$0$lcssa$i - $__atoms | 0;
  if (($34 | 0) > 23) $$0 = -1; else {
   if (($__base | 0) == 16) {
    if (($34 | 0) >= 22) {
     if ($1) {
      $$0 = -1;
      break;
     }
     if (($0 - $__a | 0) >= 3) {
      $$0 = -1;
      break;
     }
     if ((HEAP8[$0 + -1 >> 0] | 0) != 48) {
      $$0 = -1;
      break;
     }
     HEAP32[$__dc >> 2] = 0;
     $46 = HEAP8[48720 + $34 >> 0] | 0;
     HEAP32[$__a_end >> 2] = $0 + 1;
     HEAP8[$0 >> 0] = $46;
     $$0 = 0;
     break;
    }
   } else if (($__base | 0) == 10 | ($__base | 0) == 8) if (($34 | 0) >= ($__base | 0)) {
    $$0 = -1;
    break;
   }
   $49 = HEAP8[48720 + $34 >> 0] | 0;
   HEAP32[$__a_end >> 2] = $0 + 1;
   HEAP8[$0 >> 0] = $49;
   HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
   $$0 = 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $17 = 0, $20 = 0, $25 = 0, $27 = 0, $34 = 0, $35 = 0, $4 = 0, $47 = 0, $50 = 0, label = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $1 = ($0 | 0) == ($__a | 0);
 do if ($1) {
  $4 = (HEAP32[$__atoms + 96 >> 2] | 0) == ($__ct | 0);
  if (!$4) if ((HEAP32[$__atoms + 100 >> 2] | 0) != ($__ct | 0)) {
   label = 5;
   break;
  }
  HEAP32[$__a_end >> 2] = $__a + 1;
  HEAP8[$__a >> 0] = $4 ? 43 : 45;
  HEAP32[$__dc >> 2] = 0;
  $$0 = 0;
 } else label = 5; while (0);
 do if ((label | 0) == 5) {
  $10 = HEAP8[$__grouping >> 0] | 0;
  if (!($10 & 1)) $17 = ($10 & 255) >>> 1; else $17 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (($__ct | 0) == ($__thousands_sep | 0) & ($17 | 0) != 0) {
   $20 = HEAP32[$__g_end >> 2] | 0;
   if (($20 - $__g | 0) >= 160) {
    $$0 = 0;
    break;
   }
   $25 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $20 + 4;
   HEAP32[$20 >> 2] = $25;
   HEAP32[$__dc >> 2] = 0;
   $$0 = 0;
   break;
  }
  $27 = $__atoms + 104 | 0;
  $$0$i = $__atoms;
  while (1) {
   if (($$0$i | 0) == ($27 | 0)) {
    $$0$lcssa$i = $27;
    break;
   }
   if ((HEAP32[$$0$i >> 2] | 0) == ($__ct | 0)) {
    $$0$lcssa$i = $$0$i;
    break;
   }
   $$0$i = $$0$i + 4 | 0;
  }
  $34 = $$0$lcssa$i - $__atoms | 0;
  $35 = $34 >> 2;
  if (($34 | 0) > 92) $$0 = -1; else {
   if (($__base | 0) == 10 | ($__base | 0) == 8) {
    if (($35 | 0) >= ($__base | 0)) {
     $$0 = -1;
     break;
    }
   } else if (($__base | 0) == 16) if (($34 | 0) >= 88) {
    if ($1) {
     $$0 = -1;
     break;
    }
    if (($0 - $__a | 0) >= 3) {
     $$0 = -1;
     break;
    }
    if ((HEAP8[$0 + -1 >> 0] | 0) != 48) {
     $$0 = -1;
     break;
    }
    HEAP32[$__dc >> 2] = 0;
    $47 = HEAP8[48720 + $35 >> 0] | 0;
    HEAP32[$__a_end >> 2] = $0 + 1;
    HEAP8[$0 >> 0] = $47;
    $$0 = 0;
    break;
   }
   $50 = HEAP8[48720 + $35 >> 0] | 0;
   HEAP32[$__a_end >> 2] = $0 + 1;
   HEAP8[$0 >> 0] = $50;
   HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
   $$0 = 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZN9Allocator4makeI5ApplyJ13LocationRangeRP3ASTRNSt3__16vectorIS4_NS6_9allocatorIS4_EEEERbEEEPT_DpOT0_($this, $args, $args1, $args2, $args3) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 $args3 = $args3 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $13 = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $28 = 0, $29 = 0, $3 = 0, $35 = 0, $37 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(68) | 0;
 $2 = HEAP32[$args1 >> 2] | 0;
 $3 = HEAP8[$args3 >> 0] | 0;
 HEAP32[$1 >> 2] = 35936;
 $4 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $4 | 0, $args | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $37 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $37;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $7 = $1 + 16 | 0;
 $8 = $args + 12 | 0;
 HEAP32[$7 + 0 >> 2] = HEAP32[$8 + 0 >> 2];
 HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
 HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
 HEAP32[$7 + 12 >> 2] = HEAP32[$8 + 12 >> 2];
 $9 = $1 + 32 | 0;
 $10 = $1 + 40 | 0;
 HEAP32[$9 + 0 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 HEAP32[$9 + 12 >> 2] = 0;
 HEAP32[$1 >> 2] = 37344;
 HEAP32[$1 + 48 >> 2] = $2;
 __THREW__ = 0;
 invoke_vii(58, $1 + 52 | 0, $args2 | 0);
 $13 = __THREW__;
 __THREW__ = 0;
 if ($13 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  $16 = tempRet0;
  HEAP32[$1 >> 2] = 35936;
  $18 = HEAP32[$1 + 36 >> 2] | 0;
  $20 = $18;
  if ($18) {
   $21 = HEAP32[$10 >> 2] | 0;
   if (($21 | 0) != ($18 | 0)) HEAP32[$10 >> 2] = $21 + (~(($21 + -4 - $20 | 0) >>> 2) << 2);
   __ZdlPv($18);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $eh$lpad$body$index2Z2D = $16;
  $eh$lpad$body$indexZ2D = $15;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP8[$1 + 64 >> 0] = $3;
 HEAP32[$0 >> 2] = $1;
 $28 = $this + 16 | 0;
 $29 = HEAP32[$28 >> 2] | 0;
 if ($29 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$29) $35 = 0; else {
  HEAP32[$29 >> 2] = $1;
  $35 = HEAP32[$28 >> 2] | 0;
 }
 HEAP32[$28 >> 2] = $35 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN9Allocator4makeI5ApplyJ13LocationRangeRP3ASTRNSt3__16vectorIS4_NS6_9allocatorIS4_EEEEbEEEPT_DpOT0_($this, $args, $args1, $args2, $args3) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 $args3 = $args3 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $13 = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $28 = 0, $29 = 0, $3 = 0, $35 = 0, $37 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(68) | 0;
 $2 = HEAP32[$args1 >> 2] | 0;
 $3 = HEAP8[$args3 >> 0] | 0;
 HEAP32[$1 >> 2] = 35936;
 $4 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $4 | 0, $args | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $37 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $37;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $7 = $1 + 16 | 0;
 $8 = $args + 12 | 0;
 HEAP32[$7 + 0 >> 2] = HEAP32[$8 + 0 >> 2];
 HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
 HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
 HEAP32[$7 + 12 >> 2] = HEAP32[$8 + 12 >> 2];
 $9 = $1 + 32 | 0;
 $10 = $1 + 40 | 0;
 HEAP32[$9 + 0 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 HEAP32[$9 + 12 >> 2] = 0;
 HEAP32[$1 >> 2] = 37344;
 HEAP32[$1 + 48 >> 2] = $2;
 __THREW__ = 0;
 invoke_vii(58, $1 + 52 | 0, $args2 | 0);
 $13 = __THREW__;
 __THREW__ = 0;
 if ($13 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  $16 = tempRet0;
  HEAP32[$1 >> 2] = 35936;
  $18 = HEAP32[$1 + 36 >> 2] | 0;
  $20 = $18;
  if ($18) {
   $21 = HEAP32[$10 >> 2] | 0;
   if (($21 | 0) != ($18 | 0)) HEAP32[$10 >> 2] = $21 + (~(($21 + -4 - $20 | 0) >>> 2) << 2);
   __ZdlPv($18);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $eh$lpad$body$index2Z2D = $16;
  $eh$lpad$body$indexZ2D = $15;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP8[$1 + 64 >> 0] = $3;
 HEAP32[$0 >> 2] = $1;
 $28 = $this + 16 | 0;
 $29 = HEAP32[$28 >> 2] | 0;
 if ($29 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$29) $35 = 0; else {
  HEAP32[$29 >> 2] = $1;
  $35 = HEAP32[$28 >> 2] | 0;
 }
 HEAP32[$28 >> 2] = $35 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function _mbrtowc($wc, $src, $n, $st) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$lcssa = 0, $$lcssa22 = 0, $$lcssa24 = 0, $$st = 0, $0 = 0, $11 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $32 = 0, $8 = 0, $9 = 0, $c$04 = 0, $c$1 = 0, $c$2 = 0, $s$05 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = $wc;
 $$st = ($st | 0) == 0 ? 42928 : $st;
 $2 = HEAP32[$$st >> 2] | 0;
 L1 : do if (!$src) {
  if (!$2) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  if (!$wc) {
   HEAP32[$0 >> 2] = $0;
   $11 = $0;
  } else $11 = $wc;
  if (!$n) {
   $$0 = -2;
   STACKTOP = sp;
   return $$0 | 0;
  }
  do if (!$2) {
   $8 = HEAP8[$src >> 0] | 0;
   $9 = $8 & 255;
   if ($8 << 24 >> 24 > -1) {
    HEAP32[$11 >> 2] = $9;
    $$0 = $8 << 24 >> 24 != 0 & 1;
    STACKTOP = sp;
    return $$0 | 0;
   } else {
    $14 = $9 + -194 | 0;
    if ($14 >>> 0 > 50) break L1;
    $18 = HEAP32[42712 + ($14 << 2) >> 2] | 0;
    $19 = $n + -1 | 0;
    if (!$19) {
     $c$2 = $18;
     break;
    } else {
     $$023 = $19;
     $c$04 = $18;
     $s$05 = $src + 1 | 0;
     label = 11;
     break;
    }
   }
  } else {
   $$023 = $n;
   $c$04 = $2;
   $s$05 = $src;
   label = 11;
  } while (0);
  do if ((label | 0) == 11) {
   $21 = HEAP8[$s$05 >> 0] | 0;
   $23 = ($21 & 255) >>> 3;
   if (($23 + -16 | $23 + ($c$04 >> 26)) >>> 0 > 7) break L1;
   $$1 = $$023;
   $32 = $21;
   $c$1 = $c$04;
   $s$1 = $s$05;
   while (1) {
    $s$1 = $s$1 + 1 | 0;
    $c$1 = ($32 & 255) + -128 | $c$1 << 6;
    $$1 = $$1 + -1 | 0;
    if (($c$1 | 0) >= 0) {
     $$lcssa = $c$1;
     $$lcssa24 = $$1;
     label = 14;
     break;
    }
    if (!$$1) {
     $$lcssa22 = $c$1;
     label = 17;
     break;
    }
    $32 = HEAP8[$s$1 >> 0] | 0;
    if (($32 & -64) << 24 >> 24 != -128) {
     label = 19;
     break;
    }
   }
   if ((label | 0) == 14) {
    HEAP32[$$st >> 2] = 0;
    HEAP32[$11 >> 2] = $$lcssa;
    $$0 = $n - $$lcssa24 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 17) {
    $c$2 = $$lcssa22;
    break;
   } else if ((label | 0) == 19) break L1;
  } while (0);
  HEAP32[$$st >> 2] = $c$2;
  $$0 = -2;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 HEAP32[$$st >> 2] = 0;
 HEAP32[(___errno_location() | 0) >> 2] = 84;
 $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_18type_strENS_5Value4TypeE($agg$result, $t) {
 $agg$result = $agg$result | 0;
 $t = $t | 0;
 var $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 switch ($t | 0) {
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39288, 7);
   STACKTOP = sp;
   return;
  }
 case 17:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39312, 8);
   STACKTOP = sp;
   return;
  }
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39280, 4);
   STACKTOP = sp;
   return;
  }
 case 16:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39304, 5);
   STACKTOP = sp;
   return;
  }
 case 18:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39328, 6);
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39296, 6);
   STACKTOP = sp;
   return;
  }
 case 19:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 39336, 6);
   STACKTOP = sp;
   return;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(45984, 39344, 30) | 0, $t) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $7 = invoke_iii(22, $0 | 0, 50208) | 0;
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   }
   __THREW__ = 0;
   $13 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 10) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $13) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 }
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phi8Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $10 = 0, $11 = 0, $20 = 0, $21 = 0, $25 = 0, $29 = 0, $31 = 0, $33 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $6 = 0, $8 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $0 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($0 & 1) {
  $31 = ___cxa_find_matching_catch(0) | 0;
  $$0 = $31;
  $$pre$phi8Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 12;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   $6 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
   $8 = HEAP32[$this + ($6 + 24) >> 2] | 0;
   if (!$8) {
    $25 = $6;
    label = 9;
   } else {
    $10 = $8 + 24 | 0;
    $11 = HEAP32[$10 >> 2] | 0;
    if (($11 | 0) != (HEAP32[$8 + 28 >> 2] | 0)) {
     HEAP32[$10 >> 2] = $11 + 1;
     HEAP8[$11 >> 0] = $__c;
     break;
    }
    __THREW__ = 0;
    $20 = invoke_iii(HEAP32[(HEAP32[$8 >> 2] | 0) + 52 >> 2] | 0, $8 | 0, $__c & 255 | 0) | 0;
    $21 = __THREW__;
    __THREW__ = 0;
    if (!($21 & 1)) {
     if (($20 | 0) != -1) break;
     $25 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
     label = 9;
    }
   }
   if ((label | 0) == 9) {
    __THREW__ = 0;
    invoke_vii(48, $this + $25 | 0, HEAP32[$this + ($25 + 16) >> 2] | 1 | 0);
    $29 = __THREW__;
    __THREW__ = 0;
    if (!($29 & 1)) break;
   }
   $33 = ___cxa_find_matching_catch(0) | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$0 = $33;
   $$pre$phi8Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 12;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 12) {
  ___cxa_begin_catch($$0 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $$pre$phi8Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if (!($39 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $41 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $43 = __THREW__;
  __THREW__ = 0;
  if ($43 & 1) {
   $45 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($45);
  } else ___resumeException($41 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZN9Allocator4makeI15BuiltinFunctionJRK13LocationRangeRmRNSt3__16vectorIPK10IdentifierNS6_9allocatorISA_EEEEEEEPT_DpOT0_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $27 = 0, $28 = 0, $3 = 0, $34 = 0, $36 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(64) | 0;
 $2 = HEAP32[$args1 >> 2] | 0;
 HEAP32[$1 >> 2] = 35936;
 $3 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 | 0, $args | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $36 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $36;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $6 = $1 + 16 | 0;
 $7 = $args + 12 | 0;
 HEAP32[$6 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
 HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
 HEAP32[$6 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 3;
 $9 = $1 + 36 | 0;
 HEAP32[$9 >> 2] = 0;
 $10 = $1 + 40 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 35952;
 HEAP32[$1 + 48 >> 2] = $2;
 __THREW__ = 0;
 invoke_vii(53, $1 + 52 | 0, $args2 | 0);
 $14 = __THREW__;
 __THREW__ = 0;
 if ($14 & 1) {
  $16 = ___cxa_find_matching_catch() | 0;
  $17 = tempRet0;
  HEAP32[$1 >> 2] = 35936;
  $18 = HEAP32[$9 >> 2] | 0;
  $20 = $18;
  if ($18) {
   $21 = HEAP32[$10 >> 2] | 0;
   if (($21 | 0) != ($18 | 0)) HEAP32[$10 >> 2] = $21 + (~(($21 + -4 - $20 | 0) >>> 2) << 2);
   __ZdlPv($18);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $eh$lpad$body$index2Z2D = $17;
  $eh$lpad$body$indexZ2D = $16;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$0 >> 2] = $1;
 $27 = $this + 16 | 0;
 $28 = HEAP32[$27 >> 2] | 0;
 if ($28 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$28) $34 = 0; else {
  HEAP32[$28 >> 2] = $1;
  $34 = HEAP32[$27 >> 2] | 0;
 }
 HEAP32[$27 >> 2] = $34 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN9Allocator4makeI8FunctionJR13LocationRangeRNSt3__16vectorIPK10IdentifierNS4_9allocatorIS8_EEEERP3ASTEEEPT_DpOT0_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $27 = 0, $28 = 0, $3 = 0, $34 = 0, $36 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(64) | 0;
 $2 = HEAP32[$args2 >> 2] | 0;
 HEAP32[$1 >> 2] = 35936;
 $3 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 | 0, $args | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $36 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $36;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $6 = $1 + 16 | 0;
 $7 = $args + 12 | 0;
 HEAP32[$6 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
 HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
 HEAP32[$6 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 6;
 $9 = $1 + 36 | 0;
 HEAP32[$9 >> 2] = 0;
 $10 = $1 + 40 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 37808;
 __THREW__ = 0;
 invoke_vii(53, $1 + 48 | 0, $args1 | 0);
 $13 = __THREW__;
 __THREW__ = 0;
 if ($13 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  $16 = tempRet0;
  HEAP32[$1 >> 2] = 35936;
  $17 = HEAP32[$9 >> 2] | 0;
  $19 = $17;
  if ($17) {
   $20 = HEAP32[$10 >> 2] | 0;
   if (($20 | 0) != ($17 | 0)) HEAP32[$10 >> 2] = $20 + (~(($20 + -4 - $19 | 0) >>> 2) << 2);
   __ZdlPv($17);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $eh$lpad$body$index2Z2D = $16;
  $eh$lpad$body$indexZ2D = $15;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$1 + 60 >> 2] = $2;
 HEAP32[$0 >> 2] = $1;
 $27 = $this + 16 | 0;
 $28 = HEAP32[$27 >> 2] | 0;
 if ($28 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$28) $34 = 0; else {
  HEAP32[$28 >> 2] = $1;
  $34 = HEAP32[$27 >> 2] | 0;
 }
 HEAP32[$27 >> 2] = $34 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN9Allocator4makeI8FunctionJ13LocationRangeRNSt3__16vectorIPK10IdentifierNS3_9allocatorIS7_EEEERP3ASTEEEPT_DpOT0_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $27 = 0, $28 = 0, $3 = 0, $34 = 0, $36 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(64) | 0;
 $2 = HEAP32[$args2 >> 2] | 0;
 HEAP32[$1 >> 2] = 35936;
 $3 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 | 0, $args | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $36 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $36;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $6 = $1 + 16 | 0;
 $7 = $args + 12 | 0;
 HEAP32[$6 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
 HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
 HEAP32[$6 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 6;
 $9 = $1 + 36 | 0;
 HEAP32[$9 >> 2] = 0;
 $10 = $1 + 40 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 37808;
 __THREW__ = 0;
 invoke_vii(53, $1 + 48 | 0, $args1 | 0);
 $13 = __THREW__;
 __THREW__ = 0;
 if ($13 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  $16 = tempRet0;
  HEAP32[$1 >> 2] = 35936;
  $17 = HEAP32[$9 >> 2] | 0;
  $19 = $17;
  if ($17) {
   $20 = HEAP32[$10 >> 2] | 0;
   if (($20 | 0) != ($17 | 0)) HEAP32[$10 >> 2] = $20 + (~(($20 + -4 - $19 | 0) >>> 2) << 2);
   __ZdlPv($17);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $eh$lpad$body$index2Z2D = $16;
  $eh$lpad$body$indexZ2D = $15;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$1 + 60 >> 2] = $2;
 HEAP32[$0 >> 2] = $1;
 $27 = $this + 16 | 0;
 $28 = HEAP32[$27 >> 2] | 0;
 if ($28 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$28) $34 = 0; else {
  HEAP32[$28 >> 2] = $1;
  $34 = HEAP32[$27 >> 2] | 0;
 }
 HEAP32[$27 >> 2] = $34 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $33 = 0, $44 = 0, $6 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, label = 0;
 L1 : do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else {
  if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
   $44 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$44 >> 2] | 0) + 24 >> 2] & 15]($44, $info, $current_ptr, $path_below, $use_strcmp);
   break;
  }
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    $20 = $info + 44 | 0;
    if ((HEAP32[$20 >> 2] | 0) == 4) break;
    $23 = $info + 52 | 0;
    HEAP8[$23 >> 0] = 0;
    $24 = $info + 53 | 0;
    HEAP8[$24 >> 0] = 0;
    $26 = HEAP32[$this + 8 >> 2] | 0;
    FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$26 >> 2] | 0) + 20 >> 2] & 31]($26, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
    if (!(HEAP8[$24 >> 0] | 0)) {
     $is_dst_type_derived_from_static_type$0$off01 = 0;
     label = 13;
    } else if (!(HEAP8[$23 >> 0] | 0)) {
     $is_dst_type_derived_from_static_type$0$off01 = 1;
     label = 13;
    }
    do if ((label | 0) == 13) {
     HEAP32[$14 >> 2] = $current_ptr;
     $33 = $info + 40 | 0;
     HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
     if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) {
      HEAP8[$info + 54 >> 0] = 1;
      if ($is_dst_type_derived_from_static_type$0$off01) break;
     } else label = 16; else label = 16;
     if ((label | 0) == 16) if ($is_dst_type_derived_from_static_type$0$off01) break;
     HEAP32[$20 >> 2] = 4;
     break L1;
    } while (0);
    HEAP32[$20 >> 2] = 3;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $__s, $__ob, $__op, $__oe, $__iob, $__fl) {
 $agg$result = $agg$result | 0;
 $__s = $__s | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $0 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $36 = 0, $37 = 0, $5 = 0, $6 = 0, $7 = 0, $__ns$0 = 0, $__sp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__sp = sp;
 $0 = HEAP32[$__s >> 2] | 0;
 L1 : do if (!$0) HEAP32[$agg$result >> 2] = 0; else {
  $2 = $__oe;
  $3 = $__ob;
  $5 = $2 - $3 >> 2;
  $6 = $__iob + 12 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $__ns$0 = ($7 | 0) > ($5 | 0) ? $7 - $5 | 0 : 0;
  $10 = $__op;
  $11 = $10 - $3 | 0;
  $12 = $11 >> 2;
  if (($11 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__ob, $12) | 0) != ($12 | 0)) {
   HEAP32[$__s >> 2] = 0;
   HEAP32[$agg$result >> 2] = 0;
   break;
  }
  do if (($__ns$0 | 0) > 0) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp, $__ns$0, $__fl);
   if (!(HEAP8[$__sp >> 0] & 1)) $29 = $__sp + 4 | 0; else $29 = HEAP32[$__sp + 8 >> 2] | 0;
   __THREW__ = 0;
   $30 = invoke_iiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $29 | 0, $__ns$0 | 0) | 0;
   $31 = __THREW__;
   __THREW__ = 0;
   if ($31 & 1) {
    $34 = ___cxa_find_matching_catch() | 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
    ___resumeException($34 | 0);
   }
   if (($30 | 0) == ($__ns$0 | 0)) {
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
    break;
   } else {
    HEAP32[$__s >> 2] = 0;
    HEAP32[$agg$result >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
    break L1;
   }
  } while (0);
  $36 = $2 - $10 | 0;
  $37 = $36 >> 2;
  if (($36 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__op, $37) | 0) != ($37 | 0)) {
   HEAP32[$__s >> 2] = 0;
   HEAP32[$agg$result >> 2] = 0;
   break;
  }
  HEAP32[$6 >> 2] = 0;
  HEAP32[$agg$result >> 2] = $0;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZN9Allocator4makeI13LiteralStringJRK13LocationRangeRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEEEPT_DpOT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $34 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(60) | 0;
 HEAP32[$1 >> 2] = 35936;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $34;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 14;
 $8 = $1 + 36 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 35888;
 __THREW__ = 0;
 invoke_vii(40, $1 + 48 | 0, $args1 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  $15 = tempRet0;
  HEAP32[$1 >> 2] = 35936;
  $16 = HEAP32[$8 >> 2] | 0;
  $18 = $16;
  if ($16) {
   $19 = HEAP32[$9 >> 2] | 0;
   if (($19 | 0) != ($16 | 0)) HEAP32[$9 >> 2] = $19 + (~(($19 + -4 - $18 | 0) >>> 2) << 2);
   __ZdlPv($16);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $eh$lpad$body$index2Z2D = $15;
  $eh$lpad$body$indexZ2D = $14;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$0 >> 2] = $1;
 $25 = $this + 16 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 if ($26 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$26) $32 = 0; else {
  HEAP32[$26 >> 2] = $1;
  $32 = HEAP32[$25 >> 2] | 0;
 }
 HEAP32[$25 >> 2] = $32 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN9Allocator4makeI13LiteralStringJR13LocationRangeRNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEEPT_DpOT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $34 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(60) | 0;
 HEAP32[$1 >> 2] = 35936;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $34;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 14;
 $8 = $1 + 36 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 35888;
 __THREW__ = 0;
 invoke_vii(40, $1 + 48 | 0, $args1 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  $15 = tempRet0;
  HEAP32[$1 >> 2] = 35936;
  $16 = HEAP32[$8 >> 2] | 0;
  $18 = $16;
  if ($16) {
   $19 = HEAP32[$9 >> 2] | 0;
   if (($19 | 0) != ($16 | 0)) HEAP32[$9 >> 2] = $19 + (~(($19 + -4 - $18 | 0) >>> 2) << 2);
   __ZdlPv($16);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $eh$lpad$body$index2Z2D = $15;
  $eh$lpad$body$indexZ2D = $14;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$0 >> 2] = $1;
 $25 = $this + 16 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 if ($26 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$26) $32 = 0; else {
  HEAP32[$26 >> 2] = $1;
  $32 = HEAP32[$25 >> 2] | 0;
 }
 HEAP32[$25 >> 2] = $32 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN9Allocator4makeI13LiteralStringJ13LocationRangeRNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPT_DpOT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $34 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(60) | 0;
 HEAP32[$1 >> 2] = 35936;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $34;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 14;
 $8 = $1 + 36 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 35888;
 __THREW__ = 0;
 invoke_vii(40, $1 + 48 | 0, $args1 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  $15 = tempRet0;
  HEAP32[$1 >> 2] = 35936;
  $16 = HEAP32[$8 >> 2] | 0;
  $18 = $16;
  if ($16) {
   $19 = HEAP32[$9 >> 2] | 0;
   if (($19 | 0) != ($16 | 0)) HEAP32[$9 >> 2] = $19 + (~(($19 + -4 - $18 | 0) >>> 2) << 2);
   __ZdlPv($16);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $eh$lpad$body$index2Z2D = $15;
  $eh$lpad$body$indexZ2D = $14;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$0 >> 2] = $1;
 $25 = $this + 16 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 if ($26 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$26) $32 = 0; else {
  HEAP32[$26 >> 2] = $1;
  $32 = HEAP32[$25 >> 2] | 0;
 }
 HEAP32[$25 >> 2] = $32 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZL6appendRNSt3__13setIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEEERKS8_($r, $s) {
 $r = $r | 0;
 $s = $s | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$lcssa = 0, $$01$i$i$i = 0, $$byval_copy = 0, $$cast$i$i$i$lcssa = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $19 = 0, $2 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__parent$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent$i$i = sp + 4 | 0;
 $0 = sp;
 $1 = HEAP32[$s >> 2] | 0;
 $2 = $s + 4 | 0;
 $3 = $r + 4 | 0;
 if (($1 | 0) == ($2 | 0)) {
  STACKTOP = sp;
  return;
 }
 $5 = $r + 4 | 0;
 $6 = $r + 8 | 0;
 $26 = $1;
 $8 = $1;
 while (1) {
  $7 = $8 + 16 | 0;
  HEAP32[$0 >> 2] = $3;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  $9 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($r, $$byval_copy, $__parent$i$i, $7) | 0;
  if (!(HEAP32[$9 >> 2] | 0)) {
   $12 = __Znwj(20) | 0;
   HEAP32[$12 + 16 >> 2] = HEAP32[$7 >> 2];
   $15 = HEAP32[$__parent$i$i >> 2] | 0;
   HEAP32[$12 >> 2] = 0;
   HEAP32[$12 + 4 >> 2] = 0;
   HEAP32[$12 + 8 >> 2] = $15;
   HEAP32[$9 >> 2] = $12;
   $19 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
   if (!$19) $22 = $12; else {
    HEAP32[$r >> 2] = $19;
    $22 = HEAP32[$9 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$5 >> 2] | 0, $22);
   HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
  }
  $27 = HEAP32[$26 + 4 >> 2] | 0;
  if (!$27) {
   $$0$i$i$i = $26;
   while (1) {
    $32 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$32 >> 2] | 0) == ($$0$i$i$i | 0)) {
     $$cast$i$i$i$lcssa = $32;
     break;
    } else $$0$i$i$i = $32;
   }
   $$01$i$i$i = $$cast$i$i$i$lcssa;
  } else {
   $$0$i$i$i$i = $27;
   while (1) {
    $29 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$29) {
     $$0$i$i$i$i$lcssa = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $29;
   }
   $$01$i$i$i = $$0$i$i$i$i$lcssa;
  }
  if (($$01$i$i$i | 0) == ($2 | 0)) break; else {
   $26 = $$01$i$i$i;
   $8 = $$01$i$i$i;
  }
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $__s, $__ob, $__op, $__oe, $__iob, $__fl) {
 $agg$result = $agg$result | 0;
 $__s = $__s | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $0 = 0, $10 = 0, $2 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $__ns$0 = 0, $__sp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__sp = sp;
 $0 = HEAP32[$__s >> 2] | 0;
 if (!$0) {
  HEAP32[$agg$result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $2 = $__oe;
 $3 = $__ob;
 $4 = $2 - $3 | 0;
 $5 = $__iob + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $__ns$0 = ($6 | 0) > ($4 | 0) ? $6 - $4 | 0 : 0;
 $9 = $__op;
 $10 = $9 - $3 | 0;
 if (($10 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__ob, $10) | 0) != ($10 | 0)) {
  HEAP32[$__s >> 2] = 0;
  HEAP32[$agg$result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 do if (($__ns$0 | 0) > 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($__sp, $__ns$0, $__fl);
  if (!(HEAP8[$__sp >> 0] & 1)) $27 = $__sp + 1 | 0; else $27 = HEAP32[$__sp + 8 >> 2] | 0;
  __THREW__ = 0;
  $28 = invoke_iiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $27 | 0, $__ns$0 | 0) | 0;
  $29 = __THREW__;
  __THREW__ = 0;
  if ($29 & 1) {
   $32 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   ___resumeException($32 | 0);
  }
  if (($28 | 0) == ($__ns$0 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   break;
  }
  HEAP32[$__s >> 2] = 0;
  HEAP32[$agg$result >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
  STACKTOP = sp;
  return;
 } while (0);
 $34 = $2 - $9 | 0;
 if (($34 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__op, $34) | 0) != ($34 | 0)) {
  HEAP32[$__s >> 2] = 0;
  HEAP32[$agg$result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 HEAP32[$5 >> 2] = 0;
 HEAP32[$agg$result >> 2] = $0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this, $__res_arg) {
 $this = $this | 0;
 $__res_arg = $__res_arg | 0;
 var $1 = 0, $14 = 0, $16 = 0, $20 = 0, $22 = 0, $28 = 0, $30 = 0, $31 = 0, $33 = 0, $4 = 0, $47 = 0, $8 = 0, $__new_data$0 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 if ($__res_arg >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $22 = 10;
  $8 = $1;
 } else {
  $4 = HEAP32[$this >> 2] | 0;
  $22 = ($4 & -2) + -1 | 0;
  $8 = $4 & 255;
 }
 if (!($8 & 1)) $14 = ($8 & 255) >>> 1; else $14 = HEAP32[$this + 4 >> 2] | 0;
 $16 = $14 >>> 0 > $__res_arg >>> 0 ? $14 : $__res_arg;
 if ($16 >>> 0 < 11) $20 = 10; else $20 = ($16 + 16 & -16) + -1 | 0;
 L14 : do if (($20 | 0) != ($22 | 0)) {
  do if (($20 | 0) == 10) {
   $__new_data$1 = $this + 1 | 0;
   $__now_long$0$off0 = 0;
   $__p$0 = HEAP32[$this + 8 >> 2] | 0;
   $__was_long$0$off0 = 1;
  } else {
   $28 = $20 + 1 | 0;
   if ($20 >>> 0 > $22 >>> 0) $__new_data$0 = __Znwj($28) | 0; else {
    __THREW__ = 0;
    $30 = invoke_ii(67, $28 | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if ($31 & 1) {
     $33 = ___cxa_find_matching_catch(0) | 0;
     ___cxa_begin_catch($33 | 0) | 0;
     ___cxa_end_catch();
     break L14;
    } else $__new_data$0 = $30;
   }
   if (!($8 & 1)) {
    $__new_data$1 = $__new_data$0;
    $__now_long$0$off0 = 1;
    $__p$0 = $this + 1 | 0;
    $__was_long$0$off0 = 0;
    break;
   } else {
    $__new_data$1 = $__new_data$0;
    $__now_long$0$off0 = 1;
    $__p$0 = HEAP32[$this + 8 >> 2] | 0;
    $__was_long$0$off0 = 1;
    break;
   }
  } while (0);
  if (!($8 & 1)) $47 = ($8 & 255) >>> 1; else $47 = HEAP32[$this + 4 >> 2] | 0;
  _memcpy($__new_data$1 | 0, $__p$0 | 0, $47 + 1 | 0) | 0;
  if ($__was_long$0$off0) __ZdlPv($__p$0);
  if ($__now_long$0$off0) {
   HEAP32[$this >> 2] = $20 + 1 | 1;
   HEAP32[$this + 4 >> 2] = $14;
   HEAP32[$this + 8 >> 2] = $__new_data$1;
   break;
  } else {
   HEAP8[$this >> 0] = $14 << 1;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignINS_19istreambuf_iteratorIcS2_EEEENS_9enable_ifIXaasr19__is_input_iteratorIT_EE5valuentsr21__is_forward_iteratorISA_EE5valueERS5_E4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $18 = 0, $19 = 0, $20 = 0, $32 = 0, $33 = 0, $34 = 0, $44 = 0, label = 0;
 if (!(HEAP8[$this >> 0] & 1)) {
  HEAP8[$this + 1 >> 0] = 0;
  HEAP8[$this >> 0] = 0;
 } else {
  HEAP8[HEAP32[$this + 8 >> 2] >> 0] = 0;
  HEAP32[$this + 4 >> 2] = 0;
 }
 $$pre$i$i$i = HEAP32[$__first >> 2] | 0;
 L5 : while (1) {
  if (!$$pre$i$i$i) $18 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0) == -1) {
   HEAP32[$__first >> 2] = 0;
   $18 = 0;
  } else $18 = $$pre$i$i$i; else $18 = $$pre$i$i$i;
  $19 = ($18 | 0) == 0;
  $20 = HEAP32[$__last >> 2] | 0;
  do if (!$20) label = 14; else {
   if ((HEAP32[$20 + 12 >> 2] | 0) != (HEAP32[$20 + 16 >> 2] | 0)) if ($19) break; else {
    label = 23;
    break L5;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0) == -1) {
    HEAP32[$__last >> 2] = 0;
    label = 14;
    break;
   } else if ($19) break; else {
    label = 23;
    break L5;
   }
  } while (0);
  if ((label | 0) == 14) {
   label = 0;
   if ($19) {
    label = 23;
    break;
   }
  }
  $32 = $18 + 12 | 0;
  $33 = HEAP32[$32 >> 2] | 0;
  $34 = $18 + 16 | 0;
  if (($33 | 0) == (HEAP32[$34 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 36 >> 2] & 127]($18) | 0; else $$0$i$i = HEAPU8[$33 >> 0] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this, $$0$i$i & 255);
  $44 = HEAP32[$32 >> 2] | 0;
  if (($44 | 0) == (HEAP32[$34 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 40 >> 2] & 127]($18) | 0; else HEAP32[$32 >> 2] = $44 + 1;
  $$pre$i$i$i = $18;
 }
 if ((label | 0) == 23) return $this | 0;
 return 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 116 | 0;
 $__nar = sp + 104 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[49e3] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[49001] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[49002] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[49003] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[49004] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[49005] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 48904, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(43, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $13, $14, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 116 | 0;
 $__nar = sp + 104 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[49e3] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[49001] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[49002] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[49003] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[49004] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[49005] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 48904, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(43, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $13, $14, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this, $__res_arg) {
 $this = $this | 0;
 $__res_arg = $__res_arg | 0;
 var $$sink = 0, $1 = 0, $14 = 0, $16 = 0, $20 = 0, $22 = 0, $29 = 0, $31 = 0, $32 = 0, $34 = 0, $4 = 0, $48 = 0, $8 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 if ($__res_arg >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $22 = 1;
  $8 = $1;
 } else {
  $4 = HEAP32[$this >> 2] | 0;
  $22 = ($4 & -2) + -1 | 0;
  $8 = $4 & 255;
 }
 if (!($8 & 1)) $14 = ($8 & 255) >>> 1; else $14 = HEAP32[$this + 4 >> 2] | 0;
 $16 = $14 >>> 0 > $__res_arg >>> 0 ? $14 : $__res_arg;
 if ($16 >>> 0 < 2) $20 = 1; else $20 = ($16 + 4 & -4) + -1 | 0;
 L14 : do if (($20 | 0) != ($22 | 0)) {
  do if (($20 | 0) == 1) {
   $__new_data$1 = $this + 4 | 0;
   $__now_long$0$off0 = 0;
   $__p$0 = HEAP32[$this + 8 >> 2] | 0;
   $__was_long$0$off0 = 1;
  } else {
   $29 = ($20 << 2) + 4 | 0;
   if ($20 >>> 0 > $22 >>> 0) $$sink = __Znwj($29) | 0; else {
    __THREW__ = 0;
    $31 = invoke_ii(67, $29 | 0) | 0;
    $32 = __THREW__;
    __THREW__ = 0;
    if ($32 & 1) {
     $34 = ___cxa_find_matching_catch(0) | 0;
     ___cxa_begin_catch($34 | 0) | 0;
     ___cxa_end_catch();
     break L14;
    } else $$sink = $31;
   }
   if (!($8 & 1)) {
    $__new_data$1 = $$sink;
    $__now_long$0$off0 = 1;
    $__p$0 = $this + 4 | 0;
    $__was_long$0$off0 = 0;
    break;
   } else {
    $__new_data$1 = $$sink;
    $__now_long$0$off0 = 1;
    $__p$0 = HEAP32[$this + 8 >> 2] | 0;
    $__was_long$0$off0 = 1;
    break;
   }
  } while (0);
  if (!($8 & 1)) $48 = ($8 & 255) >>> 1; else $48 = HEAP32[$this + 4 >> 2] | 0;
  _wmemcpy($__new_data$1, $__p$0, $48 + 1 | 0) | 0;
  if ($__was_long$0$off0) __ZdlPv($__p$0);
  if ($__now_long$0$off0) {
   HEAP32[$this >> 2] = $20 + 1 | 1;
   HEAP32[$this + 4 >> 2] = $14;
   HEAP32[$this + 8 >> 2] = $__new_data$1;
   break;
  } else {
   HEAP8[$this >> 0] = $14 << 1;
   break;
  }
 } while (0);
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 56 | 0;
 $__nar = sp + 44 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[49e3] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[49001] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[49002] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[49003] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[49004] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[49005] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 48904, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(41, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $13, $14, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 56 | 0;
 $__nar = sp + 44 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[49e3] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[49001] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[49002] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[49003] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[49004] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[49005] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 48904, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(41, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $13, $14, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 180 | 0;
 $__nar = sp + 160 | 0;
 $__o = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[49008] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[49009] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[49010] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[49011] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[49012] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[49013] | 0;
 $2 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $3 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 20, $2, $__fmt, $$byval_copy) | 0;
 $4 = $__nar + $3 | 0;
 $5 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $4, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $6 = invoke_iii(22, $0 | 0, 50200) | 0;
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] & 31]($6, $__nar, $4, $__o) | 0;
 $13 = $__o + ($3 << 2) | 0;
 if (($5 | 0) == ($4 | 0)) $__op$0 = $13; else $__op$0 = $__o + ($5 - $__nar << 2) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $__op$0, $13, $__iob, $__fl);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 72 | 0;
 $__nar = sp + 52 | 0;
 $__o = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[49008] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[49009] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[49010] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[49011] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[49012] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[49013] | 0;
 $2 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $3 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 20, $2, $__fmt, $$byval_copy) | 0;
 $4 = $__nar + $3 | 0;
 $5 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $4, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $6 = invoke_iii(22, $0 | 0, 50208) | 0;
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] & 31]($6, $__nar, $4, $__o) | 0;
 $13 = $__o + $3 | 0;
 if (($5 | 0) == ($4 | 0)) $__op$0 = $13; else $__op$0 = $__o + ($5 - $__nar) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $__op$0, $13, $__iob, $__fl);
 STACKTOP = sp;
 return;
}

function ___cxx_global_array_dtor69($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56780 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56768 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56756 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56744 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56732 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56720 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56708 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56696 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56684 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56672 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56660 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56648 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56636 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56624 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56612 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56600 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56588 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56576 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56564 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56552 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56540 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56528 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56516 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(56504);
 return;
}

function ___cxx_global_array_dtor45($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55940 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55928 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55916 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55904 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55892 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55880 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55868 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55856 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55844 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55832 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55820 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55808 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55796 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55784 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55772 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55760 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55748 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55736 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55724 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55712 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55700 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55688 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55676 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55664);
 return;
}

function ___cxx_global_array_dtor42($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55628 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55616 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55604 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55592 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55580 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55568 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55556 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55544 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55532 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55520 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55508 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55496 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55484 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55472 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55460 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55448 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55436 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55424 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55412 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55400 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55388 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55376 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55364 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(55352);
 return;
}

function __ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK5Token($o, $v) {
 $o = $o | 0;
 $v = $v | 0;
 var $0 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $7 = 0, $8 = 0;
 $0 = $v + 4 | 0;
 $2 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($0, 48920) | 0) == 0;
 $3 = HEAP32[$v >> 2] | 0;
 if ($2) {
  $4 = __ZN5Token8toStringENS_4KindE($3) | 0;
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, $4, _strlen($4 | 0) | 0) | 0;
  return;
 }
 if (($3 | 0) == 13) {
  $7 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 39568, 1) | 0;
  $8 = HEAP8[$0 >> 0] | 0;
  if (!($8 & 1)) {
   $18 = $0 + 1 | 0;
   $19 = ($8 & 255) >>> 1;
  } else {
   $18 = HEAP32[$v + 12 >> 2] | 0;
   $19 = HEAP32[$v + 8 >> 2] | 0;
  }
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($7, $18, $19) | 0, 39568, 1) | 0;
  return;
 } else {
  $21 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 42256, 1) | 0;
  $23 = __ZN5Token8toStringENS_4KindE(HEAP32[$v >> 2] | 0) | 0;
  $26 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($21, $23, _strlen($23 | 0) | 0) | 0, 36808, 3) | 0;
  $27 = HEAP8[$0 >> 0] | 0;
  if (!($27 & 1)) {
   $37 = $0 + 1 | 0;
   $38 = ($27 & 255) >>> 1;
  } else {
   $37 = HEAP32[$v + 12 >> 2] | 0;
   $38 = HEAP32[$v + 8 >> 2] | 0;
  }
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($26, $37, $38) | 0, 36816, 2) | 0;
  return;
 }
}

function ___cxx_global_array_dtor($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55300 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55288 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55276 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55264 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55252 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55240 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55228 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55216 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55204 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55192 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55180 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55168 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55156 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55144 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55132 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55120 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55108 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55096 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55084 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55072 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55060 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55048 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55036 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(55024);
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $23 = 0, $25 = 0, $26 = 0, $30 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 42448;
 HEAP32[$this + 32 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$this + 40 >> 2] = 0;
 $5 = $this + 52 | 0;
 $6 = $this + 68 | 0;
 $7 = $this + 98 | 0;
 $8 = $this + 4 | 0;
 dest = $5 + 0 | 0;
 stop = dest + 44 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$5 + 44 >> 1] = 0;
 HEAP8[$5 + 46 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $8);
 __THREW__ = 0;
 $9 = invoke_iii(35, $0 | 0, 50272) | 0;
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $12 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($12);
 }
 __ZNSt3__16localeD2Ev($0);
 do if ($9) {
  __ZNSt3__16localeC2ERKS0_($1, $8);
  __THREW__ = 0;
  $14 = invoke_iii(22, $1 | 0, 50272) | 0;
  $15 = __THREW__;
  __THREW__ = 0;
  if (!($15 & 1)) {
   HEAP32[$6 >> 2] = $14;
   __ZNSt3__16localeD2Ev($1);
   $17 = HEAP32[$6 >> 2] | 0;
   HEAP8[$7 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 127]($17) | 0) & 1;
   break;
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $26 = tempRet0;
  __ZNSt3__16localeD2Ev($1);
  $$0 = $26;
  $$01 = $25;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($$01 | 0);
 } while (0);
 __THREW__ = 0;
 invoke_iiii(HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] | 0, $this | 0, 0, 4096) | 0;
 $30 = __THREW__;
 __THREW__ = 0;
 if (!($30 & 1)) {
  STACKTOP = sp;
  return;
 }
 $23 = ___cxa_find_matching_catch() | 0;
 $$0 = tempRet0;
 $$01 = $23;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 ___resumeException($$01 | 0);
}

function __ZNSt3__111__stdoutbufIcE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $20 = 0, $27 = 0, $31 = 0, $9 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, $pbase$0$lcssa8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = ($__c | 0) == -1;
 do if ($0) label = 12; else {
  HEAP8[$__1buf >> 0] = $__c;
  if (HEAP8[$this + 44 >> 0] | 0) if ((_fwrite($__1buf | 0, 1, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) {
   label = 12;
   break;
  } else {
   $$0 = -1;
   break;
  }
  HEAP32[$__extbe >> 2] = $__extbuf;
  $9 = $__1buf + 1 | 0;
  $10 = $this + 36 | 0;
  $11 = $this + 40 | 0;
  $12 = $__extbuf + 8 | 0;
  $13 = $__extbuf;
  $14 = $this + 32 | 0;
  $pbase$0 = $__1buf;
  while (1) {
   $15 = HEAP32[$10 >> 2] | 0;
   $20 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$15 >> 2] | 0) + 12 >> 2] & 15]($15, HEAP32[$11 >> 2] | 0, $pbase$0, $9, $__e, $__extbuf, $12, $__extbe) | 0;
   if ((HEAP32[$__e >> 2] | 0) == ($pbase$0 | 0)) {
    label = 13;
    break;
   }
   if (($20 | 0) == 3) {
    $pbase$0$lcssa8 = $pbase$0;
    label = 7;
    break;
   }
   $27 = ($20 | 0) == 1;
   if ($20 >>> 0 >= 2) {
    label = 13;
    break;
   }
   $31 = (HEAP32[$__extbe >> 2] | 0) - $13 | 0;
   if ((_fwrite($__extbuf | 0, 1, $31 | 0, HEAP32[$14 >> 2] | 0) | 0) != ($31 | 0)) {
    label = 13;
    break;
   }
   if ($27) $pbase$0 = $27 ? HEAP32[$__e >> 2] | 0 : $pbase$0; else {
    label = 11;
    break;
   }
  }
  if ((label | 0) == 7) if ((_fwrite($pbase$0$lcssa8 | 0, 1, 1, HEAP32[$14 >> 2] | 0) | 0) == 1) {
   label = 12;
   break;
  } else {
   $$0 = -1;
   break;
  } else if ((label | 0) == 11) {
   label = 12;
   break;
  } else if ((label | 0) == 13) {
   $$0 = -1;
   break;
  }
 } while (0);
 if ((label | 0) == 12) $$0 = $0 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIwE8overflowEj($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $26 = 0, $30 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, $pbase$0$lcssa8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = ($__c | 0) == -1;
 do if ($0) label = 12; else {
  HEAP32[$__1buf >> 2] = $__c;
  if (HEAP8[$this + 44 >> 0] | 0) if ((_fwrite($__1buf | 0, 4, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) {
   label = 12;
   break;
  } else {
   $$0 = -1;
   break;
  }
  HEAP32[$__extbe >> 2] = $__extbuf;
  $8 = $__1buf + 4 | 0;
  $9 = $this + 36 | 0;
  $10 = $this + 40 | 0;
  $11 = $__extbuf + 8 | 0;
  $12 = $__extbuf;
  $13 = $this + 32 | 0;
  $pbase$0 = $__1buf;
  while (1) {
   $14 = HEAP32[$9 >> 2] | 0;
   $19 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$14 >> 2] | 0) + 12 >> 2] & 15]($14, HEAP32[$10 >> 2] | 0, $pbase$0, $8, $__e, $__extbuf, $11, $__extbe) | 0;
   if ((HEAP32[$__e >> 2] | 0) == ($pbase$0 | 0)) {
    label = 13;
    break;
   }
   if (($19 | 0) == 3) {
    $pbase$0$lcssa8 = $pbase$0;
    label = 7;
    break;
   }
   $26 = ($19 | 0) == 1;
   if ($19 >>> 0 >= 2) {
    label = 13;
    break;
   }
   $30 = (HEAP32[$__extbe >> 2] | 0) - $12 | 0;
   if ((_fwrite($__extbuf | 0, 1, $30 | 0, HEAP32[$13 >> 2] | 0) | 0) != ($30 | 0)) {
    label = 13;
    break;
   }
   if ($26) $pbase$0 = $26 ? HEAP32[$__e >> 2] | 0 : $pbase$0; else {
    label = 11;
    break;
   }
  }
  if ((label | 0) == 7) if ((_fwrite($pbase$0$lcssa8 | 0, 1, 1, HEAP32[$13 >> 2] | 0) | 0) == 1) {
   label = 12;
   break;
  } else {
   $$0 = -1;
   break;
  } else if ((label | 0) == 11) {
   label = 12;
   break;
  } else if ((label | 0) == 13) {
   $$0 = -1;
   break;
  }
 } while (0);
 if ((label | 0) == 12) $$0 = $0 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($agg$result, $this, $__s, $__iob, $__fl, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 204 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 48912, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 23, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($2, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(43, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  ___resumeException($25 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $23, $24, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($agg$result, $this, $__s, $__iob, $__fl, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 196 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 48912, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 22, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($2, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(43, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  ___resumeException($25 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $23, $24, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($agg$result, $this, $__s, $__iob, $__fl, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 75 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 48912, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 23, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($2, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(41, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  ___resumeException($25 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $23, $24, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($agg$result, $this, $__s, $__iob, $__fl, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 74 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 48912, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 22, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($2, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(41, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  ___resumeException($25 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $23, $24, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $__way, $2) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__way = $__way | 0;
 $2 = $2 | 0;
 var $$off0 = 0, $10 = 0, $11 = 0, $23 = 0, $28 = 0, $32 = 0, $37 = 0, $4 = 0, $41 = 0, $45 = 0, $49 = 0, $54 = 0, $59 = 0, $6 = 0, $63 = 0, $68 = 0, $69 = 0, $74 = 0;
 $4 = HEAP32[$this + 68 >> 2] | 0;
 if (!$4) {
  $6 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($6);
  ___cxa_throw($6 | 0, 43832, 85);
 }
 $10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$4 >> 2] | 0) + 24 >> 2] & 127]($4) | 0;
 $11 = $this + 64 | 0;
 if (HEAP32[$11 >> 2] | 0) if (!((($0 | 0) != 0 | ($1 | 0) != 0) & ($10 | 0) < 1)) if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0)) {
  if ($__way >>> 0 >= 3) {
   $32 = $agg$result;
   HEAP32[$32 >> 2] = 0;
   HEAP32[$32 + 4 >> 2] = 0;
   $37 = $agg$result + 8 | 0;
   HEAP32[$37 >> 2] = -1;
   HEAP32[$37 + 4 >> 2] = -1;
   return;
  }
  $41 = HEAP32[$11 >> 2] | 0;
  if (($10 | 0) > 0) {
   $45 = ___muldi3($10 | 0, (($10 | 0) < 0) << 31 >> 31 | 0, $0 | 0, $1 | 0) | 0;
   $$off0 = $45;
  } else $$off0 = 0;
  if (!(_fseeko($41 | 0, $$off0 | 0, $__way | 0) | 0)) {
   $59 = _ftello(HEAP32[$11 >> 2] | 0) | 0;
   $63 = $this + 72 | 0;
   $68 = HEAP32[$63 + 4 >> 2] | 0;
   $69 = $agg$result;
   HEAP32[$69 >> 2] = HEAP32[$63 >> 2];
   HEAP32[$69 + 4 >> 2] = $68;
   $74 = $agg$result + 8 | 0;
   HEAP32[$74 >> 2] = $59;
   HEAP32[$74 + 4 >> 2] = (($59 | 0) < 0) << 31 >> 31;
   return;
  } else {
   $49 = $agg$result;
   HEAP32[$49 >> 2] = 0;
   HEAP32[$49 + 4 >> 2] = 0;
   $54 = $agg$result + 8 | 0;
   HEAP32[$54 >> 2] = -1;
   HEAP32[$54 + 4 >> 2] = -1;
   return;
  }
 }
 $23 = $agg$result;
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 $28 = $agg$result + 8 | 0;
 HEAP32[$28 >> 2] = -1;
 HEAP32[$28 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($this) {
 $this = $this | 0;
 var $$0 = 0, $14 = 0, $18 = 0, $19 = 0, $24 = 0, $29 = 0, $31 = 0, $33 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $6 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 L1 : do if (HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0) {
  __THREW__ = 0;
  invoke_vii(73, $__s | 0, $this | 0);
  $6 = __THREW__;
  __THREW__ = 0;
  L3 : do if ($6 & 1) {
   $31 = ___cxa_find_matching_catch(0) | 0;
   $$0 = $31;
  } else {
   do if (HEAP8[$__s >> 0] | 0) {
    $14 = HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
    __THREW__ = 0;
    $18 = invoke_ii(HEAP32[(HEAP32[$14 >> 2] | 0) + 24 >> 2] | 0, $14 | 0) | 0;
    $19 = __THREW__;
    __THREW__ = 0;
    if (!($19 & 1)) {
     if (($18 | 0) != -1) break;
     $24 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(48, $this + $24 | 0, HEAP32[$this + ($24 + 16) >> 2] | 1 | 0);
     $29 = __THREW__;
     __THREW__ = 0;
     if (!($29 & 1)) break;
    }
    $33 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
    $$0 = $33;
    break L3;
   } while (0);
   __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
   break L1;
  } while (0);
  ___cxa_begin_catch($$0 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if (!($39 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $41 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $43 = __THREW__;
  __THREW__ = 0;
  if ($43 & 1) {
   $45 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($45);
  } else ___resumeException($41 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this | 0;
 var $$0 = 0, $14 = 0, $18 = 0, $19 = 0, $24 = 0, $29 = 0, $31 = 0, $33 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $6 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 L1 : do if (HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0) {
  __THREW__ = 0;
  invoke_vii(46, $__s | 0, $this | 0);
  $6 = __THREW__;
  __THREW__ = 0;
  L3 : do if ($6 & 1) {
   $31 = ___cxa_find_matching_catch(0) | 0;
   $$0 = $31;
  } else {
   do if (HEAP8[$__s >> 0] | 0) {
    $14 = HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
    __THREW__ = 0;
    $18 = invoke_ii(HEAP32[(HEAP32[$14 >> 2] | 0) + 24 >> 2] | 0, $14 | 0) | 0;
    $19 = __THREW__;
    __THREW__ = 0;
    if (!($19 & 1)) {
     if (($18 | 0) != -1) break;
     $24 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(48, $this + $24 | 0, HEAP32[$this + ($24 + 16) >> 2] | 1 | 0);
     $29 = __THREW__;
     __THREW__ = 0;
     if (!($29 & 1)) break;
    }
    $33 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
    $$0 = $33;
    break L3;
   } while (0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   break L1;
  } while (0);
  ___cxa_begin_catch($$0 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(178, $this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if (!($39 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $41 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $43 = __THREW__;
  __THREW__ = 0;
  if ($43 & 1) {
   $45 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($45);
  } else ___resumeException($41 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag, $arg, $func) {
 $flag = $flag | 0;
 $arg = $arg | 0;
 $func = $func | 0;
 var $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $4 = 0, $6 = 0, $8 = 0;
 _pthread_mutex_lock(58056) | 0;
 while (1) {
  if ((HEAP32[$flag >> 2] | 0) != 1) break;
  _pthread_cond_wait(58080, 58056) | 0;
 }
 do if (!(HEAP32[$flag >> 2] | 0)) {
  HEAP32[$flag >> 2] = 1;
  __THREW__ = 0;
  invoke_ii(74, 58056) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if (!($4 & 1)) {
   __THREW__ = 0;
   invoke_vi($func | 0, $arg | 0);
   $6 = __THREW__;
   __THREW__ = 0;
   if (!($6 & 1)) {
    __THREW__ = 0;
    invoke_ii(75, 58056) | 0;
    $8 = __THREW__;
    __THREW__ = 0;
    if (!($8 & 1)) {
     HEAP32[$flag >> 2] = -1;
     __THREW__ = 0;
     invoke_ii(74, 58056) | 0;
     $10 = __THREW__;
     __THREW__ = 0;
     if (!($10 & 1)) {
      __THREW__ = 0;
      invoke_ii(76, 58080) | 0;
      $12 = __THREW__;
      __THREW__ = 0;
      if (!($12 & 1)) break;
     }
    }
   }
  }
  $14 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($14 | 0) | 0;
  __THREW__ = 0;
  invoke_ii(75, 58056) | 0;
  $16 = __THREW__;
  __THREW__ = 0;
  if (!($16 & 1)) {
   HEAP32[$flag >> 2] = 0;
   __THREW__ = 0;
   invoke_ii(74, 58056) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    invoke_ii(76, 58080) | 0;
    $20 = __THREW__;
    __THREW__ = 0;
    if (!($20 & 1)) {
     __THREW__ = 0;
     invoke_v(4);
     $22 = __THREW__;
     __THREW__ = 0;
     if (!($22 & 1)) {}
    }
   }
  }
  $24 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $26 = __THREW__;
  __THREW__ = 0;
  if ($26 & 1) {
   $28 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($28);
  } else ___resumeException($24 | 0);
 } else _pthread_mutex_unlock(58056) | 0; while (0);
 return;
}

function ___dynamic_cast($static_ptr, $static_type, $dst_type, $src2dst_offset) {
 $static_ptr = $static_ptr | 0;
 $static_type = $static_type | 0;
 $dst_type = $dst_type | 0;
 $src2dst_offset = $src2dst_offset | 0;
 var $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $27 = 0, $4 = 0, $6 = 0, $dst_ptr$0 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 $0 = HEAP32[$static_ptr >> 2] | 0;
 $4 = $static_ptr + (HEAP32[$0 + -8 >> 2] | 0) | 0;
 $6 = HEAP32[$0 + -4 >> 2] | 0;
 HEAP32[$info >> 2] = $dst_type;
 HEAP32[$info + 4 >> 2] = $static_ptr;
 HEAP32[$info + 8 >> 2] = $static_type;
 HEAP32[$info + 12 >> 2] = $src2dst_offset;
 $10 = $info + 16 | 0;
 $11 = $info + 20 | 0;
 $12 = $info + 24 | 0;
 $13 = $info + 28 | 0;
 $14 = $info + 32 | 0;
 $15 = $info + 40 | 0;
 $16 = ($6 | 0) == ($dst_type | 0);
 dest = $10 + 0 | 0;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$10 + 36 >> 1] = 0;
 HEAP8[$10 + 38 >> 0] = 0;
 do if ($16) {
  HEAP32[$info + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$dst_type >> 2] | 0) + 20 >> 2] & 31]($dst_type, $info, $4, $4, 1, 0);
  $dst_ptr$0 = (HEAP32[$12 >> 2] | 0) == 1 ? $4 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 24 >> 2] & 15]($6, $info, $4, 1, 0);
  $27 = HEAP32[$info + 36 >> 2] | 0;
  if (!$27) {
   $dst_ptr$0 = (HEAP32[$15 >> 2] | 0) == 1 & (HEAP32[$13 >> 2] | 0) == 1 & (HEAP32[$14 >> 2] | 0) == 1 ? HEAP32[$11 >> 2] | 0 : 0;
   break;
  } else if (($27 | 0) != 1) {
   $dst_ptr$0 = 0;
   break;
  }
  if ((HEAP32[$12 >> 2] | 0) != 1) if (!((HEAP32[$15 >> 2] | 0) == 0 & (HEAP32[$13 >> 2] | 0) == 1 & (HEAP32[$14 >> 2] | 0) == 1)) {
   $dst_ptr$0 = 0;
   break;
  }
  $dst_ptr$0 = HEAP32[$10 >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $dst_ptr$0 | 0;
}

function __ZL10uop_string7UnaryOp($agg$result, $uop) {
 $agg$result = $agg$result | 0;
 $uop = $uop | 0;
 var $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (($uop | 0) == 1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41408, 1);
  STACKTOP = sp;
  return;
 } else if (($uop | 0) == 3) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 42248, 1);
  STACKTOP = sp;
  return;
 } else if (!$uop) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41416, 1);
  STACKTOP = sp;
  return;
 } else if (($uop | 0) == 2) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 41400, 1);
  STACKTOP = sp;
  return;
 } else {
  $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(45984, 41424, 45) | 0, $uop) | 0;
  __ZNKSt3__18ios_base6getlocEv($0, $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0);
  __THREW__ = 0;
  $7 = invoke_iii(22, $0 | 0, 50208) | 0;
  $8 = __THREW__;
  __THREW__ = 0;
  if ($8 & 1) {
   $16 = ___cxa_find_matching_catch() | 0;
   $17 = tempRet0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($16 | 0);
  }
  __THREW__ = 0;
  $13 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 10) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) {
   $16 = ___cxa_find_matching_catch() | 0;
   $17 = tempRet0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($16 | 0);
  } else {
   __ZNSt3__16localeD2Ev($0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $13) | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
   _abort();
  }
 }
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $0 = 0, $1 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $33 = 0, $36 = 0, $42 = 0, $43 = 0, $47 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0;
 $0 = $this + 32 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0, $__s) | 0;
 $1 = $this + 44 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $this + 48 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if ($3 & 8) {
  $6 = HEAP8[$0 >> 0] | 0;
  if (!($6 & 1)) {
   $18 = $0 + (($6 & 255) >>> 1) + 1 | 0;
   HEAP32[$1 >> 2] = $18;
   $22 = $0 + 1 | 0;
   $24 = $0 + 1 | 0;
   $26 = $18;
  } else {
   $13 = (HEAP32[$this + 40 >> 2] | 0) + (HEAP32[$this + 36 >> 2] | 0) | 0;
   HEAP32[$1 >> 2] = $13;
   $15 = HEAP32[$this + 40 >> 2] | 0;
   $22 = $15;
   $24 = $15;
   $26 = $13;
  }
  HEAP32[$this + 8 >> 2] = $22;
  HEAP32[$this + 12 >> 2] = $24;
  HEAP32[$this + 16 >> 2] = $26;
 }
 if (!($3 & 16)) return;
 $29 = HEAP8[$0 >> 0] | 0;
 if (!($29 & 1)) {
  $33 = ($29 & 255) >>> 1;
  HEAP32[$1 >> 2] = $0 + $33 + 1;
  $42 = 10;
  $65 = $33;
 } else {
  $36 = HEAP32[$this + 36 >> 2] | 0;
  HEAP32[$1 >> 2] = (HEAP32[$this + 40 >> 2] | 0) + $36;
  $42 = (HEAP32[$0 >> 2] & -2) + -1 | 0;
  $65 = $36;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0, $42, 0);
 $43 = HEAP8[$0 >> 0] | 0;
 if (!($43 & 1)) {
  $55 = $0 + 1 | 0;
  $56 = ($43 & 255) >>> 1;
  $58 = $0 + 1 | 0;
 } else {
  $47 = HEAP32[$this + 40 >> 2] | 0;
  $55 = $47;
  $56 = HEAP32[$this + 36 >> 2] | 0;
  $58 = $47;
 }
 $57 = $this + 24 | 0;
 HEAP32[$57 >> 2] = $58;
 HEAP32[$this + 20 >> 2] = $58;
 HEAP32[$this + 28 >> 2] = $55 + $56;
 if (!(HEAP32[$2 >> 2] & 3)) return;
 HEAP32[$57 >> 2] = $58 + $65;
 return;
}

function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $__g_end, $__err) {
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__err = $__err | 0;
 var $$0$i$i = 0, $$01$i$i = 0, $$lcssa = 0, $0 = 0, $10 = 0, $12 = 0, $16 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $31 = 0, $7 = 0, $__ig$0 = 0, $__r$0 = 0, $or$cond2 = 0, $or$cond2$lcssa = 0, label = 0;
 $0 = HEAP8[$__grouping >> 0] | 0;
 if (!($0 & 1)) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$__grouping + 4 >> 2] | 0;
 do if ($7) {
  if (($__g | 0) == ($__g_end | 0)) $16 = $0; else {
   $$0$i$i = $__g_end;
   $$01$i$i = $__g;
   while (1) {
    $10 = $$0$i$i + -4 | 0;
    if ($$01$i$i >>> 0 >= $10 >>> 0) break;
    $12 = HEAP32[$$01$i$i >> 2] | 0;
    HEAP32[$$01$i$i >> 2] = HEAP32[$10 >> 2];
    HEAP32[$10 >> 2] = $12;
    $$0$i$i = $10;
    $$01$i$i = $$01$i$i + 4 | 0;
   }
   $16 = HEAP8[$__grouping >> 0] | 0;
  }
  if (!($16 & 1)) {
   $26 = $__grouping + 1 | 0;
   $27 = ($16 & 255) >>> 1;
  } else {
   $26 = HEAP32[$__grouping + 8 >> 2] | 0;
   $27 = HEAP32[$__grouping + 4 >> 2] | 0;
  }
  $28 = $__g_end + -4 | 0;
  $29 = $26 + $27 | 0;
  $__ig$0 = $26;
  $__r$0 = $__g;
  while (1) {
   $31 = HEAP8[$__ig$0 >> 0] | 0;
   $or$cond2 = $31 << 24 >> 24 < 1 | $31 << 24 >> 24 == 127;
   if ($__r$0 >>> 0 >= $28 >>> 0) {
    $$lcssa = $31;
    $or$cond2$lcssa = $or$cond2;
    break;
   }
   if (!$or$cond2) if (($31 << 24 >> 24 | 0) != (HEAP32[$__r$0 >> 2] | 0)) {
    label = 17;
    break;
   }
   $__ig$0 = ($29 - $__ig$0 | 0) > 1 ? $__ig$0 + 1 | 0 : $__ig$0;
   $__r$0 = $__r$0 + 4 | 0;
  }
  if ((label | 0) == 17) {
   HEAP32[$__err >> 2] = 4;
   break;
  }
  if (!$or$cond2$lcssa) if (((HEAP32[$28 >> 2] | 0) + -1 | 0) >>> 0 >= $$lcssa << 24 >> 24 >>> 0) HEAP32[$__err >> 2] = 4;
 } while (0);
 return;
}

function __ZN9Allocator14makeIdentifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this, $name) {
 $this = $this | 0;
 $name = $name | 0;
 var $$0 = 0, $0 = 0, $12 = 0, $14 = 0, $2 = 0, $25 = 0, $27 = 0, $29 = 0, $30 = 0, $31 = 0, $37 = 0, $38 = 0, $4 = 0, $41 = 0, $5 = 0, $7 = 0, $__p$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p$i$i = sp;
 $0 = $this + 4 | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE13__lower_boundIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_SN_SN_($__p$i$i, $this, $name, HEAP32[$0 >> 2] | 0, $0);
 $2 = HEAP32[$__p$i$i >> 2] | 0;
 do if (($2 | 0) != ($0 | 0)) {
  $4 = $2 + 16 | 0;
  $5 = HEAP8[$name >> 0] | 0;
  $7 = ($5 & 1) == 0;
  if ($7) $27 = ($5 & 255) >>> 1; else $27 = HEAP32[$name + 4 >> 2] | 0;
  $12 = HEAP8[$4 >> 0] | 0;
  $14 = ($12 & 1) == 0;
  if ($14) $25 = ($12 & 255) >>> 1; else $25 = HEAP32[$2 + 20 >> 2] | 0;
  if ($7) $29 = $name + 1 | 0; else $29 = HEAP32[$name + 8 >> 2] | 0;
  if ($14) $30 = $4 + 1 | 0; else $30 = HEAP32[$2 + 24 >> 2] | 0;
  $31 = _memcmp($29, $30, $25 >>> 0 < $27 >>> 0 ? $25 : $27) | 0;
  if (!$31) {
   if ($27 >>> 0 < $25 >>> 0) break;
  } else if (($31 | 0) < 0) break;
  $$0 = HEAP32[$2 + 28 >> 2] | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 $37 = __Znwj(12) | 0;
 __THREW__ = 0;
 invoke_vii(40, $37 | 0, $name | 0);
 $38 = __THREW__;
 __THREW__ = 0;
 if ($38 & 1) {
  $41 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($37);
  ___resumeException($41 | 0);
 }
 HEAP32[(__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($this, $name) | 0) >> 2] = $37;
 $$0 = $37;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_14Heap15addIfHeapEntityEPNS_10HeapEntityERNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE($v, $vec) {
 $v = $v | 0;
 $vec = $vec | 0;
 var $$0$i7$i$i = 0, $$0$i8$i$i = 0, $$idx1$val$i$i$i$i = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $32 = 0, $33 = 0, $34 = 0, $38 = 0, $40 = 0, $41 = 0, $7 = 0, $this$idx2$val$i$i = 0, label = 0;
 $0 = $vec + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $vec + 8 | 0;
 if (($1 | 0) != (HEAP32[$2 >> 2] | 0)) {
  if (!$1) $7 = 0; else {
   HEAP32[$1 >> 2] = $v;
   $7 = HEAP32[$0 >> 2] | 0;
  }
  HEAP32[$0 >> 2] = $7 + 4;
  return;
 }
 $this$idx2$val$i$i = HEAP32[$vec >> 2] | 0;
 $12 = ($1 - $this$idx2$val$i$i >> 2) + 1 | 0;
 if ($12 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($vec);
  $$idx1$val$i$i$i$i = HEAP32[$2 >> 2] | 0;
  $15 = HEAP32[$vec >> 2] | 0;
 } else {
  $$idx1$val$i$i$i$i = $1;
  $15 = $this$idx2$val$i$i;
 }
 $16 = $15;
 $17 = $$idx1$val$i$i$i$i - $16 | 0;
 if ($17 >> 2 >>> 0 < 536870911) {
  $23 = $17 >> 1;
  $25 = $23 >>> 0 < $12 >>> 0 ? $12 : $23;
  $27 = (HEAP32[$0 >> 2] | 0) - $16 | 0;
  $28 = $27 >> 2;
  if (!$25) {
   $$0$i8$i$i = 0;
   $33 = 0;
   $34 = $28;
   $38 = $27;
  } else {
   $$0$i7$i$i = $25;
   $40 = $28;
   $41 = $27;
   label = 10;
  }
 } else {
  $21 = (HEAP32[$0 >> 2] | 0) - $16 | 0;
  $$0$i7$i$i = 1073741823;
  $40 = $21 >> 2;
  $41 = $21;
  label = 10;
 }
 if ((label | 0) == 10) {
  $$0$i8$i$i = $$0$i7$i$i;
  $33 = __Znwj($$0$i7$i$i << 2) | 0;
  $34 = $40;
  $38 = $41;
 }
 $32 = $33 + ($34 << 2) | 0;
 if ($32) HEAP32[$32 >> 2] = $v;
 _memcpy($33 | 0, $15 | 0, $38 | 0) | 0;
 HEAP32[$vec >> 2] = $33;
 HEAP32[$0 >> 2] = $33 + ($34 + 1 << 2);
 HEAP32[$2 >> 2] = $33 + ($$0$i8$i$i << 2);
 if (!$15) return;
 __ZdlPv($15);
 return;
}

function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $6 = 0, $8 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $0 = invoke_iii(22, $__loc | 0, 50200) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if (!($1 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, 48720, 48752 | 0, $__atoms | 0) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   $8 = invoke_iii(22, $__loc | 0, 50360) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) {
    __THREW__ = 0;
    $14 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 12 >> 2] | 0, $8 | 0) | 0;
    $15 = __THREW__;
    __THREW__ = 0;
    if (!($15 & 1)) {
     HEAP32[$__decimal_point >> 2] = $14;
     __THREW__ = 0;
     $20 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] | 0, $8 | 0) | 0;
     $21 = __THREW__;
     __THREW__ = 0;
     if (!($21 & 1)) {
      HEAP32[$__thousands_sep >> 2] = $20;
      __THREW__ = 0;
      invoke_vii(HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $8 | 0);
      $26 = __THREW__;
      __THREW__ = 0;
      if (!($26 & 1)) {
       __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
       STACKTOP = sp;
       return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($29 | 0);
}

function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $6 = 0, $8 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $0 = invoke_iii(22, $__loc | 0, 50208) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if (!($1 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, 48720, 48752 | 0, $__atoms | 0) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   $8 = invoke_iii(22, $__loc | 0, 50352) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) {
    __THREW__ = 0;
    $14 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 12 >> 2] | 0, $8 | 0) | 0;
    $15 = __THREW__;
    __THREW__ = 0;
    if (!($15 & 1)) {
     HEAP8[$__decimal_point >> 0] = $14;
     __THREW__ = 0;
     $20 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] | 0, $8 | 0) | 0;
     $21 = __THREW__;
     __THREW__ = 0;
     if (!($21 & 1)) {
      HEAP8[$__thousands_sep >> 0] = $20;
      __THREW__ = 0;
      invoke_vii(HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $8 | 0);
      $26 = __THREW__;
      __THREW__ = 0;
      if (!($26 & 1)) {
       __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
       STACKTOP = sp;
       return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($29 | 0);
}

function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $ec, $what_arg) {
 $agg$result = $agg$result | 0;
 $ec = $ec | 0;
 $what_arg = $what_arg | 0;
 var $0 = 0, $1 = 0, $10 = 0, $13 = 0, $17 = 0, $18 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $__i$0$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP32[$ec >> 2] | 0;
 do if ($1) {
  $3 = HEAP8[$what_arg >> 0] | 0;
  if (!($3 & 1)) $10 = ($3 & 255) >>> 1; else $10 = HEAP32[$what_arg + 4 >> 2] | 0;
  if (!$10) $17 = $1; else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($what_arg, 57904) | 0;
   $17 = HEAP32[$ec >> 2] | 0;
  }
  $13 = HEAP32[$ec + 4 >> 2] | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 31]($0, $13, $17);
  $18 = HEAP8[$0 >> 0] | 0;
  if (!($18 & 1)) {
   $28 = $0 + 1 | 0;
   $29 = ($18 & 255) >>> 1;
  } else {
   $28 = HEAP32[$0 + 8 >> 2] | 0;
   $29 = HEAP32[$0 + 4 >> 2] | 0;
  }
  __THREW__ = 0;
  invoke_iiii(33, $what_arg | 0, $28 | 0, $29 | 0) | 0;
  $30 = __THREW__;
  __THREW__ = 0;
  if ($30 & 1) {
   $32 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   ___resumeException($32 | 0);
  } else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   break;
  }
 } while (0);
 HEAP32[$agg$result + 0 >> 2] = HEAP32[$what_arg + 0 >> 2];
 HEAP32[$agg$result + 4 >> 2] = HEAP32[$what_arg + 4 >> 2];
 HEAP32[$agg$result + 8 >> 2] = HEAP32[$what_arg + 8 >> 2];
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$what_arg + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $11 = 0, $13 = 0, $16 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $5 = 0, $6 = 0, $9 = 0, $eh$lpad$body$indexZ2D = 0, label = 0;
 $0 = $this + 8 | 0;
 __THREW__ = 0;
 $2 = invoke_ii(72, HEAP32[$0 >> 2] | 0) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) label = 16; else {
  __THREW__ = 0;
  $5 = invoke_iiii(43, 0, 0, 4) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if ($6 & 1) {
   $13 = ___cxa_find_matching_catch(0) | 0;
   if (!$2) {
    $eh$lpad$body$indexZ2D = $13;
    break;
   }
   __THREW__ = 0;
   invoke_ii(72, $2 | 0) | 0;
   $16 = __THREW__;
   __THREW__ = 0;
   if (!($16 & 1)) {
    $eh$lpad$body$indexZ2D = $13;
    break;
   }
   $18 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($18);
  }
  if ($2) {
   __THREW__ = 0;
   invoke_ii(72, $2 | 0) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if ($9 & 1) {
    $11 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($11);
   }
  }
  if (!$5) {
   $21 = HEAP32[$0 >> 2] | 0;
   if (!$21) $$0 = 1; else {
    __THREW__ = 0;
    $23 = invoke_ii(72, $21 | 0) | 0;
    $24 = __THREW__;
    __THREW__ = 0;
    if ($24 & 1) {
     label = 16;
     break;
    }
    if (!$23) $$0 = 0; else {
     __THREW__ = 0;
     invoke_ii(72, $23 | 0) | 0;
     $27 = __THREW__;
     __THREW__ = 0;
     if ($27 & 1) {
      $29 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($29);
     } else $$0 = 0;
    }
   }
  } else $$0 = -1;
  return $$0 | 0;
 } while (0);
 if ((label | 0) == 16) {
  $31 = ___cxa_find_matching_catch(0) | 0;
  $eh$lpad$body$indexZ2D = $31;
 }
 ___clang_call_terminate($eh$lpad$body$indexZ2D);
 return 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $st, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 var $$01 = 0, $$1 = 0, $$lcssa = 0, $$pn = 0, $0 = 0, $1 = 0, $12 = 0, $14 = 0, $16 = 0, $19 = 0, $21 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0 = 0, $nbytes$0$lcssa = 0, $nwchar_t$0 = 0, label = 0;
 $0 = $frm_end;
 $1 = $this + 8 | 0;
 $$01 = $frm;
 $nbytes$0 = 0;
 $nwchar_t$0 = 0;
 while (1) {
  if (($$01 | 0) == ($frm_end | 0) | $nwchar_t$0 >>> 0 >= $mx >>> 0) {
   $nbytes$0$lcssa = $nbytes$0;
   label = 15;
   break;
  }
  $7 = _uselocale(HEAP32[$1 >> 2] | 0) | 0;
  __THREW__ = 0;
  $8 = invoke_iiii(44, $$01 | 0, $0 - $$01 | 0, $st | 0) | 0;
  $9 = __THREW__;
  __THREW__ = 0;
  if ($9 & 1) {
   $$lcssa = $7;
   label = 7;
   break;
  }
  if ($7) {
   __THREW__ = 0;
   invoke_ii(72, $7 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    label = 6;
    break;
   }
  }
  if (!$8) {
   $$1 = $$01 + 1 | 0;
   $$pn = 1;
  } else if (($8 | 0) == -2 | ($8 | 0) == -1) {
   $nbytes$0$lcssa = $nbytes$0;
   label = 15;
   break;
  } else {
   $$1 = $$01 + $8 | 0;
   $$pn = $8;
  }
  $$01 = $$1;
  $nbytes$0 = $$pn + $nbytes$0 | 0;
  $nwchar_t$0 = $nwchar_t$0 + 1 | 0;
 }
 if ((label | 0) == 6) {
  $14 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($14);
 } else if ((label | 0) == 7) {
  $16 = ___cxa_find_matching_catch() | 0;
  if ($$lcssa) {
   __THREW__ = 0;
   invoke_ii(72, $$lcssa | 0) | 0;
   $19 = __THREW__;
   __THREW__ = 0;
   if ($19 & 1) {
    $21 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($21);
   }
  }
  ___resumeException($16 | 0);
 } else if ((label | 0) == 15) return $nbytes$0$lcssa | 0;
 return 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $10 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $40 = 0, $5 = 0, $6 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50272) | 0;
 HEAP32[$this + 68 >> 2] = $3;
 $5 = $this + 98 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0;
 HEAP8[$5 >> 0] = $10 & 1;
 if (($6 & 255 | 0) == ($10 & 1 | 0)) return;
 $15 = $this + 8 | 0;
 $16 = $this + 96 | 0;
 HEAP32[$15 + 0 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 HEAP32[$15 + 12 >> 2] = 0;
 HEAP32[$15 + 16 >> 2] = 0;
 HEAP32[$15 + 20 >> 2] = 0;
 $18 = (HEAP8[$16 >> 0] | 0) != 0;
 if ($10) {
  $19 = $this + 32 | 0;
  if ($18) {
   $20 = HEAP32[$19 >> 2] | 0;
   if ($20) __ZdaPv($20);
  }
  $22 = $this + 97 | 0;
  HEAP8[$16 >> 0] = HEAP8[$22 >> 0] | 0;
  $24 = $this + 60 | 0;
  HEAP32[$this + 52 >> 2] = HEAP32[$24 >> 2];
  $27 = $this + 56 | 0;
  HEAP32[$19 >> 2] = HEAP32[$27 >> 2];
  HEAP32[$24 >> 2] = 0;
  HEAP32[$27 >> 2] = 0;
  HEAP8[$22 >> 0] = 0;
  return;
 }
 if (!$18) {
  $29 = $this + 32 | 0;
  $30 = HEAP32[$29 >> 2] | 0;
  if (($30 | 0) != ($this + 44 | 0)) {
   $34 = HEAP32[$this + 52 >> 2] | 0;
   HEAP32[$this + 60 >> 2] = $34;
   HEAP32[$this + 56 >> 2] = $30;
   HEAP8[$this + 97 >> 0] = 0;
   HEAP32[$29 >> 2] = __Znaj($34) | 0;
   HEAP8[$16 >> 0] = 1;
   return;
  }
 }
 $40 = HEAP32[$this + 52 >> 2] | 0;
 HEAP32[$this + 60 >> 2] = $40;
 HEAP32[$this + 56 >> 2] = __Znaj($40) | 0;
 HEAP8[$this + 97 >> 0] = 1;
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $10 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $p$0 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below); else {
  $3 = $info + 52 | 0;
  $4 = HEAP8[$3 >> 0] | 0;
  $5 = $info + 53 | 0;
  $6 = HEAP8[$5 >> 0] | 0;
  $9 = HEAP32[$this + 12 >> 2] | 0;
  $10 = $this + ($9 << 3) + 16 | 0;
  HEAP8[$3 >> 0] = 0;
  HEAP8[$5 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this + 16 | 0, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
  if (($9 | 0) > 1) {
   $13 = $info + 24 | 0;
   $14 = $this + 8 | 0;
   $15 = $info + 54 | 0;
   $p$0 = $this + 24 | 0;
   do {
    if (HEAP8[$15 >> 0] | 0) break;
    if (!(HEAP8[$3 >> 0] | 0)) {
     if (HEAP8[$5 >> 0] | 0) if (!(HEAP32[$14 >> 2] & 1)) break;
    } else {
     if ((HEAP32[$13 >> 2] | 0) == 1) break;
     if (!(HEAP32[$14 >> 2] & 2)) break;
    }
    HEAP8[$3 >> 0] = 0;
    HEAP8[$5 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
    $p$0 = $p$0 + 8 | 0;
   } while ($p$0 >>> 0 < $10 >>> 0);
  }
  HEAP8[$3 >> 0] = $4;
  HEAP8[$5 >> 0] = $6;
 }
 return;
}

function __ZNSt3__110__stdinbufIwE9pbackfailEj($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$01 = 0, $1 = 0, $11 = 0, $19 = 0, $23 = 0, $24 = 0, $26 = 0, $3 = 0, $5 = 0, $8 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__enxt = sp + 8 | 0;
 $__ci = sp + 4 | 0;
 $__inxt = sp;
 $1 = $this + 52 | 0;
 $3 = (HEAP8[$1 >> 0] | 0) != 0;
 L1 : do if (($__c | 0) == -1) if ($3) $$01 = -1; else {
  $5 = HEAP32[$this + 48 >> 2] | 0;
  HEAP8[$1 >> 0] = ($5 | 0) != -1 & 1;
  $$01 = $5;
 } else {
  $8 = $this + 48 | 0;
  do if ($3) {
   HEAP32[$__ci >> 2] = HEAP32[$8 >> 2];
   $11 = HEAP32[$this + 36 >> 2] | 0;
   $19 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 15]($11, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 4 | 0, $__inxt, $__extbuf, $__extbuf + 8 | 0, $__enxt) | 0;
   if (($19 | 0) == 1 | ($19 | 0) == 2) {
    $$01 = -1;
    break L1;
   } else if (($19 | 0) == 3) {
    HEAP8[$__extbuf >> 0] = HEAP32[$8 >> 2];
    HEAP32[$__enxt >> 2] = $__extbuf + 1;
   }
   $23 = $this + 32 | 0;
   while (1) {
    $24 = HEAP32[$__enxt >> 2] | 0;
    if ($24 >>> 0 <= $__extbuf >>> 0) {
     label = 10;
     break;
    }
    $26 = $24 + -1 | 0;
    HEAP32[$__enxt >> 2] = $26;
    if ((_ungetc(HEAP8[$26 >> 0] | 0, HEAP32[$23 >> 2] | 0) | 0) == -1) {
     label = 12;
     break;
    }
   }
   if ((label | 0) == 10) break; else if ((label | 0) == 12) {
    $$01 = -1;
    break L1;
   }
  } while (0);
  HEAP32[$8 >> 2] = $__c;
  HEAP8[$1 >> 0] = 1;
  $$01 = $__c;
 } while (0);
 STACKTOP = sp;
 return $$01 | 0;
}

function __ZL25default_terminate_handlerv() {
 var $0 = 0, $11 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $29 = 0, $30 = 0, $34 = 0, $6 = 0, $8 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36 | 0;
 $0 = ___cxa_get_globals_fast() | 0;
 if ($0) {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2) {
   $6 = $2 + 48 | 0;
   $8 = HEAP32[$6 >> 2] | 0;
   $11 = HEAP32[$6 + 4 >> 2] | 0;
   if (!(($8 & -256 | 0) == 1126902528 & ($11 | 0) == 1129074247)) {
    HEAP32[$vararg_buffer7 >> 2] = HEAP32[10736];
    _abort_message(43064, $vararg_buffer7);
   }
   if (($8 | 0) == 1126902529 & ($11 | 0) == 1129074247) $21 = HEAP32[$2 + 44 >> 2] | 0; else $21 = $2 + 80 | 0;
   HEAP32[$thrown_object >> 2] = $21;
   $22 = HEAP32[$2 >> 2] | 0;
   $24 = HEAP32[$22 + 4 >> 2] | 0;
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[43496 >> 2] | 0) + 16 >> 2] & 63](43496, $22, $thrown_object) | 0) {
    $29 = HEAP32[$thrown_object >> 2] | 0;
    $30 = HEAP32[10736] | 0;
    $34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 8 >> 2] & 127]($29) | 0;
    HEAP32[$vararg_buffer >> 2] = $30;
    HEAP32[$vararg_buffer + 4 >> 2] = $24;
    HEAP32[$vararg_buffer + 8 >> 2] = $34;
    _abort_message(42968, $vararg_buffer);
   } else {
    HEAP32[$vararg_buffer3 >> 2] = HEAP32[10736];
    HEAP32[$vararg_buffer3 + 4 >> 2] = $24;
    _abort_message(43016, $vararg_buffer3);
   }
  }
 }
 _abort_message(43104, $vararg_buffer10);
}

function __ZNSt3__110__stdinbufIcE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$01 = 0, $1 = 0, $12 = 0, $20 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $5 = 0, $8 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__enxt = sp + 4 | 0;
 $__ci = sp + 8 | 0;
 $__inxt = sp;
 $1 = $this + 52 | 0;
 $3 = (HEAP8[$1 >> 0] | 0) != 0;
 L1 : do if (($__c | 0) == -1) if ($3) $$01 = -1; else {
  $5 = HEAP32[$this + 48 >> 2] | 0;
  HEAP8[$1 >> 0] = ($5 | 0) != -1 & 1;
  $$01 = $5;
 } else {
  $8 = $this + 48 | 0;
  do if ($3) {
   HEAP8[$__ci >> 0] = HEAP32[$8 >> 2];
   $12 = HEAP32[$this + 36 >> 2] | 0;
   $20 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 15]($12, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 1 | 0, $__inxt, $__extbuf, $__extbuf + 8 | 0, $__enxt) | 0;
   if (($20 | 0) == 1 | ($20 | 0) == 2) {
    $$01 = -1;
    break L1;
   } else if (($20 | 0) == 3) {
    HEAP8[$__extbuf >> 0] = HEAP32[$8 >> 2];
    HEAP32[$__enxt >> 2] = $__extbuf + 1;
   }
   $24 = $this + 32 | 0;
   while (1) {
    $25 = HEAP32[$__enxt >> 2] | 0;
    if ($25 >>> 0 <= $__extbuf >>> 0) {
     label = 10;
     break;
    }
    $27 = $25 + -1 | 0;
    HEAP32[$__enxt >> 2] = $27;
    if ((_ungetc(HEAP8[$27 >> 0] | 0, HEAP32[$24 >> 2] | 0) | 0) == -1) {
     label = 12;
     break;
    }
   }
   if ((label | 0) == 10) break; else if ((label | 0) == 12) {
    $$01 = -1;
    break L1;
   }
  } while (0);
  HEAP32[$8 >> 2] = $__c;
  HEAP8[$1 >> 0] = 1;
  $$01 = $__c;
 } while (0);
 STACKTOP = sp;
 return $$01 | 0;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_($agg$result, $this, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 var $0 = 0, $1 = 0, $13 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEESG_RKT_($this, $__parent, $__v) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $23 = 0;
  $__r$0 = $1;
  $21 = $__r$0;
  HEAP32[$agg$result >> 2] = $21;
  $22 = $agg$result + 4 | 0;
  HEAP8[$22 >> 0] = $23;
  STACKTOP = sp;
  return;
 }
 $3 = __Znwj(28) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__v | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($3);
  ___resumeException($7 | 0);
 }
 $9 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $9;
 HEAP32[$0 >> 2] = $3;
 $13 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$13) $17 = $3; else {
  HEAP32[$this >> 2] = $13;
  $17 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $17);
 $18 = $this + 8 | 0;
 HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1;
 $23 = 1;
 $__r$0 = $3;
 $21 = $__r$0;
 HEAP32[$agg$result >> 2] = $21;
 $22 = $agg$result + 4 | 0;
 HEAP8[$22 >> 0] = $23;
 STACKTOP = sp;
 return;
}

function _mbtowc($wc, $src, $n) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $12 = 0, $14 = 0, $22 = 0, $23 = 0, $31 = 0, $35 = 0, $4 = 0, $40 = 0, $44 = 0, $5 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = $wc;
 if (!$src) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 do if ($n) {
  if (!$wc) {
   HEAP32[$0 >> 2] = $0;
   $7 = $0;
  } else $7 = $wc;
  $4 = HEAP8[$src >> 0] | 0;
  $5 = $4 & 255;
  if ($4 << 24 >> 24 > -1) {
   HEAP32[$7 >> 2] = $5;
   $$0 = $4 << 24 >> 24 != 0 & 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $10 = $5 + -194 | 0;
  if ($10 >>> 0 <= 50) {
   $12 = $src + 1 | 0;
   $14 = HEAP32[42712 + ($10 << 2) >> 2] | 0;
   if ($n >>> 0 < 4) if ($14 & -2147483648 >>> (($n * 6 | 0) + -6 | 0)) break;
   $22 = HEAPU8[$12 >> 0] | 0;
   $23 = $22 >>> 3;
   if (($23 + -16 | $23 + ($14 >> 26)) >>> 0 <= 7) {
    $31 = $22 + -128 | $14 << 6;
    if (($31 | 0) >= 0) {
     HEAP32[$7 >> 2] = $31;
     $$0 = 2;
     STACKTOP = sp;
     return $$0 | 0;
    }
    $35 = HEAPU8[$src + 2 >> 0] | 0;
    if (($35 & 192 | 0) == 128) {
     $40 = $35 + -128 | $31 << 6;
     if (($40 | 0) >= 0) {
      HEAP32[$7 >> 2] = $40;
      $$0 = 3;
      STACKTOP = sp;
      return $$0 | 0;
     }
     $44 = HEAPU8[$src + 3 >> 0] | 0;
     if (($44 & 192 | 0) == 128) {
      HEAP32[$7 >> 2] = $44 + -128 | $40 << 6;
      $$0 = 4;
      STACKTOP = sp;
      return $$0 | 0;
     }
    }
   }
  }
 } while (0);
 HEAP32[(___errno_location() | 0) >> 2] = 84;
 $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this, $__wb, $__we, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__wb = $__wb | 0;
 $__we = $__we | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $1 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $18 = 0, $20 = 0, $23 = 0, $25 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $__nar = sp + 16 | 0;
 $__ne = sp + 12 | 0;
 $mb = sp;
 $__nb = sp + 8 | 0;
 HEAP32[$__ne >> 2] = $__nar + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $1 = $mb;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$__nb >> 2] = $__nar;
 $9 = (HEAP32[$__we >> 2] | 0) - $__wb >> 2;
 $11 = _uselocale(HEAP32[$this >> 2] | 0) | 0;
 __THREW__ = 0;
 $12 = invoke_iiiii(13, $__wb | 0, $__nb | 0, $9 | 0, $mb | 0) | 0;
 $13 = __THREW__;
 __THREW__ = 0;
 if ($13 & 1) {
  $20 = ___cxa_find_matching_catch() | 0;
  if ($11) {
   __THREW__ = 0;
   invoke_ii(72, $11 | 0) | 0;
   $23 = __THREW__;
   __THREW__ = 0;
   if ($23 & 1) {
    $25 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($25);
   }
  }
  ___resumeException($20 | 0);
 }
 if ($11) {
  __THREW__ = 0;
  invoke_ii(72, $11 | 0) | 0;
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($18);
  }
 }
 if (($12 | 0) == -1) __ZNSt3__121__throw_runtime_errorEPKc(51088); else {
  HEAP32[$__we >> 2] = $__wb + ($12 << 2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEEixERSB_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $18 = 0, $19 = 0, $22 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $22 = $__r$0 + 28 | 0;
  STACKTOP = sp;
  return $22 | 0;
 }
 $3 = __Znwj(44) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__k | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($3);
  ___resumeException($7 | 0);
 }
 $9 = $3 + 28 | 0;
 HEAP32[$9 + 0 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 HEAP8[$9 + 12 >> 0] = 0;
 $10 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $10;
 HEAP32[$0 >> 2] = $3;
 $14 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$14) $18 = $3; else {
  HEAP32[$this >> 2] = $14;
  $18 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $18);
 $19 = $this + 8 | 0;
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
 $__r$0 = $3;
 $22 = $__r$0 + 28 | 0;
 STACKTOP = sp;
 return $22 | 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE6setbufEPci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $1 = 0, $11 = 0, $13 = 0, $16 = 0, $24 = 0, $27 = 0, $5 = 0, $7 = 0;
 $0 = $this + 8 | 0;
 $1 = $this + 96 | 0;
 HEAP32[$0 + 0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 if (HEAP8[$1 >> 0] | 0) {
  $5 = HEAP32[$this + 32 >> 2] | 0;
  if ($5) __ZdaPv($5);
 }
 $7 = $this + 97 | 0;
 if (HEAP8[$7 >> 0] | 0) {
  $11 = HEAP32[$this + 56 >> 2] | 0;
  if ($11) __ZdaPv($11);
 }
 $13 = $this + 52 | 0;
 HEAP32[$13 >> 2] = $__n;
 do if ($__n >>> 0 > 8) {
  $16 = HEAP8[$this + 98 >> 0] | 0;
  if (($__s | 0) != 0 & $16 << 24 >> 24 != 0) {
   HEAP32[$this + 32 >> 2] = $__s;
   HEAP8[$1 >> 0] = 0;
   $24 = $16;
   break;
  } else {
   HEAP32[$this + 32 >> 2] = __Znaj($__n) | 0;
   HEAP8[$1 >> 0] = 1;
   $24 = $16;
   break;
  }
 } else {
  HEAP32[$this + 32 >> 2] = $this + 44;
  HEAP32[$13 >> 2] = 8;
  HEAP8[$1 >> 0] = 0;
  $24 = HEAP8[$this + 98 >> 0] | 0;
 } while (0);
 if ($24 << 24 >> 24) {
  HEAP32[$this + 60 >> 2] = 0;
  HEAP32[$this + 56 >> 2] = 0;
  HEAP8[$7 >> 0] = 0;
  return $this | 0;
 }
 $27 = ($__n | 0) < 8 ? 8 : $__n;
 HEAP32[$this + 60 >> 2] = $27;
 if (($__s | 0) != 0 & $27 >>> 0 > 7) {
  HEAP32[$this + 56 >> 2] = $__s;
  HEAP8[$7 >> 0] = 0;
  return $this | 0;
 } else {
  HEAP32[$this + 56 >> 2] = __Znaj($27) | 0;
  HEAP8[$7 >> 0] = 1;
  return $this | 0;
 }
 return 0;
}

function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp, $__len, $__flags) {
 $__fmtp = $__fmtp | 0;
 $__len = $__len | 0;
 $__flags = $__flags | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$2 = 0, $$2$lcssa = 0, $$2$ph = 0, $11 = 0, $20 = 0, $6 = 0, $7 = 0, $8 = 0, $specify_precision$0$off0$ph = 0;
 if (!($__flags & 2048)) $$0 = $__fmtp; else {
  HEAP8[$__fmtp >> 0] = 43;
  $$0 = $__fmtp + 1 | 0;
 }
 if (!($__flags & 1024)) $$1 = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1 = $$0 + 1 | 0;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6 | 0) == 260;
 if ($8) {
  $$2$ph = $$1;
  $specify_precision$0$off0$ph = 0;
 } else {
  HEAP8[$$1 >> 0] = 46;
  HEAP8[$$1 + 1 >> 0] = 42;
  $$2$ph = $$1 + 2 | 0;
  $specify_precision$0$off0$ph = 1;
 }
 $$01 = $__len;
 $$2 = $$2$ph;
 while (1) {
  $11 = HEAP8[$$01 >> 0] | 0;
  if (!($11 << 24 >> 24)) {
   $$2$lcssa = $$2;
   break;
  }
  HEAP8[$$2 >> 0] = $11;
  $$01 = $$01 + 1 | 0;
  $$2 = $$2 + 1 | 0;
 }
 do if (($6 | 0) == 256) if (!($7 & 1)) {
  HEAP8[$$2$lcssa >> 0] = 101;
  break;
 } else {
  HEAP8[$$2$lcssa >> 0] = 69;
  break;
 } else if (($6 | 0) == 4) if (!($7 & 1)) {
  HEAP8[$$2$lcssa >> 0] = 102;
  break;
 } else {
  HEAP8[$$2$lcssa >> 0] = 70;
  break;
 } else {
  $20 = ($7 & 1 | 0) != 0;
  if ($8) if ($20) {
   HEAP8[$$2$lcssa >> 0] = 65;
   break;
  } else {
   HEAP8[$$2$lcssa >> 0] = 97;
   break;
  } else if ($20) {
   HEAP8[$$2$lcssa >> 0] = 71;
   break;
  } else {
   HEAP8[$$2$lcssa >> 0] = 103;
   break;
  }
 } while (0);
 return $specify_precision$0$off0$ph | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $st, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $11 = 0, $14 = 0, $16 = 0, $18 = 0, $2 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $7 = 0, $9 = 0, $n$0 = 0, $p$0 = 0, $tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmp = sp;
 HEAP32[$to_nxt >> 2] = $to;
 $2 = _uselocale(HEAP32[$this + 8 >> 2] | 0) | 0;
 __THREW__ = 0;
 $3 = invoke_iiii(42, $tmp | 0, 0, $st | 0) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $11 = ___cxa_find_matching_catch() | 0;
  if ($2) {
   __THREW__ = 0;
   invoke_ii(72, $2 | 0) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $16 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($16);
   }
  }
  ___resumeException($11 | 0);
 }
 if ($2) {
  __THREW__ = 0;
  invoke_ii(72, $2 | 0) | 0;
  $7 = __THREW__;
  __THREW__ = 0;
  if ($7 & 1) {
   $9 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($9);
  }
 }
 if (($3 | 0) == 0 | ($3 | 0) == -1) $$0 = 2; else {
  $18 = $3 + -1 | 0;
  if ($18 >>> 0 > ($to_end - (HEAP32[$to_nxt >> 2] | 0) | 0) >>> 0) $$0 = 1; else {
   $n$0 = $18;
   $p$0 = $tmp;
   while (1) {
    if (!$n$0) break;
    $26 = HEAP8[$p$0 >> 0] | 0;
    $27 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $27 + 1;
    HEAP8[$27 >> 0] = $26;
    $n$0 = $n$0 + -1 | 0;
    $p$0 = $p$0 + 1 | 0;
   }
   $$0 = 0;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_15Stack3popEv($this) {
 $this = $this | 0;
 var $$idx$i = 0, $$idx$val$i = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $6 = 0;
 $$idx$i = $this + 16 | 0;
 $$idx$val$i = HEAP32[$$idx$i >> 2] | 0;
 if ((HEAP32[$$idx$val$i + -144 >> 2] | 0) == 6) {
  $1 = $this + 4 | 0;
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + -1;
 }
 $4 = $$idx$val$i + -144 | 0;
 $6 = $$idx$val$i;
 do {
  HEAP32[$$idx$i >> 2] = $6 + -144;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -16 | 0, HEAP32[$6 + -12 >> 2] | 0);
  $11 = HEAP32[$6 + -40 >> 2] | 0;
  $13 = $11;
  if ($11) {
   $14 = $6 + -36 | 0;
   $15 = HEAP32[$14 >> 2] | 0;
   if (($15 | 0) != ($11 | 0)) HEAP32[$14 >> 2] = $15 + (~(($15 + -4 - $13 | 0) >>> 2) << 2);
   __ZdlPv($11);
  }
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -52 | 0, HEAP32[$6 + -48 >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -68 | 0, HEAP32[$6 + -64 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6 + -136 | 0);
  $6 = HEAP32[$$idx$i >> 2] | 0;
 } while (($6 | 0) != ($4 | 0));
 return;
}

function __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $30 = 0, $6 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) return;
 $2 = $this + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) == ($0 | 0)) $30 = $0; else {
  $6 = $3;
  do {
   HEAP32[$2 >> 2] = $6 + -144;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -16 | 0, HEAP32[$6 + -12 >> 2] | 0);
   $11 = HEAP32[$6 + -40 >> 2] | 0;
   $13 = $11;
   if ($11) {
    $14 = $6 + -36 | 0;
    $15 = HEAP32[$14 >> 2] | 0;
    if (($15 | 0) != ($11 | 0)) HEAP32[$14 >> 2] = $15 + (~(($15 + -4 - $13 | 0) >>> 2) << 2);
    __ZdlPv($11);
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -52 | 0, HEAP32[$6 + -48 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -68 | 0, HEAP32[$6 + -64 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6 + -136 | 0);
   $6 = HEAP32[$2 >> 2] | 0;
  } while (($6 | 0) != ($0 | 0));
  $30 = HEAP32[$this >> 2] | 0;
 }
 __ZdlPv($30);
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEixERSA_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $18 = 0, $19 = 0, $22 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $22 = $__r$0 + 28 | 0;
  STACKTOP = sp;
  return $22 | 0;
 }
 $3 = __Znwj(40) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__k | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($3);
  ___resumeException($7 | 0);
 }
 $9 = $3 + 28 | 0;
 HEAP32[$9 + 0 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $10 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $10;
 HEAP32[$0 >> 2] = $3;
 $14 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$14) $18 = $3; else {
  HEAP32[$this >> 2] = $14;
  $18 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $18);
 $19 = $this + 8 | 0;
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
 $__r$0 = $3;
 $22 = $__r$0 + 28 | 0;
 STACKTOP = sp;
 return $22 | 0;
}

function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result, $__iob, $__atoms, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $20 = 0, $23 = 0, $6 = 0, $8 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $0 = invoke_iii(22, $__loc | 0, 50200) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if (!($1 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, 48720, 48746 | 0, $__atoms | 0) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   $8 = invoke_iii(22, $__loc | 0, 50360) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) {
    __THREW__ = 0;
    $14 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] | 0, $8 | 0) | 0;
    $15 = __THREW__;
    __THREW__ = 0;
    if (!($15 & 1)) {
     HEAP32[$__thousands_sep >> 2] = $14;
     __THREW__ = 0;
     invoke_vii(HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $8 | 0);
     $20 = __THREW__;
     __THREW__ = 0;
     if (!($20 & 1)) {
      __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
      STACKTOP = sp;
      return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($23 | 0);
}

function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result, $__iob, $__atoms, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $20 = 0, $23 = 0, $6 = 0, $8 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $0 = invoke_iii(22, $__loc | 0, 50208) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if (!($1 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, 48720, 48746 | 0, $__atoms | 0) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   $8 = invoke_iii(22, $__loc | 0, 50352) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) {
    __THREW__ = 0;
    $14 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] | 0, $8 | 0) | 0;
    $15 = __THREW__;
    __THREW__ = 0;
    if (!($15 & 1)) {
     HEAP8[$__thousands_sep >> 0] = $14;
     __THREW__ = 0;
     invoke_vii(HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $8 | 0);
     $20 = __THREW__;
     __THREW__ = 0;
     if (!($20 & 1)) {
      __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
      STACKTOP = sp;
      return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($23 | 0);
}

function __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $30 = 0, $6 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) != ($1 | 0)) {
  $6 = $3;
  do {
   HEAP32[$2 >> 2] = $6 + -144;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -16 | 0, HEAP32[$6 + -12 >> 2] | 0);
   $11 = HEAP32[$6 + -40 >> 2] | 0;
   $13 = $11;
   if ($11) {
    $14 = $6 + -36 | 0;
    $15 = HEAP32[$14 >> 2] | 0;
    if (($15 | 0) != ($11 | 0)) HEAP32[$14 >> 2] = $15 + (~(($15 + -4 - $13 | 0) >>> 2) << 2);
    __ZdlPv($11);
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -52 | 0, HEAP32[$6 + -48 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -68 | 0, HEAP32[$6 + -64 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6 + -136 | 0);
   $6 = HEAP32[$2 >> 2] | 0;
  } while (($6 | 0) != ($1 | 0));
 }
 $30 = HEAP32[$this >> 2] | 0;
 if (!$30) return;
 __ZdlPv($30);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $10 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $23 = 0, $31 = 0, $9 = 0;
 if ((1073741806 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $20 = $this + 4 | 0; else $20 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 536870887) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  if ($12 >>> 0 < 2) $17 = 2; else $17 = $12 + 4 & -4;
 } else $17 = 1073741807;
 $18 = __Znwj($17 << 2) | 0;
 if ($__n_copy) _wmemcpy($18, $20, $__n_copy) | 0;
 if ($__n_add) _wmemcpy($18 + ($__n_copy << 2) | 0, $__p_new_stuff, $__n_add) | 0;
 $23 = $__old_sz - $__n_del | 0;
 if (($23 | 0) != ($__n_copy | 0)) _wmemcpy($18 + ($__n_add + $__n_copy << 2) | 0, $20 + ($__n_del + $__n_copy << 2) | 0, $23 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 1) __ZdlPv($20);
 HEAP32[$this + 8 >> 2] = $18;
 HEAP32[$this >> 2] = $17 | 1;
 $31 = $23 + $__n_add | 0;
 HEAP32[$this + 4 >> 2] = $31;
 HEAP32[$18 + ($31 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEEC2ERKS6_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$01$i = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $27 = 0, $30 = 0, $7 = 0, $8 = 0, label = 0;
 HEAP32[$this >> 2] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $this + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $__x + 4 | 0;
 $7 = (HEAP32[$2 >> 2] | 0) - (HEAP32[$__x >> 2] | 0) | 0;
 $8 = $7 >> 2;
 if (!$8) return;
 if ($8 >>> 0 > 1073741823) {
  __THREW__ = 0;
  invoke_vi(182, $this | 0);
  $11 = __THREW__;
  __THREW__ = 0;
  if (!($11 & 1)) label = 4;
 } else label = 4;
 if ((label | 0) == 4) {
  __THREW__ = 0;
  $13 = invoke_ii(67, $7 | 0) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if (!($14 & 1)) {
   HEAP32[$0 >> 2] = $13;
   HEAP32[$this >> 2] = $13;
   HEAP32[$1 >> 2] = $13 + ($8 << 2);
   $17 = HEAP32[$__x >> 2] | 0;
   $18 = HEAP32[$2 >> 2] | 0;
   if (($17 | 0) == ($18 | 0)) return;
   $$01$i = $17;
   $21 = $13;
   do {
    HEAP32[$21 >> 2] = HEAP32[$$01$i >> 2];
    $21 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
    HEAP32[$0 >> 2] = $21;
    $$01$i = $$01$i + 4 | 0;
   } while (($$01$i | 0) != ($18 | 0));
   return;
  }
 }
 $25 = ___cxa_find_matching_catch() | 0;
 $27 = HEAP32[$this >> 2] | 0;
 if (!$27) ___resumeException($25 | 0);
 $30 = HEAP32[$0 >> 2] | 0;
 if (($30 | 0) != ($27 | 0)) HEAP32[$0 >> 2] = $30 + (~(($30 + -4 - $27 | 0) >>> 2) << 2);
 __ZdlPv($27);
 ___resumeException($25 | 0);
}

function _MUSL_vfprintf($f, $fmt, $ap) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$ = 0, $$0 = 0, $11 = 0, $12 = 0, $2 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $ap2 = sp + 120 | 0;
 $nl_type = sp + 80 | 0;
 $nl_arg = sp;
 $internal_buf = sp + 136 | 0;
 dest = $nl_type + 0 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$ap2 >> 2] = HEAP32[$ap >> 2];
 if ((_printf_core(0, $fmt, $ap2, $nl_arg, $nl_type) | 0) < 0) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $2 = $f + 48 | 0;
 if (!(HEAP32[$2 >> 2] | 0)) {
  $6 = $f + 44 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  HEAP32[$6 >> 2] = $internal_buf;
  $8 = $f + 28 | 0;
  HEAP32[$8 >> 2] = $internal_buf;
  $9 = $f + 20 | 0;
  HEAP32[$9 >> 2] = $internal_buf;
  HEAP32[$2 >> 2] = 80;
  $11 = $f + 16 | 0;
  HEAP32[$11 >> 2] = $internal_buf + 80;
  $12 = _printf_core($f, $fmt, $ap2, $nl_arg, $nl_type) | 0;
  if (!$7) $ret$1 = $12; else {
   FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, 0, 0) | 0;
   $$ = (HEAP32[$9 >> 2] | 0) == 0 ? -1 : $12;
   HEAP32[$6 >> 2] = $7;
   HEAP32[$2 >> 2] = 0;
   HEAP32[$11 >> 2] = 0;
   HEAP32[$8 >> 2] = 0;
   HEAP32[$9 >> 2] = 0;
   $ret$1 = $$;
  }
 } else $ret$1 = _printf_core($f, $fmt, $ap2, $nl_arg, $nl_type) | 0;
 $$0 = $ret$1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEEC2ERKS5_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$01$i = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $27 = 0, $30 = 0, $7 = 0, $8 = 0, label = 0;
 HEAP32[$this >> 2] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $this + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $__x + 4 | 0;
 $7 = (HEAP32[$2 >> 2] | 0) - (HEAP32[$__x >> 2] | 0) | 0;
 $8 = $7 >> 2;
 if (!$8) return;
 if ($8 >>> 0 > 1073741823) {
  __THREW__ = 0;
  invoke_vi(182, $this | 0);
  $11 = __THREW__;
  __THREW__ = 0;
  if (!($11 & 1)) label = 4;
 } else label = 4;
 if ((label | 0) == 4) {
  __THREW__ = 0;
  $13 = invoke_ii(67, $7 | 0) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if (!($14 & 1)) {
   HEAP32[$0 >> 2] = $13;
   HEAP32[$this >> 2] = $13;
   HEAP32[$1 >> 2] = $13 + ($8 << 2);
   $17 = HEAP32[$__x >> 2] | 0;
   $18 = HEAP32[$2 >> 2] | 0;
   if (($17 | 0) == ($18 | 0)) return;
   $$01$i = $17;
   $21 = $13;
   do {
    HEAP32[$21 >> 2] = HEAP32[$$01$i >> 2];
    $21 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
    HEAP32[$0 >> 2] = $21;
    $$01$i = $$01$i + 4 | 0;
   } while (($$01$i | 0) != ($18 | 0));
   return;
  }
 }
 $25 = ___cxa_find_matching_catch() | 0;
 $27 = HEAP32[$this >> 2] | 0;
 if (!$27) ___resumeException($25 | 0);
 $30 = HEAP32[$0 >> 2] | 0;
 if (($30 | 0) != ($27 | 0)) HEAP32[$0 >> 2] = $30 + (~(($30 + -4 - $27 | 0) >>> 2) << 2);
 __ZdlPv($27);
 ___resumeException($25 | 0);
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $22 = 0, $30 = 0, $9 = 0;
 if ((-18 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $19 = $this + 1 | 0; else $19 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 2147483623) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  if ($12 >>> 0 < 11) $16 = 11; else $16 = $12 + 16 & -16;
 } else $16 = -17;
 $17 = __Znwj($16) | 0;
 if ($__n_copy) _memcpy($17 | 0, $19 | 0, $__n_copy | 0) | 0;
 if ($__n_add) _memcpy($17 + $__n_copy | 0, $__p_new_stuff | 0, $__n_add | 0) | 0;
 $22 = $__old_sz - $__n_del | 0;
 if (($22 | 0) != ($__n_copy | 0)) _memcpy($17 + ($__n_add + $__n_copy) | 0, $19 + ($__n_del + $__n_copy) | 0, $22 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 10) __ZdlPv($19);
 HEAP32[$this + 8 >> 2] = $17;
 HEAP32[$this >> 2] = $16 | 1;
 $30 = $22 + $__n_add | 0;
 HEAP32[$this + 4 >> 2] = $30;
 HEAP8[$17 + $30 >> 0] = 0;
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $18 = 0, $19 = 0, $22 = 0, $3 = 0, $5 = 0, $7 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $22 = $__r$0 + 28 | 0;
  STACKTOP = sp;
  return $22 | 0;
 }
 $3 = __Znwj(32) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__k | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($3);
  ___resumeException($7 | 0);
 }
 HEAP32[$3 + 28 >> 2] = 0;
 $10 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $10;
 HEAP32[$0 >> 2] = $3;
 $14 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$14) $18 = $3; else {
  HEAP32[$this >> 2] = $14;
  $18 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $18);
 $19 = $this + 8 | 0;
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
 $__r$0 = $3;
 $22 = $__r$0 + 28 | 0;
 STACKTOP = sp;
 return $22 | 0;
}

function __ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $38 = 0, $40 = 0, $41 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = ((HEAP32[$0 >> 2] | 0) - $2 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $14 = (HEAP32[$9 >> 2] | 0) - $13 | 0;
 if ($14 >> 2 >>> 0 < 536870911) {
  $21 = $14 >> 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $26 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $27 = $26 >> 2;
  if (!$23) {
   $$0$i3 = 0;
   $32 = 0;
   $33 = $27;
   $38 = $26;
  } else {
   $$0$i2 = $23;
   $40 = $27;
   $41 = $26;
   label = 6;
  }
 } else {
  $19 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $$0$i2 = 1073741823;
  $40 = $19 >> 2;
  $41 = $19;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $32 = __Znwj($$0$i2 << 2) | 0;
  $33 = $40;
  $38 = $41;
 }
 $31 = $32 + ($33 << 2) | 0;
 if ($31) HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 _memcpy($32 | 0, $12 | 0, $38 | 0) | 0;
 HEAP32[$this >> 2] = $32;
 HEAP32[$0 >> 2] = $32 + ($33 + 1 << 2);
 HEAP32[$9 >> 2] = $32 + ($$0$i3 << 2);
 if (!$12) return;
 __ZdlPv($12);
 return;
}

function __ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $38 = 0, $40 = 0, $41 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = ((HEAP32[$0 >> 2] | 0) - $2 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $14 = (HEAP32[$9 >> 2] | 0) - $13 | 0;
 if ($14 >> 2 >>> 0 < 536870911) {
  $21 = $14 >> 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $26 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $27 = $26 >> 2;
  if (!$23) {
   $$0$i3 = 0;
   $32 = 0;
   $33 = $27;
   $38 = $26;
  } else {
   $$0$i2 = $23;
   $40 = $27;
   $41 = $26;
   label = 6;
  }
 } else {
  $19 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $$0$i2 = 1073741823;
  $40 = $19 >> 2;
  $41 = $19;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $32 = __Znwj($$0$i2 << 2) | 0;
  $33 = $40;
  $38 = $41;
 }
 $31 = $32 + ($33 << 2) | 0;
 if ($31) HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 _memcpy($32 | 0, $12 | 0, $38 | 0) | 0;
 HEAP32[$this >> 2] = $32;
 HEAP32[$0 >> 2] = $32 + ($33 + 1 << 2);
 HEAP32[$9 >> 2] = $32 + ($$0$i3 << 2);
 if (!$12) return;
 __ZdlPv($12);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $21 = 0, $27 = 0, $33 = 0, $40 = 0, $8 = 0, $__p$0 = 0, $scevgep1 = 0;
 $0 = $__first;
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $15 = ($1 & 255) >>> 1;
  $16 = 10;
  $40 = $1;
 } else {
  $8 = HEAP32[$this >> 2] | 0;
  $15 = HEAP32[$this + 4 >> 2] | 0;
  $16 = ($8 & -2) + -1 | 0;
  $40 = $8 & 255;
 }
 $12 = $__last - $0 | 0;
 do if (($__last | 0) != ($__first | 0)) {
  if (($16 - $15 | 0) >>> 0 < $12 >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $16, $15 + $12 - $16 | 0, $15, $15, 0, 0);
   $21 = HEAP8[$this >> 0] | 0;
  } else $21 = $40;
  if (!($21 & 1)) $27 = $this + 1 | 0; else $27 = HEAP32[$this + 8 >> 2] | 0;
  $scevgep1 = $__last + ($15 - $0) | 0;
  $$0 = $__first;
  $__p$0 = $27 + $15 | 0;
  while (1) {
   if (($$0 | 0) == ($__last | 0)) break;
   HEAP8[$__p$0 >> 0] = HEAP8[$$0 >> 0] | 0;
   $$0 = $$0 + 1 | 0;
   $__p$0 = $__p$0 + 1 | 0;
  }
  HEAP8[$27 + $scevgep1 >> 0] = 0;
  $33 = $15 + $12 | 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $33 << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $33;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($this, $__pos, $__s, $__n) {
 $this = $this | 0;
 $__pos = $__pos | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$pre = 0, $0 = 0, $13 = 0, $17 = 0, $2 = 0, $22 = 0, $24 = 0, $30 = 0, $7 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$this + 4 >> 2] | 0;
 if ($7 >>> 0 < $__pos >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 if ($2) {
  $13 = 10;
  $17 = $0;
 } else {
  $9 = HEAP32[$this >> 2] | 0;
  $13 = ($9 & -2) + -1 | 0;
  $17 = $9 & 255;
 }
 if (($13 - $7 | 0) >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $13, $7 + $__n - $13 | 0, $7, $__pos, 0, $__n, $__s); else if ($__n) {
  if (!($17 & 1)) $24 = $this + 1 | 0; else $24 = HEAP32[$this + 8 >> 2] | 0;
  $22 = $7 - $__pos | 0;
  $$pre = $24 + $__pos | 0;
  if (($7 | 0) == ($__pos | 0)) $$1 = $__s; else {
   if ($$pre >>> 0 <= $__s >>> 0 & ($24 + $7 | 0) >>> 0 > $__s >>> 0) $$0 = $__s + $__n | 0; else $$0 = $__s;
   _memmove($24 + ($__n + $__pos) | 0, $$pre | 0, $22 | 0) | 0;
   $$1 = $$0;
  }
  _memmove($$pre | 0, $$1 | 0, $__n | 0) | 0;
  $30 = $7 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $30 << 1; else HEAP32[$this + 4 >> 2] = $30;
  HEAP8[$24 + $30 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $38 = 0, $40 = 0, $41 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = ((HEAP32[$0 >> 2] | 0) - $2 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $14 = (HEAP32[$9 >> 2] | 0) - $13 | 0;
 if ($14 >> 2 >>> 0 < 536870911) {
  $21 = $14 >> 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $26 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $27 = $26 >> 2;
  if (!$23) {
   $$0$i3 = 0;
   $32 = 0;
   $33 = $27;
   $38 = $26;
  } else {
   $$0$i2 = $23;
   $40 = $27;
   $41 = $26;
   label = 6;
  }
 } else {
  $19 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $$0$i2 = 1073741823;
  $40 = $19 >> 2;
  $41 = $19;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $32 = __Znwj($$0$i2 << 2) | 0;
  $33 = $40;
  $38 = $41;
 }
 $31 = $32 + ($33 << 2) | 0;
 if ($31) HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 _memcpy($32 | 0, $12 | 0, $38 | 0) | 0;
 HEAP32[$this >> 2] = $32;
 HEAP32[$0 >> 2] = $32 + ($33 + 1 << 2);
 HEAP32[$9 >> 2] = $32 + ($$0$i3 << 2);
 if (!$12) return;
 __ZdlPv($12);
 return;
}

function __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $38 = 0, $40 = 0, $41 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = ((HEAP32[$0 >> 2] | 0) - $2 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $14 = (HEAP32[$9 >> 2] | 0) - $13 | 0;
 if ($14 >> 2 >>> 0 < 536870911) {
  $21 = $14 >> 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $26 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $27 = $26 >> 2;
  if (!$23) {
   $$0$i3 = 0;
   $32 = 0;
   $33 = $27;
   $38 = $26;
  } else {
   $$0$i2 = $23;
   $40 = $27;
   $41 = $26;
   label = 6;
  }
 } else {
  $19 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $$0$i2 = 1073741823;
  $40 = $19 >> 2;
  $41 = $19;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $32 = __Znwj($$0$i2 << 2) | 0;
  $33 = $40;
  $38 = $41;
 }
 $31 = $32 + ($33 << 2) | 0;
 if ($31) HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 _memcpy($32 | 0, $12 | 0, $38 | 0) | 0;
 HEAP32[$this >> 2] = $32;
 HEAP32[$0 >> 2] = $32 + ($33 + 1 << 2);
 HEAP32[$9 >> 2] = $32 + ($$0$i3 << 2);
 if (!$12) return;
 __ZdlPv($12);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $28 = 0, $32 = 0, $37 = 0, $44 = 0, $8 = 0, $__p$0 = 0;
 $0 = $__first;
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $16 = ($1 & 255) >>> 1;
  $17 = 1;
  $44 = $1;
 } else {
  $8 = HEAP32[$this >> 2] | 0;
  $16 = HEAP32[$this + 4 >> 2] | 0;
  $17 = ($8 & -2) + -1 | 0;
  $44 = $8 & 255;
 }
 $13 = $__last - $0 >> 2;
 do if ($13) {
  if (($17 - $16 | 0) >>> 0 < $13 >>> 0) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $17, $16 + $13 - $17 | 0, $16, $16, 0, 0);
   $22 = HEAP8[$this >> 0] | 0;
  } else $22 = $44;
  if (!($22 & 1)) $28 = $this + 4 | 0; else $28 = HEAP32[$this + 8 >> 2] | 0;
  $32 = $16 + (($__last - $0 | 0) >>> 2) | 0;
  $$0 = $__first;
  $__p$0 = $28 + ($16 << 2) | 0;
  while (1) {
   if (($$0 | 0) == ($__last | 0)) break;
   HEAP32[$__p$0 >> 2] = HEAP32[$$0 >> 2];
   $$0 = $$0 + 4 | 0;
   $__p$0 = $__p$0 + 4 | 0;
  }
  HEAP32[$28 + ($32 << 2) >> 2] = 0;
  $37 = $16 + $13 | 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $37 << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $37;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this, $ec, $what_arg) {
 $this = $this | 0;
 $ec = $ec | 0;
 $what_arg = $what_arg | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $18 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $what_arg, _strlen($what_arg | 0) | 0);
 __THREW__ = 0;
 invoke_viii(20, $0 | 0, $ec | 0, $1 | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $18;
 } else {
  __THREW__ = 0;
  invoke_vii(110, $this | 0, $0 | 0);
  $5 = __THREW__;
  __THREW__ = 0;
  if ($5 & 1) {
   $20 = ___cxa_find_matching_catch() | 0;
   $21 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $$0 = $21;
   $$01 = $20;
   break;
  } else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   HEAP32[$this >> 2] = 57920;
   $8 = $ec;
   $13 = HEAP32[$8 + 4 >> 2] | 0;
   $14 = $this + 8 | 0;
   HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$14 + 4 >> 2] = $13;
   STACKTOP = sp;
   return;
  }
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($$01 | 0);
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $14 = 0, $22 = 0, $23 = 0, $29 = 0, $31 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 127]($1) | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 if (!($6 & 1)) $23 = ($6 & 255) >>> 1; else $23 = HEAP32[$5 + 4 >> 2] | 0;
 $14 = HEAP8[$5 + 12 >> 0] | 0;
 if (!($14 & 1)) $22 = ($14 & 255) >>> 1; else $22 = HEAP32[$5 + 16 >> 2] | 0;
 do if (($23 | 0) == (0 - $22 | 0)) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4; else {
  HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  $29 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 24 | 0, $__ct, $__err, 0) | 0;
  $31 = HEAP32[$__h >> 2] | 0;
  if (($29 | 0) == ($5 | 0) & ($31 | 0) == 12) {
   HEAP32[$__h >> 2] = 0;
   break;
  }
  if (($31 | 0) < 12 & ($29 - $5 | 0) == 12) HEAP32[$__h >> 2] = $31 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $14 = 0, $22 = 0, $23 = 0, $29 = 0, $31 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 127]($1) | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 if (!($6 & 1)) $23 = ($6 & 255) >>> 1; else $23 = HEAP32[$5 + 4 >> 2] | 0;
 $14 = HEAP8[$5 + 12 >> 0] | 0;
 if (!($14 & 1)) $22 = ($14 & 255) >>> 1; else $22 = HEAP32[$5 + 16 >> 2] | 0;
 do if (($23 | 0) == (0 - $22 | 0)) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4; else {
  HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  $29 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 24 | 0, $__ct, $__err, 0) | 0;
  $31 = HEAP32[$__h >> 2] | 0;
  if (($29 | 0) == ($5 | 0) & ($31 | 0) == 12) {
   HEAP32[$__h >> 2] = 0;
   break;
  }
  if (($31 | 0) < 12 & ($29 - $5 | 0) == 12) HEAP32[$__h >> 2] = $31 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function ___fwritex($s, $l, $f) {
 $s = $s | 0;
 $l = $l | 0;
 $f = $f | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $19 = 0, $29 = 0, $5 = 0, $6 = 0, $7 = 0, $i$0 = 0, $i$0$lcssa8 = 0, $i$1 = 0, label = 0;
 $0 = $f + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) if (!(___towrite($f) | 0)) {
  $7 = HEAP32[$0 >> 2] | 0;
  break;
 } else {
  $$0 = 0;
  return $$0 | 0;
 } else $7 = $1; while (0);
 $5 = $f + 20 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($7 - $6 | 0) >>> 0 < $l >>> 0) {
  $$0 = FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, $s, $l) | 0;
  return $$0 | 0;
 }
 do if ((HEAP8[$f + 75 >> 0] | 0) > -1) {
  $i$0 = $l;
  while (1) {
   if (!$i$0) {
    label = 12;
    break;
   }
   $19 = $i$0 + -1 | 0;
   if ((HEAP8[$s + $19 >> 0] | 0) == 10) {
    $i$0$lcssa8 = $i$0;
    break;
   } else $i$0 = $19;
  }
  if ((label | 0) == 12) {
   $$01 = $l;
   $$02 = $s;
   $29 = $6;
   $i$1 = 0;
   break;
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, $s, $i$0$lcssa8) | 0) >>> 0 < $i$0$lcssa8 >>> 0) {
   $$0 = $i$0$lcssa8;
   return $$0 | 0;
  } else {
   $$01 = $l - $i$0$lcssa8 | 0;
   $$02 = $s + $i$0$lcssa8 | 0;
   $29 = HEAP32[$5 >> 2] | 0;
   $i$1 = $i$0$lcssa8;
   break;
  }
 } else {
  $$01 = $l;
  $$02 = $s;
  $29 = $6;
  $i$1 = 0;
 } while (0);
 _memcpy($29 | 0, $$02 | 0, $$01 | 0) | 0;
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$01;
 $$0 = $i$1 + $$01 | 0;
 return $$0 | 0;
}

function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($agg$result, $this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $$0$i$i = 0, $$lcssa = 0, $10 = 0, $11 = 0, $21 = 0, $23 = 0, $4 = 0, $7 = 0, $8 = 0, $__nar = 0, $__ne = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__nar = sp + 4 | 0;
 $__ne = sp;
 HEAP32[$__ne >> 2] = $__nar + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this + 8 | 0, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $4 = HEAP32[$__ne >> 2] | 0;
 $$0$i$i = $__nar;
 $8 = HEAP32[$__s >> 2] | 0;
 while (1) {
  if (($$0$i$i | 0) == ($4 | 0)) {
   $$lcssa = $8;
   break;
  }
  $7 = HEAP8[$$0$i$i >> 0] | 0;
  do if (!$8) $23 = 0; else {
   $10 = $8 + 24 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (($11 | 0) == (HEAP32[$8 + 28 >> 2] | 0)) {
    $21 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 52 >> 2] & 63]($8, $7 & 255) | 0) == -1;
    $23 = $21 ? 0 : $8;
    break;
   } else {
    HEAP32[$10 >> 2] = $11 + 1;
    HEAP8[$11 >> 0] = $7;
    $23 = $8;
    break;
   }
  } while (0);
  $$0$i$i = $$0$i$i + 1 | 0;
  $8 = $23;
 }
 HEAP32[$agg$result >> 2] = $$lcssa;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $19 = 0, $4 = 0, $5 = 0, $__v = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v = sp;
 $4 = HEAP32[$this + 8 >> 2] | 0;
 $5 = HEAP32[$this + 4 >> 2] | 0;
 if ($4 - $5 >> 2 >>> 0 < $__n >>> 0) {
  $11 = HEAP32[$this >> 2] | 0;
  $13 = $5 - $11 >> 2;
  $14 = $13 + $__n | 0;
  if ($14 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $16 = $4 - $11 | 0;
  if ($16 >> 2 >>> 0 < 536870911) {
   $19 = $16 >> 1;
   $$0$i = $19 >>> 0 < $14 >>> 0 ? $14 : $19;
  } else $$0$i = 1073741823;
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v, $$0$i, $13, $this + 16 | 0);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($__v, $__n);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n);
 STACKTOP = sp;
 return;
}

function __Z23jsonnet_unparse_jsonnetPK3AST($agg$result, $ast) {
 $agg$result = $agg$result | 0;
 $ast = $ast | 0;
 var $0 = 0, $10 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if ($ast) {
  $2 = ___dynamic_cast($ast, 35776, 35792, 0) | 0;
  if ($2) {
   __ZL7unparsePK3AST($agg$result, HEAP32[$2 + 60 >> 2] | 0);
   STACKTOP = sp;
   return;
  }
 }
 $4 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(45984, 35808, 68) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $4 + (HEAP32[(HEAP32[$4 >> 2] | 0) + -12 >> 2] | 0) | 0);
 __THREW__ = 0;
 $9 = invoke_iii(22, $0 | 0, 50208) | 0;
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $19 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($18 | 0);
 }
 __THREW__ = 0;
 $15 = invoke_iii(HEAP32[(HEAP32[$9 >> 2] | 0) + 28 >> 2] | 0, $9 | 0, 10) | 0;
 $16 = __THREW__;
 __THREW__ = 0;
 if ($16 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $19 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($18 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($4, $15) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($4) | 0;
  _abort();
 }
}

function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($agg$result, $this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$lcssa = 0, $10 = 0, $11 = 0, $22 = 0, $4 = 0, $7 = 0, $8 = 0, $__nar = 0, $__ne = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $__nar = sp + 8 | 0;
 $__ne = sp;
 HEAP32[$__ne >> 2] = $__nar + 400;
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this + 8 | 0, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $4 = HEAP32[$__ne >> 2] | 0;
 $$0$i$i = $__nar;
 $8 = HEAP32[$__s >> 2] | 0;
 while (1) {
  if (($$0$i$i | 0) == ($4 | 0)) {
   $$lcssa = $8;
   break;
  }
  $7 = HEAP32[$$0$i$i >> 2] | 0;
  if (!$8) $22 = 0; else {
   $10 = $8 + 24 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (($11 | 0) == (HEAP32[$8 + 28 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 52 >> 2] & 63]($8, $7) | 0; else {
    HEAP32[$10 >> 2] = $11 + 4;
    HEAP32[$11 >> 2] = $7;
    $$0$i$i$i$i = $7;
   }
   $22 = ($$0$i$i$i$i | 0) == -1 ? 0 : $8;
  }
  $$0$i$i = $$0$i$i + 4 | 0;
  $8 = $22;
 }
 HEAP32[$agg$result >> 2] = $$lcssa;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $13 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = $this + 8 | 0;
 $6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 127]($2) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 $9 = HEAP8[$6 >> 0] | 0;
 if (!($9 & 1)) {
  $21 = $6 + 4 | 0;
  $22 = ($9 & 255) >>> 1;
  $23 = $6 + 4 | 0;
 } else {
  $13 = HEAP32[$6 + 8 >> 2] | 0;
  $21 = $13;
  $22 = HEAP32[$6 + 4 >> 2] | 0;
  $23 = $13;
 }
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $23, $21 + ($22 << 2) | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $13 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = $this + 8 | 0;
 $6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 127]($2) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 $9 = HEAP8[$6 >> 0] | 0;
 if (!($9 & 1)) {
  $21 = $6 + 1 | 0;
  $22 = ($9 & 255) >>> 1;
  $23 = $6 + 1 | 0;
 } else {
  $13 = HEAP32[$6 + 8 >> 2] | 0;
  $21 = $13;
  $22 = HEAP32[$6 + 4 >> 2] | 0;
  $23 = $13;
 }
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $23, $21 + $22 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $16 = 0, $21 = 0, $25 = 0, $26 = 0, $29 = 0, $32 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $4 = HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0;
 do if (HEAP32[$1 + ($4 + 24) >> 2] | 0) if (!(HEAP32[$1 + ($4 + 16) >> 2] | 0)) if (HEAP32[$1 + ($4 + 4) >> 2] & 8192) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $16 = HEAP32[$0 >> 2] | 0;
  $21 = HEAP32[$16 + ((HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
  __THREW__ = 0;
  $25 = invoke_ii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $21 | 0) | 0;
  $26 = __THREW__;
  __THREW__ = 0;
  if (!($26 & 1)) {
   if (($25 | 0) != -1) break;
   $29 = HEAP32[$0 >> 2] | 0;
   $32 = HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(48, $29 + $32 | 0, HEAP32[$29 + ($32 + 16) >> 2] | 1 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) break;
  }
  $39 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($39 | 0) | 0;
  __THREW__ = 0;
  invoke_v(2);
  $41 = __THREW__;
  __THREW__ = 0;
  if ($41 & 1) {
   $43 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($43);
  }
 } while (0);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $16 = 0, $21 = 0, $25 = 0, $26 = 0, $29 = 0, $32 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $4 = HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0;
 do if (HEAP32[$1 + ($4 + 24) >> 2] | 0) if (!(HEAP32[$1 + ($4 + 16) >> 2] | 0)) if (HEAP32[$1 + ($4 + 4) >> 2] & 8192) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $16 = HEAP32[$0 >> 2] | 0;
  $21 = HEAP32[$16 + ((HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
  __THREW__ = 0;
  $25 = invoke_ii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $21 | 0) | 0;
  $26 = __THREW__;
  __THREW__ = 0;
  if (!($26 & 1)) {
   if (($25 | 0) != -1) break;
   $29 = HEAP32[$0 >> 2] | 0;
   $32 = HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(48, $29 + $32 | 0, HEAP32[$29 + ($32 + 16) >> 2] | 1 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) break;
  }
  $39 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($39 | 0) | 0;
  __THREW__ = 0;
  invoke_v(2);
  $41 = __THREW__;
  __THREW__ = 0;
  if ($41 & 1) {
   $43 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($43);
  }
 } while (0);
 return;
}

function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $1 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 L1 : do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = _strtoll_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $5 = tempRet0;
  $6 = HEAP32[$1 >> 2] | 0;
  if (!$6) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  do if (($6 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   if (($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 0) {
    $$0 = 2147483647;
    break L1;
   }
  } else {
   if (($5 | 0) < -1 | ($5 | 0) == -1 & $4 >>> 0 < 2147483648) {
    HEAP32[$__err >> 2] = 4;
    break;
   }
   if (($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 2147483647) {
    HEAP32[$__err >> 2] = 4;
    $$0 = 2147483647;
    break L1;
   } else {
    $$0 = $4;
    break L1;
   }
  } while (0);
  $$0 = -2147483648;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _vsnprintf($s, $n, $fmt, $ap) {
 $s = $s | 0;
 $n = $n | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $5 = 0, $8 = 0, $b = 0, $f = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $b = sp + 112 | 0;
 $f = sp;
 dest = $f + 0 | 0;
 src = 45696 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if (($n + -1 | 0) >>> 0 > 2147483646) if (!$n) {
  $$01 = $b;
  $$02 = 1;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 75;
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$01 = $s;
  $$02 = $n;
 }
 $5 = -2 - $$01 | 0;
 $$$02 = $$02 >>> 0 > $5 >>> 0 ? $5 : $$02;
 HEAP32[$f + 48 >> 2] = $$$02;
 $8 = $f + 20 | 0;
 HEAP32[$8 >> 2] = $$01;
 HEAP32[$f + 44 >> 2] = $$01;
 $10 = $$01 + $$$02 | 0;
 $11 = $f + 16 | 0;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$f + 28 >> 2] = $10;
 $13 = _MUSL_vfprintf($f, $fmt, $ap) | 0;
 if (!$$$02) {
  $$0 = $13;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $15 = HEAP32[$8 >> 2] | 0;
 HEAP8[$15 + ((($15 | 0) == (HEAP32[$11 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
 $$0 = $13;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $10 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $9 = 0;
 if ((1073741807 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $20 = $this + 4 | 0; else $20 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 536870887) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  if ($12 >>> 0 < 2) $17 = 2; else $17 = $12 + 4 & -4;
 } else $17 = 1073741807;
 $18 = __Znwj($17 << 2) | 0;
 if ($__n_copy) _wmemcpy($18, $20, $__n_copy) | 0;
 $21 = $__old_sz - $__n_del | 0;
 if (($21 | 0) != ($__n_copy | 0)) _wmemcpy($18 + ($__n_add + $__n_copy << 2) | 0, $20 + ($__n_del + $__n_copy << 2) | 0, $21 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 1) __ZdlPv($20);
 HEAP32[$this + 8 >> 2] = $18;
 HEAP32[$this >> 2] = $17 | 1;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $9 = 0;
 if ((-17 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $19 = $this + 1 | 0; else $19 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 2147483623) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  if ($12 >>> 0 < 11) $16 = 11; else $16 = $12 + 16 & -16;
 } else $16 = -17;
 $17 = __Znwj($16) | 0;
 if ($__n_copy) _memcpy($17 | 0, $19 | 0, $__n_copy | 0) | 0;
 $20 = $__old_sz - $__n_del | 0;
 if (($20 | 0) != ($__n_copy | 0)) _memcpy($17 + ($__n_add + $__n_copy) | 0, $19 + ($__n_del + $__n_copy) | 0, $20 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 10) __ZdlPv($19);
 HEAP32[$this + 8 >> 2] = $17;
 HEAP32[$this >> 2] = $16 | 1;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 50200) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 50200) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 50208) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 50208) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZN6ObjectD0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $17 = 0, $20 = 0, $21 = 0, $27 = 0, $5 = 0, $7 = 0, $9 = 0, $__f$01$i$i$i = 0, $__f$01$i$i$i$looptemp = 0;
 HEAP32[$this >> 2] = 37840;
 $0 = $this + 48 | 0;
 $1 = $this + 56 | 0;
 if (HEAP32[$1 >> 2] | 0) {
  $5 = HEAP32[$this + 52 >> 2] | 0;
  $7 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
  $9 = HEAP32[$5 >> 2] | 0;
  HEAP32[$9 + 4 >> 2] = HEAP32[$7 >> 2];
  HEAP32[HEAP32[$7 >> 2] >> 2] = $9;
  HEAP32[$1 >> 2] = 0;
  if (($5 | 0) != ($0 | 0)) {
   $__f$01$i$i$i = $5;
   do {
    $__f$01$i$i$i$looptemp = $__f$01$i$i$i;
    $__f$01$i$i$i = HEAP32[$__f$01$i$i$i + 4 >> 2] | 0;
    __ZdlPv($__f$01$i$i$i$looptemp);
   } while (($__f$01$i$i$i | 0) != ($0 | 0));
  }
 }
 HEAP32[$this >> 2] = 35936;
 $17 = HEAP32[$this + 36 >> 2] | 0;
 if (!$17) {
  $27 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
  __ZdlPv($this);
  return;
 }
 $20 = $this + 40 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (($21 | 0) != ($17 | 0)) HEAP32[$20 >> 2] = $21 + (~(($21 + -4 - $17 | 0) >>> 2) << 2);
 __ZdlPv($17);
 $27 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 50200) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 50208) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $15 = 0, $17 = 0, $23 = 0, $3 = 0, $7 = 0, $9 = 0;
 HEAP32[$this >> 2] = 42448;
 $0 = $this + 64 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if ($1) {
  __THREW__ = 0;
  invoke_ii(5, $this | 0) | 0;
  $3 = __THREW__;
  __THREW__ = 0;
  if ($3 & 1) {
   $7 = ___cxa_find_matching_catch(0) | 0;
   _fclose($1 | 0) | 0;
   ___cxa_begin_catch($7 | 0) | 0;
   __THREW__ = 0;
   invoke_v(2);
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) break;
   $17 = ___cxa_find_matching_catch(0) | 0;
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
   ___clang_call_terminate($17);
  } else {
   if (_fclose($1 | 0) | 0) break;
   HEAP32[$0 >> 2] = 0;
   break;
  }
 } while (0);
 if (HEAP8[$this + 96 >> 0] | 0) {
  $15 = HEAP32[$this + 32 >> 2] | 0;
  if ($15) __ZdaPv($15);
 }
 if (!(HEAP8[$this + 97 >> 0] | 0)) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  return;
 }
 $23 = HEAP32[$this + 56 >> 2] | 0;
 if (!$23) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  return;
 }
 __ZdaPv($23);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $__sp, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__sp = $__sp | 0;
 $0 = $0 | 0;
 var $1 = 0, $14 = 0, $28 = 0, $33 = 0, $38 = 0, $43 = 0, $44 = 0, $9 = 0;
 $1 = $this + 64 | 0;
 if (HEAP32[$1 >> 2] | 0) if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0)) if (!(_fseeko(HEAP32[$1 >> 2] | 0, HEAP32[$__sp + 8 >> 2] | 0, 0) | 0)) {
  $38 = $__sp;
  $43 = HEAP32[$38 + 4 >> 2] | 0;
  $44 = $this + 72 | 0;
  HEAP32[$44 >> 2] = HEAP32[$38 >> 2];
  HEAP32[$44 + 4 >> 2] = $43;
  HEAP32[$agg$result + 0 >> 2] = HEAP32[$__sp + 0 >> 2];
  HEAP32[$agg$result + 4 >> 2] = HEAP32[$__sp + 4 >> 2];
  HEAP32[$agg$result + 8 >> 2] = HEAP32[$__sp + 8 >> 2];
  HEAP32[$agg$result + 12 >> 2] = HEAP32[$__sp + 12 >> 2];
  return;
 } else {
  $28 = $agg$result;
  HEAP32[$28 >> 2] = 0;
  HEAP32[$28 + 4 >> 2] = 0;
  $33 = $agg$result + 8 | 0;
  HEAP32[$33 >> 2] = -1;
  HEAP32[$33 + 4 >> 2] = -1;
  return;
 }
 $9 = $agg$result;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 $14 = $agg$result + 8 | 0;
 HEAP32[$14 >> 2] = -1;
 HEAP32[$14 + 4 >> 2] = -1;
 return;
}

function ___cxx_global_array_dtor108($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57708 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57696 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57684 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57672 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57660 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57648 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57636 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57624 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57612 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57600 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57588 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57576 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57564 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(57552);
 return;
}

function ___cxx_global_array_dtor93($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57172 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57160 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57148 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57136 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57124 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57112 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57100 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57088 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57076 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57064 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57052 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57040 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57028 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(57016);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phi2Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $13 = 0, $18 = 0, $19 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 $0 = $this + 44 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = HEAP32[$this + 24 >> 2] | 0;
 if ($1 >>> 0 < $3 >>> 0) {
  HEAP32[$0 >> 2] = $3;
  $13 = $3;
 } else $13 = $1;
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $this + 12 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ($6 >>> 0 >= $8 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (($__c | 0) == -1) {
  HEAP32[$5 >> 2] = $6;
  HEAP32[$7 >> 2] = $8 + -1;
  HEAP32[$this + 16 >> 2] = $13;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!(HEAP32[$this + 48 >> 2] & 16)) {
  $18 = $__c & 255;
  $19 = $8 + -1 | 0;
  if ($18 << 24 >> 24 == (HEAP8[$19 >> 0] | 0)) {
   $$pre$phi2Z2D = $18;
   $$pre$phiZ2D = $19;
  } else {
   $$0 = -1;
   return $$0 | 0;
  }
 } else {
  $$pre$phi2Z2D = $__c & 255;
  $$pre$phiZ2D = $8 + -1 | 0;
 }
 HEAP32[$5 >> 2] = $6;
 HEAP32[$7 >> 2] = $$pre$phiZ2D;
 HEAP32[$this + 16 >> 2] = $13;
 HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi2Z2D;
 $$0 = $__c;
 return $$0 | 0;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this, $info, $dst_ptr, $current_ptr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 var $16 = 0, $17 = 0, $22 = 0, $25 = 0, $5 = 0, $6 = 0;
 HEAP8[$info + 53 >> 0] = 1;
 do if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
  HEAP8[$info + 52 >> 0] = 1;
  $5 = $info + 16 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if (!$6) {
   HEAP32[$5 >> 2] = $dst_ptr;
   HEAP32[$info + 24 >> 2] = $path_below;
   HEAP32[$info + 36 >> 2] = 1;
   if (!(($path_below | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  if (($6 | 0) != ($dst_ptr | 0)) {
   $25 = $info + 36 | 0;
   HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 1;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  $16 = $info + 24 | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($17 | 0) == 2) {
   HEAP32[$16 >> 2] = $path_below;
   $22 = $path_below;
  } else $22 = $17;
  if (($22 | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0) HEAP8[$info + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZN6ObjectD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $17 = 0, $20 = 0, $21 = 0, $27 = 0, $5 = 0, $7 = 0, $9 = 0, $__f$01$i$i = 0, $__f$01$i$i$looptemp = 0;
 HEAP32[$this >> 2] = 37840;
 $0 = $this + 48 | 0;
 $1 = $this + 56 | 0;
 if (HEAP32[$1 >> 2] | 0) {
  $5 = HEAP32[$this + 52 >> 2] | 0;
  $7 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
  $9 = HEAP32[$5 >> 2] | 0;
  HEAP32[$9 + 4 >> 2] = HEAP32[$7 >> 2];
  HEAP32[HEAP32[$7 >> 2] >> 2] = $9;
  HEAP32[$1 >> 2] = 0;
  if (($5 | 0) != ($0 | 0)) {
   $__f$01$i$i = $5;
   do {
    $__f$01$i$i$looptemp = $__f$01$i$i;
    $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
    __ZdlPv($__f$01$i$i$looptemp);
   } while (($__f$01$i$i | 0) != ($0 | 0));
  }
 }
 HEAP32[$this >> 2] = 35936;
 $17 = HEAP32[$this + 36 >> 2] | 0;
 if (!$17) {
  $27 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
  return;
 }
 $20 = $this + 40 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (($21 | 0) != ($17 | 0)) HEAP32[$20 >> 2] = $21 + (~(($21 + -4 - $17 | 0) >>> 2) << 2);
 __ZdlPv($17);
 $27 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$pn = 0, $0 = 0, $19 = 0, $2 = 0, $20 = 0, $__cap$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) != 0;
 if ($2) {
  $__cap$0 = (HEAP32[$this >> 2] & -2) + -1 | 0;
  $__sz$0 = HEAP32[$this + 4 >> 2] | 0;
 } else {
  $__cap$0 = 1;
  $__sz$0 = ($0 & 255) >>> 1;
 }
 if (($__sz$0 | 0) == ($__cap$0 | 0)) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $__cap$0, 1, $__cap$0, $__cap$0, 0, 0);
  if (!(HEAP8[$this >> 0] & 1)) label = 7; else label = 8;
 } else if ($2) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$this >> 0] = ($__sz$0 << 1) + 2;
  $$pn = $this + 4 | 0;
  $__p$0$sum$pre$phiZZZ2D = $__sz$0 + 1 | 0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$this + 8 >> 2] | 0;
  $20 = $__sz$0 + 1 | 0;
  HEAP32[$this + 4 >> 2] = $20;
  $$pn = $19;
  $__p$0$sum$pre$phiZZZ2D = $20;
 }
 HEAP32[$$pn + ($__sz$0 << 2) >> 2] = $__c;
 HEAP32[$$pn + ($__p$0$sum$pre$phiZZZ2D << 2) >> 2] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$pn = 0, $0 = 0, $19 = 0, $2 = 0, $20 = 0, $__cap$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) != 0;
 if ($2) {
  $__cap$0 = (HEAP32[$this >> 2] & -2) + -1 | 0;
  $__sz$0 = HEAP32[$this + 4 >> 2] | 0;
 } else {
  $__cap$0 = 10;
  $__sz$0 = ($0 & 255) >>> 1;
 }
 if (($__sz$0 | 0) == ($__cap$0 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $__cap$0, 1, $__cap$0, $__cap$0, 0, 0);
  if (!(HEAP8[$this >> 0] & 1)) label = 7; else label = 8;
 } else if ($2) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$this >> 0] = ($__sz$0 << 1) + 2;
  $$pn = $this + 1 | 0;
  $__p$0$sum$pre$phiZZZ2D = $__sz$0 + 1 | 0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$this + 8 >> 2] | 0;
  $20 = $__sz$0 + 1 | 0;
  HEAP32[$this + 4 >> 2] = $20;
  $$pn = $19;
  $__p$0$sum$pre$phiZZZ2D = $20;
 }
 HEAP8[$$pn + $__sz$0 >> 0] = $__c;
 HEAP8[$$pn + $__p$0$sum$pre$phiZZZ2D >> 0] = 0;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKN12_GLOBAL__N_111Interpreter16ImportCacheValueEEENS_19__map_value_compareIS9_SF_NS_4lessIS9_EELb1EEENS6_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKN12_GLOBAL__N_111Interpreter16ImportCacheValueEEENS_19__map_value_compareIS9_SF_NS_4lessIS9_EELb1EEENS6_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKN12_GLOBAL__N_111Interpreter16ImportCacheValueEEENS_19__map_value_compareIS9_SF_NS_4lessIS9_EELb1EEENS6_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 28 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $6 = 0;
 do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else if (($this | 0) == (HEAP32[$info >> 2] | 0)) {
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    HEAP32[$14 >> 2] = $current_ptr;
    $20 = $info + 40 | 0;
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
    if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) HEAP8[$info + 54 >> 0] = 1;
    HEAP32[$info + 44 >> 2] = 4;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $13 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $25 = 0, $4 = 0, $6 = 0, $7 = 0;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 189;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $13 = (HEAP32[$__n >> 2] | 0) - $6 >> 2;
 $15 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$15) __ZSt17__throw_bad_allocv();
 do if ($2) {
  HEAP32[$__b >> 2] = $15;
  $25 = $15;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  if (!$$pr) $25 = $15; else {
   __THREW__ = 0;
   invoke_vi(HEAP32[$0 >> 2] | 0, $$pr | 0);
   $19 = __THREW__;
   __THREW__ = 0;
   if ($19 & 1) {
    $21 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($21);
   } else {
    $25 = HEAP32[$__b >> 2] | 0;
    break;
   }
  }
 } while (0);
 HEAP32[$0 >> 2] = 201;
 HEAP32[$__n >> 2] = $25 + ($13 << 2);
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + ($$ >>> 2 << 2);
 return;
}

function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $13 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $25 = 0, $4 = 0, $6 = 0, $7 = 0;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 189;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $13 = (HEAP32[$__n >> 2] | 0) - $6 >> 2;
 $15 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$15) __ZSt17__throw_bad_allocv();
 do if ($2) {
  HEAP32[$__b >> 2] = $15;
  $25 = $15;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  if (!$$pr) $25 = $15; else {
   __THREW__ = 0;
   invoke_vi(HEAP32[$0 >> 2] | 0, $$pr | 0);
   $19 = __THREW__;
   __THREW__ = 0;
   if ($19 & 1) {
    $21 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($21);
   } else {
    $25 = HEAP32[$__b >> 2] | 0;
    break;
   }
  }
 } while (0);
 HEAP32[$0 >> 2] = 201;
 HEAP32[$__n >> 2] = $25 + ($13 << 2);
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + ($$ >>> 2 << 2);
 return;
}

function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $4 = 0, $6 = 0, $7 = 0;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 189;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $12 = (HEAP32[$__n >> 2] | 0) - $6 | 0;
 $14 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$14) __ZSt17__throw_bad_allocv();
 do if ($2) {
  HEAP32[$__b >> 2] = $14;
  $23 = $14;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $14;
  if (!$$pr) $23 = $14; else {
   __THREW__ = 0;
   invoke_vi(HEAP32[$0 >> 2] | 0, $$pr | 0);
   $18 = __THREW__;
   __THREW__ = 0;
   if ($18 & 1) {
    $20 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($20);
   } else {
    $23 = HEAP32[$__b >> 2] | 0;
    break;
   }
  }
 } while (0);
 HEAP32[$0 >> 2] = 201;
 HEAP32[$__n >> 2] = $23 + $12;
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + $$;
 return;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $adjustedPtr) {
 $this = $this | 0;
 $thrown_type = $thrown_type | 0;
 $adjustedPtr = $adjustedPtr | 0;
 var $$0 = 0, $$1 = 0, $2 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 if (($this | 0) == ($thrown_type | 0)) $$1 = 1; else if (!$thrown_type) $$1 = 0; else {
  $2 = ___dynamic_cast($thrown_type, 43888, 43944, 0) | 0;
  if (!$2) $$1 = 0; else {
   dest = $info + 0 | 0;
   stop = dest + 56 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP32[$info >> 2] = $2;
   HEAP32[$info + 8 >> 2] = $this;
   HEAP32[$info + 12 >> 2] = -1;
   HEAP32[$info + 48 >> 2] = 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 28 >> 2] & 31]($2, $info, HEAP32[$adjustedPtr >> 2] | 0, 1);
   if ((HEAP32[$info + 24 >> 2] | 0) == 1) {
    HEAP32[$adjustedPtr >> 2] = HEAP32[$info + 16 >> 2];
    $$0 = 1;
   } else $$0 = 0;
   $$1 = $$0;
  }
 }
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $1 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $18 = 0;
  $19 = 0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = _strtoll_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $5 = tempRet0;
  $6 = HEAP32[$1 >> 2] | 0;
  if (!$6) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $18 = 0;
   $19 = 0;
   break;
  }
  if (($6 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $15 = ($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 0;
   tempRet0 = $15 ? 2147483647 : -2147483648;
   STACKTOP = sp;
   return ($15 ? -1 : 0) | 0;
  } else {
   $18 = $5;
   $19 = $4;
  }
 } while (0);
 tempRet0 = $18;
 STACKTOP = sp;
 return $19 | 0;
}

function ___shgetc($f) {
 $f = $f | 0;
 var $$0 = 0, $$pre = 0, $$pre3 = 0, $0 = 0, $1 = 0, $12 = 0, $19 = 0, $27 = 0, $32 = 0, $6 = 0, $9 = 0, label = 0;
 $0 = $f + 104 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) label = 3; else if ((HEAP32[$f + 108 >> 2] | 0) < ($1 | 0)) label = 3;
 if ((label | 0) == 3) {
  $6 = ___uflow($f) | 0;
  if (($6 | 0) >= 0) {
   $9 = HEAP32[$0 >> 2] | 0;
   $$pre = HEAP32[$f + 8 >> 2] | 0;
   if (!$9) label = 8; else {
    $12 = HEAP32[$f + 4 >> 2] | 0;
    $19 = $9 - (HEAP32[$f + 108 >> 2] | 0) + -1 | 0;
    if (($$pre - $12 | 0) > ($19 | 0)) HEAP32[$f + 100 >> 2] = $12 + $19; else label = 8;
   }
   if ((label | 0) == 8) HEAP32[$f + 100 >> 2] = $$pre;
   $$pre3 = HEAP32[$f + 4 >> 2] | 0;
   if ($$pre) {
    $27 = $f + 108 | 0;
    HEAP32[$27 >> 2] = $$pre + 1 - $$pre3 + (HEAP32[$27 >> 2] | 0);
   }
   $32 = $$pre3 + -1 | 0;
   if ((HEAPU8[$32 >> 0] | 0 | 0) == ($6 | 0)) {
    $$0 = $6;
    return $$0 | 0;
   }
   HEAP8[$32 >> 0] = $6;
   $$0 = $6;
   return $$0 | 0;
  }
 }
 HEAP32[$f + 100 >> 2] = 0;
 $$0 = -1;
 return $$0 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $7 = tempRet0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  if ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 65535 | ($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $6 & 65535;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $18 = 0, $9 = 0, $__i$0$i$i$i = 0;
 do if (!(HEAP8[50600] | 0)) if (___cxa_guard_acquire(50600) | 0) {
  if (!(HEAP8[55312] | 0)) if (___cxa_guard_acquire(55312) | 0) {
   $9 = 55024;
   do {
    $__i$0$i$i$i = 0;
    while (1) {
     if (($__i$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($__i$0$i$i$i << 2) >> 2] = 0;
     $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 55312);
   ___cxa_atexit(198, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(55312);
  }
  __THREW__ = 0;
  invoke_iii(38, 55024, 55320) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(38, 55036, 55336) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    HEAP32[12648] = 55024;
    ___cxa_guard_release(50600);
    break;
   }
  }
  $18 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(50600);
  ___resumeException($18 | 0);
 } while (0);
 return HEAP32[12648] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $18 = 0, $9 = 0, $__i$0$i$i$i = 0;
 do if (!(HEAP8[50584] | 0)) if (___cxa_guard_acquire(50584) | 0) {
  if (!(HEAP8[55640] | 0)) if (___cxa_guard_acquire(55640) | 0) {
   $9 = 55352;
   do {
    $__i$0$i$i$i = 0;
    while (1) {
     if (($__i$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($__i$0$i$i$i << 2) >> 2] = 0;
     $__i$0$i$i$i = $__i$0$i$i$i + 1 | 0;
    }
    $9 = $9 + 12 | 0;
   } while (($9 | 0) != 55640);
   ___cxa_atexit(197, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(55640);
  }
  __THREW__ = 0;
  invoke_iii(19, 55352, 55648) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(19, 55364, 55656) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    HEAP32[12644] = 55352;
    ___cxa_guard_release(50584);
    break;
   }
  }
  $18 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(50584);
  ___resumeException($18 | 0);
 } while (0);
 return HEAP32[12644] | 0;
}

function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $2 = 0, $5 = 0, $7 = 0, $9 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l | 0) | 0;
 __THREW__ = 0;
 $1 = invoke_iiii(45, $__s | 0, $__format | 0, $__va | 0) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if ($2 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  if ($0) {
   __THREW__ = 0;
   invoke_ii(72, $0 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $14 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($14);
   }
  }
  ___resumeException($9 | 0);
 } else {
  if ($0) {
   __THREW__ = 0;
   invoke_ii(72, $0 | 0) | 0;
   $5 = __THREW__;
   __THREW__ = 0;
   if ($5 & 1) {
    $7 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($7);
   }
  }
  STACKTOP = sp;
  return $1 | 0;
 }
 return 0;
}

function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $7 = tempRet0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  if ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 4294967295 | ($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $6;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $7 = tempRet0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  if ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 4294967295 | ($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $6;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $13 = 0, $14 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $13 = 0;
  $14 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $13 = 0;
   $14 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $13 = 0;
   $14 = 0;
   break;
  }
  if (($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $13 = -1;
   $14 = -1;
  } else {
   $13 = tempRet0;
   $14 = $6;
  }
 } while (0);
 tempRet0 = $13;
 STACKTOP = sp;
 return $14 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $5 = 0, $6 = 0, $9 = 0, $p$0 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below); else {
  $5 = HEAP32[$this + 12 >> 2] | 0;
  $6 = $this + ($5 << 3) + 16 | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this + 16 | 0, $info, $adjustedPtr, $path_below);
  if (($5 | 0) > 1) {
   $9 = $info + 54 | 0;
   $p$0 = $this + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0, $info, $adjustedPtr, $path_below);
    if (HEAP8[$9 >> 0] | 0) break;
    $p$0 = $p$0 + 8 | 0;
   } while ($p$0 >>> 0 < $6 >>> 0);
  }
 }
 return;
}

function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp, $__len, $__signd, $__flags) {
 $__fmtp = $__fmtp | 0;
 $__len = $__len | 0;
 $__signd = $__signd | 0;
 $__flags = $__flags | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$1$lcssa = 0, $$1$ph = 0, $10 = 0, $6 = 0;
 if (!($__flags & 2048)) $$0 = $__fmtp; else {
  HEAP8[$__fmtp >> 0] = 43;
  $$0 = $__fmtp + 1 | 0;
 }
 if (!($__flags & 512)) $$1$ph = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1$ph = $$0 + 1 | 0;
 }
 $$01 = $__len;
 $$1 = $$1$ph;
 while (1) {
  $6 = HEAP8[$$01 >> 0] | 0;
  if (!($6 << 24 >> 24)) {
   $$1$lcssa = $$1;
   break;
  }
  HEAP8[$$1 >> 0] = $6;
  $$01 = $$01 + 1 | 0;
  $$1 = $$1 + 1 | 0;
 }
 $10 = $__flags & 74;
 do if (($10 | 0) == 64) HEAP8[$$1$lcssa >> 0] = 111; else if (($10 | 0) == 8) if (!($__flags & 16384)) {
  HEAP8[$$1$lcssa >> 0] = 120;
  break;
 } else {
  HEAP8[$$1$lcssa >> 0] = 88;
  break;
 } else if ($__signd) {
  HEAP8[$$1$lcssa >> 0] = 100;
  break;
 } else {
  HEAP8[$$1$lcssa >> 0] = 117;
  break;
 } while (0);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $12 = 0, $18 = 0, $2 = 0, $3 = 0, $__p$0 = 0, $__p$0$ph = 0;
 $0 = $__first;
 $2 = $__last - $0 | 0;
 $3 = $2 >> 2;
 if ($3 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($3 >>> 0 < 2) {
  HEAP8[$this >> 0] = $2 >>> 1;
  $__p$0$ph = $this + 4 | 0;
 } else {
  $10 = $3 + 4 & -4;
  $12 = __Znwj($10 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $12;
  HEAP32[$this >> 2] = $10 | 1;
  HEAP32[$this + 4 >> 2] = $3;
  $__p$0$ph = $12;
 }
 $18 = ($__last - $0 | 0) >>> 2;
 $$0 = $__first;
 $__p$0 = $__p$0$ph;
 while (1) {
  if (($$0 | 0) == ($__last | 0)) break;
  HEAP32[$__p$0 >> 2] = HEAP32[$$0 >> 2];
  $$0 = $$0 + 4 | 0;
  $__p$0 = $__p$0 + 4 | 0;
 }
 HEAP32[$__p$0$ph + ($18 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $1 = 0, $15 = 0, $16 = 0, $21 = 0, $27 = 0, $28 = 0, $4 = 0, $8 = 0;
 if ($__n) {
  $1 = HEAP8[$this >> 0] | 0;
  if (!($1 & 1)) {
   $16 = 10;
   $8 = $1;
  } else {
   $4 = HEAP32[$this >> 2] | 0;
   $16 = ($4 & -2) + -1 | 0;
   $8 = $4 & 255;
  }
  if (!($8 & 1)) $15 = ($8 & 255) >>> 1; else $15 = HEAP32[$this + 4 >> 2] | 0;
  if (($16 - $15 | 0) >>> 0 < $__n >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $16, $__n - $16 + $15 | 0, $15, $15, 0, 0);
   $21 = HEAP8[$this >> 0] | 0;
  } else $21 = $8;
  if (!($21 & 1)) $27 = $this + 1 | 0; else $27 = HEAP32[$this + 8 >> 2] | 0;
  _memset($27 + $15 | 0, $__c | 0, $__n | 0) | 0;
  $28 = $15 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $28 << 1; else HEAP32[$this + 4 >> 2] = $28;
  HEAP8[$27 + $28 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $10 = 0, $14 = 0, $27 = 0, $3 = 0, $6 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $6 = 10;
  $9 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $6 = ($3 & -2) + -1 | 0;
  $9 = $3 & 255;
 }
 $10 = ($9 & 1) == 0;
 do if ($6 >>> 0 < $__n >>> 0) {
  if ($10) $27 = ($9 & 255) >>> 1; else $27 = HEAP32[$this + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $6, $__n - $6 | 0, $27, 0, $27, $__n, $__s);
 } else {
  if ($10) $14 = $this + 1 | 0; else $14 = HEAP32[$this + 8 >> 2] | 0;
  _memmove($14 | 0, $__s | 0, $__n | 0) | 0;
  HEAP8[$14 + $__n >> 0] = 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $__n << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $__n;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__111__stdoutbufIwE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__extbe = 0, $__extbuf = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = sp + 8 | 0;
 $__extbe = sp;
 $0 = $this + 36 | 0;
 $1 = $this + 40 | 0;
 $2 = $__extbuf + 8 | 0;
 $3 = $__extbuf;
 $4 = $this + 32 | 0;
 while (1) {
  $5 = HEAP32[$0 >> 2] | 0;
  $10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 31]($5, HEAP32[$1 >> 2] | 0, $__extbuf, $2, $__extbe) | 0;
  $13 = (HEAP32[$__extbe >> 2] | 0) - $3 | 0;
  if ((_fwrite($__extbuf | 0, 1, $13 | 0, HEAP32[$4 >> 2] | 0) | 0) != ($13 | 0)) {
   label = 5;
   break;
  }
  if (($10 | 0) == 2) {
   label = 5;
   break;
  } else if (($10 | 0) != 1) {
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) $$0 = ((_fflush(HEAP32[$4 >> 2] | 0) | 0) != 0) << 31 >> 31; else if ((label | 0) == 5) $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIcE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__extbe = 0, $__extbuf = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = sp + 8 | 0;
 $__extbe = sp;
 $0 = $this + 36 | 0;
 $1 = $this + 40 | 0;
 $2 = $__extbuf + 8 | 0;
 $3 = $__extbuf;
 $4 = $this + 32 | 0;
 while (1) {
  $5 = HEAP32[$0 >> 2] | 0;
  $10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 31]($5, HEAP32[$1 >> 2] | 0, $__extbuf, $2, $__extbe) | 0;
  $13 = (HEAP32[$__extbe >> 2] | 0) - $3 | 0;
  if ((_fwrite($__extbuf | 0, 1, $13 | 0, HEAP32[$4 >> 2] | 0) | 0) != ($13 | 0)) {
   label = 5;
   break;
  }
  if (($10 | 0) == 2) {
   label = 5;
   break;
  } else if (($10 | 0) != 1) {
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) $$0 = ((_fflush(HEAP32[$4 >> 2] | 0) | 0) != 0) << 31 >> 31; else if ((label | 0) == 5) $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $10 = 0, $14 = 0, $27 = 0, $3 = 0, $6 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $6 = 1;
  $9 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $6 = ($3 & -2) + -1 | 0;
  $9 = $3 & 255;
 }
 $10 = ($9 & 1) == 0;
 do if ($6 >>> 0 < $__n >>> 0) {
  if ($10) $27 = ($9 & 255) >>> 1; else $27 = HEAP32[$this + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this, $6, $__n - $6 | 0, $27, 0, $27, $__n, $__s);
 } else {
  if ($10) $14 = $this + 4 | 0; else $14 = HEAP32[$this + 8 >> 2] | 0;
  _wmemmove($14, $__s, $__n) | 0;
  HEAP32[$14 + ($__n << 2) >> 2] = 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $__n << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $__n;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $15 = 0, $2 = 0, $9 = 0, $__p$0 = 0, $__p$0$ph = 0;
 $0 = $__first;
 $2 = $__last - $0 | 0;
 if ($2 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($2 >>> 0 < 11) {
  HEAP8[$this >> 0] = $2 << 1;
  $__p$0$ph = $this + 1 | 0;
 } else {
  $9 = $2 + 16 & -16;
  $10 = __Znwj($9) | 0;
  HEAP32[$this + 8 >> 2] = $10;
  HEAP32[$this >> 2] = $9 | 1;
  HEAP32[$this + 4 >> 2] = $2;
  $__p$0$ph = $10;
 }
 $15 = $__last - $0 | 0;
 $$0 = $__first;
 $__p$0 = $__p$0$ph;
 while (1) {
  if (($$0 | 0) == ($__last | 0)) break;
  HEAP8[$__p$0 >> 0] = HEAP8[$$0 >> 0] | 0;
  $$0 = $$0 + 1 | 0;
  $__p$0 = $__p$0 + 1 | 0;
 }
 HEAP8[$__p$0$ph + $15 >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $14 = 0, $15 = 0, $24 = 0, $25 = 0, $3 = 0, $7 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $15 = 10;
  $7 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $15 = ($3 & -2) + -1 | 0;
  $7 = $3 & 255;
 }
 if (!($7 & 1)) $14 = ($7 & 255) >>> 1; else $14 = HEAP32[$this + 4 >> 2] | 0;
 if (($15 - $14 | 0) >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $15, $__n - $15 + $14 | 0, $14, $14, 0, $__n, $__s); else if ($__n) {
  if (!($7 & 1)) $24 = $this + 1 | 0; else $24 = HEAP32[$this + 8 >> 2] | 0;
  _memcpy($24 + $14 | 0, $__s | 0, $__n | 0) | 0;
  $25 = $14 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $25 << 1; else HEAP32[$this + 4 >> 2] = $25;
  HEAP8[$24 + $25 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 28 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $11 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 288 | 0, $__ct, $__err, 0) | 0) - $5 | 0;
 if (($11 | 0) < 288) HEAP32[$__m >> 2] = (($11 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $11 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 288 | 0, $__ct, $__err, 0) | 0) - $5 | 0;
 if (($11 | 0) < 288) HEAP32[$__m >> 2] = (($11 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 28 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$1 >> 2] >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $10 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $4, $4 + 168 | 0, $__ct, $__err, 0) | 0) - $4 | 0;
 if (($10 | 0) < 168) HEAP32[$__w >> 2] = (($10 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$1 >> 2] >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $10 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $4, $4 + 168 | 0, $__ct, $__err, 0) | 0) - $4 | 0;
 if (($10 | 0) < 168) HEAP32[$__w >> 2] = (($10 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($this, $__c, $__pos) {
 $this = $this | 0;
 $__c = $__c | 0;
 $__pos = $__pos | 0;
 var $$01$i = 0, $$lcssa = 0, $0 = 0, $10 = 0, $15 = 0, $17 = 0, $__ps$0$i = 0, label = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $10 = ($0 & 255) >>> 1;
  $15 = $this + 1 | 0;
 } else {
  $10 = HEAP32[$this + 4 >> 2] | 0;
  $15 = HEAP32[$this + 8 >> 2] | 0;
 }
 do if (!$10) $$01$i = -1; else {
  $__ps$0$i = $15 + ($10 >>> 0 > $__pos >>> 0 ? $__pos + 1 | 0 : $10) | 0;
  while (1) {
   if (($__ps$0$i | 0) == ($15 | 0)) {
    label = 9;
    break;
   }
   $17 = $__ps$0$i + -1 | 0;
   if ((HEAP8[$17 >> 0] | 0) == $__c << 24 >> 24) {
    $$lcssa = $17;
    label = 8;
    break;
   } else $__ps$0$i = $17;
  }
  if ((label | 0) == 8) {
   $$01$i = $$lcssa - $15 | 0;
   break;
  } else if ((label | 0) == 9) {
   $$01$i = -1;
   break;
  }
 } while (0);
 return $$01$i | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, 49264, 49296 | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, 49112, 49120 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $14 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this >> 2] = 46880;
 HEAP32[$this + 32 >> 2] = $__fp;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 50280) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
  ___resumeException($14 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  HEAP32[$this + 36 >> 2] = $3;
  HEAP32[$this + 40 >> 2] = $__st;
  HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $14 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 47136;
 HEAP32[$this + 32 >> 2] = $__fp;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 50272) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($14 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  HEAP32[$this + 36 >> 2] = $3;
  HEAP32[$this + 40 >> 2] = $__st;
  HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
  STACKTOP = sp;
  return;
 }
}

function ___remdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 ___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, $rem) | 0;
 $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
 $10$1 = tempRet0;
 STACKTOP = __stackBase__;
 return (tempRet0 = $10$1, $10$0) | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($this, $__pos1, $__n1, $__s, $__n2) {
 $this = $this | 0;
 $__pos1 = $__pos1 | 0;
 $__n1 = $__n1 | 0;
 $__s = $__s | 0;
 $__n2 = $__n2 | 0;
 var $0 = 0, $10 = 0, $12 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $7 = 0, $__r$0 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$this + 4 >> 2] | 0;
 if (($__n2 | 0) == -1 | $7 >>> 0 < $__pos1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 $10 = $7 - $__pos1 | 0;
 $12 = $10 >>> 0 < $__n1 >>> 0 ? $10 : $__n1;
 if ($2) $17 = $this + 1 | 0; else $17 = HEAP32[$this + 8 >> 2] | 0;
 $18 = $12 >>> 0 > $__n2 >>> 0;
 $20 = _memcmp($17 + $__pos1 | 0, $__s, $18 ? $__n2 : $12) | 0;
 if (!$20) if ($12 >>> 0 < $__n2 >>> 0) $__r$0 = -1; else return $18 & 1 | 0; else $__r$0 = $20;
 return $__r$0 | 0;
}

function _scalbn($x, $n) {
 $x = +$x;
 $n = $n | 0;
 var $$0 = 0, $1 = 0.0, $12 = 0, $15 = 0, $16 = 0, $2 = 0, $5 = 0, $8 = 0.0, $9 = 0, $y$0 = 0.0;
 if (($n | 0) > 1023) {
  $1 = $x * 8988465674311579538646525.0e283;
  $2 = $n + -1023 | 0;
  if (($2 | 0) > 1023) {
   $5 = $n + -2046 | 0;
   $$0 = ($5 | 0) > 1023 ? 1023 : $5;
   $y$0 = $1 * 8988465674311579538646525.0e283;
  } else {
   $$0 = $2;
   $y$0 = $1;
  }
 } else if (($n | 0) < -1022) {
  $8 = $x * 2.2250738585072014e-308;
  $9 = $n + 1022 | 0;
  if (($9 | 0) < -1022) {
   $12 = $n + 2044 | 0;
   $$0 = ($12 | 0) < -1022 ? -1022 : $12;
   $y$0 = $8 * 2.2250738585072014e-308;
  } else {
   $$0 = $9;
   $y$0 = $8;
  }
 } else {
  $$0 = $n;
  $y$0 = $x;
 }
 $15 = _bitshift64Shl($$0 + 1023 | 0, 0, 52) | 0;
 $16 = tempRet0;
 HEAP32[tempDoublePtr >> 2] = $15;
 HEAP32[tempDoublePtr + 4 >> 2] = $16;
 return +($y$0 * +HEAPF64[tempDoublePtr >> 3]);
}

function __Z23jsonnet_static_analysisP3AST($ast) {
 $ast = $ast | 0;
 var $0 = 0, $1 = 0, $10 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 HEAP32[$1 >> 2] = $4;
 __THREW__ = 0;
 invoke_viiii(16, $0 | 0, $ast | 0, 0, $1 | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $10 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($1, HEAP32[$4 >> 2] | 0);
  ___resumeException($10 | 0);
 } else {
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($0, HEAP32[$0 + 4 >> 2] | 0);
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($1, HEAP32[$4 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $6 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $3 = $__v + 4 | 0;
 $6 = (HEAP32[$1 >> 2] | 0) - $0 | 0;
 $10 = (HEAP32[$3 >> 2] | 0) + (0 - ($6 >> 2) << 2) | 0;
 HEAP32[$3 >> 2] = $10;
 _memcpy($10 | 0, $0 | 0, $6 | 0) | 0;
 $11 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = HEAP32[$3 >> 2];
 HEAP32[$3 >> 2] = $11;
 $13 = $__v + 8 | 0;
 $14 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$13 >> 2] = $14;
 $16 = $this + 8 | 0;
 $17 = $__v + 12 | 0;
 $18 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$17 >> 2] = $18;
 HEAP32[$__v >> 2] = HEAP32[$3 >> 2];
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phi2Z2D = 0, $$pre$phiZ2D = 0, $14 = 0, $15 = 0, $5 = 0, $6 = 0;
 if (!(HEAP32[$this + 64 >> 2] | 0)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $5 = $this + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if ((HEAP32[$this + 8 >> 2] | 0) >>> 0 >= $6 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (($__c | 0) == -1) {
  HEAP32[$5 >> 2] = $6 + -1;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!(HEAP32[$this + 88 >> 2] & 16)) {
  $14 = $__c & 255;
  $15 = $6 + -1 | 0;
  if ($14 << 24 >> 24 == (HEAP8[$15 >> 0] | 0)) {
   $$pre$phi2Z2D = $14;
   $$pre$phiZ2D = $15;
  } else {
   $$0 = -1;
   return $$0 | 0;
  }
 } else {
  $$pre$phi2Z2D = $__c & 255;
  $$pre$phiZ2D = $6 + -1 | 0;
 }
 HEAP32[$5 >> 2] = $$pre$phiZ2D;
 HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi2Z2D;
 $$0 = $__c;
 return $$0 | 0;
}

function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$02 = 0, $$02$lcssa = 0, $2 = 0, $3 = 0, label = 0;
 $$01 = $__lo2;
 $$02 = $__lo1;
 while (1) {
  if (($$01 | 0) == ($__hi2 | 0)) {
   $$02$lcssa = $$02;
   label = 7;
   break;
  }
  if (($$02 | 0) == ($__hi1 | 0)) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $2 = HEAP8[$$02 >> 0] | 0;
  $3 = HEAP8[$$01 >> 0] | 0;
  if ($2 << 24 >> 24 < $3 << 24 >> 24) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  if ($3 << 24 >> 24 < $2 << 24 >> 24) {
   $$0$ph = 1;
   label = 8;
   break;
  }
  $$01 = $$01 + 1 | 0;
  $$02 = $$02 + 1 | 0;
 }
 if ((label | 0) == 7) $$0 = ($$02$lcssa | 0) != ($__hi1 | 0) & 1; else if ((label | 0) == 8) $$0 = $$0$ph;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function _wcrtomb($s, $wc, $st) {
 $s = $s | 0;
 $wc = $wc | 0;
 $st = $st | 0;
 var $$0 = 0;
 if (!$s) {
  $$0 = 1;
  return $$0 | 0;
 }
 if ($wc >>> 0 < 128) {
  HEAP8[$s >> 0] = $wc;
  $$0 = 1;
  return $$0 | 0;
 }
 if ($wc >>> 0 < 2048) {
  HEAP8[$s >> 0] = $wc >>> 6 | 192;
  HEAP8[$s + 1 >> 0] = $wc & 63 | 128;
  $$0 = 2;
  return $$0 | 0;
 }
 if ($wc >>> 0 < 55296 | ($wc & -8192 | 0) == 57344) {
  HEAP8[$s >> 0] = $wc >>> 12 | 224;
  HEAP8[$s + 1 >> 0] = $wc >>> 6 & 63 | 128;
  HEAP8[$s + 2 >> 0] = $wc & 63 | 128;
  $$0 = 3;
  return $$0 | 0;
 }
 if (($wc + -65536 | 0) >>> 0 < 1048576) {
  HEAP8[$s >> 0] = $wc >>> 18 | 240;
  HEAP8[$s + 1 >> 0] = $wc >>> 12 & 63 | 128;
  HEAP8[$s + 2 >> 0] = $wc >>> 6 & 63 | 128;
  HEAP8[$s + 3 >> 0] = $wc & 63 | 128;
  $$0 = 4;
  return $$0 | 0;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  $$0 = -1;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, $id) {
 $this = $this | 0;
 $f = $f | 0;
 $id = $id | 0;
 var $0 = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $20 = 0, $3 = 0;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = $this + 8 | 0;
 $3 = HEAP32[$0 >> 2] | 0;
 do if ((HEAP32[$this + 12 >> 2] | 0) - $3 >> 2 >>> 0 > $id >>> 0) $16 = $3; else {
  __THREW__ = 0;
  invoke_vii(107, $0 | 0, $id + 1 | 0);
  $10 = __THREW__;
  __THREW__ = 0;
  if (!($10 & 1)) {
   $16 = HEAP32[$0 >> 2] | 0;
   break;
  }
  $12 = ___cxa_find_matching_catch() | 0;
  if ($f) __ZNSt3__114__shared_count16__release_sharedEv($f) | 0;
  ___resumeException($12 | 0);
 } while (0);
 $17 = HEAP32[$16 + ($id << 2) >> 2] | 0;
 if (!$17) $20 = $16; else {
  __ZNSt3__114__shared_count16__release_sharedEv($17) | 0;
  $20 = HEAP32[$0 >> 2] | 0;
 }
 HEAP32[$20 + ($id << 2) >> 2] = $f;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$02 = 0, $$02$lcssa = 0, $2 = 0, $3 = 0, label = 0;
 $$01 = $__lo2;
 $$02 = $__lo1;
 while (1) {
  if (($$01 | 0) == ($__hi2 | 0)) {
   $$02$lcssa = $$02;
   label = 7;
   break;
  }
  if (($$02 | 0) == ($__hi1 | 0)) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $2 = HEAP32[$$02 >> 2] | 0;
  $3 = HEAP32[$$01 >> 2] | 0;
  if (($2 | 0) < ($3 | 0)) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  if (($3 | 0) < ($2 | 0)) {
   $$0$ph = 1;
   label = 8;
   break;
  }
  $$01 = $$01 + 4 | 0;
  $$02 = $$02 + 4 | 0;
 }
 if ((label | 0) == 7) $$0 = ($$02$lcssa | 0) != ($__hi1 | 0) & 1; else if ((label | 0) == 8) $$0 = $$0$ph;
 return $$0 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $__t$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) {
  if (($2 | 0) < 69) $__t$0 = $2 + 2e3 | 0; else $__t$0 = ($2 + -69 | 0) >>> 0 < 31 ? $2 + 1900 | 0 : $2;
  HEAP32[$__y >> 2] = $__t$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $__t$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) {
  if (($2 | 0) < 69) $__t$0 = $2 + 2e3 | 0; else $__t$0 = ($2 + -69 | 0) >>> 0 < 31 ? $2 + 1900 | 0 : $2;
  HEAP32[$__y >> 2] = $__t$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __ZN15BuiltinFunctionD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35952;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 56 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 35936;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($this);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZdlPv($this);
 return;
}

function __ZN8FunctionD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 37808;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 52 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 35936;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($this);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZdlPv($this);
 return;
}

function __ZN5ArrayD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 38176;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 52 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 35936;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($this);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZdlPv($this);
 return;
}

function __ZN5ApplyD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 37344;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 56 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 35936;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($this);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $11 = 0, $3 = 0, $__i$0 = 0, $__i$0$lcssa = 0, $storemerge = 0;
 $0 = $this + 12 | 0;
 $1 = $this + 16 | 0;
 $$0 = $__s;
 $__i$0 = 0;
 while (1) {
  if (($__i$0 | 0) >= ($__n | 0)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0 >> 2] | 0;
  if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $3 + 1;
   $storemerge = HEAP8[$3 >> 0] | 0;
  } else {
   $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 40 >> 2] & 127]($this) | 0;
   if (($11 | 0) == -1) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   $storemerge = $11 & 255;
  }
  HEAP8[$$0 >> 0] = $storemerge;
  $$0 = $$0 + 1 | 0;
  $__i$0 = $__i$0 + 1 | 0;
 }
 return $__i$0$lcssa | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $11 = 0, $3 = 0, $__i$0 = 0, $__i$0$lcssa = 0, $storemerge = 0;
 $0 = $this + 12 | 0;
 $1 = $this + 16 | 0;
 $$0 = $__s;
 $__i$0 = 0;
 while (1) {
  if (($__i$0 | 0) >= ($__n | 0)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0 >> 2] | 0;
  if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $3 + 4;
   $storemerge = HEAP32[$3 >> 2] | 0;
  } else {
   $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 40 >> 2] & 127]($this) | 0;
   if (($11 | 0) == -1) {
    $__i$0$lcssa = $__i$0;
    break;
   } else $storemerge = $11;
  }
  HEAP32[$$0 >> 2] = $storemerge;
  $$0 = $$0 + 4 | 0;
  $__i$0 = $__i$0 + 1 | 0;
 }
 return $__i$0$lcssa | 0;
}

function __ZSt11__terminatePFvvE($func) {
 $func = $func | 0;
 var $0 = 0, $10 = 0, $12 = 0, $2 = 0, $4 = 0, $6 = 0, $8 = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 __THREW__ = 0;
 invoke_v($func | 0);
 $0 = __THREW__;
 __THREW__ = 0;
 if (!($0 & 1)) {
  __THREW__ = 0;
  invoke_vii(70, 43376, sp | 0);
  $2 = __THREW__;
  __THREW__ = 0;
  if (!($2 & 1)) {}
 }
 $4 = ___cxa_find_matching_catch(0) | 0;
 ___cxa_begin_catch($4 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(70, 43416, $vararg_buffer1 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if (!($6 & 1)) {}
 $8 = ___cxa_find_matching_catch(0) | 0;
 __THREW__ = 0;
 invoke_v(2);
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $12 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($12);
 } else ___clang_call_terminate($8);
}

function _frexp($x, $e) {
 $x = +$x;
 $e = $e | 0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $2 = 0, $4 = 0, $7 = 0.0, $storemerge = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $2 = _bitshift64Lshr($0 | 0, $1 | 0, 52) | 0;
 $4 = $2 & 2047;
 if (!$4) {
  if ($x != 0.0) {
   $7 = +_frexp($x * 18446744073709551616.0, $e);
   $$01 = $7;
   $storemerge = (HEAP32[$e >> 2] | 0) + -64 | 0;
  } else {
   $$01 = $x;
   $storemerge = 0;
  }
  HEAP32[$e >> 2] = $storemerge;
  $$0 = $$01;
  return +$$0;
 } else if (($4 | 0) == 2047) {
  $$0 = $x;
  return +$$0;
 } else {
  HEAP32[$e >> 2] = $4 + -1022;
  HEAP32[tempDoublePtr >> 2] = $0;
  HEAP32[tempDoublePtr + 4 >> 2] = $1 & -2146435073 | 1071644672;
  $$0 = +HEAPF64[tempDoublePtr >> 3];
  return +$$0;
 }
 return +(0.0);
}

function __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this >> 2] = 46992;
 HEAP32[$this + 32 >> 2] = $__fp;
 HEAP32[$this + 40 >> 2] = $__st;
 HEAP32[$this + 48 >> 2] = -1;
 HEAP8[$this + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 __THREW__ = 0;
 invoke_vii(4, $this | 0, $0 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $8 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
  ___resumeException($8 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 47248;
 HEAP32[$this + 32 >> 2] = $__fp;
 HEAP32[$this + 40 >> 2] = $__st;
 HEAP32[$this + 48 >> 2] = -1;
 HEAP8[$this + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 __THREW__ = 0;
 invoke_vii(6, $this | 0, $0 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $8 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($8 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 12 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 12 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 31 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 3) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 366 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 31 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 3) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 366 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZN15BuiltinFunctionD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35952;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 56 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 35936;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 13 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2 + -1; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 13 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2 + -1; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 1) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 7 & ($3 & 4 | 0) == 0) HEAP32[$__w >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__s, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 61 & ($3 & 4 | 0) == 0) HEAP32[$__s >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 60 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 1) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 7 & ($3 & 4 | 0) == 0) HEAP32[$__w >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__s, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 61 & ($3 & 4 | 0) == 0) HEAP32[$__s >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 60 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZN8FunctionD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 37808;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 52 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 35936;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 24 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 24 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZN5ArrayD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 38176;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 52 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 35936;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 return;
}

function __ZN5ApplyD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 37344;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 56 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 35936;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 return;
}

function _strtold_l($s, $p, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $loc = $loc | 0;
 var $0 = 0, $1 = 0, $12 = 0, $16 = 0, $4 = 0.0, $f$i$i = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i$i = sp;
 dest = $f$i$i + 0 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $0 = $f$i$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 $1 = $f$i$i + 8 | 0;
 HEAP32[$1 >> 2] = -1;
 HEAP32[$f$i$i + 44 >> 2] = $s;
 HEAP32[$f$i$i + 76 >> 2] = -1;
 ___shlim($f$i$i, 0);
 $4 = +___floatscan($f$i$i, 2, 1);
 $12 = (HEAP32[$0 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) + (HEAP32[$f$i$i + 108 >> 2] | 0) | 0;
 if (!$p) {
  STACKTOP = sp;
  return +$4;
 }
 if (!$12) $16 = $s; else $16 = $s + $12 | 0;
 HEAP32[$p >> 2] = $16;
 STACKTOP = sp;
 return +$4;
}

function _realloc($oldmem, $bytes) {
 $oldmem = $oldmem | 0;
 $bytes = $bytes | 0;
 var $12 = 0, $15 = 0, $20 = 0, $8 = 0, $9 = 0, $mem$0 = 0;
 if (!$oldmem) {
  $mem$0 = _malloc($bytes) | 0;
  return $mem$0 | 0;
 }
 if ($bytes >>> 0 > 4294967231) {
  HEAP32[(___errno_location() | 0) >> 2] = 12;
  $mem$0 = 0;
  return $mem$0 | 0;
 }
 if ($bytes >>> 0 < 11) $8 = 16; else $8 = $bytes + 11 & -8;
 $9 = _try_realloc_chunk($oldmem + -8 | 0, $8) | 0;
 if ($9) {
  $mem$0 = $9 + 8 | 0;
  return $mem$0 | 0;
 }
 $12 = _malloc($bytes) | 0;
 if (!$12) {
  $mem$0 = 0;
  return $mem$0 | 0;
 }
 $15 = HEAP32[$oldmem + -4 >> 2] | 0;
 $20 = ($15 & -8) - (($15 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy($12 | 0, $oldmem | 0, ($20 >>> 0 < $bytes >>> 0 ? $20 : $bytes) | 0) | 0;
 _free($oldmem);
 $mem$0 = $12;
 return $mem$0 | 0;
}

function __ZN5LocalD0Ev($this) {
 $this = $this | 0;
 var $14 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$this >> 2] = 36008;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this + 48 | 0, HEAP32[$this + 52 >> 2] | 0);
 HEAP32[$this >> 2] = 35936;
 $4 = HEAP32[$this + 36 >> 2] | 0;
 if (!$4) {
  $14 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  __ZdlPv($this);
  return;
 }
 $7 = $this + 40 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (($8 | 0) != ($4 | 0)) HEAP32[$7 >> 2] = $8 + (~(($8 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 $14 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = +_strtold_l($__a, $__p2, __ZNSt3__16__clocEv() | 0);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = +_strtold_l($__a, $__p2, __ZNSt3__16__clocEv() | 0);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNSt3__18ios_base5clearEj($this, $state) {
 $this = $this | 0;
 $state = $state | 0;
 var $0 = 0, $12 = 0, $13 = 0, $17 = 0, $19 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $3 = (HEAP32[$this + 24 >> 2] | 0) == 0;
 HEAP32[$this + 16 >> 2] = $3 & 1 | $state;
 if (!(($3 & 1 | $state) & HEAP32[$this + 20 >> 2])) {
  STACKTOP = sp;
  return;
 }
 $12 = ___cxa_allocate_exception(16) | 0;
 __ZNSt3__117iostream_categoryEv() | 0;
 $13 = $0;
 HEAP32[$13 >> 2] = 1;
 HEAP32[$13 + 4 >> 2] = 47704;
 __THREW__ = 0;
 invoke_viii(15, $12 | 0, 47760, $0 | 0);
 $17 = __THREW__;
 __THREW__ = 0;
 if ($17 & 1) {
  $19 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($12 | 0);
  ___resumeException($19 | 0);
 } else ___cxa_throw($12 | 0, 47808, 109);
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $3 = 0, $6 = 0, $__i$0 = 0, $__i$0$lcssa = 0;
 $0 = $this + 24 | 0;
 $1 = $this + 28 | 0;
 $$0 = $__s;
 $__i$0 = 0;
 while (1) {
  if (($__i$0 | 0) >= ($__n | 0)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0 >> 2] | 0;
  if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   $6 = HEAP32[$$0 >> 2] | 0;
   HEAP32[$0 >> 2] = $3 + 4;
   HEAP32[$3 >> 2] = $6;
  } else if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAP32[$$0 >> 2] | 0) | 0) == -1) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $$0 = $$0 + 4 | 0;
  $__i$0 = $__i$0 + 1 | 0;
 }
 return $__i$0$lcssa | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $3 = 0, $6 = 0, $__i$0 = 0, $__i$0$lcssa = 0;
 $0 = $this + 24 | 0;
 $1 = $this + 28 | 0;
 $$0 = $__s;
 $__i$0 = 0;
 while (1) {
  if (($__i$0 | 0) >= ($__n | 0)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0 >> 2] | 0;
  if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   $6 = HEAP8[$$0 >> 0] | 0;
   HEAP32[$0 >> 2] = $3 + 1;
   HEAP8[$3 >> 0] = $6;
  } else if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAPU8[$$0 >> 0] | 0) | 0) == -1) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $$0 = $$0 + 1 | 0;
  $__i$0 = $__i$0 + 1 | 0;
 }
 return $__i$0$lcssa | 0;
}

function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = +_strtold_l($__a, $__p2, __ZNSt3__16__clocEv() | 0);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) HEAP32[$__err >> 2] = 4;
  $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function ___divdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $7$0 = 0, $7$1 = 0, $10$0 = 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 $7$0 = $2$0 ^ $1$0;
 $7$1 = $2$1 ^ $1$1;
 $10$0 = _i64Subtract((___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, 0) | 0) ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
 return $10$0 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN5LocalD2Ev($this) {
 $this = $this | 0;
 var $14 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$this >> 2] = 36008;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this + 48 | 0, HEAP32[$this + 52 >> 2] | 0);
 HEAP32[$this >> 2] = 35936;
 $4 = HEAP32[$this + 36 >> 2] | 0;
 if (!$4) {
  $14 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  return;
 }
 $7 = $this + 40 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (($8 | 0) != ($4 | 0)) HEAP32[$7 >> 2] = $8 + (~(($8 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 $14 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 31]($8, $info, $dst_ptr, $current_ptr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
 return;
}

function _strtod($s, $p) {
 $s = $s | 0;
 $p = $p | 0;
 var $0 = 0, $1 = 0, $12 = 0, $16 = 0, $4 = 0.0, $f$i = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i = sp;
 dest = $f$i + 0 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $0 = $f$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 $1 = $f$i + 8 | 0;
 HEAP32[$1 >> 2] = -1;
 HEAP32[$f$i + 44 >> 2] = $s;
 HEAP32[$f$i + 76 >> 2] = -1;
 ___shlim($f$i, 0);
 $4 = +___floatscan($f$i, 1, 1);
 $12 = (HEAP32[$0 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) + (HEAP32[$f$i + 108 >> 2] | 0) | 0;
 if (!$p) {
  STACKTOP = sp;
  return +$4;
 }
 if (!$12) $16 = $s; else $16 = $s + $12 | 0;
 HEAP32[$p >> 2] = $16;
 STACKTOP = sp;
 return +$4;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $0 = 0, $1 = 0, $6 = 0, $9 = 0;
 $0 = $info + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  HEAP32[$0 >> 2] = $adjustedPtr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
 } else {
  if (($1 | 0) != ($adjustedPtr | 0)) {
   $9 = $info + 36 | 0;
   HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 1;
   HEAP32[$info + 24 >> 2] = 2;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  $6 = $info + 24 | 0;
  if ((HEAP32[$6 >> 2] | 0) == 2) HEAP32[$6 >> 2] = $path_below;
 } while (0);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) HEAP32[$__y >> 2] = $2 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) HEAP32[$__y >> 2] = $2 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function _memcmp($vl, $vr, $n) {
 $vl = $vl | 0;
 $vr = $vr | 0;
 $n = $n | 0;
 var $$03 = 0, $$lcssa = 0, $$lcssa13 = 0, $1 = 0, $11 = 0, $2 = 0, $l$04 = 0, $r$05 = 0, label = 0;
 if (!$n) {
  $11 = 0;
  return $11 | 0;
 }
 $$03 = $n;
 $l$04 = $vl;
 $r$05 = $vr;
 while (1) {
  $1 = HEAP8[$l$04 >> 0] | 0;
  $2 = HEAP8[$r$05 >> 0] | 0;
  if ($1 << 24 >> 24 != $2 << 24 >> 24) {
   $$lcssa = $1;
   $$lcssa13 = $2;
   label = 5;
   break;
  }
  $$03 = $$03 + -1 | 0;
  if (!$$03) {
   label = 6;
   break;
  } else {
   $l$04 = $l$04 + 1 | 0;
   $r$05 = $r$05 + 1 | 0;
  }
 }
 if ((label | 0) == 5) {
  $11 = ($$lcssa & 255) - ($$lcssa13 & 255) | 0;
  return $11 | 0;
 } else if ((label | 0) == 6) {
  $11 = 0;
  return $11 | 0;
 }
 return 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($this, $__str, $__pos, $__n, $__a) {
 $this = $this | 0;
 $__str = $__str | 0;
 $__pos = $__pos | 0;
 $__n = $__n | 0;
 $__a = $__a | 0;
 var $0 = 0, $13 = 0, $14 = 0, $2 = 0, $7 = 0;
 $0 = HEAP8[$__str >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$__str + 4 >> 2] | 0;
 if ($7 >>> 0 < $__pos >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 if ($2) $13 = $__str + 1 | 0; else $13 = HEAP32[$__str + 8 >> 2] | 0;
 $14 = $7 - $__pos | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, $13 + $__pos | 0, $14 >>> 0 < $__n >>> 0 ? $14 : $__n);
 return;
}

function _vasprintf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $2 = 0, $5 = 0, $9 = 0, $ap2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap2 = sp;
 $0 = _malloc(240) | 0;
 do if (!$0) $$0 = -1; else {
  HEAP32[$ap2 >> 2] = HEAP32[$ap >> 2];
  $2 = _vsnprintf($0, 240, $fmt, $ap2) | 0;
  if ($2 >>> 0 < 240) {
   $5 = _realloc($0, $2 + 1 | 0) | 0;
   HEAP32[$s >> 2] = ($5 | 0) != 0 ? $5 : $0;
   $$0 = $2;
   break;
  }
  _free($0);
  if (($2 | 0) < 0) $$0 = -1; else {
   $9 = $2 + 1 | 0;
   $10 = _malloc($9) | 0;
   HEAP32[$s >> 2] = $10;
   if (!$10) $$0 = -1; else $$0 = _vsnprintf($10, $9, $fmt, $ap) | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE($obj) {
 $obj = $obj | 0;
 var $$lcssa = 0, $1 = 0, $10 = 0, $5 = 0, $obj$tr3 = 0, label = 0;
 if (!$obj) return 1;
 $obj$tr3 = $obj;
 do {
  $1 = ___dynamic_cast($obj$tr3, 38808, 39144, 0) | 0;
  if ($1) {
   $$lcssa = $1;
   label = 4;
   break;
  }
  $10 = ___dynamic_cast($obj$tr3, 38808, 39200, 0) | 0;
  if (!$10) break;
  $obj$tr3 = HEAP32[$10 + 8 >> 2] | 0;
 } while (($obj$tr3 | 0) != 0);
 if ((label | 0) == 4) {
  $5 = __ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE(HEAP32[$$lcssa + 8 >> 2] | 0) | 0;
  return (__ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE(HEAP32[$$lcssa + 12 >> 2] | 0) | 0) + $5 | 0;
 }
 return 1;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $4 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below); else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 20 >> 2] & 31]($4, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
 }
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this, $__cap, $__start, $__a) {
 $this = $this | 0;
 $__cap = $__cap | 0;
 $__start = $__start | 0;
 $__a = $__a | 0;
 var $0 = 0, $3 = 0, $8 = 0, $9 = 0;
 $0 = $this + 12 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = $__a;
 do if (!$__cap) $8 = 0; else {
  $3 = $__a + 112 | 0;
  if ($__cap >>> 0 < 29 & (HEAP8[$3 >> 0] | 0) == 0) {
   HEAP8[$3 >> 0] = 1;
   $8 = $__a;
   break;
  } else {
   $8 = __Znwj($__cap << 2) | 0;
   break;
  }
 } while (0);
 HEAP32[$this >> 2] = $8;
 $9 = $8 + ($__start << 2) | 0;
 HEAP32[$this + 8 >> 2] = $9;
 HEAP32[$this + 4 >> 2] = $9;
 HEAP32[$0 >> 2] = $8 + ($__cap << 2);
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 24 >> 2] & 15]($8, $info, $current_ptr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
 return;
}

function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb, $__ne, $__iob) {
 $__nb = $__nb | 0;
 $__ne = $__ne | 0;
 $__iob = $__iob | 0;
 var $$0 = 0, $11 = 0, $2 = 0, $3 = 0, label = 0;
 $2 = HEAP32[$__iob + 4 >> 2] & 176;
 do if (($2 | 0) == 16) {
  $3 = HEAP8[$__nb >> 0] | 0;
  if ($3 << 24 >> 24 == 43 | $3 << 24 >> 24 == 45) {
   $$0 = $__nb + 1 | 0;
   break;
  }
  if (($__ne - $__nb | 0) > 1 & $3 << 24 >> 24 == 48) {
   $11 = HEAP8[$__nb + 1 >> 0] | 0;
   if ($11 << 24 >> 24 == 88 | $11 << 24 >> 24 == 120) $$0 = $__nb + 2 | 0; else label = 7;
  } else label = 7;
 } else if (($2 | 0) == 32) $$0 = $__ne; else label = 7; while (0);
 if ((label | 0) == 7) $$0 = $__nb;
 return $$0 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $3 = 0, $9 = 0;
 $0 = $this + 44 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = HEAP32[$this + 24 >> 2] | 0;
 if ($1 >>> 0 < $3 >>> 0) {
  HEAP32[$0 >> 2] = $3;
  $12 = $3;
 } else $12 = $1;
 if (!(HEAP32[$this + 48 >> 2] & 8)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $9 = $this + 16 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $14 = HEAP32[$this + 12 >> 2] | 0;
 if ($10 >>> 0 < $12 >>> 0) {
  HEAP32[$9 >> 2] = $12;
  $16 = $12;
 } else $16 = $10;
 if ($14 >>> 0 >= $16 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 $$0 = HEAPU8[$14 >> 0] | 0;
 return $$0 | 0;
}

function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this, $__nb, $__ne, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__nb = $__nb | 0;
 $__ne = $__ne | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $0 = 0, $1 = 0, $fmt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $fmt = sp;
 HEAP8[$fmt >> 0] = 37;
 $0 = $fmt + 1 | 0;
 HEAP8[$0 >> 0] = $__fmt;
 $1 = $fmt + 2 | 0;
 HEAP8[$1 >> 0] = $__mod;
 HEAP8[$fmt + 3 >> 0] = 0;
 if ($__mod << 24 >> 24) {
  HEAP8[$0 >> 0] = $__mod;
  HEAP8[$1 >> 0] = $__fmt;
 }
 HEAP32[$__ne >> 2] = $__nb + (_strftime_l($__nb | 0, (HEAP32[$__ne >> 2] | 0) - $__nb | 0, $fmt | 0, $__tm | 0, HEAP32[$this >> 2] | 0) | 0);
 STACKTOP = sp;
 return;
}

function _strtoll($s, $p, $base) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 var $0 = 0, $4 = 0, $6 = 0, $7 = 0, $f$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i = sp;
 HEAP32[$f$i >> 2] = 0;
 $0 = $f$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 HEAP32[$f$i + 44 >> 2] = $s;
 $4 = $f$i + 8 | 0;
 HEAP32[$4 >> 2] = ($s | 0) < 0 ? -1 : $s + 2147483647 | 0;
 HEAP32[$f$i + 76 >> 2] = -1;
 ___shlim($f$i, 0);
 $6 = ___intscan($f$i, $base, 1, 0, -2147483648) | 0;
 $7 = tempRet0;
 if (!$p) {
  tempRet0 = $7;
  STACKTOP = sp;
  return $6 | 0;
 }
 HEAP32[$p >> 2] = $s + ((HEAP32[$0 >> 2] | 0) + (HEAP32[$f$i + 108 >> 2] | 0) - (HEAP32[$4 >> 2] | 0));
 tempRet0 = $7;
 STACKTOP = sp;
 return $6 | 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $4 = 0, $6 = 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP8[$this + 128 >> 0] = 0;
 do if ($__n) {
  __THREW__ = 0;
  invoke_vii(108, $this | 0, $__n | 0);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this);
   ___resumeException($6 | 0);
  } else {
   __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n);
   break;
  }
 } while (0);
 return;
}

function _strtoull($s, $p, $base) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 var $0 = 0, $4 = 0, $6 = 0, $7 = 0, $f$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i = sp;
 HEAP32[$f$i >> 2] = 0;
 $0 = $f$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 HEAP32[$f$i + 44 >> 2] = $s;
 $4 = $f$i + 8 | 0;
 HEAP32[$4 >> 2] = ($s | 0) < 0 ? -1 : $s + 2147483647 | 0;
 HEAP32[$f$i + 76 >> 2] = -1;
 ___shlim($f$i, 0);
 $6 = ___intscan($f$i, $base, 1, -1, -1) | 0;
 $7 = tempRet0;
 if (!$p) {
  tempRet0 = $7;
  STACKTOP = sp;
  return $6 | 0;
 }
 HEAP32[$p >> 2] = $s + ((HEAP32[$0 >> 2] | 0) + (HEAP32[$f$i + 108 >> 2] | 0) - (HEAP32[$4 >> 2] | 0));
 tempRet0 = $7;
 STACKTOP = sp;
 return $6 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($this, $__s, $__sz, $__reserve) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 $__reserve = $__reserve | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__reserve >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__reserve >>> 0 < 11) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__reserve + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy($__p$0 | 0, $__s | 0, $__sz | 0) | 0;
 HEAP8[$__p$0 + $__sz >> 0] = 0;
 return;
}

function ___toread($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $15 = 0, $2 = 0, $21 = 0, $6 = 0, $8 = 0;
 $0 = $f + 74 | 0;
 $2 = HEAP8[$0 >> 0] | 0;
 HEAP8[$0 >> 0] = $2 + 255 | $2;
 $6 = $f + 20 | 0;
 $8 = $f + 44 | 0;
 if ((HEAP32[$6 >> 2] | 0) >>> 0 > (HEAP32[$8 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, 0, 0) | 0;
 HEAP32[$f + 16 >> 2] = 0;
 HEAP32[$f + 28 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 $15 = HEAP32[$f >> 2] | 0;
 if (!($15 & 20)) {
  $21 = HEAP32[$8 >> 2] | 0;
  HEAP32[$f + 8 >> 2] = $21;
  HEAP32[$f + 4 >> 2] = $21;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!($15 & 4)) {
  $$0 = -1;
  return $$0 | 0;
 }
 HEAP32[$f >> 2] = $15 | 32;
 $$0 = -1;
 return $$0 | 0;
}

function __ZN13LiteralStringD0Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 35888;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 35936;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  __ZdlPv($this);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZdlPv($this);
 return;
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((num | 0) >= 4096) return _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
 ret = dest | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if (!num) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  while ((num | 0) >= 4) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
   num = num - 4 | 0;
  }
 }
 while ((num | 0) > 0) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
  num = num - 1 | 0;
 }
 return ret | 0;
}

function __ZN12RuntimeErrorD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 12 | 0);
 $1 = HEAP32[$this >> 2] | 0;
 if (!$1) return;
 $3 = $this + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) == ($1 | 0)) $11 = $1; else {
  $7 = $4;
  do {
   $6 = $7 + -40 | 0;
   HEAP32[$3 >> 2] = $6;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7 + -12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $7 = HEAP32[$3 >> 2] | 0;
  } while (($7 | 0) != ($1 | 0));
  $11 = HEAP32[$this >> 2] | 0;
 }
 __ZdlPv($11);
 return;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZN9ImportstrD0Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 38112;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 35936;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  __ZdlPv($this);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZdlPv($this);
 return;
}

function __ZN6ImportD0Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 38128;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 35936;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  __ZdlPv($this);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZdlPv($this);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0;
 if ((num | 0) >= 20) {
  value = value & 255;
  unaligned = ptr & 3;
  value4 = value | value << 8 | value << 16 | value << 24;
  stop4 = stop & ~3;
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0;
   while ((ptr | 0) < (unaligned | 0)) {
    HEAP8[ptr >> 0] = value;
    ptr = ptr + 1 | 0;
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  HEAP8[ptr >> 0] = value;
  ptr = ptr + 1 | 0;
 }
 return ptr - num | 0;
}

function __ZNSt3__111__stdoutbufIwE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$01 = 0, $__i$0 = 0, $__i$0$lcssa = 0;
 if (!(HEAP8[$this + 44 >> 0] | 0)) {
  $$01 = $__s;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) >= ($__n | 0)) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAP32[$$01 >> 2] | 0) | 0) == -1) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   $$01 = $$01 + 4 | 0;
   $__i$0 = $__i$0 + 1 | 0;
  }
  $$0 = $__i$0$lcssa;
 } else $$0 = _fwrite($__s | 0, 4, $__n | 0, HEAP32[$this + 32 >> 2] | 0) | 0;
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIcE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$01 = 0, $__i$0 = 0, $__i$0$lcssa = 0;
 if (!(HEAP8[$this + 44 >> 0] | 0)) {
  $$01 = $__s;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) >= ($__n | 0)) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAPU8[$$01 >> 0] | 0) | 0) == -1) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   $$01 = $$01 + 1 | 0;
   $__i$0 = $__i$0 + 1 | 0;
  }
  $$0 = $__i$0$lcssa;
 } else $$0 = _fwrite($__s | 0, 1, $__n | 0, HEAP32[$this + 32 >> 2] | 0) | 0;
 return $$0 | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$adjustedPtr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, $info, $adjustedPtr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $0 = 0, $2 = 0, $7 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$this + 4 >> 2] | 0;
 do if ($7 >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this, $__n - $7 | 0, $__c) | 0; else if ($2) {
  HEAP8[$this + $__n + 1 >> 0] = 0;
  HEAP8[$this >> 0] = $__n << 1;
  break;
 } else {
  HEAP8[(HEAP32[$this + 8 >> 2] | 0) + $__n >> 0] = 0;
  HEAP32[$this + 4 >> 2] = $__n;
  break;
 } while (0);
 return;
}

function __ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE($this, $msg, $ec) {
 $this = $this | 0;
 $msg = $msg | 0;
 $ec = $ec | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $0 = sp;
 $1 = $ec;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = $0;
 HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 + 4 >> 2] = $6;
 HEAP32[$tmpcast$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this, $tmpcast$byval_copy, $msg);
 HEAP32[$this >> 2] = 47728;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s, $__n, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__n = $__n | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $3 = 0, $5 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l | 0) | 0;
 $1 = _vsnprintf($__s, $__n, $__format, $__va) | 0;
 if ($0) {
  __THREW__ = 0;
  invoke_ii(72, $0 | 0) | 0;
  $3 = __THREW__;
  __THREW__ = 0;
  if ($3 & 1) {
   $5 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($5);
  }
 }
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN13LiteralStringD2Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 35888;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 35936;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZN9ImportstrD2Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 38112;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 35936;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 return;
}

function __ZN6ImportD2Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 38128;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 35936;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, $__s, $__sz) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__sz >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__sz >>> 0 < 11) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__sz + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy($__p$0 | 0, $__s | 0, $__sz | 0) | 0;
 HEAP8[$__p$0 + $__sz >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this, $__s, $__sz) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 var $6 = 0, $8 = 0, $__p$0 = 0;
 if ($__sz >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__sz >>> 0 < 2) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 4 | 0;
 } else {
  $6 = $__sz + 4 & -4;
  $8 = __Znwj($6 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $8;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $8;
 }
 _wmemcpy($__p$0, $__s, $__sz) | 0;
 HEAP32[$__p$0 + ($__sz << 2) >> 2] = 0;
 return;
}

function _wmemmove($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $5 = 0;
 $5 = ($n | 0) == 0;
 if ($d - $s >> 2 >>> 0 < $n >>> 0) {
  if ($5) return $d | 0;
  $$in = $n;
  do {
   $$in = $$in + -1 | 0;
   HEAP32[$d + ($$in << 2) >> 2] = HEAP32[$s + ($$in << 2) >> 2];
  } while (($$in | 0) != 0);
  return $d | 0;
 } else {
  if ($5) return $d | 0;
  $$025 = $s;
  $$07 = $d;
  $$16 = $n;
  while (1) {
   $$16 = $$16 + -1 | 0;
   HEAP32[$$07 >> 2] = HEAP32[$$025 >> 2];
   if (!$$16) break; else {
    $$025 = $$025 + 4 | 0;
    $$07 = $$07 + 4 | 0;
   }
  }
  return $d | 0;
 }
 return 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this, $__sz) {
 $this = $this | 0;
 $__sz = $__sz | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $2 = 0, $6 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $6 = $1 - $2 >> 2;
 if ($6 >>> 0 < $__sz >>> 0) __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this, $__sz - $6 | 0); else if ($6 >>> 0 > $__sz >>> 0) {
  $10 = $2 + ($__sz << 2) | 0;
  $11 = $1;
  while (1) {
   if (($11 | 0) == ($10 | 0)) break;
   $13 = $11 + -4 | 0;
   HEAP32[$0 >> 2] = $13;
   $11 = $13;
  }
 }
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $7 = 0, $9 = 0;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) $11 = 1; else {
  __THREW__ = 0;
  $3 = invoke_ii(72, $1 | 0) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $12 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($12);
  }
  if (!$3) $11 = 4; else {
   __THREW__ = 0;
   invoke_ii(72, $3 | 0) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $9 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($9);
   } else $11 = 4;
  }
 }
 return $11 | 0;
}

function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0;
 do if (!(HEAP8[50664] | 0)) if (___cxa_guard_acquire(50664) | 0) {
  __THREW__ = 0;
  $4 = invoke_ii(73, 50672) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if (!($5 & 1)) {
   __THREW__ = 0;
   invoke_viii(19, 50648, 50672, $4 | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if (!($7 & 1)) {
    ___cxa_atexit(200, 50648, ___dso_handle | 0) | 0;
    ___cxa_guard_release(50664);
    break;
   }
  }
  $9 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(50664);
  ___resumeException($9 | 0);
 } while (0);
 return 50648;
}

function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0;
 do if (!(HEAP8[51032] | 0)) if (___cxa_guard_acquire(51032) | 0) {
  __THREW__ = 0;
  $4 = invoke_ii(73, 51040) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if (!($5 & 1)) {
   __THREW__ = 0;
   invoke_viii(19, 51016, 51040, $4 | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if (!($7 & 1)) {
    ___cxa_atexit(200, 51016, ___dso_handle | 0) | 0;
    ___cxa_guard_release(51032);
    break;
   }
  }
  $9 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(51032);
  ___resumeException($9 | 0);
 } while (0);
 return 51016;
}

function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0;
 do if (!(HEAP8[50880] | 0)) if (___cxa_guard_acquire(50880) | 0) {
  __THREW__ = 0;
  $4 = invoke_ii(73, 50888) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if (!($5 & 1)) {
   __THREW__ = 0;
   invoke_viii(19, 50864, 50888, $4 | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if (!($7 & 1)) {
    ___cxa_atexit(200, 50864, ___dso_handle | 0) | 0;
    ___cxa_guard_release(50880);
    break;
   }
  }
  $9 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(50880);
  ___resumeException($9 | 0);
 } while (0);
 return 50864;
}

function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0;
 do if (!(HEAP8[50768] | 0)) if (___cxa_guard_acquire(50768) | 0) {
  __THREW__ = 0;
  $4 = invoke_ii(73, 50776) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if (!($5 & 1)) {
   __THREW__ = 0;
   invoke_viii(19, 50752, 50776, $4 | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if (!($7 & 1)) {
    ___cxa_atexit(200, 50752, ___dso_handle | 0) | 0;
    ___cxa_guard_release(50768);
    break;
   }
  }
  $9 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(50768);
  ___resumeException($9 | 0);
 } while (0);
 return 50752;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__n >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__n >>> 0 < 11) {
  HEAP8[$this >> 0] = $__n << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__n + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__n;
  $__p$0 = $7;
 }
 _memset($__p$0 | 0, $__c | 0, $__n | 0) | 0;
 HEAP8[$__p$0 + $__n >> 0] = 0;
 return;
}

function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 $3 = $this + $2 | 0;
 HEAP32[$3 >> 2] = 732;
 $4 = $this + ($2 + 64) | 0;
 HEAP32[$4 >> 2] = 772;
 HEAP32[$this + ($2 + 8) >> 2] = 752;
 $6 = $this + ($2 + 12) | 0;
 HEAP32[$6 >> 2] = 1064;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + ($2 + 44) | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 __ZdlPv($3);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $6 = 0, $8 = 0, $__p$0 = 0;
 if ($__n >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__n >>> 0 < 2) {
  HEAP8[$this >> 0] = $__n << 1;
  $__p$0 = $this + 4 | 0;
 } else {
  $6 = $__n + 4 & -4;
  $8 = __Znwj($6 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $8;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__n;
  $__p$0 = $8;
 }
 _wmemset($__p$0, $__c, $__n) | 0;
 HEAP32[$__p$0 + ($__n << 2) >> 2] = 0;
 return;
}

function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $3 = 0, $5 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l | 0) | 0;
 $1 = _vsscanf($__s, $__format, $__va) | 0;
 if ($0) {
  __THREW__ = 0;
  invoke_ii(72, $0 | 0) | 0;
  $3 = __THREW__;
  __THREW__ = 0;
  if ($3 & 1) {
   $5 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($5);
  }
 }
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $3 = 0, $i$0 = 0;
 HEAP32[$this >> 2] = 50128;
 $0 = $this + 8 | 0;
 $1 = $this + 12 | 0;
 $i$0 = 0;
 while (1) {
  $3 = HEAP32[$0 >> 2] | 0;
  if ($i$0 >>> 0 >= (HEAP32[$1 >> 2] | 0) - $3 >> 2 >>> 0) break;
  $10 = HEAP32[$3 + ($i$0 << 2) >> 2] | 0;
  if ($10) __ZNSt3__114__shared_count16__release_sharedEv($10) | 0;
  $i$0 = $i$0 + 1 | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 144 | 0);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $4 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below); else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 31]($4, $info, $adjustedPtr, $path_below);
 }
 return;
}

function __ZN12_GLOBAL__N_116HeapSimpleObjectD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 41856;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 20 | 0, HEAP32[$this + 24 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 __ZdlPv($this);
 return;
}

function __ZN12_GLOBAL__N_111HeapClosureD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 41992;
 $1 = HEAP32[$this + 28 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 32 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18ios_base4InitD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0, $4 = 0, $6 = 0, $8 = 0;
 __THREW__ = 0;
 invoke_ii(68, 45896) | 0;
 $0 = __THREW__;
 __THREW__ = 0;
 if (!($0 & 1)) {
  __THREW__ = 0;
  invoke_ii(68, 46072) | 0;
  $2 = __THREW__;
  __THREW__ = 0;
  if (!($2 & 1)) {
   __THREW__ = 0;
   invoke_ii(71, 46248) | 0;
   $4 = __THREW__;
   __THREW__ = 0;
   if (!($4 & 1)) {
    __THREW__ = 0;
    invoke_ii(71, 46424) | 0;
    $6 = __THREW__;
    __THREW__ = 0;
    if (!($6 & 1)) return;
   }
  }
 }
 $8 = ___cxa_find_matching_catch(0) | 0;
 ___clang_call_terminate($8);
}

function __ZN12_GLOBAL__N_123HeapComprehensionObjectD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 41576;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 __ZdlPv($this);
 return;
}

function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $2 = 0, $4 = 0, $6 = 0;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 HEAP32[$this + $2 >> 2] = 732;
 $4 = $this + ($2 + 64) | 0;
 HEAP32[$4 >> 2] = 772;
 HEAP32[$this + ($2 + 8) >> 2] = 752;
 $6 = $this + ($2 + 12) | 0;
 HEAP32[$6 >> 2] = 1064;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + ($2 + 44) | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 return;
}

function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50280) | 0;
 $1 = $this + 36 | 0;
 HEAP32[$1 >> 2] = $0;
 $6 = $this + 44 | 0;
 HEAP32[$6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP8[$this + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 if ((HEAP32[$6 >> 2] | 0) > 8) __ZNSt3__121__throw_runtime_errorEPKc(47088);
 return;
}

function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50272) | 0;
 $1 = $this + 36 | 0;
 HEAP32[$1 >> 2] = $0;
 $6 = $this + 44 | 0;
 HEAP32[$6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP8[$this + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 if ((HEAP32[$6 >> 2] | 0) > 8) __ZNSt3__121__throw_runtime_errorEPKc(47088);
 return;
}

function __ZN12_GLOBAL__N_116HeapSimpleObjectD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 41856;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 20 | 0, HEAP32[$this + 24 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 return;
}

function __ZN12_GLOBAL__N_111HeapClosureD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 41992;
 $1 = HEAP32[$this + 28 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 32 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 return;
}

function __ZN12_GLOBAL__N_123HeapComprehensionObjectD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 41576;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 return;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 while (1) {
  if (($3 | 0) == ($1 | 0)) break;
  $5 = $3 + -4 | 0;
  HEAP32[$2 >> 2] = $5;
  $3 = $5;
 }
 $6 = HEAP32[$this >> 2] | 0;
 do if ($6) {
  $9 = HEAP32[$this + 16 >> 2] | 0;
  if (($9 | 0) == ($6 | 0)) {
   HEAP8[$9 + 112 >> 0] = 0;
   break;
  } else {
   __ZdlPv($6);
   break;
  }
 } while (0);
 return;
}

function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this, $low, $high, $vec) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $vec = $vec | 0;
 var $$0 = 0, $$01 = 0, $10 = 0, $2 = 0, $4 = 0;
 $2 = ($high - $low | 0) >>> 2;
 $$0 = $vec;
 $$01 = $low;
 while (1) {
  if (($$01 | 0) == ($high | 0)) break;
  $4 = HEAP32[$$01 >> 2] | 0;
  if ($4 >>> 0 < 128) $10 = HEAPU16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($4 << 1) >> 1] | 0; else $10 = 0;
  HEAP16[$$0 >> 1] = $10;
  $$0 = $$0 + 2 | 0;
  $$01 = $$01 + 4 | 0;
 }
 return $low + ($2 << 2) | 0;
}

function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $19 = 0, $21 = 0, $4 = 0, $7 = 0;
 __THREW__ = 0;
 $0 = invoke_i(1) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $21 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($21);
 }
 if ($0) {
  $4 = HEAP32[$0 >> 2] | 0;
  if ($4) {
   $7 = $4 + 48 | 0;
   if ((HEAP32[$7 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[$7 + 4 >> 2] | 0) == 1129074247 : 0) __ZSt11__terminatePFvvE(HEAP32[$4 + 12 >> 2] | 0);
  }
 }
 $19 = HEAP32[10734] | 0;
 HEAP32[10734] = $19 + 0;
 __ZSt11__terminatePFvvE($19);
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i$i = 0, $1 = 0;
 if ($__n >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $1 = $this + 128 | 0;
 if ($__n >>> 0 < 29 & (HEAP8[$1 >> 0] | 0) == 0) {
  HEAP8[$1 >> 0] = 1;
  $$0$i$i = $this + 16 | 0;
 } else $$0$i$i = __Znwj($__n << 2) | 0;
 HEAP32[$this + 4 >> 2] = $$0$i$i;
 HEAP32[$this >> 2] = $$0$i$i;
 HEAP32[$this + 8 >> 2] = $$0$i$i + ($__n << 2);
 return;
}

function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0 = 0, $$0$lcssa = 0, $1 = 0;
 $$0 = $low;
 while (1) {
  if (($$0 | 0) == ($high | 0)) {
   $$0$lcssa = $high;
   break;
  }
  $1 = HEAP32[$$0 >> 2] | 0;
  if ($1 >>> 0 >= 128) {
   $$0$lcssa = $$0;
   break;
  }
  if (!((HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($1 << 1) >> 1] & $m) << 16 >> 16)) {
   $$0$lcssa = $$0;
   break;
  }
  $$0 = $$0 + 4 | 0;
 }
 return $$0$lcssa | 0;
}

function __Znwj($size) {
 $size = $size | 0;
 var $$lcssa = 0, $$size = 0, $1 = 0, $3 = 0, $5 = 0, label = 0;
 $$size = ($size | 0) == 0 ? 1 : $size;
 while (1) {
  $1 = _malloc($$size) | 0;
  if ($1) {
   $$lcssa = $1;
   label = 6;
   break;
  }
  $3 = __ZSt15get_new_handlerv() | 0;
  if (!$3) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_v[$3 & 7]();
 }
 if ((label | 0) == 5) {
  $5 = ___cxa_allocate_exception(4) | 0;
  HEAP32[$5 >> 2] = 43312;
  ___cxa_throw($5 | 0, 43360, 77);
 } else if ((label | 0) == 6) return $$lcssa | 0;
 return 0;
}

function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $7 = 0, $9 = 0;
 HEAP32[$this >> 2] = 50296;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 __THREW__ = 0;
 $2 = invoke_i(2) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 do if (!($3 & 1)) {
  if (($1 | 0) != ($2 | 0)) {
   __THREW__ = 0;
   invoke_vi(188, HEAP32[$0 >> 2] | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) break;
  }
  return;
 } while (0);
 $9 = ___cxa_find_matching_catch(0) | 0;
 ___clang_call_terminate($9);
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below);
 return;
}

function ___string_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $0 = 0, $1 = 0, $11 = 0, $2 = 0, $3 = 0, $k$0 = 0, $k$0$len = 0;
 $0 = $f + 84 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $len + 256 | 0;
 $3 = _memchr($1, 0, $2) | 0;
 if (!$3) $k$0 = $2; else $k$0 = $3 - $1 | 0;
 $k$0$len = $k$0 >>> 0 < $len >>> 0 ? $k$0 : $len;
 _memcpy($buf | 0, $1 | 0, $k$0$len | 0) | 0;
 HEAP32[$f + 4 >> 2] = $1 + $k$0$len;
 $11 = $1 + $k$0 | 0;
 HEAP32[$f + 8 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 return $k$0$len | 0;
}

function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = $this + -8 | 0;
 HEAP32[$0 >> 2] = 732;
 $1 = $0 + 64 | 0;
 HEAP32[$1 >> 2] = 772;
 HEAP32[$0 + 8 >> 2] = 752;
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 1064;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 __ZdlPv($0);
 return;
}

function ___towrite($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $13 = 0, $2 = 0, $6 = 0;
 $0 = $f + 74 | 0;
 $2 = HEAP8[$0 >> 0] | 0;
 HEAP8[$0 >> 0] = $2 + 255 | $2;
 $6 = HEAP32[$f >> 2] | 0;
 if (!($6 & 8)) {
  HEAP32[$f + 8 >> 2] = 0;
  HEAP32[$f + 4 >> 2] = 0;
  $13 = HEAP32[$f + 44 >> 2] | 0;
  HEAP32[$f + 28 >> 2] = $13;
  HEAP32[$f + 20 >> 2] = $13;
  HEAP32[$f + 16 >> 2] = $13 + (HEAP32[$f + 48 >> 2] | 0);
  $$0 = 0;
  return $$0 | 0;
 } else {
  HEAP32[$f >> 2] = $6 | 32;
  $$0 = -1;
  return $$0 | 0;
 }
 return 0;
}

function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = tempRet0;
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 | 0 | 0) | 0;
}

function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this, $code, $condition) {
 $this = $this | 0;
 $code = $code | 0;
 $condition = $condition | 0;
 var $0 = 0, $12 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] & 31]($0, $this, $code);
 if ((HEAP32[$0 + 4 >> 2] | 0) == (HEAP32[$condition + 4 >> 2] | 0)) $12 = (HEAP32[$0 >> 2] | 0) == (HEAP32[$condition >> 2] | 0); else $12 = 0;
 STACKTOP = sp;
 return $12 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 var $1 = 0, $11 = 0, $12 = 0;
 if (($this | 0) != ($__str | 0)) {
  $1 = HEAP8[$__str >> 0] | 0;
  if (!($1 & 1)) {
   $11 = $__str + 1 | 0;
   $12 = ($1 & 255) >>> 1;
  } else {
   $11 = HEAP32[$__str + 8 >> 2] | 0;
   $12 = HEAP32[$__str + 4 >> 2] | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $11, $12) | 0;
 }
 return $this | 0;
}

function dynCall_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 a11 = a11 | 0;
 a12 = a12 | 0;
 a13 = a13 | 0;
 a14 = a14 | 0;
 a15 = a15 | 0;
 FUNCTION_TABLE_viiiiiiiiiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0, a10 | 0, a11 | 0, a12 | 0, a13 | 0, a14 | 0, a15 | 0);
}

function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = $this + -8 | 0;
 HEAP32[$0 >> 2] = 732;
 $1 = $0 + 64 | 0;
 HEAP32[$1 >> 2] = 772;
 HEAP32[$0 + 8 >> 2] = 752;
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 1064;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}

function __ZNSt3__18ios_base4initEPv($this, $sb) {
 $this = $this | 0;
 $sb = $sb | 0;
 var $8 = 0, dest = 0, stop = 0;
 HEAP32[$this + 24 >> 2] = $sb;
 HEAP32[$this + 16 >> 2] = ($sb | 0) == 0 & 1;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 4098;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 6;
 $8 = $this + 28 | 0;
 dest = $this + 32 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZNSt3__16localeC2Ev($8);
 return;
}

function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0;
 do if (!(HEAP8[50832] | 0)) if (___cxa_guard_acquire(50832) | 0) {
  __THREW__ = 0;
  invoke_viii(3, 50816, 50840, 20);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(50832);
   ___resumeException($6 | 0);
  } else {
   ___cxa_atexit(199, 50816, ___dso_handle | 0) | 0;
   ___cxa_guard_release(50832);
   break;
  }
 } while (0);
 return 50816;
}

function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0;
 do if (!(HEAP8[50624] | 0)) if (___cxa_guard_acquire(50624) | 0) {
  __THREW__ = 0;
  invoke_viii(3, 50608, 50632, 8);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(50624);
   ___resumeException($6 | 0);
  } else {
   ___cxa_atexit(199, 50608, ___dso_handle | 0) | 0;
   ___cxa_guard_release(50624);
   break;
  }
 } while (0);
 return 50608;
}

function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0;
 do if (!(HEAP8[50992] | 0)) if (___cxa_guard_acquire(50992) | 0) {
  __THREW__ = 0;
  invoke_viii(3, 50976, 51e3, 11);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(50992);
   ___resumeException($6 | 0);
  } else {
   ___cxa_atexit(199, 50976, ___dso_handle | 0) | 0;
   ___cxa_guard_release(50992);
   break;
  }
 } while (0);
 return 50976;
}

function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0;
 do if (!(HEAP8[50728] | 0)) if (___cxa_guard_acquire(50728) | 0) {
  __THREW__ = 0;
  invoke_viii(3, 50712, 50736, 8);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(50728);
   ___resumeException($6 | 0);
  } else {
   ___cxa_atexit(199, 50712, ___dso_handle | 0) | 0;
   ___cxa_guard_release(50728);
   break;
  }
 } while (0);
 return 50712;
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0;
 HEAP32[$this >> 2] = 732;
 $0 = $this + 64 | 0;
 HEAP32[$0 >> 2] = 772;
 HEAP32[$this + 8 >> 2] = 752;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 1064;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0 = 0, $$0$lcssa = 0, $1 = 0;
 $$0 = $low;
 while (1) {
  if (($$0 | 0) == ($high | 0)) {
   $$0$lcssa = $high;
   break;
  }
  $1 = HEAP32[$$0 >> 2] | 0;
  if ($1 >>> 0 < 128) if ((HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($1 << 1) >> 1] & $m) << 16 >> 16) {
   $$0$lcssa = $$0;
   break;
  }
  $$0 = $$0 + 4 | 0;
 }
 return $$0$lcssa | 0;
}

function _vsscanf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $4 = 0, $f = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f = sp;
 dest = $f + 0 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$f + 32 >> 2] = 38;
 HEAP32[$f + 44 >> 2] = $s;
 HEAP32[$f + 76 >> 2] = -1;
 HEAP32[$f + 84 >> 2] = $s;
 $4 = _MUSL_vfscanf($f, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $$0 = 0, $$01 = 0, $2 = 0, $4 = 0;
 $2 = ($high - $low | 0) >>> 2;
 $$0 = $dest;
 $$01 = $low;
 while (1) {
  if (($$01 | 0) == ($high | 0)) break;
  $4 = HEAP32[$$01 >> 2] | 0;
  HEAP8[$$0 >> 0] = $4 >>> 0 < 128 ? $4 & 255 : $dfault;
  $$0 = $$0 + 1 | 0;
  $$01 = $$01 + 4 | 0;
 }
 return $low + ($2 << 2) | 0;
}

function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0, $3 = 0, $5 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 do if ($0) {
  $2 = $this + 4 | 0;
  $3 = HEAP32[$2 >> 2] | 0;
  while (1) {
   if (($3 | 0) == ($0 | 0)) break;
   $5 = $3 + -4 | 0;
   HEAP32[$2 >> 2] = $5;
   $3 = $5;
  }
  if (($this + 16 | 0) == ($0 | 0)) {
   HEAP8[$this + 128 >> 0] = 0;
   break;
  } else {
   __ZdlPv($0);
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $11 = 0;
 HEAP32[$this >> 2] = 47752;
 __THREW__ = 0;
 invoke_vii(72, $this | 0, 0);
 $0 = __THREW__;
 __THREW__ = 0;
 if ($0 & 1) {
  $11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($11);
 } else {
  __ZNSt3__16localeD2Ev($this + 28 | 0);
  _free(HEAP32[$this + 32 >> 2] | 0);
  _free(HEAP32[$this + 36 >> 2] | 0);
  _free(HEAP32[$this + 48 >> 2] | 0);
  _free(HEAP32[$this + 60 >> 2] | 0);
  return;
 }
}

function __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0;
 HEAP32[$this >> 2] = 732;
 $0 = $this + 64 | 0;
 HEAP32[$0 >> 2] = 772;
 HEAP32[$this + 8 >> 2] = 752;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 1064;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 return;
}

function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0 = 0, $2 = 0, $4 = 0, $8 = 0;
 $2 = ($high - $low | 0) >>> 2;
 $$0 = $low;
 while (1) {
  if (($$0 | 0) == ($high | 0)) break;
  $4 = HEAP32[$$0 >> 2] | 0;
  if ($4 >>> 0 < 128) $8 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + ($4 << 2) >> 2] | 0; else $8 = $4;
  HEAP32[$$0 >> 2] = $8;
  $$0 = $$0 + 4 | 0;
 }
 return $low + ($2 << 2) | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0 = 0, $2 = 0, $4 = 0, $8 = 0;
 $2 = ($high - $low | 0) >>> 2;
 $$0 = $low;
 while (1) {
  if (($$0 | 0) == ($high | 0)) break;
  $4 = HEAP32[$$0 >> 2] | 0;
  if ($4 >>> 0 < 128) $8 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($4 << 2) >> 2] | 0; else $8 = $4;
  HEAP32[$$0 >> 2] = $8;
  $$0 = $$0 + 4 | 0;
 }
 return $low + ($2 << 2) | 0;
}

function _jsonnet_realloc($vm, $str, $sz) {
 $vm = $vm | 0;
 $str = $str | 0;
 $sz = $sz | 0;
 var $$0 = 0, $1 = 0, $2 = 0, $4 = 0;
 $1 = ($sz | 0) == 0;
 if (!$str) {
  if ($1) {
   $$0 = 0;
   return $$0 | 0;
  }
  $2 = _malloc($sz) | 0;
  if (!$2) __ZL12memory_panicv(); else {
   $$0 = $2;
   return $$0 | 0;
  }
 }
 if ($1) {
  _free($str);
  $$0 = 0;
  return $$0 | 0;
 }
 $4 = _realloc($str, $sz) | 0;
 if (!$4) __ZL12memory_panicv(); else {
  $$0 = $4;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $10 = 0, $7 = 0, $8 = 0;
 HEAP32[$this >> 2] = 43536;
 if (!(HEAP8[$msg >> 0] & 1)) $7 = $msg + 1 | 0; else $7 = HEAP32[$msg + 8 >> 2] | 0;
 __THREW__ = 0;
 invoke_vii(109, $this + 4 | 0, $7 | 0);
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $10 = ___cxa_find_matching_catch() | 0;
  ___resumeException($10 | 0);
 } else return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 if (!(HEAP8[$__str >> 0] & 1)) {
  HEAP32[$this + 0 >> 2] = HEAP32[$__str + 0 >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$__str + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$__str + 8 >> 2];
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, HEAP32[$__str + 8 >> 2] | 0, HEAP32[$__str + 4 >> 2] | 0);
 return;
}

function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0, $6 = 0, $8 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 __THREW__ = 0;
 $1 = invoke_i(2) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 do if (!($2 & 1)) {
  if (($0 | 0) != ($1 | 0)) {
   __THREW__ = 0;
   invoke_vi(188, HEAP32[$this >> 2] | 0);
   $6 = __THREW__;
   __THREW__ = 0;
   if ($6 & 1) break;
  }
  return;
 } while (0);
 $8 = ___cxa_find_matching_catch(0) | 0;
 ___clang_call_terminate($8);
}

function ___cxa_can_catch($catchType, $excpType, $thrown) {
 $catchType = $catchType | 0;
 $excpType = $excpType | 0;
 $thrown = $thrown | 0;
 var $4 = 0, $temp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $temp = sp;
 HEAP32[$temp >> 2] = HEAP32[$thrown >> 2];
 $4 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$catchType >> 2] | 0) + 16 >> 2] & 63]($catchType, $excpType, $temp) | 0;
 if ($4) HEAP32[$thrown >> 2] = HEAP32[$temp >> 2];
 STACKTOP = sp;
 return $4 & 1 | 0;
}

function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $3 = 0, $4 = 0, $__h$0 = 0, $__h$0$lcssa = 0, $__p$0 = 0;
 $__h$0 = 0;
 $__p$0 = $__lo;
 while (1) {
  if (($__p$0 | 0) == ($__hi | 0)) {
   $__h$0$lcssa = $__h$0;
   break;
  }
  $3 = (HEAP32[$__p$0 >> 2] | 0) + ($__h$0 << 4) | 0;
  $4 = $3 & -268435456;
  $__h$0 = ($4 >>> 24 | $4) ^ $3;
  $__p$0 = $__p$0 + 4 | 0;
 }
 return $__h$0$lcssa | 0;
}

function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $4 = 0, $5 = 0, $__h$0 = 0, $__h$0$lcssa = 0, $__p$0 = 0;
 $__h$0 = 0;
 $__p$0 = $__lo;
 while (1) {
  if (($__p$0 | 0) == ($__hi | 0)) {
   $__h$0$lcssa = $__h$0;
   break;
  }
  $4 = (HEAP8[$__p$0 >> 0] | 0) + ($__h$0 << 4) | 0;
  $5 = $4 & -268435456;
  $__h$0 = ($5 >>> 24 | $5) ^ $4;
  $__p$0 = $__p$0 + 1 | 0;
 }
 return $__h$0$lcssa | 0;
}

function __ZNSt3__16__clocEv() {
 var $4 = 0, $5 = 0, $8 = 0;
 do if (!(HEAP8[50104] | 0)) if (___cxa_guard_acquire(50104) | 0) {
  __THREW__ = 0;
  $4 = invoke_iiii(39, 2147483647, 50112, 0) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if ($5 & 1) {
   $8 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(50104);
   ___resumeException($8 | 0);
  } else {
   HEAP32[12524] = $4;
   ___cxa_guard_release(50104);
   break;
  }
 } while (0);
 return HEAP32[12524] | 0;
}

function copyTempDouble(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
 HEAP8[tempDoublePtr + 4 >> 0] = HEAP8[ptr + 4 >> 0];
 HEAP8[tempDoublePtr + 5 >> 0] = HEAP8[ptr + 5 >> 0];
 HEAP8[tempDoublePtr + 6 >> 0] = HEAP8[ptr + 6 >> 0];
 HEAP8[tempDoublePtr + 7 >> 0] = HEAP8[ptr + 7 >> 0];
}

function ___shlim($f, $lim) {
 $f = $f | 0;
 $lim = $lim | 0;
 var $$sink = 0, $12 = 0, $2 = 0, $4 = 0, $7 = 0;
 HEAP32[$f + 104 >> 2] = $lim;
 $2 = HEAP32[$f + 8 >> 2] | 0;
 $4 = HEAP32[$f + 4 >> 2] | 0;
 $7 = $2 - $4 | 0;
 HEAP32[$f + 108 >> 2] = $7;
 if (!(($lim | 0) != 0 & ($7 | 0) > ($lim | 0))) {
  $$sink = $2;
  $12 = $f + 100 | 0;
  HEAP32[$12 >> 2] = $$sink;
  return;
 }
 $$sink = $4 + $lim | 0;
 $12 = $f + 100 | 0;
 HEAP32[$12 >> 2] = $$sink;
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_($this, $__os) {
 $this = $this | 0;
 $__os = $__os | 0;
 var $3 = 0, $8 = 0;
 HEAP8[$this >> 0] = 0;
 HEAP32[$this + 4 >> 2] = $__os;
 $3 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
 if (!(HEAP32[$__os + ($3 + 16) >> 2] | 0)) {
  $8 = HEAP32[$__os + ($3 + 72) >> 2] | 0;
  if ($8) __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($8) | 0;
  HEAP8[$this >> 0] = 1;
 }
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this, $__os) {
 $this = $this | 0;
 $__os = $__os | 0;
 var $3 = 0, $8 = 0;
 HEAP8[$this >> 0] = 0;
 HEAP32[$this + 4 >> 2] = $__os;
 $3 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
 if (!(HEAP32[$__os + ($3 + 16) >> 2] | 0)) {
  $8 = HEAP32[$__os + ($3 + 72) >> 2] | 0;
  if ($8) __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8) | 0;
  HEAP8[$this >> 0] = 1;
 }
 return;
}

function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp | 0;
 var $$field = 0, $$field2 = 0, $0 = 0, $10 = 0, $3 = 0;
 $0 = $__vp + 4 | 0;
 $$field = HEAP32[$0 >> 2] | 0;
 $$field2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = (HEAP32[$__vp >> 2] | 0) + ($$field2 >> 1) | 0;
 if (!($$field2 & 1)) $10 = $$field; else $10 = HEAP32[(HEAP32[$3 >> 2] | 0) + $$field >> 2] | 0;
 FUNCTION_TABLE_vi[$10 & 255]($3);
 return;
}

function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0 = 0, $1 = 0, $7 = 0;
 $$0 = $low;
 while (1) {
  if (($$0 | 0) == ($high | 0)) break;
  $1 = HEAP8[$$0 >> 0] | 0;
  if ($1 << 24 >> 24 > -1) $7 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + ($1 << 24 >> 24 << 2) >> 2] & 255; else $7 = $1;
  HEAP8[$$0 >> 0] = $7;
  $$0 = $$0 + 1 | 0;
 }
 return $high | 0;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0 = 0, $1 = 0, $7 = 0;
 $$0 = $low;
 while (1) {
  if (($$0 | 0) == ($high | 0)) break;
  $1 = HEAP8[$$0 >> 0] | 0;
  if ($1 << 24 >> 24 > -1) $7 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($1 << 24 >> 24 << 2) >> 2] & 255; else $7 = $1;
  HEAP8[$$0 >> 0] = $7;
  $$0 = $$0 + 1 | 0;
 }
 return $high | 0;
}

function __ZN17ObjectCompositionD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $$0 = 0, $$01 = 0, $1 = 0;
 $$0 = $dest;
 $$01 = $low;
 while (1) {
  if (($$01 | 0) == ($high | 0)) break;
  $1 = HEAP8[$$01 >> 0] | 0;
  HEAP8[$$0 >> 0] = $1 << 24 >> 24 > -1 ? $1 : $dfault;
  $$0 = $$0 + 1 | 0;
  $$01 = $$01 + 1 | 0;
 }
 return $high | 0;
}

function __ZN14LiteralBooleanD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $4 = 0;
 $0 = $this + 8 | 0;
 $$0 = $__n;
 $1 = HEAP32[$0 >> 2] | 0;
 do {
  if (!$1) $4 = 0; else {
   HEAP32[$1 >> 2] = 0;
   $4 = HEAP32[$0 >> 2] | 0;
  }
  $1 = $4 + 4 | 0;
  HEAP32[$0 >> 2] = $1;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZN13LiteralNumberD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN11LiteralNullD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN11ConditionalD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this, $ev) {
 $this = $this | 0;
 $ev = $ev | 0;
 var $2 = 0, $3 = 0, $5 = 0, $i$0 = 0;
 $2 = $this + 32 | 0;
 $3 = $this + 36 | 0;
 $i$0 = HEAP32[$this + 40 >> 2] | 0;
 while (1) {
  if (!$i$0) break;
  $5 = $i$0 + -1 | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$2 >> 2] | 0) + ($5 << 2) >> 2] & 31]($ev, $this, HEAP32[(HEAP32[$3 >> 2] | 0) + ($5 << 2) >> 2] | 0);
  $i$0 = $5;
 }
 return;
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(71, $0 | 0, 47344);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else {
  HEAP32[$0 >> 2] = 43656;
  ___cxa_throw($0 | 0, 43696, 79);
 }
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(71, $0 | 0, 47344);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else {
  HEAP32[$0 >> 2] = 43592;
  ___cxa_throw($0 | 0, 43632, 79);
 }
}

function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(71, $0 | 0, 50088);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else {
  HEAP32[$0 >> 2] = 43592;
  ___cxa_throw($0 | 0, 43632, 79);
 }
}

function __ZNSt3__16locale8__globalEv() {
 var $4 = 0, $7 = 0;
 do if (!(HEAP8[50184] | 0)) if (___cxa_guard_acquire(50184) | 0) {
  __THREW__ = 0;
  invoke_i(4) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $7 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(50184);
   ___resumeException($7 | 0);
  } else {
   HEAP32[12544] = 50168;
   ___cxa_guard_release(50184);
   break;
  }
 } while (0);
 return HEAP32[12544] | 0;
}

function __ZNSt3__16locale7classicEv() {
 var $4 = 0, $7 = 0;
 do if (!(HEAP8[50160] | 0)) if (___cxa_guard_acquire(50160) | 0) {
  __THREW__ = 0;
  invoke_i(3) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $7 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(50160);
   ___resumeException($7 | 0);
  } else {
   HEAP32[12538] = 50144;
   ___cxa_guard_release(50160);
   break;
  }
 } while (0);
 return HEAP32[12538] | 0;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below);
 return;
}

function __ZN6BinaryD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN5UnaryD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN5SuperD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN5IndexD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN5ErrorD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $2 = 0, $3 = 0, $4 = 0;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 $3 = $this + $2 | 0;
 HEAP32[$3 >> 2] = 42292;
 $4 = $this + ($2 + 108) | 0;
 HEAP32[$4 >> 2] = 42312;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + ($2 + 8) | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 __ZdlPv($3);
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $4 = 0;
 $0 = $this + 4 | 0;
 $$0 = $__n;
 $1 = HEAP32[$0 >> 2] | 0;
 do {
  if (!$1) $4 = 0; else {
   HEAP32[$1 >> 2] = 0;
   $4 = HEAP32[$0 >> 2] | 0;
  }
  $1 = $4 + 4 | 0;
  HEAP32[$0 >> 2] = $1;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $0 = 0, $1 = 0, $2 = 0, $4 = 0;
 $0 = _strlen($__s | 0) | 0;
 __THREW__ = 0;
 $1 = invoke_iiiiii(17, $this | 0, 0, -1, $__s | 0, $0 | 0) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if ($2 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else return $1 | 0;
 return 0;
}

function __ZN4SelfD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN3VarD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN3ASTD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $__sp, $__wch) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__sp = $__sp | 0;
 $__wch = $__wch | 0;
 var $4 = 0;
 $4 = $__sp + 8 | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] & 31]($agg$result, $this, HEAP32[$4 >> 2] | 0, HEAP32[$4 + 4 >> 2] | 0, 0, $__wch);
 return;
}

function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  ret = dest;
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  }
  dest = ret;
 } else _memcpy(dest, src, num) | 0;
 return dest | 0;
}

function __ZNSt3__18numpunctIwEC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $4 = 0, $__i$0$i$i = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 50416;
 HEAP32[$this + 8 >> 2] = 46;
 HEAP32[$this + 12 >> 2] = 44;
 $4 = $this + 16 | 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$4 + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNSt3__18numpunctIcEC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $4 = 0, $__i$0$i$i = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 50376;
 HEAP8[$this + 8 >> 0] = 46;
 HEAP8[$this + 9 >> 0] = 44;
 $4 = $this + 12 | 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$4 + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZN3ASTD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 35936;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $3 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50280) | 0;
 HEAP32[$this + 36 >> 2] = $3;
 HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
 return;
}

function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $3 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 50272) | 0;
 HEAP32[$this + 36 >> 2] = $3;
 HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
 return;
}

function _copysign($x, $y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $6 = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $y;
 $6 = HEAP32[tempDoublePtr + 4 >> 2] & -2147483648 | $1 & 2147483647;
 HEAP32[tempDoublePtr >> 2] = $0;
 HEAP32[tempDoublePtr + 4 >> 2] = $6;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__17codecvtIwc11__mbstate_tEC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $2 = 0, $3 = 0, $6 = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 50296;
 __THREW__ = 0;
 $2 = invoke_i(2) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $6 = ___cxa_find_matching_catch() | 0;
  ___resumeException($6 | 0);
 } else {
  HEAP32[$this + 8 >> 2] = $2;
  return;
 }
}

function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this | 0;
 var $__p$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p$i = sp;
 if ((HEAP32[$this >> 2] | 0) != -1) {
  HEAP32[$__p$i >> 2] = $this;
  HEAP32[$__p$i + 4 >> 2] = 191;
  HEAP32[$__p$i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this, $__p$i, 192);
 }
 STACKTOP = sp;
 return (HEAP32[$this + 4 >> 2] | 0) + -1 | 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$this + 4 >> 2] | 0);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $2, $3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $agg$result;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $agg$result + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $2, $3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $agg$result;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $agg$result + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$this + 4 >> 2] | 0);
 return;
}

function ___uflow($f) {
 $f = $f | 0;
 var $$0 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $c = sp;
 if (!(HEAP32[$f + 8 >> 2] | 0)) if (!(___toread($f) | 0)) label = 3; else $$0 = -1; else label = 3;
 if ((label | 0) == 3) if ((FUNCTION_TABLE_iiii[HEAP32[$f + 32 >> 2] & 63]($f, $c, 1) | 0) == 1) $$0 = HEAPU8[$c >> 0] | 0; else $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var $2 = 0, $4 = 0;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 HEAP32[$this + $2 >> 2] = 42292;
 $4 = $this + ($2 + 108) | 0;
 HEAP32[$4 >> 2] = 42312;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + ($2 + 8) | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 return;
}

function dynCall_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 a11 = a11 | 0;
 return FUNCTION_TABLE_iiiiiiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0, a10 | 0, a11 | 0) | 0;
}

function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
 STACKTOP = __stackBase__;
 return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}

function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(74, $0 | 0, $msg | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else ___cxa_throw($0 | 0, 43736, 81);
}

function __ZNSt3__16localeC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0, $4 = 0;
 __THREW__ = 0;
 $0 = invoke_i(5) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else {
  $3 = HEAP32[$0 >> 2] | 0;
  HEAP32[$this >> 2] = $3;
  __ZNSt3__114__shared_count12__add_sharedEv($3);
  return;
 }
}

function __ZN12_GLOBAL__N_19HeapArrayD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 42008;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) {
  __ZdlPv($this);
  return;
 }
 $4 = $this + 12 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0;
 $2 = $agg$result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $7 = $agg$result + 8 | 0;
 HEAP32[$7 >> 2] = -1;
 HEAP32[$7 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0;
 $2 = $agg$result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $7 = $agg$result + 8 | 0;
 HEAP32[$7 >> 2] = -1;
 HEAP32[$7 + 4 >> 2] = -1;
 return;
}

function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $7 = 0, $8 = 0;
 if (!(HEAP8[$__nm >> 0] & 1)) $7 = $__nm + 1 | 0; else $7 = HEAP32[$__nm + 8 >> 2] | 0;
 $8 = _catopen($7 | 0, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $7 = 0, $8 = 0;
 if (!(HEAP8[$__nm >> 0] & 1)) $7 = $__nm + 1 | 0; else $7 = HEAP32[$__nm + 8 >> 2] | 0;
 $8 = _catopen($7 | 0, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function _llvm_cttz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[cttz_i8 + (x & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[cttz_i8 + (x >> 8 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[cttz_i8 + (x >> 16 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[cttz_i8 + (x >>> 24) >> 0] | 0) + 24 | 0;
}

function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $$0 = 0, $$01 = 0;
 $$0 = $dest;
 $$01 = $low;
 while (1) {
  if (($$01 | 0) == ($high | 0)) break;
  HEAP8[$$0 >> 0] = HEAP8[$$01 >> 0] | 0;
  $$0 = $$0 + 1 | 0;
  $$01 = $$01 + 1 | 0;
 }
 return $high | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $5 = 0, $6 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 127]($this) | 0) == -1) $$0 = -1; else {
  $5 = $this + 12 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $6 + 4;
  $$0 = HEAP32[$6 >> 2] | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $5 = 0, $6 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 127]($this) | 0) == -1) $$0 = -1; else {
  $5 = $this + 12 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $6 + 1;
  $$0 = HEAPU8[$6 >> 0] | 0;
 }
 return $$0 | 0;
}

function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $$0 = 0, $$01 = 0;
 $$0 = $dest;
 $$01 = $low;
 while (1) {
  if (($$01 | 0) == ($high | 0)) break;
  HEAP32[$$0 >> 2] = HEAP8[$$01 >> 0];
  $$0 = $$0 + 4 | 0;
  $$01 = $$01 + 1 | 0;
 }
 return $high | 0;
}

function __ZNKSt3__119__iostream_category7messageEi($agg$result, $this, $ev) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 if (($ev | 0) != 1 & ($ev | 0) < 257) __ZNKSt3__112__do_message7messageEi($agg$result, $this, $ev); else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 47664, 35);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 47432;
 __ZNSt3__16localeC2Ev($this + 4 | 0);
 $1 = $this + 8 | 0;
 HEAP32[$1 + 0 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 47368;
 __ZNSt3__16localeC2Ev($this + 4 | 0);
 $1 = $this + 8 | 0;
 HEAP32[$1 + 0 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 return;
}

function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result, $this, $__lo, $__hi) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result, $__lo, $__hi);
 return;
}

function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result, $this, $__lo, $__hi) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result, $__lo, $__hi);
 return;
}

function dynCall_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 FUNCTION_TABLE_viiiiiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0, a10 | 0);
}

function __ZNSt3__118__libcpp_refstringC2EPKc($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $0 = 0, $2 = 0, $5 = 0;
 $0 = _strlen($msg | 0) | 0;
 $2 = __Znwj($0 + 13 | 0) | 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$2 + 4 >> 2] = $0;
 HEAP32[$2 + 8 >> 2] = 0;
 $5 = $2 + 12 | 0;
 _memcpy($5 | 0, $msg | 0, $0 + 1 | 0) | 0;
 HEAP32[$this >> 2] = $5;
 return;
}

function __ZNKSt3__16locale5__imp9use_facetEl($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $1 = 0;
 if (__ZNKSt3__16locale5__imp9has_facetEl($this, $id) | 0) return HEAP32[(HEAP32[$this + 8 >> 2] | 0) + ($id << 2) >> 2] | 0; else {
  $1 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($1);
  ___cxa_throw($1 | 0, 43832, 85);
 }
 return 0;
}

function __ZN12_GLOBAL__N_19HeapThunkD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 41592;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 __ZdlPv($this);
 return;
}

function _wmemcpy($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 var $$014 = 0, $$023 = 0, $$05 = 0;
 if (!$n) return $d | 0;
 $$014 = $n;
 $$023 = $s;
 $$05 = $d;
 while (1) {
  $$014 = $$014 + -1 | 0;
  HEAP32[$$05 >> 2] = HEAP32[$$023 >> 2];
  if (!$$014) break; else {
   $$023 = $$023 + 4 | 0;
   $$05 = $$05 + 4 | 0;
  }
 }
 return $d | 0;
}

function dynCall_viiiiiddiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 FUNCTION_TABLE_viiiiiddiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6, +a7, a8 | 0, a9 | 0, a10 | 0);
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function _sn_write($f, $s, $l) {
 $f = $f | 0;
 $s = $s | 0;
 $l = $l | 0;
 var $2 = 0, $3 = 0, $6 = 0, $l$ = 0;
 $2 = $f + 20 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $6 = (HEAP32[$f + 16 >> 2] | 0) - $3 | 0;
 $l$ = $6 >>> 0 > $l >>> 0 ? $l : $6;
 _memcpy($3 | 0, $s | 0, $l$ | 0) | 0;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + $l$;
 return $l | 0;
}

function __ZN12_GLOBAL__N_19HeapThunkD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 41592;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 return;
}

function __ZN12_GLOBAL__N_19HeapArrayD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 42008;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) return;
 $4 = $this + 12 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 return;
}

function _abort_message($format, $varargs) {
 $format = $format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $list = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $list = sp;
 HEAP32[$list >> 2] = $varargs;
 $0 = HEAP32[_stderr >> 2] | 0;
 _vfprintf($0 | 0, $format | 0, $list | 0) | 0;
 _fputc(10, $0 | 0) | 0;
 _abort();
}

function _jsonnet_destroy($vm) {
 $vm = $vm | 0;
 if (!$vm) return;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($vm + 24 | 0, HEAP32[$vm + 28 >> 2] | 0);
 __ZdlPv($vm);
 return;
}

function __ZNSt13runtime_errorC2EPKc($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $1 = 0, $3 = 0;
 HEAP32[$this >> 2] = 43536;
 __THREW__ = 0;
 invoke_vii(109, $this + 4 | 0, $msg | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___resumeException($3 | 0);
 } else return;
}

function __ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 HEAP32[$this >> 2] = 42292;
 $0 = $this + 108 | 0;
 HEAP32[$0 >> 2] = 42312;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + 8 | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($this);
 return;
}

function __ZNSt11logic_errorC2EPKc($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $1 = 0, $3 = 0;
 HEAP32[$this >> 2] = 43512;
 __THREW__ = 0;
 invoke_vii(109, $this + 4 | 0, $msg | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___resumeException($3 | 0);
 } else return;
}

function dynCall_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 FUNCTION_TABLE_viiiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}

function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $1 + -1;
 if (!$1) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 8 >> 2] & 255]($this);
  $$0 = 1;
 } else $$0 = 0;
 return $$0 | 0;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 HEAP32[$this >> 2] = 42292;
 $0 = $this + 108 | 0;
 HEAP32[$0 >> 2] = 42312;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + 8 | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 return;
}

function __ZNSt3__13mapI8BinaryOpiNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_iEEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$this + 4 >> 2] | 0);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 1064;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $__i$0$i$i = 0;
 $__i$0$i$i = 0;
 while (1) {
  if (($__i$0$i$i | 0) == 3) break;
  HEAP32[$agg$result + ($__i$0$i$i << 2) >> 2] = 0;
  $__i$0$i$i = $__i$0$i$i + 1 | 0;
 }
 return;
}

function dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}

function b8(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 p10 = p10 | 0;
 p11 = p11 | 0;
 p12 = p12 | 0;
 p13 = p13 | 0;
 p14 = p14 | 0;
 abort(8);
}

function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this, $code, $condition) {
 $this = $this | 0;
 $code = $code | 0;
 $condition = $condition | 0;
 var $5 = 0;
 if ((HEAP32[$code + 4 >> 2] | 0) == ($this | 0)) $5 = (HEAP32[$code >> 2] | 0) == ($condition | 0); else $5 = 0;
 return $5 | 0;
}

function __ZNKSt3__112__do_message7messageEi($agg$result, $this, $ev) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 var $0 = 0;
 $0 = _strerror($ev | 0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, $0, _strlen($0 | 0) | 0);
 return;
}

function _snprintf($s, $n, $fmt, $varargs) {
 $s = $s | 0;
 $n = $n | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsnprintf($s, $n, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($this, $__pos, $__s) {
 $this = $this | 0;
 $__pos = $__pos | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($this, $__pos, $__s, _strlen($__s | 0) | 0) | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 return __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, 1114111, 0) | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 return __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, 1114111, 0) | 0;
}

function dynCall_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 FUNCTION_TABLE_viiiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 1064;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 return;
}

function __ZNSt3__15ctypeIcE21__classic_upper_tableEv() {
 var $0 = 0, $1 = 0, $4 = 0;
 __THREW__ = 0;
 $0 = invoke_i(7) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else return HEAP32[$0 >> 2] | 0;
 return 0;
}

function __ZNSt3__15ctypeIcE21__classic_lower_tableEv() {
 var $0 = 0, $1 = 0, $4 = 0;
 __THREW__ = 0;
 $0 = invoke_i(8) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else return HEAP32[$0 >> 2] | 0;
 return 0;
}

function __ZNKSt3__16locale5__imp9has_facetEl($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $12 = 0, $3 = 0;
 $3 = HEAP32[$this + 8 >> 2] | 0;
 if ((HEAP32[$this + 12 >> 2] | 0) - $3 >> 2 >>> 0 > $id >>> 0) $12 = (HEAP32[$3 + ($id << 2) >> 2] | 0) != 0; else $12 = 0;
 return $12 | 0;
}

function __ZNSt3__15ctypeIcE13classic_tableEv() {
 var $0 = 0, $1 = 0, $4 = 0;
 __THREW__ = 0;
 $0 = invoke_i(6) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else return HEAP32[$0 >> 2] | 0;
 return 0;
}

function dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 return FUNCTION_TABLE_iiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0) | 0;
}

function _sscanf($s, $fmt, $varargs) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsscanf($s, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function _wmemset($d, $c, $n) {
 $d = $d | 0;
 $c = $c | 0;
 $n = $n | 0;
 var $$012 = 0, $$03 = 0;
 if (!$n) return $d | 0;
 $$012 = $n;
 $$03 = $d;
 while (1) {
  $$012 = $$012 + -1 | 0;
  HEAP32[$$03 >> 2] = $c;
  if (!$$012) break; else $$03 = $$03 + 4 | 0;
 }
 return $d | 0;
}

function _bitshift64Ashr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = (high | 0) < 0 ? -1 : 0;
 return high >> bits - 32 | 0;
}

function ___cxa_get_globals_fast() {
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_once(43128, 6) | 0)) {
  $3 = _pthread_getspecific(HEAP32[10780] | 0) | 0;
  STACKTOP = sp;
  return $3 | 0;
 } else _abort_message(43136, sp);
 return 0;
}

function dynCall_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 FUNCTION_TABLE_viiiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}

function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $2 = 0;
 $1 = (HEAP32[$this >> 2] | 0) + -4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = $2 + -1;
 if (($2 + -1 | 0) < 0) __ZdlPv((HEAP32[$this >> 2] | 0) + -12 | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(49952) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(49896) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(49816) | 0);
 return;
}

function dynCall_viiiiiid(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 FUNCTION_TABLE_viiiiiid[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}

function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(49520) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(49488) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(49256) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(49104) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(5e4) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(48992) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(48896) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(48832) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(48712) | 0);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $end = $end | 0;
 $mx = $mx | 0;
 var $3 = 0;
 $3 = $end - $frm | 0;
 return ($3 >>> 0 < $mx >>> 0 ? $3 : $mx) | 0;
}

function __ZNKSt3__15ctypeIwE5do_isEtw($this, $m, $c) {
 $this = $this | 0;
 $m = $m | 0;
 $c = $c | 0;
 var $5 = 0;
 if ($c >>> 0 < 128) $5 = (HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($c << 1) >> 1] & $m) << 16 >> 16 != 0; else $5 = 0;
 return $5 | 0;
}

function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 _free($p);
 if (!(_pthread_setspecific(HEAP32[10780] | 0, 0) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(43248, sp);
}

function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob | 0;
 var $$0 = 0, $2 = 0;
 $2 = HEAP32[$iob + 4 >> 2] & 74;
 if (($2 | 0) == 64) $$0 = 8; else if (($2 | 0) == 8) $$0 = 16; else if (!$2) $$0 = 0; else $$0 = 10;
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $__s, _strlen($__s | 0) | 0) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this, $__s, _strlen($__s | 0) | 0) | 0;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $5 = 0;
 if ($c << 24 >> 24 > -1) $5 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($c << 24 >> 24 << 2) >> 2] & 255; else $5 = $c;
 return $5 | 0;
}

function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this, $__s, _wcslen($__s) | 0) | 0;
}

function __ZNKSt3__15ctypeIcE10do_toupperEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $5 = 0;
 if ($c << 24 >> 24 > -1) $5 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + (($c & 255) << 2) >> 2] & 255; else $5 = $c;
 return $5 | 0;
}

function copyTempFloat(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
}

function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result, 50488, _wcslen(50488) | 0);
 return;
}

function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result, 50456, _wcslen(50456) | 0);
 return;
}

function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}

function __ZNKSt3__15ctypeIwE10do_toupperEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $3 = 0;
 if ($c >>> 0 < 128) $3 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + ($c << 2) >> 2] | 0; else $3 = $c;
 return $3 | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $3 = 0;
 if ($c >>> 0 < 128) $3 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($c << 2) >> 2] | 0; else $3 = $c;
 return $3 | 0;
}

function dynCall_viiiiid(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 FUNCTION_TABLE_viiiiid[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}

function __ZNKSt3__114error_category23default_error_conditionEi($agg$result, $this, $ev) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 HEAP32[$agg$result >> 2] = $ev;
 HEAP32[$agg$result + 4 >> 2] = $this;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result, 1, 45);
 return;
}

function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 16 | 0;
 HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | 1;
 if (!(HEAP32[$this + 20 >> 2] & 1)) return; else ___cxa_rethrow();
}

function b6(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 p10 = p10 | 0;
 abort(6);
 return 0;
}

function __ZNSt3__117iostream_categoryEv() {
 if (!(HEAP8[47712] | 0)) if (___cxa_guard_acquire(47712) | 0) {
  HEAP32[11926] = 48488;
  ___cxa_atexit(113, 47704, ___dso_handle | 0) | 0;
  ___cxa_guard_release(47712);
 }
 return 47704;
}

function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $this + 16 | 0);
 return;
}

function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $this + 12 | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(50336) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(50344) | 0);
 return;
}

function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 50480, 5);
 return;
}

function __ZN11StaticErrorD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 28 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(50280) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(50272) | 0);
 return;
}

function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 50448, 4);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function dynCall_iiiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return FUNCTION_TABLE_iiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}

function __ZNKSt3__16locale9use_facetERNS0_2idE($this, $x) {
 $this = $this | 0;
 $x = $x | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 return __ZNKSt3__16locale5__imp9use_facetEl($0, __ZNSt3__16locale2id5__getEv($x) | 0) | 0;
}

function __ZNKSt3__16locale9has_facetERNS0_2idE($this, $x) {
 $this = $this | 0;
 $x = $x | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 return __ZNKSt3__16locale5__imp9has_facetEl($0, __ZNSt3__16locale2id5__getEv($x) | 0) | 0;
}

function runPostSets() {}
function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (tempRet0 = h, a - c >>> 0 | 0) | 0;
}

function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(49776) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(49712) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(49648) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(49584) | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_key_create(43120, 186) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(43192, sp);
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(50360) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(50352) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(50080) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(50040) | 0);
 return;
}

function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}

function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(48640) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(48600) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(50200) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(50208) | 0);
 return;
}

function _strcpy(pdest, psrc) {
 pdest = pdest | 0;
 psrc = psrc | 0;
 var i = 0;
 do {
  HEAP8[pdest + i >> 0] = HEAP8[psrc + i >> 0];
  i = i + 1 | 0;
 } while (HEAP8[psrc + (i - 1) >> 0] | 0);
 return pdest | 0;
}

function __ZN12_GLOBAL__N_110HeapStringD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 41904;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__16locale5__imp11make_globalEv() {
 var $1 = 0;
 $1 = HEAP32[(__ZNSt3__16locale7classicEv() | 0) >> 2] | 0;
 HEAP32[12542] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return 50168;
}

function _isxdigit($c) {
 $c = $c | 0;
 var $3 = 0, $4 = 0;
 if (($c + -48 | 0) >>> 0 < 10) {
  $4 = 1;
  $3 = $4 & 1;
  return $3 | 0;
 }
 $4 = (($c | 32) + -97 | 0) >>> 0 < 6;
 $3 = $4 & 1;
 return $3 | 0;
}

function b17(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 abort(17);
}

function _wcslen($s) {
 $s = $s | 0;
 var $$0 = 0, $$0$lcssa = 0;
 $$0 = $s;
 while (1) if (!(HEAP32[$$0 >> 2] | 0)) {
  $$0$lcssa = $$0;
  break;
 } else $$0 = $$0 + 4 | 0;
 return $$0$lcssa - $s >> 2 | 0;
}

function __ZNSt3__16localeC2ERKS0_($this, $l) {
 $this = $this | 0;
 $l = $l | 0;
 var $0 = 0;
 $0 = HEAP32[$l >> 2] | 0;
 HEAP32[$this >> 2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}

function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0;
 $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
 return $1$0 | 0;
}

function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 12) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 4) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 4) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 8) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 8) | 0);
 return;
}

function dynCall_iiiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return FUNCTION_TABLE_iiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}

function b12(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 p6 = +p6;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 abort(12);
}

function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 50224;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if ($1) if (HEAP8[$this + 12 >> 0] | 0) __ZdaPv($1);
 return;
}

function __ZN12_GLOBAL__N_110HeapStringD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 41904;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 8 | 0);
 return;
}

function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}

function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 50416;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 16 | 0);
 return;
}

function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 50376;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 12 | 0);
 return;
}

function b16(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 abort(16);
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 47432;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 47368;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function dynCall_viiid(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = +a4;
 FUNCTION_TABLE_viiid[index & 1](a1 | 0, a2 | 0, a3 | 0, +a4);
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function b26(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(26);
 return 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this | 0;
 if (HEAP8[$this >> 0] & 1) __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this | 0;
 if (HEAP8[$this >> 0] & 1) __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 return;
}

function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__18ios_base6getlocEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__16localeC2ERKS0_($agg$result, $this + 28 | 0);
 return;
}

function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this + -8 | 0);
 return;
}

function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this | 0;
 if ($this) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 return;
}

function ___cxa_is_pointer_type($type) {
 $type = $type | 0;
 var $3 = 0;
 if (!$type) $3 = 0; else $3 = (___dynamic_cast($type, 43888, 44056, 0) | 0) != 0;
 return $3 & 1 | 0;
}

function _strtoull_l($s, $p, $base, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 $loc = $loc | 0;
 var $0 = 0;
 $0 = _strtoull($s, $p, $base) | 0;
 return $0 | 0;
}

function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 63](a1 | 0, a2 | 0, a3 | 0) | 0;
}

function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[12548] | 0;
 HEAP32[12548] = $0 + 1;
 HEAP32[$this + 4 >> 2] = $0 + 1;
 return;
}

function __ZNKSt3__15ctypeIwE9do_narrowEwc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c >>> 0 < 128 ? $c & 255 : $dfault) | 0;
}

function _strtoll_l($s, $p, $base, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 $loc = $loc | 0;
 var $0 = 0;
 $0 = _strtoll($s, $p, $base) | 0;
 return $0 | 0;
}

function __ZNKSt3__15ctypeIcE9do_narrowEcc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c << 24 >> 24 > -1 ? $c : $dfault) | 0;
}

function b10(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(10);
}

function dynCall_diii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return +FUNCTION_TABLE_diii[index & 3](a1 | 0, a2 | 0, a3 | 0);
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 47432;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 47368;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
 return;
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 return;
}

function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 31](a1 | 0, a2 | 0, a3 | 0);
}

function __ZNKSt3__18messagesIwE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 _catclose((($__c | 0) == -1 ? -1 : $__c << 1) | 0) | 0;
 return;
}

function __ZNKSt3__18messagesIcE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 _catclose((($__c | 0) == -1 ? -1 : $__c << 1) | 0) | 0;
 return;
}

function b0(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(0);
 return 0;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 12 | 0);
 __ZdlPv($this);
 return;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return ret | 0;
}

function __ZNSt3__111__stdoutbufIwED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__111__stdoutbufIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__stdinbufIwED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__stdinbufIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 43536;
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this + 4 | 0);
 return;
}

function ___assert_fail__wrapper(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 ___assert_fail(p0 | 0, p1 | 0, p2 | 0, p3 | 0);
}

function __ZNSt11logic_errorD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 43512;
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this + 4 | 0);
 return;
}

function _catgets__wrapper(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 return _catgets(p0 | 0, p1 | 0, p2 | 0, p3 | 0) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}

function b14(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(14);
}

function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + -8 + 12 | 0);
 return;
}

function __ZSt17__throw_bad_allocv() {
 var $0 = 0;
 $0 = ___cxa_allocate_exception(4) | 0;
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw($0 | 0, 43360, 77);
}

function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}

function b15(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = +p6;
 abort(15);
}

function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 63](a1 | 0, a2 | 0) | 0;
}

function __ZNSt3__16localeD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$this >> 2] | 0) | 0;
 return;
}

function _wctomb($s, $wc) {
 $s = $s | 0;
 $wc = $wc | 0;
 var $$0 = 0;
 if (!$s) $$0 = 0; else $$0 = _wcrtomb($s, $wc, 0) | 0;
 return $$0 | 0;
}

function __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}

function _strlen(ptr) {
 ptr = ptr | 0;
 var curr = 0;
 curr = ptr;
 while (HEAP8[curr >> 0] | 0) curr = curr + 1 | 0;
 return curr - ptr | 0;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 12 | 0);
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if (!__THREW__) {
  __THREW__ = threw;
  threwValue = value;
 }
}

function dynCall_iid(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 return FUNCTION_TABLE_iid[index & 1](a1 | 0, +a2) | 0;
}

function _mbrlen($s, $n, $st) {
 $s = $s | 0;
 $n = $n | 0;
 $st = $st | 0;
 return _mbrtowc(0, $s, $n, ($st | 0) != 0 ? $st : 42920) | 0;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZNSt3__110__stdinbufIwE9underflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb($this, 0) | 0;
}

function __ZNSt3__110__stdinbufIcE9underflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb($this, 0) | 0;
}

function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 127](a1 | 0, a2 | 0);
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __GLOBAL__sub_I_iostream_cpp() {
 __ZNSt3__18ios_base4InitC2Ev(0);
 ___cxa_atexit(187, 46512, ___dso_handle | 0) | 0;
 return;
}

function b11(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(11);
}

function _isspace($c) {
 $c = $c | 0;
 var $4 = 0;
 if (($c | 0) == 32) $4 = 1; else $4 = ($c + -9 | 0) >>> 0 < 5;
 return $4 & 1 | 0;
}

function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__112system_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function _newlocale__wrapper(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 return _newlocale(p0 | 0, p1 | 0, p2 | 0) | 0;
}

function __ZNSt3__110__stdinbufIwE5uflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb($this, 1) | 0;
}

function __ZNSt3__110__stdinbufIcE5uflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb($this, 1) | 0;
}

function _mbsinit($st) {
 $st = $st | 0;
 var $4 = 0;
 if (!$st) $4 = 1; else $4 = (HEAP32[$st >> 2] | 0) == 0;
 return $4 & 1 | 0;
}

function __ZNSt3__16locale5__imp12make_classicEv() {
 __ZNSt3__16locale5__impC2Ej(54552, 1);
 HEAP32[12536] = 54552;
 return 50144;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function b9(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 abort(9);
}

function _do_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 return ___string_read($f, $buf, $len) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}

function dynCall_vid(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 FUNCTION_TABLE_vid[index & 1](a1 | 0, +a2);
}

function b19(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(19);
 return 0;
}

function __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}

function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}

function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this | 0;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}

function ___cxa_throw__wrapper(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 ___cxa_throw(p0 | 0, p1 | 0, p2 | 0);
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev($this, $vtt) {
 $this = $this | 0;
 $vtt = $vtt | 0;
 return;
}

function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this | 0;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev($this, $vtt) {
 $this = $this | 0;
 $vtt = $vtt | 0;
 return;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt12out_of_rangeD0Ev($this) {
 $this = $this | 0;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt12length_errorD0Ev($this) {
 $this = $this | 0;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt11logic_errorD0Ev($this) {
 $this = $this | 0;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 127](a1 | 0) | 0;
}

function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 12 >> 2] | 0;
}

function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 8 >> 2] | 0;
}

function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__112system_errorD2Ev($this);
 return;
}

function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 9 >> 0] | 0;
}

function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 8 >> 0] | 0;
}

function __ZSt15get_new_handlerv() {
 var $0 = 0;
 $0 = HEAP32[10868] | 0;
 HEAP32[10868] = $0 + 0;
 return $0 | 0;
}

function __ZNKSt3__15ctypeIwE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c << 24 >> 24 | 0;
}

function b1(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(1);
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv($this) {
 $this = $this | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this | 0;
 __ZNSt13runtime_errorD2Ev($this);
 return;
}

function b22(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(22);
 return 0;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 255](a1 | 0);
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _pthread_cond_broadcast__wrapper(p0) {
 p0 = p0 | 0;
 return _pthread_cond_broadcast(p0 | 0) | 0;
}

function ___clang_call_terminate($0) {
 $0 = $0 | 0;
 ___cxa_begin_catch($0 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZN12_GLOBAL__N_118HeapExtendedObjectD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}

function __ZNKSt3__15ctypeIcE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c | 0;
}

function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4 >> 2] | 0;
}

function __ZN12_GLOBAL__N_115HeapSuperObjectD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _pthread_mutex_unlock__wrapper(p0) {
 p0 = p0 | 0;
 return _pthread_mutex_unlock(p0 | 0) | 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt11logic_error4whatEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4 >> 2] | 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function b27(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(27);
}

function _pthread_mutex_lock__wrapper(p0) {
 p0 = p0 | 0;
 return _pthread_mutex_lock(p0 | 0) | 0;
}

function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZL12memory_panicv() {
 _fwrite(42576, 49, 1, HEAP32[_stderr >> 2] | 0) | 0;
 _abort();
}

function _isdigit_l($c, $l) {
 $c = $c | 0;
 $l = $l | 0;
 return ($c + -48 | 0) >>> 0 < 10 | 0;
}

function __ZNSt9bad_allocC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 43312;
 return;
}

function b23(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = +p3;
 abort(23);
}

function __ZNSt8bad_castC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 43760;
 return;
}

function b20(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(20);
 return 0.0;
}

function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this | 0;
 return 47648;
}

function dynCall_i(index) {
 index = index | 0;
 return FUNCTION_TABLE_i[index & 15]() | 0;
}

function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this | 0;
 return;
}

function b7(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(7);
 return 0;
}

function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _isxdigit_l($c, $l) {
 $c = $c | 0;
 $l = $l | 0;
 return _isxdigit($c) | 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt8bad_castD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _copysignl($x, $y) {
 $x = +$x;
 $y = +$y;
 return +(+_copysign($x, $y));
}

function _scalbnl($x, $n) {
 $x = +$x;
 $n = $n | 0;
 return +(+_scalbn($x, $n));
}

function __ZN12_GLOBAL__N_110HeapEntityD2Ev($this) {
 $this = $this | 0;
 return;
}

function b24(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(24);
}

function _uselocale__wrapper(p0) {
 p0 = p0 | 0;
 return _uselocale(p0 | 0) | 0;
}

function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this | 0;
 return;
}

function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 7]();
}

function _frexpl($x, $e) {
 $x = +$x;
 $e = $e | 0;
 return +(+_frexp($x, $e));
}

function _strerror__wrapper(p0) {
 p0 = p0 | 0;
 return _strerror(p0 | 0) | 0;
}

function ___ctype_toupper_loc__wrapper() {
 return ___ctype_toupper_loc() | 0;
}

function ___ctype_tolower_loc__wrapper() {
 return ___ctype_tolower_loc() | 0;
}

function __ZNSt3__114error_categoryD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this | 0;
 return 43328;
}

function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this | 0;
 return 43776;
}

function _fmodl($x, $y) {
 $x = +$x;
 $y = +$y;
 return +(+_fmod($x, $y));
}

function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this | 0;
 return;
}

function b18(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(18);
 return 0;
}

function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this | 0;
 return;
}

function _freelocale__wrapper(p0) {
 p0 = p0 | 0;
 _freelocale(p0 | 0);
}

function __Znaj($size) {
 $size = $size | 0;
 return __Znwj($size) | 0;
}

function b13(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(13);
 return 0;
}

function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}

function __ZdaPv($ptr) {
 $ptr = $ptr | 0;
 __ZdlPv($ptr);
 return;
}

function __ZNSt9type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9exceptionD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD2Ev($this) {
 $this = $this | 0;
 return;
}

function ___ctype_b_loc__wrapper() {
 return ___ctype_b_loc() | 0;
}

function __ZNSt8bad_castD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZdlPv($ptr) {
 $ptr = $ptr | 0;
 _free($ptr);
 return;
}

function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0 | 0;
 return;
}

function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}

function b4(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(4);
}

function ___cxa_end_catch__wrapper() {
 ___cxa_end_catch();
}

function b2(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(2);
}

function ___cxa_rethrow__wrapper() {
 ___cxa_rethrow();
}

function b5(p0) {
 p0 = p0 | 0;
 abort(5);
 return 0;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b3(p0) {
 p0 = p0 | 0;
 abort(3);
}

function b21() {
 abort(21);
 return 0;
}

function _abort__wrapper() {
 _abort();
}

function b25() {
 abort(25);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0];
var FUNCTION_TABLE_viiiii = [b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZN12_GLOBAL__N_16Parser14parseCommaListERNSt3__16vectorIP3ASTNS1_9allocatorIS4_EEEEN5Token4KindERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEEj,__ZN12_GLOBAL__N_16Parser20parseObjectRemainderERP3ASTRK5Tokenj,__ZN12_GLOBAL__N_111Interpreter12manifestJsonERK13LocationRangebRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZN12_GLOBAL__N_111Interpreter19validateBuiltinArgsERK13LocationRangemRKNSt3__16vectorINS_5ValueENS4_9allocatorIS6_EEEENS5_INS6_4TypeENS7_ISC_EEEE,__ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectERjjb,b1,b1,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_vid = [b2,__Z22jsonnet_unparse_numberd];
var FUNCTION_TABLE_vi = [b3,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZN13LiteralStringD2Ev,__ZN13LiteralStringD0Ev,__ZN3ASTD2Ev,__ZN3ASTD0Ev,__ZN15BuiltinFunctionD2Ev,__ZN15BuiltinFunctionD0Ev
,__ZN5LocalD2Ev,__ZN5LocalD0Ev,__ZN5UnaryD0Ev,__ZN6BinaryD0Ev,__ZN5ApplyD2Ev,__ZN5ApplyD0Ev,__ZN5IndexD0Ev,__ZN3VarD0Ev,__ZN5SuperD0Ev,__ZN8FunctionD2Ev,__ZN8FunctionD0Ev,__ZN17ObjectCompositionD0Ev,__ZN6ObjectD2Ev,__ZN6ObjectD0Ev,__ZN4SelfD0Ev,__ZN9ImportstrD2Ev,__ZN9ImportstrD0Ev,__ZN6ImportD2Ev,__ZN6ImportD0Ev,__ZN14LiteralBooleanD0Ev,__ZN13LiteralNumberD0Ev,__ZN5ArrayD2Ev,__ZN5ArrayD0Ev,__ZN11ConditionalD0Ev,__ZN11LiteralNullD0Ev,__ZN5ErrorD0Ev,__ZN12_GLOBAL__N_15Stack4dumpEv,__ZN12_GLOBAL__N_123HeapComprehensionObjectD2Ev,__ZN12_GLOBAL__N_123HeapComprehensionObjectD0Ev,__ZN12_GLOBAL__N_19HeapThunkD2Ev
,__ZN12_GLOBAL__N_19HeapThunkD0Ev,__ZN12_GLOBAL__N_110HeapEntityD2Ev,__ZN12_GLOBAL__N_118HeapExtendedObjectD0Ev,__ZN12_GLOBAL__N_115HeapSuperObjectD0Ev,__ZN12_GLOBAL__N_116HeapSimpleObjectD2Ev,__ZN12_GLOBAL__N_116HeapSimpleObjectD0Ev,__ZN12_GLOBAL__N_110HeapStringD2Ev,__ZN12_GLOBAL__N_110HeapStringD0Ev,__ZN12_GLOBAL__N_111HeapClosureD2Ev,__ZN12_GLOBAL__N_111HeapClosureD0Ev,__ZN12_GLOBAL__N_19HeapArrayD2Ev,__ZN12_GLOBAL__N_19HeapArrayD0Ev,__ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,__ZNSt12length_errorD0Ev,__ZNSt12out_of_rangeD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev
,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__111__stdoutbufIwED0Ev,__ZNSt3__110__stdinbufIwED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__111__stdoutbufIcED0Ev,__ZNSt3__110__stdinbufIcED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__18ios_base7failureD2Ev,__ZNSt3__18ios_base7failureD0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__114error_categoryD2Ev,__ZNSt3__119__iostream_categoryD0Ev,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,__ZNSt3__17collateIwED2Ev
,__ZNSt3__17collateIwED0Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev
,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZNSt3__112system_errorD2Ev,__ZNSt3__112system_errorD0Ev,__ZN11StaticErrorD2Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev,__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
,__ZNSt3__13mapI8BinaryOpiNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_iEEEEED2Ev,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev,__ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv,__ZN12RuntimeErrorD2Ev,__Z23jsonnet_static_analysisP3AST,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC2Ev,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,__ZNSt3__18ios_base4InitD2Ev,_freelocale__wrapper,__ZNSt3__112__do_nothingEPv,__ZNSt3__121__throw_runtime_errorEPKc,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,___cxx_global_array_dtor108,___cxx_global_array_dtor93,___cxx_global_array_dtor69,___cxx_global_array_dtor45,___cxx_global_array_dtor42,___cxx_global_array_dtor,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev,_free,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_vii = [b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv
,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__18messagesIcE8do_closeEi,__ZNKSt3__18messagesIwE8do_closeEi,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_,__ZNSt3__18ios_base4initEPv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE,__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_,__ZNKSt3__18ios_base6getlocEv,__ZNSt3__18ios_base5clearEj,__Z20jsonnet_builtin_declm,__ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_,__ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_,__ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK5Token,__ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEEC2ERKS6_,__ZL7unparsePK3AST,__Z22jsonnet_unparse_escapeRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_,__ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_,__ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEEC2ERKS5_
,__ZL6appendRNSt3__13setIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEEERKS8_,__ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST,__ZN12_GLOBAL__N_18type_strENS_5Value4TypeE,__ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE,__ZN12_GLOBAL__N_15Stack4markERNS_4HeapE,__ZL10bop_string8BinaryOp,__ZL10uop_string7UnaryOp,__ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_,__ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEEC2ERKS4_,__ZN12_GLOBAL__N_14Heap15addIfHeapEntityEPNS_10HeapEntityERNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE,__Z23jsonnet_unparse_jsonnetPK3AST,_abort_message,__ZNSt11logic_errorC2EPKc,__ZNSt3__18ios_base16__call_callbacksENS0_5eventE,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_,__ZNSt13runtime_errorC2EPKc,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej,__ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_,__ZNSt3__17codecvtIwc11__mbstate_tEC2Ej,__ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_
,__ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj,__ZNSt3__118__libcpp_refstringC2EPKc,__ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_ii = [b5,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9underflowEv,__ZNKSt9bad_alloc4whatEv,__ZNKSt11logic_error4whatEv,__ZNKSt13runtime_error4whatEv,__ZNKSt8bad_cast4whatEv,__ZNSt3__111__stdoutbufIwE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__110__stdinbufIwE9underflowEv,__ZNSt3__110__stdinbufIwE5uflowEv,__ZNSt3__111__stdoutbufIcE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__110__stdinbufIcE9underflowEv,__ZNSt3__110__stdinbufIcE5uflowEv,__ZNKSt3__119__iostream_category4nameEv,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv
,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv
,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,__Znwj,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv,__ZN5Token8toStringENS_4KindE,_strerror__wrapper,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv,_uselocale__wrapper,_wcslen,_pthread_mutex_unlock__wrapper,_pthread_mutex_lock__wrapper,_pthread_cond_broadcast__wrapper,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiiiiiiiiiii = [b6,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_,b6];
var FUNCTION_TABLE_iiii = [b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE6setbufEPci,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,_sn_write,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,__ZNSt3__111__stdoutbufIwE6xsputnEPKwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,__ZNSt3__111__stdoutbufIcE6xsputnEPKci,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,__ZNKSt3__17collateIcE7do_hashEPKcS3_,__ZNKSt3__17collateIwE7do_hashEPKwS3_,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__15ctypeIcE9do_narrowEcc,__ZNKSt3__15ctypeIwE5do_isEtw,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__15ctypeIwE9do_narrowEwc,__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j,__ZL8do_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc,__ZN9Allocator4makeI13LiteralStringJRK13LocationRangeRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEEEPT_DpOT0_,__ZN9Allocator4makeI13LiteralStringJRK13LocationRangeRA9_KcEEEPT_DpOT0_
,__ZN12_GLOBAL__N_16Parser5parseEij,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc,__ZN9Allocator4makeI13LiteralStringJ13LocationRangeRNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPT_DpOT0_,__ZN9Allocator4makeI13LiteralStringJR13LocationRangeRA4_KcEEEPT_DpOT0_,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,__ZN9Allocator4makeI13LiteralStringJR13LocationRangeRA10_KcEEEPT_DpOT0_,__ZN9Allocator4makeI13LiteralStringJR13LocationRangeRNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEEPT_DpOT0_,__Z13jsonnet_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignINS_19istreambuf_iteratorIcS2_EEEENS_9enable_ifIXaasr19__is_input_iteratorIT_EE5valuentsr21__is_forward_iteratorISA_EE5valueERS5_E4typeESA_SA_,_do_read,_newlocale__wrapper,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,_wcrtomb,_mbtowc,_mbrlen,_vasprintf,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_viiiiiiiiiiiiiii = [b8,__ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i,__ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i,b8];
var FUNCTION_TABLE_viiiiid = [b9,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b9,b9,b9];
var FUNCTION_TABLE_viiiiiiii = [b10,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b10];
var FUNCTION_TABLE_viiiiii = [b11,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZNSt3__14listIN6Object5FieldENS_9allocatorIS2_EEE6insertINS_21__list_const_iteratorIS2_PvEEEENS_15__list_iteratorIS2_S8_EES9_T_SC_PNS_9enable_ifIXsr19__is_input_iteratorISC_EE5valueEvE4typeE,__ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE,__ZN12_GLOBAL__N_111Interpreter10makeObjectINS_23HeapComprehensionObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEEP3ASTS7_SH_EEENS_5ValueEDpT0_,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11];
var FUNCTION_TABLE_viiiiiddiii = [b12,__Z24jsonnet_vm_execute_multiP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE5VmExtNS4_4lessISB_EENS9_INS4_4pairIKSB_SC_EEEEEEjddPFPcPvPKcSP_PSM_PiESN_b,__Z18jsonnet_vm_executeP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE5VmExtNS4_4lessISB_EENS9_INS4_4pairIKSB_SC_EEEEEEjddPFPcPvPKcSP_PSM_PiESN_b,b12];
var FUNCTION_TABLE_iid = [b13,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd];
var FUNCTION_TABLE_viiiiiii = [b14,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,__ZN12_GLOBAL__N_111HeapClosureC2ERKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEPNS_10HeapObjectEjRKNS1_6vectorIS5_NSA_IS5_EEEEPK3ASTm,__ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE,__ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE,__ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14];
var FUNCTION_TABLE_viiiiiid = [b15,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b15];
var FUNCTION_TABLE_viiiiiiiii = [b16,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b16];
var FUNCTION_TABLE_viiiiiiiiii = [b17,__ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri,__ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri,__ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri,__ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri,b17,b17,b17];
var FUNCTION_TABLE_iii = [b18,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__111__stdoutbufIwE8overflowEj,__ZNSt3__110__stdinbufIwE9pbackfailEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__111__stdoutbufIcE8overflowEi,__ZNSt3__110__stdinbufIcE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNKSt3__15ctypeIcE10do_toupperEc,__ZNKSt3__15ctypeIcE10do_tolowerEc,__ZNKSt3__15ctypeIcE8do_widenEc,__ZNKSt3__15ctypeIwE10do_toupperEw,__ZNKSt3__15ctypeIwE10do_tolowerEw,__ZNKSt3__15ctypeIwE8do_widenEc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj,__ZNKSt3__16locale9use_facetERNS0_2idE,__ZN9Allocator14makeIdentifierERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc,__ZN12_GLOBAL__N_16Parser13parseTerminalEj
,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEixERSA_,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEEixERSB_,__ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKN12_GLOBAL__N_111Interpreter16ImportCacheValueENS_4lessIS8_EENS5_INS1_IKS8_SD_EEEEEixERSG_,__ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK13LocationRange,__ZNKSt3__16locale9has_facetERNS0_2idE,_isxdigit_l,_isdigit_l,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18];
var FUNCTION_TABLE_iiiiii = [b19,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZN9Allocator4makeI5ApplyJ13LocationRangeRP3ASTRNSt3__16vectorIS4_NS6_9allocatorIS4_EEEERbEEEPT_DpOT0_,__ZN9Allocator4makeI5ApplyJ13LocationRangeRP3ASTRNSt3__16vectorIS4_NS6_9allocatorIS4_EEEEbEEEPT_DpOT0_,__ZL23default_import_callbackPvPKcS1_PPcPi,__ZL28jsonnet_evaluate_snippet_auxP9JsonnetVmPKcS2_Pib,__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj,_wcsnrtombs,_mbsnrtowcs,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19];
var FUNCTION_TABLE_diii = [b20,__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj];
var FUNCTION_TABLE_i = [b21,___cxa_get_globals_fast,__ZNSt3__16__clocEv,__ZNSt3__16locale5__imp12make_classicEv,__ZNSt3__16locale5__imp11make_globalEv,__ZNSt3__16locale8__globalEv,___ctype_b_loc__wrapper,___ctype_toupper_loc__wrapper,___ctype_tolower_loc__wrapper,b21,b21,b21,b21,b21,b21,b21];
var FUNCTION_TABLE_iiiii = [b22,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,__ZN9Allocator4makeI15BuiltinFunctionJRK13LocationRangeRmRNSt3__16vectorIPK10IdentifierNS6_9allocatorISA_EEEEEEEPT_DpOT0_,__ZN9Allocator4makeI8FunctionJ13LocationRangeRNSt3__16vectorIPK10IdentifierNS3_9allocatorIS7_EEEERP3ASTEEEPT_DpOT0_,__ZN9Allocator4makeI8FunctionJR13LocationRangeRNSt3__16vectorIPK10IdentifierNS4_9allocatorIS8_EEEERP3ASTEEEPT_DpOT0_,__ZN12_GLOBAL__N_111Interpreter11objectIndexERK13LocationRangePNS_10HeapObjectEPK10Identifier,__ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_,__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z,__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz,_mbsrtowcs,_catgets__wrapper,_mbrtowc,__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji,__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22];
var FUNCTION_TABLE_viiid = [b23,__ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged];
var FUNCTION_TABLE_viii = [b24,__ZNKSt3__114error_category23default_error_conditionEi,__ZNKSt3__119__iostream_category7messageEi,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj,___cxa_throw__wrapper,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc,__ZN12_GLOBAL__N_16Parser9parseBindERNSt3__13mapIPK10IdentifierP3ASTNS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEj,__ZN12_GLOBAL__N_16Parser10unexpectedERK5TokenRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZN6ObjectC2ERK13LocationRangeRKNSt3__14listINS_5FieldENS3_9allocatorIS5_EEEE,__ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_,__ZN12_GLOBAL__N_111Interpreter14manifestStringERK13LocationRange,__ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectEb,__ZN12_GLOBAL__N_111Interpreter9makeArrayERKNSt3__16vectorIPNS_9HeapThunkENS1_9allocatorIS4_EEEE,__ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_,__ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE,__ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj,__ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24];
var FUNCTION_TABLE_v = [b25,__ZL25default_terminate_handlerv,___cxa_end_catch__wrapper,_abort__wrapper,___cxa_rethrow__wrapper,__ZL12memory_panicv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,__ZSt17__throw_bad_allocv];
var FUNCTION_TABLE_iiiiiiiii = [b26,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b26,b26,b26,b26,b26,b26,b26];
var FUNCTION_TABLE_viiii = [b27,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__17collateIcE12do_transformEPKcS3_,__ZNKSt3__17collateIwE12do_transformEPKwS3_,__Z10lex_numberRPKcRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERK8Location,___assert_fail__wrapper,__ZN5LocalC2ERK13LocationRangeRKNSt3__13mapIPK10IdentifierP3ASTNS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEES9_,__ZN12_GLOBAL__N_16Parser9popExpectEN5Token4KindEPKc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj,__ZN12_GLOBAL__N_16Parser19parseIdentifierListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj,__ZL15static_analysisP3ASTbRKNSt3__13setIPK10IdentifierNS1_4lessIS5_EENS1_9allocatorIS5_EEEE,__ZN12_GLOBAL__N_15Stack9makeErrorERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE5VmExtEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE15__insert_uniqueIRKNS_4pairIKS7_S8_EEEENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEENS_21__tree_const_iteratorIS9_SQ_iEEOT_,__ZN12_GLOBAL__N_111Interpreter10makeObjectINS_16HeapSimpleObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEENS4_IS7_NS2_5FieldESB_NSC_INSD_ISE_SI_EEEEEEEEENS_5ValueEDpT0_,b27,b27,b27,b27,b27,b27,b27,b27,b27
,b27,b27,b27];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, _jsonnet_make: _jsonnet_make, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _jsonnet_realloc: _jsonnet_realloc, _memcpy: _memcpy, _strlen: _strlen, _jsonnet_evaluate_snippet: _jsonnet_evaluate_snippet, _bitshift64Lshr: _bitshift64Lshr, _jsonnet_destroy: _jsonnet_destroy, _strcpy: _strcpy, _bitshift64Shl: _bitshift64Shl, __GLOBAL__sub_I_parser_cpp: __GLOBAL__sub_I_parser_cpp, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_vid: dynCall_vid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_iiiiiiiiiiii: dynCall_iiiiiiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiiiiiiiiiiiii: dynCall_viiiiiiiiiiiiiii, dynCall_viiiiid: dynCall_viiiiid, dynCall_viiiiiiii: dynCall_viiiiiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiiiddiii: dynCall_viiiiiddiii, dynCall_iid: dynCall_iid, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiid: dynCall_viiiiiid, dynCall_viiiiiiiii: dynCall_viiiiiiiii, dynCall_viiiiiiiiii: dynCall_viiiiiiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_diii: dynCall_diii, dynCall_i: dynCall_i, dynCall_iiiii: dynCall_iiiii, dynCall_viiid: dynCall_viiid, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _jsonnet_make = Module["_jsonnet_make"] = asm["_jsonnet_make"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _jsonnet_realloc = Module["_jsonnet_realloc"] = asm["_jsonnet_realloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _jsonnet_evaluate_snippet = Module["_jsonnet_evaluate_snippet"] = asm["_jsonnet_evaluate_snippet"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _jsonnet_destroy = Module["_jsonnet_destroy"] = asm["_jsonnet_destroy"];
var _strcpy = Module["_strcpy"] = asm["_strcpy"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var __GLOBAL__sub_I_parser_cpp = Module["__GLOBAL__sub_I_parser_cpp"] = asm["__GLOBAL__sub_I_parser_cpp"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiiiddiii = Module["dynCall_viiiiiddiii"] = asm["dynCall_viiiiiddiii"];
var dynCall_iid = Module["dynCall_iid"] = asm["dynCall_iid"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiid = Module["dynCall_viiid"] = asm["dynCall_viiid"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }
    var request = Module['memoryInitializerRequest'];
    if (request) {
      // a network request has already been created, just use that
      if (request.response) {
        setTimeout(function() {
          applyMemoryInitializer(request.response);
        }, 0); // it's already here; but, apply it asynchronously
      } else {
        request.addEventListener('load', function() { // wait for it
          if (request.status !== 200 && request.status !== 0) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status);
          }
          if (!request.response || typeof request.response !== 'object' || !request.response.byteLength) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): ' + request.response);
          }
          applyMemoryInitializer(request.response);
        });
      }
    } else {
      // fetch it from the network ourselves
      Browser.asyncLoad(memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  if (Module['noExitRuntime']) {
    return;
  }

  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  if (Module['onExit']) Module['onExit'](status);

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  abortDecorators.forEach(function(decorator) {
    output = decorator(output, what);
  });
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






